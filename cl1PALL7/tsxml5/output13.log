scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zrzebcnr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3185 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2150 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1035 (32%)
  Times precision was empty:       457 (14%)
  Times precision was {false}:     252 (8%)
  Times result was cached:         2108 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      368 (12%)
  Times result was 'false':        1292 (41%)
Number of strengthen sat checks:   0
Number of coverage checks:         4853
  BDD entailment checks:           975
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       86
Number of predicates discovered:          8
Number of abstraction locations:          13
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         7264
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 11.72
Number of irrelevant predicates:          2296 (32%)
Number of preds handled by boolean abs:   988 (14%)
  Total number of models for allsat:      361
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                  3.267s
  Time for path formula creation:        3.126s
Time for strengthen operator:            0.167s
Time for prec operator:                 15.595s
  Time for abstraction:                 15.359s (Max:     0.183s, Count: 3185)
    Boolean abstraction:                 9.203s
    Solving time:                       10.442s (Max:     0.169s)
    Model enumeration time:              0.502s
    Time for BDD construction:           0.087s (Max:     0.011s)
Time for merge operator:                 0.383s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):    10.945s

Number of path formula cache hits:   56852 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.727s

Total number of created targets for pointer analysis: 17230
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 177
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 1565
   Number of created targets for uf: *unsigned_long_int is 17


Number of BDD nodes:                               261
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         832 (count: 5263, min: 0, max: 98, avg: 0.16)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.520s
  Time for transition matches:                         0.169s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                        62569 (count: 62569, min: 1, max: 1, avg: 1.00) [1 x 62569]

CPA algorithm statistics
------------------------
Number of iterations:            41352
Max size of waitlist:            39
Average size of waitlist:        14
Number of computed successors:   45953
Max successors for one state:    2
Number of times merged:          1939
Number of times stopped:         2784
Number of times breaked:         42

Total time for CPA algorithm:        23.624s (Max:     1.754s)
  Time for choose from waitlist:      0.118s
  Time for precision adjustment:     16.315s
  Time for transfer relation:         5.571s
  Time for merge operator:            0.519s
  Time for stop operator:             0.185s
  Time for adding to reached set:     0.293s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   42
Avg. length of target path (in blocks):                 161 (count: 42, min: 1, max: 7, avg: 3.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.438s
  Counterexample analysis:                             1.105s (Max:     0.079s, Calls: 42)
    Refinement sat check:                              0.918s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.037s
  ARG update:                                          0.223s

Length of refined path (in blocks):                     153 (count: 42, min: 1, max: 7, avg: 3.64)
Number of affected states:                               95 (count: 42, min: 0, max: 6, avg: 2.26)
Length (states) of path with itp 'true':                 16 (count: 42, min: 0, max: 4, avg: 0.38)
Length (states) of path with itp non-trivial itp:        95 (count: 42, min: 0, max: 6, avg: 2.26)
Length (states) of path with itp 'false':                 6 (count: 42, min: 0, max: 1, avg: 0.14)
Different non-trivial interpolants along paths:           0 (count: 42, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              58 (count: 42, min: 0, max: 5, avg: 1.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                42
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 4426
Max. size of reached set after ref.:  2740
Avg. size of reached set before ref.: 1196.60
Avg. size of reached set after ref.:  301.24

Total time for CEGAR algorithm:      25.251s
Time for refinements:                 1.615s
Average time for refinement:          0.038s
Max time for refinement:              0.095s

Code Coverage
-----------------------------
  Function coverage:      0.514
  Visited lines:          1126
  Total lines:            1395
  Line coverage:          0.807
  Visited conditions:     200
  Total conditions:       312
  Condition coverage:     0.641

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             4272
  Number of reached locations:   585 (31%)
    Avg states per location:     7
    Max states per location:     78 (at node N1015)
  Number of reached functions:   37 (51%)
  Number of partitions:          4265
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [72c927f1], stack [main, pg_init, pg_init_units]])
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          5.014s
  Time for loading CPAs:          0.923s
  Time for loading parser:        0.755s
  Time for CFA construction:      3.175s
    Time for parsing file(s):     0.891s
    Time for AST to CFA:          1.201s
    Time for CFA sanity check:    0.170s
    Time for post-processing:     0.707s
      Time for var class.:        0.299s
Time for Analysis:               25.251s
CPU time for analysis:           25.260s
Total time for CPAchecker:       30.278s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.135s

Time for Garbage Collector:       0.401s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     44MB (    42 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8120MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
