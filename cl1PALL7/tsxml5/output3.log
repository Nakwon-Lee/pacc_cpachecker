scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_py08x6c0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3477 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2100 (60%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1377 (40%)
  Times precision was empty:       812 (23%)
  Times precision was {false}:     300 (9%)
  Times result was cached:         2083 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      282 (8%)
  Times result was 'false':        1452 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         5279
  BDD entailment checks:           1261
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       86
Number of predicates discovered:          7
Number of abstraction locations:          12
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         6961
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 11.96
Number of irrelevant predicates:          2045 (29%)
Number of preds handled by boolean abs:   905 (13%)
  Total number of models for allsat:      283
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.217s
  Time for path formula creation:        3.160s
Time for strengthen operator:            0.161s
Time for prec operator:                 15.399s
  Time for abstraction:                 15.167s (Max:     0.218s, Count: 3477)
    Boolean abstraction:                 8.595s
    Solving time:                       10.092s (Max:     0.205s)
    Model enumeration time:              0.461s
    Time for BDD construction:           0.032s (Max:     0.010s)
Time for merge operator:                 0.289s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):    10.553s

Number of path formula cache hits:   57367 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.745s

Total number of created targets for pointer analysis: 15764
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *signed_int is 501
   Number of created targets for uf: *char is 1793


Number of BDD nodes:                               247
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         632 (count: 5585, min: 0, max: 68, avg: 0.11)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.471s
Automaton transfers with branching:                0
Automaton transfer successors:                        64019 (count: 64019, min: 1, max: 1, avg: 1.00) [1 x 64019]

CPA algorithm statistics
------------------------
Number of iterations:            44352
Max size of waitlist:            15
Average size of waitlist:        10
Number of computed successors:   49342
Max successors for one state:    2
Number of times merged:          2009
Number of times stopped:         3177
Number of times breaked:         41

Total time for CPA algorithm:        22.965s (Max:     4.822s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:     16.114s
  Time for transfer relation:         5.269s
  Time for merge operator:            0.400s
  Time for stop operator:             0.195s
  Time for adding to reached set:     0.288s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                 212 (count: 41, min: 1, max: 10, avg: 5.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.246s
  Counterexample analysis:                             1.909s (Max:     0.175s, Calls: 41)
    Refinement sat check:                              1.692s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.045s
  ARG update:                                          0.201s

Length of refined path (in blocks):                     206 (count: 41, min: 1, max: 10, avg: 5.02)
Number of affected states:                              165 (count: 41, min: 0, max: 9, avg: 4.02)
Length (states) of path with itp 'true':                  0 (count: 41, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       165 (count: 41, min: 0, max: 9, avg: 4.02)
Length (states) of path with itp 'false':                 4 (count: 41, min: 0, max: 1, avg: 0.10)
Different non-trivial interpolants along paths:           0 (count: 41, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             128 (count: 41, min: 0, max: 8, avg: 3.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 6234
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 1141.12
Avg. size of reached set after ref.:  51.83

Total time for CEGAR algorithm:      25.371s
Time for refinements:                 2.403s
Average time for refinement:          0.058s
Max time for refinement:              0.193s

Code Coverage
-----------------------------
  Function coverage:      0.083
  Visited lines:          590
  Total lines:            1395
  Line coverage:          0.423
  Visited conditions:     12
  Total conditions:       312
  Condition coverage:     0.038

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             53
  Number of reached locations:   44 (2%)
    Avg states per location:     1
    Max states per location:     4 (at node N1015)
  Number of reached functions:   6 (8%)
  Number of partitions:          53
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.884s
  Time for loading CPAs:          0.948s
  Time for loading parser:        0.692s
  Time for CFA construction:      3.142s
    Time for parsing file(s):     0.895s
    Time for AST to CFA:          1.150s
    Time for CFA sanity check:    0.182s
    Time for post-processing:     0.708s
      Time for var class.:        0.320s
Time for Analysis:               25.371s
CPU time for analysis:           25.360s
Total time for CPAchecker:       30.259s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.086s

Time for Garbage Collector:       0.381s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     44MB (    42 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8121MB (  7745 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
