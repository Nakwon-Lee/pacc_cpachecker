scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r6zv5x0b/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3783 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2466 (65%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1317 (35%)
  Times precision was empty:       1135 (30%)
  Times precision was {false}:     287 (8%)
  Times result was cached:         2154 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      207 (5%)
  Times result was 'false':        1354 (36%)
Number of strengthen sat checks:   0
Number of coverage checks:         9654
  BDD entailment checks:           1596
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       86
Number of predicates discovered:          7
Number of abstraction locations:          11
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         6670
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 13.50
Number of irrelevant predicates:          1611 (24%)
Number of preds handled by boolean abs:   675 (10%)
  Total number of models for allsat:      215
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  3.606s
  Time for path formula creation:        3.513s
Time for strengthen operator:            0.209s
Time for prec operator:                 14.238s
  Time for abstraction:                 13.995s (Max:     0.229s, Count: 3783)
    Boolean abstraction:                 5.821s
    Solving time:                        8.208s (Max:     0.227s)
    Model enumeration time:              0.315s
    Time for BDD construction:           0.028s (Max:     0.012s)
Time for merge operator:                 0.471s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     8.524s

Number of path formula cache hits:   74239 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.022s

Total number of created targets for pointer analysis: 18886
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 319
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *char is 469


Number of BDD nodes:                               253
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         489 (count: 5722, min: 0, max: 97, avg: 0.09)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.448s
Automaton transfers with branching:                0
Automaton transfer successors:                        80426 (count: 80426, min: 1, max: 1, avg: 1.00) [1 x 80426]

CPA algorithm statistics
------------------------
Number of iterations:            55388
Max size of waitlist:            14
Average size of waitlist:        8
Number of computed successors:   62570
Max successors for one state:    2
Number of times merged:          4029
Number of times stopped:         5581
Number of times breaked:         35

Total time for CPA algorithm:        22.863s (Max:     3.096s)
  Time for choose from waitlist:      0.099s
  Time for precision adjustment:     15.002s
  Time for transfer relation:         5.972s
  Time for merge operator:            0.623s
  Time for stop operator:             0.192s
  Time for adding to reached set:     0.279s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                 190 (count: 35, min: 1, max: 10, avg: 5.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.064s
  Counterexample analysis:                             1.735s (Max:     0.133s, Calls: 35)
    Refinement sat check:                              1.535s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.019s
  ARG update:                                          0.237s

Length of refined path (in blocks):                     187 (count: 35, min: 1, max: 10, avg: 5.34)
Number of affected states:                              152 (count: 35, min: 0, max: 9, avg: 4.34)
Length (states) of path with itp 'true':                  0 (count: 35, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       152 (count: 35, min: 0, max: 9, avg: 4.34)
Length (states) of path with itp 'false':                 2 (count: 35, min: 0, max: 1, avg: 0.06)
Different non-trivial interpolants along paths:           0 (count: 35, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             121 (count: 35, min: 0, max: 8, avg: 3.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 5745
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 1433.54
Avg. size of reached set after ref.:  51.63

Total time for CEGAR algorithm:      25.088s
Time for refinements:                 2.222s
Average time for refinement:          0.063s
Max time for refinement:              0.149s

Code Coverage
-----------------------------
  Function coverage:      0.347
  Visited lines:          934
  Total lines:            1395
  Line coverage:          0.670
  Visited conditions:     114
  Total conditions:       312
  Condition coverage:     0.365

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             7268
  Number of reached locations:   367 (20%)
    Avg states per location:     19
    Max states per location:     168 (at node N117)
  Number of reached functions:   25 (35%)
  Number of partitions:          7266
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [548e76f1], stack [main, pg_init, pg_init_units]])
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          5.133s
  Time for loading CPAs:          1.011s
  Time for loading parser:        0.761s
  Time for CFA construction:      3.235s
    Time for parsing file(s):     0.939s
    Time for AST to CFA:          1.171s
    Time for CFA sanity check:    0.202s
    Time for post-processing:     0.719s
      Time for var class.:        0.301s
Time for Analysis:               25.088s
CPU time for analysis:           25.080s
Total time for CPAchecker:       30.228s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.261s

Time for Garbage Collector:       0.567s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     46MB (    44 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
