scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b07ujhua/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6997 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6473 (93%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         524 (7%)
  Times precision was empty:       4683 (67%)
  Times precision was {false}:     119 (2%)
  Times result was cached:         1992 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      203 (3%)
  Times result was 'false':        748 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         21797
  BDD entailment checks:           3635
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       401
Number of predicates discovered:          5
Number of abstraction locations:          9
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         7141
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 22.18
Number of irrelevant predicates:          2600 (36%)
Number of preds handled by boolean abs:   485 (7%)
  Total number of models for allsat:      200
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  5.447s
  Time for path formula creation:        5.108s
Time for strengthen operator:            0.506s
Time for prec operator:                  6.555s
  Time for abstraction:                  6.144s (Max:     0.294s, Count: 6997)
    Boolean abstraction:                 1.587s
    Solving time:                        2.542s (Max:     0.248s)
    Model enumeration time:              0.119s
    Time for BDD construction:           0.025s (Max:     0.007s)
Time for merge operator:                 0.454s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     2.661s

Number of path formula cache hits:   276473 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.882s

Total number of created targets for pointer analysis: 467
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *(struct_usb_device)* is 9
   Number of created targets for uf: *(struct_urb)* is 3
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(unsigned_char)* is 9
   Number of created targets for uf: *unsigned_int is 43
   Number of created targets for uf: *(struct_device)* is 9
   Number of created targets for uf: *char is 37
   Number of created targets for uf: *(struct_dlfb_data)* is 3
   Number of created targets for uf: *unsigned_long_int is 19


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         439 (count: 10375, min: 0, max: 45, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.996s
  Time for transition matches:                         0.435s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                       276830 (count: 276858, min: 0, max: 1, avg: 1.00) [0 x 28, 1 x 276830]

CPA algorithm statistics
------------------------
Number of iterations:            147014
Max size of waitlist:            35
Average size of waitlist:        17
Number of computed successors:   160673
Max successors for one state:    2
Number of times merged:          9081
Number of times stopped:         12209
Number of times breaked:         31

Total time for CPA algorithm:        22.601s (Max:     5.060s)
  Time for choose from waitlist:      0.243s
  Time for precision adjustment:      8.435s
  Time for transfer relation:        10.743s
  Time for merge operator:            0.802s
  Time for stop operator:             0.356s
  Time for adding to reached set:     0.666s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 181 (count: 31, min: 2, max: 14, avg: 5.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.575s
  Counterexample analysis:                             1.050s (Max:     0.115s, Calls: 31)
    Refinement sat check:                              0.911s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.015s
  ARG update:                                          0.448s

Length of refined path (in blocks):                     181 (count: 31, min: 2, max: 14, avg: 5.84)
Number of affected states:                              150 (count: 31, min: 1, max: 13, avg: 4.84)
Length (states) of path with itp 'true':                  0 (count: 31, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       150 (count: 31, min: 1, max: 13, avg: 4.84)
Length (states) of path with itp 'false':                 0 (count: 31, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 31, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             119 (count: 31, min: 0, max: 12, avg: 3.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 5860
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 4652.68
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:      24.392s
Time for refinements:                 1.789s
Average time for refinement:          0.057s
Max time for refinement:              0.153s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          1779
  Total lines:            2552
  Line coverage:          0.697
  Visited conditions:     279
  Total conditions:       504
  Condition coverage:     0.554

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             3700
  Number of reached locations:   936 (27%)
    Avg states per location:     3
    Max states per location:     86 (at node N267)
  Number of reached functions:   78 (58%)
  Number of partitions:          3698
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2431 (before line 6719), Function main called from node N2286, stack depth 1 [719843e5], stack [main]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          5.848s
  Time for loading CPAs:          0.993s
  Time for loading parser:        0.766s
  Time for CFA construction:      3.959s
    Time for parsing file(s):     1.040s
    Time for AST to CFA:          1.440s
    Time for CFA sanity check:    0.292s
    Time for post-processing:     0.974s
      Time for var class.:        0.485s
Time for Analysis:               24.392s
CPU time for analysis:           24.390s
Total time for CPAchecker:       30.246s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.156s

Time for Garbage Collector:       0.841s (in 70 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     49MB (    47 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
