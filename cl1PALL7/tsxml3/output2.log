scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5z3e5vfb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4521 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            4231 (94%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         290 (6%)
  Times precision was empty:       2109 (47%)
  Times precision was {false}:     118 (3%)
  Times result was cached:         2001 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      293 (6%)
  Times result was 'false':        452 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         18141
  BDD entailment checks:           1751
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       401
Number of predicates discovered:          8
Number of abstraction locations:          13
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         7933
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.30
Number of irrelevant predicates:          577 (7%)
Number of preds handled by boolean abs:   737 (9%)
  Total number of models for allsat:      282
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                  4.951s
  Time for path formula creation:        4.722s
Time for strengthen operator:            0.436s
Time for prec operator:                  7.668s
  Time for abstraction:                  7.280s (Max:     0.272s, Count: 4521)
    Boolean abstraction:                 2.480s
    Solving time:                        3.323s (Max:     0.216s)
    Model enumeration time:              0.206s
    Time for BDD construction:           0.048s (Max:     0.011s)
Time for merge operator:                 0.686s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     3.529s

Number of path formula cache hits:   196340 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.671s

Total number of created targets for pointer analysis: 841
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(char)* is 8
   Number of created targets for uf: *(struct_usb_device)* is 11
   Number of created targets for uf: *(struct_urb)* is 10
   Number of created targets for uf: *(struct_list_head)* is 11
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *unsigned_int is 61
   Number of created targets for uf: *(struct_device)* is 11
   Number of created targets for uf: *char is 33
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               222
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         604 (count: 6423, min: 0, max: 45, avg: 0.09)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.662s
  Time for transition matches:                         0.315s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       201784 (count: 201817, min: 0, max: 1, avg: 1.00) [0 x 33, 1 x 201784]

CPA algorithm statistics
------------------------
Number of iterations:            110501
Max size of waitlist:            65
Average size of waitlist:        27
Number of computed successors:   122394
Max successors for one state:    2
Number of times merged:          8195
Number of times stopped:         9833
Number of times breaked:         37

Total time for CPA algorithm:        21.383s (Max:     2.719s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:      9.103s
  Time for transfer relation:         9.223s
  Time for merge operator:            0.998s
  Time for stop operator:             0.336s
  Time for adding to reached set:     0.528s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                 269 (count: 37, min: 2, max: 14, avg: 7.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.356s
  Counterexample analysis:                             1.753s (Max:     0.156s, Calls: 37)
    Refinement sat check:                              1.524s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.035s
  ARG update:                                          0.449s

Length of refined path (in blocks):                     269 (count: 37, min: 2, max: 14, avg: 7.27)
Number of affected states:                              231 (count: 37, min: 1, max: 13, avg: 6.24)
Length (states) of path with itp 'true':                  1 (count: 37, min: 0, max: 1, avg: 0.03)
Length (states) of path with itp non-trivial itp:       231 (count: 37, min: 1, max: 13, avg: 6.24)
Length (states) of path with itp 'false':                 0 (count: 37, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 37, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             194 (count: 37, min: 0, max: 12, avg: 5.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 5705
Max. size of reached set after ref.:  5568
Avg. size of reached set before ref.: 3028.24
Avg. size of reached set after ref.:  157.30

Total time for CEGAR algorithm:      23.980s
Time for refinements:                 2.581s
Average time for refinement:          0.069s
Max time for refinement:              0.179s

Code Coverage
-----------------------------
  Function coverage:      0.630
  Visited lines:          1936
  Total lines:            2552
  Line coverage:          0.759
  Visited conditions:     339
  Total conditions:       504
  Condition coverage:     0.673

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             5884
  Number of reached locations:   1085 (31%)
    Avg states per location:     5
    Max states per location:     94 (at node N267)
  Number of reached functions:   85 (63%)
  Number of partitions:          5884
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          6.226s
  Time for loading CPAs:          1.023s
  Time for loading parser:        0.760s
  Time for CFA construction:      4.278s
    Time for parsing file(s):     1.147s
    Time for AST to CFA:          1.504s
    Time for CFA sanity check:    0.333s
    Time for post-processing:     1.076s
      Time for var class.:        0.501s
Time for Analysis:               23.980s
CPU time for analysis:           23.980s
Total time for CPAchecker:       30.225s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.230s

Time for Garbage Collector:       0.674s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     48MB (    46 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8119MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
