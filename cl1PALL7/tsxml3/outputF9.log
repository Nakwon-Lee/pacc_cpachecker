scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_36slika1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            44898 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            42850 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2048 (5%)
  Times precision was empty:       20714 (46%)
  Times precision was {false}:     461 (1%)
  Times result was cached:         22644 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1079 (2%)
  Times result was 'false':        5491 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         144467
  BDD entailment checks:           25527
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       401
Number of predicates discovered:          15
Number of abstraction locations:          20
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         85921
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 55.79
Number of irrelevant predicates:          44126 (51%)
Number of preds handled by boolean abs:   2942 (3%)
  Total number of models for allsat:      1143
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                 16.065s
  Time for path formula creation:       15.135s
Time for strengthen operator:            1.593s
Time for prec operator:                 49.789s
  Time for abstraction:                 48.381s (Max:     1.533s, Count: 44898)
    Boolean abstraction:                20.335s
    Solving time:                       24.633s (Max:     1.389s)
    Model enumeration time:              1.519s
    Time for BDD construction:           0.080s (Max:     0.009s)
Time for merge operator:                 1.370s
Time for coverage check:                 0.124s
  Time for BDD entailment checks:        0.110s
Total time for SMT solver (w/o itp):    26.152s

Number of path formula cache hits:   1722099 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.396s

Total number of created targets for pointer analysis: 9255
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(char)* is 44
   Number of created targets for uf: *(struct_usb_device)* is 20
   Number of created targets for uf: *(struct_urb)* is 61
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(unsigned_char)* is 61
   Number of created targets for uf: *unsigned_int is 13
   Number of created targets for uf: *char is 1117
   Number of created targets for uf: *(struct_device)* is 20
   Number of created targets for uf: *(struct_dlfb_data)* is 3
   Number of created targets for uf: *unsigned_long_int is 7


Number of BDD nodes:                               710
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2757 (count: 57339, min: 0, max: 333, avg: 0.05)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.961s
  Time for transition matches:                         1.560s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      1699171 (count: 1699229, min: 0, max: 1, avg: 1.00) [0 x 58, 1 x 1699171]

CPA algorithm statistics
------------------------
Number of iterations:            894395
Max size of waitlist:            38
Average size of waitlist:        15
Number of computed successors:   982639
Max successors for one state:    2
Number of times merged:          59470
Number of times stopped:         80667
Number of times breaked:         220

Total time for CPA algorithm:       101.619s (Max:     4.035s)
  Time for choose from waitlist:      0.404s
  Time for precision adjustment:     57.396s
  Time for transfer relation:        34.837s
  Time for merge operator:            2.364s
  Time for stop operator:             1.477s
  Time for adding to reached set:     2.109s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   220
Avg. length of target path (in blocks):                1095 (count: 220, min: 2, max: 18, avg: 4.98)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.040s
  Counterexample analysis:                             5.076s (Max:     0.173s, Calls: 220)
    Refinement sat check:                              4.294s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.083s
  ARG update:                                          1.682s

Length of refined path (in blocks):                    1077 (count: 220, min: 2, max: 18, avg: 4.90)
Number of affected states:                              681 (count: 220, min: 1, max: 17, avg: 3.10)
Length (states) of path with itp 'true':                176 (count: 220, min: 0, max: 10, avg: 0.80)
Length (states) of path with itp non-trivial itp:       681 (count: 220, min: 1, max: 17, avg: 3.10)
Length (states) of path with itp 'false':                 5 (count: 220, min: 0, max: 1, avg: 0.02)
Different non-trivial interpolants along paths:          10 (count: 220, min: 0, max: 2, avg: 0.05)
Equal non-trivial interpolants along paths:             451 (count: 220, min: 0, max: 16, avg: 2.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                220
Number of successful refinements:     220
Number of failed refinements:         0
Max. size of reached set before ref.: 20265
Max. size of reached set after ref.:  15331
Avg. size of reached set before ref.: 9625.33
Avg. size of reached set after ref.:  5598.32

Total time for CEGAR algorithm:     111.207s
Time for refinements:                 8.691s
Average time for refinement:          0.039s
Max time for refinement:              0.239s

Code Coverage
-----------------------------
  Function coverage:      0.652
  Visited lines:          2111
  Total lines:            2552
  Line coverage:          0.827
  Visited conditions:     375
  Total conditions:       504
  Condition coverage:     0.744

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             10541
  Number of reached locations:   1216 (35%)
    Avg states per location:     8
    Max states per location:     214 (at node N267)
  Number of reached functions:   88 (65%)
  Number of partitions:          10535
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1501 (before line 5679), Function dlfb_setup_modes called from node N1739, stack depth 3 [1aed6ae7], stack [main, edid_store, dlfb_setup_modes]])
  Number of target states:       0

Time for analysis setup:          6.177s
  Time for loading CPAs:          1.025s
  Time for loading parser:        0.797s
  Time for CFA construction:      4.181s
    Time for parsing file(s):     1.079s
    Time for AST to CFA:          1.401s
    Time for CFA sanity check:    0.343s
    Time for post-processing:     1.151s
      Time for var class.:        0.571s
Time for Analysis:              111.207s
CPU time for analysis:          111.200s
Time for analyzing result:        0.009s
Total time for CPAchecker:      117.389s
Total CPU time for CPAchecker:  117.370s
Time for statistics:              0.284s

Time for Garbage Collector:       6.085s (in 445 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     77MB (    74 MiB) avg;    135MB (   129 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           143MB (   137 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8128MB (  7752 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
