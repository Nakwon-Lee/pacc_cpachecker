scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m0qwor3s/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1106 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            949 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         157 (14%)
  Times precision was empty:       496 (45%)
  Times precision was {false}:     128 (12%)
  Times result was cached:         245 (22%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      237 (21%)
  Times result was 'false':        387 (35%)
Number of strengthen sat checks:   0
Number of coverage checks:         6884
  BDD entailment checks:           156
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       342
Number of predicates discovered:          15
Number of abstraction locations:          8
Max number of predicates per location:    14
Avg number of predicates per location:    5
Total predicates per abstraction:         2807
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 7.69
Number of irrelevant predicates:          495 (18%)
Number of preds handled by boolean abs:   1256 (45%)
  Total number of models for allsat:      396
  Max number of models for allsat:        10
  Avg number of models for allsat:        1.67

Time for post operator:                  4.946s
  Time for path formula creation:        4.778s
Time for strengthen operator:            0.157s
Time for prec operator:                 11.815s
  Time for abstraction:                 11.639s (Max:     1.722s, Count: 1106)
    Boolean abstraction:                 2.888s
    Solving time:                        9.020s (Max:     1.708s)
    Model enumeration time:              0.306s
    Time for BDD construction:           0.105s (Max:     0.022s)
Time for merge operator:                 0.629s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     9.326s

Number of path formula cache hits:   63236 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.325s

Total number of created targets for pointer analysis: 3925
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(struct_usb_device)* is 9
   Number of created targets for uf: *(struct_list_head)* is 9
   Number of created targets for uf: *unsigned_int is 49
   Number of created targets for uf: *char is 717
   Number of created targets for uf: *(struct_device)* is 9
   Number of created targets for uf: *unsigned_long_int is 9


Number of BDD nodes:                               1481
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1499 (count: 3309, min: 0, max: 265, avg: 0.45)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.470s
Automaton transfers with branching:                0
Automaton transfer successors:                        75520 (count: 75527, min: 0, max: 1, avg: 1.00) [0 x 7, 1 x 75520]

CPA algorithm statistics
------------------------
Number of iterations:            37698
Max size of waitlist:            83
Average size of waitlist:        38
Number of computed successors:   42273
Max successors for one state:    2
Number of times merged:          3364
Number of times stopped:         3451
Number of times breaked:         20

Total time for CPA algorithm:        21.799s (Max:     3.573s)
  Time for choose from waitlist:      0.121s
  Time for precision adjustment:     12.618s
  Time for transfer relation:         7.197s
  Time for merge operator:            0.815s
  Time for stop operator:             0.233s
  Time for adding to reached set:     0.268s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 150 (count: 20, min: 2, max: 21, avg: 7.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.514s
  Counterexample analysis:                             1.254s (Max:     0.331s, Calls: 20)
    Refinement sat check:                              1.117s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.052s
  Precision update:                                    0.034s
  ARG update:                                          0.144s

Length of refined path (in blocks):                     131 (count: 20, min: 2, max: 21, avg: 6.55)
Number of affected states:                               97 (count: 20, min: 1, max: 20, avg: 4.85)
Length (states) of path with itp 'true':                 14 (count: 20, min: 0, max: 3, avg: 0.70)
Length (states) of path with itp non-trivial itp:        97 (count: 20, min: 1, max: 20, avg: 4.85)
Length (states) of path with itp 'false':                 5 (count: 20, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           7 (count: 20, min: 0, max: 3, avg: 0.35)
Equal non-trivial interpolants along paths:              70 (count: 20, min: 0, max: 19, avg: 3.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 4741
Max. size of reached set after ref.:  2161
Avg. size of reached set before ref.: 2594.00
Avg. size of reached set after ref.:  860.40

Total time for CEGAR algorithm:      23.505s
Time for refinements:                 1.672s
Average time for refinement:          0.083s
Max time for refinement:              0.355s

Code Coverage
-----------------------------
  Function coverage:      0.556
  Visited lines:          1658
  Total lines:            2552
  Line coverage:          0.650
  Visited conditions:     287
  Total conditions:       504
  Condition coverage:     0.569

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             3763
  Number of reached locations:   880 (25%)
    Avg states per location:     4
    Max states per location:     91 (at node N267)
  Number of reached functions:   75 (56%)
  Number of partitions:          3760
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1501 (before line 5679), Function dlfb_setup_modes called from node N1739, stack depth 3 [7d03699c], stack [main, edid_store, dlfb_setup_modes]])
  Number of target states:       0
  Size of final wait list        42

Time for analysis setup:          6.219s
  Time for loading CPAs:          1.038s
  Time for loading parser:        0.839s
  Time for CFA construction:      4.152s
    Time for parsing file(s):     1.054s
    Time for AST to CFA:          1.499s
    Time for CFA sanity check:    0.319s
    Time for post-processing:     1.073s
      Time for var class.:        0.484s
Time for Analysis:               23.505s
CPU time for analysis:           23.510s
Total time for CPAchecker:       29.733s
Total CPU time for CPAchecker:   29.720s
Time for statistics:              0.164s

Time for Garbage Collector:       0.483s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     47MB (    45 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8118MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
