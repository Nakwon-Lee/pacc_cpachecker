scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers-simplified/kbfiltr_simpl1_true-unreach-call_true-valid-memsafety_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w1ntuct6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            848 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  817 (96%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (4%)
  Times precision was empty:       406 (48%)
  Times precision was {false}:     64 (8%)
  Times result was cached:         303 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      75 (9%)
  Times result was 'false':        179 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         1816
  BDD entailment checks:           68
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          11
Number of abstraction locations:          21
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         748
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 5.38
Number of irrelevant predicates:          257 (34%)
Number of preds handled by boolean abs:   175 (23%)
  Total number of models for allsat:      100
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.33

Time for post operator:                  0.309s
  Time for path formula creation:        0.298s
Time for strengthen operator:            0.048s
Time for prec operator:                  0.607s
  Time for abstraction:                  0.533s (Max:     0.013s, Count: 848)
    Boolean abstraction:                 0.107s
    Solving time:                        0.079s (Max:     0.009s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.014s (Max:     0.005s)
Time for merge operator:                 0.008s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.083s

Number of path formula cache hits:   10974 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.242s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               289
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         165 (count: 1372, min: 0, max: 110, avg: 0.12)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.124s
Automaton transfers with branching:                0
Automaton transfer successors:                        10314 (count: 10314, min: 1, max: 1, avg: 1.00) [1 x 10314]

CPA algorithm statistics
------------------------
Number of iterations:            6202
Max size of waitlist:            22
Average size of waitlist:        8
Number of computed successors:   7420
Max successors for one state:    2
Number of times merged:          874
Number of times stopped:         939
Number of times breaked:         31

Total time for CPA algorithm:         1.803s (Max:     0.423s)
  Time for choose from waitlist:      0.027s
  Time for precision adjustment:      0.784s
  Time for transfer relation:         0.762s
  Time for merge operator:            0.061s
  Time for stop operator:             0.045s
  Time for adding to reached set:     0.025s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 293 (count: 31, min: 4, max: 20, avg: 9.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.387s
  Counterexample analysis:                             0.273s (Max:     0.025s, Calls: 31)
    Refinement sat check:                              0.154s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.016s
  ARG update:                                          0.047s

Length of refined path (in blocks):                     258 (count: 31, min: 3, max: 19, avg: 8.32)
Number of affected states:                              110 (count: 31, min: 1, max: 15, avg: 3.55)
Length (states) of path with itp 'true':                117 (count: 31, min: 1, max: 5, avg: 3.77)
Length (states) of path with itp non-trivial itp:       110 (count: 31, min: 1, max: 15, avg: 3.55)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 31, min: 0, max: 5, avg: 0.32)
Equal non-trivial interpolants along paths:              69 (count: 31, min: 0, max: 14, avg: 2.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 420
Max. size of reached set after ref.:  269
Avg. size of reached set before ref.: 326.97
Avg. size of reached set after ref.:  135.97

Total time for CEGAR algorithm:       2.263s
Time for refinements:                 0.445s
Average time for refinement:          0.014s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.909
  Visited lines:          271
  Total lines:            283
  Line coverage:          0.958
  Visited conditions:     82
  Total conditions:       82
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     391
Number of CFA edges:             443
Number of relevant variables:    29
Number of functions:             11
Number of loops:                 0
Size of reached set:             382
  Number of reached locations:   198 (51%)
    Avg states per location:     1
    Max states per location:     5 (at node N367)
  Number of reached functions:   10 (91%)
  Number of partitions:          382
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.084s
  Time for loading CPAs:          0.602s
  Time for loading parser:        0.487s
  Time for CFA construction:      0.880s
    Time for parsing file(s):     0.304s
    Time for AST to CFA:          0.214s
    Time for CFA sanity check:    0.065s
    Time for post-processing:     0.177s
      Time for var class.:        0.108s
Time for Analysis:                2.263s
CPU time for analysis:            2.260s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.350s
Total CPU time for CPAchecker:    4.340s
Time for statistics:              0.075s

Time for Garbage Collector:       0.082s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     32MB (    30 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8036MB (  7664 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
