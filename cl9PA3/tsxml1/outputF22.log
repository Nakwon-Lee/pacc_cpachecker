scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers-simplified/kbfiltr_simpl1_true-unreach-call_true-valid-memsafety_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kg516yk0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1027 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  985 (96%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (4%)
  Times precision was empty:       474 (46%)
  Times precision was {false}:     75 (7%)
  Times result was cached:         379 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      99 (10%)
  Times result was 'false':        211 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         2401
  BDD entailment checks:           101
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          12
Number of abstraction locations:          21
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         1044
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 6.00
Number of irrelevant predicates:          342 (33%)
Number of preds handled by boolean abs:   239 (23%)
  Total number of models for allsat:      130
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.31

Time for post operator:                  0.322s
  Time for path formula creation:        0.312s
Time for strengthen operator:            0.027s
Time for prec operator:                  0.738s
  Time for abstraction:                  0.640s (Max:     0.014s, Count: 1027)
    Boolean abstraction:                 0.153s
    Solving time:                        0.109s (Max:     0.013s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.007s (Max:     0.001s)
Time for merge operator:                 0.024s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.127s

Number of path formula cache hits:   13259 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.247s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               287
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         434 (count: 1710, min: 0, max: 249, avg: 0.25)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.072s
Automaton transfers with branching:                0
Automaton transfer successors:                        12390 (count: 12390, min: 1, max: 1, avg: 1.00) [1 x 12390]

CPA algorithm statistics
------------------------
Number of iterations:            7645
Max size of waitlist:            23
Average size of waitlist:        8
Number of computed successors:   9185
Max successors for one state:    2
Number of times merged:          1150
Number of times stopped:         1243
Number of times breaked:         42

Total time for CPA algorithm:         2.068s (Max:     0.383s)
  Time for choose from waitlist:      0.028s
  Time for precision adjustment:      0.885s
  Time for transfer relation:         0.819s
  Time for merge operator:            0.099s
  Time for stop operator:             0.044s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   42
Avg. length of target path (in blocks):                 406 (count: 42, min: 4, max: 20, avg: 9.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.481s
  Counterexample analysis:                             0.331s (Max:     0.021s, Calls: 42)
    Refinement sat check:                              0.160s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.029s
  ARG update:                                          0.057s

Length of refined path (in blocks):                     355 (count: 42, min: 3, max: 19, avg: 8.45)
Number of affected states:                              134 (count: 42, min: 1, max: 15, avg: 3.19)
Length (states) of path with itp 'true':                179 (count: 42, min: 1, max: 11, avg: 4.26)
Length (states) of path with itp non-trivial itp:       134 (count: 42, min: 1, max: 15, avg: 3.19)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 42, min: 0, max: 5, avg: 0.29)
Equal non-trivial interpolants along paths:              80 (count: 42, min: 0, max: 14, avg: 1.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                42
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 424
Max. size of reached set after ref.:  293
Avg. size of reached set before ref.: 349.02
Avg. size of reached set after ref.:  174.02

Total time for CEGAR algorithm:       2.643s
Time for refinements:                 0.555s
Average time for refinement:          0.013s
Max time for refinement:              0.056s

Code Coverage
-----------------------------
  Function coverage:      0.909
  Visited lines:          271
  Total lines:            283
  Line coverage:          0.958
  Visited conditions:     82
  Total conditions:       82
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     391
Number of CFA edges:             443
Number of relevant variables:    29
Number of functions:             11
Number of loops:                 0
Size of reached set:             382
  Number of reached locations:   198 (51%)
    Avg states per location:     1
    Max states per location:     5 (at node N367)
  Number of reached functions:   10 (91%)
  Number of partitions:          382
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.012s
  Time for loading CPAs:          0.567s
  Time for loading parser:        0.489s
  Time for CFA construction:      0.882s
    Time for parsing file(s):     0.325s
    Time for AST to CFA:          0.220s
    Time for CFA sanity check:    0.056s
    Time for post-processing:     0.148s
      Time for var class.:        0.087s
Time for Analysis:                2.644s
CPU time for analysis:            2.640s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.658s
Total CPU time for CPAchecker:    4.650s
Time for statistics:              0.052s

Time for Garbage Collector:       0.087s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8040MB (  7667 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
