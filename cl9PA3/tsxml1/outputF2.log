scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers-simplified/kbfiltr_simpl1_true-unreach-call_true-valid-memsafety_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j3fbnadc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            914 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  878 (96%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (4%)
  Times precision was empty:       268 (29%)
  Times precision was {false}:     88 (10%)
  Times result was cached:         425 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      133 (15%)
  Times result was 'false':        160 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         2185
  BDD entailment checks:           101
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          13
Number of abstraction locations:          21
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         1136
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 5.14
Number of irrelevant predicates:          307 (27%)
Number of preds handled by boolean abs:   352 (31%)
  Total number of models for allsat:      168
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.26

Time for post operator:                  0.372s
  Time for path formula creation:        0.326s
Time for strengthen operator:            0.065s
Time for prec operator:                  0.829s
  Time for abstraction:                  0.774s (Max:     0.018s, Count: 914)
    Boolean abstraction:                 0.201s
    Solving time:                        0.201s (Max:     0.016s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.014s (Max:     0.004s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.221s

Number of path formula cache hits:   11717 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.299s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               344
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         358 (count: 1810, min: 0, max: 268, avg: 0.20)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.079s
Automaton transfers with branching:                0
Automaton transfer successors:                        10946 (count: 10946, min: 1, max: 1, avg: 1.00) [1 x 10946]

CPA algorithm statistics
------------------------
Number of iterations:            6808
Max size of waitlist:            22
Average size of waitlist:        8
Number of computed successors:   8199
Max successors for one state:    2
Number of times merged:          1042
Number of times stopped:         1137
Number of times breaked:         36

Total time for CPA algorithm:         2.113s (Max:     0.462s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      0.977s
  Time for transfer relation:         0.824s
  Time for merge operator:            0.121s
  Time for stop operator:             0.049s
  Time for adding to reached set:     0.038s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 350 (count: 36, min: 4, max: 18, avg: 9.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.380s
  Counterexample analysis:                             0.257s (Max:     0.019s, Calls: 36)
    Refinement sat check:                              0.143s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.028s
  ARG update:                                          0.045s

Length of refined path (in blocks):                     310 (count: 36, min: 3, max: 17, avg: 8.61)
Number of affected states:                              121 (count: 36, min: 1, max: 15, avg: 3.36)
Length (states) of path with itp 'true':                153 (count: 36, min: 1, max: 11, avg: 4.25)
Length (states) of path with itp non-trivial itp:       121 (count: 36, min: 1, max: 15, avg: 3.36)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 36, min: 0, max: 5, avg: 0.36)
Equal non-trivial interpolants along paths:              72 (count: 36, min: 0, max: 12, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 443
Max. size of reached set after ref.:  294
Avg. size of reached set before ref.: 345.94
Avg. size of reached set after ref.:  164.81

Total time for CEGAR algorithm:       2.586s
Time for refinements:                 0.456s
Average time for refinement:          0.012s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.909
  Visited lines:          271
  Total lines:            283
  Line coverage:          0.958
  Visited conditions:     82
  Total conditions:       82
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     391
Number of CFA edges:             443
Number of relevant variables:    29
Number of functions:             11
Number of loops:                 0
Size of reached set:             382
  Number of reached locations:   198 (51%)
    Avg states per location:     1
    Max states per location:     5 (at node N367)
  Number of reached functions:   10 (91%)
  Number of partitions:          382
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.086s
  Time for loading CPAs:          0.575s
  Time for loading parser:        0.503s
  Time for CFA construction:      0.923s
    Time for parsing file(s):     0.343s
    Time for AST to CFA:          0.199s
    Time for CFA sanity check:    0.047s
    Time for post-processing:     0.202s
      Time for var class.:        0.119s
Time for Analysis:                2.586s
CPU time for analysis:            2.590s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.675s
Total CPU time for CPAchecker:    4.670s
Time for statistics:              0.063s

Time for Garbage Collector:       0.101s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8040MB (  7668 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
