scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product21_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0vhdc4fm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1030: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1382: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1421: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1511: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1553: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2242: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3366: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            28 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (82%)
  Times precision was empty:       10 (36%)
  Times precision was {false}:     14 (50%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (14%)
  Times result was 'false':        14 (50%)
Number of strengthen sat checks:   0
Number of coverage checks:         24884
  BDD entailment checks:           6
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3573
Number of predicates discovered:          9
Number of abstraction locations:          2
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         46
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 2.56
Number of irrelevant predicates:          14 (30%)
Number of preds handled by boolean abs:   32 (70%)
  Total number of models for allsat:      29
  Max number of models for allsat:        10
  Avg number of models for allsat:        7.25

Time for post operator:                  2.627s
  Time for path formula creation:        2.542s
Time for strengthen operator:            0.113s
Time for prec operator:                  8.821s
  Time for abstraction:                  8.708s (Max:     2.847s, Count: 28)
    Boolean abstraction:                 4.337s
    Solving time:                        5.183s (Max:     1.503s)
    Model enumeration time:              2.384s
    Time for BDD construction:           0.005s (Max:     0.002s)
Time for merge operator:                 0.759s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     7.567s

Number of path formula cache hits:   9058 (15%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.489s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               451
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         143 (count: 189, min: 0, max: 67, avg: 0.76)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.300s
Automaton transfers with branching:                0
Automaton transfer successors:                        59776 (count: 59776, min: 1, max: 1, avg: 1.00) [1 x 59776]

CPA algorithm statistics
------------------------
Number of iterations:            44143
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   56600
Max successors for one state:    2
Number of times merged:          12439
Number of times stopped:         12440
Number of times breaked:         9

Total time for CPA algorithm:        15.725s (Max:     7.427s)
  Time for choose from waitlist:      0.050s
  Time for precision adjustment:      9.375s
  Time for transfer relation:         4.154s
  Time for merge operator:            1.285s
  Time for stop operator:             0.149s
  Time for adding to reached set:     0.164s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.470s
  Counterexample analysis:                             5.263s (Max:     2.225s, Calls: 9)
    Refinement sat check:                              4.887s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.003s
  ARG update:                                          0.042s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 27465
Max. size of reached set after ref.:  21921
Avg. size of reached set before ref.: 15234.11
Avg. size of reached set after ref.:  14617.22

Total time for CEGAR algorithm:      22.281s
Time for refinements:                 6.446s
Average time for refinement:          0.716s
Max time for refinement:              2.773s

Code Coverage
-----------------------------
  Function coverage:      0.648
  Visited lines:          1105
  Total lines:            1726
  Line coverage:          0.640
  Visited conditions:     608
  Total conditions:       754
  Condition coverage:     0.806

CPAchecker general statistics
-----------------------------
Number of program locations:     2254
Number of CFA edges:             2755
Number of relevant variables:    308
Number of functions:             71
Number of loops:                 9
Size of reached set:             38595
  Number of reached locations:   1191 (53%)
    Avg states per location:     32
    Max states per location:     442 (at node N1670)
  Number of reached functions:   46 (65%)
  Number of partitions:          38593
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N106 (before lines 188-216), Function cleanup called from node N2215, stack depth 4 [1c41931a], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.647s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.452s
  Time for CFA construction:      1.504s
    Time for parsing file(s):     0.454s
    Time for AST to CFA:          0.432s
    Time for CFA sanity check:    0.161s
    Time for post-processing:     0.316s
      Time for var class.:        0.166s
Time for Analysis:               22.282s
CPU time for analysis:           22.280s
Time for analyzing result:        0.028s
Total time for CPAchecker:       24.937s
Total CPU time for CPAchecker:   24.930s
Time for statistics:              0.443s

Time for Garbage Collector:       1.005s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                138MB (   131 MiB) max;     76MB (    72 MiB) avg;    155MB (   147 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           192MB (   183 MiB) max;    153MB (   146 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8207MB (  7827 MiB) max;   8123MB (  7747 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
