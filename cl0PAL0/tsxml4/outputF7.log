scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nibcq81q/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 321: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 799: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1841: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2167: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            182 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            46 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         136 (75%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     135 (74%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44 (24%)
  Times result was 'false':        125 (69%)
Number of strengthen sat checks:   0
Number of coverage checks:         75362
  BDD entailment checks:           68
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       982
Number of predicates discovered:          91
Number of abstraction locations:          2
Max number of predicates per location:    90
Avg number of predicates per location:    45
Total predicates per abstraction:         2209
Max number of predicates per abstraction: 90
Avg number of predicates per abstraction: 12.34
Number of irrelevant predicates:          135 (6%)
Number of preds handled by boolean abs:   2074 (94%)
  Total number of models for allsat:      2386
  Max number of models for allsat:        792
  Avg number of models for allsat:        54.23

Time for post operator:                  1.818s
  Time for path formula creation:        1.714s
Time for strengthen operator:            0.253s
Time for prec operator:                 22.241s
  Time for abstraction:                 22.053s (Max:     4.355s, Count: 182)
    Boolean abstraction:                20.075s
    Solving time:                        6.801s (Max:     0.309s)
    Model enumeration time:             12.917s
    Time for BDD construction:           0.514s (Max:     0.097s)
Time for merge operator:                 0.565s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):    19.718s

Number of path formula cache hits:   182089 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.573s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               157501
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       31630 (count: 13941, min: 0, max: 3977, avg: 2.27)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.058s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.346s
Automaton transfers with branching:                0
Automaton transfer successors:                       183611 (count: 183611, min: 1, max: 1, avg: 1.00) [1 x 183611]

CPA algorithm statistics
------------------------
Number of iterations:            137250
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   175045
Max successors for one state:    2
Number of times merged:          37647
Number of times stopped:         37649
Number of times breaked:         12

Total time for CPA algorithm:        29.653s (Max:     6.595s)
  Time for choose from waitlist:      0.112s
  Time for precision adjustment:     23.273s
  Time for transfer relation:         4.096s
  Time for merge operator:            1.143s
  Time for stop operator:             0.262s
  Time for adding to reached set:     0.251s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  40 (count: 12, min: 2, max: 6, avg: 3.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.797s
  Counterexample analysis:                             6.349s (Max:     1.319s, Calls: 12)
    Refinement sat check:                              5.584s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.012s
  ARG update:                                          0.301s

Length of refined path (in blocks):                      40 (count: 12, min: 2, max: 6, avg: 3.33)
Number of affected states:                               28 (count: 12, min: 1, max: 5, avg: 2.33)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        28 (count: 12, min: 1, max: 5, avg: 2.33)
Length (states) of path with itp 'false':                 0 (count: 12, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          16 (count: 12, min: 0, max: 4, avg: 1.33)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 24233
Max. size of reached set after ref.:  4039
Avg. size of reached set before ref.: 13456.75
Avg. size of reached set after ref.:  4039.00

Total time for CEGAR algorithm:      37.198s
Time for refinements:                 7.482s
Average time for refinement:          0.623s
Max time for refinement:              1.445s

Code Coverage
-----------------------------
  Function coverage:      0.611
  Visited lines:          1014
  Total lines:            1687
  Line coverage:          0.601
  Visited conditions:     600
  Total conditions:       744
  Condition coverage:     0.806

CPAchecker general statistics
-----------------------------
Number of program locations:     2216
Number of CFA edges:             2697
Number of relevant variables:    283
Number of functions:             72
Number of loops:                 9
Size of reached set:             24259
  Number of reached locations:   1152 (52%)
    Avg states per location:     21
    Max states per location:     151 (at node N901)
  Number of reached functions:   44 (61%)
  Number of partitions:          24255
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N718 (before lines 947-975), Function cleanup called from node N309, stack depth 4 [433ffad1], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.872s
  Time for loading CPAs:          0.572s
  Time for loading parser:        0.491s
  Time for CFA construction:      1.642s
    Time for parsing file(s):     0.459s
    Time for AST to CFA:          0.463s
    Time for CFA sanity check:    0.179s
    Time for post-processing:     0.400s
      Time for var class.:        0.222s
Time for Analysis:               37.198s
CPU time for analysis:           37.190s
Time for analyzing result:        0.017s
Total time for CPAchecker:       40.073s
Total CPU time for CPAchecker:   40.060s
Time for statistics:              0.347s

Time for Garbage Collector:       1.024s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                129MB (   123 MiB) max;     69MB (    66 MiB) avg;    135MB (   129 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           135MB (   129 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8202MB (  7822 MiB) max;   8157MB (  7779 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
