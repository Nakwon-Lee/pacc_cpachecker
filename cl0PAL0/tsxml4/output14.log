scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9qvpgip0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 321: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 799: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1841: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2167: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            99 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            29 (29%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70 (71%)
  Times precision was empty:       3 (3%)
  Times precision was {false}:     69 (70%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27 (27%)
  Times result was 'false':        61 (62%)
Number of strengthen sat checks:   0
Number of coverage checks:         44327
  BDD entailment checks:           29
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       982
Number of predicates discovered:          51
Number of abstraction locations:          2
Max number of predicates per location:    50
Avg number of predicates per location:    25
Total predicates per abstraction:         785
Max number of predicates per abstraction: 50
Avg number of predicates per abstraction: 8.18
Number of irrelevant predicates:          69 (9%)
Number of preds handled by boolean abs:   716 (91%)
  Total number of models for allsat:      1418
  Max number of models for allsat:        792
  Avg number of models for allsat:        52.52

Time for post operator:                  1.926s
  Time for path formula creation:        1.813s
Time for strengthen operator:            0.130s
Time for prec operator:                 16.566s
  Time for abstraction:                 16.366s (Max:     4.444s, Count: 99)
    Boolean abstraction:                15.112s
    Solving time:                        4.382s (Max:     0.316s)
    Model enumeration time:             10.641s
    Time for BDD construction:           0.269s (Max:     0.073s)
Time for merge operator:                 0.518s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):    15.024s

Number of path formula cache hits:   97506 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.672s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               215360
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13851 (count: 6219, min: 0, max: 2906, avg: 2.23)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.347s
Automaton transfers with branching:                0
Automaton transfer successors:                       107988 (count: 107988, min: 1, max: 1, avg: 1.00) [1 x 107988]

CPA algorithm statistics
------------------------
Number of iterations:            80665
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   102894
Max successors for one state:    2
Number of times merged:          22149
Number of times stopped:         22151
Number of times breaked:         9

Total time for CPA algorithm:        22.808s (Max:     6.786s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:     17.315s
  Time for transfer relation:         3.531s
  Time for merge operator:            0.920s
  Time for stop operator:             0.216s
  Time for adding to reached set:     0.221s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  24 (count: 9, min: 2, max: 4, avg: 2.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.810s
  Counterexample analysis:                             3.511s (Max:     0.887s, Calls: 9)
    Refinement sat check:                              3.102s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.001s
  ARG update:                                          0.199s

Length of refined path (in blocks):                      24 (count: 9, min: 2, max: 4, avg: 2.67)
Number of affected states:                               15 (count: 9, min: 1, max: 3, avg: 1.67)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        15 (count: 9, min: 1, max: 3, avg: 1.67)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           6 (count: 9, min: 0, max: 2, avg: 0.67)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 16160
Max. size of reached set after ref.:  4039
Avg. size of reached set before ref.: 10761.67
Avg. size of reached set after ref.:  4039.00

Total time for CEGAR algorithm:      27.012s
Time for refinements:                 4.170s
Average time for refinement:          0.463s
Max time for refinement:              0.960s

Code Coverage
-----------------------------
  Function coverage:      0.611
  Visited lines:          1014
  Total lines:            1687
  Line coverage:          0.601
  Visited conditions:     600
  Total conditions:       744
  Condition coverage:     0.806

CPAchecker general statistics
-----------------------------
Number of program locations:     2216
Number of CFA edges:             2697
Number of relevant variables:    283
Number of functions:             72
Number of loops:                 9
Size of reached set:             20178
  Number of reached locations:   1152 (52%)
    Avg states per location:     17
    Max states per location:     125 (at node N901)
  Number of reached functions:   44 (61%)
  Number of partitions:          20175
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N718 (before lines 947-975), Function cleanup called from node N309, stack depth 4 [433ffad1], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          2.799s
  Time for loading CPAs:          0.550s
  Time for loading parser:        0.492s
  Time for CFA construction:      1.607s
    Time for parsing file(s):     0.470s
    Time for AST to CFA:          0.492s
    Time for CFA sanity check:    0.177s
    Time for post-processing:     0.345s
      Time for var class.:        0.189s
Time for Analysis:               27.012s
CPU time for analysis:           27.020s
Total time for CPAchecker:       29.823s
Total CPU time for CPAchecker:   29.820s
Time for statistics:              0.298s

Time for Garbage Collector:       0.563s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                102MB (    97 MiB) max;     58MB (    55 MiB) avg;    106MB (   101 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    32 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8199MB (  7820 MiB) max;   8142MB (  7765 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
