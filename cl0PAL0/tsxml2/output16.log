scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8hm74u7q/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 430: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1343: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2007: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2358: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2841: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2918: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            188 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            127 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (32%)
  Times precision was empty:       157 (84%)
  Times precision was {false}:     29 (15%)
  Times result was cached:         2 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        31 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         82358
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3362
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         31
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.07
Number of irrelevant predicates:          31 (100%)

Time for post operator:                  5.937s
  Time for path formula creation:        5.763s
Time for strengthen operator:            0.224s
Time for prec operator:                  2.615s
  Time for abstraction:                  2.427s (Max:     0.163s, Count: 188)
    Solving time:                        0.731s (Max:     0.049s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.735s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.731s

Number of path formula cache hits:   95 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.613s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 341, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.405s
Automaton transfers with branching:                0
Automaton transfer successors:                       196700 (count: 196700, min: 1, max: 1, avg: 1.00) [1 x 196700]

CPA algorithm statistics
------------------------
Number of iterations:            145644
Max size of waitlist:            121
Average size of waitlist:        62
Number of computed successors:   186974
Max successors for one state:    2
Number of times merged:          41175
Number of times stopped:         41183
Number of times breaked:         32

Total time for CPA algorithm:        16.641s (Max:     2.880s)
  Time for choose from waitlist:      0.133s
  Time for precision adjustment:      3.944s
  Time for transfer relation:         8.619s
  Time for merge operator:            2.485s
  Time for stop operator:             0.271s
  Time for adding to reached set:     0.322s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                  60 (count: 32, min: 1, max: 3, avg: 1.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.261s
  Counterexample analysis:                             4.696s (Max:     0.645s, Calls: 32)
    Refinement sat check:                              4.027s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.026s
  ARG update:                                          0.001s

Length of refined path (in blocks):                      56 (count: 31, min: 1, max: 3, avg: 1.81)
Number of affected states:                                0 (count: 31, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 25 (count: 31, min: 0, max: 2, avg: 0.81)
Length (states) of path with itp non-trivial itp:         0 (count: 31, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 2 (count: 31, min: 0, max: 1, avg: 0.06)
Different non-trivial interpolants along paths:           0 (count: 31, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 31, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 145618
Max. size of reached set after ref.:  135365
Avg. size of reached set before ref.: 79698.16
Avg. size of reached set after ref.:  77567.10

Total time for CEGAR algorithm:      27.502s
Time for refinements:                 9.095s
Average time for refinement:          0.284s
Max time for refinement:              0.851s

Code Coverage
-----------------------------
  Function coverage:      0.671
  Visited lines:          1064
  Total lines:            1687
  Line coverage:          0.631
  Visited conditions:     606
  Total conditions:       728
  Condition coverage:     0.832

CPAchecker general statistics
-----------------------------
Number of program locations:     2211
Number of CFA edges:             2695
Number of relevant variables:    308
Number of functions:             73
Number of loops:                 9
Size of reached set:             145618
  Number of reached locations:   1206 (55%)
    Avg states per location:     120
    Max states per location:     1723 (at node N1590)
  Number of reached functions:   49 (67%)
  Number of partitions:          145618
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        115

Time for analysis setup:          2.811s
  Time for loading CPAs:          0.569s
  Time for loading parser:        0.517s
  Time for CFA construction:      1.591s
    Time for parsing file(s):     0.473s
    Time for AST to CFA:          0.471s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.330s
      Time for var class.:        0.179s
Time for Analysis:               27.502s
CPU time for analysis:           27.500s
Total time for CPAchecker:       30.317s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              1.329s

Time for Garbage Collector:       2.988s (in 85 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                257MB (   245 MiB) max;    119MB (   113 MiB) avg;    289MB (   276 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           355MB (   338 MiB) max;    197MB (   188 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8272MB (  7889 MiB) max;   8162MB (  7784 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
