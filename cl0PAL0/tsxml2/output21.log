scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cw9omzy1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 430: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1343: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2007: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2358: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2841: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2918: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            199 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            136 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (32%)
  Times precision was empty:       161 (81%)
  Times precision was {false}:     38 (19%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        38 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         58859
  BDD entailment checks:           1
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3362
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         38
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          38 (100%)

Time for post operator:                  4.972s
  Time for path formula creation:        4.840s
Time for strengthen operator:            0.312s
Time for prec operator:                  3.870s
  Time for abstraction:                  3.591s (Max:     0.477s, Count: 199)
    Solving time:                        1.117s (Max:     0.055s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.561s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.117s

Number of path formula cache hits:   90 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.696s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 392, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.484s
Automaton transfers with branching:                0
Automaton transfer successors:                       141105 (count: 141105, min: 1, max: 1, avg: 1.00) [1 x 141105]

CPA algorithm statistics
------------------------
Number of iterations:            104471
Max size of waitlist:            89
Average size of waitlist:        46
Number of computed successors:   134061
Max successors for one state:    2
Number of times merged:          29429
Number of times stopped:         29430
Number of times breaked:         39

Total time for CPA algorithm:        16.752s (Max:     2.986s)
  Time for choose from waitlist:      0.174s
  Time for precision adjustment:      5.119s
  Time for transfer relation:         7.743s
  Time for merge operator:            2.263s
  Time for stop operator:             0.295s
  Time for adding to reached set:     0.301s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                  73 (count: 39, min: 1, max: 3, avg: 1.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.551s
  Counterexample analysis:                             3.938s (Max:     0.467s, Calls: 39)
    Refinement sat check:                              3.372s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.033s
  ARG update:                                          0.004s

Length of refined path (in blocks):                      58 (count: 39, min: 1, max: 2, avg: 1.49)
Number of affected states:                                0 (count: 39, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 19 (count: 39, min: 0, max: 1, avg: 0.49)
Length (states) of path with itp non-trivial itp:         0 (count: 39, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                15 (count: 39, min: 0, max: 1, avg: 0.38)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 39, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 104143
Max. size of reached set after ref.:  104103
Avg. size of reached set before ref.: 70964.03
Avg. size of reached set after ref.:  70951.36

Total time for CEGAR algorithm:      26.972s
Time for refinements:                 7.994s
Average time for refinement:          0.204s
Max time for refinement:              0.576s

Code Coverage
-----------------------------
  Function coverage:      0.630
  Visited lines:          970
  Total lines:            1687
  Line coverage:          0.575
  Visited conditions:     560
  Total conditions:       728
  Condition coverage:     0.769

CPAchecker general statistics
-----------------------------
Number of program locations:     2211
Number of CFA edges:             2695
Number of relevant variables:    308
Number of functions:             73
Number of loops:                 9
Size of reached set:             104100
  Number of reached locations:   1105 (50%)
    Avg states per location:     94
    Max states per location:     1220 (at node N1590)
  Number of reached functions:   46 (63%)
  Number of partitions:          104100
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        78

Time for analysis setup:          2.957s
  Time for loading CPAs:          0.605s
  Time for loading parser:        0.565s
  Time for CFA construction:      1.675s
    Time for parsing file(s):     0.472s
    Time for AST to CFA:          0.533s
    Time for CFA sanity check:    0.173s
    Time for post-processing:     0.363s
      Time for var class.:        0.211s
Time for Analysis:               26.972s
CPU time for analysis:           26.970s
Total time for CPAchecker:       29.932s
Total CPU time for CPAchecker:   29.930s
Time for statistics:              0.929s

Time for Garbage Collector:       2.066s (in 77 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                221MB (   211 MiB) max;    108MB (   103 MiB) avg;    229MB (   218 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           296MB (   282 MiB) max;    189MB (   181 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8266MB (  7883 MiB) max;   8141MB (  7763 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
