scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ba_vl7ed/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 430: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1343: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2007: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2358: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2841: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2918: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            167 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            113 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (32%)
  Times precision was empty:       140 (84%)
  Times precision was {false}:     26 (16%)
  Times result was cached:         1 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        27 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         76483
  BDD entailment checks:           5
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3362
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         27
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.04
Number of irrelevant predicates:          27 (100%)

Time for post operator:                  5.659s
  Time for path formula creation:        5.504s
Time for strengthen operator:            0.250s
Time for prec operator:                  2.674s
  Time for abstraction:                  2.422s (Max:     0.291s, Count: 167)
    Solving time:                        0.801s (Max:     0.078s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 2.066s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.801s

Number of path formula cache hits:   91 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.333s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 303, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.383s
Automaton transfers with branching:                0
Automaton transfer successors:                       182632 (count: 182632, min: 1, max: 1, avg: 1.00) [1 x 182632]

CPA algorithm statistics
------------------------
Number of iterations:            135214
Max size of waitlist:            114
Average size of waitlist:        58
Number of computed successors:   173593
Max successors for one state:    2
Number of times merged:          38239
Number of times stopped:         38244
Number of times breaked:         28

Total time for CPA algorithm:        17.700s (Max:     3.079s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:      4.348s
  Time for transfer relation:         8.519s
  Time for merge operator:            2.998s
  Time for stop operator:             0.307s
  Time for adding to reached set:     0.397s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                  51 (count: 28, min: 1, max: 3, avg: 1.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.679s
  Counterexample analysis:                             4.138s (Max:     0.847s, Calls: 28)
    Refinement sat check:                              3.600s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.010s
  ARG update:                                          0.007s

Length of refined path (in blocks):                      47 (count: 27, min: 1, max: 3, avg: 1.74)
Number of affected states:                                0 (count: 27, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 20 (count: 27, min: 0, max: 2, avg: 0.74)
Length (states) of path with itp non-trivial itp:         0 (count: 27, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 1 (count: 27, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:           0 (count: 27, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 27, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 135240
Max. size of reached set after ref.:  124829
Avg. size of reached set before ref.: 71382.96
Avg. size of reached set after ref.:  69014.81

Total time for CEGAR algorithm:      27.381s
Time for refinements:                 8.153s
Average time for refinement:          0.291s
Max time for refinement:              1.128s

Code Coverage
-----------------------------
  Function coverage:      0.671
  Visited lines:          1064
  Total lines:            1687
  Line coverage:          0.631
  Visited conditions:     606
  Total conditions:       728
  Condition coverage:     0.832

CPAchecker general statistics
-----------------------------
Number of program locations:     2211
Number of CFA edges:             2695
Number of relevant variables:    308
Number of functions:             73
Number of loops:                 9
Size of reached set:             135240
  Number of reached locations:   1206 (55%)
    Avg states per location:     112
    Max states per location:     1601 (at node N1590)
  Number of reached functions:   49 (67%)
  Number of partitions:          135240
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        108

Time for analysis setup:          3.023s
  Time for loading CPAs:          0.672s
  Time for loading parser:        0.522s
  Time for CFA construction:      1.683s
    Time for parsing file(s):     0.481s
    Time for AST to CFA:          0.526s
    Time for CFA sanity check:    0.163s
    Time for post-processing:     0.364s
      Time for var class.:        0.195s
Time for Analysis:               27.381s
CPU time for analysis:           27.380s
Total time for CPAchecker:       30.408s
Total CPU time for CPAchecker:   30.400s
Time for statistics:              2.109s

Time for Garbage Collector:       3.303s (in 81 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                259MB (   247 MiB) max;    110MB (   105 MiB) avg;    323MB (   308 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           270MB (   257 MiB) max;    179MB (   171 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8271MB (  7888 MiB) max;   8160MB (  7782 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
