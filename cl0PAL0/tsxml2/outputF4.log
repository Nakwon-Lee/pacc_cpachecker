scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ii4xt_ci/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 430: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1343: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2007: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2358: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2841: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2918: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2474 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1715 (69%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         759 (31%)
  Times precision was empty:       1734 (70%)
  Times precision was {false}:     323 (13%)
  Times result was cached:         211 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      206 (8%)
  Times result was 'false':        649 (26%)
Number of strengthen sat checks:   0
Number of coverage checks:         619934
  BDD entailment checks:           550
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3362
Number of predicates discovered:          54
Number of abstraction locations:          5
Max number of predicates per location:    26
Avg number of predicates per location:    17
Total predicates per abstraction:         2055
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 3.88
Number of irrelevant predicates:          510 (25%)
Number of preds handled by boolean abs:   1454 (71%)
  Total number of models for allsat:      12781
  Max number of models for allsat:        2037
  Avg number of models for allsat:        62.04

Time for post operator:                 18.392s
  Time for path formula creation:       17.854s
Time for strengthen operator:            1.046s
Time for prec operator:                445.432s
  Time for abstraction:                444.422s (Max:    65.071s, Count: 2474)
    Boolean abstraction:               419.877s
    Solving time:                       33.312s (Max:     3.513s)
    Model enumeration time:            392.433s
    Time for BDD construction:           0.895s (Max:     0.121s)
Time for merge operator:                 6.732s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):   425.747s

Number of path formula cache hits:   474210 (30%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.788s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               97765
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5130 (count: 7510, min: 0, max: 757, avg: 0.68)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.632s
  Time for transition matches:                         0.816s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1487523 (count: 1487523, min: 1, max: 1, avg: 1.00) [1 x 1487523]

CPA algorithm statistics
------------------------
Number of iterations:            1102811
Max size of waitlist:            273
Average size of waitlist:        140
Number of computed successors:   1414380
Max successors for one state:    2
Number of times merged:          309692
Number of times stopped:         310082
Number of times breaked:         444

Total time for CPA algorithm:       499.882s (Max:   425.900s)
  Time for choose from waitlist:      0.436s
  Time for precision adjustment:    454.625s
  Time for transfer relation:        29.614s
  Time for merge operator:            9.551s
  Time for stop operator:             1.127s
  Time for adding to reached set:     1.700s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   444
Avg. length of target path (in blocks):                1609 (count: 444, min: 1, max: 7, avg: 3.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 181.645s
  Counterexample analysis:                           171.957s (Max:     3.786s, Calls: 444)
    Refinement sat check:                            145.129s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.041s
  ARG update:                                          2.076s

Length of refined path (in blocks):                    1378 (count: 444, min: 1, max: 6, avg: 3.10)
Number of affected states:                               34 (count: 444, min: 0, max: 4, avg: 0.08)
Length (states) of path with itp 'true':                900 (count: 444, min: 0, max: 5, avg: 2.03)
Length (states) of path with itp non-trivial itp:        34 (count: 444, min: 0, max: 4, avg: 0.08)
Length (states) of path with itp 'false':               188 (count: 444, min: 0, max: 1, avg: 0.42)
Different non-trivial interpolants along paths:          22 (count: 444, min: 0, max: 3, avg: 0.05)
Equal non-trivial interpolants along paths:               0 (count: 444, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                444
Number of successful refinements:     444
Number of failed refinements:         0
Max. size of reached set before ref.: 430196
Max. size of reached set after ref.:  430139
Avg. size of reached set before ref.: 286779.57
Avg. size of reached set after ref.:  284788.09

Total time for CEGAR algorithm:     897.495s
Time for refinements:               300.301s
Average time for refinement:          0.676s
Max time for refinement:              3.944s

Code Coverage
-----------------------------
  Function coverage:      0.671
  Visited lines:          1064
  Total lines:            1687
  Line coverage:          0.631
  Visited conditions:     606
  Total conditions:       728
  Condition coverage:     0.832

CPAchecker general statistics
-----------------------------
Number of program locations:     2211
Number of CFA edges:             2695
Number of relevant variables:    308
Number of functions:             73
Number of loops:                 9
Size of reached set:             219433
  Number of reached locations:   1205 (55%)
    Avg states per location:     182
    Max states per location:     2647 (at node N1590)
  Number of reached functions:   49 (67%)
  Number of partitions:          219416
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N2442 (before lines 3065-3093), Function cleanup called from node N6, stack depth 4 [3ea7d936], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        34

Time for analysis setup:          2.906s
  Time for loading CPAs:          0.611s
  Time for loading parser:        0.490s
  Time for CFA construction:      1.665s
    Time for parsing file(s):     0.524s
    Time for AST to CFA:          0.487s
    Time for CFA sanity check:    0.151s
    Time for post-processing:     0.347s
      Time for var class.:        0.190s
Time for Analysis:              897.495s
CPU time for analysis:          897.480s
Total time for CPAchecker:      900.404s
Total CPU time for CPAchecker:  900.380s
Time for statistics:              1.752s

Time for Garbage Collector:      23.247s (in 348 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1118MB (  1066 MiB) max;    736MB (   702 MiB) avg;   1163MB (  1109 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1200MB (  1145 MiB) max;    981MB (   936 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8921MB (  8508 MiB) max;   8613MB (  8214 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
