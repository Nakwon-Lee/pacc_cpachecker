scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3cdtncpg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1125: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1134: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1826: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2399: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3272: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3295: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3335: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3374: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            182 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            46 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         136 (75%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     135 (74%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44 (24%)
  Times result was 'false':        125 (69%)
Number of strengthen sat checks:   0
Number of coverage checks:         77470
  BDD entailment checks:           68
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1007
Number of predicates discovered:          106
Number of abstraction locations:          2
Max number of predicates per location:    106
Avg number of predicates per location:    53
Total predicates per abstraction:         2186
Max number of predicates per abstraction: 106
Avg number of predicates per abstraction: 12.21
Number of irrelevant predicates:          141 (6%)
Number of preds handled by boolean abs:   2045 (94%)
  Total number of models for allsat:      4224
  Max number of models for allsat:        1533
  Avg number of models for allsat:        96.00

Time for post operator:                  1.988s
  Time for path formula creation:        1.900s
Time for strengthen operator:            0.200s
Time for prec operator:                 34.372s
  Time for abstraction:                 34.178s (Max:     9.324s, Count: 182)
    Boolean abstraction:                32.030s
    Solving time:                        8.148s (Max:     0.419s)
    Model enumeration time:             23.364s
    Time for BDD construction:           0.742s (Max:     0.127s)
Time for merge operator:                 0.604s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):    31.512s

Number of path formula cache hits:   189313 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.736s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               36655
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       44674 (count: 19217, min: 0, max: 9846, avg: 2.32)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.080s (in 3 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.360s
Automaton transfers with branching:                0
Automaton transfer successors:                       191334 (count: 191334, min: 1, max: 1, avg: 1.00) [1 x 191334]

CPA algorithm statistics
------------------------
Number of iterations:            142622
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   181471
Max successors for one state:    2
Number of times merged:          38701
Number of times stopped:         38703
Number of times breaked:         12

Total time for CPA algorithm:        42.549s (Max:    12.487s)
  Time for choose from waitlist:      0.127s
  Time for precision adjustment:     35.462s
  Time for transfer relation:         4.414s
  Time for merge operator:            1.237s
  Time for stop operator:             0.276s
  Time for adding to reached set:     0.299s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  40 (count: 12, min: 2, max: 6, avg: 3.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.833s
  Counterexample analysis:                             8.341s (Max:     2.041s, Calls: 12)
    Refinement sat check:                              7.409s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.004s
  ARG update:                                          0.337s

Length of refined path (in blocks):                      40 (count: 12, min: 2, max: 6, avg: 3.33)
Number of affected states:                               28 (count: 12, min: 1, max: 5, avg: 2.33)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        28 (count: 12, min: 1, max: 5, avg: 2.33)
Length (states) of path with itp 'false':                 0 (count: 12, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          16 (count: 12, min: 0, max: 4, avg: 1.33)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 25181
Max. size of reached set after ref.:  4197
Avg. size of reached set before ref.: 13983.42
Avg. size of reached set after ref.:  4197.00

Total time for CEGAR algorithm:      52.284s
Time for refinements:                 9.685s
Average time for refinement:          0.807s
Max time for refinement:              2.239s

Code Coverage
-----------------------------
  Function coverage:      0.618
  Visited lines:          1045
  Total lines:            1721
  Line coverage:          0.607
  Visited conditions:     606
  Total conditions:       750
  Condition coverage:     0.808

CPAchecker general statistics
-----------------------------
Number of program locations:     2262
Number of CFA edges:             2750
Number of relevant variables:    299
Number of functions:             76
Number of loops:                 9
Size of reached set:             25207
  Number of reached locations:   1177 (52%)
    Avg states per location:     21
    Max states per location:     175 (at node N1886)
  Number of reached functions:   47 (62%)
  Number of partitions:          25203
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N478 (before lines 651-679), Function cleanup called from node N2428, stack depth 4 [436390f4], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          3.002s
  Time for loading CPAs:          0.594s
  Time for loading parser:        0.496s
  Time for CFA construction:      1.764s
    Time for parsing file(s):     0.456s
    Time for AST to CFA:          0.531s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.448s
      Time for var class.:        0.236s
Time for Analysis:               52.284s
CPU time for analysis:           52.290s
Time for analyzing result:        0.018s
Total time for CPAchecker:       55.290s
Total CPU time for CPAchecker:   55.290s
Time for statistics:              0.387s

Time for Garbage Collector:       1.253s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                143MB (   136 MiB) max;     68MB (    65 MiB) avg;    152MB (   145 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           149MB (   142 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8269MB (  7886 MiB) max;   8159MB (  7781 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
