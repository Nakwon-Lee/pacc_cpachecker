scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--wireless--ti--wlcore--wlcore_spi.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h2vz7nlp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7333: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7327: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7013: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7017: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc7 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            34143 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29283 (86%)
  Because of loop head:            4752 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         108 (0%)
  Times precision was empty:       10467 (31%)
  Times precision was {false}:     312 (1%)
  Times result was cached:         22203 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1161 (3%)
  Times result was 'false':        2684 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         26803
  BDD entailment checks:           8953
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          10
Number of abstraction locations:          78
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         107586
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 73.04
Number of irrelevant predicates:          27941 (26%)
Number of preds handled by boolean abs:   3656 (3%)
  Total number of models for allsat:      1234
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.06

Time for post operator:                  2.329s
  Time for path formula creation:        2.193s
Time for strengthen operator:            0.251s
Time for prec operator:                  7.267s
  Time for abstraction:                  6.821s (Max:     0.045s, Count: 34143)
    Boolean abstraction:                 1.135s
    Solving time:                        0.882s (Max:     0.034s)
    Model enumeration time:              0.149s
    Time for BDD construction:           0.106s (Max:     0.010s)
Time for merge operator:                 0.154s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     1.031s

Number of path formula cache hits:   206336 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.743s

Total number of created targets for pointer analysis: 1117
   Number of created targets for uf: *(struct_wl12xx_platform_data)* is 14
   Number of created targets for uf: *unsigned_char is 46
   Number of created targets for uf: *(struct_platform_device)* is 12
   Number of created targets for uf: *unsigned_int is 45
   Number of created targets for uf: *(struct_device)* is 28


Number of BDD nodes:                               1069
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3079 (count: 29128, min: 0, max: 217, avg: 0.11)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.424s
Automaton transfers with branching:                0
Automaton transfer successors:                       187356 (count: 187356, min: 1, max: 1, avg: 1.00) [1 x 187356]

CPA algorithm statistics
------------------------
Number of iterations:            123205
Max size of waitlist:            21
Average size of waitlist:        8
Number of computed successors:   140427
Max successors for one state:    2
Number of times merged:          8925
Number of times stopped:         13406
Number of times breaked:         108

Total time for CPA algorithm:        14.468s (Max:     0.648s)
  Time for choose from waitlist:      0.127s
  Time for precision adjustment:      8.124s
  Time for transfer relation:         4.632s
  Time for merge operator:            0.395s
  Time for stop operator:             0.288s
  Time for adding to reached set:     0.290s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   108
Avg. length of target path (in blocks):                3545 (count: 108, min: 10, max: 55, avg: 32.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.834s
  Counterexample analysis:                             1.251s (Max:     0.030s, Calls: 108)
    Refinement sat check:                              0.843s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.067s
  ARG update:                                          0.359s

Length of refined path (in blocks):                    3301 (count: 108, min: 6, max: 54, avg: 30.56)
Number of affected states:                             3120 (count: 108, min: 1, max: 53, avg: 28.89)
Length (states) of path with itp 'true':                 73 (count: 108, min: 0, max: 7, avg: 0.68)
Length (states) of path with itp non-trivial itp:      3120 (count: 108, min: 1, max: 53, avg: 28.89)
Length (states) of path with itp 'false':               108 (count: 108, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 108, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3012 (count: 108, min: 0, max: 52, avg: 27.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                108
Number of successful refinements:     108
Number of failed refinements:         0
Max. size of reached set before ref.: 1987
Max. size of reached set after ref.:  395
Avg. size of reached set before ref.: 1150.09
Avg. size of reached set after ref.:  20.21

Total time for CEGAR algorithm:      16.490s
Time for refinements:                 2.016s
Average time for refinement:          0.018s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          1471
  Total lines:            1589
  Line coverage:          0.926
  Visited conditions:     130
  Total conditions:       182
  Condition coverage:     0.714

CPAchecker general statistics
-----------------------------
Number of program locations:     1924
Number of CFA edges:             2020
Number of relevant variables:    155
Number of functions:             48
Number of loops:                 6
Size of reached set:             2311
  Number of reached locations:   401 (21%)
    Avg states per location:     5
    Max states per location:     31 (at node N6)
  Number of reached functions:   26 (54%)
  Number of partitions:          2305
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N578 (before line 7031), Function main called from node N539, stack depth 1 [355e34c7], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.562s
  Time for loading CPAs:          0.660s
  Time for loading parser:        0.563s
  Time for CFA construction:      2.279s
    Time for parsing file(s):     0.611s
    Time for AST to CFA:          0.831s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.545s
      Time for var class.:        0.148s
Time for Analysis:               16.491s
CPU time for analysis:           16.490s
Time for analyzing result:        0.002s
Total time for CPAchecker:       20.057s
Total CPU time for CPAchecker:   20.050s
Time for statistics:              0.098s

Time for Garbage Collector:       0.482s (in 73 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     46MB (    44 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8006MB (  7635 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
