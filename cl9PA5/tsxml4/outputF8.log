scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--wireless--ti--wlcore--wlcore_spi.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6kawznes/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7333: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7327: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 7013: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7017: Destroying the void* pointer ldv_zalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_zalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_setup_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc7 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            40680 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35512 (87%)
  Because of loop head:            5061 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         107 (0%)
  Times precision was empty:       11538 (28%)
  Times precision was {false}:     429 (1%)
  Times result was cached:         26900 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1813 (4%)
  Times result was 'false':        2653 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         30892
  BDD entailment checks:           10316
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          10
Number of abstraction locations:          78
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         124053
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 55.33
Number of irrelevant predicates:          36622 (30%)
Number of preds handled by boolean abs:   5330 (4%)
  Total number of models for allsat:      1915
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.06

Time for post operator:                  3.699s
  Time for path formula creation:        3.531s
Time for strengthen operator:            0.276s
Time for prec operator:                  9.407s
  Time for abstraction:                  8.873s (Max:     0.033s, Count: 40680)
    Boolean abstraction:                 1.709s
    Solving time:                        1.537s (Max:     0.019s)
    Model enumeration time:              0.163s
    Time for BDD construction:           0.143s (Max:     0.012s)
Time for merge operator:                 0.249s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     1.700s

Number of path formula cache hits:   237145 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.106s

Total number of created targets for pointer analysis: 5087
   Number of created targets for uf: *(struct_wl12xx_platform_data)* is 47
   Number of created targets for uf: *unsigned_char is 212
   Number of created targets for uf: *(struct_platform_device)* is 42
   Number of created targets for uf: *unsigned_int is 173
   Number of created targets for uf: *(struct_device)* is 102


Number of BDD nodes:                               1193
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4354 (count: 36128, min: 0, max: 188, avg: 0.12)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.644s
  Time for transition matches:                         0.304s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       227711 (count: 227711, min: 1, max: 1, avg: 1.00) [1 x 227711]

CPA algorithm statistics
------------------------
Number of iterations:            146237
Max size of waitlist:            20
Average size of waitlist:        9
Number of computed successors:   165347
Max successors for one state:    2
Number of times merged:          10288
Number of times stopped:         15477
Number of times breaked:         107

Total time for CPA algorithm:        19.099s (Max:     1.099s)
  Time for choose from waitlist:      0.136s
  Time for precision adjustment:     10.443s
  Time for transfer relation:         6.795s
  Time for merge operator:            0.525s
  Time for stop operator:             0.240s
  Time for adding to reached set:     0.272s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   107
Avg. length of target path (in blocks):                3510 (count: 107, min: 10, max: 55, avg: 32.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.852s
  Counterexample analysis:                             1.207s (Max:     0.041s, Calls: 107)
    Refinement sat check:                              0.785s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.090s
  ARG update:                                          0.423s

Length of refined path (in blocks):                    3279 (count: 107, min: 6, max: 54, avg: 30.64)
Number of affected states:                             3106 (count: 107, min: 1, max: 53, avg: 29.03)
Length (states) of path with itp 'true':                 66 (count: 107, min: 0, max: 7, avg: 0.62)
Length (states) of path with itp non-trivial itp:      3106 (count: 107, min: 1, max: 53, avg: 29.03)
Length (states) of path with itp 'false':               107 (count: 107, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 107, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2999 (count: 107, min: 0, max: 52, avg: 28.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                107
Number of successful refinements:     107
Number of failed refinements:         0
Max. size of reached set before ref.: 2360
Max. size of reached set after ref.:  688
Avg. size of reached set before ref.: 1378.31
Avg. size of reached set after ref.:  23.98

Total time for CEGAR algorithm:      21.195s
Time for refinements:                 2.089s
Average time for refinement:          0.019s
Max time for refinement:              0.064s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          1471
  Total lines:            1589
  Line coverage:          0.926
  Visited conditions:     130
  Total conditions:       182
  Condition coverage:     0.714

CPAchecker general statistics
-----------------------------
Number of program locations:     1924
Number of CFA edges:             2020
Number of relevant variables:    155
Number of functions:             48
Number of loops:                 6
Size of reached set:             2305
  Number of reached locations:   401 (21%)
    Avg states per location:     5
    Max states per location:     31 (at node N6)
  Number of reached functions:   26 (54%)
  Number of partitions:          2300
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N578 (before line 7031), Function main called from node N539, stack depth 1 [355e34c7], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.743s
  Time for loading CPAs:          0.842s
  Time for loading parser:        0.569s
  Time for CFA construction:      2.217s
    Time for parsing file(s):     0.712s
    Time for AST to CFA:          0.744s
    Time for CFA sanity check:    0.127s
    Time for post-processing:     0.489s
      Time for var class.:        0.201s
Time for Analysis:               21.196s
CPU time for analysis:           21.190s
Time for analyzing result:        0.003s
Total time for CPAchecker:       24.942s
Total CPU time for CPAchecker:   24.920s
Time for statistics:              0.136s

Time for Garbage Collector:       0.699s (in 86 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     48MB (    46 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8009MB (  7638 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
