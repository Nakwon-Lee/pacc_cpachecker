scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6r8u_hd7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6748: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6742: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            57044 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  40379 (71%)
  Because of loop head:            16486 (29%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         179 (0%)
  Times precision was empty:       11819 (21%)
  Times precision was {false}:     318 (1%)
  Times result was cached:         42980 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1927 (3%)
  Times result was 'false':        3173 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         100576
  BDD entailment checks:           26588
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          10
Number of abstraction locations:          88
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         242033
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 107.81
Number of irrelevant predicates:          62728 (26%)
Number of preds handled by boolean abs:   6120 (3%)
  Total number of models for allsat:      2017
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.05

Time for post operator:                  2.542s
  Time for path formula creation:        2.407s
Time for strengthen operator:            0.349s
Time for prec operator:                 13.371s
  Time for abstraction:                 12.634s (Max:     0.021s, Count: 57044)
    Boolean abstraction:                 2.001s
    Solving time:                        1.892s (Max:     0.015s)
    Model enumeration time:              0.139s
    Time for BDD construction:           0.111s (Max:     0.012s)
Time for merge operator:                 0.180s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     2.031s

Number of path formula cache hits:   539194 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.783s

Total number of created targets for pointer analysis: 4692
   Number of created targets for uf: *(struct_net_device)* is 65
   Number of created targets for uf: *signed_int is 1401
   Number of created targets for uf: *unsigned_long_int is 47


Number of BDD nodes:                               491
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4304 (count: 52164, min: 0, max: 296, avg: 0.08)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.693s
  Time for transition matches:                         0.346s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       474072 (count: 474072, min: 1, max: 1, avg: 1.00) [1 x 474072]

CPA algorithm statistics
------------------------
Number of iterations:            308433
Max size of waitlist:            89
Average size of waitlist:        30
Number of computed successors:   369944
Max successors for one state:    2
Number of times merged:          36994
Number of times stopped:         49019
Number of times breaked:         179

Total time for CPA algorithm:        23.580s (Max:     0.593s)
  Time for choose from waitlist:      0.130s
  Time for precision adjustment:     14.992s
  Time for transfer relation:         6.167s
  Time for merge operator:            0.578s
  Time for stop operator:             0.432s
  Time for adding to reached set:     0.449s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   179
Avg. length of target path (in blocks):                5957 (count: 179, min: 7, max: 64, avg: 33.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.080s
  Counterexample analysis:                             2.243s (Max:     0.046s, Calls: 179)
    Refinement sat check:                              1.596s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.114s
  ARG update:                                          0.570s

Length of refined path (in blocks):                    5744 (count: 179, min: 5, max: 63, avg: 32.09)
Number of affected states:                             5553 (count: 179, min: 4, max: 62, avg: 31.02)
Length (states) of path with itp 'true':                 12 (count: 179, min: 0, max: 12, avg: 0.07)
Length (states) of path with itp non-trivial itp:      5553 (count: 179, min: 4, max: 62, avg: 31.02)
Length (states) of path with itp 'false':               179 (count: 179, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 179, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5374 (count: 179, min: 3, max: 61, avg: 30.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                179
Number of successful refinements:     179
Number of failed refinements:         0
Max. size of reached set before ref.: 3462
Max. size of reached set after ref.:  737
Avg. size of reached set before ref.: 1757.80
Avg. size of reached set after ref.:  7.10

Total time for CEGAR algorithm:      26.980s
Time for refinements:                 3.397s
Average time for refinement:          0.018s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.439
  Visited lines:          1592
  Total lines:            1795
  Line coverage:          0.887
  Visited conditions:     323
  Total conditions:       392
  Condition coverage:     0.824

CPAchecker general statistics
-----------------------------
Number of program locations:     2319
Number of CFA edges:             2523
Number of relevant variables:    200
Number of functions:             57
Number of loops:                 20
Size of reached set:             4377
  Number of reached locations:   792 (34%)
    Avg states per location:     5
    Max states per location:     36 (at node N790)
  Number of reached functions:   25 (44%)
  Number of partitions:          4344
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1226 (before line 6518), Function main called from node N1218, stack depth 1 [51b01960], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.475s
  Time for loading CPAs:          0.595s
  Time for loading parser:        0.412s
  Time for CFA construction:      2.368s
    Time for parsing file(s):     0.588s
    Time for AST to CFA:          0.891s
    Time for CFA sanity check:    0.157s
    Time for post-processing:     0.611s
      Time for var class.:        0.182s
Time for Analysis:               26.981s
CPU time for analysis:           26.980s
Time for analyzing result:        0.011s
Total time for CPAchecker:       30.460s
Total CPU time for CPAchecker:   30.450s
Time for statistics:              0.101s

Time for Garbage Collector:       0.885s (in 170 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     48MB (    45 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    34 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8077MB (  7703 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
