scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c5s95b0e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6748: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6742: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            50826 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  36635 (72%)
  Because of loop head:            14021 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         170 (0%)
  Times precision was empty:       11598 (23%)
  Times precision was {false}:     299 (1%)
  Times result was cached:         37234 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1695 (3%)
  Times result was 'false':        2554 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         77397
  BDD entailment checks:           20267
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          10
Number of abstraction locations:          88
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         170461
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 85.49
Number of irrelevant predicates:          40595 (24%)
Number of preds handled by boolean abs:   5167 (3%)
  Total number of models for allsat:      1749
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.03

Time for post operator:                  2.071s
  Time for path formula creation:        1.886s
Time for strengthen operator:            0.361s
Time for prec operator:                  9.975s
  Time for abstraction:                  9.401s (Max:     0.033s, Count: 50826)
    Boolean abstraction:                 1.671s
    Solving time:                        1.631s (Max:     0.023s)
    Model enumeration time:              0.139s
    Time for BDD construction:           0.076s (Max:     0.009s)
Time for merge operator:                 0.146s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     1.770s

Number of path formula cache hits:   436289 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.485s

Total number of created targets for pointer analysis: 1703
   Number of created targets for uf: *(struct_net_device)* is 161
   Number of created targets for uf: *signed_int is 341
   Number of created targets for uf: *unsigned_long_int is 23


Number of BDD nodes:                               405
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3712 (count: 44084, min: 0, max: 211, avg: 0.08)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.573s
  Time for transition matches:                         0.280s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       374903 (count: 374903, min: 1, max: 1, avg: 1.00) [1 x 374903]

CPA algorithm statistics
------------------------
Number of iterations:            257654
Max size of waitlist:            19
Average size of waitlist:        8
Number of computed successors:   303133
Max successors for one state:    2
Number of times merged:          28565
Number of times stopped:         41609
Number of times breaked:         170

Total time for CPA algorithm:        19.131s (Max:     0.554s)
  Time for choose from waitlist:      0.204s
  Time for precision adjustment:     11.525s
  Time for transfer relation:         5.344s
  Time for merge operator:            0.421s
  Time for stop operator:             0.429s
  Time for adding to reached set:     0.362s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   170
Avg. length of target path (in blocks):                5636 (count: 170, min: 7, max: 64, avg: 33.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.095s
  Counterexample analysis:                             2.305s (Max:     0.046s, Calls: 170)
    Refinement sat check:                              1.637s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.070s
  Precision update:                                    0.115s
  ARG update:                                          0.514s

Length of refined path (in blocks):                    5444 (count: 170, min: 5, max: 63, avg: 32.02)
Number of affected states:                             5262 (count: 170, min: 4, max: 62, avg: 30.95)
Length (states) of path with itp 'true':                 12 (count: 170, min: 0, max: 12, avg: 0.07)
Length (states) of path with itp non-trivial itp:      5262 (count: 170, min: 4, max: 62, avg: 30.95)
Length (states) of path with itp 'false':               170 (count: 170, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 170, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5092 (count: 170, min: 3, max: 61, avg: 29.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                170
Number of successful refinements:     170
Number of failed refinements:         0
Max. size of reached set before ref.: 2594
Max. size of reached set after ref.:  490
Avg. size of reached set before ref.: 1513.34
Avg. size of reached set after ref.:  5.86

Total time for CEGAR algorithm:      22.502s
Time for refinements:                 3.364s
Average time for refinement:          0.019s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.439
  Visited lines:          1592
  Total lines:            1795
  Line coverage:          0.887
  Visited conditions:     323
  Total conditions:       392
  Condition coverage:     0.824

CPAchecker general statistics
-----------------------------
Number of program locations:     2319
Number of CFA edges:             2523
Number of relevant variables:    200
Number of functions:             57
Number of loops:                 20
Size of reached set:             2701
  Number of reached locations:   792 (34%)
    Avg states per location:     3
    Max states per location:     24 (at node N790)
  Number of reached functions:   25 (44%)
  Number of partitions:          2687
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N256 (before line 5388), Function com90xx_probe called from node N1055, stack depth 3 [7afa3f6f], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0

Time for analysis setup:          3.178s
  Time for loading CPAs:          0.668s
  Time for loading parser:        0.504s
  Time for CFA construction:      1.925s
    Time for parsing file(s):     0.569s
    Time for AST to CFA:          0.686s
    Time for CFA sanity check:    0.136s
    Time for post-processing:     0.407s
      Time for var class.:        0.159s
Time for Analysis:               22.502s
CPU time for analysis:           22.510s
Time for analyzing result:        0.002s
Total time for CPAchecker:       25.683s
Total CPU time for CPAchecker:   25.670s
Time for statistics:              0.072s

Time for Garbage Collector:       0.650s (in 133 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    65 MiB) max;     47MB (    45 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
