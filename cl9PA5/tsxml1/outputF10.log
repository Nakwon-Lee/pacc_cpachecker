scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y7l_1mtx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6748: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6742: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            195893 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  135325 (69%)
  Because of loop head:            60388 (31%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         180 (0%)
  Times precision was empty:       56924 (29%)
  Times precision was {false}:     991 (1%)
  Times result was cached:         132856 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5122 (3%)
  Times result was 'false':        3917 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         409792
  BDD entailment checks:           131950
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          10
Number of abstraction locations:          88
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         736702
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 120.51
Number of irrelevant predicates:          294010 (40%)
Number of preds handled by boolean abs:   14463 (2%)
  Total number of models for allsat:      5420
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                  5.856s
  Time for path formula creation:        5.326s
Time for strengthen operator:            1.014s
Time for prec operator:                 32.245s
  Time for abstraction:                 30.478s (Max:     0.116s, Count: 195893)
    Boolean abstraction:                 5.739s
    Solving time:                        5.933s (Max:     0.017s)
    Model enumeration time:              0.408s
    Time for BDD construction:           0.156s (Max:     0.012s)
Time for merge operator:                 0.553s
Time for coverage check:                 0.157s
  Time for BDD entailment checks:        0.107s
Total time for SMT solver (w/o itp):     6.341s

Number of path formula cache hits:   1939727 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.510s

Total number of created targets for pointer analysis: 13505
   Number of created targets for uf: *(struct_net_device)* is 961
   Number of created targets for uf: *signed_int is 2341
   Number of created targets for uf: *unsigned_long_int is 168


Number of BDD nodes:                               519
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10604 (count: 225464, min: 0, max: 174, avg: 0.05)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.579s
  Time for transition matches:                         0.831s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1689096 (count: 1689096, min: 1, max: 1, avg: 1.00) [1 x 1689096]

CPA algorithm statistics
------------------------
Number of iterations:            1159231
Max size of waitlist:            30
Average size of waitlist:        18
Number of computed successors:   1364914
Max successors for one state:    2
Number of times merged:          138921
Number of times stopped:         200603
Number of times breaked:         180

Total time for CPA algorithm:        59.614s (Max:     1.464s)
  Time for choose from waitlist:      0.330s
  Time for precision adjustment:     37.216s
  Time for transfer relation:        15.726s
  Time for merge operator:            1.690s
  Time for stop operator:             1.135s
  Time for adding to reached set:     1.367s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   180
Avg. length of target path (in blocks):                6091 (count: 180, min: 7, max: 64, avg: 33.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.047s
  Counterexample analysis:                             2.037s (Max:     0.039s, Calls: 180)
    Refinement sat check:                              1.402s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.083s
  Precision update:                                    0.059s
  ARG update:                                          1.628s

Length of refined path (in blocks):                    5867 (count: 180, min: 5, max: 63, avg: 32.59)
Number of affected states:                             5675 (count: 180, min: 4, max: 62, avg: 31.53)
Length (states) of path with itp 'true':                 12 (count: 180, min: 0, max: 12, avg: 0.07)
Length (states) of path with itp non-trivial itp:      5675 (count: 180, min: 4, max: 62, avg: 31.53)
Length (states) of path with itp 'false':               180 (count: 180, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 180, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5495 (count: 180, min: 3, max: 61, avg: 30.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                180
Number of successful refinements:     180
Number of failed refinements:         0
Max. size of reached set before ref.: 9516
Max. size of reached set after ref.:  1476
Avg. size of reached set before ref.: 6433.24
Avg. size of reached set after ref.:  11.18

Total time for CEGAR algorithm:      64.377s
Time for refinements:                 4.754s
Average time for refinement:          0.026s
Max time for refinement:              0.205s

Code Coverage
-----------------------------
  Function coverage:      0.439
  Visited lines:          1592
  Total lines:            1795
  Line coverage:          0.887
  Visited conditions:     323
  Total conditions:       392
  Condition coverage:     0.824

CPAchecker general statistics
-----------------------------
Number of program locations:     2319
Number of CFA edges:             2523
Number of relevant variables:    200
Number of functions:             57
Number of loops:                 20
Size of reached set:             4425
  Number of reached locations:   792 (34%)
    Avg states per location:     5
    Max states per location:     36 (at node N790)
  Number of reached functions:   25 (44%)
  Number of partitions:          4388
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1226 (before line 6518), Function main called from node N1218, stack depth 1 [7bd69e82], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.052s
  Time for loading CPAs:          0.606s
  Time for loading parser:        0.396s
  Time for CFA construction:      1.968s
    Time for parsing file(s):     0.560s
    Time for AST to CFA:          0.734s
    Time for CFA sanity check:    0.120s
    Time for post-processing:     0.432s
      Time for var class.:        0.173s
Time for Analysis:               64.377s
CPU time for analysis:           64.370s
Time for analyzing result:        0.003s
Total time for CPAchecker:       67.433s
Total CPU time for CPAchecker:   67.420s
Time for statistics:              0.116s

Time for Garbage Collector:       4.497s (in 556 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     72MB (    69 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8081MB (  7707 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
