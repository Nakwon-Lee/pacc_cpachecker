scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bwp0xzk5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6748: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6742: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            102262 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  61982 (61%)
  Because of loop head:            40087 (39%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         193 (0%)
  Times precision was empty:       20089 (20%)
  Times precision was {false}:     285 (0%)
  Times result was cached:         79982 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1906 (2%)
  Times result was 'false':        4532 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         206430
  BDD entailment checks:           62180
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          10
Number of abstraction locations:          88
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         457200
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 208.67
Number of irrelevant predicates:          71818 (16%)
Number of preds handled by boolean abs:   6467 (1%)
  Total number of models for allsat:      1966
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.03

Time for post operator:                  2.722s
  Time for path formula creation:        2.478s
Time for strengthen operator:            0.619s
Time for prec operator:                 18.430s
  Time for abstraction:                 17.445s (Max:     0.026s, Count: 102262)
    Boolean abstraction:                 2.217s
    Solving time:                        2.038s (Max:     0.015s)
    Model enumeration time:              0.169s
    Time for BDD construction:           0.135s (Max:     0.010s)
Time for merge operator:                 0.222s
Time for coverage check:                 0.106s
  Time for BDD entailment checks:        0.073s
Total time for SMT solver (w/o itp):     2.207s

Number of path formula cache hits:   1021919 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.621s

Total number of created targets for pointer analysis: 3060
   Number of created targets for uf: *(struct_net_device)* is 65
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_long_int is 76


Number of BDD nodes:                               448
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4174 (count: 96164, min: 0, max: 223, avg: 0.04)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.029s
  Time for transition matches:                         0.529s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       876600 (count: 876600, min: 1, max: 1, avg: 1.00) [1 x 876600]

CPA algorithm statistics
------------------------
Number of iterations:            595162
Max size of waitlist:            49
Average size of waitlist:        14
Number of computed successors:   707110
Max successors for one state:    2
Number of times merged:          72125
Number of times stopped:         103332
Number of times breaked:         193

Total time for CPA algorithm:        33.017s (Max:     0.672s)
  Time for choose from waitlist:      0.172s
  Time for precision adjustment:     21.164s
  Time for transfer relation:         8.307s
  Time for merge operator:            0.933s
  Time for stop operator:             0.699s
  Time for adding to reached set:     0.536s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   193
Avg. length of target path (in blocks):                6350 (count: 193, min: 7, max: 64, avg: 32.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.345s
  Counterexample analysis:                             2.135s (Max:     0.028s, Calls: 193)
    Refinement sat check:                              1.553s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.112s
  Precision update:                                    0.097s
  ARG update:                                          0.895s

Length of refined path (in blocks):                    5991 (count: 193, min: 5, max: 63, avg: 31.04)
Number of affected states:                             5673 (count: 193, min: 4, max: 62, avg: 29.39)
Length (states) of path with itp 'true':                125 (count: 193, min: 0, max: 17, avg: 0.65)
Length (states) of path with itp non-trivial itp:      5673 (count: 193, min: 4, max: 62, avg: 29.39)
Length (states) of path with itp 'false':               193 (count: 193, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 193, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5480 (count: 193, min: 3, max: 61, avg: 28.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                193
Number of successful refinements:     193
Number of failed refinements:         0
Max. size of reached set before ref.: 6215
Max. size of reached set after ref.:  1680
Avg. size of reached set before ref.: 3150.54
Avg. size of reached set after ref.:  76.05

Total time for CEGAR algorithm:      36.816s
Time for refinements:                 3.775s
Average time for refinement:          0.019s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.439
  Visited lines:          1592
  Total lines:            1795
  Line coverage:          0.887
  Visited conditions:     323
  Total conditions:       392
  Condition coverage:     0.824

CPAchecker general statistics
-----------------------------
Number of program locations:     2319
Number of CFA edges:             2523
Number of relevant variables:    200
Number of functions:             57
Number of loops:                 20
Size of reached set:             5870
  Number of reached locations:   792 (34%)
    Avg states per location:     7
    Max states per location:     48 (at node N790)
  Number of reached functions:   25 (44%)
  Number of partitions:          5820
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1226 (before line 6518), Function main called from node N1218, stack depth 1 [51b01960], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.177s
  Time for loading CPAs:          0.681s
  Time for loading parser:        0.403s
  Time for CFA construction:      1.989s
    Time for parsing file(s):     0.603s
    Time for AST to CFA:          0.675s
    Time for CFA sanity check:    0.119s
    Time for post-processing:     0.463s
      Time for var class.:        0.165s
Time for Analysis:               36.816s
CPU time for analysis:           36.810s
Time for analyzing result:        0.004s
Total time for CPAchecker:       39.996s
Total CPU time for CPAchecker:   39.980s
Time for statistics:              0.124s

Time for Garbage Collector:       1.652s (in 322 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                102MB (    97 MiB) max;     54MB (    51 MiB) avg;    105MB (   100 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8013MB (  7642 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
