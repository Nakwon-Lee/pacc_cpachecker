scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--regulator--gpio-regulator.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2du41lat/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_array to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_set_value_cansleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free_array to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            90 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            80 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (11%)
  Times precision was empty:       18 (20%)
  Times precision was {false}:     7 (8%)
  Times result was cached:         47 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (20%)
  Times result was 'false':        5 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         549
  BDD entailment checks:           45
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       394
Number of predicates discovered:          2
Number of abstraction locations:          6
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         72
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.88
Number of irrelevant predicates:          13 (18%)
Number of preds handled by boolean abs:   18 (25%)
  Total number of models for allsat:      18
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.769s
  Time for path formula creation:        0.736s
Time for strengthen operator:            0.028s
Time for prec operator:                  0.419s
  Time for abstraction:                  0.383s (Max:     0.116s, Count: 90)
    Boolean abstraction:                 0.123s
    Solving time:                        0.110s (Max:     0.059s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.016s (Max:     0.013s)
Time for merge operator:                 0.142s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.002s
Total time for SMT solver (w/o itp):     0.116s

Number of path formula cache hits:   6202 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.664s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          29 (count: 211, min: 0, max: 22, avg: 0.14)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.101s
Automaton transfers with branching:                0
Automaton transfer successors:                         9292 (count: 9292, min: 1, max: 1, avg: 1.00) [1 x 9292]

CPA algorithm statistics
------------------------
Number of iterations:            2412
Max size of waitlist:            26
Average size of waitlist:        12
Number of computed successors:   2808
Max successors for one state:    2
Number of times merged:          252
Number of times stopped:         293
Number of times breaked:         5

Total time for CPA algorithm:         2.172s (Max:     0.806s)
  Time for choose from waitlist:      0.024s
  Time for precision adjustment:      0.543s
  Time for transfer relation:         1.272s
  Time for merge operator:            0.159s
  Time for stop operator:             0.037s
  Time for adding to reached set:     0.033s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  19 (count: 5, min: 2, max: 5, avg: 3.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.079s
  Counterexample analysis:                             0.049s (Max:     0.018s, Calls: 5)
    Refinement sat check:                              0.030s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.003s
  ARG update:                                          0.015s

Length of refined path (in blocks):                      19 (count: 5, min: 2, max: 5, avg: 3.80)
Number of affected states:                               14 (count: 5, min: 1, max: 4, avg: 2.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        14 (count: 5, min: 1, max: 4, avg: 2.80)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               9 (count: 5, min: 0, max: 3, avg: 1.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 542
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 411.00
Avg. size of reached set after ref.:  13.00

Total time for CEGAR algorithm:       2.275s
Time for refinements:                 0.103s
Average time for refinement:          0.020s
Max time for refinement:              0.033s

Code Coverage
-----------------------------
  Function coverage:      0.724
  Visited lines:          1453
  Total lines:            1559
  Line coverage:          0.932
  Visited conditions:     96
  Total conditions:       106
  Condition coverage:     0.906

CPAchecker general statistics
-----------------------------
Number of program locations:     1722
Number of CFA edges:             1780
Number of relevant variables:    336
Number of functions:             29
Number of loops:                 5
Size of reached set:             521
  Number of reached locations:   328 (19%)
    Avg states per location:     1
    Max states per location:     8 (at node N1289)
  Number of reached functions:   21 (72%)
  Number of partitions:          521
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.306s
  Time for loading CPAs:          0.681s
  Time for loading parser:        0.595s
  Time for CFA construction:      1.889s
    Time for parsing file(s):     0.581s
    Time for AST to CFA:          0.560s
    Time for CFA sanity check:    0.145s
    Time for post-processing:     0.446s
      Time for var class.:        0.207s
Time for Analysis:                2.275s
CPU time for analysis:            2.280s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.586s
Total CPU time for CPAchecker:    5.580s
Time for statistics:              0.080s

Time for Garbage Collector:       0.142s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     32MB (    31 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    25 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    33 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8080MB (  7706 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
