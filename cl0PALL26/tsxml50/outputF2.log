scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--joystick--magellan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lz68t5hq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            121 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            106 (88%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (12%)
  Times precision was empty:       36 (30%)
  Times precision was {false}:     15 (12%)
  Times result was cached:         52 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (15%)
  Times result was 'false':        10 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         347
  BDD entailment checks:           67
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       189
Number of predicates discovered:          2
Number of abstraction locations:          7
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         85
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.58
Number of irrelevant predicates:          31 (36%)
Number of preds handled by boolean abs:   18 (21%)
  Total number of models for allsat:      18
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.075s
  Time for path formula creation:        1.055s
Time for strengthen operator:            0.020s
Time for prec operator:                  0.532s
  Time for abstraction:                  0.520s (Max:     0.054s, Count: 121)
    Boolean abstraction:                 0.129s
    Solving time:                        0.275s (Max:     0.026s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.013s (Max:     0.012s)
Time for merge operator:                 0.084s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.278s

Number of path formula cache hits:   4657 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.015s

Total number of created targets for pointer analysis: 4176
   Number of created targets for uf: *unsigned_char is 257


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          23 (count: 292, min: 0, max: 16, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.094s
Automaton transfers with branching:                0
Automaton transfer successors:                         8120 (count: 8120, min: 1, max: 1, avg: 1.00) [1 x 8120]

CPA algorithm statistics
------------------------
Number of iterations:            2093
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   2333
Max successors for one state:    2
Number of times merged:          140
Number of times stopped:         196
Number of times breaked:         5

Total time for CPA algorithm:         2.405s (Max:     0.713s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      0.642s
  Time for transfer relation:         1.532s
  Time for merge operator:            0.100s
  Time for stop operator:             0.052s
  Time for adding to reached set:     0.018s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  21 (count: 5, min: 2, max: 5, avg: 4.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.167s
  Counterexample analysis:                             0.107s (Max:     0.034s, Calls: 5)
    Refinement sat check:                              0.092s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.002s
  ARG update:                                          0.031s

Length of refined path (in blocks):                      21 (count: 5, min: 2, max: 5, avg: 4.20)
Number of affected states:                               16 (count: 5, min: 1, max: 4, avg: 3.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        16 (count: 5, min: 1, max: 4, avg: 3.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              11 (count: 5, min: 0, max: 3, avg: 2.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 436
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 374.40
Avg. size of reached set after ref.:  13.00

Total time for CEGAR algorithm:       2.596s
Time for refinements:                 0.191s
Average time for refinement:          0.038s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.750
  Visited lines:          991
  Total lines:            1013
  Line coverage:          0.978
  Visited conditions:     60
  Total conditions:       68
  Condition coverage:     0.882

CPAchecker general statistics
-----------------------------
Number of program locations:     1140
Number of CFA edges:             1175
Number of relevant variables:    177
Number of functions:             24
Number of loops:                 6
Size of reached set:             321
  Number of reached locations:   224 (20%)
    Avg states per location:     1
    Max states per location:     6 (at node N761)
  Number of reached functions:   18 (75%)
  Number of partitions:          321
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.990s
  Time for loading CPAs:          0.629s
  Time for loading parser:        0.537s
  Time for CFA construction:      1.705s
    Time for parsing file(s):     0.573s
    Time for AST to CFA:          0.483s
    Time for CFA sanity check:    0.123s
    Time for post-processing:     0.394s
      Time for var class.:        0.176s
Time for Analysis:                2.596s
CPU time for analysis:            2.600s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.589s
Total CPU time for CPAchecker:    5.580s
Time for statistics:              0.065s

Time for Garbage Collector:       0.133s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     33MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8087MB (  7712 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
