scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--acpi--apei--einj.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pcv3arh2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_get_debugfs_dir to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_exec_ctx_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_exec_collect_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_resources_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_exec_pre_map_gars to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_resources_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_resources_fini to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_os_unmap_memory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_exec_post_unmap_gars to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_os_map_memory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x64 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_blob to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            12 (60%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (40%)
  Times precision was empty:       8 (40%)
  Times precision was {false}:     4 (20%)
  Times result was cached:         3 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (25%)
  Times result was 'false':        5 (25%)
Number of strengthen sat checks:   0
Number of coverage checks:         228
  BDD entailment checks:           4
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       242
Number of predicates discovered:          2
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         12
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.33
Number of irrelevant predicates:          5 (42%)
Number of preds handled by boolean abs:   5 (42%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.80

Time for post operator:                  0.435s
  Time for path formula creation:        0.419s
Time for strengthen operator:            0.019s
Time for prec operator:                  0.173s
  Time for abstraction:                  0.154s (Max:     0.042s, Count: 20)
    Boolean abstraction:                 0.045s
    Solving time:                        0.053s (Max:     0.017s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.055s

Number of path formula cache hits:   853 (36%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.408s

Total number of created targets for pointer analysis: 3
   Number of created targets for uf: *unsigned_long_long_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 69, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.036s
Automaton transfers with branching:                0
Automaton transfer successors:                         2303 (count: 2303, min: 1, max: 1, avg: 1.00) [1 x 2303]

CPA algorithm statistics
------------------------
Number of iterations:            730
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   860
Max successors for one state:    2
Number of times merged:          112
Number of times stopped:         116
Number of times breaked:         4

Total time for CPA algorithm:         1.136s (Max:     0.579s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.246s
  Time for transfer relation:         0.706s
  Time for merge operator:            0.097s
  Time for stop operator:             0.007s
  Time for adding to reached set:     0.025s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                   8 (count: 4, min: 1, max: 3, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.092s
  Counterexample analysis:                             0.070s (Max:     0.024s, Calls: 4)
    Refinement sat check:                              0.058s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.003s
  ARG update:                                          0.010s

Length of refined path (in blocks):                       8 (count: 4, min: 1, max: 3, avg: 2.00)
Number of affected states:                                4 (count: 4, min: 0, max: 2, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 4, min: 0, max: 2, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               1 (count: 4, min: 0, max: 1, avg: 0.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 312
Max. size of reached set after ref.:  101
Avg. size of reached set before ref.: 205.50
Avg. size of reached set after ref.:  99.75

Total time for CEGAR algorithm:       1.255s
Time for refinements:                 0.119s
Average time for refinement:          0.029s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.300
  Visited lines:          1089
  Total lines:            1844
  Line coverage:          0.591
  Visited conditions:     106
  Total conditions:       270
  Condition coverage:     0.393

CPAchecker general statistics
-----------------------------
Number of program locations:     2192
Number of CFA edges:             2341
Number of relevant variables:    423
Number of functions:             40
Number of loops:                 4
Size of reached set:             317
  Number of reached locations:   276 (13%)
    Avg states per location:     1
    Max states per location:     3 (at node N1622)
  Number of reached functions:   12 (30%)
  Number of partitions:          317
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.388s
  Time for loading CPAs:          0.638s
  Time for loading parser:        0.562s
  Time for CFA construction:      2.060s
    Time for parsing file(s):     0.625s
    Time for AST to CFA:          0.664s
    Time for CFA sanity check:    0.126s
    Time for post-processing:     0.485s
      Time for var class.:        0.233s
Time for Analysis:                1.255s
CPU time for analysis:            1.250s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.646s
Total CPU time for CPAchecker:    4.630s
Time for statistics:              0.073s

Time for Garbage Collector:       0.126s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     33MB (    31 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
