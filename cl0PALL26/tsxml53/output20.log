scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--nftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_taj76x_q/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3466: Function pointer *__cil_tmp18 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3528: Function pointer *__cil_tmp22 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3466: Ignoring call via function pointer mtd_read_oob::__cil_tmp18 for which no suitable target was found in line: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3466: Ignoring function call through function pointer *__cil_tmp18: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3528: Ignoring call via function pointer mtd_write_oob::__cil_tmp22 for which no suitable target was found in line: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3528: Ignoring function call through function pointer *__cil_tmp22: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1250 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1218 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (3%)
  Times precision was empty:       169 (14%)
  Times precision was {false}:     146 (12%)
  Times result was cached:         797 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      138 (11%)
  Times result was 'false':        192 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         7373
  BDD entailment checks:           681
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       699
Number of predicates discovered:          2
Number of abstraction locations:          20
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1081
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.81
Number of irrelevant predicates:          218 (20%)
Number of preds handled by boolean abs:   138 (13%)
  Total number of models for allsat:      118
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.86

Time for post operator:                  4.717s
  Time for path formula creation:        4.645s
Time for strengthen operator:            0.140s
Time for prec operator:                 16.125s
  Time for abstraction:                 16.021s (Max:     1.943s, Count: 1250)
    Boolean abstraction:                 7.587s
    Solving time:                       12.545s (Max:     1.896s)
    Model enumeration time:              0.277s
    Time for BDD construction:           0.047s (Max:     0.011s)
Time for merge operator:                 0.671s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):    12.822s

Number of path formula cache hits:   98305 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.332s

Total number of created targets for pointer analysis: 17479
   Number of created targets for uf: *unsigned_short_int is 121
   Number of created targets for uf: *unsigned_char is 61
   Number of created targets for uf: *(unsigned_char)* is 49
   Number of created targets for uf: *unsigned_long_int is 20


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         259 (count: 2496, min: 0, max: 39, avg: 0.10)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.301s
Automaton transfers with branching:                0
Automaton transfer successors:                       139332 (count: 139345, min: 0, max: 1, avg: 1.00) [0 x 13, 1 x 139332]

CPA algorithm statistics
------------------------
Number of iterations:            28108
Max size of waitlist:            20
Average size of waitlist:        6
Number of computed successors:   32475
Max successors for one state:    2
Number of times merged:          3346
Number of times stopped:         3973
Number of times breaked:         13

Total time for CPA algorithm:        24.430s (Max:     5.093s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:     16.505s
  Time for transfer relation:         6.591s
  Time for merge operator:            0.798s
  Time for stop operator:             0.137s
  Time for adding to reached set:     0.078s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                  99 (count: 13, min: 2, max: 13, avg: 7.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.388s
  Counterexample analysis:                             1.255s (Max:     0.250s, Calls: 13)
    Refinement sat check:                              1.083s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.005s
  ARG update:                                          0.098s

Length of refined path (in blocks):                      99 (count: 13, min: 2, max: 13, avg: 7.62)
Number of affected states:                               86 (count: 13, min: 1, max: 12, avg: 6.62)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        86 (count: 13, min: 1, max: 12, avg: 6.62)
Length (states) of path with itp 'false':                 0 (count: 13, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              73 (count: 13, min: 0, max: 11, avg: 5.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 6448
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 1770.85
Avg. size of reached set after ref.:  13.00

Total time for CEGAR algorithm:      25.884s
Time for refinements:                 1.453s
Average time for refinement:          0.111s
Max time for refinement:              0.269s

Code Coverage
-----------------------------
  Function coverage:      0.850
  Visited lines:          5046
  Total lines:            5253
  Line coverage:          0.961
  Visited conditions:     362
  Total conditions:       394
  Condition coverage:     0.919

CPAchecker general statistics
-----------------------------
Number of program locations:     5625
Number of CFA edges:             5855
Number of relevant variables:    1816
Number of functions:             40
Number of loops:                 25
Size of reached set:             5458
  Number of reached locations:   1023 (18%)
    Avg states per location:     5
    Max states per location:     56 (at node N46)
  Number of reached functions:   34 (85%)
  Number of partitions:          5455
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5169 (before line 9230), Function NFTL_mount called from node N345, stack depth 3 [431bf770], stack [main, nftl_add_mtd, NFTL_mount]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          4.446s
  Time for loading CPAs:          0.759s
  Time for loading parser:        0.554s
  Time for CFA construction:      3.014s
    Time for parsing file(s):     0.705s
    Time for AST to CFA:          0.988s
    Time for CFA sanity check:    0.394s
    Time for post-processing:     0.819s
      Time for var class.:        0.337s
Time for Analysis:               25.884s
CPU time for analysis:           25.880s
Total time for CPAchecker:       30.334s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.183s

Time for Garbage Collector:       0.702s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 97MB (    93 MiB) max;     57MB (    55 MiB) avg;    103MB (    98 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8066MB (  7692 MiB) max;   8055MB (  7682 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
