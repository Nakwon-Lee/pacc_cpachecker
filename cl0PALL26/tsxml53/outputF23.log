scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--nftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ntagrn74/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3466: Function pointer *__cil_tmp18 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3528: Function pointer *__cil_tmp22 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3466: Ignoring call via function pointer mtd_read_oob::__cil_tmp18 for which no suitable target was found in line: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3466: Ignoring function call through function pointer *__cil_tmp18: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3528: Ignoring call via function pointer mtd_write_oob::__cil_tmp22 for which no suitable target was found in line: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3528: Ignoring function call through function pointer *__cil_tmp22: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5363 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5297 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (1%)
  Times precision was empty:       1608 (30%)
  Times precision was {false}:     801 (15%)
  Times result was cached:         2723 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      231 (4%)
  Times result was 'false':        844 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         33199
  BDD entailment checks:           3687
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       699
Number of predicates discovered:          2
Number of abstraction locations:          27
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         3755
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.64
Number of irrelevant predicates:          2320 (62%)
Number of preds handled by boolean abs:   231 (6%)
  Total number of models for allsat:      228
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                 11.908s
  Time for path formula creation:       11.680s
Time for strengthen operator:            0.443s
Time for prec operator:                 57.498s
  Time for abstraction:                 57.242s (Max:     1.821s, Count: 5363)
    Boolean abstraction:                 8.570s
    Solving time:                       46.602s (Max:     1.813s)
    Model enumeration time:              0.369s
    Time for BDD construction:           0.023s (Max:     0.012s)
Time for merge operator:                 1.980s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):    46.971s

Number of path formula cache hits:   435709 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.694s

Total number of created targets for pointer analysis: 123175
   Number of created targets for uf: *unsigned_short_int is 1041
   Number of created targets for uf: *unsigned_char is 161
   Number of created targets for uf: *(unsigned_char)* is 46
   Number of created targets for uf: *unsigned_long_int is 10


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         410 (count: 11101, min: 0, max: 84, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.792s
  Time for transition matches:                         0.466s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                       571454 (count: 571471, min: 0, max: 1, avg: 1.00) [0 x 17, 1 x 571454]

CPA algorithm statistics
------------------------
Number of iterations:            121093
Max size of waitlist:            39
Average size of waitlist:        20
Number of computed successors:   139880
Max successors for one state:    2
Number of times merged:          14756
Number of times stopped:         17458
Number of times breaked:         17

Total time for CPA algorithm:        78.618s (Max:    16.788s)
  Time for choose from waitlist:      0.108s
  Time for precision adjustment:     58.309s
  Time for transfer relation:        16.892s
  Time for merge operator:            2.276s
  Time for stop operator:             0.235s
  Time for adding to reached set:     0.251s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 140 (count: 17, min: 2, max: 13, avg: 8.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.755s
  Counterexample analysis:                             1.407s (Max:     0.206s, Calls: 17)
    Refinement sat check:                              1.258s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.017s
  ARG update:                                          0.303s

Length of refined path (in blocks):                     140 (count: 17, min: 2, max: 13, avg: 8.24)
Number of affected states:                              123 (count: 17, min: 1, max: 12, avg: 7.24)
Length (states) of path with itp 'true':                  0 (count: 17, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       123 (count: 17, min: 1, max: 12, avg: 7.24)
Length (states) of path with itp 'false':                 0 (count: 17, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             106 (count: 17, min: 0, max: 11, avg: 6.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 12394
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 6778.53
Avg. size of reached set after ref.:  13.00

Total time for CEGAR algorithm:      80.547s
Time for refinements:                 1.914s
Average time for refinement:          0.112s
Max time for refinement:              0.254s

Code Coverage
-----------------------------
  Function coverage:      0.850
  Visited lines:          5156
  Total lines:            5253
  Line coverage:          0.982
  Visited conditions:     378
  Total conditions:       394
  Condition coverage:     0.959

CPAchecker general statistics
-----------------------------
Number of program locations:     5625
Number of CFA edges:             5855
Number of relevant variables:    1816
Number of functions:             40
Number of loops:                 25
Size of reached set:             6565
  Number of reached locations:   1065 (19%)
    Avg states per location:     6
    Max states per location:     78 (at node N46)
  Number of reached functions:   34 (85%)
  Number of partitions:          6565
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.444s
  Time for loading CPAs:          0.773s
  Time for loading parser:        0.571s
  Time for CFA construction:      2.979s
    Time for parsing file(s):     0.745s
    Time for AST to CFA:          0.905s
    Time for CFA sanity check:    0.326s
    Time for post-processing:     0.860s
      Time for var class.:        0.393s
Time for Analysis:               80.547s
CPU time for analysis:           80.550s
Time for analyzing result:        0.006s
Total time for CPAchecker:       84.995s
Total CPU time for CPAchecker:   84.980s
Time for statistics:              0.197s

Time for Garbage Collector:       2.781s (in 163 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                183MB (   174 MiB) max;     98MB (    93 MiB) avg;    188MB (   179 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           238MB (   227 MiB) max;    160MB (   153 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8146MB (  7768 MiB) max;   8131MB (  7754 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
