scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--nftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_adbhlbvd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3466: Function pointer *__cil_tmp18 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3528: Function pointer *__cil_tmp22 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3466: Ignoring call via function pointer mtd_read_oob::__cil_tmp18 for which no suitable target was found in line: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3466: Ignoring function call through function pointer *__cil_tmp18: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3528: Ignoring call via function pointer mtd_write_oob::__cil_tmp22 for which no suitable target was found in line: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3528: Ignoring function call through function pointer *__cil_tmp22: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3271 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3207 (98%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         64 (2%)
  Times precision was empty:       572 (17%)
  Times precision was {false}:     384 (12%)
  Times result was cached:         2072 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      243 (7%)
  Times result was 'false':        185 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         18442
  BDD entailment checks:           2324
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       699
Number of predicates discovered:          2
Number of abstraction locations:          27
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2699
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.30
Number of irrelevant predicates:          852 (32%)
Number of preds handled by boolean abs:   243 (9%)
  Total number of models for allsat:      228
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Time for post operator:                  6.688s
  Time for path formula creation:        6.525s
Time for strengthen operator:            0.257s
Time for prec operator:                 22.948s
  Time for abstraction:                 22.739s (Max:     1.840s, Count: 3271)
    Boolean abstraction:                 9.675s
    Solving time:                       17.310s (Max:     1.792s)
    Model enumeration time:              0.421s
    Time for BDD construction:           0.045s (Max:     0.009s)
Time for merge operator:                 1.004s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):    17.731s

Number of path formula cache hits:   250835 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.951s

Total number of created targets for pointer analysis: 24617
   Number of created targets for uf: *unsigned_short_int is 81
   Number of created targets for uf: *unsigned_char is 161
   Number of created targets for uf: *(unsigned_char)* is 58
   Number of created targets for uf: *unsigned_long_int is 1080


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         459 (count: 6392, min: 0, max: 74, avg: 0.07)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.542s
  Time for transition matches:                         0.260s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       317202 (count: 317221, min: 0, max: 1, avg: 1.00) [0 x 19, 1 x 317202]

CPA algorithm statistics
------------------------
Number of iterations:            69078
Max size of waitlist:            19
Average size of waitlist:        8
Number of computed successors:   79614
Max successors for one state:    2
Number of times merged:          8059
Number of times stopped:         10094
Number of times breaked:         19

Total time for CPA algorithm:        35.778s (Max:     5.523s)
  Time for choose from waitlist:      0.072s
  Time for precision adjustment:     23.564s
  Time for transfer relation:        10.027s
  Time for merge operator:            1.273s
  Time for stop operator:             0.264s
  Time for adding to reached set:     0.191s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 147 (count: 19, min: 2, max: 11, avg: 7.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.496s
  Counterexample analysis:                             1.252s (Max:     0.142s, Calls: 19)
    Refinement sat check:                              1.099s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.013s
  ARG update:                                          0.185s

Length of refined path (in blocks):                     147 (count: 19, min: 2, max: 11, avg: 7.74)
Number of affected states:                              128 (count: 19, min: 1, max: 10, avg: 6.74)
Length (states) of path with itp 'true':                  0 (count: 19, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       128 (count: 19, min: 1, max: 10, avg: 6.74)
Length (states) of path with itp 'false':                 0 (count: 19, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 19, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             109 (count: 19, min: 0, max: 9, avg: 5.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 7076
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 3316.74
Avg. size of reached set after ref.:  13.00

Total time for CEGAR algorithm:      37.444s
Time for refinements:                 1.664s
Average time for refinement:          0.087s
Max time for refinement:              0.183s

Code Coverage
-----------------------------
  Function coverage:      0.850
  Visited lines:          5156
  Total lines:            5253
  Line coverage:          0.982
  Visited conditions:     378
  Total conditions:       394
  Condition coverage:     0.959

CPAchecker general statistics
-----------------------------
Number of program locations:     5625
Number of CFA edges:             5855
Number of relevant variables:    1816
Number of functions:             40
Number of loops:                 25
Size of reached set:             6565
  Number of reached locations:   1065 (19%)
    Avg states per location:     6
    Max states per location:     78 (at node N46)
  Number of reached functions:   34 (85%)
  Number of partitions:          6565
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.717s
  Time for loading CPAs:          0.818s
  Time for loading parser:        0.572s
  Time for CFA construction:      3.198s
    Time for parsing file(s):     0.867s
    Time for AST to CFA:          0.925s
    Time for CFA sanity check:    0.365s
    Time for post-processing:     0.941s
      Time for var class.:        0.369s
Time for Analysis:               37.445s
CPU time for analysis:           37.440s
Time for analyzing result:        0.006s
Total time for CPAchecker:       42.166s
Total CPU time for CPAchecker:   42.150s
Time for statistics:              0.195s

Time for Garbage Collector:       1.494s (in 90 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   118 MiB) max;     73MB (    70 MiB) avg;    139MB (   133 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           171MB (   163 MiB) max;    132MB (   126 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8135MB (  7759 MiB) max;   8124MB (  7748 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
