scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l03ixn66/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            886756 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  881306 (99%)
  Because of loop head:            5351 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         99 (0%)
  Times precision was empty:       4802 (1%)
  Times precision was {false}:     349 (0%)
  Times result was cached:         859546 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22059 (2%)
  Times result was 'false':        26273 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1879083
  BDD entailment checks:           300387
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          201
Number of abstraction locations:          177
Max number of predicates per location:    36
Avg number of predicates per location:    17
Total predicates per abstraction:         12029456
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 536.84
Number of irrelevant predicates:          4499068 (37%)
Number of preds handled by boolean abs:   253609 (2%)
  Total number of models for allsat:      960856
  Max number of models for allsat:        11064
  Avg number of models for allsat:        43.56

Time for post operator:                 29.335s
  Time for path formula creation:       25.480s
Time for strengthen operator:            6.244s
Time for prec operator:                676.103s
  Time for abstraction:                663.411s (Max:     2.080s, Count: 886756)
    Boolean abstraction:               192.437s
    Solving time:                       42.545s (Max:     0.016s)
    Model enumeration time:            100.265s
    Time for BDD construction:          45.402s (Max:     0.665s)
Time for merge operator:                 4.255s
Time for coverage check:                 1.118s
  Time for BDD entailment checks:        0.977s
Total time for SMT solver (w/o itp):   142.810s

Number of path formula cache hits:   7370626 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.248s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               220449
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      253256 (count: 524042, min: 0, max: 4184, avg: 0.48)
Time for BDD node cleanup:                             0.143s
Time for BDD garbage collection:                       0.545s (in 93 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.728s
  Time for transition matches:                         5.029s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      6280822 (count: 6280822, min: 1, max: 1, avg: 1.00) [1 x 6280822]

CPA algorithm statistics
------------------------
Number of iterations:            4735517
Max size of waitlist:            226
Average size of waitlist:        43
Number of computed successors:   5669000
Max successors for one state:    2
Number of times merged:          789348
Number of times stopped:         907305
Number of times breaked:         99

Total time for CPA algorithm:       859.327s (Max:    56.607s)
  Time for choose from waitlist:      1.850s
  Time for precision adjustment:    714.331s
  Time for transfer relation:        93.868s
  Time for merge operator:           15.073s
  Time for stop operator:             7.724s
  Time for adding to reached set:    10.966s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   99
Avg. length of target path (in blocks):               16077 (count: 99, min: 82, max: 277, avg: 162.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.988s
  Counterexample analysis:                            15.930s (Max:     0.518s, Calls: 99)
    Refinement sat check:                              4.641s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.277s
  Precision update:                                    0.234s
  ARG update:                                         13.315s

Length of refined path (in blocks):                   10318 (count: 99, min: 39, max: 234, avg: 104.22)
Number of affected states:                             8865 (count: 99, min: 1, max: 233, avg: 89.55)
Length (states) of path with itp 'true':               1354 (count: 99, min: 0, max: 103, avg: 13.68)
Length (states) of path with itp non-trivial itp:      8865 (count: 99, min: 1, max: 233, avg: 89.55)
Length (states) of path with itp 'false':                99 (count: 99, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1026 (count: 99, min: 0, max: 57, avg: 10.36)
Equal non-trivial interpolants along paths:            7740 (count: 99, min: 0, max: 231, avg: 78.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                99
Number of successful refinements:     99
Number of failed refinements:         0
Max. size of reached set before ref.: 215493
Max. size of reached set after ref.:  157536
Avg. size of reached set before ref.: 62181.16
Avg. size of reached set after ref.:  14797.08

Total time for CEGAR algorithm:     895.813s
Time for refinements:                35.012s
Average time for refinement:          0.353s
Max time for refinement:              1.171s

Code Coverage
-----------------------------
  Function coverage:      0.292
  Visited lines:          495
  Total lines:            1453
  Line coverage:          0.341
  Visited conditions:     200
  Total conditions:       498
  Condition coverage:     0.402

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             44399
  Number of reached locations:   481 (24%)
    Avg states per location:     92
    Max states per location:     492 (at node N1743)
  Number of reached functions:   33 (29%)
  Number of partitions:          44171
    Avg size of partitions:      1
    Max size of partitions:      50 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [4da656a8], stack [main, test]])
  Number of target states:       0
  Size of final wait list        162

Time for analysis setup:          4.406s
  Time for loading CPAs:          0.952s
  Time for loading parser:        0.765s
  Time for CFA construction:      2.569s
    Time for parsing file(s):     0.803s
    Time for AST to CFA:          0.691s
    Time for CFA sanity check:    0.246s
    Time for post-processing:     0.691s
      Time for var class.:        0.398s
Time for Analysis:              895.814s
CPU time for analysis:          895.770s
Total time for CPAchecker:      900.224s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.700s

Time for Garbage Collector:      71.698s (in 1514 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                715MB (   682 MiB) max;    310MB (   295 MiB) avg;    729MB (   695 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           731MB (   697 MiB) max;    468MB (   447 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8821MB (  8413 MiB) max;   8453MB (  8061 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
