scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yhzehu5z/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 226: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 702: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            41 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            21 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (49%)
  Times precision was empty:       3 (7%)
  Times precision was {false}:     17 (41%)
  Times result was cached:         4 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (41%)
  Times result was 'false':        17 (41%)
Number of strengthen sat checks:   0
Number of coverage checks:         565
  BDD entailment checks:           9
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          6
Number of abstraction locations:          3
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         69
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 2.03
Number of irrelevant predicates:          21 (30%)
Number of preds handled by boolean abs:   44 (64%)
  Total number of models for allsat:      30
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.76

Time for post operator:                  0.444s
  Time for path formula creation:        0.404s
Time for strengthen operator:            0.015s
Time for prec operator:                  0.408s
  Time for abstraction:                  0.372s (Max:     0.026s, Count: 41)
    Boolean abstraction:                 0.120s
    Solving time:                        0.124s (Max:     0.012s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.019s (Max:     0.009s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.130s

Number of path formula cache hits:   2515 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.376s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               249
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          64 (count: 244, min: 0, max: 64, avg: 0.26)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.127s
Automaton transfers with branching:                0
Automaton transfer successors:                         4026 (count: 4026, min: 1, max: 1, avg: 1.00) [1 x 4026]

CPA algorithm statistics
------------------------
Number of iterations:            3105
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   3429
Max successors for one state:    2
Number of times merged:          278
Number of times stopped:         281
Number of times breaked:         5

Total time for CPA algorithm:         1.997s (Max:     0.403s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      0.626s
  Time for transfer relation:         0.975s
  Time for merge operator:            0.148s
  Time for stop operator:             0.056s
  Time for adding to reached set:     0.075s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  17 (count: 5, min: 2, max: 5, avg: 3.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.165s
  Counterexample analysis:                             0.095s (Max:     0.023s, Calls: 5)
    Refinement sat check:                              0.041s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.006s
  ARG update:                                          0.036s

Length of refined path (in blocks):                      15 (count: 5, min: 2, max: 4, avg: 3.00)
Number of affected states:                               10 (count: 5, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        10 (count: 5, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 1 (count: 5, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           4 (count: 5, min: 0, max: 1, avg: 0.80)
Equal non-trivial interpolants along paths:               1 (count: 5, min: 0, max: 1, avg: 0.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 959
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 514.60
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:       2.194s
Time for refinements:                 0.194s
Average time for refinement:          0.038s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          136
  Total lines:            439
  Line coverage:          0.310
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     632
Number of CFA edges:             681
Number of relevant variables:    113
Number of functions:             38
Number of loops:                 5
Size of reached set:             704
  Number of reached locations:   183 (29%)
    Avg states per location:     3
    Max states per location:     16 (at node N13)
  Number of reached functions:   26 (68%)
  Number of partitions:          703
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N128 (before lines 266-315), Function test called from node N532, stack depth 3 [5b7a8434], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.560s
  Time for loading CPAs:          0.856s
  Time for loading parser:        0.867s
  Time for CFA construction:      1.600s
    Time for parsing file(s):     0.556s
    Time for AST to CFA:          0.412s
    Time for CFA sanity check:    0.105s
    Time for post-processing:     0.365s
      Time for var class.:        0.162s
Time for Analysis:                2.194s
CPU time for analysis:            2.200s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.760s
Total CPU time for CPAchecker:    5.760s
Time for statistics:              0.145s

Time for Garbage Collector:       0.125s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     30MB (    29 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8069MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
