scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8pmxhwis/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 182: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1764 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1723 (98%)
  Because of loop head:            28 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       360 (20%)
  Times precision was {false}:     40 (2%)
  Times result was cached:         1247 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      117 (7%)
  Times result was 'false':        170 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         469
  BDD entailment checks:           243
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          44
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1963
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 12.50
Number of irrelevant predicates:          619 (32%)
Number of preds handled by boolean abs:   167 (9%)
  Total number of models for allsat:      126
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.720s
  Time for path formula creation:        0.699s
Time for strengthen operator:            0.052s
Time for prec operator:                  1.180s
  Time for abstraction:                  1.055s (Max:     0.021s, Count: 1764)
    Boolean abstraction:                 0.150s
    Solving time:                        0.130s (Max:     0.012s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.027s (Max:     0.008s)
Time for merge operator:                 0.034s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.136s

Number of path formula cache hits:   3542 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.659s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         203 (count: 1527, min: 0, max: 118, avg: 0.13)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.107s
Automaton transfers with branching:                0
Automaton transfer successors:                         6431 (count: 6431, min: 1, max: 1, avg: 1.00) [1 x 6431]

CPA algorithm statistics
------------------------
Number of iterations:            4941
Max size of waitlist:            14
Average size of waitlist:        6
Number of computed successors:   5494
Max successors for one state:    2
Number of times merged:          113
Number of times stopped:         310
Number of times breaked:         13

Total time for CPA algorithm:         3.258s (Max:     0.418s)
  Time for choose from waitlist:      0.054s
  Time for precision adjustment:      1.453s
  Time for transfer relation:         1.382s
  Time for merge operator:            0.064s
  Time for stop operator:             0.087s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 639 (count: 13, min: 32, max: 70, avg: 49.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.335s
  Counterexample analysis:                             0.160s (Max:     0.027s, Calls: 13)
    Refinement sat check:                              0.086s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.017s
  ARG update:                                          0.059s

Length of refined path (in blocks):                     427 (count: 13, min: 20, max: 54, avg: 32.85)
Number of affected states:                              362 (count: 13, min: 17, max: 53, avg: 27.85)
Length (states) of path with itp 'true':                 52 (count: 13, min: 0, max: 13, avg: 4.00)
Length (states) of path with itp non-trivial itp:       362 (count: 13, min: 17, max: 53, avg: 27.85)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 13, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             348 (count: 13, min: 16, max: 52, avg: 26.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 847
Max. size of reached set after ref.:  533
Avg. size of reached set before ref.: 469.85
Avg. size of reached set after ref.:  142.00

Total time for CEGAR algorithm:       3.666s
Time for refinements:                 0.405s
Average time for refinement:          0.031s
Max time for refinement:              0.086s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          111
  Total lines:            439
  Line coverage:          0.253
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     635
Number of CFA edges:             685
Number of relevant variables:    116
Number of functions:             39
Number of loops:                 5
Size of reached set:             753
  Number of reached locations:   150 (24%)
    Avg states per location:     5
    Max states per location:     28 (at node N172)
  Number of reached functions:   20 (51%)
  Number of partitions:          746
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N130 (before lines 271-318), Function test called from node N567, stack depth 3 [733aa9d8], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.526s
  Time for loading CPAs:          0.929s
  Time for loading parser:        0.842s
  Time for CFA construction:      1.547s
    Time for parsing file(s):     0.535s
    Time for AST to CFA:          0.365s
    Time for CFA sanity check:    0.128s
    Time for post-processing:     0.344s
      Time for var class.:        0.168s
Time for Analysis:                3.666s
CPU time for analysis:            3.670s
Time for analyzing result:        0.005s
Total time for CPAchecker:        7.200s
Total CPU time for CPAchecker:    7.190s
Time for statistics:              0.117s

Time for Garbage Collector:       0.134s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8082MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
