scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product40_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_eccd_3kx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 166: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 645: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 966: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 482: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            18640 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18414 (99%)
  Because of loop head:            111 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         115 (1%)
  Times precision was empty:       960 (5%)
  Times precision was {false}:     260 (1%)
  Times result was cached:         12340 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5080 (27%)
  Times result was 'false':        2554 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         11978
  BDD entailment checks:           8868
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          23
Number of abstraction locations:          57
Max number of predicates per location:    13
Avg number of predicates per location:    7
Total predicates per abstraction:         117083
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 21.93
Number of irrelevant predicates:          28010 (24%)
Number of preds handled by boolean abs:   32122 (27%)
  Total number of models for allsat:      8146
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.60

Time for post operator:                  2.176s
  Time for path formula creation:        2.098s
Time for strengthen operator:            0.124s
Time for prec operator:                 19.307s
  Time for abstraction:                 18.746s (Max:     0.034s, Count: 18640)
    Boolean abstraction:                 6.010s
    Solving time:                        4.167s (Max:     0.016s)
    Model enumeration time:              0.643s
    Time for BDD construction:           0.416s (Max:     0.021s)
Time for merge operator:                 0.112s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     4.810s

Number of path formula cache hits:   44386 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.802s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4539
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16241 (count: 44709, min: 0, max: 1064, avg: 0.36)
Time for BDD node cleanup:                             0.038s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.352s
Automaton transfers with branching:                0
Automaton transfer successors:                        69913 (count: 69913, min: 1, max: 1, avg: 1.00) [1 x 69913]

CPA algorithm statistics
------------------------
Number of iterations:            54805
Max size of waitlist:            18
Average size of waitlist:        9
Number of computed successors:   61273
Max successors for one state:    2
Number of times merged:          1555
Number of times stopped:         3569
Number of times breaked:         115

Total time for CPA algorithm:        26.205s (Max:     2.391s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:     20.314s
  Time for transfer relation:         4.240s
  Time for merge operator:            0.238s
  Time for stop operator:             0.341s
  Time for adding to reached set:     0.317s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   115
Avg. length of target path (in blocks):                7596 (count: 115, min: 32, max: 147, avg: 66.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.800s
  Counterexample analysis:                             2.216s (Max:     0.128s, Calls: 115)
    Refinement sat check:                              0.840s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.095s
  Precision update:                                    0.109s
  ARG update:                                          0.222s

Length of refined path (in blocks):                    6138 (count: 115, min: 14, max: 125, avg: 53.37)
Number of affected states:                             2170 (count: 115, min: 1, max: 88, avg: 18.87)
Length (states) of path with itp 'true':               3853 (count: 115, min: 0, max: 72, avg: 33.50)
Length (states) of path with itp non-trivial itp:      2170 (count: 115, min: 1, max: 88, avg: 18.87)
Length (states) of path with itp 'false':               115 (count: 115, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          71 (count: 115, min: 0, max: 7, avg: 0.62)
Equal non-trivial interpolants along paths:            1984 (count: 115, min: 0, max: 80, avg: 17.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                115
Number of successful refinements:     115
Number of failed refinements:         0
Max. size of reached set before ref.: 5779
Max. size of reached set after ref.:  3569
Avg. size of reached set before ref.: 1401.30
Avg. size of reached set after ref.:  965.52

Total time for CEGAR algorithm:      29.593s
Time for refinements:                 3.221s
Average time for refinement:          0.028s
Max time for refinement:              0.157s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          137
  Total lines:            442
  Line coverage:          0.310
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     638
Number of CFA edges:             689
Number of relevant variables:    115
Number of functions:             39
Number of loops:                 5
Size of reached set:             5036
  Number of reached locations:   188 (29%)
    Avg states per location:     26
    Max states per location:     134 (at node N472)
  Number of reached functions:   27 (69%)
  Number of partitions:          4949
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N146 (after line 292), Function test called from node N537, stack depth 3 [204f76da], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.395s
  Time for loading CPAs:          0.872s
  Time for loading parser:        0.801s
  Time for CFA construction:      1.470s
    Time for parsing file(s):     0.513s
    Time for AST to CFA:          0.362s
    Time for CFA sanity check:    0.097s
    Time for post-processing:     0.326s
      Time for var class.:        0.131s
Time for Analysis:               29.594s
CPU time for analysis:           29.600s
Time for analyzing result:        0.004s
Total time for CPAchecker:       32.994s
Total CPU time for CPAchecker:   32.980s
Time for statistics:              0.191s

Time for Garbage Collector:       0.635s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     46MB (    43 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8122MB (  7745 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
