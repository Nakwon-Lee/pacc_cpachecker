scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fj8v9ios/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            634 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            567 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         67 (11%)
  Times precision was empty:       152 (24%)
  Times precision was {false}:     55 (9%)
  Times result was cached:         361 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66 (10%)
  Times result was 'false':        137 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         8128
  BDD entailment checks:           204
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       958
Number of predicates discovered:          2
Number of abstraction locations:          14
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         482
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.98
Number of irrelevant predicates:          106 (22%)
Number of preds handled by boolean abs:   66 (14%)
  Total number of models for allsat:      55
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.83

Time for post operator:                  7.631s
  Time for path formula creation:        7.427s
Time for strengthen operator:            0.389s
Time for prec operator:                  4.880s
  Time for abstraction:                  4.708s (Max:     1.150s, Count: 634)
    Boolean abstraction:                 2.019s
    Solving time:                        2.440s (Max:     0.809s)
    Model enumeration time:              0.235s
    Time for BDD construction:           0.022s (Max:     0.006s)
Time for merge operator:                 2.491s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     2.675s

Number of path formula cache hits:   105075 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.876s

Total number of created targets for pointer analysis: 1560
   Number of created targets for uf: *unsigned_short_int is 9
   Number of created targets for uf: *unsigned_int is 6


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         118 (count: 1037, min: 0, max: 58, avg: 0.11)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.696s
  Time for transition matches:                         0.346s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       169881 (count: 169881, min: 1, max: 1, avg: 1.00) [1 x 169881]

CPA algorithm statistics
------------------------
Number of iterations:            31495
Max size of waitlist:            43
Average size of waitlist:        17
Number of computed successors:   36057
Max successors for one state:    2
Number of times merged:          3962
Number of times stopped:         4152
Number of times breaked:         13

Total time for CPA algorithm:        20.949s (Max:     3.680s)
  Time for choose from waitlist:      0.070s
  Time for precision adjustment:      5.553s
  Time for transfer relation:        11.438s
  Time for merge operator:            2.820s
  Time for stop operator:             0.165s
  Time for adding to reached set:     0.284s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                  57 (count: 13, min: 2, max: 7, avg: 4.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.798s
  Counterexample analysis:                             0.608s (Max:     0.103s, Calls: 13)
    Refinement sat check:                              0.532s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.020s
  ARG update:                                          0.151s

Length of refined path (in blocks):                      57 (count: 13, min: 2, max: 7, avg: 4.38)
Number of affected states:                               43 (count: 13, min: 1, max: 6, avg: 3.31)
Length (states) of path with itp 'true':                  1 (count: 13, min: 0, max: 1, avg: 0.08)
Length (states) of path with itp non-trivial itp:        43 (count: 13, min: 1, max: 6, avg: 3.31)
Length (states) of path with itp 'false':                 0 (count: 13, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              30 (count: 13, min: 0, max: 5, avg: 2.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 3538
Max. size of reached set after ref.:  2310
Avg. size of reached set before ref.: 2441.77
Avg. size of reached set after ref.:  205.38

Total time for CEGAR algorithm:      21.869s
Time for refinements:                 0.919s
Average time for refinement:          0.070s
Max time for refinement:              0.111s

Code Coverage
-----------------------------
  Function coverage:      0.797
  Visited lines:          7208
  Total lines:            8030
  Line coverage:          0.898
  Visited conditions:     456
  Total conditions:       546
  Condition coverage:     0.835

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             2695
  Number of reached locations:   1327 (15%)
    Avg states per location:     2
    Max states per location:     28 (at node N842)
  Number of reached functions:   55 (80%)
  Number of partitions:          2694
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6952 (before line 13912), Function mwifiex_process_int_status called from node N7791, stack depth 2 [2eb4a3ec], stack [main, mwifiex_process_int_status]])
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          7.862s
  Time for loading CPAs:          1.198s
  Time for loading parser:        0.703s
  Time for CFA construction:      5.787s
    Time for parsing file(s):     1.426s
    Time for AST to CFA:          1.933s
    Time for CFA sanity check:    0.660s
    Time for post-processing:     1.567s
      Time for var class.:        0.735s
Time for Analysis:               21.869s
CPU time for analysis:           21.870s
Total time for CPAchecker:       29.738s
Total CPU time for CPAchecker:   29.720s
Time for statistics:              0.164s

Time for Garbage Collector:       1.165s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                111MB (   106 MiB) max;     62MB (    59 MiB) avg;    116MB (   110 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     33MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8131MB (  7754 MiB) max;   8117MB (  7741 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
