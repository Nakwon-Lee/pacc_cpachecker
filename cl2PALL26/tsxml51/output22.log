scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rleoxc03/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            614 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            553 (90%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (10%)
  Times precision was empty:       285 (46%)
  Times precision was {false}:     46 (7%)
  Times result was cached:         237 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      46 (7%)
  Times result was 'false':        81 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         9600
  BDD entailment checks:           244
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       958
Number of predicates discovered:          2
Number of abstraction locations:          12
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         329
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.58
Number of irrelevant predicates:          132 (40%)
Number of preds handled by boolean abs:   46 (14%)
  Total number of models for allsat:      41
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.89

Time for post operator:                  7.266s
  Time for path formula creation:        7.038s
Time for strengthen operator:            0.317s
Time for prec operator:                  6.571s
  Time for abstraction:                  6.427s (Max:     1.110s, Count: 614)
    Boolean abstraction:                 2.333s
    Solving time:                        3.947s (Max:     0.763s)
    Model enumeration time:              0.265s
    Time for BDD construction:           0.015s (Max:     0.010s)
Time for merge operator:                 2.126s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     4.212s

Number of path formula cache hits:   121660 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.447s

Total number of created targets for pointer analysis: 2086
   Number of created targets for uf: *unsigned_short_int is 16
   Number of created targets for uf: *unsigned_int is 29


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          88 (count: 1049, min: 0, max: 8, avg: 0.08)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.608s
  Time for transition matches:                         0.289s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       183807 (count: 183807, min: 1, max: 1, avg: 1.00) [1 x 183807]

CPA algorithm statistics
------------------------
Number of iterations:            34368
Max size of waitlist:            55
Average size of waitlist:        22
Number of computed successors:   39639
Max successors for one state:    2
Number of times merged:          4678
Number of times stopped:         4863
Number of times breaked:         11

Total time for CPA algorithm:        21.433s (Max:     3.915s)
  Time for choose from waitlist:      0.118s
  Time for precision adjustment:      7.230s
  Time for transfer relation:        10.761s
  Time for merge operator:            2.368s
  Time for stop operator:             0.133s
  Time for adding to reached set:     0.313s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  45 (count: 11, min: 2, max: 7, avg: 4.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.765s
  Counterexample analysis:                             0.567s (Max:     0.153s, Calls: 11)
    Refinement sat check:                              0.455s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.014s
  ARG update:                                          0.154s

Length of refined path (in blocks):                      45 (count: 11, min: 2, max: 7, avg: 4.09)
Number of affected states:                               32 (count: 11, min: 1, max: 6, avg: 2.91)
Length (states) of path with itp 'true':                  2 (count: 11, min: 0, max: 1, avg: 0.18)
Length (states) of path with itp non-trivial itp:        32 (count: 11, min: 1, max: 6, avg: 2.91)
Length (states) of path with itp 'false':                 0 (count: 11, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              21 (count: 11, min: 0, max: 5, avg: 1.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 4343
Max. size of reached set after ref.:  2263
Avg. size of reached set before ref.: 3263.27
Avg. size of reached set after ref.:  434.45

Total time for CEGAR algorithm:      22.315s
Time for refinements:                 0.879s
Average time for refinement:          0.079s
Max time for refinement:              0.190s

Code Coverage
-----------------------------
  Function coverage:      0.797
  Visited lines:          7403
  Total lines:            8030
  Line coverage:          0.922
  Visited conditions:     472
  Total conditions:       546
  Condition coverage:     0.864

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             3578
  Number of reached locations:   1364 (16%)
    Avg states per location:     2
    Max states per location:     51 (at node N842)
  Number of reached functions:   55 (80%)
  Number of partitions:          3577
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N7828 (before line 14982), Function main called from node N7675, stack depth 1 [49a38b1], stack [main]])
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:          7.965s
  Time for loading CPAs:          1.243s
  Time for loading parser:        0.696s
  Time for CFA construction:      5.874s
    Time for parsing file(s):     1.317s
    Time for AST to CFA:          2.035s
    Time for CFA sanity check:    0.732s
    Time for post-processing:     1.664s
      Time for var class.:        0.756s
Time for Analysis:               22.315s
CPU time for analysis:           22.310s
Total time for CPAchecker:       30.287s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.194s

Time for Garbage Collector:       1.036s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   117 MiB) max;     68MB (    65 MiB) avg;    126MB (   121 MiB) peak
Used non-heap memory:             46MB (    43 MiB) max;     38MB (    37 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
