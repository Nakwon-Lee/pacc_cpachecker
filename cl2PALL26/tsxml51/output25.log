scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w15z2blq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            605 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            543 (90%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (10%)
  Times precision was empty:       240 (40%)
  Times precision was {false}:     58 (10%)
  Times result was cached:         275 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32 (5%)
  Times result was 'false':        65 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         11485
  BDD entailment checks:           163
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       958
Number of predicates discovered:          2
Number of abstraction locations:          13
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         365
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.06
Number of irrelevant predicates:          152 (42%)
Number of preds handled by boolean abs:   32 (9%)
  Total number of models for allsat:      27
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.84

Time for post operator:                  7.472s
  Time for path formula creation:        7.221s
Time for strengthen operator:            0.383s
Time for prec operator:                  4.667s
  Time for abstraction:                  4.518s (Max:     1.156s, Count: 605)
    Boolean abstraction:                 1.571s
    Solving time:                        2.416s (Max:     0.847s)
    Model enumeration time:              0.186s
    Time for BDD construction:           0.011s (Max:     0.008s)
Time for merge operator:                 2.144s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     2.602s

Number of path formula cache hits:   159594 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.446s

Total number of created targets for pointer analysis: 1784
   Number of created targets for uf: *unsigned_short_int is 16
   Number of created targets for uf: *unsigned_int is 32


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          60 (count: 901, min: 0, max: 8, avg: 0.07)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.704s
  Time for transition matches:                         0.317s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       217495 (count: 217495, min: 1, max: 1, avg: 1.00) [1 x 217495]

CPA algorithm statistics
------------------------
Number of iterations:            40015
Max size of waitlist:            46
Average size of waitlist:        21
Number of computed successors:   46367
Max successors for one state:    2
Number of times merged:          5661
Number of times stopped:         5800
Number of times breaked:         21

Total time for CPA algorithm:        20.615s (Max:     3.340s)
  Time for choose from waitlist:      0.140s
  Time for precision adjustment:      5.443s
  Time for transfer relation:        11.450s
  Time for merge operator:            2.440s
  Time for stop operator:             0.237s
  Time for adding to reached set:     0.229s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                  86 (count: 21, min: 2, max: 7, avg: 4.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.598s
  Counterexample analysis:                             1.365s (Max:     0.179s, Calls: 21)
    Refinement sat check:                              1.186s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.021s
  ARG update:                                          0.186s

Length of refined path (in blocks):                      86 (count: 21, min: 2, max: 7, avg: 4.10)
Number of affected states:                               55 (count: 21, min: 1, max: 6, avg: 2.62)
Length (states) of path with itp 'true':                 10 (count: 21, min: 0, max: 1, avg: 0.48)
Length (states) of path with itp non-trivial itp:        55 (count: 21, min: 1, max: 6, avg: 2.62)
Length (states) of path with itp 'false':                 0 (count: 21, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              34 (count: 21, min: 0, max: 5, avg: 1.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 3106
Max. size of reached set after ref.:  1261
Avg. size of reached set before ref.: 2412.43
Avg. size of reached set after ref.:  615.90

Total time for CEGAR algorithm:      22.510s
Time for refinements:                 1.869s
Average time for refinement:          0.089s
Max time for refinement:              0.217s

Code Coverage
-----------------------------
  Function coverage:      0.797
  Visited lines:          7139
  Total lines:            8030
  Line coverage:          0.889
  Visited conditions:     458
  Total conditions:       546
  Condition coverage:     0.839

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             2775
  Number of reached locations:   1322 (15%)
    Avg states per location:     2
    Max states per location:     36 (at node N842)
  Number of reached functions:   55 (80%)
  Number of partitions:          2773
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N7828 (before line 14982), Function main called from node N7675, stack depth 1 [49a38b1], stack [main]])
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          7.731s
  Time for loading CPAs:          1.206s
  Time for loading parser:        0.735s
  Time for CFA construction:      5.647s
    Time for parsing file(s):     1.306s
    Time for AST to CFA:          1.862s
    Time for CFA sanity check:    0.652s
    Time for post-processing:     1.625s
      Time for var class.:        0.775s
Time for Analysis:               22.510s
CPU time for analysis:           22.510s
Total time for CPAchecker:       30.248s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.169s

Time for Garbage Collector:       1.055s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                115MB (   110 MiB) max;     69MB (    66 MiB) avg;    123MB (   117 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     39MB (    37 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8119MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
