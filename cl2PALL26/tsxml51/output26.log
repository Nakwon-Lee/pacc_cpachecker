scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ctl15bsn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            487 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            443 (91%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (9%)
  Times precision was empty:       184 (38%)
  Times precision was {false}:     63 (13%)
  Times result was cached:         202 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      38 (8%)
  Times result was 'false':        52 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         9898
  BDD entailment checks:           140
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       958
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         303
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.00
Number of irrelevant predicates:          122 (40%)
Number of preds handled by boolean abs:   38 (13%)
  Total number of models for allsat:      34
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.89

Time for post operator:                  7.409s
  Time for path formula creation:        7.198s
Time for strengthen operator:            0.295s
Time for prec operator:                  5.280s
  Time for abstraction:                  5.111s (Max:     1.031s, Count: 487)
    Boolean abstraction:                 2.007s
    Solving time:                        3.142s (Max:     0.721s)
    Model enumeration time:              0.236s
    Time for BDD construction:           0.020s (Max:     0.013s)
Time for merge operator:                 2.400s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.003s
Total time for SMT solver (w/o itp):     3.378s

Number of path formula cache hits:   115784 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.653s

Total number of created targets for pointer analysis: 2523
   Number of created targets for uf: *unsigned_short_int is 22
   Number of created targets for uf: *unsigned_int is 16


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          75 (count: 885, min: 0, max: 11, avg: 0.08)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.539s
  Time for transition matches:                         0.302s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       182524 (count: 182524, min: 1, max: 1, avg: 1.00) [1 x 182524]

CPA algorithm statistics
------------------------
Number of iterations:            33851
Max size of waitlist:            44
Average size of waitlist:        21
Number of computed successors:   39293
Max successors for one state:    2
Number of times merged:          4879
Number of times stopped:         4994
Number of times breaked:         17

Total time for CPA algorithm:        21.003s (Max:     3.190s)
  Time for choose from waitlist:      0.129s
  Time for precision adjustment:      6.337s
  Time for transfer relation:        10.969s
  Time for merge operator:            2.638s
  Time for stop operator:             0.130s
  Time for adding to reached set:     0.238s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                  79 (count: 17, min: 2, max: 7, avg: 4.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.411s
  Counterexample analysis:                             1.186s (Max:     0.191s, Calls: 17)
    Refinement sat check:                              1.060s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.020s
  ARG update:                                          0.169s

Length of refined path (in blocks):                      79 (count: 17, min: 2, max: 7, avg: 4.65)
Number of affected states:                               54 (count: 17, min: 1, max: 6, avg: 3.18)
Length (states) of path with itp 'true':                  8 (count: 17, min: 0, max: 1, avg: 0.47)
Length (states) of path with itp non-trivial itp:        54 (count: 17, min: 1, max: 6, avg: 3.18)
Length (states) of path with itp 'false':                 0 (count: 17, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              37 (count: 17, min: 0, max: 5, avg: 2.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 3193
Max. size of reached set after ref.:  1462
Avg. size of reached set before ref.: 2601.06
Avg. size of reached set after ref.:  693.00

Total time for CEGAR algorithm:      22.562s
Time for refinements:                 1.536s
Average time for refinement:          0.090s
Max time for refinement:              0.200s

Code Coverage
-----------------------------
  Function coverage:      0.797
  Visited lines:          6699
  Total lines:            8030
  Line coverage:          0.834
  Visited conditions:     428
  Total conditions:       546
  Condition coverage:     0.784

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             1811
  Number of reached locations:   1236 (14%)
    Avg states per location:     1
    Max states per location:     27 (at node N842)
  Number of reached functions:   55 (80%)
  Number of partitions:          1811
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          7.715s
  Time for loading CPAs:          1.352s
  Time for loading parser:        0.689s
  Time for CFA construction:      5.499s
    Time for parsing file(s):     1.190s
    Time for AST to CFA:          1.825s
    Time for CFA sanity check:    0.623s
    Time for post-processing:     1.686s
      Time for var class.:        0.890s
Time for Analysis:               22.562s
CPU time for analysis:           22.560s
Total time for CPAchecker:       30.284s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.141s

Time for Garbage Collector:       1.412s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   114 MiB) max;     71MB (    68 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     38MB (    37 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:           176MB (   168 MiB) max;    127MB (   122 MiB) avg
Allocated non-heap memory:        47MB (    44 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
