scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--media--dvb--dvb-usb--dvb-usb-ttusb2.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mm_06z6h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8032: Function pointer *__a___0 with type struct dvb_frontend *(*)(const struct tda10048_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7941: Function pointer *__a with type struct dvb_frontend *(*)(const struct tda10023_config *, struct i2c_adapter *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7669: Function pointer *__a with type struct dvb_frontend *(*)(const struct tda10086_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8458: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, u8 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8370: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8210: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, int, struct i2c_adapter *, struct tda827x_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_ca_en50221_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_generic_rw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8210: Ignoring call via function pointer ttusb2_tuner_tda827x_attach::__a for which no suitable target was found in line: tmp___4 = (*__a)(fe, 97, __cil_tmp38, &tda827x_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8210: Ignoring function call through function pointer *__a: tmp___4 = (*__a)(fe, 97, __cil_tmp38, &tda827x_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8032: Ignoring call via function pointer ttusb2_frontend_tda10023_attach::__a___0 for which no suitable target was found in line: tmp___11 = (*__a___0)(__cil_tmp70, __cil_tmp74); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8032: Ignoring function call through function pointer *__a___0: tmp___11 = (*__a___0)(__cil_tmp70, __cil_tmp74); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7941: Ignoring call via function pointer ttusb2_frontend_tda10023_attach::__a for which no suitable target was found in line: tmp___5 = (*__a)(__cil_tmp39, __cil_tmp43, __cil_tmp44); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7941: Ignoring function call through function pointer *__a: tmp___5 = (*__a)(__cil_tmp39, __cil_tmp43, __cil_tmp44); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_ca_en50221_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_keydown to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_keyup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8370: Ignoring call via function pointer ttusb2_tuner_tda826x_attach::__a for which no suitable target was found in line: tmp___4 = (*__a)(__cil_tmp30, 96, __cil_tmp34, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8370: Ignoring function call through function pointer *__a: tmp___4 = (*__a)(__cil_tmp30, 96, __cil_tmp34, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8458: Ignoring call via function pointer ttusb2_tuner_tda826x_attach::__a___0 for which no suitable target was found in line: tmp___10 = (*__a___0)(__cil_tmp55, __cil_tmp59, __cil_tmp60, __cil_tmp61); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8458: Ignoring function call through function pointer *__a___0: tmp___10 = (*__a___0)(__cil_tmp55, __cil_tmp59, __cil_tmp60, __cil_tmp61); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7669: Ignoring call via function pointer ttusb2_frontend_tda10086_attach::__a for which no suitable target was found in line: tmp___6 = (*__a)(__cil_tmp24, __cil_tmp28); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7669: Ignoring function call through function pointer *__a: tmp___6 = (*__a)(__cil_tmp24, __cil_tmp28); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            18 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (83%)
  Times precision was empty:       2 (11%)
  Times precision was {false}:     14 (78%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2 (11%)
  Times result was 'false':        14 (78%)
Number of strengthen sat checks:   0
Number of coverage checks:         363
  BDD entailment checks:           1
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       289
Number of predicates discovered:          2
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         16
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          14 (88%)
Number of preds handled by boolean abs:   2 (13%)
  Total number of models for allsat:      2
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.327s
  Time for path formula creation:        1.300s
Time for strengthen operator:            0.028s
Time for prec operator:                  0.512s
  Time for abstraction:                  0.504s (Max:     0.356s, Count: 18)
    Boolean abstraction:                 0.312s
    Solving time:                        0.303s (Max:     0.277s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.013s (Max:     0.013s)
Time for merge operator:                 0.338s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.314s

Number of path formula cache hits:   378 (8%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.210s

Total number of created targets for pointer analysis: 78
   Number of created targets for uf: *unsigned_char is 16


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           5 (count: 103, min: 0, max: 5, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.134s
Automaton transfers with branching:                0
Automaton transfer successors:                         4954 (count: 4954, min: 1, max: 1, avg: 1.00) [1 x 4954]

CPA algorithm statistics
------------------------
Number of iterations:            1198
Max size of waitlist:            22
Average size of waitlist:        11
Number of computed successors:   1408
Max successors for one state:    2
Number of times merged:          181
Number of times stopped:         182
Number of times breaked:         1

Total time for CPA algorithm:         3.216s (Max:     2.202s)
  Time for choose from waitlist:      0.041s
  Time for precision adjustment:      0.709s
  Time for transfer relation:         1.892s
  Time for merge operator:            0.385s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.078s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.039s
  Counterexample analysis:                             0.016s (Max:     0.016s, Calls: 1)
    Refinement sat check:                              0.005s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.009s
  ARG update:                                          0.002s

Length of refined path (in blocks):                       2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of affected states:                                1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 1, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 1, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 144
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 144.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.271s
Time for refinements:                 0.055s
Average time for refinement:          0.055s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.419
  Visited lines:          2214
  Total lines:            2975
  Line coverage:          0.744
  Visited conditions:     160
  Total conditions:       238
  Condition coverage:     0.672

CPAchecker general statistics
-----------------------------
Number of program locations:     3290
Number of CFA edges:             3416
Number of relevant variables:    717
Number of functions:             43
Number of loops:                 2
Size of reached set:             1072
  Number of reached locations:   452 (14%)
    Avg states per location:     2
    Max states per location:     14 (at node N2341)
  Number of reached functions:   18 (42%)
  Number of partitions:          1072
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.250s
  Time for loading CPAs:          1.039s
  Time for loading parser:        0.746s
  Time for CFA construction:      4.317s
    Time for parsing file(s):     1.177s
    Time for AST to CFA:          1.483s
    Time for CFA sanity check:    0.311s
    Time for post-processing:     1.120s
      Time for var class.:        0.473s
Time for Analysis:                3.272s
CPU time for analysis:            3.260s
Time for analyzing result:        0.002s
Total time for CPAchecker:        9.529s
Total CPU time for CPAchecker:    9.500s
Time for statistics:              0.113s

Time for Garbage Collector:       0.260s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     38MB (    36 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8131MB (  7754 MiB) max;   8091MB (  7716 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
