scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--kbic.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kelqni7k/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            669 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            645 (96%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (4%)
  Times precision was empty:       204 (30%)
  Times precision was {false}:     13 (2%)
  Times result was cached:         410 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42 (6%)
  Times result was 'false':        12 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         9202
  BDD entailment checks:           494
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       305
Number of predicates discovered:          2
Number of abstraction locations:          12
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         465
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 8.45
Number of irrelevant predicates:          113 (24%)
Number of preds handled by boolean abs:   42 (9%)
  Total number of models for allsat:      42
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.948s
  Time for path formula creation:        1.765s
Time for strengthen operator:            0.278s
Time for prec operator:                  2.093s
  Time for abstraction:                  1.796s (Max:     0.689s, Count: 669)
    Boolean abstraction:                 0.868s
    Solving time:                        0.697s (Max:     0.445s)
    Model enumeration time:              0.200s
    Time for BDD construction:           0.007s (Max:     0.005s)
Time for merge operator:                 0.334s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     0.897s

Number of path formula cache hits:   129069 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.494s

Total number of created targets for pointer analysis: 72
   Number of created targets for uf: *(char)* is 13


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          83 (count: 1021, min: 0, max: 6, avg: 0.08)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.472s
Automaton transfers with branching:                0
Automaton transfer successors:                       135851 (count: 135851, min: 1, max: 1, avg: 1.00) [1 x 135851]

CPA algorithm statistics
------------------------
Number of iterations:            45619
Max size of waitlist:            31
Average size of waitlist:        19
Number of computed successors:   50450
Max successors for one state:    2
Number of times merged:          4354
Number of times stopped:         4757
Number of times breaked:         12

Total time for CPA algorithm:        11.568s (Max:     4.058s)
  Time for choose from waitlist:      0.097s
  Time for precision adjustment:      2.921s
  Time for transfer relation:         6.618s
  Time for merge operator:            0.690s
  Time for stop operator:             0.189s
  Time for adding to reached set:     0.335s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  43 (count: 12, min: 1, max: 4, avg: 3.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.344s
  Counterexample analysis:                             0.083s (Max:     0.013s, Calls: 12)
    Refinement sat check:                              0.041s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.028s
  ARG update:                                          0.210s

Length of refined path (in blocks):                      43 (count: 12, min: 1, max: 4, avg: 3.58)
Number of affected states:                               31 (count: 12, min: 0, max: 3, avg: 2.58)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        31 (count: 12, min: 0, max: 3, avg: 2.58)
Length (states) of path with itp 'false':                 0 (count: 12, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              20 (count: 12, min: 0, max: 2, avg: 1.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 4233
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 3479.00
Avg. size of reached set after ref.:  28.75

Total time for CEGAR algorithm:      12.099s
Time for refinements:                 0.529s
Average time for refinement:          0.044s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.727
  Visited lines:          5411
  Total lines:            5457
  Line coverage:          0.992
  Visited conditions:     508
  Total conditions:       528
  Condition coverage:     0.962

CPAchecker general statistics
-----------------------------
Number of program locations:     6023
Number of CFA edges:             6479
Number of relevant variables:    629
Number of functions:             33
Number of loops:                 11
Size of reached set:             4279
  Number of reached locations:   1744 (29%)
    Avg states per location:     2
    Max states per location:     304 (at node N0)
  Number of reached functions:   24 (73%)
  Number of partitions:          4279
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.956s
  Time for loading CPAs:          0.971s
  Time for loading parser:        0.728s
  Time for CFA construction:      4.110s
    Time for parsing file(s):     0.987s
    Time for AST to CFA:          1.182s
    Time for CFA sanity check:    0.477s
    Time for post-processing:     1.368s
      Time for var class.:        0.579s
Time for Analysis:               12.099s
CPU time for analysis:           12.090s
Time for analyzing result:        0.003s
Total time for CPAchecker:       18.062s
Total CPU time for CPAchecker:   18.040s
Time for statistics:              0.219s

Time for Garbage Collector:       0.456s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     48MB (    46 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8110MB (  7735 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
