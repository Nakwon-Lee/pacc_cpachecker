scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--ftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3i0m_lj2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 2986: Function pointer *__cil_tmp10 with type void (*)(struct mtd_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2986: Ignoring call via function pointer mtd_sync::__cil_tmp10 for which no suitable target was found in line: (*__cil_tmp10)(mtd); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2986: Ignoring function call through function pointer *__cil_tmp10: (*__cil_tmp10)(mtd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            443 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            382 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (14%)
  Times precision was empty:       79 (18%)
  Times precision was {false}:     32 (7%)
  Times result was cached:         274 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      58 (13%)
  Times result was 'false':        84 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         2347
  BDD entailment checks:           211
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       614
Number of predicates discovered:          3
Number of abstraction locations:          16
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         374
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.16
Number of irrelevant predicates:          96 (26%)
Number of preds handled by boolean abs:   61 (16%)
  Total number of models for allsat:      60
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  2.517s
  Time for path formula creation:        2.431s
Time for strengthen operator:            0.095s
Time for prec operator:                  4.457s
  Time for abstraction:                  4.381s (Max:     0.249s, Count: 443)
    Boolean abstraction:                 1.977s
    Solving time:                        2.771s (Max:     0.226s)
    Model enumeration time:              0.178s
    Time for BDD construction:           0.048s (Max:     0.022s)
Time for merge operator:                 0.412s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     2.949s

Number of path formula cache hits:   43587 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.157s

Total number of created targets for pointer analysis: 268
   Number of created targets for uf: *unsigned_short_int is 16
   Number of created targets for uf: *unsigned_char is 121
   Number of created targets for uf: *unsigned_int is 3
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         115 (count: 832, min: 0, max: 18, avg: 0.14)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.348s
Automaton transfers with branching:                0
Automaton transfer successors:                        51263 (count: 51263, min: 1, max: 1, avg: 1.00) [1 x 51263]

CPA algorithm statistics
------------------------
Number of iterations:            8925
Max size of waitlist:            13
Average size of waitlist:        5
Number of computed successors:   10369
Max successors for one state:    2
Number of times merged:          1068
Number of times stopped:         1245
Number of times breaked:         15

Total time for CPA algorithm:        10.120s (Max:     1.306s)
  Time for choose from waitlist:      0.071s
  Time for precision adjustment:      4.820s
  Time for transfer relation:         4.278s
  Time for merge operator:            0.540s
  Time for stop operator:             0.108s
  Time for adding to reached set:     0.087s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                  82 (count: 15, min: 2, max: 7, avg: 5.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.616s
  Counterexample analysis:                             0.480s (Max:     0.099s, Calls: 15)
    Refinement sat check:                              0.408s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.040s
  ARG update:                                          0.050s

Length of refined path (in blocks):                      79 (count: 15, min: 2, max: 7, avg: 5.27)
Number of affected states:                               52 (count: 15, min: 1, max: 6, avg: 3.47)
Length (states) of path with itp 'true':                 12 (count: 15, min: 0, max: 4, avg: 0.80)
Length (states) of path with itp non-trivial itp:        52 (count: 15, min: 1, max: 6, avg: 3.47)
Length (states) of path with itp 'false':                 3 (count: 15, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              37 (count: 15, min: 0, max: 5, avg: 2.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 1208
Max. size of reached set after ref.:  853
Avg. size of reached set before ref.: 700.53
Avg. size of reached set after ref.:  180.93

Total time for CEGAR algorithm:      10.814s
Time for refinements:                 0.691s
Average time for refinement:          0.046s
Max time for refinement:              0.105s

Code Coverage
-----------------------------
  Function coverage:      0.765
  Visited lines:          3903
  Total lines:            4539
  Line coverage:          0.860
  Visited conditions:     226
  Total conditions:       286
  Condition coverage:     0.790

CPAchecker general statistics
-----------------------------
Number of program locations:     4829
Number of CFA edges:             4977
Number of relevant variables:    1617
Number of functions:             34
Number of loops:                 19
Size of reached set:             1247
  Number of reached locations:   642 (13%)
    Avg states per location:     1
    Max states per location:     13 (at node N4376)
  Number of reached functions:   26 (76%)
  Number of partitions:          1246
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2896 (before line 6137), Function reclaim_block called from node N3713, stack depth 4 [21540255], stack [main, ftl_writesect, ftl_write, reclaim_block]])
  Number of target states:       0

Time for analysis setup:          5.971s
  Time for loading CPAs:          1.065s
  Time for loading parser:        0.747s
  Time for CFA construction:      4.014s
    Time for parsing file(s):     1.049s
    Time for AST to CFA:          1.203s
    Time for CFA sanity check:    0.418s
    Time for post-processing:     1.192s
      Time for var class.:        0.579s
Time for Analysis:               10.814s
CPU time for analysis:           10.810s
Time for analyzing result:        0.001s
Total time for CPAchecker:       16.791s
Total CPU time for CPAchecker:   16.780s
Time for statistics:              0.143s

Time for Garbage Collector:       0.378s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     44MB (    42 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8109MB (  7733 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
