scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--isdn--hardware--eicon--divadidd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r3wx1yx9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5070: Function pointer *__cil_tmp3 with type void (*)(pDbgHandle ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4578: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4668: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4276: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4398: Function pointer *__cil_tmp5 with type void (*)(unsigned short, unsigned long, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4246: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4366: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4518: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4216: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4458: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4336: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4638: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4788: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4818: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4848: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4878: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4758: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4428: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4728: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4488: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4698: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4608: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4548: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4306: Function pointer *__cil_tmp5 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5145: Function pointer *__cil_tmp14 with type void (*)(unsigned short, int, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5154: Function pointer *__cil_tmp19 with type void (*)(unsigned short, char *, va_list ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5642: Ignoring parameters passed as varargs to function myDbgPrint_TRC: myDbgPrint_TRC(__cil_tmp18, length, __cil_tmp19) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4306: Ignoring call via function pointer myDbgPrint_TRC::__cil_tmp5 for which no suitable target was found in line: (*__cil_tmp5)(__cil_tmp8, 1024, format, ap); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4306: Ignoring function call through function pointer *__cil_tmp5: (*__cil_tmp5)(__cil_tmp8, 1024, format, ap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4307: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end(ap); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5734: Ignoring parameters passed as varargs to function myDbgPrint_ERR: myDbgPrint_ERR(__cil_tmp44) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 4276: Ignoring call via function pointer myDbgPrint_ERR::__cil_tmp5 for which no suitable target was found in line: (*__cil_tmp5)(__cil_tmp8, 768, format, ap); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4276: Ignoring function call through function pointer *__cil_tmp5: (*__cil_tmp5)(__cil_tmp8, 768, format, ap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4277: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end(ap); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 5766: Ignoring parameters passed as varargs to function myDbgPrint_ERR: myDbgPrint_ERR(__cil_tmp53) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5779: Ignoring parameters passed as varargs to function myDbgPrint_TRC: myDbgPrint_TRC(__cil_tmp56, dst) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5070: Ignoring call via function pointer DbgDeregister::__cil_tmp3 for which no suitable target was found in line: (*__cil_tmp3)(&myDriverDebugHandle); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5070: Ignoring function call through function pointer *__cil_tmp3: (*__cil_tmp3)(&myDriverDebugHandle); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4990: Ignoring parameters passed as varargs to function no_printf: no_printf(__cil_tmp34, &myDriverDebugHandle) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5012: Ignoring parameters passed as varargs to function no_printf: no_printf(__cil_tmp42, drvName) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5027: Ignoring parameters passed as varargs to function no_printf: no_printf(__cil_tmp49, drvName) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 3909: Ignoring call via function pointer connect_didd::__cil_tmp37 for which no suitable target was found in line: (*__cil_tmp37)(__cil_tmp38); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3909: Ignoring function call through function pointer *__cil_tmp37: (*__cil_tmp37)(__cil_tmp38); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5880: Ignoring parameters passed as varargs to function myDbgPrint_ERR: myDbgPrint_ERR(__cil_tmp15, __cil_tmp17) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6018: Ignoring parameters passed as varargs to function myDbgPrint_ERR: myDbgPrint_ERR(__cil_tmp71, __cil_tmp75) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5479: Ignoring parameters passed as varargs to function myDbgPrint_TRC: myDbgPrint_TRC(__cil_tmp10) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5324: Ignoring parameters passed as varargs to function myDbgPrint_TRC: myDbgPrint_TRC(__cil_tmp24) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6177: Ignoring parameters passed as varargs to function myDbgPrint_TRC: myDbgPrint_TRC(__cil_tmp13, __cil_tmp15) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6196: Ignoring parameters passed as varargs to function myDbgPrint_ERR: myDbgPrint_ERR(__cil_tmp18, handle) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 4003: Ignoring parameters passed as varargs to function myDbgPrint_ERR: myDbgPrint_ERR(__cil_tmp4) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6285: Ignoring call via function pointer diva_notify_adapter_change::__cil_tmp24 for which no suitable target was found in line: (*__cil_tmp24)(__cil_tmp26, d, removal); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6285: Ignoring function call through function pointer *__cil_tmp24: (*__cil_tmp24)(__cil_tmp26, d, removal); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6285: Ignoring parameters passed as varargs to function no_printf: no_printf(__cil_tmp26, d, removal) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5561: Ignoring parameters passed as varargs to function myDbgPrint_ERR: myDbgPrint_ERR(__cil_tmp33, request) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5423: Ignoring parameters passed as varargs to function myDbgPrint_ERR: myDbgPrint_ERR(__cil_tmp52) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6121: Ignoring parameters passed as varargs to function myDbgPrint_ERR: myDbgPrint_ERR(__cil_tmp22) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6096: Ignoring parameters passed as varargs to function myDbgPrint_TRC: myDbgPrint_TRC(__cil_tmp17, __cil_tmp18, callback) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3977: Ignoring call via function pointer disconnect_didd::__cil_tmp9 for which no suitable target was found in line: (*__cil_tmp9)(__cil_tmp10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3977: Ignoring function call through function pointer *__cil_tmp9: (*__cil_tmp9)(__cil_tmp10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            204 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            179 (88%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (12%)
  Times precision was empty:       66 (32%)
  Times precision was {false}:     18 (9%)
  Times result was cached:         96 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24 (12%)
  Times result was 'false':        70 (34%)
Number of strengthen sat checks:   0
Number of coverage checks:         1364
  BDD entailment checks:           52
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       176
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         138
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.29
Number of irrelevant predicates:          36 (26%)
Number of preds handled by boolean abs:   24 (17%)
  Total number of models for allsat:      9
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.38

Time for post operator:                  1.576s
  Time for path formula creation:        1.506s
Time for strengthen operator:            0.064s
Time for prec operator:                  0.961s
  Time for abstraction:                  0.887s (Max:     0.103s, Count: 204)
    Boolean abstraction:                 0.233s
    Solving time:                        0.294s (Max:     0.070s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.018s (Max:     0.012s)
Time for merge operator:                 0.166s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.300s

Number of path formula cache hits:   14356 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.298s

Total number of created targets for pointer analysis: 42
   Number of created targets for uf: *(struct_proc_dir_entry)* is 3
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          29 (count: 363, min: 0, max: 16, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.240s
Automaton transfers with branching:                0
Automaton transfer successors:                        18875 (count: 18875, min: 1, max: 1, avg: 1.00) [1 x 18875]

CPA algorithm statistics
------------------------
Number of iterations:            7087
Max size of waitlist:            18
Average size of waitlist:        7
Number of computed successors:   7913
Max successors for one state:    2
Number of times merged:          656
Number of times stopped:         701
Number of times breaked:         11

Total time for CPA algorithm:         4.806s (Max:     0.834s)
  Time for choose from waitlist:      0.087s
  Time for precision adjustment:      1.345s
  Time for transfer relation:         2.736s
  Time for merge operator:            0.228s
  Time for stop operator:             0.102s
  Time for adding to reached set:     0.102s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  39 (count: 11, min: 1, max: 5, avg: 3.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.372s
  Counterexample analysis:                             0.271s (Max:     0.032s, Calls: 11)
    Refinement sat check:                              0.222s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.002s
  ARG update:                                          0.076s

Length of refined path (in blocks):                      39 (count: 11, min: 1, max: 5, avg: 3.55)
Number of affected states:                               28 (count: 11, min: 0, max: 4, avg: 2.55)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        28 (count: 11, min: 0, max: 4, avg: 2.55)
Length (states) of path with itp 'false':                 0 (count: 11, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              18 (count: 11, min: 0, max: 3, avg: 1.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 1119
Max. size of reached set after ref.:  731
Avg. size of reached set before ref.: 716.00
Avg. size of reached set after ref.:  159.45

Total time for CEGAR algorithm:       5.257s
Time for refinements:                 0.449s
Average time for refinement:          0.040s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.507
  Visited lines:          1719
  Total lines:            2427
  Line coverage:          0.708
  Visited conditions:     129
  Total conditions:       252
  Condition coverage:     0.512

CPAchecker general statistics
-----------------------------
Number of program locations:     2883
Number of CFA edges:             3028
Number of relevant variables:    351
Number of functions:             69
Number of loops:                 7
Size of reached set:             1021
  Number of reached locations:   497 (17%)
    Avg states per location:     2
    Max states per location:     11 (at node N662)
  Number of reached functions:   35 (51%)
  Number of partitions:          1021
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.295s
  Time for loading CPAs:          1.014s
  Time for loading parser:        0.681s
  Time for CFA construction:      3.432s
    Time for parsing file(s):     1.007s
    Time for AST to CFA:          1.150s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     0.855s
      Time for var class.:        0.409s
Time for Analysis:                5.257s
CPU time for analysis:            5.260s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.558s
Total CPU time for CPAchecker:   10.550s
Time for statistics:              0.122s

Time for Garbage Collector:       0.237s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     37MB (    35 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8099MB (  7723 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
