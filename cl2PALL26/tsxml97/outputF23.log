scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--common--tuners--tda9887.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_en9f1ygj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            19 (70%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (30%)
  Times precision was empty:       6 (22%)
  Times precision was {false}:     5 (19%)
  Times result was cached:         6 (22%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (37%)
  Times result was 'false':        6 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         1846
  BDD entailment checks:           10
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1674
Number of predicates discovered:          2
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         21
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.40
Number of irrelevant predicates:          8 (38%)
Number of preds handled by boolean abs:   10 (48%)
  Total number of models for allsat:      10
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.460s
  Time for path formula creation:        3.352s
Time for strengthen operator:            0.126s
Time for prec operator:                  5.871s
  Time for abstraction:                  5.772s (Max:     2.603s, Count: 27)
    Boolean abstraction:                 4.780s
    Solving time:                        4.189s (Max:     2.254s)
    Model enumeration time:              1.024s
    Time for BDD construction:           0.007s (Max:     0.006s)
Time for merge operator:                 0.355s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     5.213s

Number of path formula cache hits:   13308 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.073s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *unsigned_char is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          21 (count: 108, min: 0, max: 5, avg: 0.19)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.300s
Automaton transfers with branching:                0
Automaton transfer successors:                        32416 (count: 32416, min: 1, max: 1, avg: 1.00) [1 x 32416]

CPA algorithm statistics
------------------------
Number of iterations:            9857
Max size of waitlist:            12
Average size of waitlist:        6
Number of computed successors:   10797
Max successors for one state:    2
Number of times merged:          918
Number of times stopped:         927
Number of times breaked:         2

Total time for CPA algorithm:        12.344s (Max:     6.172s)
  Time for choose from waitlist:      0.064s
  Time for precision adjustment:      6.217s
  Time for transfer relation:         5.066s
  Time for merge operator:            0.462s
  Time for stop operator:             0.108s
  Time for adding to reached set:     0.124s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   6 (count: 2, min: 2, max: 4, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.145s
  Counterexample analysis:                             0.087s (Max:     0.075s, Calls: 2)
    Refinement sat check:                              0.071s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.004s
  ARG update:                                          0.040s

Length of refined path (in blocks):                       6 (count: 2, min: 2, max: 4, avg: 3.00)
Number of affected states:                                4 (count: 2, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 2, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               2 (count: 2, min: 0, max: 2, avg: 1.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 3983
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2003.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      12.526s
Time for refinements:                 0.182s
Average time for refinement:          0.091s
Max time for refinement:              0.135s

Code Coverage
-----------------------------
  Function coverage:      0.700
  Visited lines:          3569
  Total lines:            3979
  Line coverage:          0.897
  Visited conditions:     218
  Total conditions:       260
  Condition coverage:     0.838

CPAchecker general statistics
-----------------------------
Number of program locations:     4390
Number of CFA edges:             4563
Number of relevant variables:    919
Number of functions:             30
Number of loops:                 3
Size of reached set:             5865
  Number of reached locations:   1015 (23%)
    Avg states per location:     5
    Max states per location:     194 (at node N11)
  Number of reached functions:   21 (70%)
  Number of partitions:          5865
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.039s
  Time for loading CPAs:          0.992s
  Time for loading parser:        0.761s
  Time for CFA construction:      4.104s
    Time for parsing file(s):     1.128s
    Time for AST to CFA:          1.355s
    Time for CFA sanity check:    0.411s
    Time for post-processing:     1.030s
      Time for var class.:        0.532s
Time for Analysis:               12.527s
CPU time for analysis:           12.540s
Time for analyzing result:        0.013s
Total time for CPAchecker:       18.571s
Total CPU time for CPAchecker:   18.560s
Time for statistics:              0.216s

Time for Garbage Collector:       0.452s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    73 MiB) max;     45MB (    42 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8111MB (  7735 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
