scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iur401mk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1226 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1187 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (3%)
  Times precision was empty:       452 (37%)
  Times precision was {false}:     53 (4%)
  Times result was cached:         655 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66 (5%)
  Times result was 'false':        52 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         25412
  BDD entailment checks:           986
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1214
Number of predicates discovered:          2
Number of abstraction locations:          12
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         774
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.50
Number of irrelevant predicates:          363 (47%)
Number of preds handled by boolean abs:   66 (9%)
  Total number of models for allsat:      64
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                  5.806s
  Time for path formula creation:        5.559s
Time for strengthen operator:            0.312s
Time for prec operator:                  6.565s
  Time for abstraction:                  6.207s (Max:     0.453s, Count: 1226)
    Boolean abstraction:                 2.841s
    Solving time:                        3.696s (Max:     0.388s)
    Model enumeration time:              0.233s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.945s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     3.929s

Number of path formula cache hits:   234746 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.480s

Total number of created targets for pointer analysis: 46
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *_Bool is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         121 (count: 2109, min: 0, max: 26, avg: 0.06)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.676s
  Time for transition matches:                         0.355s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       251447 (count: 251447, min: 1, max: 1, avg: 1.00) [1 x 251447]

CPA algorithm statistics
------------------------
Number of iterations:            94063
Max size of waitlist:            29
Average size of waitlist:        14
Number of computed successors:   107139
Max successors for one state:    2
Number of times merged:          12213
Number of times stopped:         12962
Number of times breaked:         11

Total time for CPA algorithm:        21.625s (Max:     8.943s)
  Time for choose from waitlist:      0.159s
  Time for precision adjustment:      8.018s
  Time for transfer relation:        10.284s
  Time for merge operator:            1.497s
  Time for stop operator:             0.327s
  Time for adding to reached set:     0.408s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  44 (count: 11, min: 1, max: 6, avg: 4.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.532s
  Counterexample analysis:                             1.104s (Max:     0.203s, Calls: 11)
    Refinement sat check:                              0.976s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.010s
  ARG update:                                          0.376s

Length of refined path (in blocks):                      44 (count: 11, min: 1, max: 6, avg: 4.00)
Number of affected states:                               33 (count: 11, min: 0, max: 5, avg: 3.00)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        33 (count: 11, min: 0, max: 5, avg: 3.00)
Length (states) of path with itp 'false':                 0 (count: 11, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              23 (count: 11, min: 0, max: 4, avg: 2.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 9681
Max. size of reached set after ref.:  35
Avg. size of reached set before ref.: 7769.64
Avg. size of reached set after ref.:  34.73

Total time for CEGAR algorithm:      23.418s
Time for refinements:                 1.783s
Average time for refinement:          0.162s
Max time for refinement:              0.324s

Code Coverage
-----------------------------
  Function coverage:      0.683
  Visited lines:          3848
  Total lines:            4337
  Line coverage:          0.887
  Visited conditions:     320
  Total conditions:       374
  Condition coverage:     0.856

CPAchecker general statistics
-----------------------------
Number of program locations:     4901
Number of CFA edges:             5157
Number of relevant variables:    1226
Number of functions:             60
Number of loops:                 11
Size of reached set:             9042
  Number of reached locations:   1181 (24%)
    Avg states per location:     7
    Max states per location:     139 (at node N4563)
  Number of reached functions:   41 (68%)
  Number of partitions:          9042
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.012s
  Time for loading CPAs:          1.077s
  Time for loading parser:        0.746s
  Time for CFA construction:      4.042s
    Time for parsing file(s):     1.124s
    Time for AST to CFA:          1.379s
    Time for CFA sanity check:    0.302s
    Time for post-processing:     1.028s
      Time for var class.:        0.585s
Time for Analysis:               23.418s
CPU time for analysis:           23.420s
Time for analyzing result:        0.008s
Total time for CPAchecker:       29.436s
Total CPU time for CPAchecker:   29.420s
Time for statistics:              0.283s

Time for Garbage Collector:       0.972s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                107MB (   102 MiB) max;     60MB (    57 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8118MB (  7742 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
