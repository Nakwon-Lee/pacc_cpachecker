scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--input--mouse--vsxxxaa.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cc2064k2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 1935: Function pointer *__cil_tmp8 with type int (*)(struct serio *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1935: Ignoring call via function pointer serio_write::__cil_tmp8 for which no suitable target was found in line: tmp = (*__cil_tmp8)(serio, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            161 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            151 (94%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (6%)
  Times precision was empty:       72 (45%)
  Times precision was {false}:     33 (20%)
  Times result was cached:         36 (22%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20 (12%)
  Times result was 'false':        6 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         932
  BDD entailment checks:           112
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       273
Number of predicates discovered:          2
Number of abstraction locations:          7
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         89
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.68
Number of irrelevant predicates:          42 (47%)
Number of preds handled by boolean abs:   20 (22%)
  Total number of models for allsat:      19
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.95

Time for post operator:                  2.072s
  Time for path formula creation:        1.984s
Time for strengthen operator:            0.095s
Time for prec operator:                  1.212s
  Time for abstraction:                  1.115s (Max:     0.063s, Count: 161)
    Boolean abstraction:                 0.231s
    Solving time:                        0.576s (Max:     0.043s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.014s (Max:     0.007s)
Time for merge operator:                 0.215s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.584s

Number of path formula cache hits:   11514 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.888s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          40 (count: 475, min: 0, max: 14, avg: 0.08)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.244s
Automaton transfers with branching:                0
Automaton transfer successors:                        21980 (count: 21980, min: 1, max: 1, avg: 1.00) [1 x 21980]

CPA algorithm statistics
------------------------
Number of iterations:            5663
Max size of waitlist:            10
Average size of waitlist:        5
Number of computed successors:   6184
Max successors for one state:    2
Number of times merged:          410
Number of times stopped:         496
Number of times breaked:         5

Total time for CPA algorithm:         5.575s (Max:     1.475s)
  Time for choose from waitlist:      0.042s
  Time for precision adjustment:      1.536s
  Time for transfer relation:         3.392s
  Time for merge operator:            0.256s
  Time for stop operator:             0.045s
  Time for adding to reached set:     0.073s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  25 (count: 5, min: 1, max: 9, avg: 5.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.266s
  Counterexample analysis:                             0.163s (Max:     0.059s, Calls: 5)
    Refinement sat check:                              0.116s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.007s
  ARG update:                                          0.073s

Length of refined path (in blocks):                      25 (count: 5, min: 1, max: 9, avg: 5.00)
Number of affected states:                               20 (count: 5, min: 0, max: 8, avg: 4.00)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        20 (count: 5, min: 0, max: 8, avg: 4.00)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              16 (count: 5, min: 0, max: 7, avg: 3.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1790
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 986.80
Avg. size of reached set after ref.:  21.40

Total time for CEGAR algorithm:       5.915s
Time for refinements:                 0.339s
Average time for refinement:          0.067s
Max time for refinement:              0.096s

Code Coverage
-----------------------------
  Function coverage:      0.757
  Visited lines:          1490
  Total lines:            1536
  Line coverage:          0.970
  Visited conditions:     78
  Total conditions:       98
  Condition coverage:     0.796

CPAchecker general statistics
-----------------------------
Number of program locations:     1758
Number of CFA edges:             1844
Number of relevant variables:    236
Number of functions:             37
Number of loops:                 6
Size of reached set:             856
  Number of reached locations:   380 (22%)
    Avg states per location:     2
    Max states per location:     24 (at node N27)
  Number of reached functions:   28 (76%)
  Number of partitions:          856
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.052s
  Time for loading CPAs:          1.088s
  Time for loading parser:        0.688s
  Time for CFA construction:      3.164s
    Time for parsing file(s):     0.981s
    Time for AST to CFA:          1.057s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.647s
      Time for var class.:        0.311s
Time for Analysis:                5.915s
CPU time for analysis:            5.910s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.973s
Total CPU time for CPAchecker:   10.960s
Time for statistics:              0.137s

Time for Garbage Collector:       0.262s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     37MB (    35 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8101MB (  7726 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
