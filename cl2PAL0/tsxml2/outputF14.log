scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product01_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f3y61819/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 87: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 165: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1088: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1346: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2516: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2992: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            198 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            47 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         151 (76%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     150 (76%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      45 (23%)
  Times result was 'false':        140 (71%)
Number of strengthen sat checks:   0
Number of coverage checks:         71418
  BDD entailment checks:           120
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       778
Number of predicates discovered:          70
Number of abstraction locations:          2
Max number of predicates per location:    69
Avg number of predicates per location:    35
Total predicates per abstraction:         1993
Max number of predicates per abstraction: 69
Avg number of predicates per abstraction: 10.22
Number of irrelevant predicates:          150 (8%)
Number of preds handled by boolean abs:   1843 (92%)
  Total number of models for allsat:      730
  Max number of models for allsat:        111
  Avg number of models for allsat:        16.22

Time for post operator:                  4.131s
  Time for path formula creation:        3.921s
Time for strengthen operator:            0.334s
Time for prec operator:                 20.176s
  Time for abstraction:                 19.845s (Max:     1.344s, Count: 198)
    Boolean abstraction:                17.359s
    Solving time:                        7.944s (Max:     0.316s)
    Model enumeration time:              9.374s
    Time for BDD construction:           0.196s (Max:     0.024s)
Time for merge operator:                 1.041s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):    17.318s

Number of path formula cache hits:   130821 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.589s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               74514
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15755 (count: 7637, min: 0, max: 1307, avg: 2.06)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.478s
Automaton transfers with branching:                0
Automaton transfer successors:                       169323 (count: 169323, min: 1, max: 1, avg: 1.00) [1 x 169323]

CPA algorithm statistics
------------------------
Number of iterations:            126507
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   162318
Max successors for one state:    2
Number of times merged:          35649
Number of times stopped:         35652
Number of times breaked:         11

Total time for CPA algorithm:        34.078s (Max:     9.902s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:     22.034s
  Time for transfer relation:         7.538s
  Time for merge operator:            2.093s
  Time for stop operator:             0.536s
  Time for adding to reached set:     0.548s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  34 (count: 11, min: 2, max: 5, avg: 3.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.781s
  Counterexample analysis:                             7.226s (Max:     1.244s, Calls: 11)
    Refinement sat check:                              6.501s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.004s
  ARG update:                                          0.347s

Length of refined path (in blocks):                      34 (count: 11, min: 2, max: 5, avg: 3.09)
Number of affected states:                               23 (count: 11, min: 1, max: 4, avg: 2.09)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        23 (count: 11, min: 1, max: 4, avg: 2.09)
Length (states) of path with itp 'false':                 0 (count: 11, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          12 (count: 11, min: 0, max: 3, avg: 1.09)
Equal non-trivial interpolants along paths:               0 (count: 11, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 17584
Max. size of reached set after ref.:  3515
Avg. size of reached set before ref.: 10857.91
Avg. size of reached set after ref.:  3515.00

Total time for CEGAR algorithm:      42.539s
Time for refinements:                 8.429s
Average time for refinement:          0.766s
Max time for refinement:              1.400s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          958
  Total lines:            1673
  Line coverage:          0.573
  Visited conditions:     580
  Total conditions:       748
  Condition coverage:     0.775

CPAchecker general statistics
-----------------------------
Number of program locations:     2194
Number of CFA edges:             2677
Number of relevant variables:    280
Number of functions:             69
Number of loops:                 9
Size of reached set:             45755
  Number of reached locations:   1095 (50%)
    Avg states per location:     41
    Max states per location:     333 (at node N2084)
  Number of reached functions:   39 (57%)
  Number of partitions:          45744
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N666 (before lines 880-908), Function cleanup called from node N120, stack depth 4 [2a7b6f69], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.084s
  Time for loading CPAs:          0.777s
  Time for loading parser:        0.736s
  Time for CFA construction:      2.396s
    Time for parsing file(s):     0.672s
    Time for AST to CFA:          0.735s
    Time for CFA sanity check:    0.255s
    Time for post-processing:     0.560s
      Time for var class.:        0.319s
Time for Analysis:               42.541s
CPU time for analysis:           42.550s
Time for analyzing result:        0.060s
Total time for CPAchecker:       46.629s
Total CPU time for CPAchecker:   46.620s
Time for statistics:              0.656s

Time for Garbage Collector:       1.339s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   112 MiB) max;     62MB (    60 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8199MB (  7820 MiB) max;   8155MB (  7777 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
