scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c0alzydn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 343: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1697: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2005: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2039: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2088: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2181: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2606: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2690: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3276: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1534: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            48 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            18 (38%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (63%)
  Times precision was empty:       3 (6%)
  Times precision was {false}:     29 (60%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (33%)
  Times result was 'false':        23 (48%)
Number of strengthen sat checks:   0
Number of coverage checks:         34767
  BDD entailment checks:           11
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1054
Number of predicates discovered:          54
Number of abstraction locations:          2
Max number of predicates per location:    54
Avg number of predicates per location:    27
Total predicates per abstraction:         250
Max number of predicates per abstraction: 54
Avg number of predicates per abstraction: 5.56
Number of irrelevant predicates:          34 (14%)
Number of preds handled by boolean abs:   216 (86%)
  Total number of models for allsat:      88
  Max number of models for allsat:        30
  Avg number of models for allsat:        5.50

Time for post operator:                  3.179s
  Time for path formula creation:        2.993s
Time for strengthen operator:            0.224s
Time for prec operator:                 10.802s
  Time for abstraction:                 10.579s (Max:     1.452s, Count: 48)
    Boolean abstraction:                 9.158s
    Solving time:                        5.456s (Max:     0.846s)
    Model enumeration time:              3.715s
    Time for BDD construction:           0.036s (Max:     0.013s)
Time for merge operator:                 0.696s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     9.171s

Number of path formula cache hits:   73752 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.799s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               9386
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1150 (count: 1012, min: 0, max: 531, avg: 1.14)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.445s
Automaton transfers with branching:                0
Automaton transfer successors:                        84203 (count: 84203, min: 1, max: 1, avg: 1.00) [1 x 84203]

CPA algorithm statistics
------------------------
Number of iterations:            62097
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   79513
Max successors for one state:    2
Number of times merged:          17378
Number of times stopped:         17380
Number of times breaked:         7

Total time for CPA algorithm:        21.373s (Max:     5.708s)
  Time for choose from waitlist:      0.188s
  Time for precision adjustment:     12.084s
  Time for transfer relation:         6.090s
  Time for merge operator:            1.425s
  Time for stop operator:             0.294s
  Time for adding to reached set:     0.332s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  16 (count: 7, min: 2, max: 3, avg: 2.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.527s
  Counterexample analysis:                             3.090s (Max:     0.693s, Calls: 7)
    Refinement sat check:                              2.755s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.012s
  ARG update:                                          0.268s

Length of refined path (in blocks):                      16 (count: 7, min: 2, max: 3, avg: 2.29)
Number of affected states:                                9 (count: 7, min: 1, max: 2, avg: 1.29)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 7, min: 1, max: 2, avg: 1.29)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           2 (count: 7, min: 0, max: 1, avg: 0.29)
Equal non-trivial interpolants along paths:               0 (count: 7, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 16967
Max. size of reached set after ref.:  5656
Avg. size of reached set before ref.: 12917.43
Avg. size of reached set after ref.:  5656.00

Total time for CEGAR algorithm:      25.380s
Time for refinements:                 3.948s
Average time for refinement:          0.564s
Max time for refinement:              0.807s

Code Coverage
-----------------------------
  Function coverage:      0.608
  Visited lines:          1050
  Total lines:            1720
  Line coverage:          0.610
  Visited conditions:     606
  Total conditions:       750
  Condition coverage:     0.808

CPAchecker general statistics
-----------------------------
Number of program locations:     2255
Number of CFA edges:             2744
Number of relevant variables:    307
Number of functions:             74
Number of loops:                 9
Size of reached set:             11280
  Number of reached locations:   1170 (52%)
    Avg states per location:     9
    Max states per location:     127 (at node N174)
  Number of reached functions:   45 (61%)
  Number of partitions:          11280
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.816s
  Time for loading CPAs:          1.000s
  Time for loading parser:        0.870s
  Time for CFA construction:      2.739s
    Time for parsing file(s):     0.789s
    Time for AST to CFA:          0.859s
    Time for CFA sanity check:    0.288s
    Time for post-processing:     0.610s
      Time for var class.:        0.346s
Time for Analysis:               25.381s
CPU time for analysis:           25.390s
Total time for CPAchecker:       30.201s
Total CPU time for CPAchecker:   30.190s
Time for statistics:              0.375s

Time for Garbage Collector:       0.636s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    78 MiB) max;     51MB (    48 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8199MB (  7819 MiB) max;   8130MB (  7753 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
