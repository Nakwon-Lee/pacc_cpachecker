scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j2t99407/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 343: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1697: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2005: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2039: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2088: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2181: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2606: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2690: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3276: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1534: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            47 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (36%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (64%)
  Times precision was empty:       3 (6%)
  Times precision was {false}:     29 (62%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (32%)
  Times result was 'false':        23 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         31609
  BDD entailment checks:           11
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1054
Number of predicates discovered:          54
Number of abstraction locations:          2
Max number of predicates per location:    54
Avg number of predicates per location:    27
Total predicates per abstraction:         196
Max number of predicates per abstraction: 54
Avg number of predicates per abstraction: 4.45
Number of irrelevant predicates:          33 (17%)
Number of preds handled by boolean abs:   163 (83%)
  Total number of models for allsat:      76
  Max number of models for allsat:        30
  Avg number of models for allsat:        5.07

Time for post operator:                  3.144s
  Time for path formula creation:        2.965s
Time for strengthen operator:            0.266s
Time for prec operator:                 10.224s
  Time for abstraction:                  9.996s (Max:     1.535s, Count: 47)
    Boolean abstraction:                 8.688s
    Solving time:                        5.044s (Max:     0.750s)
    Model enumeration time:              3.743s
    Time for BDD construction:           0.044s (Max:     0.019s)
Time for merge operator:                 0.804s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     8.788s

Number of path formula cache hits:   64554 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.782s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3560
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         890 (count: 668, min: 0, max: 531, avg: 1.33)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.323s
Automaton transfers with branching:                0
Automaton transfer successors:                        76586 (count: 76586, min: 1, max: 1, avg: 1.00) [1 x 76586]

CPA algorithm statistics
------------------------
Number of iterations:            56474
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   72310
Max successors for one state:    2
Number of times merged:          15799
Number of times stopped:         15801
Number of times breaked:         7

Total time for CPA algorithm:        20.790s (Max:     5.562s)
  Time for choose from waitlist:      0.149s
  Time for precision adjustment:     11.525s
  Time for transfer relation:         5.973s
  Time for merge operator:            1.536s
  Time for stop operator:             0.306s
  Time for adding to reached set:     0.385s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  16 (count: 7, min: 2, max: 3, avg: 2.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.556s
  Counterexample analysis:                             3.119s (Max:     0.697s, Calls: 7)
    Refinement sat check:                              2.757s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.008s
  ARG update:                                          0.315s

Length of refined path (in blocks):                      16 (count: 7, min: 2, max: 3, avg: 2.29)
Number of affected states:                                9 (count: 7, min: 1, max: 2, avg: 1.29)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 7, min: 1, max: 2, avg: 1.29)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           2 (count: 7, min: 0, max: 1, avg: 0.29)
Equal non-trivial interpolants along paths:               0 (count: 7, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 16967
Max. size of reached set after ref.:  5656
Avg. size of reached set before ref.: 12917.43
Avg. size of reached set after ref.:  5656.00

Total time for CEGAR algorithm:      24.840s
Time for refinements:                 3.992s
Average time for refinement:          0.570s
Max time for refinement:              0.821s

Code Coverage
-----------------------------
  Function coverage:      0.568
  Visited lines:          985
  Total lines:            1720
  Line coverage:          0.573
  Visited conditions:     580
  Total conditions:       750
  Condition coverage:     0.773

CPAchecker general statistics
-----------------------------
Number of program locations:     2255
Number of CFA edges:             2744
Number of relevant variables:    307
Number of functions:             74
Number of loops:                 9
Size of reached set:             5656
  Number of reached locations:   1104 (49%)
    Avg states per location:     5
    Max states per location:     61 (at node N174)
  Number of reached functions:   42 (57%)
  Number of partitions:          5656
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.847s
  Time for loading CPAs:          1.059s
  Time for loading parser:        0.825s
  Time for CFA construction:      2.703s
    Time for parsing file(s):     0.769s
    Time for AST to CFA:          0.762s
    Time for CFA sanity check:    0.292s
    Time for post-processing:     0.686s
      Time for var class.:        0.397s
Time for Analysis:               24.840s
CPU time for analysis:           24.850s
Total time for CPAchecker:       29.696s
Total CPU time for CPAchecker:   29.680s
Time for statistics:              0.232s

Time for Garbage Collector:       0.650s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     52MB (    49 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8199MB (  7819 MiB) max;   8128MB (  7752 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
