scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8zhl8tw6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            75 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            21 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (72%)
  Times precision was empty:       3 (4%)
  Times precision was {false}:     53 (71%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19 (25%)
  Times result was 'false':        49 (65%)
Number of strengthen sat checks:   0
Number of coverage checks:         49469
  BDD entailment checks:           27
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       979
Number of predicates discovered:          61
Number of abstraction locations:          2
Max number of predicates per location:    60
Avg number of predicates per location:    30
Total predicates per abstraction:         721
Max number of predicates per abstraction: 60
Avg number of predicates per abstraction: 10.01
Number of irrelevant predicates:          62 (9%)
Number of preds handled by boolean abs:   659 (91%)
  Total number of models for allsat:      19211
  Max number of models for allsat:        9648
  Avg number of models for allsat:        1011.11

Time for post operator:                  3.782s
  Time for path formula creation:        3.603s
Time for strengthen operator:            0.333s
Time for prec operator:                877.407s
  Time for abstraction:                877.202s (Max:   453.136s, Count: 75)
    Boolean abstraction:               875.076s
    Solving time:                        5.033s (Max:     0.395s)
    Model enumeration time:            866.653s
    Time for BDD construction:           3.916s (Max:     1.910s)
Time for merge operator:                 0.972s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):   871.687s

Number of path formula cache hits:   99374 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.364s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               236814
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       28808 (count: 12105, min: 0, max: 7866, avg: 2.38)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.163s (in 12 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.541s
  Time for transition matches:                         0.213s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       120305 (count: 120305, min: 1, max: 1, avg: 1.00) [1 x 120305]

CPA algorithm statistics
------------------------
Number of iterations:            88706
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   113487
Max successors for one state:    2
Number of times merged:          24721
Number of times stopped:         24723
Number of times breaked:         5

Total time for CPA algorithm:       889.796s (Max:   790.243s)
  Time for choose from waitlist:      0.202s
  Time for precision adjustment:    878.950s
  Time for transfer relation:         7.078s
  Time for merge operator:            1.783s
  Time for stop operator:             0.393s
  Time for adding to reached set:     0.382s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  16 (count: 5, min: 2, max: 5, avg: 3.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.037s
  Counterexample analysis:                             5.562s (Max:     2.901s, Calls: 5)
    Refinement sat check:                              5.033s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.007s
  ARG update:                                          0.320s

Length of refined path (in blocks):                      16 (count: 5, min: 2, max: 5, avg: 3.20)
Number of affected states:                               11 (count: 5, min: 1, max: 4, avg: 2.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        11 (count: 5, min: 1, max: 4, avg: 2.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           6 (count: 5, min: 0, max: 3, avg: 1.20)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 27881
Max. size of reached set after ref.:  5734
Avg. size of reached set before ref.: 17904.00
Avg. size of reached set after ref.:  5734.00

Total time for CEGAR algorithm:     896.343s
Time for refinements:                 6.492s
Average time for refinement:          1.298s
Max time for refinement:              3.144s

Code Coverage
-----------------------------
  Function coverage:      0.636
  Visited lines:          1078
  Total lines:            1753
  Line coverage:          0.615
  Visited conditions:     614
  Total conditions:       760
  Condition coverage:     0.808

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             27865
  Number of reached locations:   1200 (52%)
    Avg states per location:     23
    Max states per location:     345 (at node N2200)
  Number of reached functions:   49 (64%)
  Number of partitions:          27862
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N615 (before lines 835-863), Function cleanup called from node N868, stack depth 4 [5c84624f], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.017s
  Time for loading CPAs:          0.736s
  Time for loading parser:        0.716s
  Time for CFA construction:      2.371s
    Time for parsing file(s):     0.632s
    Time for AST to CFA:          0.686s
    Time for CFA sanity check:    0.261s
    Time for post-processing:     0.626s
      Time for var class.:        0.390s
Time for Analysis:              896.344s
CPU time for analysis:          896.320s
Total time for CPAchecker:      900.365s
Total CPU time for CPAchecker:  900.330s
Time for statistics:              0.544s

Time for Garbage Collector:       1.150s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     70MB (    67 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8721MB (  8317 MiB) max;   8420MB (  8030 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
