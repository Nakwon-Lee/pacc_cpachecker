scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_acy8twqu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            10 (33%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (67%)
  Times precision was empty:       3 (10%)
  Times precision was {false}:     19 (63%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (27%)
  Times result was 'false':        17 (57%)
Number of strengthen sat checks:   0
Number of coverage checks:         24284
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       979
Number of predicates discovered:          32
Number of abstraction locations:          2
Max number of predicates per location:    31
Avg number of predicates per location:    16
Total predicates per abstraction:         141
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 5.22
Number of irrelevant predicates:          22 (16%)
Number of preds handled by boolean abs:   119 (84%)
  Total number of models for allsat:      372
  Max number of models for allsat:        228
  Avg number of models for allsat:        46.50

Time for post operator:                  3.389s
  Time for path formula creation:        3.199s
Time for strengthen operator:            0.173s
Time for prec operator:                 13.777s
  Time for abstraction:                 13.575s (Max:     5.958s, Count: 30)
    Boolean abstraction:                12.744s
    Solving time:                        2.427s (Max:     0.421s)
    Model enumeration time:             10.269s
    Time for BDD construction:           0.085s (Max:     0.033s)
Time for merge operator:                 0.719s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):    12.696s

Number of path formula cache hits:   36110 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.014s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               16216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         634 (count: 1046, min: 0, max: 405, avg: 0.61)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.463s
Automaton transfers with branching:                0
Automaton transfer successors:                        59079 (count: 59079, min: 1, max: 1, avg: 1.00) [1 x 59079]

CPA algorithm statistics
------------------------
Number of iterations:            43521
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   55690
Max successors for one state:    2
Number of times merged:          12138
Number of times stopped:         12140
Number of times breaked:         3

Total time for CPA algorithm:        23.948s (Max:    10.073s)
  Time for choose from waitlist:      0.135s
  Time for precision adjustment:     14.915s
  Time for transfer relation:         5.935s
  Time for merge operator:            1.524s
  Time for stop operator:             0.313s
  Time for adding to reached set:     0.297s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   7 (count: 3, min: 2, max: 3, avg: 2.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.472s
  Counterexample analysis:                             1.249s (Max:     0.545s, Calls: 3)
    Refinement sat check:                              1.098s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.002s
  ARG update:                                          0.134s

Length of refined path (in blocks):                       7 (count: 3, min: 2, max: 3, avg: 2.33)
Number of affected states:                                4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 3, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 16797
Max. size of reached set after ref.:  5734
Avg. size of reached set before ref.: 13100.00
Avg. size of reached set after ref.:  5734.00

Total time for CEGAR algorithm:      25.676s
Time for refinements:                 1.706s
Average time for refinement:          0.568s
Max time for refinement:              0.704s

Code Coverage
-----------------------------
  Function coverage:      0.636
  Visited lines:          1078
  Total lines:            1753
  Line coverage:          0.615
  Visited conditions:     614
  Total conditions:       760
  Condition coverage:     0.808

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             21434
  Number of reached locations:   1200 (52%)
    Avg states per location:     17
    Max states per location:     255 (at node N2200)
  Number of reached functions:   49 (64%)
  Number of partitions:          21432
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N615 (before lines 835-863), Function cleanup called from node N868, stack depth 4 [9fecdf1], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          4.062s
  Time for loading CPAs:          0.812s
  Time for loading parser:        0.727s
  Time for CFA construction:      2.336s
    Time for parsing file(s):     0.635s
    Time for AST to CFA:          0.699s
    Time for CFA sanity check:    0.251s
    Time for post-processing:     0.582s
      Time for var class.:        0.334s
Time for Analysis:               25.676s
CPU time for analysis:           25.680s
Total time for CPAchecker:       29.743s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.502s

Time for Garbage Collector:       0.497s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     55MB (    52 MiB) avg;     94MB (    90 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8138MB (  7761 MiB) max;   8121MB (  7745 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
