scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__y242850/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1262: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (77%)
  Times precision was empty:       6 (46%)
  Times precision was {false}:     5 (38%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2 (15%)
  Times result was 'false':        5 (38%)
Number of strengthen sat checks:   0
Number of coverage checks:         18831
  BDD entailment checks:           1
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3357
Number of predicates discovered:          15
Number of abstraction locations:          2
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         33
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 4.71
Number of irrelevant predicates:          5 (15%)
Number of preds handled by boolean abs:   28 (85%)
  Total number of models for allsat:      5
  Max number of models for allsat:        3
  Avg number of models for allsat:        2.50

Time for post operator:                  3.927s
  Time for path formula creation:        3.726s
Time for strengthen operator:            0.171s
Time for prec operator:                  7.220s
  Time for abstraction:                  7.049s (Max:     3.275s, Count: 13)
    Boolean abstraction:                 3.658s
    Solving time:                        4.534s (Max:     1.705s)
    Model enumeration time:              1.489s
    Time for BDD construction:           0.016s (Max:     0.015s)
Time for merge operator:                 0.967s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     6.023s

Number of path formula cache hits:   8949 (19%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.597s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               429
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          65 (count: 105, min: 0, max: 65, avg: 0.62)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.396s
Automaton transfers with branching:                0
Automaton transfer successors:                        45722 (count: 45722, min: 1, max: 1, avg: 1.00) [1 x 45722]

CPA algorithm statistics
------------------------
Number of iterations:            33711
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   43140
Max successors for one state:    2
Number of times merged:          9415
Number of times stopped:         9415
Number of times breaked:         5

Total time for CPA algorithm:        17.415s (Max:     5.168s)
  Time for choose from waitlist:      0.213s
  Time for precision adjustment:      8.160s
  Time for transfer relation:         6.194s
  Time for merge operator:            1.683s
  Time for stop operator:             0.232s
  Time for adding to reached set:     0.198s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                   6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.914s
  Counterexample analysis:                             7.716s (Max:     4.046s, Calls: 5)
    Refinement sat check:                              7.344s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.003s
  ARG update:                                          0.039s

Length of refined path (in blocks):                       6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of affected states:                                1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 27129
Max. size of reached set after ref.:  21649
Avg. size of reached set before ref.: 16252.00
Avg. size of reached set after ref.:  15155.20

Total time for CEGAR algorithm:      26.147s
Time for refinements:                 8.644s
Average time for refinement:          1.728s
Max time for refinement:              4.409s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          1014
  Total lines:            1682
  Line coverage:          0.603
  Visited conditions:     570
  Total conditions:       716
  Condition coverage:     0.796

CPAchecker general statistics
-----------------------------
Number of program locations:     2193
Number of CFA edges:             2667
Number of relevant variables:    315
Number of functions:             74
Number of loops:                 9
Size of reached set:             28235
  Number of reached locations:   1134 (52%)
    Avg states per location:     24
    Max states per location:     343 (at node N681)
  Number of reached functions:   48 (65%)
  Number of partitions:          28234
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N106 (before lines 188-216), Function cleanup called from node N2620, stack depth 4 [75973f7a], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          4.071s
  Time for loading CPAs:          0.816s
  Time for loading parser:        0.741s
  Time for CFA construction:      2.350s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          0.666s
    Time for CFA sanity check:    0.247s
    Time for post-processing:     0.533s
      Time for var class.:        0.296s
Time for Analysis:               26.148s
CPU time for analysis:           26.140s
Total time for CPAchecker:       30.224s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.546s

Time for Garbage Collector:       0.728s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                108MB (   103 MiB) max;     65MB (    62 MiB) avg;    118MB (   112 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8271MB (  7888 MiB) max;   8173MB (  7794 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
