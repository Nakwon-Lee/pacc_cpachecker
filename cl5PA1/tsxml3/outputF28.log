scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-mthreaded/rekcba_nxt_true-unreach-call.1.M1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b8qg8hv1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function nxt_motor_set_speed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nxt_motor_set_count to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ecrobot_status_monitor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function write_mode_on_lcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11417 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10756 (94%)
  Because of loop head:            432 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         229 (2%)
  Times precision was empty:       9939 (87%)
  Times precision was {false}:     104 (1%)
  Times result was cached:         1117 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      257 (2%)
  Times result was 'false':        264 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         6720
  BDD entailment checks:           1080
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       449
Number of predicates discovered:          8
Number of abstraction locations:          26
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         2592
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 7.18
Number of irrelevant predicates:          1846 (71%)
Number of preds handled by boolean abs:   316 (12%)
  Total number of models for allsat:      77
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.30

Time for post operator:                  5.346s
  Time for path formula creation:        5.229s
Time for strengthen operator:            0.152s
Time for prec operator:                 11.364s
  Time for abstraction:                 10.988s (Max:     2.458s, Count: 11417)
    Boolean abstraction:                 8.837s
    Solving time:                        8.855s (Max:     2.326s)
    Model enumeration time:              0.176s
    Time for BDD construction:           0.014s (Max:     0.006s)
Time for merge operator:                 0.130s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     9.031s

Number of path formula cache hits:   82367 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.135s

Total number of created targets for pointer analysis: 54904
   Number of created targets for uf: *unsigned_char is 6337
   Number of created targets for uf: *_Bool is 401


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         375 (count: 13132, min: 0, max: 40, avg: 0.03)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.313s
Automaton transfers with branching:                0
Automaton transfer successors:                        97293 (count: 97293, min: 1, max: 1, avg: 1.00) [1 x 97293]

CPA algorithm statistics
------------------------
Number of iterations:            72482
Max size of waitlist:            249
Average size of waitlist:        39
Number of computed successors:   80832
Max successors for one state:    2
Number of times merged:          2820
Number of times stopped:         3900
Number of times breaked:         229

Total time for CPA algorithm:        21.036s (Max:     3.445s)
  Time for choose from waitlist:      0.101s
  Time for precision adjustment:     12.250s
  Time for transfer relation:         7.426s
  Time for merge operator:            0.282s
  Time for stop operator:             0.196s
  Time for adding to reached set:     0.244s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   229
Avg. length of target path (in blocks):                6676 (count: 229, min: 16, max: 48, avg: 29.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 541.058s
  Counterexample analysis:                           263.506s (Max:    98.388s, Calls: 229)
    Refinement sat check:                            223.415s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                        276.811s
  Predicate creation:                                  0.061s
  Precision update:                                    0.062s
  ARG update:                                          0.334s

Length of refined path (in blocks):                    4564 (count: 228, min: 10, max: 33, avg: 20.02)
Number of affected states:                              739 (count: 228, min: 3, max: 24, avg: 3.24)
Length (states) of path with itp 'true':               3597 (count: 228, min: 5, max: 29, avg: 15.78)
Length (states) of path with itp non-trivial itp:       739 (count: 228, min: 3, max: 24, avg: 3.24)
Length (states) of path with itp 'false':               228 (count: 228, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           7 (count: 228, min: 0, max: 2, avg: 0.03)
Equal non-trivial interpolants along paths:             504 (count: 228, min: 1, max: 21, avg: 2.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                229
Number of successful refinements:     228
Number of failed refinements:         0
Max. size of reached set before ref.: 1653
Max. size of reached set after ref.:  1303
Avg. size of reached set before ref.: 1382.16
Avg. size of reached set after ref.:  1051.95

Total time for CEGAR algorithm:     563.297s
Time for refinements:               542.022s
Average time for refinement:          2.366s
Max time for refinement:            375.202s

Code Coverage
-----------------------------
  Function coverage:      0.618
  Visited lines:          932
  Total lines:            1169
  Line coverage:          0.797
  Visited conditions:     1004
  Total conditions:       1082
  Condition coverage:     0.928

CPAchecker general statistics
-----------------------------
Number of program locations:     1837
Number of CFA edges:             2083
Number of relevant variables:    101
Number of functions:             34
Number of loops:                 1
Size of reached set:             1616
  Number of reached locations:   1158 (63%)
    Avg states per location:     1
    Max states per location:     24 (at node N227)
  Number of reached functions:   21 (62%)
  Number of partitions:          1616
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        33

Time for analysis setup:          4.146s
  Time for loading CPAs:          0.865s
  Time for loading parser:        0.705s
  Time for CFA construction:      2.376s
    Time for parsing file(s):     0.661s
    Time for AST to CFA:          0.759s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.578s
      Time for var class.:        0.357s
Time for Analysis:              563.297s
CPU time for analysis:          563.210s
Time for analyzing result:        0.002s
Total time for CPAchecker:      567.447s
Total CPU time for CPAchecker:  567.350s
Time for statistics:              0.150s

Time for Garbage Collector:       0.675s (in 85 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     60MB (    57 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8488MB (  8095 MiB) max;   8394MB (  8005 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 85) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
