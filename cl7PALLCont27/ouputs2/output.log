scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9_8_74mu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1262: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            23 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            8 (35%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (65%)
  Times precision was empty:       6 (26%)
  Times precision was {false}:     10 (43%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7 (30%)
  Times result was 'false':        10 (43%)
Number of strengthen sat checks:   0
Number of coverage checks:         33631
  BDD entailment checks:           21
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3357
Number of predicates discovered:          15
Number of abstraction locations:          2
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         108
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 6.35
Number of irrelevant predicates:          10 (9%)
Number of preds handled by boolean abs:   98 (91%)
  Total number of models for allsat:      60
  Max number of models for allsat:        15
  Avg number of models for allsat:        8.57

Time for post operator:                  3.221s
  Time for path formula creation:        3.161s
Time for strengthen operator:            0.180s
Time for prec operator:                  9.270s
  Time for abstraction:                  9.159s (Max:     2.095s, Count: 23)
    Boolean abstraction:                 5.516s
    Solving time:                        5.120s (Max:     1.128s)
    Model enumeration time:              2.902s
    Time for BDD construction:           0.033s (Max:     0.017s)
Time for merge operator:                 0.873s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     8.022s

Number of path formula cache hits:   8949 (11%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.078s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1053
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         229 (count: 231, min: 0, max: 65, avg: 0.99)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.306s
Automaton transfers with branching:                0
Automaton transfer successors:                        81392 (count: 81392, min: 1, max: 1, avg: 1.00) [1 x 81392]

CPA algorithm statistics
------------------------
Number of iterations:            60081
Max size of waitlist:            22
Average size of waitlist:        10
Number of computed successors:   76900
Max successors for one state:    2
Number of times merged:          16805
Number of times stopped:         16806
Number of times breaked:         5

Total time for CPA algorithm:        17.747s (Max:     9.936s)
  Time for choose from waitlist:      0.074s
  Time for precision adjustment:     10.161s
  Time for transfer relation:         4.973s
  Time for merge operator:            1.404s
  Time for stop operator:             0.205s
  Time for adding to reached set:     0.188s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                   6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.719s
  Counterexample analysis:                             5.550s (Max:     2.813s, Calls: 5)
    Refinement sat check:                              5.259s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.001s
  ARG update:                                          0.021s

Length of refined path (in blocks):                       6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of affected states:                                1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 27126
Max. size of reached set after ref.:  21646
Avg. size of reached set before ref.: 16251.40
Avg. size of reached set after ref.:  15154.60

Total time for CEGAR algorithm:      24.071s
Time for refinements:                 6.245s
Average time for refinement:          1.249s
Max time for refinement:              3.106s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          1014
  Total lines:            1682
  Line coverage:          0.603
  Visited conditions:     570
  Total conditions:       716
  Condition coverage:     0.796

CPAchecker general statistics
-----------------------------
Number of program locations:     2193
Number of CFA edges:             2667
Number of relevant variables:    315
Number of functions:             74
Number of loops:                 9
Size of reached set:             54601
  Number of reached locations:   1134 (52%)
    Avg states per location:     48
    Max states per location:     690 (at node N681)
  Number of reached functions:   48 (65%)
  Number of partitions:          54596
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N106 (before lines 188-216), Function cleanup called from node N2620, stack depth 4 [527d1fe1], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.815s
  Time for loading CPAs:          0.576s
  Time for loading parser:        0.501s
  Time for CFA construction:      1.595s
    Time for parsing file(s):     0.466s
    Time for AST to CFA:          0.462s
    Time for CFA sanity check:    0.171s
    Time for post-processing:     0.385s
      Time for var class.:        0.220s
Time for Analysis:               24.072s
CPU time for analysis:           24.060s
Time for analyzing result:        0.057s
Total time for CPAchecker:       26.891s
Total CPU time for CPAchecker:   26.870s
Time for statistics:              0.706s

Time for Garbage Collector:       0.979s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     71MB (    67 MiB) avg;    141MB (   134 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     33MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           165MB (   158 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8271MB (  7888 MiB) max;   8197MB (  7818 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
