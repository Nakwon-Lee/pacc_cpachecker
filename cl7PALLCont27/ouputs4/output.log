scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j3jiuckn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 399: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1226: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1605: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2185: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2314: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1396: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            153 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            47 (31%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         106 (69%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     105 (69%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      45 (29%)
  Times result was 'false':        101 (66%)
Number of strengthen sat checks:   0
Number of coverage checks:         93199
  BDD entailment checks:           249
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1015
Number of predicates discovered:          46
Number of abstraction locations:          2
Max number of predicates per location:    45
Avg number of predicates per location:    23
Total predicates per abstraction:         1573
Max number of predicates per abstraction: 45
Avg number of predicates per abstraction: 10.49
Number of irrelevant predicates:          105 (7%)
Number of preds handled by boolean abs:   1468 (93%)
  Total number of models for allsat:      5704
  Max number of models for allsat:        464
  Avg number of models for allsat:        126.76

Time for post operator:                  3.166s
  Time for path formula creation:        3.059s
Time for strengthen operator:            0.231s
Time for prec operator:                 45.030s
  Time for abstraction:                 44.765s (Max:     2.911s, Count: 153)
    Boolean abstraction:                42.707s
    Solving time:                        6.597s (Max:     0.318s)
    Model enumeration time:             36.047s
    Time for BDD construction:           0.466s (Max:     0.055s)
Time for merge operator:                 1.075s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):    42.644s

Number of path formula cache hits:   170240 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.866s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               94701
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16677 (count: 7852, min: 0, max: 1286, avg: 2.12)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.411s
Automaton transfers with branching:                0
Automaton transfer successors:                       229444 (count: 229444, min: 1, max: 1, avg: 1.00) [1 x 229444]

CPA algorithm statistics
------------------------
Number of iterations:            170806
Max size of waitlist:            30
Average size of waitlist:        13
Number of computed successors:   217413
Max successors for one state:    2
Number of times merged:          46475
Number of times stopped:         46481
Number of times breaked:         5

Total time for CPA algorithm:        55.570s (Max:    27.825s)
  Time for choose from waitlist:      0.103s
  Time for precision adjustment:     46.535s
  Time for transfer relation:         5.839s
  Time for merge operator:            1.705s
  Time for stop operator:             0.272s
  Time for adding to reached set:     0.357s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.218s
  Counterexample analysis:                             1.736s (Max:     0.703s, Calls: 5)
    Refinement sat check:                              1.536s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.001s
  ARG update:                                          0.395s

Length of refined path (in blocks):                      14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of affected states:                                9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 5, min: 0, max: 2, avg: 0.80)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 48812
Max. size of reached set after ref.:  4269
Avg. size of reached set before ref.: 25341.00
Avg. size of reached set after ref.:  4269.00

Total time for CEGAR algorithm:      58.126s
Time for refinements:                 2.524s
Average time for refinement:          0.504s
Max time for refinement:              0.906s

Code Coverage
-----------------------------
  Function coverage:      0.632
  Visited lines:          1058
  Total lines:            1730
  Line coverage:          0.612
  Visited conditions:     612
  Total conditions:       756
  Condition coverage:     0.810

CPAchecker general statistics
-----------------------------
Number of program locations:     2274
Number of CFA edges:             2769
Number of relevant variables:    302
Number of functions:             76
Number of loops:                 9
Size of reached set:             65472
  Number of reached locations:   1191 (52%)
    Avg states per location:     54
    Max states per location:     475 (at node N418)
  Number of reached functions:   48 (63%)
  Number of partitions:          65458
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N106 (before lines 188-216), Function cleanup called from node N964, stack depth 4 [51671b08], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          3.177s
  Time for loading CPAs:          0.682s
  Time for loading parser:        0.547s
  Time for CFA construction:      1.794s
    Time for parsing file(s):     0.496s
    Time for AST to CFA:          0.513s
    Time for CFA sanity check:    0.200s
    Time for post-processing:     0.443s
      Time for var class.:        0.246s
Time for Analysis:               58.126s
CPU time for analysis:           58.130s
Time for analyzing result:        0.047s
Total time for CPAchecker:       61.307s
Total CPU time for CPAchecker:   61.310s
Time for statistics:              0.711s

Time for Garbage Collector:       1.651s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                135MB (   129 MiB) max;     87MB (    83 MiB) avg;    147MB (   140 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     34MB (    32 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           178MB (   169 MiB) max;    139MB (   133 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8136MB (  7759 MiB) max;   8102MB (  7727 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
