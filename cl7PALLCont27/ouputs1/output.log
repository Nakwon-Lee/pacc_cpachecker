scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product11_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zzyjz5ca/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 50: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 224: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 263: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1012: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1178: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1414: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1958: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1992: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2001: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2134: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2549: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2605: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3242: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 849: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            29 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            11 (38%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (62%)
  Times precision was empty:       6 (21%)
  Times precision was {false}:     13 (45%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (34%)
  Times result was 'false':        13 (45%)
Number of strengthen sat checks:   0
Number of coverage checks:         28629
  BDD entailment checks:           45
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3075
Number of predicates discovered:          24
Number of abstraction locations:          2
Max number of predicates per location:    23
Avg number of predicates per location:    12
Total predicates per abstraction:         243
Max number of predicates per abstraction: 23
Avg number of predicates per abstraction: 10.57
Number of irrelevant predicates:          13 (5%)
Number of preds handled by boolean abs:   230 (95%)
  Total number of models for allsat:      362
  Max number of models for allsat:        96
  Avg number of models for allsat:        36.20

Time for post operator:                  3.318s
  Time for path formula creation:        3.232s
Time for strengthen operator:            0.198s
Time for prec operator:                  8.679s
  Time for abstraction:                  8.546s (Max:     1.084s, Count: 29)
    Boolean abstraction:                 5.344s
    Solving time:                        4.394s (Max:     0.863s)
    Model enumeration time:              3.073s
    Time for BDD construction:           0.085s (Max:     0.030s)
Time for merge operator:                 0.829s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     7.467s

Number of path formula cache hits:   5977 (9%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.144s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               11760
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         743 (count: 503, min: 0, max: 115, avg: 1.48)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.283s
Automaton transfers with branching:                0
Automaton transfer successors:                        69178 (count: 69178, min: 1, max: 1, avg: 1.00) [1 x 69178]

CPA algorithm statistics
------------------------
Number of iterations:            51385
Max size of waitlist:            24
Average size of waitlist:        11
Number of computed successors:   65694
Max successors for one state:    2
Number of times merged:          14292
Number of times stopped:         14293
Number of times breaked:         5

Total time for CPA algorithm:        16.862s (Max:    10.479s)
  Time for choose from waitlist:      0.098s
  Time for precision adjustment:      9.380s
  Time for transfer relation:         4.990s
  Time for merge operator:            1.379s
  Time for stop operator:             0.191s
  Time for adding to reached set:     0.169s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                   6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.233s
  Counterexample analysis:                             3.074s (Max:     1.295s, Calls: 5)
    Refinement sat check:                              2.874s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.014s
  ARG update:                                          0.017s

Length of refined path (in blocks):                       6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of affected states:                                1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 18136
Max. size of reached set after ref.:  14454
Avg. size of reached set before ref.: 10857.40
Avg. size of reached set after ref.:  10120.20

Total time for CEGAR algorithm:      20.599s
Time for refinements:                 3.677s
Average time for refinement:          0.735s
Max time for refinement:              1.499s

Code Coverage
-----------------------------
  Function coverage:      0.620
  Visited lines:          961
  Total lines:            1647
  Line coverage:          0.583
  Visited conditions:     556
  Total conditions:       712
  Condition coverage:     0.781

CPAchecker general statistics
-----------------------------
Number of program locations:     2151
Number of CFA edges:             2617
Number of relevant variables:    293
Number of functions:             71
Number of loops:                 9
Size of reached set:             47703
  Number of reached locations:   1091 (51%)
    Avg states per location:     43
    Max states per location:     383 (at node N816)
  Number of reached functions:   44 (62%)
  Number of partitions:          47695
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N341 (before lines 490-518), Function cleanup called from node N2572, stack depth 4 [1d06801f], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          2.933s
  Time for loading CPAs:          0.592s
  Time for loading parser:        0.524s
  Time for CFA construction:      1.657s
    Time for parsing file(s):     0.500s
    Time for AST to CFA:          0.449s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.383s
      Time for var class.:        0.218s
Time for Analysis:               20.599s
CPU time for analysis:           20.600s
Time for analyzing result:        0.037s
Total time for CPAchecker:       23.550s
Total CPU time for CPAchecker:   23.540s
Time for statistics:              0.547s

Time for Garbage Collector:       0.890s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   115 MiB) max;     67MB (    64 MiB) avg;    137MB (   131 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           153MB (   146 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8204MB (  7824 MiB) max;   8161MB (  7783 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
