scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f4_c_0tp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 706: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2585: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2737: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            140 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            39 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         101 (72%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     100 (71%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      37 (26%)
  Times result was 'false':        96 (69%)
Number of strengthen sat checks:   0
Number of coverage checks:         25494
  BDD entailment checks:           150
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       605
Number of predicates discovered:          80
Number of abstraction locations:          2
Max number of predicates per location:    79
Avg number of predicates per location:    40
Total predicates per abstraction:         1554
Max number of predicates per abstraction: 79
Avg number of predicates per abstraction: 11.34
Number of irrelevant predicates:          103 (7%)
Number of preds handled by boolean abs:   1451 (93%)
  Total number of models for allsat:      41247
  Max number of models for allsat:        4320
  Avg number of models for allsat:        1114.78

Time for post operator:                  1.766s
  Time for path formula creation:        1.695s
Time for strengthen operator:            0.100s
Time for prec operator:                 59.207s
  Time for abstraction:                 59.108s (Max:     6.787s, Count: 140)
    Boolean abstraction:                53.894s
    Solving time:                        4.385s (Max:     0.120s)
    Model enumeration time:             47.095s
    Time for BDD construction:           5.679s (Max:     0.782s)
Time for merge operator:                 0.537s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):    51.480s

Number of path formula cache hits:   45625 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.615s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               122559
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       77147 (count: 32115, min: 0, max: 15832, avg: 2.40)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.253s (in 86 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.242s
Automaton transfers with branching:                0
Automaton transfer successors:                        78975 (count: 78975, min: 1, max: 1, avg: 1.00) [1 x 78975]

CPA algorithm statistics
------------------------
Number of iterations:            59974
Max size of waitlist:            32
Average size of waitlist:        14
Number of computed successors:   72780
Max successors for one state:    2
Number of times merged:          12672
Number of times stopped:         12678
Number of times breaked:         5

Total time for CPA algorithm:        64.373s (Max:    45.609s)
  Time for choose from waitlist:      0.077s
  Time for precision adjustment:     59.653s
  Time for transfer relation:         3.121s
  Time for merge operator:            0.776s
  Time for stop operator:             0.168s
  Time for adding to reached set:     0.164s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.723s
  Counterexample analysis:                             0.528s (Max:     0.267s, Calls: 5)
    Refinement sat check:                              0.459s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.003s
  ARG update:                                          0.151s

Length of refined path (in blocks):                      14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of affected states:                                9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           3 (count: 5, min: 0, max: 2, avg: 0.60)
Equal non-trivial interpolants along paths:               1 (count: 5, min: 0, max: 1, avg: 0.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 11438
Max. size of reached set after ref.:  134
Avg. size of reached set before ref.: 6106.60
Avg. size of reached set after ref.:  134.00

Total time for CEGAR algorithm:      65.210s
Time for refinements:                 0.832s
Average time for refinement:          0.166s
Max time for refinement:              0.343s

Code Coverage
-----------------------------
  Function coverage:      0.589
  Visited lines:          789
  Total lines:            1397
  Line coverage:          0.565
  Visited conditions:     308
  Total conditions:       488
  Condition coverage:     0.631

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             30144
  Number of reached locations:   804 (42%)
    Avg states per location:     37
    Max states per location:     198 (at node N2010)
  Number of reached functions:   63 (59%)
  Number of partitions:          30134
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N441 (before lines 772-939), Function test called from node N86, stack depth 2 [464649c], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          3.025s
  Time for loading CPAs:          0.589s
  Time for loading parser:        0.592s
  Time for CFA construction:      1.686s
    Time for parsing file(s):     0.512s
    Time for AST to CFA:          0.536s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.375s
      Time for var class.:        0.199s
Time for Analysis:               65.210s
CPU time for analysis:           65.210s
Time for analyzing result:        0.020s
Total time for CPAchecker:       68.239s
Total CPU time for CPAchecker:   68.220s
Time for statistics:              0.351s

Time for Garbage Collector:       0.680s (in 72 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 99MB (    94 MiB) max;     60MB (    57 MiB) avg;    108MB (   103 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     34MB (    32 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8135MB (  7758 MiB) max;   8128MB (  7752 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
