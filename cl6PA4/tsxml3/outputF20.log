scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--hwmon--applesmc.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i1gkby2t/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6795: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6990: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7027: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7040: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7053: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7105: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7135: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7165: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 7197: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7717: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7730: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7752: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7777: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7790: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7907: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7462: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7101: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6903: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4047: Return type of function __builtin_bswap32 is void, but result is used as type int: tmp = __builtin_bswap32(val); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_bswap32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_bswap32, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6889: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            921370 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  783989 (85%)
  Because of loop head:            98298 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39083 (4%)
  Times precision was empty:       208362 (23%)
  Times precision was {false}:     875 (0%)
  Times result was cached:         703706 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8427 (1%)
  Times result was 'false':        61575 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         249008
  BDD entailment checks:           190030
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          79
Number of abstraction locations:          326
Max number of predicates per location:    34
Avg number of predicates per location:    12
Total predicates per abstraction:         4483360
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 481.98
Number of irrelevant predicates:          2420120 (54%)
Number of preds handled by boolean abs:   77358 (2%)
  Total number of models for allsat:      24219
  Max number of models for allsat:        128
  Avg number of models for allsat:        2.87

Time for post operator:                 25.102s
  Time for path formula creation:       23.592s
Time for strengthen operator:            2.821s
Time for prec operator:                212.124s
  Time for abstraction:                200.627s (Max:     0.243s, Count: 921370)
    Boolean abstraction:                16.947s
    Solving time:                       11.009s (Max:     0.062s)
    Model enumeration time:              3.526s
    Time for BDD construction:           0.815s (Max:     0.013s)
Time for merge operator:                 0.422s
Time for coverage check:                 0.271s
  Time for BDD entailment checks:        0.226s
Total time for SMT solver (w/o itp):    14.535s

Number of path formula cache hits:   4338812 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.593s

Total number of created targets for pointer analysis: 8612
   Number of created targets for uf: *signed_int is 477
   Number of created targets for uf: *unsigned_char is 1816
   Number of created targets for uf: *(struct_applesmc_entry)* is 35
   Number of created targets for uf: *_Bool is 163
   Number of created targets for uf: *(struct_platform_driver)* is 2
   Number of created targets for uf: *unsigned_int is 186
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 2569


Number of BDD nodes:                               82745
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       48050 (count: 467578, min: 0, max: 572, avg: 0.10)
Time for BDD node cleanup:                             0.121s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.971s
  Time for transition matches:                         2.863s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.070s
Automaton transfers with branching:                0
Automaton transfer successors:                      3516831 (count: 3516831, min: 1, max: 1, avg: 1.00) [1 x 3516831]

CPA algorithm statistics
------------------------
Number of iterations:            2510605
Max size of waitlist:            373
Average size of waitlist:        110
Number of computed successors:   2749967
Max successors for one state:    2
Number of times merged:          29489
Number of times stopped:         112101
Number of times breaked:         12393

Total time for CPA algorithm:       306.058s (Max:     1.266s)
  Time for choose from waitlist:      1.405s
  Time for precision adjustment:    228.799s
  Time for transfer relation:        59.590s
  Time for merge operator:            1.263s
  Time for stop operator:             3.126s
  Time for adding to reached set:     4.921s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12393
Avg. length of target path (in blocks):             1181372 (count: 12393, min: 31, max: 134, avg: 95.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 471.412s
  Counterexample analysis:                           436.505s (Max:     0.256s, Calls: 12393)
    Refinement sat check:                            249.594s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.513s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.570s
  Precision update:                                   24.670s
  ARG update:                                          4.475s

Length of refined path (in blocks):                 1148794 (count: 12393, min: 18, max: 134, avg: 92.70)
Number of affected states:                           151539 (count: 12393, min: 1, max: 133, avg: 12.23)
Length (states) of path with itp 'true':             984862 (count: 12393, min: 0, max: 123, avg: 79.47)
Length (states) of path with itp non-trivial itp:    151539 (count: 12393, min: 1, max: 133, avg: 12.23)
Length (states) of path with itp 'false':              7170 (count: 12393, min: 0, max: 1, avg: 0.58)
Different non-trivial interpolants along paths:        5855 (count: 12393, min: 0, max: 3, avg: 0.47)
Equal non-trivial interpolants along paths:          133291 (count: 12393, min: 0, max: 131, avg: 10.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12393
Number of successful refinements:     12393
Number of failed refinements:         0
Max. size of reached set before ref.: 16960
Max. size of reached set after ref.:  16565
Avg. size of reached set before ref.: 6585.18
Avg. size of reached set after ref.:  6377.86

Total time for CEGAR algorithm:     893.758s
Time for refinements:               540.561s
Average time for refinement:          0.043s
Max time for refinement:              0.266s

Code Coverage
-----------------------------
  Function coverage:      0.258
  Visited lines:          1425
  Total lines:            3562
  Line coverage:          0.400
  Visited conditions:     168
  Total conditions:       902
  Condition coverage:     0.186

CPAchecker general statistics
-----------------------------
Number of program locations:     5751
Number of CFA edges:             6420
Number of relevant variables:    784
Number of functions:             481
Number of loops:                 24
Size of reached set:             6913
  Number of reached locations:   843 (15%)
    Avg states per location:     8
    Max states per location:     62 (at node N158)
  Number of reached functions:   124 (26%)
  Number of partitions:          6696
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2210 (before lines 7778-7781), Function ldv_struct_work_struct_dummy_resourceless_instance_4 called from node N1667, stack depth 4 [2b7b1ef1], stack [main, ldv_entry_EMGentry_9, ldv_dispatch_register_dummy_resourceless_instance_9_9_7, ldv_struct_work_struct_dummy_resourceless_instance_4]])
  Number of target states:       0
  Size of final wait list        136

Time for analysis setup:          6.487s
  Time for loading CPAs:          1.111s
  Time for loading parser:        0.727s
  Time for CFA construction:      4.470s
    Time for parsing file(s):     1.103s
    Time for AST to CFA:          1.738s
    Time for CFA sanity check:    0.327s
    Time for post-processing:     0.967s
      Time for var class.:        0.550s
Time for Analysis:              893.758s
CPU time for analysis:          893.650s
Total time for CPAchecker:      900.256s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.262s

Time for Garbage Collector:      27.428s (in 2412 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                173MB (   165 MiB) max;     94MB (    89 MiB) avg;    177MB (   168 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           176MB (   168 MiB) max;    143MB (   137 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8287MB (  7903 MiB) max;   8207MB (  7827 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
