scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--hwmon--applesmc.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_udq9rlnd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6795: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6990: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7027: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7040: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7053: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7105: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7135: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7165: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 7197: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7717: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7730: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7752: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7777: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7790: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7907: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7462: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7101: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6903: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4047: Return type of function __builtin_bswap32 is void, but result is used as type int: tmp = __builtin_bswap32(val); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_bswap32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_bswap32, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6889: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            925813 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  787829 (85%)
  Because of loop head:            98709 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39275 (4%)
  Times precision was empty:       209058 (23%)
  Times precision was {false}:     883 (0%)
  Times result was cached:         707390 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8482 (1%)
  Times result was 'false':        61968 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         250409
  BDD entailment checks:           191095
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          79
Number of abstraction locations:          326
Max number of predicates per location:    34
Avg number of predicates per location:    13
Total predicates per abstraction:         4519899
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 482.64
Number of irrelevant predicates:          2438628 (54%)
Number of preds handled by boolean abs:   77582 (2%)
  Total number of models for allsat:      24268
  Max number of models for allsat:        128
  Avg number of models for allsat:        2.86

Time for post operator:                 19.672s
  Time for path formula creation:       18.296s
Time for strengthen operator:            2.940s
Time for prec operator:                206.674s
  Time for abstraction:                196.671s (Max:     0.240s, Count: 925813)
    Boolean abstraction:                16.948s
    Solving time:                       11.134s (Max:     0.060s)
    Model enumeration time:              3.468s
    Time for BDD construction:           0.869s (Max:     0.012s)
Time for merge operator:                 0.332s
Time for coverage check:                 0.285s
  Time for BDD entailment checks:        0.234s
Total time for SMT solver (w/o itp):    14.602s

Number of path formula cache hits:   4359604 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.209s

Total number of created targets for pointer analysis: 8639
   Number of created targets for uf: *signed_int is 477
   Number of created targets for uf: *unsigned_char is 1824
   Number of created targets for uf: *(struct_applesmc_entry)* is 36
   Number of created targets for uf: *_Bool is 163
   Number of created targets for uf: *(struct_platform_driver)* is 2
   Number of created targets for uf: *unsigned_int is 186
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 2569


Number of BDD nodes:                               82841
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       48272 (count: 469777, min: 0, max: 570, avg: 0.10)
Time for BDD node cleanup:                             0.141s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.321s
  Time for transition matches:                         2.979s
  Time for transition assertions:                      0.020s
  Time for transition actions:                         0.076s
Automaton transfers with branching:                0
Automaton transfer successors:                      3533580 (count: 3533580, min: 1, max: 1, avg: 1.00) [1 x 3533580]

CPA algorithm statistics
------------------------
Number of iterations:            2522642
Max size of waitlist:            373
Average size of waitlist:        110
Number of computed successors:   2763187
Max successors for one state:    2
Number of times merged:          29657
Number of times stopped:         112598
Number of times breaked:         12443

Total time for CPA algorithm:       296.136s (Max:     1.231s)
  Time for choose from waitlist:      1.445s
  Time for precision adjustment:    225.057s
  Time for transfer relation:        54.102s
  Time for merge operator:            1.189s
  Time for stop operator:             3.506s
  Time for adding to reached set:     4.265s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12443
Avg. length of target path (in blocks):             1185881 (count: 12443, min: 31, max: 134, avg: 95.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 474.117s
  Counterexample analysis:                           437.168s (Max:     0.100s, Calls: 12443)
    Refinement sat check:                            251.937s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.585s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.604s
  Precision update:                                   26.391s
  ARG update:                                          4.725s

Length of refined path (in blocks):                 1153151 (count: 12443, min: 18, max: 134, avg: 92.67)
Number of affected states:                           152055 (count: 12443, min: 1, max: 133, avg: 12.22)
Length (states) of path with itp 'true':             988653 (count: 12443, min: 0, max: 123, avg: 79.45)
Length (states) of path with itp non-trivial itp:    152055 (count: 12443, min: 1, max: 133, avg: 12.22)
Length (states) of path with itp 'false':              7209 (count: 12443, min: 0, max: 1, avg: 0.58)
Different non-trivial interpolants along paths:        5866 (count: 12443, min: 0, max: 3, avg: 0.47)
Equal non-trivial interpolants along paths:          133746 (count: 12443, min: 0, max: 131, avg: 10.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12443
Number of successful refinements:     12443
Number of failed refinements:         0
Max. size of reached set before ref.: 16960
Max. size of reached set after ref.:  16565
Avg. size of reached set before ref.: 6578.64
Avg. size of reached set after ref.:  6371.17

Total time for CEGAR algorithm:     894.006s
Time for refinements:               547.647s
Average time for refinement:          0.044s
Max time for refinement:              0.288s

Code Coverage
-----------------------------
  Function coverage:      0.258
  Visited lines:          1426
  Total lines:            3562
  Line coverage:          0.400
  Visited conditions:     168
  Total conditions:       902
  Condition coverage:     0.186

CPAchecker general statistics
-----------------------------
Number of program locations:     5751
Number of CFA edges:             6420
Number of relevant variables:    784
Number of functions:             481
Number of loops:                 24
Size of reached set:             7090
  Number of reached locations:   845 (15%)
    Avg states per location:     8
    Max states per location:     63 (at node N158)
  Number of reached functions:   124 (26%)
  Number of partitions:          6861
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2210 (before lines 7778-7781), Function ldv_struct_work_struct_dummy_resourceless_instance_4 called from node N1667, stack depth 4 [55e60fed], stack [main, ldv_entry_EMGentry_9, ldv_dispatch_register_dummy_resourceless_instance_9_9_7, ldv_struct_work_struct_dummy_resourceless_instance_4]])
  Number of target states:       0
  Size of final wait list        139

Time for analysis setup:          6.287s
  Time for loading CPAs:          1.076s
  Time for loading parser:        0.712s
  Time for CFA construction:      4.377s
    Time for parsing file(s):     1.075s
    Time for AST to CFA:          1.755s
    Time for CFA sanity check:    0.339s
    Time for post-processing:     0.968s
      Time for var class.:        0.558s
Time for Analysis:              894.007s
CPU time for analysis:          893.920s
Total time for CPAchecker:      900.297s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.306s

Time for Garbage Collector:      28.487s (in 2460 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                168MB (   161 MiB) max;     92MB (    88 MiB) avg;    171MB (   163 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           171MB (   163 MiB) max;    141MB (   135 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8287MB (  7903 MiB) max;   8209MB (  7829 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
