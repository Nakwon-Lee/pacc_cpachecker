scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--hwmon--applesmc.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yslizd2n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6795: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6990: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7027: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7040: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7053: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7105: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7135: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7165: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 7197: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7717: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7730: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7752: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7777: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7790: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7907: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7462: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7101: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4047: Return type of function __builtin_bswap32 is void, but result is used as type int: tmp = __builtin_bswap32(val); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_bswap32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_bswap32, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            894065 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  706613 (79%)
  Because of loop head:            179465 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7987 (1%)
  Times precision was empty:       9603 (1%)
  Times precision was {false}:     1112 (0%)
  Times result was cached:         828717 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      54633 (6%)
  Times result was 'false':        113704 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         731504
  BDD entailment checks:           630830
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          113
Number of abstraction locations:          165
Max number of predicates per location:    19
Avg number of predicates per location:    7
Total predicates per abstraction:         9768531
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 175.24
Number of irrelevant predicates:          3921040 (40%)
Number of preds handled by boolean abs:   424021 (4%)
  Total number of models for allsat:      1049887
  Max number of models for allsat:        512
  Avg number of models for allsat:        19.22

Time for post operator:                 45.182s
  Time for path formula creation:       43.189s
Time for strengthen operator:            3.210s
Time for prec operator:                629.267s
  Time for abstraction:                616.138s (Max:     1.055s, Count: 894065)
    Boolean abstraction:               189.629s
    Solving time:                       72.212s (Max:     0.048s)
    Model enumeration time:             83.929s
    Time for BDD construction:          23.559s (Max:     0.676s)
Time for merge operator:                 2.078s
Time for coverage check:                 0.765s
  Time for BDD entailment checks:        0.650s
Total time for SMT solver (w/o itp):   156.141s

Number of path formula cache hits:   4021127 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.327s

Total number of created targets for pointer analysis: 103037
   Number of created targets for uf: *(char)* is 241
   Number of created targets for uf: *signed_int is 88
   Number of created targets for uf: *unsigned_char is 9
   Number of created targets for uf: *(struct_applesmc_entry)* is 5
   Number of created targets for uf: *_Bool is 91
   Number of created targets for uf: *(struct_platform_driver)* is 2
   Number of created targets for uf: *unsigned_int is 274
   Number of created targets for uf: *((char)*)* is 21


Number of BDD nodes:                               177937
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      140911 (count: 1013420, min: 0, max: 1842, avg: 0.14)
Time for BDD node cleanup:                             0.186s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.586s
  Time for transition matches:                         2.905s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.025s
Automaton transfers with branching:                0
Automaton transfer successors:                      3921651 (count: 3921651, min: 1, max: 1, avg: 1.00) [1 x 3921651]

CPA algorithm statistics
------------------------
Number of iterations:            2937639
Max size of waitlist:            31
Average size of waitlist:        14
Number of computed successors:   3269664
Max successors for one state:    2
Number of times merged:          50337
Number of times stopped:         219712
Number of times breaked:         940

Total time for CPA algorithm:       754.265s (Max:    97.566s)
  Time for choose from waitlist:      1.455s
  Time for precision adjustment:    649.293s
  Time for transfer relation:        81.943s
  Time for merge operator:            3.773s
  Time for stop operator:             4.556s
  Time for adding to reached set:     4.977s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   940
Avg. length of target path (in blocks):              242041 (count: 940, min: 65, max: 481, avg: 257.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 122.356s
  Counterexample analysis:                           115.246s (Max:     0.551s, Calls: 940)
    Refinement sat check:                             39.496s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.125s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.402s
  Precision update:                                    0.503s
  ARG update:                                          5.081s

Length of refined path (in blocks):                  236464 (count: 940, min: 26, max: 456, avg: 251.56)
Number of affected states:                            33688 (count: 940, min: 1, max: 390, avg: 35.84)
Length (states) of path with itp 'true':             201836 (count: 940, min: 0, max: 386, avg: 214.72)
Length (states) of path with itp non-trivial itp:     33688 (count: 940, min: 1, max: 390, avg: 35.84)
Length (states) of path with itp 'false':               485 (count: 940, min: 0, max: 1, avg: 0.52)
Different non-trivial interpolants along paths:         849 (count: 940, min: 0, max: 17, avg: 0.90)
Equal non-trivial interpolants along paths:           31899 (count: 940, min: 0, max: 387, avg: 33.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                940
Number of successful refinements:     940
Number of failed refinements:         0
Max. size of reached set before ref.: 182173
Max. size of reached set after ref.:  75679
Avg. size of reached set before ref.: 13313.17
Avg. size of reached set after ref.:  10265.60

Total time for CEGAR algorithm:     893.944s
Time for refinements:               133.502s
Average time for refinement:          0.142s
Max time for refinement:              0.719s

Code Coverage
-----------------------------
  Function coverage:      0.127
  Visited lines:          1274
  Total lines:            3562
  Line coverage:          0.358
  Visited conditions:     144
  Total conditions:       902
  Condition coverage:     0.160

CPAchecker general statistics
-----------------------------
Number of program locations:     5751
Number of CFA edges:             6420
Number of relevant variables:    784
Number of functions:             481
Number of loops:                 24
Size of reached set:             71530
  Number of reached locations:   559 (10%)
    Avg states per location:     127
    Max states per location:     2526 (at node N98)
  Number of reached functions:   61 (13%)
  Number of partitions:          68306
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N254 (before line 4428), Function read_smc called from node N338, stack depth 14 [4cb992ae], stack [main, ldv_entry_EMGentry_9, ldv_EMGentry_init_applesmc_init_9_11, applesmc_init, ldv___platform_driver_register_102, ldv___platform_driver_register, ldv_dispatch_register_5_2, ldv_platform_platform_instance_0, ldv_platform_instance_probe_0_14, applesmc_probe, applesmc_init_smcreg, applesmc_init_smcreg_try, read_register_count, read_smc]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          6.347s
  Time for loading CPAs:          1.038s
  Time for loading parser:        0.609s
  Time for CFA construction:      4.590s
    Time for parsing file(s):     1.126s
    Time for AST to CFA:          1.888s
    Time for CFA sanity check:    0.374s
    Time for post-processing:     0.973s
      Time for var class.:        0.565s
Time for Analysis:              893.944s
CPU time for analysis:          893.830s
Total time for CPAchecker:      900.295s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.886s

Time for Garbage Collector:      39.807s (in 1703 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                552MB (   526 MiB) max;    227MB (   216 MiB) avg;    569MB (   543 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           574MB (   547 MiB) max;    339MB (   323 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  10710MB ( 10214 MiB) max;   8895MB (  8483 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
