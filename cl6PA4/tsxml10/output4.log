scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--vme--bridges--vme_ca91cx42.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3hxmg079/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7469: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7551: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7576: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7797: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7892: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7925: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7981: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8332: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4683: Function pointer *((bridge->lm_callback)[i]) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4471: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4511: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7683: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7694: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7717: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7729: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7762: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7717: Ignoring call via function pointer ldv_pci_instance_suspend_1_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7717: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7705: Ignoring call via function pointer ldv_pci_instance_shutdown_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7705: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17925 (38% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14333 (80%)
  Because of loop head:            1344 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2248 (13%)
  Times precision was empty:       2153 (12%)
  Times precision was {false}:     313 (2%)
  Times result was cached:         13170 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2289 (13%)
  Times result was 'false':        2187 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         1242
  BDD entailment checks:           800
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          48
Number of abstraction locations:          226
Max number of predicates per location:    24
Avg number of predicates per location:    11
Total predicates per abstraction:         182120
Max number of predicates per abstraction: 24
Avg number of predicates per abstraction: 69.99
Number of irrelevant predicates:          27055 (15%)
Number of preds handled by boolean abs:   21029 (12%)
  Total number of models for allsat:      2310
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.115s
  Time for path formula creation:        1.039s
Time for strengthen operator:            0.105s
Time for prec operator:                 15.026s
  Time for abstraction:                 14.630s (Max:     0.064s, Count: 17925)
    Boolean abstraction:                 2.854s
    Solving time:                        2.062s (Max:     0.044s)
    Model enumeration time:              0.173s
    Time for BDD construction:           0.150s (Max:     0.012s)
Time for merge operator:                 0.021s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     2.235s

Number of path formula cache hits:   59720 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.799s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *(struct_pci_driver)* is 2


Number of BDD nodes:                               909
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6702 (count: 19318, min: 0, max: 719, avg: 0.35)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.457s
Automaton transfers with branching:                0
Automaton transfer successors:                        47173 (count: 47173, min: 1, max: 1, avg: 1.00) [1 x 47173]

CPA algorithm statistics
------------------------
Number of iterations:            39049
Max size of waitlist:            15
Average size of waitlist:        4
Number of computed successors:   42462
Max successors for one state:    2
Number of times merged:          221
Number of times stopped:         797
Number of times breaked:         70

Total time for CPA algorithm:        19.990s (Max:     0.920s)
  Time for choose from waitlist:      0.102s
  Time for precision adjustment:     15.738s
  Time for transfer relation:         3.071s
  Time for merge operator:            0.075s
  Time for stop operator:             0.187s
  Time for adding to reached set:     0.198s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   70
Avg. length of target path (in blocks):                6652 (count: 70, min: 39, max: 154, avg: 95.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.423s
  Counterexample analysis:                             2.730s (Max:     0.077s, Calls: 70)
    Refinement sat check:                              1.349s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.123s
  Precision update:                                    0.195s
  ARG update:                                          0.245s

Length of refined path (in blocks):                    6650 (count: 70, min: 39, max: 154, avg: 95.00)
Number of affected states:                             6482 (count: 70, min: 30, max: 153, avg: 92.60)
Length (states) of path with itp 'true':                 98 (count: 70, min: 0, max: 50, avg: 1.40)
Length (states) of path with itp non-trivial itp:      6482 (count: 70, min: 30, max: 153, avg: 92.60)
Length (states) of path with itp 'false':                 2 (count: 70, min: 0, max: 1, avg: 0.03)
Different non-trivial interpolants along paths:          69 (count: 70, min: 0, max: 2, avg: 0.99)
Equal non-trivial interpolants along paths:            6343 (count: 70, min: 29, max: 151, avg: 90.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                70
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 1090
Max. size of reached set after ref.:  747
Avg. size of reached set before ref.: 585.96
Avg. size of reached set after ref.:  24.20

Total time for CEGAR algorithm:      23.585s
Time for refinements:                 3.572s
Average time for refinement:          0.051s
Max time for refinement:              0.108s

Code Coverage
-----------------------------
  Function coverage:      0.058
  Visited lines:          838
  Total lines:            4260
  Line coverage:          0.197
  Visited conditions:     12
  Total conditions:       960
  Condition coverage:     0.013

CPAchecker general statistics
-----------------------------
Number of program locations:     6536
Number of CFA edges:             7178
Number of relevant variables:    846
Number of functions:             501
Number of loops:                 25
Size of reached set:             156
  Number of reached locations:   118 (2%)
    Avg states per location:     1
    Max states per location:     6 (at node N4113)
  Number of reached functions:   29 (6%)
  Number of partitions:          156
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          6.680s
  Time for loading CPAs:          1.104s
  Time for loading parser:        0.679s
  Time for CFA construction:      4.742s
    Time for parsing file(s):     1.084s
    Time for AST to CFA:          1.971s
    Time for CFA sanity check:    0.402s
    Time for post-processing:     1.068s
      Time for var class.:        0.596s
Time for Analysis:               23.586s
CPU time for analysis:           23.590s
Total time for CPAchecker:       30.270s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.094s

Time for Garbage Collector:       0.501s (in 71 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     48MB (    46 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
