scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--vme--bridges--vme_ca91cx42.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0l1x_9x1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7469: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7551: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7576: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7797: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7892: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7925: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7981: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8332: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4683: Function pointer *((bridge->lm_callback)[i]) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4471: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4511: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7683: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7694: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7717: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7729: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7762: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7717: Ignoring call via function pointer ldv_pci_instance_suspend_1_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7717: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7705: Ignoring call via function pointer ldv_pci_instance_shutdown_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7705: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7729: Ignoring call via function pointer ldv_pci_instance_suspend_late_1_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7729: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7694: Ignoring call via function pointer ldv_pci_instance_resume_early_1_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7694: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7683: Ignoring call via function pointer ldv_pci_instance_resume_1_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7683: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vme_unregister_bridge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4218: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4511: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7598: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7598: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4683: Ignoring function call through function pointer *((bridge->lm_callback)[i]): (*((bridge->lm_callback)[i]))(i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vme_irq_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            658565 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  511178 (78%)
  Because of loop head:            118493 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28894 (4%)
  Times precision was empty:       184250 (28%)
  Times precision was {false}:     1418 (0%)
  Times result was cached:         452646 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20251 (3%)
  Times result was 'false':        61934 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         360035
  BDD entailment checks:           243101
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          129
Number of abstraction locations:          326
Max number of predicates per location:    52
Avg number of predicates per location:    20
Total predicates per abstraction:         10327691
Max number of predicates per abstraction: 52
Avg number of predicates per abstraction: 476.61
Number of irrelevant predicates:          2867565 (28%)
Number of preds handled by boolean abs:   333099 (3%)
  Total number of models for allsat:      43272
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.14

Time for post operator:                 14.350s
  Time for path formula creation:       13.275s
Time for strengthen operator:            2.026s
Time for prec operator:                366.683s
  Time for abstraction:                359.592s (Max:     0.217s, Count: 658565)
    Boolean abstraction:                40.339s
    Solving time:                       26.051s (Max:     0.047s)
    Model enumeration time:              7.768s
    Time for BDD construction:           2.080s (Max:     0.101s)
Time for merge operator:                 0.539s
Time for coverage check:                 0.339s
  Time for BDD entailment checks:        0.278s
Total time for SMT solver (w/o itp):    33.819s

Number of path formula cache hits:   3174003 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.757s

Total number of created targets for pointer analysis: 4656
   Number of created targets for uf: *(void)* is 65
   Number of created targets for uf: *(Return_type:_[enum_irqreturn],_Parameters:_2,_Parameter_1_type:_[signed_int],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 2
   Number of created targets for uf: *signed_int is 1089
   Number of created targets for uf: *(struct_list_head)* is 1201
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *(struct_device)* is 3


Number of BDD nodes:                               259413
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      320628 (count: 669125, min: 0, max: 4620, avg: 0.48)
Time for BDD node cleanup:                             0.132s
Time for BDD garbage collection:                       0.097s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.055s
  Time for transition matches:                         1.789s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.036s
Automaton transfers with branching:                0
Automaton transfer successors:                      2573673 (count: 2573673, min: 1, max: 1, avg: 1.00) [1 x 2573673]

CPA algorithm statistics
------------------------
Number of iterations:            1876906
Max size of waitlist:            22
Average size of waitlist:        6
Number of computed successors:   2079048
Max successors for one state:    2
Number of times merged:          58467
Number of times stopped:         132028
Number of times breaked:         2196

Total time for CPA algorithm:       434.356s (Max:     1.141s)
  Time for choose from waitlist:      0.793s
  Time for precision adjustment:    379.568s
  Time for transfer relation:        42.390s
  Time for merge operator:            1.515s
  Time for stop operator:             2.459s
  Time for adding to reached set:     2.797s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2196
Avg. length of target path (in blocks):              559496 (count: 2196, min: 39, max: 677, avg: 254.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 447.793s
  Counterexample analysis:                           434.166s (Max:     1.334s, Calls: 2196)
    Refinement sat check:                            137.671s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.289s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.267s
  Precision update:                                    7.347s
  ARG update:                                          2.806s

Length of refined path (in blocks):                  496631 (count: 2196, min: 26, max: 677, avg: 226.15)
Number of affected states:                           175069 (count: 2196, min: 1, max: 676, avg: 79.72)
Length (states) of path with itp 'true':             319366 (count: 2196, min: 0, max: 567, avg: 145.43)
Length (states) of path with itp non-trivial itp:    175069 (count: 2196, min: 1, max: 676, avg: 79.72)
Length (states) of path with itp 'false':              1682 (count: 2196, min: 0, max: 1, avg: 0.77)
Different non-trivial interpolants along paths:       13914 (count: 2196, min: 0, max: 14, avg: 6.34)
Equal non-trivial interpolants along paths:          158959 (count: 2196, min: 0, max: 668, avg: 72.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2196
Number of successful refinements:     2196
Number of failed refinements:         0
Max. size of reached set before ref.: 4949
Max. size of reached set after ref.:  4325
Avg. size of reached set before ref.: 2961.25
Avg. size of reached set after ref.:  2104.03

Total time for CEGAR algorithm:     893.266s
Time for refinements:               456.090s
Average time for refinement:          0.207s
Max time for refinement:              1.362s

Code Coverage
-----------------------------
  Function coverage:      0.236
  Visited lines:          1457
  Total lines:            4260
  Line coverage:          0.342
  Visited conditions:     140
  Total conditions:       960
  Condition coverage:     0.146

CPAchecker general statistics
-----------------------------
Number of program locations:     6536
Number of CFA edges:             7178
Number of relevant variables:    846
Number of functions:             501
Number of loops:                 25
Size of reached set:             2624
  Number of reached locations:   806 (12%)
    Avg states per location:     3
    Max states per location:     56 (at node N357)
  Number of reached functions:   118 (24%)
  Number of partitions:          2546
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N380 (before line 4794), Function ca91cx42_VIRQ_irqhandler called from node N445, stack depth 18 [15fc39ac], stack [main, ldv_entry_EMGentry_6, ldv_EMGentry_init_ca91cx42_driver_init_6_7, ca91cx42_driver_init, ldv___pci_register_driver_138, ldv___pci_register_driver, ldv_dispatch_register_5_2, ldv_pci_pci_instance_1, ldv_pci_instance_probe_1_17, ca91cx42_probe, ca91cx42_irq_init, ldv_request_irq_96, ldv_request_irq, ldv_dispatch_irq_register_3_2, ldv_interrupt_interrupt_instance_0, ldv_interrupt_instance_handler_0_5, ca91cx42_irqhandler, ca91cx42_VIRQ_irqhandler]])
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          6.982s
  Time for loading CPAs:          1.143s
  Time for loading parser:        0.657s
  Time for CFA construction:      5.012s
    Time for parsing file(s):     1.144s
    Time for AST to CFA:          1.992s
    Time for CFA sanity check:    0.532s
    Time for post-processing:     1.167s
      Time for var class.:        0.631s
Time for Analysis:              893.266s
CPU time for analysis:          893.120s
Total time for CPAchecker:      900.252s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              0.154s

Time for Garbage Collector:      17.911s (in 2980 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                143MB (   137 MiB) max;     88MB (    84 MiB) avg;    145MB (   138 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           146MB (   139 MiB) max;    135MB (   128 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8759MB (  8353 MiB) max;   8426MB (  8036 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
