scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--vme--bridges--vme_ca91cx42.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_aed4qm1e/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7469: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7551: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7576: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7797: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7892: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7925: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7981: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8332: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4683: Function pointer *((bridge->lm_callback)[i]) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4471: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4511: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7683: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7694: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7717: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7729: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7762: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4683: Ignoring function call through function pointer *((bridge->lm_callback)[i]): (*((bridge->lm_callback)[i]))(i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vme_irq_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7598: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7598: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7278 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5754 (79%)
  Because of loop head:            1401 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         123 (2%)
  Times precision was empty:       2830 (39%)
  Times precision was {false}:     207 (3%)
  Times result was cached:         2186 (30%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2055 (28%)
  Times result was 'false':        480 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         5181
  BDD entailment checks:           2851
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          48
Number of abstraction locations:          128
Max number of predicates per location:    22
Avg number of predicates per location:    5
Total predicates per abstraction:         23459
Max number of predicates per abstraction: 22
Avg number of predicates per abstraction: 10.37
Number of irrelevant predicates:          6688 (29%)
Number of preds handled by boolean abs:   11828 (50%)
  Total number of models for allsat:      5062
  Max number of models for allsat:        21
  Avg number of models for allsat:        2.46

Time for post operator:                  2.990s
  Time for path formula creation:        2.925s
Time for strengthen operator:            0.153s
Time for prec operator:                 11.098s
  Time for abstraction:                 10.735s (Max:     0.154s, Count: 7278)
    Boolean abstraction:                 5.719s
    Solving time:                        3.697s (Max:     0.066s)
    Model enumeration time:              1.432s
    Time for BDD construction:           0.275s (Max:     0.012s)
Time for merge operator:                 0.152s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     5.129s

Number of path formula cache hits:   33504 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.530s

Total number of created targets for pointer analysis: 1096
   Number of created targets for uf: *(void)* is 33
   Number of created targets for uf: *(Return_type:_[enum_irqreturn],_Parameters:_2,_Parameter_1_type:_[signed_int],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 2
   Number of created targets for uf: *signed_int is 545
   Number of created targets for uf: *(struct_list_head)* is 253
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *(struct_device)* is 3


Number of BDD nodes:                               7869
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10302 (count: 22103, min: 0, max: 1425, avg: 0.47)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.396s
Automaton transfers with branching:                0
Automaton transfer successors:                        38091 (count: 38091, min: 1, max: 1, avg: 1.00) [1 x 38091]

CPA algorithm statistics
------------------------
Number of iterations:            24370
Max size of waitlist:            19
Average size of waitlist:        8
Number of computed successors:   27548
Max successors for one state:    2
Number of times merged:          1165
Number of times stopped:         2638
Number of times breaked:         33

Total time for CPA algorithm:        17.805s (Max:     1.613s)
  Time for choose from waitlist:      0.102s
  Time for precision adjustment:     11.720s
  Time for transfer relation:         4.739s
  Time for merge operator:            0.307s
  Time for stop operator:             0.215s
  Time for adding to reached set:     0.210s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                5685 (count: 33, min: 60, max: 356, avg: 172.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.090s
  Counterexample analysis:                             4.715s (Max:     0.326s, Calls: 33)
    Refinement sat check:                              2.200s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.088s
  ARG update:                                          0.140s

Length of refined path (in blocks):                    5435 (count: 33, min: 26, max: 347, avg: 164.70)
Number of affected states:                             2160 (count: 33, min: 1, max: 212, avg: 65.45)
Length (states) of path with itp 'true':               3242 (count: 33, min: 0, max: 171, avg: 98.24)
Length (states) of path with itp non-trivial itp:      2160 (count: 33, min: 1, max: 212, avg: 65.45)
Length (states) of path with itp 'false':                25 (count: 33, min: 0, max: 1, avg: 0.76)
Different non-trivial interpolants along paths:          94 (count: 33, min: 0, max: 11, avg: 2.85)
Equal non-trivial interpolants along paths:            2033 (count: 33, min: 0, max: 207, avg: 61.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 3224
Max. size of reached set after ref.:  2342
Avg. size of reached set before ref.: 1743.48
Avg. size of reached set after ref.:  1093.82

Total time for CEGAR algorithm:      23.209s
Time for refinements:                 5.368s
Average time for refinement:          0.162s
Max time for refinement:              0.342s

Code Coverage
-----------------------------
  Function coverage:      0.126
  Visited lines:          1273
  Total lines:            4260
  Line coverage:          0.299
  Visited conditions:     90
  Total conditions:       960
  Condition coverage:     0.094

CPAchecker general statistics
-----------------------------
Number of program locations:     6536
Number of CFA edges:             7178
Number of relevant variables:    846
Number of functions:             501
Number of loops:                 25
Size of reached set:             2991
  Number of reached locations:   472 (7%)
    Avg states per location:     6
    Max states per location:     63 (at node N357)
  Number of reached functions:   63 (13%)
  Number of partitions:          2898
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N2085 (before line 6954), Function ca91cx42_probe called from node N2574, stack depth 10 [7cb4fc46], stack [main, ldv_entry_EMGentry_6, ldv_EMGentry_init_ca91cx42_driver_init_6_7, ca91cx42_driver_init, ldv___pci_register_driver_138, ldv___pci_register_driver, ldv_dispatch_register_5_2, ldv_pci_pci_instance_1, ldv_pci_instance_probe_1_17, ca91cx42_probe]])
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          7.052s
  Time for loading CPAs:          1.122s
  Time for loading parser:        0.723s
  Time for CFA construction:      5.050s
    Time for parsing file(s):     1.123s
    Time for AST to CFA:          2.073s
    Time for CFA sanity check:    0.528s
    Time for post-processing:     1.121s
      Time for var class.:        0.598s
Time for Analysis:               23.209s
CPU time for analysis:           23.200s
Total time for CPAchecker:       30.272s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.130s

Time for Garbage Collector:       0.465s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     50MB (    48 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8070MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
