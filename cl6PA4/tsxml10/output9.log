scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--vme--bridges--vme_ca91cx42.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_asnfvlfl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7469: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7551: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7576: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7797: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7892: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7925: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7981: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8332: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4683: Function pointer *((bridge->lm_callback)[i]) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4471: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4511: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7683: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7694: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7717: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7729: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7762: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vme_irq_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4683: Ignoring function call through function pointer *((bridge->lm_callback)[i]): (*((bridge->lm_callback)[i]))(i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7598: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7598: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12011 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8793 (73%)
  Because of loop head:            3157 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (1%)
  Times precision was empty:       4194 (35%)
  Times precision was {false}:     245 (2%)
  Times result was cached:         6760 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      812 (7%)
  Times result was 'false':        1403 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         14987
  BDD entailment checks:           9129
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          49
Number of abstraction locations:          119
Max number of predicates per location:    16
Avg number of predicates per location:    3
Total predicates per abstraction:         23442
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 22.18
Number of irrelevant predicates:          10104 (43%)
Number of preds handled by boolean abs:   2353 (10%)
  Total number of models for allsat:      1311
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.61

Time for post operator:                  5.394s
  Time for path formula creation:        5.288s
Time for strengthen operator:            0.174s
Time for prec operator:                  5.804s
  Time for abstraction:                  5.193s (Max:     0.059s, Count: 12011)
    Boolean abstraction:                 1.132s
    Solving time:                        0.831s (Max:     0.033s)
    Model enumeration time:              0.113s
    Time for BDD construction:           0.110s (Max:     0.013s)
Time for merge operator:                 0.353s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     0.944s

Number of path formula cache hits:   51535 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.537s

Total number of created targets for pointer analysis: 931
   Number of created targets for uf: *(void)* is 7
   Number of created targets for uf: *(Return_type:_[enum_irqreturn],_Parameters:_2,_Parameter_1_type:_[signed_int],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *(struct_list_head)* is 457
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *(struct_device)* is 3


Number of BDD nodes:                               1416
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2840 (count: 20053, min: 0, max: 669, avg: 0.14)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.360s
Automaton transfers with branching:                0
Automaton transfer successors:                        78132 (count: 78132, min: 1, max: 1, avg: 1.00) [1 x 78132]

CPA algorithm statistics
------------------------
Number of iterations:            49993
Max size of waitlist:            23
Average size of waitlist:        13
Number of computed successors:   57479
Max successors for one state:    2
Number of times merged:          2929
Number of times stopped:         6128
Number of times breaked:         45

Total time for CPA algorithm:        16.739s (Max:     1.032s)
  Time for choose from waitlist:      0.113s
  Time for precision adjustment:      6.798s
  Time for transfer relation:         7.851s
  Time for merge operator:            0.523s
  Time for stop operator:             0.373s
  Time for adding to reached set:     0.305s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                6703 (count: 45, min: 60, max: 174, avg: 148.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.992s
  Counterexample analysis:                             5.434s (Max:     0.181s, Calls: 45)
    Refinement sat check:                              2.313s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.061s
  ARG update:                                          0.306s

Length of refined path (in blocks):                    6195 (count: 45, min: 26, max: 162, avg: 137.67)
Number of affected states:                             1206 (count: 45, min: 1, max: 133, avg: 26.80)
Length (states) of path with itp 'true':               4944 (count: 45, min: 0, max: 149, avg: 109.87)
Length (states) of path with itp non-trivial itp:      1206 (count: 45, min: 1, max: 133, avg: 26.80)
Length (states) of path with itp 'false':                41 (count: 45, min: 0, max: 1, avg: 0.91)
Different non-trivial interpolants along paths:         152 (count: 45, min: 0, max: 11, avg: 3.38)
Equal non-trivial interpolants along paths:            1009 (count: 45, min: 0, max: 124, avg: 22.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     45
Number of failed refinements:         0
Max. size of reached set before ref.: 3272
Max. size of reached set after ref.:  2234
Avg. size of reached set before ref.: 1969.40
Avg. size of reached set after ref.:  900.40

Total time for CEGAR algorithm:      23.130s
Time for refinements:                 6.343s
Average time for refinement:          0.140s
Max time for refinement:              0.208s

Code Coverage
-----------------------------
  Function coverage:      0.110
  Visited lines:          1198
  Total lines:            4260
  Line coverage:          0.281
  Visited conditions:     82
  Total conditions:       960
  Condition coverage:     0.085

CPAchecker general statistics
-----------------------------
Number of program locations:     6536
Number of CFA edges:             7178
Number of relevant variables:    846
Number of functions:             501
Number of loops:                 25
Size of reached set:             1843
  Number of reached locations:   414 (6%)
    Avg states per location:     4
    Max states per location:     59 (at node N357)
  Number of reached functions:   55 (11%)
  Number of partitions:          1766
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N380 (before line 4794), Function ca91cx42_VIRQ_irqhandler called from node N445, stack depth 18 [4ddb5db0], stack [main, ldv_entry_EMGentry_6, ldv_EMGentry_init_ca91cx42_driver_init_6_7, ca91cx42_driver_init, ldv___pci_register_driver_138, ldv___pci_register_driver, ldv_dispatch_register_5_2, ldv_pci_pci_instance_1, ldv_pci_instance_probe_1_17, ca91cx42_probe, ca91cx42_irq_init, ldv_request_irq_96, ldv_request_irq, ldv_dispatch_irq_register_3_2, ldv_interrupt_interrupt_instance_0, ldv_interrupt_instance_handler_0_5, ca91cx42_irqhandler, ca91cx42_VIRQ_irqhandler]])
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          6.652s
  Time for loading CPAs:          1.012s
  Time for loading parser:        0.713s
  Time for CFA construction:      4.798s
    Time for parsing file(s):     1.118s
    Time for AST to CFA:          2.023s
    Time for CFA sanity check:    0.448s
    Time for post-processing:     0.980s
      Time for var class.:        0.536s
Time for Analysis:               23.130s
CPU time for analysis:           23.140s
Total time for CPAchecker:       29.792s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.132s

Time for Garbage Collector:       0.575s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    74 MiB) max;     51MB (    49 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
