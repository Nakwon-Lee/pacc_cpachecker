scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--vme--bridges--vme_ca91cx42.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kf__i33u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7469: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7551: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7576: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7797: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7892: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7925: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7981: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8332: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4683: Function pointer *((bridge->lm_callback)[i]) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4471: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4511: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7683: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7694: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7717: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7729: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7762: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7705: Ignoring call via function pointer ldv_pci_instance_shutdown_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7705: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7717: Ignoring call via function pointer ldv_pci_instance_suspend_1_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7717: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vme_unregister_bridge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7729: Ignoring call via function pointer ldv_pci_instance_suspend_late_1_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7729: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7694: Ignoring call via function pointer ldv_pci_instance_resume_early_1_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7694: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7683: Ignoring call via function pointer ldv_pci_instance_resume_1_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7683: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4218: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4511: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4683: Ignoring function call through function pointer *((bridge->lm_callback)[i]): (*((bridge->lm_callback)[i]))(i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vme_irq_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18958 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15712 (83%)
  Because of loop head:            2820 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         426 (2%)
  Times precision was empty:       6811 (36%)
  Times precision was {false}:     226 (1%)
  Times result was cached:         9786 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2135 (11%)
  Times result was 'false':        672 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         5725
  BDD entailment checks:           3657
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          54
Number of abstraction locations:          182
Max number of predicates per location:    21
Avg number of predicates per location:    6
Total predicates per abstraction:         88087
Max number of predicates per abstraction: 22
Avg number of predicates per abstraction: 37.31
Number of irrelevant predicates:          38633 (44%)
Number of preds handled by boolean abs:   11422 (13%)
  Total number of models for allsat:      2343
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.10

Time for post operator:                  2.119s
  Time for path formula creation:        1.977s
Time for strengthen operator:            0.143s
Time for prec operator:                 11.720s
  Time for abstraction:                 11.261s (Max:     0.055s, Count: 18958)
    Boolean abstraction:                 3.092s
    Solving time:                        2.275s (Max:     0.043s)
    Model enumeration time:              0.228s
    Time for BDD construction:           0.219s (Max:     0.013s)
Time for merge operator:                 0.066s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     2.503s

Number of path formula cache hits:   79288 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.582s

Total number of created targets for pointer analysis: 88
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *(Return_type:_[enum_irqreturn],_Parameters:_2,_Parameter_1_type:_[signed_int],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 2
   Number of created targets for uf: *(struct_list_head)* is 37
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *(struct_device)* is 3


Number of BDD nodes:                               2127
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7937 (count: 26008, min: 0, max: 818, avg: 0.31)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.455s
Automaton transfers with branching:                0
Automaton transfer successors:                        67965 (count: 67965, min: 1, max: 1, avg: 1.00) [1 x 67965]

CPA algorithm statistics
------------------------
Number of iterations:            46295
Max size of waitlist:            34
Average size of waitlist:        9
Number of computed successors:   50212
Max successors for one state:    2
Number of times merged:          1034
Number of times stopped:         2715
Number of times breaked:         82

Total time for CPA algorithm:        18.420s (Max:     1.108s)
  Time for choose from waitlist:      0.127s
  Time for precision adjustment:     12.512s
  Time for transfer relation:         4.534s
  Time for merge operator:            0.186s
  Time for stop operator:             0.252s
  Time for adding to reached set:     0.247s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   82
Avg. length of target path (in blocks):                7650 (count: 82, min: 39, max: 145, avg: 93.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.986s
  Counterexample analysis:                             4.368s (Max:     0.159s, Calls: 82)
    Refinement sat check:                              2.167s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.122s
  Precision update:                                    0.145s
  ARG update:                                          0.232s

Length of refined path (in blocks):                    6933 (count: 82, min: 26, max: 144, avg: 84.55)
Number of affected states:                             4428 (count: 82, min: 4, max: 142, avg: 54.00)
Length (states) of path with itp 'true':               2423 (count: 82, min: 0, max: 121, avg: 29.55)
Length (states) of path with itp non-trivial itp:      4428 (count: 82, min: 4, max: 142, avg: 54.00)
Length (states) of path with itp 'false':                48 (count: 82, min: 0, max: 1, avg: 0.59)
Different non-trivial interpolants along paths:         130 (count: 82, min: 0, max: 8, avg: 1.59)
Equal non-trivial interpolants along paths:            4216 (count: 82, min: 0, max: 140, avg: 51.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                82
Number of successful refinements:     82
Number of failed refinements:         0
Max. size of reached set before ref.: 2404
Max. size of reached set after ref.:  1756
Avg. size of reached set before ref.: 832.83
Avg. size of reached set after ref.:  274.39

Total time for CEGAR algorithm:      23.712s
Time for refinements:                 5.242s
Average time for refinement:          0.063s
Max time for refinement:              0.172s

Code Coverage
-----------------------------
  Function coverage:      0.126
  Visited lines:          1129
  Total lines:            4260
  Line coverage:          0.265
  Visited conditions:     66
  Total conditions:       960
  Condition coverage:     0.069

CPAchecker general statistics
-----------------------------
Number of program locations:     6536
Number of CFA edges:             7178
Number of relevant variables:    846
Number of functions:             501
Number of loops:                 25
Size of reached set:             1032
  Number of reached locations:   392 (6%)
    Avg states per location:     2
    Max states per location:     27 (at node N4113)
  Number of reached functions:   63 (13%)
  Number of partitions:          995
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2941 (before line 8331), Function ldv___pci_register_driver_138 called from node N2423, stack depth 5 [7669a108], stack [main, ldv_entry_EMGentry_6, ldv_EMGentry_init_ca91cx42_driver_init_6_7, ca91cx42_driver_init, ldv___pci_register_driver_138]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          6.534s
  Time for loading CPAs:          1.042s
  Time for loading parser:        0.700s
  Time for CFA construction:      4.624s
    Time for parsing file(s):     1.107s
    Time for AST to CFA:          1.900s
    Time for CFA sanity check:    0.429s
    Time for post-processing:     1.013s
      Time for var class.:        0.516s
Time for Analysis:               23.712s
CPU time for analysis:           23.700s
Total time for CPAchecker:       30.255s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.150s

Time for Garbage Collector:       0.472s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     49MB (    46 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
