scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--net--ethernet--dec--tulip--dmfe.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_46q5q1v9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10108: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10128: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10131: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10133: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10146: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10434: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10459: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10472: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10547: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10581: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10655: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10662: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10663: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10669: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10670: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10671: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10678: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10679: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10680: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10681: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10688: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10689: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10690: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10691: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10692: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10699: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10700: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10701: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10702: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10703: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10704: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10711: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10712: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10713: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10714: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10715: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10716: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10717: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10723: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10724: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10725: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10726: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10727: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10728: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10729: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10730: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10737: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10738: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10739: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10740: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10741: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10742: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10743: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10744: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10745: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10869: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10900: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10984: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11024: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11025: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11069: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11081: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11124: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11139: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11180: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11196: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11251: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11291: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11357: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6659: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6699: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6533-6534: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6572: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10260: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11090: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11090: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_linux_kernel_locking_spinlock_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_trans_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17734 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14334 (81%)
  Because of loop head:            1993 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1407 (8%)
  Times precision was empty:       5974 (34%)
  Times precision was {false}:     308 (2%)
  Times result was cached:         9861 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1591 (9%)
  Times result was 'false':        1422 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         5630
  BDD entailment checks:           1360
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          48
Number of abstraction locations:          196
Max number of predicates per location:    22
Avg number of predicates per location:    11
Total predicates per abstraction:         103002
Max number of predicates per abstraction: 22
Avg number of predicates per abstraction: 54.24
Number of irrelevant predicates:          17912 (17%)
Number of preds handled by boolean abs:   13561 (13%)
  Total number of models for allsat:      1621
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.767s
  Time for path formula creation:        1.649s
Time for strengthen operator:            0.173s
Time for prec operator:                 10.791s
  Time for abstraction:                 10.396s (Max:     0.031s, Count: 17734)
    Boolean abstraction:                 1.774s
    Solving time:                        1.203s (Max:     0.015s)
    Model enumeration time:              0.095s
    Time for BDD construction:           0.139s (Max:     0.012s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     1.298s

Number of path formula cache hits:   86236 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.225s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *(struct_timer_list)* is 2


Number of BDD nodes:                               704
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5184 (count: 19437, min: 0, max: 567, avg: 0.27)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.538s
  Time for transition matches:                         0.205s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                        73203 (count: 73203, min: 1, max: 1, avg: 1.00) [1 x 73203]

CPA algorithm statistics
------------------------
Number of iterations:            49677
Max size of waitlist:            37
Average size of waitlist:        19
Number of computed successors:   55108
Max successors for one state:    2
Number of times merged:          2135
Number of times stopped:         2928
Number of times breaked:         117

Total time for CPA algorithm:        17.272s (Max:     1.075s)
  Time for choose from waitlist:      0.110s
  Time for precision adjustment:     11.581s
  Time for transfer relation:         4.228s
  Time for merge operator:            0.244s
  Time for stop operator:             0.186s
  Time for adding to reached set:     0.271s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   117
Avg. length of target path (in blocks):               10897 (count: 117, min: 39, max: 129, avg: 93.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.992s
  Counterexample analysis:                             4.094s (Max:     0.062s, Calls: 117)
    Refinement sat check:                              1.831s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.147s
  Precision update:                                    0.294s
  ARG update:                                          0.261s

Length of refined path (in blocks):                   10497 (count: 116, min: 39, max: 129, avg: 90.49)
Number of affected states:                             5129 (count: 116, min: 1, max: 128, avg: 44.22)
Length (states) of path with itp 'true':               5252 (count: 116, min: 0, max: 97, avg: 45.28)
Length (states) of path with itp non-trivial itp:      5129 (count: 116, min: 1, max: 128, avg: 44.22)
Length (states) of path with itp 'false':                33 (count: 116, min: 0, max: 1, avg: 0.28)
Different non-trivial interpolants along paths:          83 (count: 116, min: 0, max: 1, avg: 0.72)
Equal non-trivial interpolants along paths:            4930 (count: 116, min: 0, max: 126, avg: 42.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                117
Number of successful refinements:     116
Number of failed refinements:         0
Max. size of reached set before ref.: 1928
Max. size of reached set after ref.:  1645
Avg. size of reached set before ref.: 1121.84
Avg. size of reached set after ref.:  693.93

Total time for CEGAR algorithm:      22.803s
Time for refinements:                 5.405s
Average time for refinement:          0.046s
Max time for refinement:              0.117s

Code Coverage
-----------------------------
  Function coverage:      0.169
  Visited lines:          1554
  Total lines:            4900
  Line coverage:          0.317
  Visited conditions:     162
  Total conditions:       1142
  Condition coverage:     0.142

CPAchecker general statistics
-----------------------------
Number of program locations:     7588
Number of CFA edges:             8459
Number of relevant variables:    1030
Number of functions:             538
Number of loops:                 34
Size of reached set:             1227
  Number of reached locations:   710 (9%)
    Avg states per location:     1
    Max states per location:     24 (at node N2263)
  Number of reached functions:   91 (17%)
  Number of partitions:          1225
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3488 (before lines 11113-11119), Function ldv_timer_timer_instance_3 called from node N2900, stack depth 6 [443adbb9], stack [main, ldv_entry_EMGentry_14, ldv_dispatch_register_dummy_factory_14_14_5, ldv_timer_dummy_factory_4, ldv_dispatch_instance_register_4_3, ldv_timer_timer_instance_3]])
  Number of target states:       1
  Size of final wait list        25

Time for analysis setup:          7.422s
  Time for loading CPAs:          1.237s
  Time for loading parser:        0.683s
  Time for CFA construction:      5.339s
    Time for parsing file(s):     1.310s
    Time for AST to CFA:          2.080s
    Time for CFA sanity check:    0.546s
    Time for post-processing:     1.162s
      Time for var class.:        0.626s
Time for Analysis:               22.803s
CPU time for analysis:           22.800s
Total time for CPAchecker:       30.235s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.149s

Time for Garbage Collector:       0.531s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     56MB (    54 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     40MB (    38 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
