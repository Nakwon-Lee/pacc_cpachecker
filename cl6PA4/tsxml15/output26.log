scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---fs--squashfs--squashfs.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b_sqljy6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6120: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 6158: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 6209: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6236: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6237: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6244: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6245: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6246: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6627: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6632: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6642: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6646: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6705: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6710: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6720: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6724: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10729: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10816: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10866: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10878: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10892: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10904: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10918: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10940: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10996: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11024: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11082: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11090: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11091: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11101: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11102: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11103: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11114: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11115: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11116: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11117: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11124: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11125: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11126: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11127: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11128: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11161: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11233: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11257: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11329: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11353: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11425: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11449: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11521: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11560: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11625: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11631: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11632: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11643: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11644: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11645: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11651: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11652: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11653: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11654: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11660: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11661: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11662: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11663: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11664: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11670: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11671: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11672: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11673: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11674: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11675: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11711: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11755: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11782: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11826: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11853: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11897: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11910: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11948: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11964: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12082: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12087: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12097: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12101: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12160: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12165: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12175: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12179: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5739: Function pointer *(ctx->actor) with type int (*)(struct dir_context *, const char *, int, loff_t , u64 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10751: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10765: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10827: Function pointer *arg0 with type enum irqreturn (*)(int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10839: Function pointer *arg0 with type enum irqreturn (*)(int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_filesystem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10570: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10751: Ignoring call via function pointer ldv_file_operations_instance_probe_0_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10751: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10547: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10550: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10553: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10556: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10527: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10513: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10496: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10499: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10474: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10477: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10480: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function page_put_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function page_follow_link_light to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lzo1x_decompress_safe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function inode_init_once to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xz_dec_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xz_dec_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11106: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function generic_getxattr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11068: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function generic_readlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11727: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11798: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11869: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6212: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6214: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10765: Ignoring call via function pointer ldv_file_operations_instance_write_0_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10765: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6192: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6194: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function generic_read_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xz_dec_run to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function zlib_inflateInit2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function zlib_inflate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function zlib_inflateEnd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 12902-12903: Ignoring function call through function pointer *(handler->list): tmp___2 = (*(handler->list))(d, buffer, rest, (const char *)0, (size_t )name_size, handler->flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unlock_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            34891 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27263 (78%)
  Because of loop head:            6605 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1023 (3%)
  Times precision was empty:       25086 (72%)
  Times precision was {false}:     332 (1%)
  Times result was cached:         8064 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1409 (4%)
  Times result was 'false':        976 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         6996
  BDD entailment checks:           3986
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          47
Number of abstraction locations:          174
Max number of predicates per location:    21
Avg number of predicates per location:    9
Total predicates per abstraction:         136551
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 78.43
Number of irrelevant predicates:          72044 (53%)
Number of preds handled by boolean abs:   12621 (9%)
  Total number of models for allsat:      1431
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  2.663s
  Time for path formula creation:        2.501s
Time for strengthen operator:            0.193s
Time for prec operator:                 10.710s
  Time for abstraction:                  9.914s (Max:     0.052s, Count: 34891)
    Boolean abstraction:                 1.640s
    Solving time:                        1.038s (Max:     0.014s)
    Model enumeration time:              0.075s
    Time for BDD construction:           0.130s (Max:     0.010s)
Time for merge operator:                 0.108s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     1.113s

Number of path formula cache hits:   152236 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.638s

Total number of created targets for pointer analysis: 97
   Number of created targets for uf: *signed_int is 49
   Number of created targets for uf: *char is 2


Number of BDD nodes:                               842
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4631 (count: 40141, min: 0, max: 694, avg: 0.12)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.635s
  Time for transition matches:                         0.243s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                       125029 (count: 125029, min: 1, max: 1, avg: 1.00) [1 x 125029]

CPA algorithm statistics
------------------------
Number of iterations:            83519
Max size of waitlist:            49
Average size of waitlist:        31
Number of computed successors:   91083
Max successors for one state:    2
Number of times merged:          1505
Number of times stopped:         5386
Number of times breaked:         47

Total time for CPA algorithm:        20.149s (Max:     1.945s)
  Time for choose from waitlist:      0.149s
  Time for precision adjustment:     11.986s
  Time for transfer relation:         6.158s
  Time for merge operator:            0.283s
  Time for stop operator:             0.349s
  Time for adding to reached set:     0.347s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                3453 (count: 47, min: 33, max: 119, avg: 73.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.056s
  Counterexample analysis:                             1.411s (Max:     0.057s, Calls: 47)
    Refinement sat check:                              0.678s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.126s
  Precision update:                                    0.101s
  ARG update:                                          0.341s

Length of refined path (in blocks):                    3453 (count: 47, min: 33, max: 119, avg: 73.47)
Number of affected states:                             3406 (count: 47, min: 32, max: 118, avg: 72.47)
Length (states) of path with itp 'true':                  0 (count: 47, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      3406 (count: 47, min: 32, max: 118, avg: 72.47)
Length (states) of path with itp 'false':                 0 (count: 47, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          47 (count: 47, min: 1, max: 1, avg: 1.00)
Equal non-trivial interpolants along paths:            3312 (count: 47, min: 30, max: 116, avg: 70.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 3480
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1804.91
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      22.435s
Time for refinements:                 2.270s
Average time for refinement:          0.048s
Max time for refinement:              0.102s

Code Coverage
-----------------------------
  Function coverage:      0.013
  Visited lines:          852
  Total lines:            6878
  Line coverage:          0.124
  Visited conditions:     4
  Total conditions:       1610
  Condition coverage:     0.002

CPAchecker general statistics
-----------------------------
Number of program locations:     10179
Number of CFA edges:             11531
Number of relevant variables:    1865
Number of functions:             612
Number of loops:                 59
Size of reached set:             32
  Number of reached locations:   32 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N4186)
  Number of reached functions:   8 (1%)
  Number of partitions:          32
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          7.803s
  Time for loading CPAs:          1.158s
  Time for loading parser:        0.707s
  Time for CFA construction:      5.807s
    Time for parsing file(s):     1.297s
    Time for AST to CFA:          2.205s
    Time for CFA sanity check:    0.622s
    Time for post-processing:     1.473s
      Time for var class.:        0.785s
Time for Analysis:               22.435s
CPU time for analysis:           22.440s
Total time for CPAchecker:       30.250s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.114s

Time for Garbage Collector:       0.633s (in 70 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     53MB (    50 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
