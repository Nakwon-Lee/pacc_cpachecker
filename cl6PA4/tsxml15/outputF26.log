scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---fs--squashfs--squashfs.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e385y22x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6120: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 6158: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 6209: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6236: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6237: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6244: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6245: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6246: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6627: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6632: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6642: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6646: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6705: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6710: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6720: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 6724: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 10729: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10816: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10866: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10878: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10892: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10904: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10918: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10940: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10996: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11024: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11082: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11090: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11091: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11101: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11102: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11103: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11114: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11115: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11116: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11117: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11124: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11125: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11126: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11127: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11128: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 11161: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11233: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11257: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11329: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11353: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11425: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11449: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11521: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11560: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11625: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11631: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11632: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11643: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11644: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11645: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11651: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11652: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11653: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11654: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11660: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11661: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11662: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11663: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11664: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11670: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11671: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11672: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11673: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11674: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11675: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 11711: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11755: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11782: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11826: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11853: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11897: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11910: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11948: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11964: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12082: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12087: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12097: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12101: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 12160: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 12165: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 12175: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 12179: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5739: Function pointer *(ctx->actor) with type int (*)(struct dir_context *, const char *, int, loff_t , u64 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10751: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10765: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10827: Function pointer *arg0 with type enum irqreturn (*)(int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10839: Function pointer *arg0 with type enum irqreturn (*)(int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_filesystem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10570: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10751: Ignoring call via function pointer ldv_file_operations_instance_probe_0_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10751: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10547: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10550: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10553: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10556: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10527: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10513: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10496: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10499: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10474: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10477: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10480: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function page_put_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function page_follow_link_light to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lzo1x_decompress_safe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function inode_init_once to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xz_dec_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xz_dec_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11106: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function generic_getxattr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11068: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function generic_readlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11727: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11798: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11869: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6212: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___7 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6214: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10765: Ignoring call via function pointer ldv_file_operations_instance_write_0_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10765: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6192: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 6194: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___6 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function generic_read_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xz_dec_run to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function zlib_inflateInit2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function zlib_inflate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function zlib_inflateEnd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 12902-12903: Ignoring function call through function pointer *(handler->list): tmp___2 = (*(handler->list))(d, buffer, rest, (const char *)0, (size_t )name_size, handler->flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unlock_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10476: Destroying the void* pointer ldv_struct_xattr_handler_dummy_resourceless_instance_11::ldv_11_ldv_param_3_2_default produces garbage or the memory pointed by it is unused: ldv_struct_xattr_handler_dummy_resourceless_instance_11((void *)cf_arg_11); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10479: Destroying the void* pointer ldv_struct_xattr_handler_dummy_resourceless_instance_12::ldv_12_ldv_param_3_2_default produces garbage or the memory pointed by it is unused: ldv_struct_xattr_handler_dummy_resourceless_instance_12((void *)cf_arg_12); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10482: Destroying the void* pointer ldv_struct_xattr_handler_dummy_resourceless_instance_13::ldv_13_ldv_param_3_2_default produces garbage or the memory pointed by it is unused: ldv_struct_xattr_handler_dummy_resourceless_instance_13((void *)cf_arg_13); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __compiletime_assert_491 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11720: Assignment to the void* pointer ldv_11_ldv_param_3_2_default produces garbage or the memory pointed by it is unused: ldv_11_ldv_param_3_2_default = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 11791: Assignment to the void* pointer ldv_12_ldv_param_3_2_default produces garbage or the memory pointed by it is unused: ldv_12_ldv_param_3_2_default = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 11862: Assignment to the void* pointer ldv_13_ldv_param_3_2_default produces garbage or the memory pointed by it is unused: ldv_13_ldv_param_3_2_default = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2601394 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2103456 (81%)
  Because of loop head:            465577 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32361 (1%)
  Times precision was empty:       1362697 (52%)
  Times precision was {false}:     1825 (0%)
  Times result was cached:         1224172 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12700 (0%)
  Times result was 'false':        31783 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         799157
  BDD entailment checks:           451993
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          55
Number of abstraction locations:          468
Max number of predicates per location:    30
Avg number of predicates per location:    15
Total predicates per abstraction:         23201948
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 1597.38
Number of irrelevant predicates:          15532090 (67%)
Number of preds handled by boolean abs:   119598 (1%)
  Total number of models for allsat:      12736
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 49.397s
  Time for path formula creation:       45.001s
Time for strengthen operator:            8.008s
Time for prec operator:                563.746s
  Time for abstraction:                539.719s (Max:     0.657s, Count: 2601394)
    Boolean abstraction:                 9.473s
    Solving time:                        7.050s (Max:     0.019s)
    Model enumeration time:              0.550s
    Time for BDD construction:           0.410s (Max:     0.012s)
Time for merge operator:                 1.323s
Time for coverage check:                 0.473s
  Time for BDD entailment checks:        0.341s
Total time for SMT solver (w/o itp):     7.600s

Number of path formula cache hits:   13039292 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.582s

Total number of created targets for pointer analysis: 6796
   Number of created targets for uf: *signed_int is 2336
   Number of created targets for uf: *unsigned_long_long_int is 21
   Number of created targets for uf: *char is 80
   Number of created targets for uf: *unsigned_long_int is 11


Number of BDD nodes:                               8991
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       38946 (count: 1905902, min: 0, max: 1045, avg: 0.02)
Time for BDD node cleanup:                             0.283s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.434s
  Time for transition matches:                         8.143s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                     10586699 (count: 10586699, min: 1, max: 1, avg: 1.00) [1 x 10586699]

CPA algorithm statistics
------------------------
Number of iterations:            6676279
Max size of waitlist:            339
Average size of waitlist:        107
Number of computed successors:   7286389
Max successors for one state:    2
Number of times merged:          173582
Number of times stopped:         497968
Number of times breaked:         578

Total time for CPA algorithm:       817.502s (Max:     3.225s)
  Time for choose from waitlist:      2.887s
  Time for precision adjustment:    610.555s
  Time for transfer relation:       166.199s
  Time for merge operator:            3.906s
  Time for stop operator:             7.200s
  Time for adding to reached set:    11.311s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   578
Avg. length of target path (in blocks):              163264 (count: 578, min: 33, max: 396, avg: 282.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  70.563s
  Counterexample analysis:                            56.471s (Max:     0.421s, Calls: 578)
    Refinement sat check:                             13.399s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.093s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.090s
  Precision update:                                    2.088s
  ARG update:                                         10.173s

Length of refined path (in blocks):                  163264 (count: 578, min: 33, max: 396, avg: 282.46)
Number of affected states:                           162686 (count: 578, min: 32, max: 395, avg: 281.46)
Length (states) of path with itp 'true':                  0 (count: 578, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:    162686 (count: 578, min: 32, max: 395, avg: 281.46)
Length (states) of path with itp 'false':                 0 (count: 578, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:         582 (count: 578, min: 1, max: 2, avg: 1.01)
Equal non-trivial interpolants along paths:          161526 (count: 578, min: 30, max: 393, avg: 279.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                578
Number of successful refinements:     578
Number of failed refinements:         0
Max. size of reached set before ref.: 23527
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 11686.65
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:     892.136s
Time for refinements:                74.607s
Average time for refinement:          0.129s
Max time for refinement:              0.502s

Code Coverage
-----------------------------
  Function coverage:      0.279
  Visited lines:          2019
  Total lines:            6878
  Line coverage:          0.294
  Visited conditions:     204
  Total conditions:       1610
  Condition coverage:     0.127

CPAchecker general statistics
-----------------------------
Number of program locations:     10179
Number of CFA edges:             11531
Number of relevant variables:    1865
Number of functions:             612
Number of loops:                 59
Size of reached set:             3486
  Number of reached locations:   1121 (11%)
    Avg states per location:     3
    Max states per location:     127 (at node N8213)
  Number of reached functions:   171 (28%)
  Number of partitions:          3466
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1296 (before lines 6121-6124), Function ldv_file_operations_file_operations_instance_0 called from node N4384, stack depth 4 [7e2df260], stack [main, ldv_entry_EMGentry_16, ldv_dispatch_register_file_operations_instance_1_16_15, ldv_file_operations_file_operations_instance_0]])
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:          8.120s
  Time for loading CPAs:          1.272s
  Time for loading parser:        0.742s
  Time for CFA construction:      5.952s
    Time for parsing file(s):     1.542s
    Time for AST to CFA:          2.171s
    Time for CFA sanity check:    0.588s
    Time for post-processing:     1.389s
      Time for var class.:        0.751s
Time for Analysis:              892.136s
CPU time for analysis:          892.070s
Total time for CPAchecker:      900.262s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.198s

Time for Garbage Collector:      61.450s (in 3881 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                358MB (   342 MiB) max;    152MB (   145 MiB) avg;    364MB (   347 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           365MB (   348 MiB) max;    224MB (   214 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8141MB (  7763 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
