scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--hwmon--nct6775.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bfwwqdq_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11050: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12204: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12229: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12281: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12311: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12341: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12373: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12890: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12925: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12945: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12980: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13000: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13035: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13055: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13090: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13110: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13145: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13165: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13200: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13220: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13255: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13275: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13310: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13330: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13365: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13385: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13440: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13474: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13494: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13529: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13549: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13584: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13604: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13639: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13659: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13694: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13714: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13749: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13769: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13804: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13824: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13879: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13914: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13934: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13969: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13989: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14043: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14077: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14097: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14131: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14151: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14185: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14205: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14239: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14259: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14293: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14313: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14347: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14361: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14376: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14390: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14405: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14419: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14434: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14448: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14463: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14477: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14492: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15081: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12626: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17511: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17530: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6054: Function pointer *(data->fan_from_reg) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6568: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4316: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6675: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6666: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11092: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12780: Ignoring call via function pointer ldv_pm_ops_instance_runtime_idle_1_27::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12780: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12791: Ignoring call via function pointer ldv_pm_ops_instance_runtime_resume_1_24::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12791: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4316: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4614 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4365 (95%)
  Because of loop head:            198 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         51 (1%)
  Times precision was empty:       3118 (68%)
  Times precision was {false}:     57 (1%)
  Times result was cached:         1243 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      196 (4%)
  Times result was 'false':        27 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         10888
  BDD entailment checks:           482
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       252
Number of predicates discovered:          9
Number of abstraction locations:          126
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         1985
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 7.85
Number of irrelevant predicates:          681 (34%)
Number of preds handled by boolean abs:   246 (12%)
  Total number of models for allsat:      250
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.28

Time for post operator:                  5.454s
  Time for path formula creation:        5.393s
Time for strengthen operator:            0.068s
Time for prec operator:                  3.969s
  Time for abstraction:                  3.565s (Max:     0.577s, Count: 4614)
    Boolean abstraction:                 1.867s
    Solving time:                        1.914s (Max:     0.446s)
    Model enumeration time:              0.320s
    Time for BDD construction:           0.030s (Max:     0.012s)
Time for merge operator:                 0.591s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     2.234s

Number of path formula cache hits:   23021 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.574s

Total number of created targets for pointer analysis: 11706
   Number of created targets for uf: *unsigned_short_int is 1453
   Number of created targets for uf: *signed_int is 64
   Number of created targets for uf: *unsigned_char is 139
   Number of created targets for uf: *_Bool is 58
   Number of created targets for uf: *(struct_platform_driver)* is 2


Number of BDD nodes:                               234
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         439 (count: 5092, min: 0, max: 183, avg: 0.09)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.243s
Automaton transfers with branching:                0
Automaton transfer successors:                        30495 (count: 30495, min: 1, max: 1, avg: 1.00) [1 x 30495]

CPA algorithm statistics
------------------------
Number of iterations:            19701
Max size of waitlist:            38
Average size of waitlist:        24
Number of computed successors:   25510
Max successors for one state:    2
Number of times merged:          5203
Number of times stopped:         5522
Number of times breaked:         32

Total time for CPA algorithm:        13.102s (Max:     6.775s)
  Time for choose from waitlist:      0.061s
  Time for precision adjustment:      4.544s
  Time for transfer relation:         6.815s
  Time for merge operator:            0.913s
  Time for stop operator:             0.162s
  Time for adding to reached set:     0.101s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                4582 (count: 32, min: 93, max: 182, avg: 143.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.911s
  Counterexample analysis:                             8.606s (Max:     0.478s, Calls: 32)
    Refinement sat check:                              7.050s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.030s
  ARG update:                                          0.132s

Length of refined path (in blocks):                    4556 (count: 32, min: 91, max: 182, avg: 142.38)
Number of affected states:                              920 (count: 32, min: 5, max: 97, avg: 28.75)
Length (states) of path with itp 'true':               3604 (count: 32, min: 0, max: 166, avg: 112.63)
Length (states) of path with itp non-trivial itp:       920 (count: 32, min: 5, max: 97, avg: 28.75)
Length (states) of path with itp 'false':                 4 (count: 32, min: 0, max: 1, avg: 0.13)
Different non-trivial interpolants along paths:          36 (count: 32, min: 1, max: 2, avg: 1.13)
Equal non-trivial interpolants along paths:             852 (count: 32, min: 3, max: 95, avg: 26.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 12940
Max. size of reached set after ref.:  853
Avg. size of reached set before ref.: 1051.66
Avg. size of reached set after ref.:  474.06

Total time for CEGAR algorithm:      22.241s
Time for refinements:                 9.113s
Average time for refinement:          0.284s
Max time for refinement:              0.507s

Code Coverage
-----------------------------
  Function coverage:      0.091
  Visited lines:          1385
  Total lines:            7131
  Line coverage:          0.194
  Visited conditions:     184
  Total conditions:       1672
  Condition coverage:     0.110

CPAchecker general statistics
-----------------------------
Number of program locations:     10536
Number of CFA edges:             12020
Number of relevant variables:    1933
Number of functions:             650
Number of loops:                 75
Size of reached set:             1478
  Number of reached locations:   453 (4%)
    Avg states per location:     3
    Max states per location:     24 (at node N76)
  Number of reached functions:   59 (9%)
  Number of partitions:          1477
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5561 (after line 12403), Function ldv_platform_pm_ops_instance_1 called from node N4909, stack depth 10 [51172948], stack [main, ldv_entry_EMGentry_36, ldv_EMGentry_init_sensors_nct6775_init_36_11, sensors_nct6775_init, ldv___platform_driver_register_146, ldv___platform_driver_register, ldv_dispatch_register_34_2, ldv_platform_platform_instance_0, ldv_dispatch_pm_register_0_6, ldv_platform_pm_ops_instance_1]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          8.039s
  Time for loading CPAs:          1.200s
  Time for loading parser:        0.664s
  Time for CFA construction:      6.061s
    Time for parsing file(s):     1.362s
    Time for AST to CFA:          2.324s
    Time for CFA sanity check:    0.558s
    Time for post-processing:     1.545s
      Time for var class.:        0.898s
Time for Analysis:               22.241s
CPU time for analysis:           22.240s
Total time for CPAchecker:       30.284s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.166s

Time for Garbage Collector:       0.512s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 86MB (    82 MiB) max;     56MB (    53 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
