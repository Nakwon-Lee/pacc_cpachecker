scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--hwmon--nct6775.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e3pq9mnr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11050: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12204: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12229: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12281: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12311: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12341: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12373: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12890: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12925: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12945: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12980: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13000: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13035: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13055: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13090: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13110: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13145: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13165: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13200: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13220: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13255: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13275: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13310: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13330: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13365: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13385: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13440: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13474: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13494: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13529: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13549: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13584: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13604: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13639: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13659: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13694: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13714: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13749: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13769: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13804: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13824: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13879: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13914: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13934: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13969: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13989: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14043: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14077: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14097: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14131: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14151: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14185: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14205: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14239: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14259: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14293: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14313: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14347: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14361: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14376: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14390: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14405: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14419: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14434: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14448: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14463: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14477: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14492: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15081: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12626: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17511: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17530: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6054: Function pointer *(data->fan_from_reg) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6568: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4316: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6675: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6666: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11092: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12780: Ignoring call via function pointer ldv_pm_ops_instance_runtime_idle_1_27::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12780: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12791: Ignoring call via function pointer ldv_pm_ops_instance_runtime_resume_1_24::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12791: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4316: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            203403 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  198165 (97%)
  Because of loop head:            4466 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         772 (0%)
  Times precision was empty:       13359 (7%)
  Times precision was {false}:     1575 (1%)
  Times result was cached:         184806 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3663 (2%)
  Times result was 'false':        555 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         570459
  BDD entailment checks:           17183
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       252
Number of predicates discovered:          27
Number of abstraction locations:          80
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         692967
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 132.30
Number of irrelevant predicates:          518109 (75%)
Number of preds handled by boolean abs:   5993 (1%)
  Total number of models for allsat:      4802
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.31

Time for post operator:                 61.564s
  Time for path formula creation:       60.832s
Time for strengthen operator:            1.353s
Time for prec operator:                660.024s
  Time for abstraction:                653.743s (Max:    88.560s, Count: 203403)
    Boolean abstraction:               497.308s
    Solving time:                      321.616s (Max:     1.903s)
    Model enumeration time:            268.619s
    Time for BDD construction:           0.208s (Max:     0.009s)
Time for merge operator:                13.583s
Time for coverage check:                 0.110s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):   590.235s

Number of path formula cache hits:   1301925 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    41.048s

Total number of created targets for pointer analysis: 435546
   Number of created targets for uf: *unsigned_short_int is 52273
   Number of created targets for uf: *signed_int is 64
   Number of created targets for uf: *unsigned_char is 9523
   Number of created targets for uf: *_Bool is 3706
   Number of created targets for uf: *(struct_platform_driver)* is 2


Number of BDD nodes:                               500
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7753 (count: 60637, min: 0, max: 200, avg: 0.13)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.168s
  Time for transition matches:                         1.156s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                      1373315 (count: 1373315, min: 1, max: 1, avg: 1.00) [1 x 1373315]

CPA algorithm statistics
------------------------
Number of iterations:            941899
Max size of waitlist:            66
Average size of waitlist:        35
Number of computed successors:   1235092
Max successors for one state:    2
Number of times merged:          276638
Number of times stopped:         289107
Number of times breaked:         446

Total time for CPA algorithm:       769.640s (Max:   100.603s)
  Time for choose from waitlist:      0.534s
  Time for precision adjustment:    668.296s
  Time for transfer relation:        77.489s
  Time for merge operator:           16.847s
  Time for stop operator:             1.582s
  Time for adding to reached set:     1.692s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   446
Avg. length of target path (in blocks):               71291 (count: 446, min: 92, max: 326, avg: 159.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 120.664s
  Counterexample analysis:                           118.183s (Max:     0.907s, Calls: 446)
    Refinement sat check:                             94.472s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.059s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.188s
  Precision update:                                    0.246s
  ARG update:                                          1.626s

Length of refined path (in blocks):                   70349 (count: 446, min: 91, max: 300, avg: 157.73)
Number of affected states:                            17396 (count: 446, min: 5, max: 212, avg: 39.00)
Length (states) of path with itp 'true':              52507 (count: 446, min: 0, max: 173, avg: 117.73)
Length (states) of path with itp non-trivial itp:     17396 (count: 446, min: 5, max: 212, avg: 39.00)
Length (states) of path with itp 'false':                41 (count: 446, min: 0, max: 1, avg: 0.09)
Different non-trivial interpolants along paths:         631 (count: 446, min: 1, max: 8, avg: 1.41)
Equal non-trivial interpolants along paths:           16319 (count: 446, min: 3, max: 203, avg: 36.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                446
Number of successful refinements:     446
Number of failed refinements:         0
Max. size of reached set before ref.: 35594
Max. size of reached set after ref.:  11262
Avg. size of reached set before ref.: 2815.88
Avg. size of reached set after ref.:  696.84

Total time for CEGAR algorithm:     891.990s
Time for refinements:               122.029s
Average time for refinement:          0.273s
Max time for refinement:              0.928s

Code Coverage
-----------------------------
  Function coverage:      0.068
  Visited lines:          1273
  Total lines:            7131
  Line coverage:          0.179
  Visited conditions:     46
  Total conditions:       1672
  Condition coverage:     0.028

CPAchecker general statistics
-----------------------------
Number of program locations:     10536
Number of CFA edges:             12020
Number of relevant variables:    1933
Number of functions:             650
Number of loops:                 75
Size of reached set:             341
  Number of reached locations:   236 (2%)
    Avg states per location:     1
    Max states per location:     12 (at node N8374)
  Number of reached functions:   44 (7%)
  Number of partitions:          341
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          8.207s
  Time for loading CPAs:          1.090s
  Time for loading parser:        0.726s
  Time for CFA construction:      6.230s
    Time for parsing file(s):     1.379s
    Time for AST to CFA:          2.417s
    Time for CFA sanity check:    0.553s
    Time for post-processing:     1.690s
      Time for var class.:        0.969s
Time for Analysis:              891.990s
CPU time for analysis:          891.900s
Total time for CPAchecker:      900.213s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.110s

Time for Garbage Collector:      10.504s (in 482 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                330MB (   315 MiB) max;    152MB (   145 MiB) avg;    345MB (   329 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           353MB (   337 MiB) max;    220MB (   210 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8498MB (  8104 MiB) max;   8323MB (  7937 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
