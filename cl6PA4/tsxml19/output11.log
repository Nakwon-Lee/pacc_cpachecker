scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--mtd--devices--docg3.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_we5j0i9z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4692: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4697: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4707: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4711: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4742: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4747: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4757: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4761: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4820: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4825: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4835: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4839: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4898: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9222: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9275: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9306: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9391: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 9392: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9433: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9464: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9549: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 9550: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9591: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9622: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9707: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 9708: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9749: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9780: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9865: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 9866: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10139: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10252: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10282: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10320: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 10327: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 10328: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 10364: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10394: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10432: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 10439: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 10440: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 10468: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11005: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11039: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11059: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11093: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11111: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11155: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 11161: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 11162: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 11168: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 11169: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 11170: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10082: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10096: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10110: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10124: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10741: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10752: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10763: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10774: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10785: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10796: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10807: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10818: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10829: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10840: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10851: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10862: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10873: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10884: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10895: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10906: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10917: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10928: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10939: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10950: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10961: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10972: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10983: Function pointer *arg0 with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13897: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13916: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5201-5202: Function pointer *((void (*)(void *, int, int, u16 , int))it_func) with type void (*)(void *, int, int, u16 , int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __platform_driver_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9057: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_bch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_is_watching to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_lockdep_current_cpu_online to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4616: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5201-5202: Ignoring call via function pointer trace_docg3_io::it_func for which no suitable target was found in line: (*((void (*)(void *, int, int, u16 , int))it_func))(__data, op, width, (int)reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 5201-5202: Ignoring function call through function pointer *((void (*)(void *, int, int, u16 , int))it_func): (*((void (*)(void *, int, int, u16 , int))it_func))(__data, op, width, (int)reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_bch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_parse_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25204 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23290 (92%)
  Because of loop head:            1531 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         383 (2%)
  Times precision was empty:       21734 (86%)
  Times precision was {false}:     279 (1%)
  Times result was cached:         1867 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1324 (5%)
  Times result was 'false':        375 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         15751
  BDD entailment checks:           3413
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          52
Number of abstraction locations:          184
Max number of predicates per location:    23
Avg number of predicates per location:    8
Total predicates per abstraction:         25236
Max number of predicates per abstraction: 23
Avg number of predicates per abstraction: 15.74
Number of irrelevant predicates:          3169 (13%)
Number of preds handled by boolean abs:   10666 (42%)
  Total number of models for allsat:      1349
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.02

Time for post operator:                  5.856s
  Time for path formula creation:        5.711s
Time for strengthen operator:            0.360s
Time for prec operator:                  6.605s
  Time for abstraction:                  5.792s (Max:     0.055s, Count: 25204)
    Boolean abstraction:                 1.443s
    Solving time:                        0.881s (Max:     0.017s)
    Model enumeration time:              0.098s
    Time for BDD construction:           0.155s (Max:     0.012s)
Time for merge operator:                 0.494s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     0.979s

Number of path formula cache hits:   117783 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.912s

Total number of created targets for pointer analysis: 162
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 145
   Number of created targets for uf: *(struct_docg3_cascade)* is 2
   Number of created targets for uf: *(struct_nand_ecclayout)* is 2
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *unsigned_long_long_int is 2
   Number of created targets for uf: *unsigned_char_:_2 is 2
   Number of created targets for uf: *unsigned_int is 4


Number of BDD nodes:                               722
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4762 (count: 35559, min: 0, max: 763, avg: 0.13)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.585s
  Time for transition matches:                         0.274s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                       149808 (count: 149808, min: 1, max: 1, avg: 1.00) [1 x 149808]

CPA algorithm statistics
------------------------
Number of iterations:            94906
Max size of waitlist:            23
Average size of waitlist:        13
Number of computed successors:   104903
Max successors for one state:    2
Number of times merged:          6169
Number of times stopped:         9515
Number of times breaked:         31

Total time for CPA algorithm:        21.071s (Max:     9.427s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:      8.205s
  Time for transfer relation:         9.964s
  Time for merge operator:            0.776s
  Time for stop operator:             0.406s
  Time for adding to reached set:     0.375s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                2465 (count: 31, min: 31, max: 126, avg: 79.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.807s
  Counterexample analysis:                             1.064s (Max:     0.072s, Calls: 31)
    Refinement sat check:                              0.478s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.094s
  ARG update:                                          0.501s

Length of refined path (in blocks):                    2447 (count: 31, min: 31, max: 125, avg: 78.94)
Number of affected states:                             2018 (count: 31, min: 4, max: 121, avg: 65.10)
Length (states) of path with itp 'true':                398 (count: 31, min: 0, max: 104, avg: 12.84)
Length (states) of path with itp non-trivial itp:      2018 (count: 31, min: 4, max: 121, avg: 65.10)
Length (states) of path with itp 'false':                 6 (count: 31, min: 0, max: 1, avg: 0.19)
Different non-trivial interpolants along paths:          35 (count: 31, min: 0, max: 3, avg: 1.13)
Equal non-trivial interpolants along paths:            1952 (count: 31, min: 0, max: 118, avg: 62.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 43212
Max. size of reached set after ref.:  694
Avg. size of reached set before ref.: 3086.23
Avg. size of reached set after ref.:  94.97

Total time for CEGAR algorithm:      23.166s
Time for refinements:                 2.086s
Average time for refinement:          0.067s
Max time for refinement:              0.438s

Code Coverage
-----------------------------
  Function coverage:      0.187
  Visited lines:          1461
  Total lines:            5154
  Line coverage:          0.283
  Visited conditions:     162
  Total conditions:       1118
  Condition coverage:     0.145

CPAchecker general statistics
-----------------------------
Number of program locations:     7830
Number of CFA edges:             8823
Number of relevant variables:    1029
Number of functions:             572
Number of loops:                 51
Size of reached set:             2284
  Number of reached locations:   750 (10%)
    Avg states per location:     3
    Max states per location:     30 (at node N309)
  Number of reached functions:   107 (19%)
  Number of partitions:          2271
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5875 (before line 13691), Function ldv_zalloc called from node N5456, stack depth 10 [3512740], stack [main, ldv_entry_EMGentry_11, ldv_dispatch_register_platform_instance_3_11_10, ldv_platform_platform_instance_4, ldv_platform_instance_probe_4_14, docg3_probe, doc_probe_device, kzalloc, ldv_kzalloc, ldv_zalloc]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          7.084s
  Time for loading CPAs:          1.170s
  Time for loading parser:        0.732s
  Time for CFA construction:      5.009s
    Time for parsing file(s):     1.158s
    Time for AST to CFA:          1.968s
    Time for CFA sanity check:    0.524s
    Time for post-processing:     1.166s
      Time for var class.:        0.585s
Time for Analysis:               23.166s
CPU time for analysis:           23.160s
Total time for CPAchecker:       30.255s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.126s

Time for Garbage Collector:       1.252s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                119MB (   114 MiB) max;     61MB (    58 MiB) avg;    132MB (   126 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           139MB (   132 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8070MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
