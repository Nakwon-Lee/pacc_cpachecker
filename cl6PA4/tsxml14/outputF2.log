scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---sound--drivers--vx--snd-vx-lib.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i5lxxv_0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5948: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6793: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6853: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8371: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8401: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8459: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8465: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8466: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8473: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8474: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8475: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8482: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8483: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8484: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8485: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8492: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8493: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8494: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8495: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8496: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8502: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8503: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8504: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8505: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8506: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8507: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8553: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8583: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8641: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8647: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8648: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8655: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8656: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8664: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8665: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8666: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8667: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8674: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8675: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8676: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8677: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8678: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8684: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8685: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8686: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8687: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8688: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8689: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4581: Function pointer *(chip->ops->in8) with type unsigned char (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10580: Function pointer *(chip->ops->in32) with type unsigned int (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4592: Function pointer *(chip->ops->out8) with type void (*)(struct vx_core *, int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10591: Function pointer *(chip->ops->out32) with type void (*)(struct vx_core *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5733: Function pointer *(chip->ops->load_dsp) with type int (*)(struct vx_core *, int, const struct firmware *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6184: Function pointer *(chip->ops->load_dsp) with type int (*)(struct vx_core *, int, const struct firmware *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8962: Function pointer *(chip->ops->change_audio_source) with type void (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10834: Function pointer *(chip->ops->set_clock_source) with type void (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6388: Function pointer *(chip->ops->dma_read) with type void (*)(struct vx_core *, struct snd_pcm_runtime *, struct vx_pipe *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6376: Function pointer *(chip->ops->dma_write) with type void (*)(struct vx_core *, struct snd_pcm_runtime *, struct vx_pipe *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5436: Function pointer *(chip->ops->reset_board) with type void (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8856: Function pointer *(chip->ops->akm_write) with type void (*)(struct vx_core *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8857: Function pointer *(chip->ops->akm_write) with type void (*)(struct vx_core *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8880: Function pointer *(chip->ops->akm_write) with type void (*)(struct vx_core *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4570: Function pointer *(chip->ops->validate_irq) with type void (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8823: Function pointer *(chip->ops->write_codec) with type void (*)(struct vx_core *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5897: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8365: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4581: Ignoring function call through function pointer *(chip->ops->in8): tmp = (*(chip->ops->in8))(chip, reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __snd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4592: Ignoring function call through function pointer *(chip->ops->out8): (*(chip->ops->out8))(chip, reg, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snd_pcm_hw_constraint_step to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5900: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8547: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function snd_pcm_format_little_endian to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_physical_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8880: Ignoring function call through function pointer *(chip->ops->akm_write): (*(chip->ops->akm_write))(chip, 2, (unsigned int)mute); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            757923 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  664829 (88%)
  Because of loop head:            85606 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7488 (1%)
  Times precision was empty:       11268 (1%)
  Times precision was {false}:     1256 (0%)
  Times result was cached:         729371 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16028 (2%)
  Times result was 'false':        75338 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         418446
  BDD entailment checks:           273178
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       59
Number of predicates discovered:          80
Number of abstraction locations:          308
Max number of predicates per location:    24
Avg number of predicates per location:    8
Total predicates per abstraction:         2704994
Max number of predicates per abstraction: 24
Avg number of predicates per abstraction: 156.50
Number of irrelevant predicates:          1389416 (51%)
Number of preds handled by boolean abs:   51105 (2%)
  Total number of models for allsat:      16038
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.00

Time for post operator:                 39.077s
  Time for path formula creation:       37.270s
Time for strengthen operator:            3.716s
Time for prec operator:                180.686s
  Time for abstraction:                172.460s (Max:     0.631s, Count: 757923)
    Boolean abstraction:                31.670s
    Solving time:                       34.565s (Max:     0.153s)
    Model enumeration time:              1.539s
    Time for BDD construction:           0.468s (Max:     0.017s)
Time for merge operator:                 3.447s
Time for coverage check:                 0.342s
  Time for BDD entailment checks:        0.275s
Total time for SMT solver (w/o itp):    36.104s

Number of path formula cache hits:   4464919 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.218s

Total number of created targets for pointer analysis: 337202
   Number of created targets for uf: *unsigned_short_int is 880
   Number of created targets for uf: *(void)* is 42
   Number of created targets for uf: *(struct_snd_pcm_substream)* is 7
   Number of created targets for uf: *signed_int is 477
   Number of created targets for uf: *(struct_vx_pipe)* is 2
   Number of created targets for uf: *unsigned_char_:_1 is 15
   Number of created targets for uf: *unsigned_long_long_int is 15
   Number of created targets for uf: *unsigned_int is 12613
   Number of created targets for uf: *signed_short_int is 66


Number of BDD nodes:                               1742
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       34670 (count: 395669, min: 0, max: 845, avg: 0.09)
Time for BDD node cleanup:                             0.065s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.550s
  Time for transition matches:                         3.163s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      4079288 (count: 4079288, min: 1, max: 1, avg: 1.00) [1 x 4079288]

CPA algorithm statistics
------------------------
Number of iterations:            2321653
Max size of waitlist:            70
Average size of waitlist:        35
Number of computed successors:   2597985
Max successors for one state:    2
Number of times merged:          72634
Number of times stopped:         195684
Number of times breaked:         1846

Total time for CPA algorithm:       297.511s (Max:     2.342s)
  Time for choose from waitlist:      1.165s
  Time for precision adjustment:    197.448s
  Time for transfer relation:        80.276s
  Time for merge operator:            4.723s
  Time for stop operator:             3.236s
  Time for adding to reached set:     4.215s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1846
Avg. length of target path (in blocks):              487316 (count: 1846, min: 31, max: 527, avg: 263.98)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 563.363s
  Counterexample analysis:                           555.471s (Max:     0.818s, Calls: 1846)
    Refinement sat check:                            343.226s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.258s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.342s
  Precision update:                                    1.678s
  ARG update:                                          3.905s

Length of refined path (in blocks):                  461093 (count: 1846, min: 31, max: 493, avg: 249.78)
Number of affected states:                            34239 (count: 1846, min: 1, max: 394, avg: 18.55)
Length (states) of path with itp 'true':             425008 (count: 1846, min: 0, max: 475, avg: 230.23)
Length (states) of path with itp non-trivial itp:     34239 (count: 1846, min: 1, max: 394, avg: 18.55)
Length (states) of path with itp 'false':               287 (count: 1846, min: 0, max: 1, avg: 0.16)
Different non-trivial interpolants along paths:        1613 (count: 1846, min: 0, max: 4, avg: 0.87)
Equal non-trivial interpolants along paths:           30780 (count: 1846, min: 0, max: 391, avg: 16.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1846
Number of successful refinements:     1846
Number of failed refinements:         0
Max. size of reached set before ref.: 25200
Max. size of reached set after ref.:  24442
Avg. size of reached set before ref.: 11460.55
Avg. size of reached set after ref.:  10213.25

Total time for CEGAR algorithm:     892.996s
Time for refinements:               583.888s
Average time for refinement:          0.316s
Max time for refinement:              0.832s

Code Coverage
-----------------------------
  Function coverage:      0.100
  Visited lines:          1455
  Total lines:            5030
  Line coverage:          0.289
  Visited conditions:     164
  Total conditions:       1250
  Condition coverage:     0.131

CPAchecker general statistics
-----------------------------
Number of program locations:     7771
Number of CFA edges:             8730
Number of relevant variables:    1105
Number of functions:             579
Number of loops:                 40
Size of reached set:             24442
  Number of reached locations:   613 (8%)
    Avg states per location:     39
    Max states per location:     1098 (at node N76)
  Number of reached functions:   58 (10%)
  Number of partitions:          23642
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N453 (before line 5120), Function vx_send_msg called from node N1633, stack depth 8 [2bfbab7d], stack [main, ldv_entry_EMGentry_2, ldv_dispatch_register_io_instance_1_2_5, ldv_struct_snd_pcm_ops_io_instance_0, ldv_io_instance_probe_0_11, vx_pcm_capture_open, vx_alloc_pipe, vx_send_msg]])
  Number of target states:       0
  Size of final wait list        38

Time for analysis setup:          7.272s
  Time for loading CPAs:          1.095s
  Time for loading parser:        0.721s
  Time for CFA construction:      5.292s
    Time for parsing file(s):     1.265s
    Time for AST to CFA:          2.021s
    Time for CFA sanity check:    0.484s
    Time for post-processing:     1.330s
      Time for var class.:        0.722s
Time for Analysis:              892.996s
CPU time for analysis:          892.880s
Total time for CPAchecker:      900.272s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.506s

Time for Garbage Collector:      18.863s (in 932 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                335MB (   319 MiB) max;    195MB (   186 MiB) avg;    345MB (   329 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     42MB (    40 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           356MB (   339 MiB) max;    283MB (   270 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8695MB (  8292 MiB) max;   8404MB (  8015 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
