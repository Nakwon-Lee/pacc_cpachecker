scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---fs--nfs--nfsv2.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e__2a_or/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 10117: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10318: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10359: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11039: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 11040: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11229: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11270: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11950: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 11951: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12141: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12182: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12869: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 12870: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13060: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13101: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13788: Dead code detected: goto ldv_call_11; (CFACreationUtils.addEdgeToCFA, INFO)

line 13789: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13978: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14699: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14889: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14930: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15610: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 15611: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15800: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15841: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16521: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 16522: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16711: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16752: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17432: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 17433: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17622: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17663: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18343: Dead code detected: goto ldv_call_6; (CFACreationUtils.addEdgeToCFA, INFO)

line 18344: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18533: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18574: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 19254: Dead code detected: goto ldv_call_7; (CFACreationUtils.addEdgeToCFA, INFO)

line 19255: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 19444: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 19485: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20165: Dead code detected: goto ldv_call_8; (CFACreationUtils.addEdgeToCFA, INFO)

line 20166: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20355: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20396: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21076: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 21077: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 21087: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21099: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21111: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21123: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21135: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21147: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21159: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21171: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21183: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21195: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21207: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21219: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21233: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21247: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21261: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21275: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21289: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21303: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21317: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21331: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21345: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21359: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21373: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21387: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34416: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34435: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function register_nfs_version to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_nfs_version to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10036: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10308: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21087: Ignoring call via function pointer ldv_file_operations_instance_probe_0_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21087: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10039: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10411: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10383: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_alloc_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_create_server to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_permission to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_rmdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22783: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xdr_inline_decode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rpc_call_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_invalidate_atime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_refresh_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_wb_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_post_op_update_inode_force_wcc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xdr_reserve_space to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function from_kuid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function from_kgid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10385: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 30128: Return type of function __builtin_bswap32 is void, but result is used as type int: tmp = __builtin_bswap32(val); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_bswap32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_bswap32, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11007: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10998: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10983: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10955: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10936: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10908: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10841: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10814: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10777: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_xmalloc(976UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10753: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10713: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10696: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10669: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10654: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_fattr_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_alloc_fhandle to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_alloc_fattr to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_clone_server to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_close_context to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_free_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_submount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_try_mount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21233: Ignoring call via function pointer ldv_file_operations_instance_write_0_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21233: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22796: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function rpc_call_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10910: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___28 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10779: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_xmalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_init_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_rename to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11219: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21123: Ignoring call via function pointer ldv_file_operations_instance_probe_1_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21123: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10042: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11322: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11294: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11296: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_setattr_update_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function make_kuid(&init_user_ns, tmp___4) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function nfs_instantiate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function make_kgid(&init_user_ns, tmp___8) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

line 11918: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11909: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11894: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11866: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11847: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11819: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11752: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11725: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11688: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_xmalloc(976UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11664: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11624: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11607: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11580: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11565: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21275: Ignoring call via function pointer ldv_file_operations_instance_write_1_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21275: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xdr_encode_opaque to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11821: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___28 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11690: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___21 = ldv_xmalloc(320UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13968: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21135: Ignoring call via function pointer ldv_file_operations_instance_probe_2_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21135: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10045: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___2 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14071: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14043: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14045: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14667: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___35 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14658: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___34 = ldv_xmalloc(136UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14643: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___33 = ldv_xmalloc(704UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14615: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___32 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14596: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___30 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14568: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___27 = ldv_xmalloc(1096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14501: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___24 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14474: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___23 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14437: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___20 = ldv_xmalloc(976UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14413: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___18 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14373: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___15 = ldv_xmalloc(2472UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14356: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___14 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14329: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___13 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 14314: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___12 = ldv_xmalloc(960UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21289: Ignoring call via function pointer ldv_file_operations_instance_write_2_4::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2, arg3, arg4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21289: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2, arg3, arg4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1883170 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1576480 (84%)
  Because of loop head:            275599 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31091 (2%)
  Times precision was empty:       416828 (22%)
  Times precision was {false}:     2540 (0%)
  Times result was cached:         1453762 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10040 (1%)
  Times result was 'false':        40258 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         597104
  BDD entailment checks:           426392
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          81
Number of abstraction locations:          852
Max number of predicates per location:    30
Avg number of predicates per location:    4
Total predicates per abstraction:         9355159
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 743.65
Number of irrelevant predicates:          6111019 (65%)
Number of preds handled by boolean abs:   28820 (0%)
  Total number of models for allsat:      11817
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.18

Time for post operator:                 36.286s
  Time for path formula creation:       33.100s
Time for strengthen operator:            5.425s
Time for prec operator:                332.197s
  Time for abstraction:                314.368s (Max:     0.857s, Count: 1883170)
    Boolean abstraction:                 6.758s
    Solving time:                        5.628s (Max:     0.013s)
    Model enumeration time:              0.601s
    Time for BDD construction:           0.342s (Max:     0.013s)
Time for merge operator:                 0.810s
Time for coverage check:                 0.466s
  Time for BDD entailment checks:        0.324s
Total time for SMT solver (w/o itp):     6.229s

Number of path formula cache hits:   8494486 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.807s

Total number of created targets for pointer analysis: 220
   Number of created targets for uf: *unsigned_short_int is 14
   Number of created targets for uf: *signed_long_long_int is 5
   Number of created targets for uf: *enum_nfs_stat is 108
   Number of created targets for uf: *unsigned_int is 9


Number of BDD nodes:                               1908
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       23975 (count: 919258, min: 0, max: 589, avg: 0.03)
Time for BDD node cleanup:                             0.136s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.865s
  Time for transition matches:                         4.628s
  Time for transition assertions:                      0.013s
  Time for transition actions:                         0.069s
Automaton transfers with branching:                0
Automaton transfer successors:                      6978442 (count: 6978442, min: 1, max: 1, avg: 1.00) [1 x 6978442]

CPA algorithm statistics
------------------------
Number of iterations:            4959139
Max size of waitlist:            345
Average size of waitlist:        84
Number of computed successors:   5383678
Max successors for one state:    2
Number of times merged:          85356
Number of times stopped:         329207
Number of times breaked:         2430

Total time for CPA algorithm:       732.603s (Max:     1.812s)
  Time for choose from waitlist:      1.957s
  Time for precision adjustment:    366.184s
  Time for transfer relation:       337.635s
  Time for merge operator:            2.480s
  Time for stop operator:             5.631s
  Time for adding to reached set:     7.134s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2430
Avg. length of target path (in blocks):              378162 (count: 2430, min: 31, max: 249, avg: 155.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 128.979s
  Counterexample analysis:                           113.759s (Max:     0.154s, Calls: 2430)
    Refinement sat check:                             39.813s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.188s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.725s
  Precision update:                                    5.455s
  ARG update:                                          7.395s

Length of refined path (in blocks):                  370407 (count: 2430, min: 31, max: 248, avg: 152.43)
Number of affected states:                            89265 (count: 2430, min: 1, max: 247, avg: 36.73)
Length (states) of path with itp 'true':             278712 (count: 2430, min: 0, max: 219, avg: 114.70)
Length (states) of path with itp non-trivial itp:     89265 (count: 2430, min: 1, max: 247, avg: 36.73)
Length (states) of path with itp 'false':               607 (count: 2430, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:        2215 (count: 2430, min: 0, max: 5, avg: 0.91)
Equal non-trivial interpolants along paths:           84620 (count: 2430, min: 0, max: 245, avg: 34.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2430
Number of successful refinements:     2430
Number of failed refinements:         0
Max. size of reached set before ref.: 17786
Max. size of reached set after ref.:  15884
Avg. size of reached set before ref.: 7929.64
Avg. size of reached set after ref.:  5870.83

Total time for CEGAR algorithm:     889.605s
Time for refinements:               148.175s
Average time for refinement:          0.060s
Max time for refinement:              0.512s

Code Coverage
-----------------------------
  Function coverage:      0.238
  Visited lines:          4017
  Total lines:            11906
  Line coverage:          0.337
  Visited conditions:     524
  Total conditions:       2088
  Condition coverage:     0.251

CPAchecker general statistics
-----------------------------
Number of program locations:     16601
Number of CFA edges:             19151
Number of relevant variables:    2019
Number of functions:             1103
Number of loops:                 29
Size of reached set:             11302
  Number of reached locations:   2634 (16%)
    Avg states per location:     4
    Max states per location:     282 (at node N14770)
  Number of reached functions:   262 (24%)
  Number of partitions:          11186
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1053 (before lines 11230-11233), Function ldv_file_operations_file_operations_instance_1 called from node N109, stack depth 4 [58bcfc4], stack [main, ldv_entry_EMGentry_12, ldv_dispatch_register_file_operations_instance_1_12_5, ldv_file_operations_file_operations_instance_1]])
  Number of target states:       0
  Size of final wait list        127

Time for analysis setup:         10.638s
  Time for loading CPAs:          1.457s
  Time for loading parser:        0.649s
  Time for CFA construction:      8.370s
    Time for parsing file(s):     1.545s
    Time for AST to CFA:          3.486s
    Time for CFA sanity check:    0.981s
    Time for post-processing:     2.213s
      Time for var class.:        0.953s
Time for Analysis:              889.606s
CPU time for analysis:          889.540s
Total time for CPAchecker:      900.248s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.381s

Time for Garbage Collector:      38.663s (in 1797 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                422MB (   402 MiB) max;    214MB (   204 MiB) avg;    434MB (   414 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     41MB (    39 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           436MB (   416 MiB) max;    309MB (   295 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8127MB (  7751 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
