scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---fs--nfs--nfsv2.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2bxe56pr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 10117: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10318: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10359: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11039: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 11040: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11229: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11270: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11950: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 11951: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12141: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12182: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12869: Dead code detected: goto ldv_call_10; (CFACreationUtils.addEdgeToCFA, INFO)

line 12870: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13060: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13101: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13788: Dead code detected: goto ldv_call_11; (CFACreationUtils.addEdgeToCFA, INFO)

line 13789: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13978: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14699: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14889: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14930: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15610: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 15611: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15800: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15841: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16521: Dead code detected: goto ldv_call_4; (CFACreationUtils.addEdgeToCFA, INFO)

line 16522: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16711: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 16752: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17432: Dead code detected: goto ldv_call_5; (CFACreationUtils.addEdgeToCFA, INFO)

line 17433: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17622: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17663: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18343: Dead code detected: goto ldv_call_6; (CFACreationUtils.addEdgeToCFA, INFO)

line 18344: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18533: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 18574: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 19254: Dead code detected: goto ldv_call_7; (CFACreationUtils.addEdgeToCFA, INFO)

line 19255: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 19444: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 19485: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20165: Dead code detected: goto ldv_call_8; (CFACreationUtils.addEdgeToCFA, INFO)

line 20166: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20355: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20396: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21076: Dead code detected: goto ldv_call_9; (CFACreationUtils.addEdgeToCFA, INFO)

line 21077: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 21087: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21099: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21111: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21123: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21135: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21147: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21159: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21171: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21183: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21195: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21207: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21219: Function pointer *arg0 with type int (*)(struct inode *, struct file *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21233: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21247: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21261: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21275: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21289: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21303: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21317: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21331: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21345: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21359: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21373: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21387: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34416: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34435: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function register_nfs_version to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10036: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function unregister_nfs_version to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10308: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___1 = ldv_xmalloc(40UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 21087: Ignoring call via function pointer ldv_file_operations_instance_probe_0_12::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21087: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10411: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___10 = ldv_xmalloc(56UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10383: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___8 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10385: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___9 = ldv_xmalloc(8UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function nfs_alloc_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22783: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_fattr_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rpc_call_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_instantiate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_create_server to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xdr_inline_decode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 30128: Return type of function __builtin_bswap32 is void, but result is used as type int: tmp = __builtin_bswap32(val); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_bswap32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_bswap32, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Extern function make_kuid(&init_user_ns, tmp___4) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function make_kgid(&init_user_ns, tmp___8) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xdr_reserve_space to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function from_kuid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function from_kgid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_permission to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rpc_call_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_invalidate_atime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_refresh_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_wb_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12756 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10471 (82%)
  Because of loop head:            1637 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         648 (5%)
  Times precision was empty:       4648 (36%)
  Times precision was {false}:     370 (3%)
  Times result was cached:         6062 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1676 (13%)
  Times result was 'false':        688 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2386
  BDD entailment checks:           1326
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          60
Number of abstraction locations:          220
Max number of predicates per location:    26
Avg number of predicates per location:    7
Total predicates per abstraction:         66473
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 32.49
Number of irrelevant predicates:          23669 (36%)
Number of preds handled by boolean abs:   11976 (18%)
  Total number of models for allsat:      1771
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.06

Time for post operator:                  2.079s
  Time for path formula creation:        1.966s
Time for strengthen operator:            0.111s
Time for prec operator:                  8.682s
  Time for abstraction:                  8.353s (Max:     0.029s, Count: 12756)
    Boolean abstraction:                 1.869s
    Solving time:                        1.137s (Max:     0.013s)
    Model enumeration time:              0.140s
    Time for BDD construction:           0.162s (Max:     0.009s)
Time for merge operator:                 0.043s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     1.277s

Number of path formula cache hits:   50290 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.742s

Total number of created targets for pointer analysis: 6
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *enum_nfs_stat is 2
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               1105
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5636 (count: 19023, min: 0, max: 777, avg: 0.30)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.433s
Automaton transfers with branching:                0
Automaton transfer successors:                        46874 (count: 46874, min: 1, max: 1, avg: 1.00) [1 x 46874]

CPA algorithm statistics
------------------------
Number of iterations:            32663
Max size of waitlist:            64
Average size of waitlist:        29
Number of computed successors:   35870
Max successors for one state:    2
Number of times merged:          530
Number of times stopped:         1650
Number of times breaked:         63

Total time for CPA algorithm:        15.281s (Max:     0.952s)
  Time for choose from waitlist:      0.116s
  Time for precision adjustment:      9.318s
  Time for transfer relation:         4.930s
  Time for merge operator:            0.109s
  Time for stop operator:             0.174s
  Time for adding to reached set:     0.254s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                7778 (count: 63, min: 31, max: 164, avg: 123.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.991s
  Counterexample analysis:                             3.401s (Max:     0.104s, Calls: 63)
    Refinement sat check:                              1.310s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.121s
  Precision update:                                    0.130s
  ARG update:                                          0.196s

Length of refined path (in blocks):                    7690 (count: 63, min: 31, max: 164, avg: 122.06)
Number of affected states:                             3506 (count: 63, min: 1, max: 155, avg: 55.65)
Length (states) of path with itp 'true':               4121 (count: 63, min: 0, max: 156, avg: 65.41)
Length (states) of path with itp non-trivial itp:      3506 (count: 63, min: 1, max: 155, avg: 55.65)
Length (states) of path with itp 'false':                 9 (count: 63, min: 0, max: 1, avg: 0.14)
Different non-trivial interpolants along paths:          62 (count: 63, min: 0, max: 3, avg: 0.98)
Equal non-trivial interpolants along paths:            3381 (count: 63, min: 0, max: 153, avg: 53.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 3483
Max. size of reached set after ref.:  3344
Avg. size of reached set before ref.: 1245.49
Avg. size of reached set after ref.:  714.62

Total time for CEGAR algorithm:      19.662s
Time for refinements:                 4.316s
Average time for refinement:          0.068s
Max time for refinement:              0.123s

Code Coverage
-----------------------------
  Function coverage:      0.015
  Visited lines:          1305
  Total lines:            11906
  Line coverage:          0.110
  Visited conditions:     4
  Total conditions:       2088
  Condition coverage:     0.002

CPAchecker general statistics
-----------------------------
Number of program locations:     16601
Number of CFA edges:             19151
Number of relevant variables:    2019
Number of functions:             1103
Number of loops:                 29
Size of reached set:             88
  Number of reached locations:   64 (0%)
    Avg states per location:     1
    Max states per location:     4 (at node N14769)
  Number of reached functions:   16 (1%)
  Number of partitions:          88
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:         10.601s
  Time for loading CPAs:          1.677s
  Time for loading parser:        0.737s
  Time for CFA construction:      8.034s
    Time for parsing file(s):     1.650s
    Time for AST to CFA:          3.283s
    Time for CFA sanity check:    0.746s
    Time for post-processing:     1.977s
      Time for var class.:        1.039s
Time for Analysis:               19.662s
CPU time for analysis:           19.660s
Total time for CPAchecker:       30.268s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.115s

Time for Garbage Collector:       0.943s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    87 MiB) max;     63MB (    60 MiB) avg;    103MB (    98 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     33MB (    32 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8068MB (  7694 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
