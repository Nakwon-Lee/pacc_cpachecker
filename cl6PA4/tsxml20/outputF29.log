scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--scsi--BusLogic.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yx5u6_3n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20346: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20567: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20592: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20667: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20700: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20724: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20747: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20750: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20752: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20911: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20946: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21067: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21080: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21110: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21155: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11304: Function pointer *phase with type void (*)(u32 , unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14565: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18886: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18749: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19321: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19130: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19111: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6323: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6363: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6173-6174: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6238: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6212: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20852: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20864: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function get_options to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 20367-20368: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Obsolete Command Line Entry Format Ignored\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vsprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18163: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Probe Info List\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 5861: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6363: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 18176-18177: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Prototype Host Adapter\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16357: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic: FlashPoint Host Adapter detected at\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16381: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(3, (char *)"BusLogic: Too many Host Adapters detected\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 16346-16347: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: IRQ Channel %d invalid for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, irq_ch) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16335-16336: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Base Address1 0x%X not Memory for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, base_addr1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16324-16325: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Base Address0 0x%X not I/O for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, base_addr0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16326-16327: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d I/O Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16337-16338: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d PCI Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16348-16349: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d I/O Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16358-16359: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic: PCI Bus %d Device %d I/O Address 0x%X PCI Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr, pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            210265 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  180673 (86%)
  Because of loop head:            14891 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14701 (7%)
  Times precision was empty:       13222 (6%)
  Times precision was {false}:     597 (0%)
  Times result was cached:         188663 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7783 (4%)
  Times result was 'false':        18248 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         104708
  BDD entailment checks:           20628
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          61
Number of abstraction locations:          260
Max number of predicates per location:    29
Avg number of predicates per location:    15
Total predicates per abstraction:         3272485
Max number of predicates per abstraction: 29
Avg number of predicates per abstraction: 390.51
Number of irrelevant predicates:          301588 (9%)
Number of preds handled by boolean abs:   86362 (3%)
  Total number of models for allsat:      7932
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 18.444s
  Time for path formula creation:       18.064s
Time for strengthen operator:            0.888s
Time for prec operator:                336.837s
  Time for abstraction:                334.150s (Max:     4.022s, Count: 210265)
    Boolean abstraction:               158.174s
    Solving time:                      164.134s (Max:     3.459s)
    Model enumeration time:             10.877s
    Time for BDD construction:           0.351s (Max:     0.012s)
Time for merge operator:                 2.475s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):   175.011s

Number of path formula cache hits:   1098700 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.181s

Total number of created targets for pointer analysis: 349313
   Number of created targets for uf: *unsigned_short_int is 1449
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *unsigned_char is 81349
   Number of created targets for uf: *(struct_pci_dev)* is 23
   Number of created targets for uf: *enum_blogic_adapter_bus_type is 93
   Number of created targets for uf: *_Bool is 625
   Number of created targets for uf: *unsigned_int is 241
   Number of created targets for uf: *enum_blogic_adapter_type is 5
   Number of created targets for uf: *unsigned_long_int is 189


Number of BDD nodes:                               4611
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       25860 (count: 88683, min: 0, max: 462, avg: 0.29)
Time for BDD node cleanup:                             0.035s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.712s
  Time for transition matches:                         0.793s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                       882962 (count: 882962, min: 1, max: 1, avg: 1.00) [1 x 882962]

CPA algorithm statistics
------------------------
Number of iterations:            632066
Max size of waitlist:            20
Average size of waitlist:        7
Number of computed successors:   707735
Max successors for one state:    2
Number of times merged:          42040
Number of times stopped:         54155
Number of times breaked:         335

Total time for CPA algorithm:       382.995s (Max:    18.612s)
  Time for choose from waitlist:      0.304s
  Time for precision adjustment:    341.349s
  Time for transfer relation:        34.384s
  Time for merge operator:            3.049s
  Time for stop operator:             0.911s
  Time for adding to reached set:     1.150s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   335
Avg. length of target path (in blocks):               43683 (count: 335, min: 17, max: 213, avg: 130.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 507.778s
  Counterexample analysis:                           505.459s (Max:     7.696s, Calls: 335)
    Refinement sat check:                            468.909s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.301s
  Precision update:                                    0.747s
  ARG update:                                          0.969s

Length of refined path (in blocks):                   43098 (count: 334, min: 10, max: 213, avg: 129.04)
Number of affected states:                            42535 (count: 334, min: 1, max: 212, avg: 127.35)
Length (states) of path with itp 'true':                229 (count: 334, min: 0, max: 68, avg: 0.69)
Length (states) of path with itp non-trivial itp:     42535 (count: 334, min: 1, max: 212, avg: 127.35)
Length (states) of path with itp 'false':                24 (count: 334, min: 0, max: 1, avg: 0.07)
Different non-trivial interpolants along paths:         328 (count: 334, min: 0, max: 3, avg: 0.98)
Equal non-trivial interpolants along paths:           41873 (count: 334, min: 0, max: 210, avg: 125.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                335
Number of successful refinements:     334
Number of failed refinements:         0
Max. size of reached set before ref.: 4273
Max. size of reached set after ref.:  2115
Avg. size of reached set before ref.: 1910.69
Avg. size of reached set after ref.:  14.22

Total time for CEGAR algorithm:     891.505s
Time for refinements:               508.497s
Average time for refinement:          1.517s
Max time for refinement:              7.705s

Code Coverage
-----------------------------
  Function coverage:      0.164
  Visited lines:          1615
  Total lines:            10187
  Line coverage:          0.159
  Visited conditions:     176
  Total conditions:       3350
  Condition coverage:     0.053

CPAchecker general statistics
-----------------------------
Number of program locations:     15218
Number of CFA edges:             18275
Number of relevant variables:    2294
Number of functions:             590
Number of loops:                 222
Size of reached set:             2783
  Number of reached locations:   755 (5%)
    Avg states per location:     3
    Max states per location:     48 (at node N13516)
  Number of reached functions:   97 (16%)
  Number of partitions:          2764
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N13565 (before line 23425), Function ldv_zalloc called from node N13146, stack depth 7 [1702cf14], stack [main, ldv_entry_EMGentry_7, ldv_EMGentry_init_blogic_init_7_7, blogic_init, kzalloc, ldv_kzalloc, ldv_zalloc]])
  Number of target states:       1
  Size of final wait list        8

Time for analysis setup:          9.014s
  Time for loading CPAs:          1.143s
  Time for loading parser:        0.754s
  Time for CFA construction:      6.948s
    Time for parsing file(s):     1.346s
    Time for AST to CFA:          2.734s
    Time for CFA sanity check:    0.678s
    Time for post-processing:     1.906s
      Time for var class.:        1.113s
Time for Analysis:              891.505s
CPU time for analysis:          891.390s
Total time for CPAchecker:      900.535s
Total CPU time for CPAchecker:  900.400s
Time for statistics:              0.219s

Time for Garbage Collector:       9.971s (in 1560 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                128MB (   122 MiB) max;     79MB (    76 MiB) avg;    134MB (   128 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           134MB (   128 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8824MB (  8415 MiB) max;   8549MB (  8153 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
