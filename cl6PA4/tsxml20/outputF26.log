scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--scsi--BusLogic.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9btxogin/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20346: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20567: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20592: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20667: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20700: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20724: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20747: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20750: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20752: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20911: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20946: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21067: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21080: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21110: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21155: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11304: Function pointer *phase with type void (*)(u32 , unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14565: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18886: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18749: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19321: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19130: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19111: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6323: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6363: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6173-6174: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6238: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6212: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20852: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20864: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18163: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Probe Info List\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vsprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5861: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6363: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 18176-18177: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Prototype Host Adapter\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16357: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic: FlashPoint Host Adapter detected at\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16381: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(3, (char *)"BusLogic: Too many Host Adapters detected\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 16346-16347: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: IRQ Channel %d invalid for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, irq_ch) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16335-16336: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Base Address1 0x%X not Memory for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, base_addr1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16324-16325: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Base Address0 0x%X not I/O for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, base_addr0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16326-16327: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d I/O Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16337-16338: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d PCI Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16348-16349: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d I/O Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16358-16359: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic: PCI Bus %d Device %d I/O Address 0x%X PCI Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr, pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16541: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic_Probe(0x%X): FlashPoint Found\n", adapter, adapter->io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16529-16530: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: FlashPoint Host Adapter detected at PCI Bus %d Device %d\n", adapter, __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 15238-15239: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(0, (char *)"***** BusLogic SCSI Driver Version 2.1.17 of 12 September 2013 *****\n", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 15240-15241: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(0, (char *)"Copyright 1995-1998 by Leonard N. Zubkoff <lnz@dandelion.com>\n", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 17406-17409: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"Configuring BusLogic Model %s %s%s%s%s SCSI Host Adapter\n", adapter, (unsigned char *)(&(adapter->model)), blogic_adapter_busnames[__CPAchecker_TMP_1], __CPAchecker_TMP_3, __CPAchecker_TMP_5, __CPAchecker_TMP_7) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17410-17412: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  Firmware Version: %s, I/O Address: 0x%X, IRQ Channel: %d/%s\n", adapter, (unsigned char *)(&(adapter->fw_ver)), adapter->io_addr, __CPAchecker_TMP_11, __CPAchecker_TMP_13) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17438-17439: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  PCI Bus: %d, Device: %d, Address: ", adapter, __CPAchecker_TMP_18, __CPAchecker_TMP_19) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17416: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  DMA Channel: ", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17424: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"None, ", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17420: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"%d, ", adapter, __CPAchecker_TMP_17) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17433: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"BIOS Address: None, ", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17429: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"BIOS Address: 0x%X, ", adapter, adapter->bios_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17452: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"Host Adapter SCSI ID: %d\n", adapter, __CPAchecker_TMP_20) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17453-17454: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  Parity Checking: %s, Extended Translation: %s\n", adapter, __CPAchecker_TMP_22, __CPAchecker_TMP_24) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17572-17573: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  Synchronous Negotiation: %s, Wide Negotiation: %s\n", adapter, syncmsg, widemsg) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17574-17575: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  Disconnect/Reconnect: %s, Tagged Queuing: %s\n", adapter, discon_msg, tagq_msg) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17587-17588: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  Driver Queue Depth: %d, Scatter/Gather Limit: %d segments\n", adapter, __CPAchecker_TMP_62, __CPAchecker_TMP_63) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17579-17581: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  Scatter/Gather Limit: %d of %d segments, Mailboxes: %d\n", adapter, __CPAchecker_TMP_57, __CPAchecker_TMP_58, __CPAchecker_TMP_59) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17582-17583: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  Driver Queue Depth: %d, Host Adapter Queue Depth: %d\n", adapter, __CPAchecker_TMP_60, __CPAchecker_TMP_61) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17592: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  Tagged Queue Depth: ", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17619: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"Automatic", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17615: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"%d", adapter, (int)((adapter->qdepth)[0])) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17624: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"Individual", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17628: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)", Untagged Queue Depth: %d\n", adapter, __CPAchecker_TMP_65) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17633: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  SCSI Bus Termination: %s", adapter, __CPAchecker_TMP_69) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17637: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"  SCSI Bus Termination: %s", adapter, __CPAchecker_TMP_78) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17664: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"NO LEGAL INTERRUPT CHANNEL ASSIGNED - DETACHING\n", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 15313: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"UNABLE TO ALLOCATE CCB GROUP - DETACHING\n", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6323: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17857: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(3, (char *)"*** %s Initialized Successfully ***\n", adapter, (unsigned char *)(&(adapter->full_model))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17852: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"*** %s Initialized Successfully ***\n", adapter, (unsigned char *)(&(adapter->full_model))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17853: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(1, (char *)"\n", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 20864: Ignoring call via function pointer ldv_scsi_host_template_instance_release_1_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 20864: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 21008: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___4 = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function scsi_change_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15428: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"Failed to allocate additional CCBs\n", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 15417-15418: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"Allocated %d additional CCBs (total now %d)\n", adapter, __CPAchecker_TMP_3 - prev_alloc, __CPAchecker_TMP_4) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 21023: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___5 = ldv_xmalloc(256UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function seq_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_puts to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 16531-16532: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: I/O Address 0x%X PCI Address 0x%X, but FlashPoint\n", adapter, adapter->io_addr, adapter->pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16533: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Probe Function failed to validate it.\n", adapter) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function get_options to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 20367-20368: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Obsolete Command Line Entry Format Ignored\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            190941 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  168810 (88%)
  Because of loop head:            11712 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10419 (5%)
  Times precision was empty:       10312 (5%)
  Times precision was {false}:     659 (0%)
  Times result was cached:         169539 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10431 (5%)
  Times result was 'false':        13128 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         85153
  BDD entailment checks:           16821
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       72
Number of predicates discovered:          60
Number of abstraction locations:          249
Max number of predicates per location:    25
Avg number of predicates per location:    14
Total predicates per abstraction:         2630310
Max number of predicates per abstraction: 25
Avg number of predicates per abstraction: 237.18
Number of irrelevant predicates:          282825 (11%)
Number of preds handled by boolean abs:   114759 (4%)
  Total number of models for allsat:      10313
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                 67.196s
  Time for path formula creation:       66.745s
Time for strengthen operator:            0.842s
Time for prec operator:                149.096s
  Time for abstraction:                146.518s (Max:     1.436s, Count: 190941)
    Boolean abstraction:                37.044s
    Solving time:                       34.597s (Max:     1.087s)
    Model enumeration time:              2.799s
    Time for BDD construction:           0.341s (Max:     0.008s)
Time for merge operator:                 4.469s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.068s
Total time for SMT solver (w/o itp):    37.396s

Number of path formula cache hits:   903059 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    62.841s

Total number of created targets for pointer analysis: 1555773
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *(struct_blogic_ccb)* is 113
   Number of created targets for uf: *(struct_sccb)* is 849
   Number of created targets for uf: *(struct_pci_dev)* is 11
   Number of created targets for uf: *(unsigned_char)* is 85
   Number of created targets for uf: *(struct_Scsi_Host)* is 10
   Number of created targets for uf: *enum_blogic_adapter_bus_type is 36
   Number of created targets for uf: *unsigned_long_int is 85
   Number of created targets for uf: *unsigned_short_int is 941
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 13607
   Number of created targets for uf: *_Bool is 367
   Number of created targets for uf: *unsigned_long_long_int is 45
   Number of created targets for uf: *(struct_blogic_drvr_options)* is 5
   Number of created targets for uf: *unsigned_int is 36541
   Number of created targets for uf: *enum_blogic_adapter_type is 6
   Number of created targets for uf: *char is 12241


Number of BDD nodes:                               5617
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       31446 (count: 98146, min: 0, max: 487, avg: 0.32)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.656s
  Time for transition matches:                         0.777s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                       791363 (count: 791363, min: 1, max: 1, avg: 1.00) [1 x 791363]

CPA algorithm statistics
------------------------
Number of iterations:            572254
Max size of waitlist:            67
Average size of waitlist:        11
Number of computed successors:   633313
Max successors for one state:    2
Number of times merged:          34166
Number of times stopped:         45075
Number of times breaked:         289

Total time for CPA algorithm:       248.531s (Max:    12.793s)
  Time for choose from waitlist:      0.324s
  Time for precision adjustment:    153.229s
  Time for transfer relation:        86.193s
  Time for merge operator:            5.073s
  Time for stop operator:             0.831s
  Time for adding to reached set:     1.008s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   289
Avg. length of target path (in blocks):               36744 (count: 289, min: 17, max: 411, avg: 127.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 641.791s
  Counterexample analysis:                           639.759s (Max:    55.056s, Calls: 289)
    Refinement sat check:                            600.972s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.249s
  Precision update:                                    0.494s
  ARG update:                                          0.972s

Length of refined path (in blocks):                   32870 (count: 288, min: 10, max: 207, avg: 114.13)
Number of affected states:                            30976 (count: 288, min: 1, max: 206, avg: 107.56)
Length (states) of path with itp 'true':               1606 (count: 288, min: 0, max: 91, avg: 5.58)
Length (states) of path with itp non-trivial itp:     30976 (count: 288, min: 1, max: 206, avg: 107.56)
Length (states) of path with itp 'false':                55 (count: 288, min: 0, max: 1, avg: 0.19)
Different non-trivial interpolants along paths:         375 (count: 288, min: 0, max: 3, avg: 1.30)
Equal non-trivial interpolants along paths:           30313 (count: 288, min: 0, max: 204, avg: 105.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                289
Number of successful refinements:     288
Number of failed refinements:         0
Max. size of reached set before ref.: 8734
Max. size of reached set after ref.:  3580
Avg. size of reached set before ref.: 2067.21
Avg. size of reached set after ref.:  77.48

Total time for CEGAR algorithm:     891.126s
Time for refinements:               642.567s
Average time for refinement:          2.223s
Max time for refinement:             55.083s

Code Coverage
-----------------------------
  Function coverage:      0.286
  Visited lines:          2972
  Total lines:            10187
  Line coverage:          0.292
  Visited conditions:     550
  Total conditions:       3350
  Condition coverage:     0.164

CPAchecker general statistics
-----------------------------
Number of program locations:     15218
Number of CFA edges:             18275
Number of relevant variables:    2294
Number of functions:             590
Number of loops:                 222
Size of reached set:             8734
  Number of reached locations:   2051 (13%)
    Avg states per location:     4
    Max states per location:     186 (at node N13516)
  Number of reached functions:   169 (29%)
  Number of partitions:          8703
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N11881 (before line 20485), Function ldv_EMGentry_init_blogic_init_7_7 called from node N11920, stack depth 3 [64eb653f], stack [main, ldv_entry_EMGentry_7, ldv_EMGentry_init_blogic_init_7_7]])
  Number of target states:       1
  Size of final wait list        57

Time for analysis setup:          9.989s
  Time for loading CPAs:          1.216s
  Time for loading parser:        0.810s
  Time for CFA construction:      7.832s
    Time for parsing file(s):     1.519s
    Time for AST to CFA:          3.142s
    Time for CFA sanity check:    0.913s
    Time for post-processing:     2.111s
      Time for var class.:        1.045s
Time for Analysis:              891.126s
CPU time for analysis:          891.000s
Total time for CPAchecker:      901.119s
Total CPU time for CPAchecker:  900.970s
Time for statistics:              0.299s

Time for Garbage Collector:       6.487s (in 1157 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                135MB (   129 MiB) max;     84MB (    80 MiB) avg;    139MB (   133 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           163MB (   156 MiB) max;    135MB (   129 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9597MB (  9152 MiB) max;   8714MB (  8310 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
