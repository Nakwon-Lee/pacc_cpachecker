scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--scsi--BusLogic.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ojnp_yrv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20346: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20567: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20592: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20667: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20700: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20724: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20747: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20750: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20752: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20911: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20946: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21067: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21080: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21110: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21155: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11304: Function pointer *phase with type void (*)(u32 , unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14565: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18886: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18749: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19321: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19130: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19111: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6323: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6363: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6173-6174: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6238: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6212: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20852: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20864: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function get_options to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 20367-20368: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Obsolete Command Line Entry Format Ignored\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 20310-20311: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (all or no I/O Addresses must be specified)\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vsprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 19975-19976: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (invalid I/O Address 0x%X)\n", (struct blogic_adapter *)0, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20294-20295: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unexpected Driver Option \'%s\' ignored\n", (struct blogic_adapter *)0, options) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20054-20055: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (\',\' or \']\' expected at \'%s\')\n", (struct blogic_adapter *)0, options) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20069-20070: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (\']\' expected at \'%s\')\n", (struct blogic_adapter *)0, options) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20039-20040: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (invalid Queue Depth %d)\n", (struct blogic_adapter *)0, (int)qdepth) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20095-20096: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (invalid Queue Depth %d)\n", (struct blogic_adapter *)0, (int)qdepth___0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20219-20220: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (invalid Bus Settle Time %d)\n", (struct blogic_adapter *)0, (int)bus_settle_time) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18163: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Probe Info List\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            659 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  465 (71%)
  Because of loop head:            184 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (2%)
  Times precision was empty:       538 (82%)
  Times precision was {false}:     25 (4%)
  Times result was cached:         50 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      46 (7%)
  Times result was 'false':        11 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1941
  BDD entailment checks:           179
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          11
Number of abstraction locations:          27
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         223
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 3.14
Number of irrelevant predicates:          71 (32%)
Number of preds handled by boolean abs:   78 (35%)
  Total number of models for allsat:      54
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.17

Time for post operator:                  5.658s
  Time for path formula creation:        5.605s
Time for strengthen operator:            0.068s
Time for prec operator:                  5.798s
  Time for abstraction:                  5.678s (Max:     1.495s, Count: 659)
    Boolean abstraction:                 4.645s
    Solving time:                        4.316s (Max:     1.098s)
    Model enumeration time:              0.308s
    Time for BDD construction:           0.007s (Max:     0.001s)
Time for merge operator:                 0.347s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     4.624s

Number of path formula cache hits:   5075 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.495s

Total number of created targets for pointer analysis: 28038
   Number of created targets for uf: *unsigned_short_int is 73
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(char)* is 24
   Number of created targets for uf: *unsigned_char is 6729
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               211
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          51 (count: 1163, min: 0, max: 33, avg: 0.04)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.148s
Automaton transfers with branching:                0
Automaton transfer successors:                         9800 (count: 9800, min: 1, max: 1, avg: 1.00) [1 x 9800]

CPA algorithm statistics
------------------------
Number of iterations:            4712
Max size of waitlist:            16
Average size of waitlist:        9
Number of computed successors:   5810
Max successors for one state:    2
Number of times merged:          881
Number of times stopped:         1056
Number of times breaked:         6

Total time for CPA algorithm:        13.492s (Max:     6.958s)
  Time for choose from waitlist:      0.028s
  Time for precision adjustment:      6.029s
  Time for transfer relation:         6.598s
  Time for merge operator:            0.462s
  Time for stop operator:             0.148s
  Time for adding to reached set:     0.098s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 168 (count: 6, min: 17, max: 43, avg: 28.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.994s
  Counterexample analysis:                             6.907s (Max:     1.678s, Calls: 6)
    Refinement sat check:                              6.642s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.001s
  ARG update:                                          0.064s

Length of refined path (in blocks):                      87 (count: 5, min: 10, max: 30, avg: 17.40)
Number of affected states:                               57 (count: 5, min: 4, max: 19, avg: 11.40)
Length (states) of path with itp 'true':                 25 (count: 5, min: 0, max: 25, avg: 5.00)
Length (states) of path with itp non-trivial itp:        57 (count: 5, min: 4, max: 19, avg: 11.40)
Length (states) of path with itp 'false':                 4 (count: 5, min: 0, max: 1, avg: 0.80)
Different non-trivial interpolants along paths:           5 (count: 5, min: 0, max: 3, avg: 1.00)
Equal non-trivial interpolants along paths:              47 (count: 5, min: 0, max: 18, avg: 9.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 2083
Max. size of reached set after ref.:  110
Avg. size of reached set before ref.: 811.00
Avg. size of reached set after ref.:  24.40

Total time for CEGAR algorithm:      20.552s
Time for refinements:                 7.060s
Average time for refinement:          1.176s
Max time for refinement:              1.780s

Code Coverage
-----------------------------
  Function coverage:      0.032
  Visited lines:          1079
  Total lines:            10187
  Line coverage:          0.106
  Visited conditions:     42
  Total conditions:       3350
  Condition coverage:     0.013

CPAchecker general statistics
-----------------------------
Number of program locations:     15218
Number of CFA edges:             18275
Number of relevant variables:    2294
Number of functions:             590
Number of loops:                 222
Size of reached set:             231
  Number of reached locations:   143 (1%)
    Avg states per location:     1
    Max states per location:     3 (at node N13502)
  Number of reached functions:   19 (3%)
  Number of partitions:          227
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N13565 (before line 23425), Function ldv_zalloc called from node N13146, stack depth 7 [49a0fe14], stack [main, ldv_entry_EMGentry_7, ldv_EMGentry_init_blogic_init_7_7, blogic_init, kzalloc, ldv_kzalloc, ldv_zalloc]])
  Number of target states:       1
  Size of final wait list        6

Time for analysis setup:          9.749s
  Time for loading CPAs:          1.253s
  Time for loading parser:        0.736s
  Time for CFA construction:      7.632s
    Time for parsing file(s):     1.503s
    Time for AST to CFA:          2.941s
    Time for CFA sanity check:    0.885s
    Time for post-processing:     2.169s
      Time for var class.:        1.111s
Time for Analysis:               20.552s
CPU time for analysis:           20.550s
Total time for CPAchecker:       30.307s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.127s

Time for Garbage Collector:       0.643s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     59MB (    57 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     33MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8155MB (  7778 MiB) max;   8096MB (  7721 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
