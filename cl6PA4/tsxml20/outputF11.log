scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--scsi--BusLogic.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7oepddz1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20346: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20567: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20592: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20667: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20700: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20724: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20747: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20750: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20752: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20911: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20946: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21067: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21080: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21110: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21155: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11304: Function pointer *phase with type void (*)(u32 , unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14565: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18886: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18749: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19321: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19130: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19111: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6323: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6363: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6173-6174: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6238: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6212: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20852: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20864: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18163: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Probe Info List\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vsprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5861: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6363: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 18176-18177: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Prototype Host Adapter\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16357: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic: FlashPoint Host Adapter detected at\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16381: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(3, (char *)"BusLogic: Too many Host Adapters detected\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 16346-16347: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: IRQ Channel %d invalid for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, irq_ch) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16335-16336: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Base Address1 0x%X not Memory for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, base_addr1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16324-16325: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Base Address0 0x%X not I/O for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, base_addr0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16326-16327: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d I/O Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16337-16338: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d PCI Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16348-16349: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d I/O Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16358-16359: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic: PCI Bus %d Device %d I/O Address 0x%X PCI Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr, pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_options to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 20367-20368: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Obsolete Command Line Entry Format Ignored\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            247327 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  217854 (88%)
  Because of loop head:            16152 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13321 (5%)
  Times precision was empty:       9668 (4%)
  Times precision was {false}:     560 (0%)
  Times result was cached:         226255 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10844 (4%)
  Times result was 'false':        17014 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         116302
  BDD entailment checks:           23694
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          58
Number of abstraction locations:          258
Max number of predicates per location:    26
Avg number of predicates per location:    14
Total predicates per abstraction:         3659266
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 320.88
Number of irrelevant predicates:          223101 (6%)
Number of preds handled by boolean abs:   118037 (3%)
  Total number of models for allsat:      10726
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                 27.805s
  Time for path formula creation:       27.371s
Time for strengthen operator:            0.863s
Time for prec operator:                323.700s
  Time for abstraction:                320.433s (Max:     4.014s, Count: 247327)
    Boolean abstraction:               121.995s
    Solving time:                      140.269s (Max:     3.409s)
    Model enumeration time:             10.623s
    Time for BDD construction:           0.371s (Max:     0.010s)
Time for merge operator:                 3.198s
Time for coverage check:                 0.090s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):   150.892s

Number of path formula cache hits:   1283799 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.008s

Total number of created targets for pointer analysis: 540854
   Number of created targets for uf: *unsigned_short_int is 2102
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 142399
   Number of created targets for uf: *(struct_pci_dev)* is 26
   Number of created targets for uf: *enum_blogic_adapter_bus_type is 117
   Number of created targets for uf: *_Bool is 1015
   Number of created targets for uf: *unsigned_int is 505
   Number of created targets for uf: *enum_blogic_adapter_type is 21
   Number of created targets for uf: *unsigned_long_int is 249


Number of BDD nodes:                               6207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       33716 (count: 107250, min: 0, max: 547, avg: 0.31)
Time for BDD node cleanup:                             0.043s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.015s
  Time for transition matches:                         0.989s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.036s
Automaton transfers with branching:                0
Automaton transfer successors:                      1036795 (count: 1036795, min: 1, max: 1, avg: 1.00) [1 x 1036795]

CPA algorithm statistics
------------------------
Number of iterations:            745287
Max size of waitlist:            22
Average size of waitlist:        8
Number of computed successors:   826673
Max successors for one state:    2
Number of times merged:          46304
Number of times stopped:         61134
Number of times breaked:         348

Total time for CPA algorithm:       389.777s (Max:    14.998s)
  Time for choose from waitlist:      0.374s
  Time for precision adjustment:    328.929s
  Time for transfer relation:        51.910s
  Time for merge operator:            3.876s
  Time for stop operator:             1.030s
  Time for adding to reached set:     1.383s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   348
Avg. length of target path (in blocks):               41183 (count: 348, min: 17, max: 207, avg: 118.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 500.669s
  Counterexample analysis:                           498.273s (Max:     7.507s, Calls: 348)
    Refinement sat check:                            463.420s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.261s
  Precision update:                                    0.670s
  ARG update:                                          1.168s

Length of refined path (in blocks):                   36779 (count: 347, min: 10, max: 207, avg: 105.99)
Number of affected states:                            34409 (count: 347, min: 1, max: 206, avg: 99.16)
Length (states) of path with itp 'true':               2023 (count: 347, min: 0, max: 62, avg: 5.83)
Length (states) of path with itp non-trivial itp:     34409 (count: 347, min: 1, max: 206, avg: 99.16)
Length (states) of path with itp 'false':                85 (count: 347, min: 0, max: 1, avg: 0.24)
Different non-trivial interpolants along paths:         491 (count: 347, min: 0, max: 3, avg: 1.41)
Equal non-trivial interpolants along paths:           33571 (count: 347, min: 0, max: 204, avg: 96.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                348
Number of successful refinements:     347
Number of failed refinements:         0
Max. size of reached set before ref.: 3929
Max. size of reached set after ref.:  2797
Avg. size of reached set before ref.: 2183.57
Avg. size of reached set after ref.:  32.72

Total time for CEGAR algorithm:     891.249s
Time for refinements:               501.410s
Average time for refinement:          1.440s
Max time for refinement:              7.516s

Code Coverage
-----------------------------
  Function coverage:      0.166
  Visited lines:          1608
  Total lines:            10187
  Line coverage:          0.158
  Visited conditions:     174
  Total conditions:       3350
  Condition coverage:     0.052

CPAchecker general statistics
-----------------------------
Number of program locations:     15218
Number of CFA edges:             18275
Number of relevant variables:    2294
Number of functions:             590
Number of loops:                 222
Size of reached set:             3352
  Number of reached locations:   749 (5%)
    Avg states per location:     4
    Max states per location:     72 (at node N13516)
  Number of reached functions:   98 (17%)
  Number of partitions:          3325
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N11881 (before line 20485), Function ldv_EMGentry_init_blogic_init_7_7 called from node N11920, stack depth 3 [2e833e1e], stack [main, ldv_entry_EMGentry_7, ldv_EMGentry_init_blogic_init_7_7]])
  Number of target states:       1
  Size of final wait list        13

Time for analysis setup:         10.269s
  Time for loading CPAs:          1.444s
  Time for loading parser:        0.635s
  Time for CFA construction:      8.015s
    Time for parsing file(s):     1.673s
    Time for AST to CFA:          3.148s
    Time for CFA sanity check:    0.935s
    Time for post-processing:     2.164s
      Time for var class.:        1.125s
Time for Analysis:              891.249s
CPU time for analysis:          891.120s
Total time for CPAchecker:      901.522s
Total CPU time for CPAchecker:  901.360s
Time for statistics:              0.233s

Time for Garbage Collector:      10.134s (in 1579 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                145MB (   138 MiB) max;     80MB (    77 MiB) avg;    148MB (   141 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           148MB (   141 MiB) max;    133MB (   126 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8894MB (  8482 MiB) max;   8565MB (  8168 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
