scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--scsi--BusLogic.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_80vcmy5l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20346: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20567: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20592: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20667: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20700: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20724: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20747: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20750: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20752: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20911: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20946: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21067: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21080: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21110: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21155: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11304: Function pointer *phase with type void (*)(u32 , unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14565: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18886: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18749: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19321: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19130: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19111: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6323: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6363: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6173-6174: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6238: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6212: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20852: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20864: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function get_options to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 20367-20368: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Obsolete Command Line Entry Format Ignored\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vsprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 20310-20311: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (all or no I/O Addresses must be specified)\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 19975-19976: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (invalid I/O Address 0x%X)\n", (struct blogic_adapter *)0, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20294-20295: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unexpected Driver Option \'%s\' ignored\n", (struct blogic_adapter *)0, options) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18163: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Probe Info List\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            523 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  442 (85%)
  Because of loop head:            66 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (3%)
  Times precision was empty:       276 (53%)
  Times precision was {false}:     33 (6%)
  Times result was cached:         94 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      120 (23%)
  Times result was 'false':        22 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         468
  BDD entailment checks:           56
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          13
Number of abstraction locations:          57
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         538
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 3.52
Number of irrelevant predicates:          137 (25%)
Number of preds handled by boolean abs:   236 (44%)
  Total number of models for allsat:      132
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  3.748s
  Time for path formula creation:        3.723s
Time for strengthen operator:            0.011s
Time for prec operator:                  7.105s
  Time for abstraction:                  7.056s (Max:     1.496s, Count: 523)
    Boolean abstraction:                 5.598s
    Solving time:                        5.222s (Max:     1.122s)
    Model enumeration time:              0.343s
    Time for BDD construction:           0.040s (Max:     0.011s)
Time for merge operator:                 0.097s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     5.565s

Number of path formula cache hits:   2265 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.649s

Total number of created targets for pointer analysis: 169
   Number of created targets for uf: *unsigned_short_int is 73
   Number of created targets for uf: *(char)* is 3
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               257
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         161 (count: 1298, min: 0, max: 68, avg: 0.12)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.079s
Automaton transfers with branching:                0
Automaton transfer successors:                         4601 (count: 4601, min: 1, max: 1, avg: 1.00) [1 x 4601]

CPA algorithm statistics
------------------------
Number of iterations:            1881
Max size of waitlist:            11
Average size of waitlist:        4
Number of computed successors:   2186
Max successors for one state:    2
Number of times merged:          206
Number of times stopped:         250
Number of times breaked:         8

Total time for CPA algorithm:        11.807s (Max:     3.852s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      7.267s
  Time for transfer relation:         4.207s
  Time for merge operator:            0.152s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.055s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 268 (count: 8, min: 17, max: 53, avg: 33.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.593s
  Counterexample analysis:                             8.516s (Max:     1.159s, Calls: 8)
    Refinement sat check:                              8.129s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.005s
  ARG update:                                          0.035s

Length of refined path (in blocks):                     229 (count: 8, min: 10, max: 53, avg: 28.63)
Number of affected states:                              177 (count: 8, min: 4, max: 52, avg: 22.13)
Length (states) of path with itp 'true':                 44 (count: 8, min: 0, max: 25, avg: 5.50)
Length (states) of path with itp non-trivial itp:       177 (count: 8, min: 4, max: 52, avg: 22.13)
Length (states) of path with itp 'false':                 5 (count: 8, min: 0, max: 1, avg: 0.63)
Different non-trivial interpolants along paths:           8 (count: 8, min: 0, max: 3, avg: 1.00)
Equal non-trivial interpolants along paths:             161 (count: 8, min: 0, max: 50, avg: 20.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 391
Max. size of reached set after ref.:  110
Avg. size of reached set before ref.: 260.00
Avg. size of reached set after ref.:  25.25

Total time for CEGAR algorithm:      20.470s
Time for refinements:                 8.662s
Average time for refinement:          1.082s
Max time for refinement:              1.172s

Code Coverage
-----------------------------
  Function coverage:      0.015
  Visited lines:          1003
  Total lines:            10187
  Line coverage:          0.098
  Visited conditions:     6
  Total conditions:       3350
  Condition coverage:     0.002

CPAchecker general statistics
-----------------------------
Number of program locations:     15218
Number of CFA edges:             18275
Number of relevant variables:    2294
Number of functions:             590
Number of loops:                 222
Size of reached set:             36
  Number of reached locations:   36 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N9959)
  Number of reached functions:   9 (2%)
  Number of partitions:          36
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          9.777s
  Time for loading CPAs:          1.296s
  Time for loading parser:        0.703s
  Time for CFA construction:      7.613s
    Time for parsing file(s):     1.418s
    Time for AST to CFA:          3.027s
    Time for CFA sanity check:    0.891s
    Time for post-processing:     2.176s
      Time for var class.:        1.151s
Time for Analysis:               20.470s
CPU time for analysis:           20.480s
Total time for CPAchecker:       30.251s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.118s

Time for Garbage Collector:       0.615s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 95MB (    91 MiB) max;     67MB (    64 MiB) avg;    101MB (    96 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     37MB (    35 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8101MB (  7726 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
