scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--scsi--BusLogic.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__fclm_hd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20346: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20567: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20592: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20667: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20700: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20724: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20747: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20750: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20752: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20911: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20946: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21067: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21080: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21110: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21155: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11304: Function pointer *phase with type void (*)(u32 , unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14565: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18886: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18749: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19321: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19130: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19111: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6323: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6363: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6173-6174: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6238: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6212: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20852: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20864: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18163: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Probe Info List\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vsprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            442 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  382 (86%)
  Because of loop head:            38 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (5%)
  Times precision was empty:       145 (33%)
  Times precision was {false}:     19 (4%)
  Times result was cached:         68 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      210 (48%)
  Times result was 'false':        21 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         165
  BDD entailment checks:           19
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          15
Number of abstraction locations:          71
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         812
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 3.55
Number of irrelevant predicates:          71 (9%)
Number of preds handled by boolean abs:   556 (68%)
  Total number of models for allsat:      205
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                  3.174s
  Time for path formula creation:        3.142s
Time for strengthen operator:            0.022s
Time for prec operator:                  9.112s
  Time for abstraction:                  9.065s (Max:     1.424s, Count: 442)
    Boolean abstraction:                 7.535s
    Solving time:                        7.049s (Max:     1.034s)
    Model enumeration time:              0.417s
    Time for BDD construction:           0.025s (Max:     0.007s)
Time for merge operator:                 0.023s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     7.467s

Number of path formula cache hits:   1759 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.098s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         567 (count: 1600, min: 0, max: 260, avg: 0.35)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.074s
Automaton transfers with branching:                0
Automaton transfer successors:                         3383 (count: 3383, min: 1, max: 1, avg: 1.00) [1 x 3383]

CPA algorithm statistics
------------------------
Number of iterations:            1192
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   1341
Max successors for one state:    2
Number of times merged:          73
Number of times stopped:         92
Number of times breaked:         7

Total time for CPA algorithm:        12.937s (Max:     3.312s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      9.208s
  Time for transfer relation:         3.562s
  Time for merge operator:            0.030s
  Time for stop operator:             0.029s
  Time for adding to reached set:     0.042s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 353 (count: 7, min: 17, max: 69, avg: 50.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.528s
  Counterexample analysis:                             7.463s (Max:     1.130s, Calls: 7)
    Refinement sat check:                              7.063s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.005s
  ARG update:                                          0.034s

Length of refined path (in blocks):                     332 (count: 7, min: 10, max: 69, avg: 47.43)
Number of affected states:                              325 (count: 7, min: 9, max: 68, avg: 46.43)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       325 (count: 7, min: 9, max: 68, avg: 46.43)
Length (states) of path with itp 'false':                 1 (count: 7, min: 0, max: 1, avg: 0.14)
Different non-trivial interpolants along paths:           7 (count: 7, min: 0, max: 2, avg: 1.00)
Equal non-trivial interpolants along paths:             311 (count: 7, min: 8, max: 66, avg: 44.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 241
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 178.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      20.495s
Time for refinements:                 7.558s
Average time for refinement:          1.079s
Max time for refinement:              1.149s

Code Coverage
-----------------------------
  Function coverage:      0.002
  Visited lines:          950
  Total lines:            10187
  Line coverage:          0.093
  Visited conditions:     0
  Total conditions:       3350
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     15218
Number of CFA edges:             18275
Number of relevant variables:    2294
Number of functions:             590
Number of loops:                 222
Size of reached set:             3
  Number of reached locations:   3 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N11938)
  Number of reached functions:   1 (0%)
  Number of partitions:          3
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:         10.300s
  Time for loading CPAs:          1.202s
  Time for loading parser:        0.664s
  Time for CFA construction:      8.301s
    Time for parsing file(s):     1.464s
    Time for AST to CFA:          3.478s
    Time for CFA sanity check:    0.980s
    Time for post-processing:     2.309s
      Time for var class.:        1.141s
Time for Analysis:               20.495s
CPU time for analysis:           20.490s
Total time for CPAchecker:       30.798s
Total CPU time for CPAchecker:   30.760s
Time for statistics:              0.109s

Time for Garbage Collector:       0.704s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     58MB (    56 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8101MB (  7726 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
