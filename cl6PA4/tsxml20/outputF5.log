scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--scsi--BusLogic.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cgf98hkc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20346: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 20567: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20592: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20667: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20700: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20724: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20747: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20750: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20752: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 20911: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 20946: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21067: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21080: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 21110: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21139: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21155: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11304: Function pointer *phase with type void (*)(u32 , unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14565: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8083: Function pointer *callback with type void (*)(struct sccb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18886: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18749: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19321: Function pointer *(command->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19130: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19111: Function pointer *comp_cb with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6323: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6363: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6173-6174: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6238: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6212: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20852: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20864: Function pointer *arg0 with type int (*)(struct Scsi_Host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function get_options to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 20367-20368: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Obsolete Command Line Entry Format Ignored\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 20310-20311: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (all or no I/O Addresses must be specified)\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ldv__builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vsprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv__builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 19975-19976: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (invalid I/O Address 0x%X)\n", (struct blogic_adapter *)0, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20294-20295: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unexpected Driver Option \'%s\' ignored\n", (struct blogic_adapter *)0, options) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20054-20055: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (\',\' or \']\' expected at \'%s\')\n", (struct blogic_adapter *)0, options) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20069-20070: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (\']\' expected at \'%s\')\n", (struct blogic_adapter *)0, options) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20039-20040: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (invalid Queue Depth %d)\n", (struct blogic_adapter *)0, (int)qdepth) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20095-20096: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (invalid Queue Depth %d)\n", (struct blogic_adapter *)0, (int)qdepth___0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 20219-20220: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Invalid Driver Options (invalid Bus Settle Time %d)\n", (struct blogic_adapter *)0, (int)bus_settle_time) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 18163: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Probe Info List\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5861: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6363: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 18176-18177: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Unable to allocate Prototype Host Adapter\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 16065-16066: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic: PCI MultiMaster Host Adapter detected at\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16054-16055: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: IRQ Channel %d invalid for MultiMaster Host Adapter\n", (struct blogic_adapter *)0, irq_ch) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16043-16044: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Base Address1 0x%X not Memory for MultiMaster Host Adapter\n", (struct blogic_adapter *)0, base_addr1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16032-16033: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Base Address0 0x%X not I/O for MultiMaster Host Adapter\n", (struct blogic_adapter *)0, base_addr0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16067-16068: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic: PCI Bus %d Device %d I/O Address 0x%X PCI Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr, pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16056-16057: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d I/O Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16045-16046: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d PCI Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16034-16035: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d I/O Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16357: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic: FlashPoint Host Adapter detected at\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 16381: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(3, (char *)"BusLogic: Too many Host Adapters detected\n", (struct blogic_adapter *)0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16346-16347: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: IRQ Channel %d invalid for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, irq_ch) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16335-16336: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Base Address1 0x%X not Memory for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, base_addr1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16324-16325: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"BusLogic: Base Address0 0x%X not I/O for FlashPoint Host Adapter\n", (struct blogic_adapter *)0, base_addr0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16358-16359: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(2, (char *)"BusLogic: PCI Bus %d Device %d I/O Address 0x%X PCI Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr, pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16348-16349: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d I/O Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16337-16338: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d PCI Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, pci_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16326-16327: Ignoring parameters passed as varargs to function blogic_msg: blogic_msg(4, (char *)"at PCI Bus %d Device %d I/O Address 0x%X\n", (struct blogic_adapter *)0, (int)bus, (int)device, io_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5896: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5930: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            187166 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  160303 (86%)
  Because of loop head:            13359 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13504 (7%)
  Times precision was empty:       22756 (12%)
  Times precision was {false}:     859 (0%)
  Times result was cached:         156623 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6928 (4%)
  Times result was 'false':        16412 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         123695
  BDD entailment checks:           20041
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          73
Number of abstraction locations:          273
Max number of predicates per location:    31
Avg number of predicates per location:    14
Total predicates per abstraction:         2594773
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 333.22
Number of irrelevant predicates:          349405 (13%)
Number of preds handled by boolean abs:   77953 (3%)
  Total number of models for allsat:      7085
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                167.211s
  Time for path formula creation:      166.773s
Time for strengthen operator:            0.861s
Time for prec operator:                283.887s
  Time for abstraction:                281.114s (Max:     5.076s, Count: 187166)
    Boolean abstraction:                89.041s
    Solving time:                      124.276s (Max:     4.358s)
    Model enumeration time:             12.685s
    Time for BDD construction:           0.326s (Max:     0.012s)
Time for merge operator:                26.598s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):   136.961s

Number of path formula cache hits:   1060325 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   160.906s

Total number of created targets for pointer analysis: 6635920
   Number of created targets for uf: *(struct_sccb)* is 23745
   Number of created targets for uf: *(struct_pci_dev)* is 29
   Number of created targets for uf: *enum_blogic_adapter_bus_type is 187
   Number of created targets for uf: *(struct_nvram_info)* is 449
   Number of created targets for uf: *unsigned_long_int is 325
   Number of created targets for uf: *unsigned_short_int is 290
   Number of created targets for uf: *signed_int is 10
   Number of created targets for uf: *(char)* is 70
   Number of created targets for uf: *unsigned_char is 380537
   Number of created targets for uf: *_Bool is 703
   Number of created targets for uf: *char is 61
   Number of created targets for uf: *enum_blogic_adapter_type is 75
   Number of created targets for uf: *unsigned_int is 20773


Number of BDD nodes:                               5774
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       25542 (count: 94200, min: 0, max: 955, avg: 0.27)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.786s
  Time for transition matches:                         0.825s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                       903556 (count: 903556, min: 1, max: 1, avg: 1.00) [1 x 903556]

CPA algorithm statistics
------------------------
Number of iterations:            609091
Max size of waitlist:            128
Average size of waitlist:        21
Number of computed successors:   695042
Max successors for one state:    2
Number of times merged:          51827
Number of times stopped:         64010
Number of times breaked:         302

Total time for CPA algorithm:       504.245s (Max:    28.954s)
  Time for choose from waitlist:      0.380s
  Time for precision adjustment:    288.615s
  Time for transfer relation:       183.797s
  Time for merge operator:           27.356s
  Time for stop operator:             0.879s
  Time for adding to reached set:     1.161s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   302
Avg. length of target path (in blocks):               37635 (count: 302, min: 17, max: 207, avg: 124.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 385.516s
  Counterexample analysis:                           383.265s (Max:     9.683s, Calls: 302)
    Refinement sat check:                            352.901s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.249s
  Precision update:                                    0.732s
  ARG update:                                          0.976s

Length of refined path (in blocks):                   36917 (count: 302, min: 10, max: 207, avg: 122.24)
Number of affected states:                            35459 (count: 302, min: 1, max: 206, avg: 117.41)
Length (states) of path with itp 'true':               1156 (count: 302, min: 0, max: 69, avg: 3.83)
Length (states) of path with itp non-trivial itp:     35459 (count: 302, min: 1, max: 206, avg: 117.41)
Length (states) of path with itp 'false':                33 (count: 302, min: 0, max: 1, avg: 0.11)
Different non-trivial interpolants along paths:         386 (count: 302, min: 0, max: 9, avg: 1.28)
Equal non-trivial interpolants along paths:           34771 (count: 302, min: 0, max: 204, avg: 115.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                302
Number of successful refinements:     302
Number of failed refinements:         0
Max. size of reached set before ref.: 11731
Max. size of reached set after ref.:  8992
Avg. size of reached set before ref.: 2201.19
Avg. size of reached set after ref.:  184.40

Total time for CEGAR algorithm:     890.588s
Time for refinements:               386.286s
Average time for refinement:          1.279s
Max time for refinement:              9.694s

Code Coverage
-----------------------------
  Function coverage:      0.178
  Visited lines:          1829
  Total lines:            10187
  Line coverage:          0.180
  Visited conditions:     266
  Total conditions:       3350
  Condition coverage:     0.079

CPAchecker general statistics
-----------------------------
Number of program locations:     15218
Number of CFA edges:             18275
Number of relevant variables:    2294
Number of functions:             590
Number of loops:                 222
Size of reached set:             5550
  Number of reached locations:   931 (6%)
    Avg states per location:     5
    Max states per location:     90 (at node N7915)
  Number of reached functions:   105 (18%)
  Number of partitions:          5494
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N8364 (before line 16386), Function blogic_init_fp_probeinfo called from node N8395, stack depth 6 [42b851ab], stack [main, ldv_entry_EMGentry_7, ldv_EMGentry_init_blogic_init_7_7, blogic_init, blogic_init_probeinfo_list, blogic_init_fp_probeinfo]])
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          9.655s
  Time for loading CPAs:          1.344s
  Time for loading parser:        0.743s
  Time for CFA construction:      7.389s
    Time for parsing file(s):     1.503s
    Time for AST to CFA:          3.021s
    Time for CFA sanity check:    0.686s
    Time for post-processing:     1.959s
      Time for var class.:        1.123s
Time for Analysis:              890.589s
CPU time for analysis:          890.500s
Total time for CPAchecker:      900.253s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.240s

Time for Garbage Collector:      11.129s (in 1830 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                154MB (   147 MiB) max;     86MB (    82 MiB) avg;    157MB (   150 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           157MB (   150 MiB) max;    137MB (   131 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9128MB (  8705 MiB) max;   8727MB (  8322 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
