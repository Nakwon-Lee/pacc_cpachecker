scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--net--ethernet--icplus--ipg.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zcjnokam/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7416: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7439: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9839: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9859: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9862: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9864: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10165: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10190: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10203: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10278: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10314: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10392: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10399: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10400: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10406: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10407: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10408: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10416: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10417: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10418: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10424: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10425: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10426: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10427: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10428: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10435: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10436: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10437: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10438: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10439: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10440: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10446: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10447: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10448: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10449: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10450: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10451: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10452: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10460: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10461: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10462: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10463: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10464: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10465: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10466: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10467: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10474: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10475: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10476: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10477: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10478: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10479: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10480: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10481: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10482: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10489: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10490: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10491: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10492: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10493: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10494: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10495: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10496: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10497: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10498: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10622: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10653: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10748: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10789: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10833: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10846: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10889: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10904: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10995: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11172: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11188: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11218: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6704: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6744: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6578-6579: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6617: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10539: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10550: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10573: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10585: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10855: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10618: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9978: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10855: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10855: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            26306 (34% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21881 (83%)
  Because of loop head:            2872 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1553 (6%)
  Times precision was empty:       7475 (28%)
  Times precision was {false}:     228 (1%)
  Times result was cached:         17244 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1359 (5%)
  Times result was 'false':        1474 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         2964
  BDD entailment checks:           2872
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       52
Number of predicates discovered:          35
Number of abstraction locations:          172
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         140007
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 88.22
Number of irrelevant predicates:          59666 (43%)
Number of preds handled by boolean abs:   7978 (6%)
  Total number of models for allsat:      1373
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.407s
  Time for path formula creation:        1.295s
Time for strengthen operator:            0.211s
Time for prec operator:                 10.568s
  Time for abstraction:                  9.903s (Max:     0.039s, Count: 26306)
    Boolean abstraction:                 1.294s
    Solving time:                        0.837s (Max:     0.019s)
    Model enumeration time:              0.103s
    Time for BDD construction:           0.152s (Max:     0.012s)
Time for merge operator:                 0.008s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.940s

Number of path formula cache hits:   96504 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.042s

Total number of created targets for pointer analysis: 4
   Number of created targets for uf: *(struct_timer_list)* is 4
   Number of created targets for uf: *(struct_pci_driver)* is 2


Number of BDD nodes:                               580
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3783 (count: 20197, min: 0, max: 303, avg: 0.19)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.522s
  Time for transition matches:                         0.155s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                        76272 (count: 76272, min: 1, max: 1, avg: 1.00) [1 x 76272]

CPA algorithm statistics
------------------------
Number of iterations:            57724
Max size of waitlist:            17
Average size of waitlist:        7
Number of computed successors:   61995
Max successors for one state:    2
Number of times merged:          46
Number of times stopped:         1857
Number of times breaked:         172

Total time for CPA algorithm:        17.377s (Max:     1.121s)
  Time for choose from waitlist:      0.107s
  Time for precision adjustment:     11.563s
  Time for transfer relation:         4.412s
  Time for merge operator:            0.052s
  Time for stop operator:             0.268s
  Time for adding to reached set:     0.291s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   172
Avg. length of target path (in blocks):               11517 (count: 172, min: 39, max: 101, avg: 66.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.096s
  Counterexample analysis:                             4.231s (Max:     0.050s, Calls: 172)
    Refinement sat check:                              2.195s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.154s
  Precision update:                                    0.279s
  ARG update:                                          0.247s

Length of refined path (in blocks):                   11402 (count: 172, min: 39, max: 101, avg: 66.29)
Number of affected states:                             5810 (count: 172, min: 10, max: 100, avg: 33.78)
Length (states) of path with itp 'true':               5420 (count: 172, min: 0, max: 50, avg: 31.51)
Length (states) of path with itp non-trivial itp:      5810 (count: 172, min: 10, max: 100, avg: 33.78)
Length (states) of path with itp 'false':               115 (count: 172, min: 0, max: 1, avg: 0.67)
Different non-trivial interpolants along paths:          57 (count: 172, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:            5581 (count: 172, min: 9, max: 98, avg: 32.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                172
Number of successful refinements:     172
Number of failed refinements:         0
Max. size of reached set before ref.: 1544
Max. size of reached set after ref.:  1204
Avg. size of reached set before ref.: 766.10
Avg. size of reached set after ref.:  425.90

Total time for CEGAR algorithm:      22.936s
Time for refinements:                 5.473s
Average time for refinement:          0.031s
Max time for refinement:              0.104s

Code Coverage
-----------------------------
  Function coverage:      0.036
  Visited lines:          1129
  Total lines:            4834
  Line coverage:          0.234
  Visited conditions:     6
  Total conditions:       956
  Condition coverage:     0.006

CPAchecker general statistics
-----------------------------
Number of program locations:     7336
Number of CFA edges:             8105
Number of relevant variables:    966
Number of functions:             562
Number of loops:                 32
Size of reached set:             150
  Number of reached locations:   90 (1%)
    Avg states per location:     1
    Max states per location:     8 (at node N4542)
  Number of reached functions:   20 (4%)
  Number of partitions:          150
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        4

Time for analysis setup:          7.335s
  Time for loading CPAs:          1.154s
  Time for loading parser:        0.763s
  Time for CFA construction:      5.249s
    Time for parsing file(s):     1.304s
    Time for AST to CFA:          2.136s
    Time for CFA sanity check:    0.439s
    Time for post-processing:     1.139s
      Time for var class.:        0.604s
Time for Analysis:               22.936s
CPU time for analysis:           22.940s
Total time for CPAchecker:       30.275s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.100s

Time for Garbage Collector:       0.520s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     56MB (    54 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             46MB (    43 MiB) max;     39MB (    37 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
