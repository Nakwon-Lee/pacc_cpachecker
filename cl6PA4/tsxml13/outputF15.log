scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--xen--xen-pciback--xen-pciback.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x5c7pq0u/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8206: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8231: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8244: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8717: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8894: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8925: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8972: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 8978: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 8979: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 8986: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 8987: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 8988: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 9060: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9078: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9110: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9128: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9160: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9178: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9210: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9260: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9278: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9310: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9328: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9360: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9380: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9417: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9437: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9474: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9494: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9531: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9551: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9588: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9608: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9645: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9665: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9702: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9722: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9759: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9779: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9816: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9836: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9873: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9897: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9913: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9932: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9992: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10011: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10071: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10150: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10518: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10534: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10655: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11619: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11675: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11708: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11727: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13336: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13429: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13534: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13637: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13654: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13667: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13773: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 17400: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17435: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17528: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8840: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8852: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8483: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function xenbus_dev_fatal to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16615: Ignoring call via function pointer __xen_pcibk_publish_pci_roots::publish_cb for which no suitable target was found in line: tmp = (*publish_cb)(pdev, 0U, 0U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16615: Ignoring function call through function pointer *publish_cb: tmp = (*publish_cb)(pdev, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_scanf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_linux_kernel_locking_spinlock_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_reset_function_locked to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_load_saved_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xen_unregister_device_domain_owner to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_load_and_free_saved_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 14608-14609: Ignoring function call through function pointer *(field->release): (*(field->release))(dev, (int)((cfg_entry->base_offset) + __CPAchecker_TMP_1), cfg_entry->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14476: Ignoring function call through function pointer *(field->clean): (*(field->clean))((struct config_field *)field); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_bus_read_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xen_test_irq_shared to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xen_physdev_op_compat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 14540-14541: Ignoring function call through function pointer *(field->reset): (*(field->reset))(dev, (int)(__CPAchecker_TMP_1 + __CPAchecker_TMP_2), cfg_entry->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1094718 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  970028 (89%)
  Because of loop head:            117877 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6813 (1%)
  Times precision was empty:       101139 (9%)
  Times precision was {false}:     1188 (0%)
  Times result was cached:         976068 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16323 (1%)
  Times result was 'false':        22670 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         453049
  BDD entailment checks:           246571
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       87
Number of predicates discovered:          113
Number of abstraction locations:          420
Max number of predicates per location:    38
Avg number of predicates per location:    10
Total predicates per abstraction:         8656984
Max number of predicates per abstraction: 38
Avg number of predicates per abstraction: 494.37
Number of irrelevant predicates:          3105455 (36%)
Number of preds handled by boolean abs:   107928 (1%)
  Total number of models for allsat:      153626
  Max number of models for allsat:        552
  Avg number of models for allsat:        9.41

Time for post operator:                107.033s
  Time for path formula creation:      105.017s
Time for strengthen operator:            3.587s
Time for prec operator:                465.938s
  Time for abstraction:                440.985s (Max:     1.308s, Count: 1094718)
    Boolean abstraction:                99.037s
    Solving time:                       27.870s (Max:     0.107s)
    Model enumeration time:             64.565s
    Time for BDD construction:           4.540s (Max:     0.055s)
Time for merge operator:                 4.128s
Time for coverage check:                 0.322s
  Time for BDD entailment checks:        0.248s
Total time for SMT solver (w/o itp):    92.435s

Number of path formula cache hits:   4461048 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    53.972s

Total number of created targets for pointer analysis: 78203
   Number of created targets for uf: *(void)* is 2125
   Number of created targets for uf: *signed_int is 910
   Number of created targets for uf: *(struct_list_head)* is 4
   Number of created targets for uf: *unsigned_int is 32735
   Number of created targets for uf: *unsigned_long_int is 21


Number of BDD nodes:                               213269
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       56532 (count: 462151, min: 0, max: 2099, avg: 0.12)
Time for BDD node cleanup:                             0.093s
Time for BDD garbage collection:                       0.035s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.948s
  Time for transition matches:                         3.837s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                      4205396 (count: 4205396, min: 1, max: 1, avg: 1.00) [1 x 4205396]

CPA algorithm statistics
------------------------
Number of iterations:            3004550
Max size of waitlist:            83
Average size of waitlist:        50
Number of computed successors:   3280665
Max successors for one state:    2
Number of times merged:          103239
Number of times stopped:         245921
Number of times breaked:         619

Total time for CPA algorithm:       683.533s (Max:    14.973s)
  Time for choose from waitlist:      1.530s
  Time for precision adjustment:    489.093s
  Time for transfer relation:       167.766s
  Time for merge operator:            5.899s
  Time for stop operator:             4.742s
  Time for adding to reached set:     6.199s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   619
Avg. length of target path (in blocks):              289137 (count: 619, min: 31, max: 823, avg: 467.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 200.113s
  Counterexample analysis:                           192.171s (Max:     1.901s, Calls: 619)
    Refinement sat check:                             47.273s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.122s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.571s
  Precision update:                                    1.719s
  ARG update:                                          4.492s

Length of refined path (in blocks):                  285052 (count: 619, min: 31, max: 819, avg: 460.50)
Number of affected states:                            78170 (count: 619, min: 1, max: 690, avg: 126.28)
Length (states) of path with itp 'true':             206263 (count: 619, min: 0, max: 717, avg: 333.22)
Length (states) of path with itp non-trivial itp:     78170 (count: 619, min: 1, max: 690, avg: 126.28)
Length (states) of path with itp 'false':               413 (count: 619, min: 0, max: 1, avg: 0.67)
Different non-trivial interpolants along paths:         735 (count: 619, min: 0, max: 19, avg: 1.19)
Equal non-trivial interpolants along paths:           76816 (count: 619, min: 0, max: 670, avg: 124.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                619
Number of successful refinements:     619
Number of failed refinements:         0
Max. size of reached set before ref.: 34578
Max. size of reached set after ref.:  21040
Avg. size of reached set before ref.: 9257.47
Avg. size of reached set after ref.:  4413.74

Total time for CEGAR algorithm:     891.762s
Time for refinements:               206.478s
Average time for refinement:          0.333s
Max time for refinement:              1.968s

Code Coverage
-----------------------------
  Function coverage:      0.197
  Visited lines:          1845
  Total lines:            7954
  Line coverage:          0.232
  Visited conditions:     233
  Total conditions:       2058
  Condition coverage:     0.113

CPAchecker general statistics
-----------------------------
Number of program locations:     12023
Number of CFA edges:             13813
Number of relevant variables:    2297
Number of functions:             755
Number of loops:                 80
Size of reached set:             13806
  Number of reached locations:   1117 (9%)
    Avg states per location:     12
    Max states per location:     238 (at node N63)
  Number of reached functions:   149 (20%)
  Number of partitions:          13512
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N8389 (before lines 17401-17404), Function ldv_struct_xen_pcibk_backend_io_instance_20 called from node N2583, stack depth 4 [2ac3c68f], stack [main, ldv_entry_EMGentry_34, ldv_dispatch_register_io_instance_15_34_15, ldv_struct_xen_pcibk_backend_io_instance_20]])
  Number of target states:       0
  Size of final wait list        69

Time for analysis setup:          8.469s
  Time for loading CPAs:          1.164s
  Time for loading parser:        0.666s
  Time for CFA construction:      6.479s
    Time for parsing file(s):     1.394s
    Time for AST to CFA:          2.643s
    Time for CFA sanity check:    0.612s
    Time for post-processing:     1.574s
      Time for var class.:        0.896s
Time for Analysis:              891.763s
CPU time for analysis:          891.670s
Total time for CPAchecker:      900.236s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              0.385s

Time for Garbage Collector:      30.315s (in 1474 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                560MB (   534 MiB) max;    258MB (   246 MiB) avg;    606MB (   578 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     42MB (    40 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           703MB (   670 MiB) max;    382MB (   365 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8423MB (  8032 MiB) max;   8283MB (  7899 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
