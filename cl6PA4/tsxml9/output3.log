scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--char--ipmi--ipmi_msghandler.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u6f3fre5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4307: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 4451: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4456: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4466: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4470: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11313: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11327: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11340: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11781: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11812: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11897: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 11898: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11939: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11970: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12055: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 12056: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12097: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12128: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12213: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 12214: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12434: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12448: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12463: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12477: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12495: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12509: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12527: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12541: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12559: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12573: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12591: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12623: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12637: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12655: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12669: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12687: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12701: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12719: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12733: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12751: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12765: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12783: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12807: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12823: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12866: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13924: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13956: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13990: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14006: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5301: Function pointer *(w->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5509: Function pointer *(user->handler->ipmi_recv_hndl) with type void (*)(struct ipmi_recv_msg *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5205: Function pointer *(watcher->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10434: Function pointer *(intf->handlers->set_need_watch) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12379: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12393: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12407: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6281: Function pointer *(intf->handlers->set_maintenance_mode) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10988: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10779: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12832: Ignoring call via function pointer ldv_timer_instance_callback_15_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12832: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11497: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function proc_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21413 (33% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17257 (81%)
  Because of loop head:            3504 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         652 (3%)
  Times precision was empty:       4728 (22%)
  Times precision was {false}:     188 (1%)
  Times result was cached:         14468 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2029 (9%)
  Times result was 'false':        637 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         3533
  BDD entailment checks:           2789
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          30
Number of abstraction locations:          158
Max number of predicates per location:    15
Avg number of predicates per location:    10
Total predicates per abstraction:         111255
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 50.18
Number of irrelevant predicates:          14660 (13%)
Number of preds handled by boolean abs:   13487 (12%)
  Total number of models for allsat:      2042
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.896s
  Time for path formula creation:        1.760s
Time for strengthen operator:            0.141s
Time for prec operator:                 10.513s
  Time for abstraction:                  9.941s (Max:     0.077s, Count: 21413)
    Boolean abstraction:                 1.883s
    Solving time:                        1.246s (Max:     0.024s)
    Model enumeration time:              0.144s
    Time for BDD construction:           0.198s (Max:     0.012s)
Time for merge operator:                 0.042s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.391s

Number of path formula cache hits:   80166 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.111s

Total number of created targets for pointer analysis: 45
   Number of created targets for uf: *signed_int is 25
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(struct_timer_list)* is 2


Number of BDD nodes:                               524
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4750 (count: 21062, min: 0, max: 266, avg: 0.23)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.449s
Automaton transfers with branching:                0
Automaton transfer successors:                        64512 (count: 64512, min: 1, max: 1, avg: 1.00) [1 x 64512]

CPA algorithm statistics
------------------------
Number of iterations:            47651
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   51573
Max successors for one state:    2
Number of times merged:          372
Number of times stopped:         2560
Number of times breaked:         93

Total time for CPA algorithm:        17.185s (Max:     1.392s)
  Time for choose from waitlist:      0.120s
  Time for precision adjustment:     11.371s
  Time for transfer relation:         4.514s
  Time for merge operator:            0.108s
  Time for stop operator:             0.235s
  Time for adding to reached set:     0.241s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   93
Avg. length of target path (in blocks):                9707 (count: 93, min: 39, max: 139, avg: 104.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.324s
  Counterexample analysis:                             3.589s (Max:     0.077s, Calls: 93)
    Refinement sat check:                              1.771s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.175s
  Precision update:                                    0.185s
  ARG update:                                          0.222s

Length of refined path (in blocks):                    9702 (count: 93, min: 39, max: 139, avg: 104.32)
Number of affected states:                             9583 (count: 93, min: 23, max: 138, avg: 103.04)
Length (states) of path with itp 'true':                 26 (count: 93, min: 0, max: 26, avg: 0.28)
Length (states) of path with itp non-trivial itp:      9583 (count: 93, min: 23, max: 138, avg: 103.04)
Length (states) of path with itp 'false':                 1 (count: 93, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:          92 (count: 93, min: 0, max: 1, avg: 0.99)
Equal non-trivial interpolants along paths:            9398 (count: 93, min: 22, max: 136, avg: 101.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                93
Number of successful refinements:     93
Number of failed refinements:         0
Max. size of reached set before ref.: 642
Max. size of reached set after ref.:  259
Avg. size of reached set before ref.: 525.49
Avg. size of reached set after ref.:  5.75

Total time for CEGAR algorithm:      21.744s
Time for refinements:                 4.553s
Average time for refinement:          0.048s
Max time for refinement:              0.115s

Code Coverage
-----------------------------
  Function coverage:      0.013
  Visited lines:          946
  Total lines:            6827
  Line coverage:          0.139
  Visited conditions:     8
  Total conditions:       1796
  Condition coverage:     0.004

CPAchecker general statistics
-----------------------------
Number of program locations:     10550
Number of CFA edges:             12142
Number of relevant variables:    1550
Number of functions:             718
Number of loops:                 72
Size of reached set:             40
  Number of reached locations:   40 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N4664)
  Number of reached functions:   9 (1%)
  Number of partitions:          40
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          8.504s
  Time for loading CPAs:          1.329s
  Time for loading parser:        0.667s
  Time for CFA construction:      6.357s
    Time for parsing file(s):     1.375s
    Time for AST to CFA:          2.431s
    Time for CFA sanity check:    0.752s
    Time for post-processing:     1.622s
      Time for var class.:        0.871s
Time for Analysis:               21.744s
CPU time for analysis:           21.740s
Total time for CPAchecker:       30.255s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.105s

Time for Garbage Collector:       0.637s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     52MB (    50 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
