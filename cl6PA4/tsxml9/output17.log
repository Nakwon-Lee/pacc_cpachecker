scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--char--ipmi--ipmi_msghandler.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pzv1phea/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4307: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 4451: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4456: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4466: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4470: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11313: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11327: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11340: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11781: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11812: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11897: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 11898: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11939: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11970: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12055: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 12056: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12097: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12128: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12213: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 12214: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12434: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12448: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12463: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12477: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12495: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12509: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12527: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12541: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12559: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12573: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12591: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12623: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12637: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12655: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12669: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12687: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12701: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12719: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12733: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12751: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12765: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12783: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12807: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12823: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12866: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13924: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13956: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13990: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14006: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5301: Function pointer *(w->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5509: Function pointer *(user->handler->ipmi_recv_hndl) with type void (*)(struct ipmi_recv_msg *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5205: Function pointer *(watcher->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10434: Function pointer *(intf->handlers->set_need_watch) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12379: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12393: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12407: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6281: Function pointer *(intf->handlers->set_maintenance_mode) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10988: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10779: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12832: Ignoring call via function pointer ldv_timer_instance_callback_15_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12832: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_read_lock_held to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 13921: Unsupported feature (recursion): tmp___0 = ldv_mod_timer(ldv_func_res, ldv_func_arg1, ldv_func_arg2); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            173 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  143 (83%)
  Because of loop head:            27 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (2%)
  Times precision was empty:       117 (68%)
  Times precision was {false}:     3 (2%)
  Times result was cached:         11 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42 (24%)
  Times result was 'false':        3 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         34
  BDD entailment checks:           14
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          7
Number of abstraction locations:          40
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         69
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.53
Number of irrelevant predicates:          8 (12%)
Number of preds handled by boolean abs:   50 (72%)
  Total number of models for allsat:      41
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                  0.852s
  Time for path formula creation:        0.837s
Time for strengthen operator:            0.018s
Time for prec operator:                  0.253s
  Time for abstraction:                  0.213s (Max:     0.039s, Count: 173)
    Boolean abstraction:                 0.065s
    Solving time:                        0.045s (Max:     0.016s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.013s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.047s

Number of path formula cache hits:   396 (16%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.744s

Total number of created targets for pointer analysis: 21
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(struct_timer_list)* is 2


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          25 (count: 417, min: 0, max: 25, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.059s
Automaton transfers with branching:                0
Automaton transfer successors:                         2369 (count: 2369, min: 1, max: 1, avg: 1.00) [1 x 2369]

CPA algorithm statistics
------------------------
Number of iterations:            443
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   490
Max successors for one state:    2
Number of times merged:          10
Number of times stopped:         24
Number of times breaked:         2

Total time for CPA algorithm:         1.662s (Max:     1.208s)
  Time for choose from waitlist:      0.004s
  Time for precision adjustment:      0.335s
  Time for transfer relation:         1.225s
  Time for merge operator:            0.015s
  Time for stop operator:             0.034s
  Time for adding to reached set:     0.017s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                  84 (count: 2, min: 41, max: 43, avg: 42.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.129s
  Counterexample analysis:                             0.082s (Max:     0.046s, Calls: 2)
    Refinement sat check:                              0.052s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.001s
  ARG update:                                          0.028s

Length of refined path (in blocks):                      70 (count: 2, min: 27, max: 43, avg: 35.00)
Number of affected states:                               50 (count: 2, min: 8, max: 42, avg: 25.00)
Length (states) of path with itp 'true':                 18 (count: 2, min: 0, max: 18, avg: 9.00)
Length (states) of path with itp non-trivial itp:        50 (count: 2, min: 8, max: 42, avg: 25.00)
Length (states) of path with itp 'false':                 1 (count: 2, min: 0, max: 1, avg: 0.50)
Different non-trivial interpolants along paths:           4 (count: 2, min: 2, max: 2, avg: 2.00)
Equal non-trivial interpolants along paths:              44 (count: 2, min: 5, max: 39, avg: 22.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 178
Max. size of reached set after ref.:  73
Avg. size of reached set before ref.: 176.50
Avg. size of reached set after ref.:  38.00

Total time for CEGAR algorithm:       1.819s
Time for refinements:                 0.157s
Average time for refinement:          0.078s
Max time for refinement:              0.083s

Code Coverage
-----------------------------
  Function coverage:      0.039
  Visited lines:          1061
  Total lines:            6827
  Line coverage:          0.155
  Visited conditions:     30
  Total conditions:       1796
  Condition coverage:     0.017

CPAchecker general statistics
-----------------------------
Number of program locations:     10550
Number of CFA edges:             12142
Number of relevant variables:    1550
Number of functions:             718
Number of loops:                 72
Size of reached set:             187
  Number of reached locations:   154 (1%)
    Avg states per location:     1
    Max states per location:     5 (at node N7451)
  Number of reached functions:   28 (4%)
  Number of partitions:          187
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          8.063s
  Time for loading CPAs:          1.262s
  Time for loading parser:        0.704s
  Time for CFA construction:      5.927s
    Time for parsing file(s):     1.260s
    Time for AST to CFA:          2.299s
    Time for CFA sanity check:    0.693s
    Time for post-processing:     1.466s
      Time for var class.:        0.755s
Time for Analysis:                1.819s
CPU time for analysis:            1.820s
Total time for CPAchecker:        9.886s
Total CPU time for CPAchecker:    9.860s
Time for statistics:              0.127s

Time for Garbage Collector:       0.372s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     41MB (    40 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8043MB (  7671 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
