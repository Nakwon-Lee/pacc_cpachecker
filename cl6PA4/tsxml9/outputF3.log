scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--char--ipmi--ipmi_msghandler.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0xev358k/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4307: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 4451: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4456: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4466: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4470: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11313: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11327: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11340: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11781: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11812: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11897: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 11898: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11939: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11970: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12055: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 12056: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12097: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12128: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12213: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 12214: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12434: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12448: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12463: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12477: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12495: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12509: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12527: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12541: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12559: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12573: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12591: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12623: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12637: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12655: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12669: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12687: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12701: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12719: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12733: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12751: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12765: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12783: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12807: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12823: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12866: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13924: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13956: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13990: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14006: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5301: Function pointer *(w->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5509: Function pointer *(user->handler->ipmi_recv_hndl) with type void (*)(struct ipmi_recv_msg *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5205: Function pointer *(watcher->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10434: Function pointer *(intf->handlers->set_need_watch) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12379: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12393: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12407: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6281: Function pointer *(intf->handlers->set_maintenance_mode) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10988: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10779: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12832: Ignoring call via function pointer ldv_timer_instance_callback_15_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12832: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11497: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function proc_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9978: Ignoring function call through function pointer *(intf->handlers->sender): (*(intf->handlers->sender))(intf->send_info, newmsg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __ldv_linux_kernel_locking_spinlock_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_read_lock_held to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11408: Destroying the void* pointer ldv_struct_notifier_block_dummy_resourceless_instance_14::ldv_14_ldv_param_3_2_default produces garbage or the memory pointed by it is unused: ldv_struct_notifier_block_dummy_resourceless_instance_14((void *)cf_arg_14); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 12814: Assignment to the void* pointer ldv_14_ldv_param_3_2_default produces garbage or the memory pointed by it is unused: ldv_14_ldv_param_3_2_default = ldv_xmalloc(1UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 10988: Ignoring function call through function pointer *(intf->handlers->set_run_to_completion): (*(intf->handlers->set_run_to_completion))(intf->send_info, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4895: Ignoring function call through function pointer *(msg->done): (*(msg->done))(msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 10070: Unsupported feature (recursion): smi_recv_tasklet((unsigned long)intf); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            51126 (34% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  41161 (81%)
  Because of loop head:            7090 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2875 (6%)
  Times precision was empty:       10037 (20%)
  Times precision was {false}:     414 (1%)
  Times result was cached:         36748 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3927 (8%)
  Times result was 'false':        2879 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         8290
  BDD entailment checks:           5612
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          60
Number of abstraction locations:          250
Max number of predicates per location:    30
Avg number of predicates per location:    13
Total predicates per abstraction:         457092
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 105.30
Number of irrelevant predicates:          55102 (12%)
Number of preds handled by boolean abs:   41228 (9%)
  Total number of models for allsat:      3989
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.02

Time for post operator:                  2.649s
  Time for path formula creation:        2.498s
Time for strengthen operator:            0.266s
Time for prec operator:                 28.626s
  Time for abstraction:                 27.599s (Max:     0.070s, Count: 51126)
    Boolean abstraction:                 4.071s
    Solving time:                        2.733s (Max:     0.034s)
    Model enumeration time:              0.288s
    Time for BDD construction:           0.283s (Max:     0.013s)
Time for merge operator:                 0.058s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     3.021s

Number of path formula cache hits:   191072 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.565s

Total number of created targets for pointer analysis: 93
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(struct_timer_list)* is 2
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               2413
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12740 (count: 43507, min: 0, max: 743, avg: 0.29)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.652s
  Time for transition matches:                         0.209s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                       150905 (count: 150905, min: 1, max: 1, avg: 1.00) [1 x 150905]

CPA algorithm statistics
------------------------
Number of iterations:            115744
Max size of waitlist:            25
Average size of waitlist:        6
Number of computed successors:   126144
Max successors for one state:    2
Number of times merged:          1339
Number of times stopped:         5809
Number of times breaked:         221

Total time for CPA algorithm:        38.968s (Max:     1.309s)
  Time for choose from waitlist:      0.169s
  Time for precision adjustment:     30.111s
  Time for transfer relation:         6.765s
  Time for merge operator:            0.143s
  Time for stop operator:             0.348s
  Time for adding to reached set:     0.490s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   221
Avg. length of target path (in blocks):               21852 (count: 221, min: 33, max: 171, avg: 98.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.876s
  Counterexample analysis:                             7.652s (Max:     0.088s, Calls: 221)
    Refinement sat check:                              3.835s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.221s
  Precision update:                                    0.389s
  ARG update:                                          0.326s

Length of refined path (in blocks):                   21480 (count: 221, min: 31, max: 171, avg: 97.19)
Number of affected states:                            19855 (count: 221, min: 0, max: 170, avg: 89.84)
Length (states) of path with itp 'true':               1404 (count: 221, min: 0, max: 58, avg: 6.35)
Length (states) of path with itp non-trivial itp:     19855 (count: 221, min: 0, max: 170, avg: 89.84)
Length (states) of path with itp 'false':                29 (count: 221, min: 0, max: 1, avg: 0.13)
Different non-trivial interpolants along paths:         197 (count: 221, min: 0, max: 5, avg: 0.89)
Equal non-trivial interpolants along paths:           19445 (count: 221, min: 0, max: 168, avg: 87.99)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                221
Number of successful refinements:     221
Number of failed refinements:         0
Max. size of reached set before ref.: 1518
Max. size of reached set after ref.:  1318
Avg. size of reached set before ref.: 725.46
Avg. size of reached set after ref.:  200.19

Total time for CEGAR algorithm:      48.334s
Time for refinements:                 9.318s
Average time for refinement:          0.042s
Max time for refinement:              0.111s

Code Coverage
-----------------------------
  Function coverage:      0.162
  Visited lines:          1437
  Total lines:            6827
  Line coverage:          0.210
  Visited conditions:     158
  Total conditions:       1796
  Condition coverage:     0.088

CPAchecker general statistics
-----------------------------
Number of program locations:     10550
Number of CFA edges:             12142
Number of relevant variables:    1550
Number of functions:             718
Number of loops:                 72
Size of reached set:             1373
  Number of reached locations:   732 (7%)
    Avg states per location:     1
    Max states per location:     23 (at node N7451)
  Number of reached functions:   116 (16%)
  Number of partitions:          1369
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5733 (before lines 12855-12861), Function ldv_timer_timer_instance_15 called from node N4794, stack depth 9 [56da56f5], stack [main, ldv_entry_EMGentry_20, ldv_EMGentry_init_ipmi_init_msghandler_mod_20_13, ipmi_init_msghandler_mod, ipmi_init_msghandler, ldv_mod_timer_196, ldv_mod_timer, ldv_dispatch_instance_register_17_2, ldv_timer_timer_instance_15]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          8.046s
  Time for loading CPAs:          1.208s
  Time for loading parser:        0.707s
  Time for CFA construction:      5.967s
    Time for parsing file(s):     1.343s
    Time for AST to CFA:          2.345s
    Time for CFA sanity check:    0.519s
    Time for post-processing:     1.466s
      Time for var class.:        0.839s
Time for Analysis:               48.334s
CPU time for analysis:           48.330s
Total time for CPAchecker:       56.385s
Total CPU time for CPAchecker:   56.360s
Time for statistics:              0.153s

Time for Garbage Collector:       0.933s (in 177 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     55MB (    53 MiB) avg;     81MB (    78 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
