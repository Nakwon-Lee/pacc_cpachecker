scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--char--ipmi--ipmi_msghandler.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r4k2zln7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4307: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

line 4451: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4456: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4466: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4470: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11313: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11327: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11340: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11728: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11781: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11812: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11897: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 11898: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11939: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11970: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12055: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 12056: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12097: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12128: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12213: Dead code detected: goto ldv_call_2; (CFACreationUtils.addEdgeToCFA, INFO)

line 12214: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12434: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12448: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12463: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12477: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12495: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12509: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12527: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12541: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12559: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12573: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12591: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12623: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12637: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12655: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12669: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12687: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12701: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12719: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12733: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12751: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12765: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12783: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12807: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12823: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12866: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13924: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13956: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13990: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14006: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5301: Function pointer *(w->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5509: Function pointer *(user->handler->ipmi_recv_hndl) with type void (*)(struct ipmi_recv_msg *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5205: Function pointer *(watcher->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10434: Function pointer *(intf->handlers->set_need_watch) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12379: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12393: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12407: Function pointer *arg0 with type long int (*)(struct file *, char *, unsigned long, long long *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6281: Function pointer *(intf->handlers->set_maintenance_mode) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10988: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10779: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12832: Ignoring call via function pointer ldv_timer_instance_callback_15_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12832: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_read_lock_held to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9978: Ignoring function call through function pointer *(intf->handlers->sender): (*(intf->handlers->sender))(intf->send_info, newmsg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 13921: Unsupported feature (recursion): tmp___0 = ldv_mod_timer(ldv_func_res, ldv_func_arg1, ldv_func_arg2); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            260 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  212 (82%)
  Because of loop head:            44 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (2%)
  Times precision was empty:       149 (57%)
  Times precision was {false}:     10 (4%)
  Times result was cached:         18 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      83 (32%)
  Times result was 'false':        3 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         60
  BDD entailment checks:           24
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          12
Number of abstraction locations:          46
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         201
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.16
Number of irrelevant predicates:          23 (11%)
Number of preds handled by boolean abs:   154 (77%)
  Total number of models for allsat:      94
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.13

Time for post operator:                  0.865s
  Time for path formula creation:        0.830s
Time for strengthen operator:            0.053s
Time for prec operator:                  0.630s
  Time for abstraction:                  0.596s (Max:     0.086s, Count: 260)
    Boolean abstraction:                 0.190s
    Solving time:                        0.115s (Max:     0.027s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.034s (Max:     0.009s)
Time for merge operator:                 0.027s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     0.127s

Number of path formula cache hits:   760 (26%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.794s

Total number of created targets for pointer analysis: 21
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(struct_timer_list)* is 2


Number of BDD nodes:                               239
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 771, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.065s
Automaton transfers with branching:                0
Automaton transfer successors:                         2778 (count: 2778, min: 1, max: 1, avg: 1.00) [1 x 2778]

CPA algorithm statistics
------------------------
Number of iterations:            668
Max size of waitlist:            14
Average size of waitlist:        4
Number of computed successors:   748
Max successors for one state:    2
Number of times merged:          18
Number of times stopped:         39
Number of times breaked:         3

Total time for CPA algorithm:         2.120s (Max:     1.148s)
  Time for choose from waitlist:      0.028s
  Time for precision adjustment:      0.715s
  Time for transfer relation:         1.253s
  Time for merge operator:            0.037s
  Time for stop operator:             0.027s
  Time for adding to reached set:     0.015s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                 115 (count: 3, min: 35, max: 43, avg: 38.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.230s
  Counterexample analysis:                             0.163s (Max:     0.056s, Calls: 3)
    Refinement sat check:                              0.095s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.003s
  ARG update:                                          0.033s

Length of refined path (in blocks):                     110 (count: 3, min: 32, max: 43, avg: 36.67)
Number of affected states:                               97 (count: 3, min: 21, max: 42, avg: 32.33)
Length (states) of path with itp 'true':                 10 (count: 3, min: 0, max: 10, avg: 3.33)
Length (states) of path with itp non-trivial itp:        97 (count: 3, min: 21, max: 42, avg: 32.33)
Length (states) of path with itp 'false':                 1 (count: 3, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:           8 (count: 3, min: 1, max: 5, avg: 2.67)
Equal non-trivial interpolants along paths:              86 (count: 3, min: 15, max: 39, avg: 28.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 196
Max. size of reached set after ref.:  40
Avg. size of reached set before ref.: 188.67
Avg. size of reached set after ref.:  15.33

Total time for CEGAR algorithm:       2.385s
Time for refinements:                 0.265s
Average time for refinement:          0.088s
Max time for refinement:              0.126s

Code Coverage
-----------------------------
  Function coverage:      0.038
  Visited lines:          1059
  Total lines:            6827
  Line coverage:          0.155
  Visited conditions:     30
  Total conditions:       1796
  Condition coverage:     0.017

CPAchecker general statistics
-----------------------------
Number of program locations:     10550
Number of CFA edges:             12142
Number of relevant variables:    1550
Number of functions:             718
Number of loops:                 72
Size of reached set:             187
  Number of reached locations:   150 (1%)
    Avg states per location:     1
    Max states per location:     5 (at node N7451)
  Number of reached functions:   27 (4%)
  Number of partitions:          186
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5733 (before lines 12855-12861), Function ldv_timer_timer_instance_15 called from node N4794, stack depth 9 [7a78d380], stack [main, ldv_entry_EMGentry_20, ldv_EMGentry_init_ipmi_init_msghandler_mod_20_13, ipmi_init_msghandler_mod, ipmi_init_msghandler, ldv_mod_timer_196, ldv_mod_timer, ldv_dispatch_instance_register_17_2, ldv_timer_timer_instance_15]])
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          8.504s
  Time for loading CPAs:          1.328s
  Time for loading parser:        0.738s
  Time for CFA construction:      6.276s
    Time for parsing file(s):     1.327s
    Time for AST to CFA:          2.407s
    Time for CFA sanity check:    0.658s
    Time for post-processing:     1.705s
      Time for var class.:        0.950s
Time for Analysis:                2.385s
CPU time for analysis:            2.390s
Total time for CPAchecker:       10.897s
Total CPU time for CPAchecker:   10.870s
Time for statistics:              0.138s

Time for Garbage Collector:       0.482s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     45MB (    43 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     29MB (    27 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8045MB (  7672 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
