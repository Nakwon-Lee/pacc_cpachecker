scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--ppp--bsd_comp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o7g0iy6x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_register_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_unregister_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            798 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            775 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (3%)
  Times precision was empty:       243 (30%)
  Times precision was {false}:     72 (9%)
  Times result was cached:         426 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      57 (7%)
  Times result was 'false':        21 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         6373
  BDD entailment checks:           619
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       314
Number of predicates discovered:          3
Number of abstraction locations:          13
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         640
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.96
Number of irrelevant predicates:          254 (40%)
Number of preds handled by boolean abs:   65 (10%)
  Total number of models for allsat:      62
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  2.677s
  Time for path formula creation:        2.617s
Time for strengthen operator:            0.103s
Time for prec operator:                  3.764s
  Time for abstraction:                  3.634s (Max:     0.181s, Count: 798)
    Boolean abstraction:                 0.602s
    Solving time:                        2.223s (Max:     0.139s)
    Model enumeration time:              0.065s
    Time for BDD construction:           0.018s (Max:     0.012s)
Time for merge operator:                 0.834s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     2.288s

Number of path formula cache hits:   54247 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.481s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         112 (count: 1580, min: 0, max: 38, avg: 0.07)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.261s
Automaton transfers with branching:                0
Automaton transfer successors:                        81981 (count: 81981, min: 1, max: 1, avg: 1.00) [1 x 81981]

CPA algorithm statistics
------------------------
Number of iterations:            18459
Max size of waitlist:            28
Average size of waitlist:        13
Number of computed successors:   21877
Max successors for one state:    2
Number of times merged:          2877
Number of times stopped:         3285
Number of times breaked:         12

Total time for CPA algorithm:         9.517s (Max:     1.414s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:      4.069s
  Time for transfer relation:         4.035s
  Time for merge operator:            0.978s
  Time for stop operator:             0.142s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  68 (count: 12, min: 1, max: 9, avg: 5.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.407s
  Counterexample analysis:                             0.320s (Max:     0.055s, Calls: 12)
    Refinement sat check:                              0.264s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.008s
  ARG update:                                          0.066s

Length of refined path (in blocks):                      65 (count: 12, min: 1, max: 9, avg: 5.42)
Number of affected states:                               52 (count: 12, min: 0, max: 8, avg: 4.33)
Length (states) of path with itp 'true':                  1 (count: 12, min: 0, max: 1, avg: 0.08)
Length (states) of path with itp non-trivial itp:        52 (count: 12, min: 0, max: 8, avg: 4.33)
Length (states) of path with itp 'false':                 1 (count: 12, min: 0, max: 1, avg: 0.08)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              41 (count: 12, min: 0, max: 7, avg: 3.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 2147
Max. size of reached set after ref.:  1217
Avg. size of reached set before ref.: 1565.75
Avg. size of reached set after ref.:  125.00

Total time for CEGAR algorithm:      10.002s
Time for refinements:                 0.484s
Average time for refinement:          0.040s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.700
  Visited lines:          2114
  Total lines:            2160
  Line coverage:          0.979
  Visited conditions:     216
  Total conditions:       236
  Condition coverage:     0.915

CPAchecker general statistics
-----------------------------
Number of program locations:     2427
Number of CFA edges:             2553
Number of relevant variables:    799
Number of functions:             30
Number of loops:                 10
Size of reached set:             1283
  Number of reached locations:   588 (24%)
    Avg states per location:     2
    Max states per location:     13 (at node N14)
  Number of reached functions:   21 (70%)
  Number of partitions:          1281
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1826 (before lines 2491-2834), Function bsd_decompress called from node N2331, stack depth 2 [1387bd84], stack [main, bsd_decompress]])
  Number of target states:       0

Time for analysis setup:          2.959s
  Time for loading CPAs:          0.626s
  Time for loading parser:        0.503s
  Time for CFA construction:      1.715s
    Time for parsing file(s):     0.526s
    Time for AST to CFA:          0.454s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.478s
      Time for var class.:        0.247s
Time for Analysis:               10.003s
CPU time for analysis:            9.990s
Time for analyzing result:        0.001s
Total time for CPAchecker:       12.965s
Total CPU time for CPAchecker:   12.950s
Time for statistics:              0.062s

Time for Garbage Collector:       0.402s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     47MB (    44 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8114MB (  7738 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
