scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--ppp--bsd_comp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w5021f5t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_register_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_unregister_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            736 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            712 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (3%)
  Times precision was empty:       231 (31%)
  Times precision was {false}:     94 (13%)
  Times result was cached:         359 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      52 (7%)
  Times result was 'false':        50 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         5729
  BDD entailment checks:           491
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       314
Number of predicates discovered:          3
Number of abstraction locations:          13
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         573
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 3.92
Number of irrelevant predicates:          231 (40%)
Number of preds handled by boolean abs:   60 (10%)
  Total number of models for allsat:      58
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  2.791s
  Time for path formula creation:        2.719s
Time for strengthen operator:            0.175s
Time for prec operator:                  4.180s
  Time for abstraction:                  4.084s (Max:     0.204s, Count: 736)
    Boolean abstraction:                 0.723s
    Solving time:                        2.485s (Max:     0.161s)
    Model enumeration time:              0.107s
    Time for BDD construction:           0.020s (Max:     0.008s)
Time for merge operator:                 1.078s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     2.592s

Number of path formula cache hits:   46825 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.638s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         108 (count: 1539, min: 0, max: 38, avg: 0.07)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.318s
Automaton transfers with branching:                0
Automaton transfer successors:                        77252 (count: 77252, min: 1, max: 1, avg: 1.00) [1 x 77252]

CPA algorithm statistics
------------------------
Number of iterations:            17173
Max size of waitlist:            24
Average size of waitlist:        9
Number of computed successors:   20289
Max successors for one state:    2
Number of times merged:          2619
Number of times stopped:         2996
Number of times breaked:         13

Total time for CPA algorithm:        10.558s (Max:     1.620s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      4.412s
  Time for transfer relation:         4.331s
  Time for merge operator:            1.281s
  Time for stop operator:             0.131s
  Time for adding to reached set:     0.111s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                  73 (count: 13, min: 1, max: 9, avg: 5.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.414s
  Counterexample analysis:                             0.285s (Max:     0.058s, Calls: 13)
    Refinement sat check:                              0.217s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.015s
  ARG update:                                          0.080s

Length of refined path (in blocks):                      67 (count: 13, min: 1, max: 9, avg: 5.15)
Number of affected states:                               52 (count: 13, min: 0, max: 8, avg: 4.00)
Length (states) of path with itp 'true':                  2 (count: 13, min: 0, max: 1, avg: 0.15)
Length (states) of path with itp non-trivial itp:        52 (count: 13, min: 0, max: 8, avg: 4.00)
Length (states) of path with itp 'false':                 2 (count: 13, min: 0, max: 1, avg: 0.15)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              41 (count: 13, min: 0, max: 7, avg: 3.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 1832
Max. size of reached set after ref.:  1127
Avg. size of reached set before ref.: 1408.38
Avg. size of reached set after ref.:  180.62

Total time for CEGAR algorithm:      11.035s
Time for refinements:                 0.476s
Average time for refinement:          0.036s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.700
  Visited lines:          2114
  Total lines:            2160
  Line coverage:          0.979
  Visited conditions:     216
  Total conditions:       236
  Condition coverage:     0.915

CPAchecker general statistics
-----------------------------
Number of program locations:     2427
Number of CFA edges:             2553
Number of relevant variables:    799
Number of functions:             30
Number of loops:                 10
Size of reached set:             1283
  Number of reached locations:   588 (24%)
    Avg states per location:     2
    Max states per location:     13 (at node N14)
  Number of reached functions:   21 (70%)
  Number of partitions:          1281
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1826 (before lines 2491-2834), Function bsd_decompress called from node N2331, stack depth 2 [71135794], stack [main, bsd_decompress]])
  Number of target states:       0

Time for analysis setup:          3.164s
  Time for loading CPAs:          0.643s
  Time for loading parser:        0.499s
  Time for CFA construction:      1.907s
    Time for parsing file(s):     0.546s
    Time for AST to CFA:          0.546s
    Time for CFA sanity check:    0.154s
    Time for post-processing:     0.514s
      Time for var class.:        0.269s
Time for Analysis:               11.036s
CPU time for analysis:           11.030s
Time for analyzing result:        0.001s
Total time for CPAchecker:       14.204s
Total CPU time for CPAchecker:   14.190s
Time for statistics:              0.079s

Time for Garbage Collector:       0.511s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     49MB (    46 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8116MB (  7740 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
