scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--mtd--devices--slram.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uwuu5ces/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_parse_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3724: Destroying the void* pointer register_device::__cil_tmp23 produces garbage or the memory pointed by it is unused: tmp___8 = register_device(devname, devstart, devlength); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            146 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            117 (80%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (20%)
  Times precision was empty:       39 (27%)
  Times precision was {false}:     25 (17%)
  Times result was cached:         55 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27 (18%)
  Times result was 'false':        48 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         316
  BDD entailment checks:           56
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       212
Number of predicates discovered:          3
Number of abstraction locations:          6
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         142
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.73
Number of irrelevant predicates:          59 (42%)
Number of preds handled by boolean abs:   31 (22%)
  Total number of models for allsat:      23
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.85

Time for post operator:                  0.716s
  Time for path formula creation:        0.685s
Time for strengthen operator:            0.027s
Time for prec operator:                  0.636s
  Time for abstraction:                  0.604s (Max:     0.055s, Count: 146)
    Boolean abstraction:                 0.126s
    Solving time:                        0.286s (Max:     0.038s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.077s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.298s

Number of path formula cache hits:   2724 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.646s

Total number of created targets for pointer analysis: 19
   Number of created targets for uf: *(char)* is 7
   Number of created targets for uf: *(struct_slram_mtd_list)* is 5


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          44 (count: 414, min: 0, max: 44, avg: 0.11)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.085s
Automaton transfers with branching:                0
Automaton transfer successors:                         5421 (count: 5421, min: 1, max: 1, avg: 1.00) [1 x 5421]

CPA algorithm statistics
------------------------
Number of iterations:            1657
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   1898
Max successors for one state:    2
Number of times merged:          130
Number of times stopped:         164
Number of times breaked:         5

Total time for CPA algorithm:         2.272s (Max:     0.610s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      0.785s
  Time for transfer relation:         1.229s
  Time for merge operator:            0.092s
  Time for stop operator:             0.038s
  Time for adding to reached set:     0.037s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  19 (count: 5, min: 2, max: 6, avg: 3.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.139s
  Counterexample analysis:                             0.082s (Max:     0.041s, Calls: 5)
    Refinement sat check:                              0.069s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.019s
  ARG update:                                          0.009s

Length of refined path (in blocks):                      18 (count: 5, min: 2, max: 6, avg: 3.60)
Number of affected states:                               13 (count: 5, min: 1, max: 5, avg: 2.60)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        13 (count: 5, min: 1, max: 5, avg: 2.60)
Length (states) of path with itp 'false':                 1 (count: 5, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               8 (count: 5, min: 0, max: 4, avg: 1.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 485
Max. size of reached set after ref.:  5
Avg. size of reached set before ref.: 243.80
Avg. size of reached set after ref.:  5.00

Total time for CEGAR algorithm:       2.435s
Time for refinements:                 0.163s
Average time for refinement:          0.032s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.462
  Visited lines:          1117
  Total lines:            1259
  Line coverage:          0.887
  Visited conditions:     56
  Total conditions:       76
  Condition coverage:     0.737

CPAchecker general statistics
-----------------------------
Number of program locations:     1403
Number of CFA edges:             1442
Number of relevant variables:    224
Number of functions:             26
Number of loops:                 5
Size of reached set:             493
  Number of reached locations:   192 (14%)
    Avg states per location:     2
    Max states per location:     10 (at node N794)
  Number of reached functions:   12 (46%)
  Number of partitions:          491
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N717 (before lines 3770-3786), Function init_slram called from node N801, stack depth 2 [5b444398], stack [main, init_slram]])
  Number of target states:       0

Time for analysis setup:          3.691s
  Time for loading CPAs:          0.839s
  Time for loading parser:        0.599s
  Time for CFA construction:      2.143s
    Time for parsing file(s):     0.668s
    Time for AST to CFA:          0.661s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.499s
      Time for var class.:        0.200s
Time for Analysis:                2.435s
CPU time for analysis:            2.440s
Time for analyzing result:        0.008s
Total time for CPAchecker:        6.130s
Total CPU time for CPAchecker:    6.120s
Time for statistics:              0.087s

Time for Garbage Collector:       0.161s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    33 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    25 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    33 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8086MB (  7711 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
