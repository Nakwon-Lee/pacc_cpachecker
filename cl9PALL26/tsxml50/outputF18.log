scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--video--n411.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5dbqbn57/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3665: Ignoring call via function pointer n411_init_board::__cil_tmp5 for which no suitable target was found in line: (*__cil_tmp5)(par, 164U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3665: Ignoring function call through function pointer *__cil_tmp5: (*__cil_tmp5)(par, 164U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3669: Ignoring call via function pointer n411_init_board::__cil_tmp8 for which no suitable target was found in line: (*__cil_tmp8)(par, 129U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3669: Ignoring function call through function pointer *__cil_tmp8: (*__cil_tmp8)(par, 129U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3680: Ignoring call via function pointer n411_init_board::__cil_tmp13 for which no suitable target was found in line: (*__cil_tmp13)(par, 163U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *__cil_tmp13: (*__cil_tmp13)(par, 163U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3687: Ignoring call via function pointer n411_init_board::__cil_tmp16 for which no suitable target was found in line: (*__cil_tmp16)(par, __cil_tmp19); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3687: Ignoring function call through function pointer *__cil_tmp16: (*__cil_tmp16)(par, __cil_tmp19); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            4 (57%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (43%)
  Times precision was empty:       5 (71%)
  Times precision was {false}:     1 (14%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1 (14%)
  Times result was 'false':        2 (29%)
Number of strengthen sat checks:   0
Number of coverage checks:         47
  BDD entailment checks:           1
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          2
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          1 (50%)
Number of preds handled by boolean abs:   1 (50%)
  Total number of models for allsat:      0
  Max number of models for allsat:        0
  Avg number of models for allsat:        0.00

Time for post operator:                  0.321s
  Time for path formula creation:        0.309s
Time for strengthen operator:            0.010s
Time for prec operator:                  0.051s
  Time for abstraction:                  0.049s (Max:     0.025s, Count: 7)
    Boolean abstraction:                 0.008s
    Solving time:                        0.015s (Max:     0.008s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.024s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.015s

Number of path formula cache hits:   2 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.300s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 21, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.056s
Automaton transfers with branching:                0
Automaton transfer successors:                         1024 (count: 1024, min: 1, max: 1, avg: 1.00) [1 x 1024]

CPA algorithm statistics
------------------------
Number of iterations:            226
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   253
Max successors for one state:    2
Number of times merged:          23
Number of times stopped:         24
Number of times breaked:         2

Total time for CPA algorithm:         0.657s (Max:     0.464s)
  Time for choose from waitlist:      0.002s
  Time for precision adjustment:      0.104s
  Time for transfer relation:         0.489s
  Time for merge operator:            0.031s
  Time for stop operator:             0.001s
  Time for adding to reached set:     0.006s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   3 (count: 2, min: 1, max: 2, avg: 1.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.032s
  Counterexample analysis:                             0.016s (Max:     0.009s, Calls: 2)
    Refinement sat check:                              0.004s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.001s
  ARG update:                                          0.002s

Length of refined path (in blocks):                       3 (count: 2, min: 1, max: 2, avg: 1.50)
Number of affected states:                                1 (count: 2, min: 0, max: 1, avg: 0.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 2, min: 0, max: 1, avg: 0.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 227
Max. size of reached set after ref.:  41
Avg. size of reached set before ref.: 133.00
Avg. size of reached set after ref.:  39.50

Total time for CEGAR algorithm:       0.708s
Time for refinements:                 0.050s
Average time for refinement:          0.025s
Max time for refinement:              0.032s

Code Coverage
-----------------------------
  Function coverage:      0.182
  Visited lines:          628
  Total lines:            855
  Line coverage:          0.735
  Visited conditions:     14
  Total conditions:       76
  Condition coverage:     0.184

CPAchecker general statistics
-----------------------------
Number of program locations:     986
Number of CFA edges:             1029
Number of relevant variables:    61
Number of functions:             22
Number of loops:                 2
Size of reached set:             41
  Number of reached locations:   41 (4%)
    Avg states per location:     1
    Max states per location:     1 (at node N201)
  Number of reached functions:   4 (18%)
  Number of partitions:          41
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.281s
  Time for loading CPAs:          0.792s
  Time for loading parser:        0.545s
  Time for CFA construction:      1.844s
    Time for parsing file(s):     0.630s
    Time for AST to CFA:          0.578s
    Time for CFA sanity check:    0.085s
    Time for post-processing:     0.373s
      Time for var class.:        0.146s
Time for Analysis:                0.708s
CPU time for analysis:            0.710s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.992s
Total CPU time for CPAchecker:    3.990s
Time for statistics:              0.051s

Time for Garbage Collector:       0.130s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 48MB (    46 MiB) max;     29MB (    28 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     24MB (    23 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
