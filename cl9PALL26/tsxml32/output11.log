scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--mwifiex--mwifiex_pcie.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r5igwlwt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1352 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1331 (98%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (2%)
  Times precision was empty:       765 (57%)
  Times precision was {false}:     105 (8%)
  Times result was cached:         430 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      52 (4%)
  Times result was 'false':        114 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         12120
  BDD entailment checks:           872
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       855
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         587
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.74
Number of irrelevant predicates:          371 (63%)
Number of preds handled by boolean abs:   52 (9%)
  Total number of models for allsat:      41
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.79

Time for post operator:                  6.951s
  Time for path formula creation:        6.791s
Time for strengthen operator:            0.279s
Time for prec operator:                  9.898s
  Time for abstraction:                  9.690s (Max:     0.952s, Count: 1352)
    Boolean abstraction:                 1.472s
    Solving time:                        7.054s (Max:     0.691s)
    Model enumeration time:              0.247s
    Time for BDD construction:           0.009s (Max:     0.002s)
Time for merge operator:                 2.025s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     7.301s

Number of path formula cache hits:   168406 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.670s

Total number of created targets for pointer analysis: 894
   Number of created targets for uf: *unsigned_short_int is 12
   Number of created targets for uf: *unsigned_char is 17
   Number of created targets for uf: *unsigned_int is 17


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          96 (count: 2511, min: 0, max: 18, avg: 0.04)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.541s
  Time for transition matches:                         0.295s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       247074 (count: 247074, min: 1, max: 1, avg: 1.00) [1 x 247074]

CPA algorithm statistics
------------------------
Number of iterations:            62579
Max size of waitlist:            28
Average size of waitlist:        14
Number of computed successors:   69123
Max successors for one state:    2
Number of times merged:          5624
Number of times stopped:         6305
Number of times breaked:         11

Total time for CPA algorithm:        23.968s (Max:     6.138s)
  Time for choose from waitlist:      0.081s
  Time for precision adjustment:     10.548s
  Time for transfer relation:        10.254s
  Time for merge operator:            2.222s
  Time for stop operator:             0.207s
  Time for adding to reached set:     0.217s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  44 (count: 11, min: 1, max: 6, avg: 4.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.629s
  Counterexample analysis:                             0.347s (Max:     0.058s, Calls: 11)
    Refinement sat check:                              0.294s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.002s
  ARG update:                                          0.238s

Length of refined path (in blocks):                      44 (count: 11, min: 1, max: 6, avg: 4.00)
Number of affected states:                               33 (count: 11, min: 0, max: 5, avg: 3.00)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        33 (count: 11, min: 0, max: 5, avg: 3.00)
Length (states) of path with itp 'false':                 0 (count: 11, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              23 (count: 11, min: 0, max: 4, avg: 2.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 7419
Max. size of reached set after ref.:  59
Avg. size of reached set before ref.: 5637.00
Avg. size of reached set after ref.:  58.73

Total time for CEGAR algorithm:      24.744s
Time for refinements:                 0.776s
Average time for refinement:          0.070s
Max time for refinement:              0.130s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          4638
  Total lines:            7559
  Line coverage:          0.614
  Visited conditions:     262
  Total conditions:       552
  Condition coverage:     0.475

CPAchecker general statistics
-----------------------------
Number of program locations:     8341
Number of CFA edges:             8737
Number of relevant variables:    1745
Number of functions:             68
Number of loops:                 18
Size of reached set:             1343
  Number of reached locations:   994 (12%)
    Avg states per location:     1
    Max states per location:     31 (at node N7759)
  Number of reached functions:   46 (68%)
  Number of partitions:          1343
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          5.571s
  Time for loading CPAs:          0.940s
  Time for loading parser:        0.490s
  Time for CFA construction:      4.024s
    Time for parsing file(s):     0.868s
    Time for AST to CFA:          1.412s
    Time for CFA sanity check:    0.458s
    Time for post-processing:     1.125s
      Time for var class.:        0.561s
Time for Analysis:               24.744s
CPU time for analysis:           24.750s
Total time for CPAchecker:       30.320s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.117s

Time for Garbage Collector:       1.472s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   118 MiB) max;     72MB (    69 MiB) avg;    136MB (   130 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           153MB (   146 MiB) max;    132MB (   126 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8122MB (  7746 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
