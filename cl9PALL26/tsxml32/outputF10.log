scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--mwifiex--mwifiex_pcie.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_42xyjgbk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1116 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1082 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (3%)
  Times precision was empty:       273 (24%)
  Times precision was {false}:     157 (14%)
  Times result was cached:         612 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      74 (7%)
  Times result was 'false':        205 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         13622
  BDD entailment checks:           480
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       855
Number of predicates discovered:          2
Number of abstraction locations:          17
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         843
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.65
Number of irrelevant predicates:          245 (29%)
Number of preds handled by boolean abs:   74 (9%)
  Total number of models for allsat:      64
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.86

Time for post operator:                  7.320s
  Time for path formula creation:        7.170s
Time for strengthen operator:            0.239s
Time for prec operator:                 11.962s
  Time for abstraction:                 11.779s (Max:     0.762s, Count: 1116)
    Boolean abstraction:                 1.599s
    Solving time:                        8.857s (Max:     0.672s)
    Model enumeration time:              0.310s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 2.264s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     9.167s

Number of path formula cache hits:   163761 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.992s

Total number of created targets for pointer analysis: 1421
   Number of created targets for uf: *unsigned_short_int is 17
   Number of created targets for uf: *unsigned_char is 16
   Number of created targets for uf: *unsigned_int is 37


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         135 (count: 2075, min: 0, max: 39, avg: 0.07)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.494s
Automaton transfers with branching:                0
Automaton transfer successors:                       273150 (count: 273150, min: 1, max: 1, avg: 1.00) [1 x 273150]

CPA algorithm statistics
------------------------
Number of iterations:            69396
Max size of waitlist:            34
Average size of waitlist:        15
Number of computed successors:   76800
Max successors for one state:    2
Number of times merged:          6571
Number of times stopped:         6983
Number of times breaked:         17

Total time for CPA algorithm:        26.732s (Max:     2.998s)
  Time for choose from waitlist:      0.084s
  Time for precision adjustment:     12.666s
  Time for transfer relation:        10.697s
  Time for merge operator:            2.485s
  Time for stop operator:             0.171s
  Time for adding to reached set:     0.218s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                  76 (count: 17, min: 1, max: 7, avg: 4.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.666s
  Counterexample analysis:                             0.440s (Max:     0.077s, Calls: 17)
    Refinement sat check:                              0.374s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.014s
  ARG update:                                          0.189s

Length of refined path (in blocks):                      76 (count: 17, min: 1, max: 7, avg: 4.47)
Number of affected states:                               59 (count: 17, min: 0, max: 6, avg: 3.47)
Length (states) of path with itp 'true':                  0 (count: 17, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        59 (count: 17, min: 0, max: 6, avg: 3.47)
Length (states) of path with itp 'false':                 0 (count: 17, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              43 (count: 17, min: 0, max: 5, avg: 2.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 6270
Max. size of reached set after ref.:  59
Avg. size of reached set before ref.: 3908.35
Avg. size of reached set after ref.:  58.82

Total time for CEGAR algorithm:      27.525s
Time for refinements:                 0.791s
Average time for refinement:          0.046s
Max time for refinement:              0.103s

Code Coverage
-----------------------------
  Function coverage:      0.809
  Visited lines:          7094
  Total lines:            7559
  Line coverage:          0.938
  Visited conditions:     480
  Total conditions:       552
  Condition coverage:     0.870

CPAchecker general statistics
-----------------------------
Number of program locations:     8341
Number of CFA edges:             8737
Number of relevant variables:    1745
Number of functions:             68
Number of loops:                 18
Size of reached set:             4171
  Number of reached locations:   1811 (22%)
    Avg states per location:     2
    Max states per location:     92 (at node N7759)
  Number of reached functions:   55 (81%)
  Number of partitions:          4171
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.510s
  Time for loading CPAs:          0.821s
  Time for loading parser:        0.566s
  Time for CFA construction:      4.010s
    Time for parsing file(s):     0.929s
    Time for AST to CFA:          1.308s
    Time for CFA sanity check:    0.486s
    Time for post-processing:     1.084s
      Time for var class.:        0.462s
Time for Analysis:               27.525s
CPU time for analysis:           27.520s
Time for analyzing result:        0.003s
Total time for CPAchecker:       33.040s
Total CPU time for CPAchecker:   33.020s
Time for statistics:              0.173s

Time for Garbage Collector:       1.469s (in 73 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                139MB (   132 MiB) max;     76MB (    73 MiB) avg;    150MB (   143 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           170MB (   162 MiB) max;    137MB (   130 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8198MB (  7818 MiB) max;   8129MB (  7753 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
