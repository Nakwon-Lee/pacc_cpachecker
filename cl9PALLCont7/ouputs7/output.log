scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--aic7xxx_old.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vyhchvc2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6297: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7137: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4763: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4621-4622: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4654: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 16086: Ignoring function call through function pointer *(sht->detect): (*(sht->detect))(sht); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4731: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6099: Ignoring function call through function pointer *(cur_patch->patch_func): tmp = (*(cur_patch->patch_func))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4763: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16167: Ignoring function call through function pointer *(sht->release): (*(sht->release))(shost); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            249115 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            249073 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (0%)
  Times precision was empty:       248967 (100%)
  Times precision was {false}:     33 (0%)
  Times result was cached:         79 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36 (0%)
  Times result was 'false':        43 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1426410
  BDD entailment checks:           133866
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       469
Number of predicates discovered:          5
Number of abstraction locations:          9
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         275
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 3.99
Number of irrelevant predicates:          166 (60%)
Number of preds handled by boolean abs:   73 (27%)
  Total number of models for allsat:      32
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.89

Time for post operator:                280.417s
  Time for path formula creation:      275.368s
Time for strengthen operator:            8.078s
Time for prec operator:                 44.154s
  Time for abstraction:                 35.576s (Max:     7.156s, Count: 249115)
    Boolean abstraction:                26.578s
    Solving time:                       33.154s (Max:     6.865s)
    Model enumeration time:              0.355s
    Time for BDD construction:           0.009s (Max:     0.004s)
Time for merge operator:                17.195s
Time for coverage check:                 0.192s
  Time for BDD entailment checks:        0.105s
Total time for SMT solver (w/o itp):    33.509s

Number of path formula cache hits:   12914042 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   189.405s

Total number of created targets for pointer analysis: 15144729
   Number of created targets for uf: *enum_ldv_24948 is 6
   Number of created targets for uf: *(struct_aic7xxx_host)* is 5
   Number of created targets for uf: *(struct_aic7xxx_scb_dma)* is 2
   Number of created targets for uf: *(struct_hw_scatterlist)* is 2
   Number of created targets for uf: *enum_ldv_24945 is 41
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 18
   Number of created targets for uf: *enum_ldv_24943 is 41
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *(unsigned_int)* is 16
   Number of created targets for uf: *unsigned_short_int_:_10 is 124
   Number of created targets for uf: *(struct_sequencer_patch)* is 10
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *unsigned_short_int is 161
   Number of created targets for uf: *signed_int is 43435
   Number of created targets for uf: *(char)* is 51
   Number of created targets for uf: *unsigned_char is 1277
   Number of created targets for uf: *signed_long_int is 289
   Number of created targets for uf: *(struct_list_head)* is 5
   Number of created targets for uf: *enum_ldv_24941 is 41
   Number of created targets for uf: *(struct_aic7xxx_hwscb)* is 135
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *char is 5
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         110 (count: 383258, min: 0, max: 29, avg: 0.00)
Time for BDD node cleanup:                             0.051s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.033s
  Time for transition matches:                         6.139s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     13470243 (count: 13470243, min: 1, max: 1, avg: 1.00) [1 x 13470243]

CPA algorithm statistics
------------------------
Number of iterations:            9214943
Max size of waitlist:            1721
Average size of waitlist:        464
Number of computed successors:   9996869
Max successors for one state:    2
Number of times merged:          646272
Number of times stopped:         780082
Number of times breaked:         6

Total time for CPA algorithm:       846.211s (Max:   299.864s)
  Time for choose from waitlist:      1.933s
  Time for precision adjustment:     91.557s
  Time for transfer relation:       695.556s
  Time for merge operator:           21.760s
  Time for stop operator:             6.048s
  Time for adding to reached set:    13.726s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  41 (count: 6, min: 3, max: 9, avg: 6.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  42.680s
  Counterexample analysis:                            11.802s (Max:     2.749s, Calls: 6)
    Refinement sat check:                             11.414s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.006s
  ARG update:                                         30.851s

Length of refined path (in blocks):                      35 (count: 6, min: 2, max: 9, avg: 5.83)
Number of affected states:                               29 (count: 6, min: 1, max: 8, avg: 4.83)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        29 (count: 6, min: 1, max: 8, avg: 4.83)
Length (states) of path with itp 'false':                 1 (count: 6, min: 0, max: 1, avg: 0.17)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              23 (count: 6, min: 0, max: 7, avg: 3.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 1348756
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 1348655.83
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     893.501s
Time for refinements:                47.290s
Average time for refinement:          7.881s
Max time for refinement:             15.586s

Code Coverage
-----------------------------
  Function coverage:      0.382
  Visited lines:          3157
  Total lines:            8518
  Line coverage:          0.371
  Visited conditions:     576
  Total conditions:       2660
  Condition coverage:     0.217

CPAchecker general statistics
-----------------------------
Number of program locations:     12050
Number of CFA edges:             14324
Number of relevant variables:    1915
Number of functions:             191
Number of loops:                 140
Size of reached set:             1124857
  Size of final wait list        1712

Time for analysis setup:          6.521s
  Time for loading CPAs:          1.123s
  Time for loading parser:        0.490s
  Time for CFA construction:      4.820s
    Time for parsing file(s):     1.076s
    Time for AST to CFA:          1.580s
    Time for CFA sanity check:    0.440s
    Time for post-processing:     1.470s
      Time for var class.:        0.762s
Time for Analysis:              893.501s
CPU time for analysis:          893.470s
Total time for CPAchecker:      900.025s
Total CPU time for CPAchecker:  899.980s
Time for statistics:              6.050s

Time for Garbage Collector:      93.113s (in 451 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2869MB (  2736 MiB) max;   1343MB (  1281 MiB) avg;   2946MB (  2810 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2910MB (  2775 MiB) max;   2096MB (  1999 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8369MB (  7981 MiB) max;   8253MB (  7871 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
