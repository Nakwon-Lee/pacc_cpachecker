scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rsxjv3ft/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            93970 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            55288 (59%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38682 (41%)
  Times precision was empty:       596 (1%)
  Times precision was {false}:     8495 (9%)
  Times result was cached:         79021 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5858 (6%)
  Times result was 'false':        41990 (45%)
Number of strengthen sat checks:   0
Number of coverage checks:         648996
  BDD entailment checks:           30392
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       226
Number of predicates discovered:          7
Number of abstraction locations:          9
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         93384
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 6.51
Number of irrelevant predicates:          38685 (41%)
Number of preds handled by boolean abs:   5868 (6%)
  Total number of models for allsat:      4948
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.84

Time for post operator:                 70.042s
  Time for path formula creation:       68.797s
Time for strengthen operator:            2.980s
Time for prec operator:                257.169s
  Time for abstraction:                254.279s (Max:     2.305s, Count: 93970)
    Boolean abstraction:                97.188s
    Solving time:                      144.988s (Max:     0.214s)
    Model enumeration time:              6.130s
    Time for BDD construction:           0.220s (Max:     0.008s)
Time for merge operator:                21.326s
Time for coverage check:                 0.097s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):   151.118s

Number of path formula cache hits:   3448933 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    46.120s

Total number of created targets for pointer analysis: 814022
   Number of created targets for uf: *unsigned_char is 47
   Number of created targets for uf: *unsigned_int is 13


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10789 (count: 117099, min: 0, max: 614, avg: 0.09)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.565s
  Time for transition matches:                         2.015s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.037s
Automaton transfers with branching:                0
Automaton transfer successors:                      4171922 (count: 4171922, min: 1, max: 1, avg: 1.00) [1 x 4171922]

CPA algorithm statistics
------------------------
Number of iterations:            2877357
Max size of waitlist:            40809
Average size of waitlist:        22646
Number of computed successors:   3296441
Max successors for one state:    2
Number of times merged:          309302
Number of times stopped:         339690
Number of times breaked:         244

Total time for CPA algorithm:       421.073s (Max:   160.804s)
  Time for choose from waitlist:      1.182s
  Time for precision adjustment:    274.235s
  Time for transfer relation:       106.403s
  Time for merge operator:           25.035s
  Time for stop operator:             2.784s
  Time for adding to reached set:     5.359s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   244
Avg. length of target path (in blocks):                3224 (count: 244, min: 2, max: 22, avg: 13.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.146s
  Counterexample analysis:                            18.637s (Max:     0.249s, Calls: 244)
    Refinement sat check:                             15.875s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.075s
  ARG update:                                          0.102s

Length of refined path (in blocks):                    3224 (count: 244, min: 2, max: 22, avg: 13.21)
Number of affected states:                              281 (count: 244, min: 1, max: 4, avg: 1.15)
Length (states) of path with itp 'true':               2699 (count: 244, min: 0, max: 20, avg: 11.06)
Length (states) of path with itp non-trivial itp:       281 (count: 244, min: 1, max: 4, avg: 1.15)
Length (states) of path with itp 'false':                 0 (count: 244, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 244, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              37 (count: 244, min: 0, max: 3, avg: 0.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                244
Number of successful refinements:     244
Number of failed refinements:         0
Max. size of reached set before ref.: 1884570
Max. size of reached set after ref.:  1884547
Avg. size of reached set before ref.: 861425.33
Avg. size of reached set after ref.:  861365.47

Total time for CEGAR algorithm:     895.138s
Time for refinements:               285.470s
Average time for refinement:          1.169s
Max time for refinement:              3.773s

Code Coverage
-----------------------------
  Function coverage:      0.120
  Visited lines:          1507
  Total lines:            5886
  Line coverage:          0.256
  Visited conditions:     228
  Total conditions:       1648
  Condition coverage:     0.138

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             2900155
  Size of final wait list        37062

Time for analysis setup:          5.213s
  Time for loading CPAs:          0.811s
  Time for loading parser:        0.500s
  Time for CFA construction:      3.809s
    Time for parsing file(s):     0.683s
    Time for AST to CFA:          1.299s
    Time for CFA sanity check:    0.394s
    Time for post-processing:     1.241s
      Time for var class.:        0.594s
Time for Analysis:              895.138s
CPU time for analysis:          895.010s
Total time for CPAchecker:      900.355s
Total CPU time for CPAchecker:  900.190s
Time for statistics:             15.450s

Time for Garbage Collector:      60.197s (in 345 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3308MB (  3155 MiB) max;   1586MB (  1512 MiB) avg;   3419MB (  3261 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          4637MB (  4422 MiB) max;   2399MB (  2288 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8479MB (  8086 MiB) max;   8351MB (  7964 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
