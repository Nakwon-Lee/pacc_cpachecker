scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--isdn--mISDN--l1oip.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5v2gxsym/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5354: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5357: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5360: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7396: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6166-6167: Function pointer *(socket->ops->bind) with type int (*)(struct socket *, struct sockaddr *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function send_sig to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5623: Ignoring function call through function pointer *(ch->recv): tmp = (*(ch->recv))(ch->peer, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_ch_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memchr_inv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kernel_sendmsg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_freedchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_freebchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_initdchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_create_on_node to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wake_up_process to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_initbchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5538 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5344 (96%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         194 (4%)
  Times precision was empty:       3058 (55%)
  Times precision was {false}:     193 (3%)
  Times result was cached:         2026 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      261 (5%)
  Times result was 'false':        874 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         50074
  BDD entailment checks:           3312
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       147
Number of predicates discovered:          4
Number of abstraction locations:          12
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         5506
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 12.13
Number of irrelevant predicates:          3702 (67%)
Number of preds handled by boolean abs:   428 (8%)
  Total number of models for allsat:      238
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.91

Time for post operator:                 11.636s
  Time for path formula creation:       11.457s
Time for strengthen operator:            0.274s
Time for prec operator:                 22.832s
  Time for abstraction:                 22.488s (Max:     0.322s, Count: 5538)
    Boolean abstraction:                11.121s
    Solving time:                       18.427s (Max:     0.299s)
    Model enumeration time:              0.394s
    Time for BDD construction:           0.034s (Max:     0.004s)
Time for merge operator:                 2.818s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.065s
Total time for SMT solver (w/o itp):    18.821s

Number of path formula cache hits:   240969 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.248s

Total number of created targets for pointer analysis: 148667
   Number of created targets for uf: *unsigned_short_int is 25
   Number of created targets for uf: *(void)* is 25
   Number of created targets for uf: *signed_int is 166
   Number of created targets for uf: *unsigned_char is 449
   Number of created targets for uf: *(struct_list_head)* is 27
   Number of created targets for uf: *(struct_task_struct)* is 19
   Number of created targets for uf: *(struct_socket)* is 157
   Number of created targets for uf: *unsigned_int is 7795
   Number of created targets for uf: *unsigned_long_int is 106


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         519 (count: 9234, min: 0, max: 40, avg: 0.06)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.605s
  Time for transition matches:                         0.306s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       273253 (count: 273253, min: 1, max: 1, avg: 1.00) [1 x 273253]

CPA algorithm statistics
------------------------
Number of iterations:            171113
Max size of waitlist:            82
Average size of waitlist:        37
Number of computed successors:   198654
Max successors for one state:    2
Number of times merged:          23381
Number of times stopped:         26245
Number of times breaked:         17

Total time for CPA algorithm:        44.712s (Max:     8.063s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:     24.229s
  Time for transfer relation:        15.396s
  Time for merge operator:            3.356s
  Time for stop operator:             0.373s
  Time for adding to reached set:     0.401s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 129 (count: 17, min: 5, max: 9, avg: 7.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.981s
  Counterexample analysis:                             1.476s (Max:     0.154s, Calls: 17)
    Refinement sat check:                              1.338s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.006s
  ARG update:                                          0.479s

Length of refined path (in blocks):                     129 (count: 17, min: 5, max: 9, avg: 7.59)
Number of affected states:                              112 (count: 17, min: 4, max: 8, avg: 6.59)
Length (states) of path with itp 'true':                  0 (count: 17, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       112 (count: 17, min: 4, max: 8, avg: 6.59)
Length (states) of path with itp 'false':                 0 (count: 17, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              95 (count: 17, min: 3, max: 7, avg: 5.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 19058
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 9984.24
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      46.973s
Time for refinements:                 2.259s
Average time for refinement:          0.132s
Max time for refinement:              0.280s

Code Coverage
-----------------------------
  Function coverage:      0.367
  Visited lines:          1498
  Total lines:            2451
  Line coverage:          0.611
  Visited conditions:     226
  Total conditions:       574
  Condition coverage:     0.394

CPAchecker general statistics
-----------------------------
Number of program locations:     3224
Number of CFA edges:             3556
Number of relevant variables:    379
Number of functions:             98
Number of loops:                 18
Size of reached set:             1940
  Number of reached locations:   624 (19%)
    Avg states per location:     3
    Max states per location:     21 (at node N2199)
  Number of reached functions:   36 (37%)
  Number of partitions:          1940
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.681s
  Time for loading CPAs:          0.850s
  Time for loading parser:        0.639s
  Time for CFA construction:      3.049s
    Time for parsing file(s):     0.778s
    Time for AST to CFA:          1.120s
    Time for CFA sanity check:    0.190s
    Time for post-processing:     0.755s
      Time for var class.:        0.352s
Time for Analysis:               46.974s
CPU time for analysis:           46.980s
Time for analyzing result:        0.002s
Total time for CPAchecker:       51.665s
Total CPU time for CPAchecker:   51.650s
Time for statistics:              0.095s

Time for Garbage Collector:       1.737s (in 116 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     72MB (    69 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8125MB (  7749 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
