scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/eca-rers2012/Problem02_label09_true-unreach-call_false-termination.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dw6z663k/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6 (55%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (45%)
  Times precision was empty:       2 (18%)
  Times precision was {false}:     4 (36%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (45%)
  Times result was 'false':        4 (36%)
Number of strengthen sat checks:   0
Number of coverage checks:         9122
  BDD entailment checks:           10
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       990
Number of predicates discovered:          5
Number of abstraction locations:          2
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         24
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.67
Number of irrelevant predicates:          4 (17%)
Number of preds handled by boolean abs:   20 (83%)
  Total number of models for allsat:      22
  Max number of models for allsat:        7
  Avg number of models for allsat:        4.40

Time for post operator:                  1.582s
  Time for path formula creation:        1.529s
Time for strengthen operator:            0.111s
Time for prec operator:                  0.497s
  Time for abstraction:                  0.410s (Max:     0.094s, Count: 11)
    Boolean abstraction:                 0.179s
    Solving time:                        0.118s (Max:     0.035s)
    Model enumeration time:              0.056s
    Time for BDD construction:           0.014s (Max:     0.007s)
Time for merge operator:                 0.199s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.174s

Number of path formula cache hits:   2887 (23%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.492s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               255
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          52 (count: 89, min: 0, max: 20, avg: 0.58)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.190s
Automaton transfers with branching:                0
Automaton transfer successors:                        11497 (count: 11777, min: 0, max: 1, avg: 0.98) [0 x 280, 1 x 11497]

CPA algorithm statistics
------------------------
Number of iterations:            6277
Max size of waitlist:            16
Average size of waitlist:        11
Number of computed successors:   10850
Max successors for one state:    2
Number of times merged:          4556
Number of times stopped:         4557
Number of times breaked:         1

Total time for CPA algorithm:         4.620s (Max:     2.983s)
  Time for choose from waitlist:      0.084s
  Time for precision adjustment:      0.901s
  Time for transfer relation:         2.515s
  Time for merge operator:            0.670s
  Time for stop operator:             0.128s
  Time for adding to reached set:     0.094s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.115s
  Counterexample analysis:                             0.047s (Max:     0.047s, Calls: 1)
    Refinement sat check:                              0.030s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.003s
  ARG update:                                          0.028s

Length of refined path (in blocks):                       2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of affected states:                                1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 1, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 1, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 1114
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1114.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.773s
Time for refinements:                 0.152s
Average time for refinement:          0.152s
Max time for refinement:              0.152s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          509
  Total lines:            509
  Line coverage:          1.000
  Visited conditions:     1992
  Total conditions:       1992
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     1514
Number of CFA edges:             2509
Number of relevant variables:    9
Number of functions:             2
Number of loops:                 1
Size of reached set:             5179
  Number of reached locations:   1297 (86%)
    Avg states per location:     3
    Max states per location:     4 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          5176
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1628 (before lines 606-616), Function main called from node N1625, stack depth 1 [fd46303], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.920s
  Time for loading CPAs:          0.790s
  Time for loading parser:        0.790s
  Time for CFA construction:      2.114s
    Time for parsing file(s):     0.606s
    Time for AST to CFA:          0.608s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.533s
      Time for var class.:        0.283s
Time for Analysis:                4.773s
CPU time for analysis:            4.770s
Time for analyzing result:        0.013s
Total time for CPAchecker:        8.699s
Total CPU time for CPAchecker:    8.690s
Time for statistics:              0.228s

Time for Garbage Collector:       0.185s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8091MB (  7716 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
