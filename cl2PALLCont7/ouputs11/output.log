scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4j06w1hj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            68679 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            13310 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         55369 (81%)
  Times precision was empty:       120 (0%)
  Times precision was {false}:     14724 (21%)
  Times result was cached:         52524 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1311 (2%)
  Times result was 'false':        59356 (86%)
Number of strengthen sat checks:   0
Number of coverage checks:         513172
  BDD entailment checks:           7386
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          69
Number of abstraction locations:          6
Max number of predicates per location:    64
Avg number of predicates per location:    14
Total predicates per abstraction:         124198
Max number of predicates per abstraction: 64
Avg number of predicates per abstraction: 7.75
Number of irrelevant predicates:          69345 (56%)
Number of preds handled by boolean abs:   8199 (7%)
  Total number of models for allsat:      1285
  Max number of models for allsat:        3
  Avg number of models for allsat:        0.98

Time for post operator:                508.027s
  Time for path formula creation:      503.932s
Time for strengthen operator:            5.718s
Time for prec operator:                111.589s
  Time for abstraction:                106.593s (Max:     1.051s, Count: 68679)
    Boolean abstraction:                10.065s
    Solving time:                       27.528s (Max:     0.098s)
    Model enumeration time:              0.830s
    Time for BDD construction:           0.143s (Max:     0.019s)
Time for merge operator:                50.446s
Time for coverage check:                 0.103s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):    28.358s

Number of path formula cache hits:   1761108 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   293.460s

Total number of created targets for pointer analysis: 366155
   Number of created targets for uf: *unsigned_short_int is 274
   Number of created targets for uf: *signed_long_int is 1729
   Number of created targets for uf: *unsigned_long_int is 3037


Number of BDD nodes:                               4900
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13665 (count: 108370, min: 0, max: 343, avg: 0.13)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.410s
  Time for transition matches:                         4.820s
  Time for transition assertions:                      0.025s
  Time for transition actions:                         0.081s
Automaton transfers with branching:                0
Automaton transfer successors:                      3866701 (count: 3866701, min: 1, max: 1, avg: 1.00) [1 x 3866701]

CPA algorithm statistics
------------------------
Number of iterations:            2802889
Max size of waitlist:            793
Average size of waitlist:        257
Number of computed successors:   3122658
Max successors for one state:    2
Number of times merged:          252893
Number of times stopped:         255828
Number of times breaked:         354

Total time for CPA algorithm:       788.291s (Max:   608.763s)
  Time for choose from waitlist:      1.454s
  Time for precision adjustment:    137.705s
  Time for transfer relation:       569.333s
  Time for merge operator:           55.368s
  Time for stop operator:             4.496s
  Time for adding to reached set:     8.931s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   354
Avg. length of target path (in blocks):                2423 (count: 354, min: 2, max: 9, avg: 6.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  71.196s
  Counterexample analysis:                            66.041s (Max:     0.436s, Calls: 354)
    Refinement sat check:                             57.459s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.103s
  Precision update:                                    0.109s
  ARG update:                                          3.362s

Length of refined path (in blocks):                    2249 (count: 354, min: 2, max: 9, avg: 6.35)
Number of affected states:                              946 (count: 354, min: 1, max: 8, avg: 2.67)
Length (states) of path with itp 'true':                949 (count: 354, min: 0, max: 5, avg: 2.68)
Length (states) of path with itp non-trivial itp:       946 (count: 354, min: 1, max: 8, avg: 2.67)
Length (states) of path with itp 'false':                60 (count: 354, min: 0, max: 1, avg: 0.17)
Different non-trivial interpolants along paths:           4 (count: 354, min: 0, max: 2, avg: 0.01)
Equal non-trivial interpolants along paths:             588 (count: 354, min: 0, max: 7, avg: 1.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                354
Number of successful refinements:     354
Number of failed refinements:         0
Max. size of reached set before ref.: 207403
Max. size of reached set after ref.:  144342
Avg. size of reached set before ref.: 58128.84
Avg. size of reached set after ref.:  54770.99

Total time for CEGAR algorithm:     894.405s
Time for refinements:                89.953s
Average time for refinement:          0.254s
Max time for refinement:              1.013s

Code Coverage
-----------------------------
  Function coverage:      0.698
  Visited lines:          2819
  Total lines:            3065
  Line coverage:          0.920
  Visited conditions:     790
  Total conditions:       902
  Condition coverage:     0.876

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             1618796
  Size of final wait list        790

Time for analysis setup:          5.828s
  Time for loading CPAs:          0.908s
  Time for loading parser:        0.744s
  Time for CFA construction:      4.069s
    Time for parsing file(s):     0.978s
    Time for AST to CFA:          1.263s
    Time for CFA sanity check:    0.290s
    Time for post-processing:     1.319s
      Time for var class.:        0.534s
Time for Analysis:              894.405s
CPU time for analysis:          894.340s
Total time for CPAchecker:      900.238s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              7.260s

Time for Garbage Collector:      52.829s (in 574 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2537MB (  2419 MiB) max;    973MB (   928 MiB) avg;   2607MB (  2487 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:          2732MB (  2606 MiB) max;   1394MB (  1329 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8347MB (  7960 MiB) max;   8289MB (  7905 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
