scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8wvzgq9m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            64806 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            29315 (45%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35491 (55%)
  Times precision was empty:       3821 (6%)
  Times precision was {false}:     4311 (7%)
  Times result was cached:         54682 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1992 (3%)
  Times result was 'false':        40105 (62%)
Number of strengthen sat checks:   0
Number of coverage checks:         767033
  BDD entailment checks:           16237
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1310
Number of predicates discovered:          8
Number of abstraction locations:          17
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         74312
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.79
Number of irrelevant predicates:          48534 (65%)
Number of preds handled by boolean abs:   2099 (3%)
  Total number of models for allsat:      1201
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.60

Time for post operator:                 42.924s
  Time for path formula creation:       40.165s
Time for strengthen operator:            4.124s
Time for prec operator:                321.428s
  Time for abstraction:                317.630s (Max:    14.113s, Count: 64806)
    Boolean abstraction:               107.509s
    Solving time:                      183.450s (Max:    12.405s)
    Model enumeration time:             17.277s
    Time for BDD construction:           0.084s (Max:     0.006s)
Time for merge operator:                 6.791s
Time for coverage check:                 0.139s
  Time for BDD entailment checks:        0.080s
Total time for SMT solver (w/o itp):   200.731s

Number of path formula cache hits:   4784544 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    22.057s

Total number of created targets for pointer analysis: 24081
   Number of created targets for uf: *signed_int is 9
   Number of created targets for uf: *unsigned_char is 97
   Number of created targets for uf: *char is 98
   Number of created targets for uf: *unsigned_int is 19


Number of BDD nodes:                               225
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3252 (count: 57842, min: 0, max: 119, avg: 0.06)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.631s
  Time for transition matches:                         3.678s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.059s
Automaton transfers with branching:                0
Automaton transfer successors:                      4844878 (count: 4844878, min: 1, max: 1, avg: 1.00) [1 x 4844878]

CPA algorithm statistics
------------------------
Number of iterations:            3097543
Max size of waitlist:            952
Average size of waitlist:        336
Number of computed successors:   3537484
Max successors for one state:    2
Number of times merged:          375398
Number of times stopped:         387792
Number of times breaked:         1752

Total time for CPA algorithm:       485.755s (Max:    40.320s)
  Time for choose from waitlist:      1.344s
  Time for precision adjustment:    346.899s
  Time for transfer relation:       103.917s
  Time for merge operator:           12.137s
  Time for stop operator:             4.088s
  Time for adding to reached set:     6.984s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1752
Avg. length of target path (in blocks):                7620 (count: 1752, min: 2, max: 10, avg: 4.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 110.960s
  Counterexample analysis:                           100.794s (Max:     0.326s, Calls: 1752)
    Refinement sat check:                             86.989s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.032s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.156s
  Precision update:                                    0.236s
  ARG update:                                          8.161s

Length of refined path (in blocks):                    7588 (count: 1752, min: 2, max: 10, avg: 4.33)
Number of affected states:                             2067 (count: 1752, min: 1, max: 4, avg: 1.18)
Length (states) of path with itp 'true':               3769 (count: 1752, min: 0, max: 7, avg: 2.15)
Length (states) of path with itp non-trivial itp:      2067 (count: 1752, min: 1, max: 4, avg: 1.18)
Length (states) of path with itp 'false':                13 (count: 1752, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           3 (count: 1752, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:             312 (count: 1752, min: 0, max: 3, avg: 0.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1752
Number of successful refinements:     1752
Number of failed refinements:         0
Max. size of reached set before ref.: 350587
Max. size of reached set after ref.:  349627
Avg. size of reached set before ref.: 94037.97
Avg. size of reached set after ref.:  92395.34

Total time for CEGAR algorithm:     892.740s
Time for refinements:               268.260s
Average time for refinement:          0.153s
Max time for refinement:              1.582s

Code Coverage
-----------------------------
  Function coverage:      0.723
  Visited lines:          3945
  Total lines:            4539
  Line coverage:          0.869
  Visited conditions:     874
  Total conditions:       1110
  Condition coverage:     0.787

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             231705
  Number of reached locations:   2506 (41%)
    Avg states per location:     92
    Max states per location:     5164 (at node N4935)
  Number of reached functions:   115 (72%)
  Number of partitions:          231703
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4837 (before line 11419), Function main called from node N4575, stack depth 1 [43f03c23], stack [main]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          7.512s
  Time for loading CPAs:          1.058s
  Time for loading parser:        0.772s
  Time for CFA construction:      5.497s
    Time for parsing file(s):     1.309s
    Time for AST to CFA:          2.148s
    Time for CFA sanity check:    0.406s
    Time for post-processing:     1.363s
      Time for var class.:        0.747s
Time for Analysis:              892.740s
CPU time for analysis:          892.680s
Total time for CPAchecker:      900.257s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              2.077s

Time for Garbage Collector:      43.331s (in 1056 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                642MB (   612 MiB) max;    295MB (   281 MiB) avg;    666MB (   635 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           661MB (   630 MiB) max;    431MB (   411 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8422MB (  8032 MiB) max;   8297MB (  7912 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
