scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--misc--rotary_encoder_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_10i1uv8j/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3 (50%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (50%)
  Times precision was empty:       2 (33%)
  Times precision was {false}:     2 (33%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2 (33%)
  Times result was 'false':        2 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         159
  BDD entailment checks:           1
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       302
Number of predicates discovered:          2
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          2 (50%)
Number of preds handled by boolean abs:   2 (50%)
  Total number of models for allsat:      2
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.802s
  Time for path formula creation:        0.771s
Time for strengthen operator:            0.039s
Time for prec operator:                  0.254s
  Time for abstraction:                  0.230s (Max:     0.172s, Count: 6)
    Boolean abstraction:                 0.147s
    Solving time:                        0.124s (Max:     0.121s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.018s (Max:     0.018s)
Time for merge operator:                 0.119s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.129s

Number of path formula cache hits:   833 (33%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.752s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 31, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.104s
Automaton transfers with branching:                0
Automaton transfer successors:                         2471 (count: 2475, min: 0, max: 1, avg: 1.00) [0 x 4, 1 x 2471]

CPA algorithm statistics
------------------------
Number of iterations:            689
Max size of waitlist:            17
Average size of waitlist:        7
Number of computed successors:   776
Max successors for one state:    2
Number of times merged:          79
Number of times stopped:         80
Number of times breaked:         1

Total time for CPA algorithm:         1.769s (Max:     1.004s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      0.366s
  Time for transfer relation:         1.187s
  Time for merge operator:            0.131s
  Time for stop operator:             0.009s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.052s
  Counterexample analysis:                             0.017s (Max:     0.017s, Calls: 1)
    Refinement sat check:                              0.011s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.009s
  ARG update:                                          0.010s

Length of refined path (in blocks):                       2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of affected states:                                1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 1, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 1, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 263
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 263.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.858s
Time for refinements:                 0.081s
Average time for refinement:          0.081s
Max time for refinement:              0.081s

Code Coverage
-----------------------------
  Function coverage:      0.750
  Visited lines:          1100
  Total lines:            1123
  Line coverage:          0.980
  Visited conditions:     82
  Total conditions:       90
  Condition coverage:     0.911

CPAchecker general statistics
-----------------------------
Number of program locations:     1275
Number of CFA edges:             1323
Number of relevant variables:    229
Number of functions:             24
Number of loops:                 1
Size of reached set:             435
  Number of reached locations:   283 (22%)
    Avg states per location:     1
    Max states per location:     6 (at node N46)
  Number of reached functions:   18 (75%)
  Number of partitions:          404
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N405 (exit of function rotary_encoder_probe in lines 2317-2808), Function rotary_encoder_probe called from node N861, stack depth 2 [482d776b], stack [main, rotary_encoder_probe], ABS3])
  Number of target states:       0

Time for analysis setup:          4.410s
  Time for loading CPAs:          1.049s
  Time for loading parser:        0.796s
  Time for CFA construction:      2.426s
    Time for parsing file(s):     0.859s
    Time for AST to CFA:          0.750s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.497s
      Time for var class.:        0.232s
Time for Analysis:                1.859s
CPU time for analysis:            1.860s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.274s
Total CPU time for CPAchecker:    6.260s
Time for statistics:              0.088s

Time for Garbage Collector:       0.149s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 54MB (    51 MiB) max;     31MB (    29 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     25MB (    24 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
