scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--misc--apds9802als.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_su1_wco2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2043: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2049: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2093: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2099: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 2102: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_runtime_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            34 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (50%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (50%)
  Times precision was empty:       7 (21%)
  Times precision was {false}:     10 (29%)
  Times result was cached:         10 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7 (21%)
  Times result was 'false':        15 (44%)
Number of strengthen sat checks:   0
Number of coverage checks:         103
  BDD entailment checks:           9
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       99
Number of predicates discovered:          2
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         27
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.59
Number of irrelevant predicates:          17 (63%)
Number of preds handled by boolean abs:   7 (26%)
  Total number of models for allsat:      7
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.646s
  Time for path formula creation:        0.609s
Time for strengthen operator:            0.007s
Time for prec operator:                  0.232s
  Time for abstraction:                  0.223s (Max:     0.040s, Count: 34)
    Boolean abstraction:                 0.059s
    Solving time:                        0.047s (Max:     0.011s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.013s (Max:     0.013s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.049s

Number of path formula cache hits:   911 (43%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.563s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 120, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.072s
Automaton transfers with branching:                0
Automaton transfer successors:                         2087 (count: 2087, min: 1, max: 1, avg: 1.00) [1 x 2087]

CPA algorithm statistics
------------------------
Number of iterations:            743
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   822
Max successors for one state:    2
Number of times merged:          47
Number of times stopped:         55
Number of times breaked:         2

Total time for CPA algorithm:         1.461s (Max:     0.668s)
  Time for choose from waitlist:      0.003s
  Time for precision adjustment:      0.338s
  Time for transfer relation:         0.972s
  Time for merge operator:            0.066s
  Time for stop operator:             0.019s
  Time for adding to reached set:     0.012s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.069s
  Counterexample analysis:                             0.045s (Max:     0.035s, Calls: 2)
    Refinement sat check:                              0.014s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.001s
  ARG update:                                          0.007s

Length of refined path (in blocks):                       5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of affected states:                                3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               1 (count: 2, min: 0, max: 1, avg: 0.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 341
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 206.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.563s
Time for refinements:                 0.101s
Average time for refinement:          0.050s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.439
  Visited lines:          747
  Total lines:            1144
  Line coverage:          0.653
  Visited conditions:     42
  Total conditions:       84
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     1358
Number of CFA edges:             1415
Number of relevant variables:    206
Number of functions:             41
Number of loops:                 3
Size of reached set:             347
  Number of reached locations:   186 (14%)
    Avg states per location:     1
    Max states per location:     8 (at node N945)
  Number of reached functions:   18 (44%)
  Number of partitions:          347
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.437s
  Time for loading CPAs:          0.984s
  Time for loading parser:        0.739s
  Time for CFA construction:      2.537s
    Time for parsing file(s):     0.845s
    Time for AST to CFA:          0.807s
    Time for CFA sanity check:    0.168s
    Time for post-processing:     0.534s
      Time for var class.:        0.242s
Time for Analysis:                1.564s
CPU time for analysis:            1.550s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.009s
Total CPU time for CPAchecker:    6.000s
Time for statistics:              0.107s

Time for Garbage Collector:       0.140s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 52MB (    49 MiB) max;     31MB (    29 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8075MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
