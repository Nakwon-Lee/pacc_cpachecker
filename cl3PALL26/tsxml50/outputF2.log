scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-vp7045.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uqrpflpk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            509 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            343 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         166 (33%)
  Times precision was empty:       60 (12%)
  Times precision was {false}:     63 (12%)
  Times result was cached:         258 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      128 (25%)
  Times result was 'false':        141 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         2111
  BDD entailment checks:           201
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       483
Number of predicates discovered:          3
Number of abstraction locations:          4
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         449
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.35
Number of irrelevant predicates:          165 (37%)
Number of preds handled by boolean abs:   128 (29%)
  Total number of models for allsat:      128
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.407s
  Time for path formula creation:        3.267s
Time for strengthen operator:            0.118s
Time for prec operator:                  4.076s
  Time for abstraction:                  3.918s (Max:     0.731s, Count: 509)
    Boolean abstraction:                 2.282s
    Solving time:                        2.366s (Max:     0.658s)
    Model enumeration time:              0.130s
    Time for BDD construction:           0.046s (Max:     0.013s)
Time for merge operator:                 0.319s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     2.496s

Number of path formula cache hits:   10402 (38%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.051s

Total number of created targets for pointer analysis: 1015
   Number of created targets for uf: *unsigned_char is 6


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         214 (count: 1407, min: 0, max: 54, avg: 0.15)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.351s
Automaton transfers with branching:                0
Automaton transfer successors:                        26951 (count: 26951, min: 1, max: 1, avg: 1.00) [1 x 26951]

CPA algorithm statistics
------------------------
Number of iterations:            10964
Max size of waitlist:            26
Average size of waitlist:        18
Number of computed successors:   12321
Max successors for one state:    2
Number of times merged:          955
Number of times stopped:         1156
Number of times breaked:         25

Total time for CPA algorithm:        10.370s (Max:     3.008s)
  Time for choose from waitlist:      0.055s
  Time for precision adjustment:      4.367s
  Time for transfer relation:         4.944s
  Time for merge operator:            0.488s
  Time for stop operator:             0.115s
  Time for adding to reached set:     0.131s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                  86 (count: 25, min: 2, max: 4, avg: 3.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.781s
  Counterexample analysis:                             0.635s (Max:     0.041s, Calls: 25)
    Refinement sat check:                              0.536s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.027s
  ARG update:                                          0.058s

Length of refined path (in blocks):                      86 (count: 25, min: 2, max: 4, avg: 3.44)
Number of affected states:                               37 (count: 25, min: 1, max: 2, avg: 1.48)
Length (states) of path with itp 'true':                 24 (count: 25, min: 0, max: 1, avg: 0.96)
Length (states) of path with itp non-trivial itp:        37 (count: 25, min: 1, max: 2, avg: 1.48)
Length (states) of path with itp 'false':                 0 (count: 25, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              12 (count: 25, min: 0, max: 1, avg: 0.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 3232
Max. size of reached set after ref.:  3120
Avg. size of reached set before ref.: 1967.96
Avg. size of reached set after ref.:  1826.48

Total time for CEGAR algorithm:      11.450s
Time for refinements:                 1.001s
Average time for refinement:          0.040s
Max time for refinement:              0.063s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          1725
  Total lines:            2193
  Line coverage:          0.787
  Visited conditions:     86
  Total conditions:       144
  Condition coverage:     0.597

CPAchecker general statistics
-----------------------------
Number of program locations:     2443
Number of CFA edges:             2530
Number of relevant variables:    457
Number of functions:             38
Number of loops:                 7
Size of reached set:             7488
  Number of reached locations:   322 (13%)
    Avg states per location:     23
    Max states per location:     109 (at node N858)
  Number of reached functions:   18 (47%)
  Number of partitions:          7488
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.212s
  Time for loading CPAs:          1.020s
  Time for loading parser:        0.897s
  Time for CFA construction:      4.174s
    Time for parsing file(s):     1.122s
    Time for AST to CFA:          1.504s
    Time for CFA sanity check:    0.282s
    Time for post-processing:     0.976s
      Time for var class.:        0.449s
Time for Analysis:               11.451s
CPU time for analysis:           11.440s
Time for analyzing result:        0.019s
Total time for CPAchecker:       17.668s
Total CPU time for CPAchecker:   17.630s
Time for statistics:              0.286s

Time for Garbage Collector:       0.399s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     44MB (    42 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     31MB (    30 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8107MB (  7731 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
