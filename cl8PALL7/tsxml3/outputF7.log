scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yniue5bc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4002: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4041: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4620: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            431600 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            305849 (71%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         125751 (29%)
  Times precision was empty:       305852 (71%)
  Times precision was {false}:     3128 (1%)
  Times result was cached:         122614 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6 (0%)
  Times result was 'false':        125742 (29%)
Number of strengthen sat checks:   0
Number of coverage checks:         1562970
  BDD entailment checks:           211916
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       81
Number of predicates discovered:          2
Number of abstraction locations:          4
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         125748
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 40.12
Number of irrelevant predicates:          125742 (100%)
Number of preds handled by boolean abs:   6 (0%)
  Total number of models for allsat:      6
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 79.175s
  Time for path formula creation:       73.537s
Time for strengthen operator:           10.563s
Time for prec operator:                448.490s
  Time for abstraction:                438.134s (Max:    25.493s, Count: 431600)
    Boolean abstraction:                 0.146s
    Solving time:                        5.458s (Max:     0.069s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 9.159s
Time for coverage check:                 0.357s
  Time for BDD entailment checks:        0.212s
Total time for SMT solver (w/o itp):     5.461s

Number of path formula cache hits:   10617382 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    26.856s

Total number of created targets for pointer analysis: 277507
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 58
   Number of created targets for uf: *(struct_gendisk)* is 5
   Number of created targets for uf: *char is 93


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          15 (count: 536580, min: 0, max: 10, avg: 0.00)
Time for BDD node cleanup:                             0.080s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.892s
  Time for transition matches:                         8.118s
  Time for transition assertions:                      0.028s
  Time for transition actions:                         0.136s
Automaton transfers with branching:                0
Automaton transfer successors:                     10019136 (count: 10019136, min: 1, max: 1, avg: 1.00) [1 x 10019136]

CPA algorithm statistics
------------------------
Number of iterations:            6716834
Max size of waitlist:            39184
Average size of waitlist:        20333
Number of computed successors:   7769209
Max successors for one state:    2
Number of times merged:          675527
Number of times stopped:         887443
Number of times breaked:         9

Total time for CPA algorithm:       894.695s (Max:   893.292s)
  Time for choose from waitlist:      3.967s
  Time for precision adjustment:    600.788s
  Time for transfer relation:       192.905s
  Time for merge operator:           18.873s
  Time for stop operator:             8.361s
  Time for adding to reached set:    24.182s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  16 (count: 9, min: 1, max: 4, avg: 1.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.148s
  Counterexample analysis:                             0.111s (Max:     0.032s, Calls: 9)
    Refinement sat check:                              0.087s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.012s
  ARG update:                                          0.014s

Length of refined path (in blocks):                      16 (count: 9, min: 1, max: 4, avg: 1.78)
Number of affected states:                                3 (count: 9, min: 0, max: 3, avg: 0.33)
Length (states) of path with itp 'true':                  4 (count: 9, min: 0, max: 1, avg: 0.44)
Length (states) of path with itp non-trivial itp:         3 (count: 9, min: 0, max: 3, avg: 0.33)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               2 (count: 9, min: 0, max: 2, avg: 0.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 253
Max. size of reached set after ref.:  151
Avg. size of reached set before ref.: 109.44
Avg. size of reached set after ref.:  86.11

Total time for CEGAR algorithm:     894.879s
Time for refinements:                 0.184s
Average time for refinement:          0.020s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.245
  Visited lines:          1072
  Total lines:            1831
  Line coverage:          0.585
  Visited conditions:     112
  Total conditions:       404
  Condition coverage:     0.277

CPAchecker general statistics
-----------------------------
Number of program locations:     2465
Number of CFA edges:             2753
Number of relevant variables:    263
Number of functions:             98
Number of loops:                 20
Size of reached set:             6755815
  Size of final wait list        39181

Time for analysis setup:          5.305s
  Time for loading CPAs:          0.958s
  Time for loading parser:        0.820s
  Time for CFA construction:      3.334s
    Time for parsing file(s):     1.020s
    Time for AST to CFA:          1.083s
    Time for CFA sanity check:    0.194s
    Time for post-processing:     0.800s
      Time for var class.:        0.388s
Time for Analysis:              894.879s
CPU time for analysis:          894.840s
Total time for CPAchecker:      900.190s
Total CPU time for CPAchecker:  900.140s
Time for statistics:            154.978s

Time for Garbage Collector:     513.402s (in 287 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5414MB (  5163 MiB) max;   2636MB (  2514 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3434MB (  3275 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8269MB (  7886 MiB) max;   8179MB (  7800 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
