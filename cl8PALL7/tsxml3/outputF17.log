scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0z6e6dmu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4002: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4041: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4620: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            397440 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            241312 (61%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         156128 (39%)
  Times precision was empty:       1097 (0%)
  Times precision was {false}:     2675 (1%)
  Times result was cached:         383847 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9821 (2%)
  Times result was 'false':        193158 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         1194965
  BDD entailment checks:           114615
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       87
Number of predicates discovered:          9
Number of abstraction locations:          18
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         1116883
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 89.38
Number of irrelevant predicates:          164183 (15%)
Number of preds handled by boolean abs:   37101 (3%)
  Total number of models for allsat:      7193
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.73

Time for post operator:                 91.690s
  Time for path formula creation:       84.879s
Time for strengthen operator:           10.151s
Time for prec operator:                423.050s
  Time for abstraction:                410.943s (Max:     6.208s, Count: 397440)
    Boolean abstraction:               206.337s
    Solving time:                      208.822s (Max:     3.143s)
    Model enumeration time:              7.654s
    Time for BDD construction:           0.380s (Max:     0.012s)
Time for merge operator:                 7.399s
Time for coverage check:                 0.351s
  Time for BDD entailment checks:        0.231s
Total time for SMT solver (w/o itp):   216.476s

Number of path formula cache hits:   9852381 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    35.445s

Total number of created targets for pointer analysis: 259295
   Number of created targets for uf: *(void)* is 4
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 1535
   Number of created targets for uf: *(struct_gendisk)* is 9
   Number of created targets for uf: *char is 3083


Number of BDD nodes:                               285
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17104 (count: 193574, min: 0, max: 547, avg: 0.09)
Time for BDD node cleanup:                             0.042s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 40.377s
  Time for transition matches:                         8.747s
  Time for transition assertions:                      0.032s
  Time for transition actions:                         0.138s
Automaton transfers with branching:                0
Automaton transfer successors:                      9753396 (count: 9753396, min: 1, max: 1, avg: 1.00) [1 x 9753396]

CPA algorithm statistics
------------------------
Number of iterations:            6526700
Max size of waitlist:            4077
Average size of waitlist:        2391
Number of computed successors:   7380226
Max successors for one state:    2
Number of times merged:          540175
Number of times stopped:         654207
Number of times breaked:         159

Total time for CPA algorithm:       907.072s (Max:   780.701s)
  Time for choose from waitlist:      2.823s
  Time for precision adjustment:    522.164s
  Time for transfer relation:       272.928s
  Time for merge operator:           15.396s
  Time for stop operator:             8.634s
  Time for adding to reached set:    42.140s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   159
Avg. length of target path (in blocks):                1145 (count: 159, min: 1, max: 30, avg: 7.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.036s
  Counterexample analysis:                             7.120s (Max:     0.227s, Calls: 159)
    Refinement sat check:                              6.294s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.096s
  ARG update:                                          0.635s

Length of refined path (in blocks):                    1002 (count: 159, min: 1, max: 30, avg: 6.30)
Number of affected states:                              344 (count: 159, min: 0, max: 29, avg: 2.16)
Length (states) of path with itp 'true':                499 (count: 159, min: 0, max: 25, avg: 3.14)
Length (states) of path with itp non-trivial itp:       344 (count: 159, min: 0, max: 29, avg: 2.16)
Length (states) of path with itp 'false':                95 (count: 159, min: 0, max: 1, avg: 0.60)
Different non-trivial interpolants along paths:           0 (count: 159, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             274 (count: 159, min: 0, max: 28, avg: 1.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                159
Number of successful refinements:     159
Number of failed refinements:         0
Max. size of reached set before ref.: 44285
Max. size of reached set after ref.:  43977
Avg. size of reached set before ref.: 5960.08
Avg. size of reached set after ref.:  4441.81

Total time for CEGAR algorithm:     916.717s
Time for refinements:                 9.045s
Average time for refinement:          0.056s
Max time for refinement:              0.325s

Code Coverage
-----------------------------
  Function coverage:      0.429
  Visited lines:          1351
  Total lines:            1831
  Line coverage:          0.738
  Visited conditions:     202
  Total conditions:       404
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     2465
Number of CFA edges:             2753
Number of relevant variables:    263
Number of functions:             98
Number of loops:                 20
Size of reached set:             6291457
  Size of final wait list        4077

Time for analysis setup:          5.511s
  Time for loading CPAs:          1.022s
  Time for loading parser:        0.770s
  Time for CFA construction:      3.516s
    Time for parsing file(s):     1.024s
    Time for AST to CFA:          1.173s
    Time for CFA sanity check:    0.212s
    Time for post-processing:     0.897s
      Time for var class.:        0.432s
Time for Analysis:              916.717s
CPU time for analysis:          916.680s
Total time for CPAchecker:      922.235s
Total CPU time for CPAchecker:  922.180s
Time for statistics:            100.554s

Time for Garbage Collector:     300.133s (in 392 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5413MB (  5162 MiB) max;   1818MB (  1734 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   2465MB (  2351 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8347MB (  7961 MiB) max;   8243MB (  7861 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
