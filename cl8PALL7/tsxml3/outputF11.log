scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kngvpaeg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4002: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4041: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4620: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            418438 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            241353 (58%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         177085 (42%)
  Times precision was empty:       259 (0%)
  Times precision was {false}:     2326 (1%)
  Times result was cached:         407741 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8112 (2%)
  Times result was 'false':        204642 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         1231343
  BDD entailment checks:           123673
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       87
Number of predicates discovered:          7
Number of abstraction locations:          12
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         1140777
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 109.29
Number of irrelevant predicates:          177557 (16%)
Number of preds handled by boolean abs:   31922 (3%)
  Total number of models for allsat:      6060
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.75

Time for post operator:                 90.381s
  Time for path formula creation:       84.772s
Time for strengthen operator:            9.074s
Time for prec operator:                368.050s
  Time for abstraction:                357.217s (Max:    22.015s, Count: 418438)
    Boolean abstraction:                83.357s
    Solving time:                       81.043s (Max:     1.040s)
    Model enumeration time:              3.954s
    Time for BDD construction:           0.309s (Max:     0.008s)
Time for merge operator:                30.336s
Time for coverage check:                 0.378s
  Time for BDD entailment checks:        0.265s
Total time for SMT solver (w/o itp):    84.997s

Number of path formula cache hits:   10030199 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    29.778s

Total number of created targets for pointer analysis: 81894
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 113
   Number of created targets for uf: *(struct_gendisk)* is 5
   Number of created targets for uf: *char is 93


Number of BDD nodes:                               240
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14257 (count: 186905, min: 0, max: 636, avg: 0.08)
Time for BDD node cleanup:                             0.055s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.772s
  Time for transition matches:                         8.302s
  Time for transition assertions:                      0.052s
  Time for transition actions:                         0.130s
Automaton transfers with branching:                0
Automaton transfer successors:                      9846331 (count: 9846331, min: 1, max: 1, avg: 1.00) [1 x 9846331]

CPA algorithm statistics
------------------------
Number of iterations:            6761145
Max size of waitlist:            23
Average size of waitlist:        18
Number of computed successors:   7643747
Max successors for one state:    2
Number of times merged:          553835
Number of times stopped:         677474
Number of times breaked:         73

Total time for CPA algorithm:       891.462s (Max:   863.653s)
  Time for choose from waitlist:      2.788s
  Time for precision adjustment:    489.590s
  Time for transfer relation:       278.995s
  Time for merge operator:           38.062s
  Time for stop operator:             9.123s
  Time for adding to reached set:    49.861s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   73
Avg. length of target path (in blocks):                 454 (count: 73, min: 1, max: 20, avg: 6.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.945s
  Counterexample analysis:                             3.510s (Max:     0.326s, Calls: 73)
    Refinement sat check:                              3.038s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.041s
  ARG update:                                          0.258s

Length of refined path (in blocks):                     405 (count: 73, min: 1, max: 20, avg: 5.55)
Number of affected states:                              211 (count: 73, min: 0, max: 19, avg: 2.89)
Length (states) of path with itp 'true':                121 (count: 73, min: 0, max: 15, avg: 1.66)
Length (states) of path with itp non-trivial itp:       211 (count: 73, min: 0, max: 19, avg: 2.89)
Length (states) of path with itp 'false':                34 (count: 73, min: 0, max: 1, avg: 0.47)
Different non-trivial interpolants along paths:           0 (count: 73, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             183 (count: 73, min: 0, max: 18, avg: 2.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                73
Number of successful refinements:     73
Number of failed refinements:         0
Max. size of reached set before ref.: 6078
Max. size of reached set after ref.:  3763
Avg. size of reached set before ref.: 982.38
Avg. size of reached set after ref.:  345.04

Total time for CEGAR algorithm:     895.642s
Time for refinements:                 4.155s
Average time for refinement:          0.056s
Max time for refinement:              0.364s

Code Coverage
-----------------------------
  Function coverage:      0.418
  Visited lines:          1262
  Total lines:            1831
  Line coverage:          0.689
  Visited conditions:     166
  Total conditions:       404
  Condition coverage:     0.411

CPAchecker general statistics
-----------------------------
Number of program locations:     2465
Number of CFA edges:             2753
Number of relevant variables:    263
Number of functions:             98
Number of loops:                 20
Size of reached set:             6715105
  Size of final wait list        20

Time for analysis setup:          5.550s
  Time for loading CPAs:          1.106s
  Time for loading parser:        0.759s
  Time for CFA construction:      3.523s
    Time for parsing file(s):     1.084s
    Time for AST to CFA:          1.132s
    Time for CFA sanity check:    0.219s
    Time for post-processing:     0.830s
      Time for var class.:        0.393s
Time for Analysis:              895.642s
CPU time for analysis:          895.610s
Total time for CPAchecker:      901.198s
Total CPU time for CPAchecker:  901.150s
Time for statistics:            132.981s

Time for Garbage Collector:     443.558s (in 272 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5414MB (  5163 MiB) max;   2370MB (  2260 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3106MB (  2962 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8204MB (  7823 MiB) max;   8182MB (  7803 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
