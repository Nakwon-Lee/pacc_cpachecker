scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yf6m4mqi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4002: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4041: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4620: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2800 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2773 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (1%)
  Times precision was empty:       2774 (99%)
  Times precision was {false}:     18 (1%)
  Times result was cached:         4 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (0%)
  Times result was 'false':        18 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         14530
  BDD entailment checks:           894
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       70
Number of predicates discovered:          3
Number of abstraction locations:          4
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         26
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.18
Number of irrelevant predicates:          22 (85%)
Number of preds handled by boolean abs:   4 (15%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 13.357s
  Time for path formula creation:       13.024s
Time for strengthen operator:            0.273s
Time for prec operator:                  0.897s
  Time for abstraction:                  0.472s (Max:     0.062s, Count: 2800)
    Boolean abstraction:                 0.110s
    Solving time:                        0.229s (Max:     0.052s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 1.474s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.232s

Number of path formula cache hits:   73536 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.690s

Total number of created targets for pointer analysis: 71345
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 53
   Number of created targets for uf: *(struct_gendisk)* is 5
   Number of created targets for uf: *char is 157


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          14 (count: 3806, min: 0, max: 14, avg: 0.00)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.587s
  Time for transition matches:                         0.304s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       121394 (count: 121394, min: 1, max: 1, avg: 1.00) [1 x 121394]

CPA algorithm statistics
------------------------
Number of iterations:            65905
Max size of waitlist:            1114
Average size of waitlist:        547
Number of computed successors:   74765
Max successors for one state:    2
Number of times merged:          6818
Number of times stopped:         7712
Number of times breaked:         11

Total time for CPA algorithm:        24.562s (Max:    22.815s)
  Time for choose from waitlist:      0.161s
  Time for precision adjustment:      2.564s
  Time for transfer relation:        17.514s
  Time for merge operator:            2.005s
  Time for stop operator:             0.408s
  Time for adding to reached set:     0.605s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  20 (count: 11, min: 1, max: 3, avg: 1.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.191s
  Counterexample analysis:                             0.140s (Max:     0.035s, Calls: 11)
    Refinement sat check:                              0.115s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.008s
  ARG update:                                          0.010s

Length of refined path (in blocks):                      19 (count: 11, min: 1, max: 3, avg: 1.73)
Number of affected states:                                3 (count: 11, min: 0, max: 2, avg: 0.27)
Length (states) of path with itp 'true':                  5 (count: 11, min: 0, max: 1, avg: 0.45)
Length (states) of path with itp non-trivial itp:         3 (count: 11, min: 0, max: 2, avg: 0.27)
Length (states) of path with itp 'false':                 1 (count: 11, min: 0, max: 1, avg: 0.09)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               1 (count: 11, min: 0, max: 1, avg: 0.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 237
Max. size of reached set after ref.:  154
Avg. size of reached set before ref.: 128.09
Avg. size of reached set after ref.:  98.27

Total time for CEGAR algorithm:      24.815s
Time for refinements:                 0.243s
Average time for refinement:          0.022s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.255
  Visited lines:          1121
  Total lines:            1831
  Line coverage:          0.612
  Visited conditions:     130
  Total conditions:       404
  Condition coverage:     0.322

CPAchecker general statistics
-----------------------------
Number of program locations:     2465
Number of CFA edges:             2753
Number of relevant variables:    263
Number of functions:             98
Number of loops:                 20
Size of reached set:             66708
  Number of reached locations:   393 (16%)
    Avg states per location:     169
    Max states per location:     2934 (at node N276)
  Number of reached functions:   25 (26%)
  Number of partitions:          66708
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1112

Time for analysis setup:          5.404s
  Time for loading CPAs:          0.940s
  Time for loading parser:        0.822s
  Time for CFA construction:      3.488s
    Time for parsing file(s):     1.025s
    Time for AST to CFA:          1.204s
    Time for CFA sanity check:    0.201s
    Time for post-processing:     0.846s
      Time for var class.:        0.388s
Time for Analysis:               24.815s
CPU time for analysis:           24.820s
Total time for CPAchecker:       30.224s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              1.059s

Time for Garbage Collector:       1.285s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                112MB (   106 MiB) max;     57MB (    55 MiB) avg;    123MB (   118 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8135MB (  7758 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
