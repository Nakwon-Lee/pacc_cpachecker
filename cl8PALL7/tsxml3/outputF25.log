scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f1iiq1fv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4002: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4041: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4620: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            419302 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            241853 (58%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         177449 (42%)
  Times precision was empty:       259 (0%)
  Times precision was {false}:     2326 (1%)
  Times result was cached:         408605 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8112 (2%)
  Times result was 'false':        205063 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         1233942
  BDD entailment checks:           123930
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       87
Number of predicates discovered:          7
Number of abstraction locations:          12
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         1143141
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 109.52
Number of irrelevant predicates:          177921 (16%)
Number of preds handled by boolean abs:   31922 (3%)
  Total number of models for allsat:      6060
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.75

Time for post operator:                131.601s
  Time for path formula creation:      123.389s
Time for strengthen operator:            9.734s
Time for prec operator:                432.374s
  Time for abstraction:                421.374s (Max:    26.538s, Count: 419302)
    Boolean abstraction:                83.529s
    Solving time:                       80.847s (Max:     1.146s)
    Model enumeration time:              4.089s
    Time for BDD construction:           0.243s (Max:     0.009s)
Time for merge operator:                 7.859s
Time for coverage check:                 0.371s
  Time for BDD entailment checks:        0.270s
Total time for SMT solver (w/o itp):    84.936s

Number of path formula cache hits:   10052363 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    28.231s

Total number of created targets for pointer analysis: 81894
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 53
   Number of created targets for uf: *(struct_gendisk)* is 5
   Number of created targets for uf: *char is 53


Number of BDD nodes:                               240
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14265 (count: 187162, min: 0, max: 663, avg: 0.08)
Time for BDD node cleanup:                             0.052s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.862s
  Time for transition matches:                        10.465s
  Time for transition assertions:                      0.026s
  Time for transition actions:                         0.138s
Automaton transfers with branching:                0
Automaton transfer successors:                      9866881 (count: 9866881, min: 1, max: 1, avg: 1.00) [1 x 9866881]

CPA algorithm statistics
------------------------
Number of iterations:            6775261
Max size of waitlist:            23
Average size of waitlist:        18
Number of computed successors:   7659711
Max successors for one state:    2
Number of times merged:          555006
Number of times stopped:         678902
Number of times breaked:         73

Total time for CPA algorithm:       890.914s (Max:   863.727s)
  Time for choose from waitlist:      3.125s
  Time for precision adjustment:    498.073s
  Time for transfer relation:       277.460s
  Time for merge operator:           15.609s
  Time for stop operator:             8.594s
  Time for adding to reached set:    42.344s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   73
Avg. length of target path (in blocks):                 454 (count: 73, min: 1, max: 20, avg: 6.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.692s
  Counterexample analysis:                             3.285s (Max:     0.313s, Calls: 73)
    Refinement sat check:                              2.883s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.034s
  ARG update:                                          0.242s

Length of refined path (in blocks):                     405 (count: 73, min: 1, max: 20, avg: 5.55)
Number of affected states:                              211 (count: 73, min: 0, max: 19, avg: 2.89)
Length (states) of path with itp 'true':                121 (count: 73, min: 0, max: 15, avg: 1.66)
Length (states) of path with itp non-trivial itp:       211 (count: 73, min: 0, max: 19, avg: 2.89)
Length (states) of path with itp 'false':                34 (count: 73, min: 0, max: 1, avg: 0.47)
Different non-trivial interpolants along paths:           0 (count: 73, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             183 (count: 73, min: 0, max: 18, avg: 2.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                73
Number of successful refinements:     73
Number of failed refinements:         0
Max. size of reached set before ref.: 6078
Max. size of reached set after ref.:  3763
Avg. size of reached set before ref.: 982.38
Avg. size of reached set after ref.:  345.04

Total time for CEGAR algorithm:     894.832s
Time for refinements:                 3.895s
Average time for refinement:          0.053s
Max time for refinement:              0.361s

Code Coverage
-----------------------------
  Function coverage:      0.418
  Visited lines:          1262
  Total lines:            1831
  Line coverage:          0.689
  Visited conditions:     166
  Total conditions:       404
  Condition coverage:     0.411

CPAchecker general statistics
-----------------------------
Number of program locations:     2465
Number of CFA edges:             2753
Number of relevant variables:    263
Number of functions:             98
Number of loops:                 20
Size of reached set:             6729221
  Size of final wait list        19

Time for analysis setup:          5.432s
  Time for loading CPAs:          1.008s
  Time for loading parser:        0.787s
  Time for CFA construction:      3.479s
    Time for parsing file(s):     1.089s
    Time for AST to CFA:          1.138s
    Time for CFA sanity check:    0.213s
    Time for post-processing:     0.812s
      Time for var class.:        0.379s
Time for Analysis:              894.832s
CPU time for analysis:          894.780s
Total time for CPAchecker:      900.269s
Total CPU time for CPAchecker:  900.200s
Time for statistics:            156.151s

Time for Garbage Collector:     464.716s (in 273 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5414MB (  5163 MiB) max;   2395MB (  2284 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3138MB (  2993 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8205MB (  7824 MiB) max;   8183MB (  7804 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
