scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--md--dm-snapshot.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rehsuzxj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3736: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3739: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3742: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7526: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8017: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8358: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9479: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6559: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6540: Function pointer *(q->merge_bvec_fn) with type merge_bvec_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6260: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6263: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_unregister_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_origin_target_preresume to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_origin_target_postsuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_origin_target_presuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_table_get_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_put_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6540: Ignoring function call through function pointer *(q->merge_bvec_fn): tmp___0 = (*(q->merge_bvec_fn))(q, bvm, biovec); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6559: Ignoring call via function pointer origin_iterate_devices::fn for which no suitable target was found in line: tmp = (*fn)(ti, dev, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function ldv_snapshot_target_postsuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_snapshot_target_presuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_rwsem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_vcalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_kcopyd_client_create to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_kcopyd_client_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7922: Ignoring function call through function pointer *(store->type->dtr): (*(store->type->dtr))(store); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_io_client_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_io to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6242-6243: Ignoring function call through function pointer *(snap->store->type->status): (*(snap->store->type->status))(snap->store, type, result + ((unsigned long)sz), maxlen - sz); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 6211-6212: Ignoring function call through function pointer *(snap->store->type->usage): (*(snap->store->type->usage))(snap->store, &total_sectors, &sectors_allocated, &metadata_sectors); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6260: Ignoring call via function pointer snapshot_iterate_devices::fn for which no suitable target was found in line: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6260: Ignoring function call through function pointer *fn: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6263: Ignoring call via function pointer snapshot_iterate_devices::fn for which no suitable target was found in line: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6263: Ignoring function call through function pointer *fn: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_merge_target_postsuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_register_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtouint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7901: Ignoring function call through function pointer *(type->ctr): r = (*(type->ctr))(tmp_store, 0U, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function kmem_cache_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5434: Ignoring function call through function pointer *(s->store->type->read_metadata): r = (*(s->store->type->read_metadata))(s->store, &dm_add_exception, (void *)s); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dm_io_client_create to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_set_target_max_io_len to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_suspended to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_kcopyd_copy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_table_get_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_make_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5867: Ignoring function call through function pointer *(s->store->type->prepare_exception): tmp = (*(s->store->type->prepare_exception))(s->store, &(pe->e)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5665: Ignoring function call through function pointer *(s->store->type->drop_snapshot): (*(s->store->type->drop_snapshot))(s->store); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dm_table_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5120: Ignoring function call through function pointer *(s->store->type->prepare_merge): linear_chunks = (*(s->store->type->prepare_merge))(s->store, &old_chunk, &new_chunk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wake_up_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            99433 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            93951 (94%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5482 (6%)
  Times precision was empty:       13732 (14%)
  Times precision was {false}:     2706 (3%)
  Times result was cached:         80169 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2826 (3%)
  Times result was 'false':        32195 (32%)
Number of strengthen sat checks:   0
Number of coverage checks:         728372
  BDD entailment checks:           55796
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       350
Number of predicates discovered:          9
Number of abstraction locations:          19
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         301594
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 54.52
Number of irrelevant predicates:          114363 (38%)
Number of preds handled by boolean abs:   6536 (2%)
  Total number of models for allsat:      3636
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.29

Time for post operator:                116.218s
  Time for path formula creation:      112.547s
Time for strengthen operator:            6.831s
Time for prec operator:                586.153s
  Time for abstraction:                578.148s (Max:    18.708s, Count: 99433)
    Boolean abstraction:               429.979s
    Solving time:                      149.329s (Max:     1.579s)
    Model enumeration time:            305.030s
    Time for BDD construction:           0.233s (Max:     0.007s)
Time for merge operator:                19.362s
Time for coverage check:                 0.202s
  Time for BDD entailment checks:        0.135s
Total time for SMT solver (w/o itp):   454.359s

Number of path formula cache hits:   5994276 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    61.795s

Total number of created targets for pointer analysis: 177116
   Number of created targets for uf: *(void)* is 95
   Number of created targets for uf: *(struct_bio)* is 337
   Number of created targets for uf: *(struct_hlist_node)* is 385
   Number of created targets for uf: *(struct_dm_kcopyd_client)* is 354
   Number of created targets for uf: *(struct_dm_exception_store)* is 67
   Number of created targets for uf: *(struct_dm_snapshot)* is 49
   Number of created targets for uf: *(struct_mempool_s)* is 354
   Number of created targets for uf: *unsigned_long_int is 124
   Number of created targets for uf: *(char)* is 157
   Number of created targets for uf: *signed_int is 2922
   Number of created targets for uf: *(struct_list_head)* is 12457
   Number of created targets for uf: *(struct_dm_exception_store_type)* is 39
   Number of created targets for uf: *(struct_block_device)* is 8
   Number of created targets for uf: *(struct_workqueue_struct)* is 71
   Number of created targets for uf: *unsigned_long_long_int is 209
   Number of created targets for uf: *unsigned_int is 3817
   Number of created targets for uf: *char is 241
   Number of created targets for uf: *(struct_dm_target)* is 161
   Number of created targets for uf: *(struct_commit_callback)* is 71


Number of BDD nodes:                               1477
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5683 (count: 115423, min: 0, max: 92, avg: 0.05)
Time for BDD node cleanup:                             0.037s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.121s
  Time for transition matches:                         6.460s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                      6144855 (count: 6144855, min: 1, max: 1, avg: 1.00) [1 x 6144855]

CPA algorithm statistics
------------------------
Number of iterations:            3851436
Max size of waitlist:            469
Average size of waitlist:        198
Number of computed successors:   4265909
Max successors for one state:    2
Number of times merged:          336288
Number of times stopped:         366580
Number of times breaked:         52

Total time for CPA algorithm:       875.546s (Max:    56.997s)
  Time for choose from waitlist:      1.898s
  Time for precision adjustment:    618.542s
  Time for transfer relation:       199.441s
  Time for merge operator:           26.073s
  Time for stop operator:             5.579s
  Time for adding to reached set:    11.119s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   52
Avg. length of target path (in blocks):                 530 (count: 52, min: 3, max: 15, avg: 10.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.798s
  Counterexample analysis:                             2.765s (Max:     0.148s, Calls: 52)
    Refinement sat check:                              2.359s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.028s
  ARG update:                                         11.921s

Length of refined path (in blocks):                     501 (count: 52, min: 2, max: 15, avg: 9.63)
Number of affected states:                              449 (count: 52, min: 1, max: 14, avg: 8.63)
Length (states) of path with itp 'true':                  0 (count: 52, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       449 (count: 52, min: 1, max: 14, avg: 8.63)
Length (states) of path with itp 'false':                 9 (count: 52, min: 0, max: 1, avg: 0.17)
Different non-trivial interpolants along paths:           0 (count: 52, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             397 (count: 52, min: 0, max: 13, avg: 7.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                52
Number of successful refinements:     52
Number of failed refinements:         0
Max. size of reached set before ref.: 168150
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 70980.94
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     892.742s
Time for refinements:                17.193s
Average time for refinement:          0.330s
Max time for refinement:              1.827s

Code Coverage
-----------------------------
  Function coverage:      0.699
  Visited lines:          3448
  Total lines:            4098
  Line coverage:          0.841
  Visited conditions:     942
  Total conditions:       1128
  Condition coverage:     0.835

CPAchecker general statistics
-----------------------------
Number of program locations:     5782
Number of CFA edges:             6624
Number of relevant variables:    1018
Number of functions:             249
Number of loops:                 38
Size of reached set:             176541
  Number of reached locations:   2805 (49%)
    Avg states per location:     62
    Max states per location:     914 (at node N4394)
  Number of reached functions:   174 (70%)
  Number of partitions:          176535
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N2648 (before line 6746), Function main called from node N2631, stack depth 1 [b112b13], stack [main]])
  Number of target states:       0
  Size of final wait list        374

Time for analysis setup:          7.433s
  Time for loading CPAs:          1.151s
  Time for loading parser:        0.855s
  Time for CFA construction:      5.238s
    Time for parsing file(s):     1.271s
    Time for AST to CFA:          1.697s
    Time for CFA sanity check:    0.466s
    Time for post-processing:     1.642s
      Time for var class.:        0.764s
Time for Analysis:              892.742s
CPU time for analysis:          892.690s
Total time for CPAchecker:      900.187s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              1.879s

Time for Garbage Collector:      49.203s (in 537 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                935MB (   892 MiB) max;    371MB (   354 MiB) avg;    964MB (   919 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           971MB (   926 MiB) max;    543MB (   518 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8352MB (  7965 MiB) max;   8246MB (  7864 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
