scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pf.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rapmtsvq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3988: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4026: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4600: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5233: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            271857 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            217495 (80%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54362 (20%)
  Times precision was empty:       190 (0%)
  Times precision was {false}:     2903 (1%)
  Times result was cached:         261578 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7186 (3%)
  Times result was 'false':        82230 (30%)
Number of strengthen sat checks:   0
Number of coverage checks:         1666345
  BDD entailment checks:           203823
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       87
Number of predicates discovered:          8
Number of abstraction locations:          12
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         856381
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 84.88
Number of irrelevant predicates:          368644 (43%)
Number of preds handled by boolean abs:   17036 (2%)
  Total number of models for allsat:      6991
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                 97.463s
  Time for path formula creation:       89.713s
Time for strengthen operator:           10.160s
Time for prec operator:                323.840s
  Time for abstraction:                313.309s (Max:    23.979s, Count: 271857)
    Boolean abstraction:                84.274s
    Solving time:                       79.328s (Max:     1.671s)
    Model enumeration time:              6.661s
    Time for BDD construction:           0.364s (Max:     0.012s)
Time for merge operator:                10.718s
Time for coverage check:                 0.435s
  Time for BDD entailment checks:        0.299s
Total time for SMT solver (w/o itp):    85.989s

Number of path formula cache hits:   10532133 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    34.259s

Total number of created targets for pointer analysis: 101966
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 157
   Number of created targets for uf: *(struct_gendisk)* is 5
   Number of created targets for uf: *char is 333


Number of BDD nodes:                               251
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12654 (count: 264857, min: 0, max: 878, avg: 0.05)
Time for BDD node cleanup:                             0.050s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 41.576s
  Time for transition matches:                         8.635s
  Time for transition assertions:                      0.013s
  Time for transition actions:                         0.064s
Automaton transfers with branching:                0
Automaton transfer successors:                     10288605 (count: 10288605, min: 1, max: 1, avg: 1.00) [1 x 10288605]

CPA algorithm statistics
------------------------
Number of iterations:            6927459
Max size of waitlist:            32
Average size of waitlist:        21
Number of computed successors:   7858042
Max successors for one state:    2
Number of times merged:          731261
Number of times stopped:         847990
Number of times breaked:         53

Total time for CPA algorithm:       902.015s (Max:   851.270s)
  Time for choose from waitlist:      2.725s
  Time for precision adjustment:    521.758s
  Time for transfer relation:       301.295s
  Time for merge operator:           22.099s
  Time for stop operator:            10.288s
  Time for adding to reached set:    21.210s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   53
Avg. length of target path (in blocks):                 358 (count: 53, min: 2, max: 24, avg: 6.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.380s
  Counterexample analysis:                             2.185s (Max:     0.212s, Calls: 53)
    Refinement sat check:                              1.875s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.047s
  ARG update:                                          1.064s

Length of refined path (in blocks):                     321 (count: 53, min: 2, max: 24, avg: 6.06)
Number of affected states:                              159 (count: 53, min: 0, max: 23, avg: 3.00)
Length (states) of path with itp 'true':                109 (count: 53, min: 0, max: 19, avg: 2.06)
Length (states) of path with itp non-trivial itp:       159 (count: 53, min: 0, max: 23, avg: 3.00)
Length (states) of path with itp 'false':                23 (count: 53, min: 0, max: 1, avg: 0.43)
Different non-trivial interpolants along paths:           0 (count: 53, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             128 (count: 53, min: 0, max: 22, avg: 2.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                53
Number of successful refinements:     53
Number of failed refinements:         0
Max. size of reached set before ref.: 84977
Max. size of reached set after ref.:  83113
Avg. size of reached set before ref.: 10030.57
Avg. size of reached set after ref.:  6415.70

Total time for CEGAR algorithm:     906.320s
Time for refinements:                 3.999s
Average time for refinement:          0.075s
Max time for refinement:              0.737s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          1337
  Total lines:            1906
  Line coverage:          0.701
  Visited conditions:     196
  Total conditions:       432
  Condition coverage:     0.454

CPAchecker general statistics
-----------------------------
Number of program locations:     2546
Number of CFA edges:             2851
Number of relevant variables:    266
Number of functions:             99
Number of loops:                 20
Size of reached set:             6736234
  Size of final wait list        23

Time for analysis setup:          5.431s
  Time for loading CPAs:          0.950s
  Time for loading parser:        0.808s
  Time for CFA construction:      3.520s
    Time for parsing file(s):     1.079s
    Time for AST to CFA:          1.125s
    Time for CFA sanity check:    0.237s
    Time for post-processing:     0.867s
      Time for var class.:        0.416s
Time for Analysis:              906.320s
CPU time for analysis:          906.270s
Total time for CPAchecker:      911.757s
Total CPU time for CPAchecker:  911.700s
Time for statistics:            135.903s

Time for Garbage Collector:     451.832s (in 285 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5413MB (  5162 MiB) max;   2343MB (  2235 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3071MB (  2929 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8275MB (  7891 MiB) max;   8206MB (  7826 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
