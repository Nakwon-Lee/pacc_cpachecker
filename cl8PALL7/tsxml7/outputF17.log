scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pf.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3k4mfr17/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3988: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4026: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4600: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5233: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            430380 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            297000 (69%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         133380 (31%)
  Times precision was empty:       190905 (44%)
  Times precision was {false}:     7291 (2%)
  Times result was cached:         231068 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1116 (0%)
  Times result was 'false':        175312 (41%)
Number of strengthen sat checks:   0
Number of coverage checks:         1241382
  BDD entailment checks:           189290
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       84
Number of predicates discovered:          6
Number of abstraction locations:          3
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         372843
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 44.35
Number of irrelevant predicates:          339481 (91%)
Number of preds handled by boolean abs:   1133 (0%)
  Total number of models for allsat:      7
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.01

Time for post operator:                 82.877s
  Time for path formula creation:       77.821s
Time for strengthen operator:            8.081s
Time for prec operator:                552.961s
  Time for abstraction:                543.036s (Max:    23.418s, Count: 430380)
    Boolean abstraction:                 3.463s
    Solving time:                      181.484s (Max:     3.448s)
    Model enumeration time:              0.026s
    Time for BDD construction:           0.024s (Max:     0.009s)
Time for merge operator:                 7.875s
Time for coverage check:                 0.372s
  Time for BDD entailment checks:        0.227s
Total time for SMT solver (w/o itp):   181.510s

Number of path formula cache hits:   8959719 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    34.369s

Total number of created targets for pointer analysis: 364067
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 58
   Number of created targets for uf: *(struct_gendisk)* is 5
   Number of created targets for uf: *char is 185


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1188 (count: 428450, min: 0, max: 52, avg: 0.00)
Time for BDD node cleanup:                             0.086s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.292s
  Time for transition matches:                         6.356s
  Time for transition assertions:                      0.029s
  Time for transition actions:                         0.133s
Automaton transfers with branching:                0
Automaton transfer successors:                      8753256 (count: 8753256, min: 1, max: 1, avg: 1.00) [1 x 8753256]

CPA algorithm statistics
------------------------
Number of iterations:            6085165
Max size of waitlist:            12024
Average size of waitlist:        5996
Number of computed successors:   6985648
Max successors for one state:    2
Number of times merged:          526046
Number of times stopped:         715336
Number of times breaked:         5

Total time for CPA algorithm:       914.423s (Max:   908.065s)
  Time for choose from waitlist:      2.455s
  Time for precision adjustment:    638.905s
  Time for transfer relation:       212.537s
  Time for merge operator:           16.994s
  Time for stop operator:             7.789s
  Time for adding to reached set:    15.741s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  12 (count: 5, min: 2, max: 4, avg: 2.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.181s
  Counterexample analysis:                             0.118s (Max:     0.043s, Calls: 5)
    Refinement sat check:                              0.078s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.004s
  ARG update:                                          0.036s

Length of refined path (in blocks):                      10 (count: 5, min: 2, max: 2, avg: 2.00)
Number of affected states:                                5 (count: 5, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         5 (count: 5, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 1 (count: 5, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 5327
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 1124.60
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     914.670s
Time for refinements:                 0.246s
Average time for refinement:          0.049s
Max time for refinement:              0.092s

Shutdown was requested but CPAchecker is still running after 10s, forcing immediate termination now. (ForceTerminationOnShutdown.run, WARNING)

For your information: CPAchecker is currently hanging at
 com.google.common.collect.Iterators$6.computeNext(Iterators.java:617)
com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:145)
com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:140)
com.google.common.collect.Iterators$6.computeNext(Iterators.java:615)
com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:145)
com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:140)
com.google.common.collect.ImmutableCollection$Builder.addAll(ImmutableCollection.java:408)
com.google.common.collect.ImmutableList$Builder.addAll(ImmutableList.java:699)
com.google.common.collect.ImmutableList.copyOf(ImmutableList.java:256)
com.google.common.collect.ImmutableList.copyOf(ImmutableList.java:209)
com.google.common.collect.FluentIterable.toList(FluentIterable.java:614)
org.sosy_lab.cpachecker.util.coverage.CoverageReport.getFunctionEntriesFromReached(CoverageReport.java:239)
org.sosy_lab.cpachecker.util.coverage.CoverageReport.writeCoverageReport(CoverageReport.java:93)
org.sosy_lab.cpachecker.core.MainCPAStatistics.printStatistics(MainCPAStatistics.java:276)
org.sosy_lab.cpachecker.core.CPAcheckerResult.printStatistics(CPAcheckerResult.java:104)
org.sosy_lab.cpachecker.cmdline.CPAMain.printResultAndStatistics(CPAMain.java:578)
org.sosy_lab.cpachecker.cmdline.CPAMain.main(CPAMain.java:186) 
 (ForceTerminationOnShutdown.run, INFO)

