scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jcxzhsis/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 735: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 799: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 330: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2256 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2187 (97%)
  Because of loop head:            45 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       386 (17%)
  Times precision was {false}:     62 (3%)
  Times result was cached:         1560 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      248 (11%)
  Times result was 'false':        307 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         553
  BDD entailment checks:           273
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          8
Number of abstraction locations:          42
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         5060
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 16.32
Number of irrelevant predicates:          1716 (34%)
Number of preds handled by boolean abs:   547 (11%)
  Total number of models for allsat:      263
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.759s
  Time for path formula creation:        0.721s
Time for strengthen operator:            0.068s
Time for prec operator:                  1.906s
  Time for abstraction:                  1.745s (Max:     0.021s, Count: 2256)
    Boolean abstraction:                 0.343s
    Solving time:                        0.240s (Max:     0.018s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.042s (Max:     0.009s)
Time for merge operator:                 0.009s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.260s

Number of path formula cache hits:   6127 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.644s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               276
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         564 (count: 2559, min: 0, max: 202, avg: 0.22)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.118s
Automaton transfers with branching:                0
Automaton transfer successors:                         8594 (count: 8594, min: 1, max: 1, avg: 1.00) [1 x 8594]

CPA algorithm statistics
------------------------
Number of iterations:            6653
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   7475
Max successors for one state:    2
Number of times merged:          140
Number of times stopped:         383
Number of times breaked:         24

Total time for CPA algorithm:         4.350s (Max:     0.465s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      2.175s
  Time for transfer relation:         1.622s
  Time for merge operator:            0.056s
  Time for stop operator:             0.102s
  Time for adding to reached set:     0.102s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                1019 (count: 24, min: 27, max: 69, avg: 42.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.485s
  Counterexample analysis:                             0.270s (Max:     0.025s, Calls: 24)
    Refinement sat check:                              0.145s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.039s
  ARG update:                                          0.068s

Length of refined path (in blocks):                     714 (count: 24, min: 16, max: 53, avg: 29.75)
Number of affected states:                              498 (count: 24, min: 2, max: 50, avg: 20.75)
Length (states) of path with itp 'true':                192 (count: 24, min: 0, max: 37, avg: 8.00)
Length (states) of path with itp non-trivial itp:       498 (count: 24, min: 2, max: 50, avg: 20.75)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 24, min: 0, max: 2, avg: 0.21)
Equal non-trivial interpolants along paths:             469 (count: 24, min: 1, max: 48, avg: 19.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 716
Max. size of reached set after ref.:  440
Avg. size of reached set before ref.: 367.38
Avg. size of reached set after ref.:  105.04

Total time for CEGAR algorithm:       4.917s
Time for refinements:                 0.561s
Average time for refinement:          0.023s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          96
  Total lines:            436
  Line coverage:          0.220
  Visited conditions:     32
  Total conditions:       72
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             675
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             490
  Number of reached locations:   131 (21%)
    Avg states per location:     3
    Max states per location:     16 (at node N63)
  Number of reached functions:   18 (49%)
  Number of partitions:          489
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N399 (before lines 565-612), Function test called from node N616, stack depth 3 [3ece79fe], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.458s
  Time for loading CPAs:          0.860s
  Time for loading parser:        0.808s
  Time for CFA construction:      1.576s
    Time for parsing file(s):     0.619s
    Time for AST to CFA:          0.322s
    Time for CFA sanity check:    0.111s
    Time for post-processing:     0.344s
      Time for var class.:        0.159s
Time for Analysis:                4.918s
CPU time for analysis:            4.910s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.384s
Total CPU time for CPAchecker:    8.370s
Time for statistics:              0.098s

Time for Garbage Collector:       0.139s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     35MB (    33 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8091MB (  7716 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
