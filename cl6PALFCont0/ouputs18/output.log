scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0p0rwdn0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 640: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 908: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1312 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1269 (97%)
  Because of loop head:            29 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (1%)
  Times precision was empty:       322 (25%)
  Times precision was {false}:     38 (3%)
  Times result was cached:         837 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      115 (9%)
  Times result was 'false':        154 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         290
  BDD entailment checks:           130
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          6
Number of abstraction locations:          37
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         1994
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 13.03
Number of irrelevant predicates:          691 (35%)
Number of preds handled by boolean abs:   214 (11%)
  Total number of models for allsat:      126
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  0.546s
  Time for path formula creation:        0.514s
Time for strengthen operator:            0.065s
Time for prec operator:                  1.156s
  Time for abstraction:                  1.063s (Max:     0.024s, Count: 1312)
    Boolean abstraction:                 0.181s
    Solving time:                        0.134s (Max:     0.009s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.037s (Max:     0.008s)
Time for merge operator:                 0.010s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.141s

Number of path formula cache hits:   3189 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.487s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         116 (count: 1386, min: 0, max: 116, avg: 0.08)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.084s
Automaton transfers with branching:                0
Automaton transfer successors:                         4857 (count: 4857, min: 1, max: 1, avg: 1.00) [1 x 4857]

CPA algorithm statistics
------------------------
Number of iterations:            3718
Max size of waitlist:            12
Average size of waitlist:        5
Number of computed successors:   4149
Max successors for one state:    2
Number of times merged:          80
Number of times stopped:         200
Number of times breaked:         14

Total time for CPA algorithm:         2.912s (Max:     0.424s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      1.419s
  Time for transfer relation:         1.152s
  Time for merge operator:            0.040s
  Time for stop operator:             0.055s
  Time for adding to reached set:     0.086s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 555 (count: 14, min: 26, max: 56, avg: 39.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.370s
  Counterexample analysis:                             0.183s (Max:     0.030s, Calls: 14)
    Refinement sat check:                              0.071s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.043s
  Precision update:                                    0.035s
  ARG update:                                          0.045s

Length of refined path (in blocks):                     384 (count: 14, min: 14, max: 49, avg: 27.43)
Number of affected states:                              337 (count: 14, min: 13, max: 48, avg: 24.07)
Length (states) of path with itp 'true':                 33 (count: 14, min: 0, max: 11, avg: 2.36)
Length (states) of path with itp non-trivial itp:       337 (count: 14, min: 13, max: 48, avg: 24.07)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 14, min: 0, max: 1, avg: 0.29)
Equal non-trivial interpolants along paths:             319 (count: 14, min: 12, max: 46, avg: 22.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 595
Max. size of reached set after ref.:  343
Avg. size of reached set before ref.: 308.43
Avg. size of reached set after ref.:  64.64

Total time for CEGAR algorithm:       3.319s
Time for refinements:                 0.404s
Average time for refinement:          0.028s
Max time for refinement:              0.075s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          84
  Total lines:            423
  Line coverage:          0.199
  Visited conditions:     28
  Total conditions:       68
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     603
Number of CFA edges:             649
Number of relevant variables:    112
Number of functions:             35
Number of loops:                 5
Size of reached set:             383
  Number of reached locations:   113 (19%)
    Avg states per location:     3
    Max states per location:     14 (at node N300)
  Number of reached functions:   16 (46%)
  Number of partitions:          382
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N471 (before lines 677-722), Function test called from node N361, stack depth 3 [7d5508e0], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.368s
  Time for loading CPAs:          0.988s
  Time for loading parser:        0.756s
  Time for CFA construction:      1.365s
    Time for parsing file(s):     0.484s
    Time for AST to CFA:          0.327s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.292s
      Time for var class.:        0.117s
Time for Analysis:                3.319s
CPU time for analysis:            3.320s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.691s
Total CPU time for CPAchecker:    6.690s
Time for statistics:              0.099s

Time for Garbage Collector:       0.180s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     33MB (    31 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8084MB (  7710 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
