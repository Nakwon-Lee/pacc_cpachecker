scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pw2at2_d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 301: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 905: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1261 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1208 (96%)
  Because of loop head:            36 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (1%)
  Times precision was empty:       179 (14%)
  Times precision was {false}:     49 (4%)
  Times result was cached:         827 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      206 (16%)
  Times result was 'false':        145 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         388
  BDD entailment checks:           140
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          36
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         2934
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.51
Number of irrelevant predicates:          851 (29%)
Number of preds handled by boolean abs:   463 (16%)
  Total number of models for allsat:      224
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.604s
  Time for path formula creation:        0.569s
Time for strengthen operator:            0.047s
Time for prec operator:                  1.433s
  Time for abstraction:                  1.323s (Max:     0.022s, Count: 1261)
    Boolean abstraction:                 0.294s
    Solving time:                        0.165s (Max:     0.009s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.035s (Max:     0.008s)
Time for merge operator:                 0.031s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.177s

Number of path formula cache hits:   3646 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.538s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               263
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         498 (count: 1885, min: 0, max: 269, avg: 0.26)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.142s
Automaton transfers with branching:                0
Automaton transfer successors:                         5113 (count: 5113, min: 1, max: 1, avg: 1.00) [1 x 5113]

CPA algorithm statistics
------------------------
Number of iterations:            3909
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   4403
Max successors for one state:    2
Number of times merged:          124
Number of times stopped:         245
Number of times breaked:         17

Total time for CPA algorithm:         3.355s (Max:     0.389s)
  Time for choose from waitlist:      0.038s
  Time for precision adjustment:      1.705s
  Time for transfer relation:         1.247s
  Time for merge operator:            0.071s
  Time for stop operator:             0.062s
  Time for adding to reached set:     0.082s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 723 (count: 17, min: 26, max: 61, avg: 42.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.370s
  Counterexample analysis:                             0.220s (Max:     0.032s, Calls: 17)
    Refinement sat check:                              0.090s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.013s
  ARG update:                                          0.062s

Length of refined path (in blocks):                     523 (count: 17, min: 16, max: 47, avg: 30.76)
Number of affected states:                              392 (count: 17, min: 11, max: 44, avg: 23.06)
Length (states) of path with itp 'true':                114 (count: 17, min: 0, max: 33, avg: 6.71)
Length (states) of path with itp non-trivial itp:       392 (count: 17, min: 11, max: 44, avg: 23.06)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 17, min: 0, max: 2, avg: 0.29)
Equal non-trivial interpolants along paths:             370 (count: 17, min: 10, max: 42, avg: 21.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 551
Max. size of reached set after ref.:  347
Avg. size of reached set before ref.: 280.88
Avg. size of reached set after ref.:  68.12

Total time for CEGAR algorithm:       3.816s
Time for refinements:                 0.457s
Average time for refinement:          0.026s
Max time for refinement:              0.087s

Code Coverage
-----------------------------
  Function coverage:      0.457
  Visited lines:          88
  Total lines:            423
  Line coverage:          0.208
  Visited conditions:     28
  Total conditions:       66
  Condition coverage:     0.424

CPAchecker general statistics
-----------------------------
Number of program locations:     601
Number of CFA edges:             643
Number of relevant variables:    110
Number of functions:             35
Number of loops:                 5
Size of reached set:             397
  Number of reached locations:   116 (19%)
    Avg states per location:     3
    Max states per location:     14 (at node N523)
  Number of reached functions:   16 (46%)
  Number of partitions:          396
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N67 (before lines 148-193), Function test called from node N591, stack depth 3 [1daf3b44], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.143s
  Time for loading CPAs:          0.733s
  Time for loading parser:        0.735s
  Time for CFA construction:      1.479s
    Time for parsing file(s):     0.545s
    Time for AST to CFA:          0.346s
    Time for CFA sanity check:    0.099s
    Time for post-processing:     0.335s
      Time for var class.:        0.171s
Time for Analysis:                3.816s
CPU time for analysis:            3.810s
Time for analyzing result:        0.005s
Total time for CPAchecker:        6.964s
Total CPU time for CPAchecker:    6.960s
Time for statistics:              0.094s

Time for Garbage Collector:       0.123s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    32 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8086MB (  7712 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
