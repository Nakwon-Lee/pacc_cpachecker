scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product41_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a2jgn66p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 438: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 452: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7492 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7359 (98%)
  Because of loop head:            90 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (1%)
  Times precision was empty:       269 (4%)
  Times precision was {false}:     97 (1%)
  Times result was cached:         5372 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1754 (23%)
  Times result was 'false':        867 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         3711
  BDD entailment checks:           2491
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          48
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         31237
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 16.88
Number of irrelevant predicates:          11234 (36%)
Number of preds handled by boolean abs:   6013 (19%)
  Total number of models for allsat:      2398
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.37

Time for post operator:                  1.265s
  Time for path formula creation:        1.207s
Time for strengthen operator:            0.103s
Time for prec operator:                  8.124s
  Time for abstraction:                  7.855s (Max:     0.027s, Count: 7492)
    Boolean abstraction:                 2.504s
    Solving time:                        1.758s (Max:     0.014s)
    Model enumeration time:              0.207s
    Time for BDD construction:           0.195s (Max:     0.010s)
Time for merge operator:                 0.090s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     1.965s

Number of path formula cache hits:   22092 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.088s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1618
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5201 (count: 14689, min: 0, max: 680, avg: 0.35)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.323s
Automaton transfers with branching:                0
Automaton transfer successors:                        29053 (count: 29053, min: 1, max: 1, avg: 1.00) [1 x 29053]

CPA algorithm statistics
------------------------
Number of iterations:            22008
Max size of waitlist:            17
Average size of waitlist:        7
Number of computed successors:   24501
Max successors for one state:    2
Number of times merged:          610
Number of times stopped:         1307
Number of times breaked:         43

Total time for CPA algorithm:        12.575s (Max:     0.801s)
  Time for choose from waitlist:      0.076s
  Time for precision adjustment:      8.714s
  Time for transfer relation:         2.736s
  Time for merge operator:            0.163s
  Time for stop operator:             0.153s
  Time for adding to reached set:     0.235s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                1967 (count: 43, min: 23, max: 70, avg: 45.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.004s
  Counterexample analysis:                             0.621s (Max:     0.030s, Calls: 43)
    Refinement sat check:                              0.273s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.062s
  ARG update:                                          0.193s

Length of refined path (in blocks):                    1463 (count: 43, min: 14, max: 61, avg: 34.02)
Number of affected states:                              993 (count: 43, min: 10, max: 60, avg: 23.09)
Length (states) of path with itp 'true':                427 (count: 43, min: 0, max: 36, avg: 9.93)
Length (states) of path with itp non-trivial itp:       993 (count: 43, min: 10, max: 60, avg: 23.09)
Length (states) of path with itp 'false':                43 (count: 43, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          31 (count: 43, min: 0, max: 3, avg: 0.72)
Equal non-trivial interpolants along paths:             919 (count: 43, min: 6, max: 58, avg: 21.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 1558
Max. size of reached set after ref.:  1231
Avg. size of reached set before ref.: 911.51
Avg. size of reached set after ref.:  432.79

Total time for CEGAR algorithm:      13.761s
Time for refinements:                 1.157s
Average time for refinement:          0.026s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.629
  Visited lines:          119
  Total lines:            426
  Line coverage:          0.279
  Visited conditions:     38
  Total conditions:       70
  Condition coverage:     0.543

CPAchecker general statistics
-----------------------------
Number of program locations:     605
Number of CFA edges:             651
Number of relevant variables:    115
Number of functions:             35
Number of loops:                 5
Size of reached set:             1743
  Number of reached locations:   158 (26%)
    Avg states per location:     11
    Max states per location:     70 (at node N164)
  Number of reached functions:   22 (63%)
  Number of partitions:          1687
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N133 (before lines 271-316), Function test called from node N293, stack depth 3 [43ac3b45], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.611s
  Time for loading CPAs:          1.029s
  Time for loading parser:        0.726s
  Time for CFA construction:      1.651s
    Time for parsing file(s):     0.520s
    Time for AST to CFA:          0.433s
    Time for CFA sanity check:    0.116s
    Time for post-processing:     0.397s
      Time for var class.:        0.165s
Time for Analysis:               13.768s
CPU time for analysis:           13.770s
Time for analyzing result:        0.001s
Total time for CPAchecker:       17.384s
Total CPU time for CPAchecker:   17.380s
Time for statistics:              0.112s

Time for Garbage Collector:       0.247s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     40MB (    38 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8135MB (  7758 MiB) max;   8113MB (  7737 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
