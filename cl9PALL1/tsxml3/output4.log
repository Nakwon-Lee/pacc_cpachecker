scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/array-examples/relax_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sup8pmdv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            238 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            178 (75%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60 (25%)
  Times precision was empty:       33 (14%)
  Times precision was {false}:     41 (17%)
  Times result was cached:         70 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      94 (39%)
  Times result was 'false':        103 (43%)
Number of strengthen sat checks:   0
Number of coverage checks:         478
  BDD entailment checks:           122
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       14
Number of predicates discovered:          26
Number of abstraction locations:          6
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         657
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 4.87
Number of irrelevant predicates:          120 (18%)
Number of preds handled by boolean abs:   480 (73%)
  Total number of models for allsat:      147
  Max number of models for allsat:        10
  Avg number of models for allsat:        1.56

Time for post operator:                  0.343s
  Time for path formula creation:        0.334s
Time for strengthen operator:            0.008s
Time for prec operator:                  0.554s
  Time for abstraction:                  0.527s (Max:     0.018s, Count: 238)
    Boolean abstraction:                 0.165s
    Solving time:                        0.090s (Max:     0.008s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.043s (Max:     0.012s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.123s

Number of path formula cache hits:   1712 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.336s

Total number of created targets for pointer analysis: 22
   Number of created targets for uf: *signed_int is 9


Number of BDD nodes:                               970
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1008 (count: 1406, min: 0, max: 1008, avg: 0.72)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.052s
Automaton transfers with branching:                0
Automaton transfer successors:                         2351 (count: 2351, min: 1, max: 1, avg: 1.00) [1 x 2351]

CPA algorithm statistics
------------------------
Number of iterations:            1596
Max size of waitlist:            12
Average size of waitlist:        5
Number of computed successors:   1964
Max successors for one state:    2
Number of times merged:          178
Number of times stopped:         211
Number of times breaked:         17

Total time for CPA algorithm:         1.270s (Max:     0.294s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      0.625s
  Time for transfer relation:         0.538s
  Time for merge operator:            0.024s
  Time for stop operator:             0.019s
  Time for adding to reached set:     0.014s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                  88 (count: 17, min: 3, max: 8, avg: 5.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.301s
  Counterexample analysis:                             0.195s (Max:     0.077s, Calls: 17)
    Refinement sat check:                              0.112s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.077s
  Predicate creation:                                  0.003s
  Precision update:                                    0.005s
  ARG update:                                          0.015s

Length of refined path (in blocks):                      70 (count: 16, min: 3, max: 6, avg: 4.38)
Number of affected states:                               26 (count: 16, min: 0, max: 5, avg: 1.63)
Length (states) of path with itp 'true':                 28 (count: 16, min: 0, max: 3, avg: 1.75)
Length (states) of path with itp non-trivial itp:        26 (count: 16, min: 0, max: 5, avg: 1.63)
Length (states) of path with itp 'false':                10 (count: 16, min: 0, max: 1, avg: 0.63)
Different non-trivial interpolants along paths:          14 (count: 16, min: 0, max: 4, avg: 0.88)
Equal non-trivial interpolants along paths:               1 (count: 16, min: 0, max: 1, avg: 0.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 503
Max. size of reached set after ref.:  210
Avg. size of reached set before ref.: 177.71
Avg. size of reached set after ref.:  85.63

Total time for CEGAR algorithm:       1.597s
Time for refinements:                 0.325s
Average time for refinement:          0.019s
Max time for refinement:              0.155s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          172
  Total lines:            179
  Line coverage:          0.961
  Visited conditions:     40
  Total conditions:       48
  Condition coverage:     0.833

CPAchecker general statistics
-----------------------------
Number of program locations:     367
Number of CFA edges:             388
Number of relevant variables:    22
Number of functions:             5
Number of loops:                 5
Size of reached set:             503
  Number of reached locations:   71 (19%)
    Avg states per location:     7
    Max states per location:     16 (at node N1)
  Number of reached functions:   3 (60%)
  Number of partitions:          491
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N64 (before line 1126), Function main called from node N47, stack depth 1 [147e2ae7], stack [main]])
  Number of target states:       1
  Size of final wait list        8

Time for analysis setup:          1.970s
  Time for loading CPAs:          0.510s
  Time for loading parser:        0.454s
  Time for CFA construction:      0.880s
    Time for parsing file(s):     0.323s
    Time for AST to CFA:          0.247s
    Time for CFA sanity check:    0.033s
    Time for post-processing:     0.165s
      Time for var class.:        0.063s
Time for Analysis:                1.598s
CPU time for analysis:            1.600s
Time for analyzing result:        0.001s
Total time for CPAchecker:        3.571s
Total CPU time for CPAchecker:    3.560s
Time for statistics:              0.054s

Time for Garbage Collector:       0.082s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     32MB (    30 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     25MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8074MB (  7700 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 8) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
