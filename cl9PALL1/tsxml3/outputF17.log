scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/array-examples/relax_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zf086x87/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            240 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            176 (73%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         64 (27%)
  Times precision was empty:       32 (13%)
  Times precision was {false}:     41 (17%)
  Times result was cached:         78 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      89 (37%)
  Times result was 'false':        101 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         481
  BDD entailment checks:           113
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       14
Number of predicates discovered:          24
Number of abstraction locations:          6
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         652
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 5.02
Number of irrelevant predicates:          124 (19%)
Number of preds handled by boolean abs:   464 (71%)
  Total number of models for allsat:      165
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.85

Time for post operator:                  0.335s
  Time for path formula creation:        0.330s
Time for strengthen operator:            0.017s
Time for prec operator:                  0.517s
  Time for abstraction:                  0.491s (Max:     0.015s, Count: 240)
    Boolean abstraction:                 0.152s
    Solving time:                        0.105s (Max:     0.009s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.020s (Max:     0.006s)
Time for merge operator:                 0.024s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.133s

Number of path formula cache hits:   1744 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.321s

Total number of created targets for pointer analysis: 22
   Number of created targets for uf: *signed_int is 9


Number of BDD nodes:                               1128
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         898 (count: 1349, min: 0, max: 898, avg: 0.67)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.052s
Automaton transfers with branching:                0
Automaton transfer successors:                         2390 (count: 2390, min: 1, max: 1, avg: 1.00) [1 x 2390]

CPA algorithm statistics
------------------------
Number of iterations:            1620
Max size of waitlist:            12
Average size of waitlist:        5
Number of computed successors:   2003
Max successors for one state:    2
Number of times merged:          184
Number of times stopped:         212
Number of times breaked:         22

Total time for CPA algorithm:         1.319s (Max:     0.284s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      0.596s
  Time for transfer relation:         0.524s
  Time for merge operator:            0.041s
  Time for stop operator:             0.035s
  Time for adding to reached set:     0.037s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 115 (count: 22, min: 3, max: 8, avg: 5.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.385s
  Counterexample analysis:                             0.240s (Max:     0.096s, Calls: 22)
    Refinement sat check:                              0.175s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.092s
  Predicate creation:                                  0.008s
  Precision update:                                    0.014s
  ARG update:                                          0.010s

Length of refined path (in blocks):                      92 (count: 21, min: 3, max: 6, avg: 4.38)
Number of affected states:                               24 (count: 21, min: 0, max: 5, avg: 1.14)
Length (states) of path with itp 'true':                 47 (count: 21, min: 0, max: 5, avg: 2.24)
Length (states) of path with itp non-trivial itp:        24 (count: 21, min: 0, max: 5, avg: 1.14)
Length (states) of path with itp 'false':                15 (count: 21, min: 0, max: 1, avg: 0.71)
Different non-trivial interpolants along paths:          13 (count: 21, min: 0, max: 4, avg: 0.62)
Equal non-trivial interpolants along paths:               1 (count: 21, min: 0, max: 1, avg: 0.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 537
Max. size of reached set after ref.:  210
Avg. size of reached set before ref.: 152.95
Avg. size of reached set after ref.:  79.71

Total time for CEGAR algorithm:       1.747s
Time for refinements:                 0.415s
Average time for refinement:          0.018s
Max time for refinement:              0.195s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          172
  Total lines:            179
  Line coverage:          0.961
  Visited conditions:     40
  Total conditions:       48
  Condition coverage:     0.833

CPAchecker general statistics
-----------------------------
Number of program locations:     367
Number of CFA edges:             388
Number of relevant variables:    22
Number of functions:             5
Number of loops:                 5
Size of reached set:             537
  Number of reached locations:   71 (19%)
    Avg states per location:     7
    Max states per location:     17 (at node N1)
  Number of reached functions:   3 (60%)
  Number of partitions:          525
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N64 (before line 1126), Function main called from node N47, stack depth 1 [147e2ae7], stack [main]])
  Number of target states:       1
  Size of final wait list        8

Time for analysis setup:          2.130s
  Time for loading CPAs:          0.514s
  Time for loading parser:        0.530s
  Time for CFA construction:      0.945s
    Time for parsing file(s):     0.327s
    Time for AST to CFA:          0.272s
    Time for CFA sanity check:    0.051s
    Time for post-processing:     0.180s
      Time for var class.:        0.063s
Time for Analysis:                1.748s
CPU time for analysis:            1.750s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.882s
Total CPU time for CPAchecker:    3.880s
Time for statistics:              0.089s

Time for Garbage Collector:       0.087s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     32MB (    30 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     25MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8070MB (  7696 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 8) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
