scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/array-examples/relax_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6096sgdz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            178 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            131 (74%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (26%)
  Times precision was empty:       23 (13%)
  Times precision was {false}:     42 (24%)
  Times result was cached:         56 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      57 (32%)
  Times result was 'false':        68 (38%)
Number of strengthen sat checks:   0
Number of coverage checks:         381
  BDD entailment checks:           77
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       14
Number of predicates discovered:          14
Number of abstraction locations:          6
Max number of predicates per location:    9
Avg number of predicates per location:    2
Total predicates per abstraction:         318
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 3.21
Number of irrelevant predicates:          90 (28%)
Number of preds handled by boolean abs:   192 (60%)
  Total number of models for allsat:      107
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.88

Time for post operator:                  0.278s
  Time for path formula creation:        0.272s
Time for strengthen operator:            0.016s
Time for prec operator:                  0.446s
  Time for abstraction:                  0.425s (Max:     0.019s, Count: 178)
    Boolean abstraction:                 0.156s
    Solving time:                        0.118s (Max:     0.017s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.010s (Max:     0.004s)
Time for merge operator:                 0.019s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.137s

Number of path formula cache hits:   1444 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.271s

Total number of created targets for pointer analysis: 14
   Number of created targets for uf: *signed_int is 7


Number of BDD nodes:                               466
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 854, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.051s
Automaton transfers with branching:                0
Automaton transfer successors:                         1888 (count: 1888, min: 1, max: 1, avg: 1.00) [1 x 1888]

CPA algorithm statistics
------------------------
Number of iterations:            1234
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   1535
Max successors for one state:    2
Number of times merged:          152
Number of times stopped:         183
Number of times breaked:         15

Total time for CPA algorithm:         1.088s (Max:     0.161s)
  Time for choose from waitlist:      0.003s
  Time for precision adjustment:      0.511s
  Time for transfer relation:         0.459s
  Time for merge operator:            0.038s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.009s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                  76 (count: 15, min: 3, max: 8, avg: 5.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.246s
  Counterexample analysis:                             0.133s (Max:     0.058s, Calls: 15)
    Refinement sat check:                              0.089s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.065s
  Predicate creation:                                  0.007s
  Precision update:                                    0.009s
  ARG update:                                          0.011s

Length of refined path (in blocks):                      60 (count: 14, min: 3, max: 6, avg: 4.29)
Number of affected states:                               22 (count: 14, min: 0, max: 4, avg: 1.57)
Length (states) of path with itp 'true':                 24 (count: 14, min: 0, max: 3, avg: 1.71)
Length (states) of path with itp non-trivial itp:        22 (count: 14, min: 0, max: 4, avg: 1.57)
Length (states) of path with itp 'false':                 6 (count: 14, min: 0, max: 1, avg: 0.43)
Different non-trivial interpolants along paths:          11 (count: 14, min: 0, max: 2, avg: 0.79)
Equal non-trivial interpolants along paths:               1 (count: 14, min: 0, max: 1, avg: 0.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 336
Max. size of reached set after ref.:  111
Avg. size of reached set before ref.: 141.13
Avg. size of reached set after ref.:  59.43

Total time for CEGAR algorithm:       1.376s
Time for refinements:                 0.287s
Average time for refinement:          0.019s
Max time for refinement:              0.127s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          172
  Total lines:            179
  Line coverage:          0.961
  Visited conditions:     40
  Total conditions:       48
  Condition coverage:     0.833

CPAchecker general statistics
-----------------------------
Number of program locations:     367
Number of CFA edges:             388
Number of relevant variables:    22
Number of functions:             5
Number of loops:                 5
Size of reached set:             336
  Number of reached locations:   71 (19%)
    Avg states per location:     4
    Max states per location:     11 (at node N1)
  Number of reached functions:   3 (60%)
  Number of partitions:          329
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N81 (before line 1137), Function main called from node N47, stack depth 1 [147e2ae7], stack [main]])
  Number of target states:       1
  Size of final wait list        7

Time for analysis setup:          2.164s
  Time for loading CPAs:          0.588s
  Time for loading parser:        0.487s
  Time for CFA construction:      0.969s
    Time for parsing file(s):     0.390s
    Time for AST to CFA:          0.232s
    Time for CFA sanity check:    0.058s
    Time for post-processing:     0.169s
      Time for var class.:        0.056s
Time for Analysis:                1.377s
CPU time for analysis:            1.370s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.546s
Total CPU time for CPAchecker:    3.530s
Time for statistics:              0.047s

Time for Garbage Collector:       0.091s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    52 MiB) max;     32MB (    30 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     24MB (    23 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8071MB (  7697 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 8) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
