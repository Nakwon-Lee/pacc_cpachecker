scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/array-examples/relax_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7dt56zzy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            288 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            216 (75%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         72 (25%)
  Times precision was empty:       18 (6%)
  Times precision was {false}:     63 (22%)
  Times result was cached:         96 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      111 (39%)
  Times result was 'false':        144 (50%)
Number of strengthen sat checks:   0
Number of coverage checks:         609
  BDD entailment checks:           143
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       14
Number of predicates discovered:          26
Number of abstraction locations:          6
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         867
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 4.98
Number of irrelevant predicates:          193 (22%)
Number of preds handled by boolean abs:   601 (69%)
  Total number of models for allsat:      193
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.74

Time for post operator:                  0.312s
  Time for path formula creation:        0.301s
Time for strengthen operator:            0.006s
Time for prec operator:                  0.675s
  Time for abstraction:                  0.640s (Max:     0.019s, Count: 288)
    Boolean abstraction:                 0.257s
    Solving time:                        0.197s (Max:     0.013s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.010s (Max:     0.004s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.222s

Number of path formula cache hits:   2305 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.286s

Total number of created targets for pointer analysis: 22
   Number of created targets for uf: *signed_int is 9


Number of BDD nodes:                               1302
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         772 (count: 1730, min: 0, max: 772, avg: 0.45)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.060s
Automaton transfers with branching:                0
Automaton transfer successors:                         2911 (count: 2911, min: 1, max: 1, avg: 1.00) [1 x 2911]

CPA algorithm statistics
------------------------
Number of iterations:            2019
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   2488
Max successors for one state:    2
Number of times merged:          233
Number of times stopped:         263
Number of times breaked:         16

Total time for CPA algorithm:         1.500s (Max:     0.345s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      0.766s
  Time for transfer relation:         0.583s
  Time for merge operator:            0.042s
  Time for stop operator:             0.033s
  Time for adding to reached set:     0.006s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                  86 (count: 16, min: 3, max: 8, avg: 5.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.298s
  Counterexample analysis:                             0.183s (Max:     0.077s, Calls: 16)
    Refinement sat check:                              0.098s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.080s
  Predicate creation:                                  0.011s
  Precision update:                                    0.004s
  ARG update:                                          0.010s

Length of refined path (in blocks):                      69 (count: 15, min: 3, max: 7, avg: 4.60)
Number of affected states:                               31 (count: 15, min: 0, max: 6, avg: 2.07)
Length (states) of path with itp 'true':                 23 (count: 15, min: 0, max: 3, avg: 1.53)
Length (states) of path with itp non-trivial itp:        31 (count: 15, min: 0, max: 6, avg: 2.07)
Length (states) of path with itp 'false':                 8 (count: 15, min: 0, max: 1, avg: 0.53)
Different non-trivial interpolants along paths:          18 (count: 15, min: 0, max: 4, avg: 1.20)
Equal non-trivial interpolants along paths:               2 (count: 15, min: 0, max: 1, avg: 0.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 536
Max. size of reached set after ref.:  104
Avg. size of reached set before ref.: 174.63
Avg. size of reached set after ref.:  47.47

Total time for CEGAR algorithm:       1.829s
Time for refinements:                 0.329s
Average time for refinement:          0.020s
Max time for refinement:              0.159s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          172
  Total lines:            179
  Line coverage:          0.961
  Visited conditions:     40
  Total conditions:       48
  Condition coverage:     0.833

CPAchecker general statistics
-----------------------------
Number of program locations:     367
Number of CFA edges:             388
Number of relevant variables:    22
Number of functions:             5
Number of loops:                 5
Size of reached set:             536
  Number of reached locations:   70 (19%)
    Avg states per location:     7
    Max states per location:     17 (at node N1)
  Number of reached functions:   3 (60%)
  Number of partitions:          524
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N64 (before line 1126), Function main called from node N47, stack depth 1 [147e2ae7], stack [main]])
  Number of target states:       1
  Size of final wait list        7

Time for analysis setup:          2.462s
  Time for loading CPAs:          0.585s
  Time for loading parser:        0.612s
  Time for CFA construction:      1.123s
    Time for parsing file(s):     0.407s
    Time for AST to CFA:          0.352s
    Time for CFA sanity check:    0.054s
    Time for post-processing:     0.175s
      Time for var class.:        0.059s
Time for Analysis:                1.829s
CPU time for analysis:            1.830s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.294s
Total CPU time for CPAchecker:    4.290s
Time for statistics:              0.054s

Time for Garbage Collector:       0.085s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     31MB (    30 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8073MB (  7699 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 8) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
