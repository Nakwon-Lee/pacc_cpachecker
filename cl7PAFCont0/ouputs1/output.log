scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--arcnet--com90xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6rbinazt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6748: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6742: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            51688 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35574 (69%)
  Because of loop head:            15990 (31%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         124 (0%)
  Times precision was empty:       11090 (21%)
  Times precision was {false}:     521 (1%)
  Times result was cached:         37350 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2727 (5%)
  Times result was 'false':        1146 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         111324
  BDD entailment checks:           33222
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          8
Number of abstraction locations:          88
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         202343
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 62.30
Number of irrelevant predicates:          73670 (36%)
Number of preds handled by boolean abs:   8016 (4%)
  Total number of models for allsat:      2835
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  2.934s
  Time for path formula creation:        2.751s
Time for strengthen operator:            0.361s
Time for prec operator:                 11.821s
  Time for abstraction:                 11.204s (Max:     0.029s, Count: 51688)
    Boolean abstraction:                 2.392s
    Solving time:                        2.260s (Max:     0.016s)
    Model enumeration time:              0.180s
    Time for BDD construction:           0.102s (Max:     0.012s)
Time for merge operator:                 0.237s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     2.440s

Number of path formula cache hits:   525773 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.063s

Total number of created targets for pointer analysis: 3459
   Number of created targets for uf: *(struct_net_device)* is 385
   Number of created targets for uf: *signed_int is 381
   Number of created targets for uf: *unsigned_long_int is 25


Number of BDD nodes:                               315
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5563 (count: 63396, min: 0, max: 224, avg: 0.09)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.699s
  Time for transition matches:                         0.360s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                       465342 (count: 465342, min: 1, max: 1, avg: 1.00) [1 x 465342]

CPA algorithm statistics
------------------------
Number of iterations:            319090
Max size of waitlist:            58
Average size of waitlist:        29
Number of computed successors:   376308
Max successors for one state:    2
Number of times merged:          39051
Number of times stopped:         55235
Number of times breaked:         124

Total time for CPA algorithm:        22.966s (Max:     1.231s)
  Time for choose from waitlist:      0.188s
  Time for precision adjustment:     13.604s
  Time for transfer relation:         6.915s
  Time for merge operator:            0.628s
  Time for stop operator:             0.429s
  Time for adding to reached set:     0.376s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   124
Avg. length of target path (in blocks):                4898 (count: 124, min: 7, max: 74, avg: 39.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.292s
  Counterexample analysis:                             1.544s (Max:     0.034s, Calls: 124)
    Refinement sat check:                              1.111s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.060s
  ARG update:                                          0.521s

Length of refined path (in blocks):                    4687 (count: 124, min: 6, max: 73, avg: 37.80)
Number of affected states:                             4419 (count: 124, min: 5, max: 72, avg: 35.64)
Length (states) of path with itp 'true':                144 (count: 124, min: 0, max: 12, avg: 1.16)
Length (states) of path with itp non-trivial itp:      4419 (count: 124, min: 5, max: 72, avg: 35.64)
Length (states) of path with itp 'false':               124 (count: 124, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 124, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4295 (count: 124, min: 4, max: 71, avg: 34.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                124
Number of successful refinements:     124
Number of failed refinements:         0
Max. size of reached set before ref.: 4540
Max. size of reached set after ref.:  160
Avg. size of reached set before ref.: 2573.04
Avg. size of reached set after ref.:  17.85

Total time for CEGAR algorithm:      25.565s
Time for refinements:                 2.594s
Average time for refinement:          0.020s
Max time for refinement:              0.088s

Code Coverage
-----------------------------
  Function coverage:      0.439
  Visited lines:          1592
  Total lines:            1795
  Line coverage:          0.887
  Visited conditions:     323
  Total conditions:       392
  Condition coverage:     0.824

CPAchecker general statistics
-----------------------------
Number of program locations:     2319
Number of CFA edges:             2523
Number of relevant variables:    200
Number of functions:             57
Number of loops:                 20
Size of reached set:             3085
  Number of reached locations:   792 (34%)
    Avg states per location:     3
    Max states per location:     24 (at node N790)
  Number of reached functions:   25 (44%)
  Number of partitions:          3056
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N256 (before line 5388), Function com90xx_probe called from node N1055, stack depth 3 [c773c3c], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0

Time for analysis setup:          3.134s
  Time for loading CPAs:          0.617s
  Time for loading parser:        0.466s
  Time for CFA construction:      1.991s
    Time for parsing file(s):     0.578s
    Time for AST to CFA:          0.662s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.480s
      Time for var class.:        0.160s
Time for Analysis:               25.565s
CPU time for analysis:           25.570s
Time for analyzing result:        0.002s
Total time for CPAchecker:       28.703s
Total CPU time for CPAchecker:   28.700s
Time for statistics:              0.077s

Time for Garbage Collector:       0.921s (in 160 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     49MB (    47 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8067MB (  7693 MiB) max;   8058MB (  7685 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
