scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h1qkxek_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2115: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2887: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            916095 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  910568 (99%)
  Because of loop head:            5428 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         99 (0%)
  Times precision was empty:       4832 (1%)
  Times precision was {false}:     349 (0%)
  Times result was cached:         888614 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22300 (2%)
  Times result was 'false':        27263 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1930795
  BDD entailment checks:           309597
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          201
Number of abstraction locations:          177
Max number of predicates per location:    36
Avg number of predicates per location:    17
Total predicates per abstraction:         12425281
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 548.60
Number of irrelevant predicates:          4640777 (37%)
Number of preds handled by boolean abs:   256575 (2%)
  Total number of models for allsat:      967204
  Max number of models for allsat:        11064
  Avg number of models for allsat:        43.37

Time for post operator:                 29.827s
  Time for path formula creation:       26.106s
Time for strengthen operator:            6.380s
Time for prec operator:                677.911s
  Time for abstraction:                665.469s (Max:     2.179s, Count: 916095)
    Boolean abstraction:               193.003s
    Solving time:                       41.922s (Max:     0.029s)
    Model enumeration time:            102.434s
    Time for BDD construction:          44.783s (Max:     0.695s)
Time for merge operator:                 4.096s
Time for coverage check:                 1.032s
  Time for BDD entailment checks:        0.830s
Total time for SMT solver (w/o itp):   144.356s

Number of path formula cache hits:   7582697 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.169s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               105030
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      255282 (count: 535398, min: 0, max: 3589, avg: 0.48)
Time for BDD node cleanup:                             0.119s
Time for BDD garbage collection:                       0.524s (in 94 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.782s
  Time for transition matches:                         5.193s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      6469615 (count: 6469615, min: 1, max: 1, avg: 1.00) [1 x 6469615]

CPA algorithm statistics
------------------------
Number of iterations:            4876807
Max size of waitlist:            226
Average size of waitlist:        43
Number of computed successors:   5836345
Max successors for one state:    2
Number of times merged:          810599
Number of times stopped:         932494
Number of times breaked:         99

Total time for CPA algorithm:       861.508s (Max:    54.669s)
  Time for choose from waitlist:      1.754s
  Time for precision adjustment:    715.871s
  Time for transfer relation:        95.804s
  Time for merge operator:           14.234s
  Time for stop operator:             7.510s
  Time for adding to reached set:    10.123s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   99
Avg. length of target path (in blocks):               16077 (count: 99, min: 82, max: 277, avg: 162.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  28.299s
  Counterexample analysis:                            15.787s (Max:     0.519s, Calls: 99)
    Refinement sat check:                              4.619s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.305s
  Precision update:                                    0.224s
  ARG update:                                         11.729s

Length of refined path (in blocks):                   10318 (count: 99, min: 39, max: 234, avg: 104.22)
Number of affected states:                             8865 (count: 99, min: 1, max: 233, avg: 89.55)
Length (states) of path with itp 'true':               1354 (count: 99, min: 0, max: 103, avg: 13.68)
Length (states) of path with itp non-trivial itp:      8865 (count: 99, min: 1, max: 233, avg: 89.55)
Length (states) of path with itp 'false':                99 (count: 99, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1026 (count: 99, min: 0, max: 57, avg: 10.36)
Equal non-trivial interpolants along paths:            7740 (count: 99, min: 0, max: 231, avg: 78.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                99
Number of successful refinements:     99
Number of failed refinements:         0
Max. size of reached set before ref.: 215493
Max. size of reached set after ref.:  157536
Avg. size of reached set before ref.: 62181.16
Avg. size of reached set after ref.:  14797.08

Total time for CEGAR algorithm:     895.662s
Time for refinements:                32.826s
Average time for refinement:          0.331s
Max time for refinement:              1.017s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          866
  Total lines:            1453
  Line coverage:          0.596
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             185565
  Number of reached locations:   901 (45%)
    Avg states per location:     205
    Max states per location:     3792 (at node N1155)
  Number of reached functions:   72 (64%)
  Number of partitions:          184554
    Avg size of partitions:      1
    Max size of partitions:      57 (with key [N809 (before lines 1114-1281), Function test called from node N1274, stack depth 2 [3cafa087], stack [main, test]])
  Number of target states:       0
  Size of final wait list        38

Time for analysis setup:          4.544s
  Time for loading CPAs:          0.940s
  Time for loading parser:        0.799s
  Time for CFA construction:      2.660s
    Time for parsing file(s):     0.824s
    Time for AST to CFA:          0.776s
    Time for CFA sanity check:    0.264s
    Time for post-processing:     0.656s
      Time for var class.:        0.343s
Time for Analysis:              895.662s
CPU time for analysis:          895.620s
Total time for CPAchecker:      900.212s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              1.831s

Time for Garbage Collector:      68.978s (in 1574 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                762MB (   727 MiB) max;    313MB (   298 MiB) avg;    785MB (   749 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           789MB (   753 MiB) max;    463MB (   441 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8815MB (  8407 MiB) max;   8460MB (  8068 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
