scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product36_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m448q302/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 599: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 646: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 972: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1055: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1149: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1418: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1490: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1537: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1604: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2111: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2148: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2185: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            420 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  413 (98%)
  Because of loop head:            5 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       408 (97%)
  Times precision was {false}:     1 (0%)
  Times result was cached:         7 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (1%)
  Times result was 'false':        6 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         605
  BDD entailment checks:           19
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          2
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         12
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.40
Number of irrelevant predicates:          6 (50%)
Number of preds handled by boolean abs:   4 (33%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.694s
  Time for path formula creation:        0.649s
Time for strengthen operator:            0.024s
Time for prec operator:                  0.197s
  Time for abstraction:                  0.074s (Max:     0.014s, Count: 420)
    Boolean abstraction:                 0.015s
    Solving time:                        0.009s (Max:     0.008s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.009s

Number of path formula cache hits:   58 (2%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.632s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           9 (count: 461, min: 0, max: 9, avg: 0.02)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.090s
Automaton transfers with branching:                0
Automaton transfer successors:                         2837 (count: 2837, min: 1, max: 1, avg: 1.00) [1 x 2837]

CPA algorithm statistics
------------------------
Number of iterations:            1946
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   2265
Max successors for one state:    2
Number of times merged:          293
Number of times stopped:         312
Number of times breaked:         2

Total time for CPA algorithm:         1.992s (Max:     1.056s)
  Time for choose from waitlist:      0.030s
  Time for precision adjustment:      0.413s
  Time for transfer relation:         1.206s
  Time for merge operator:            0.109s
  Time for stop operator:             0.054s
  Time for adding to reached set:     0.053s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                 144 (count: 2, min: 68, max: 76, avg: 72.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.131s
  Counterexample analysis:                             0.101s (Max:     0.064s, Calls: 2)
    Refinement sat check:                              0.057s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.003s
  ARG update:                                          0.001s

Length of refined path (in blocks):                     142 (count: 2, min: 67, max: 75, avg: 71.00)
Number of affected states:                                2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                138 (count: 2, min: 65, max: 73, avg: 69.00)
Length (states) of path with itp non-trivial itp:         2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 1078
Max. size of reached set after ref.:  1070
Avg. size of reached set before ref.: 845.50
Avg. size of reached set after ref.:  837.50

Total time for CEGAR algorithm:       2.179s
Time for refinements:                 0.184s
Average time for refinement:          0.092s
Max time for refinement:              0.131s

Code Coverage
-----------------------------
  Function coverage:      0.511
  Visited lines:          595
  Total lines:            1294
  Line coverage:          0.460
  Visited conditions:     198
  Total conditions:       476
  Condition coverage:     0.416

CPAchecker general statistics
-----------------------------
Number of program locations:     1765
Number of CFA edges:             1983
Number of relevant variables:    300
Number of functions:             94
Number of loops:                 4
Size of reached set:             1932
  Number of reached locations:   554 (31%)
    Avg states per location:     3
    Max states per location:     17 (at node N1517)
  Number of reached functions:   48 (51%)
  Number of partitions:          1932
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.246s
  Time for loading CPAs:          0.833s
  Time for loading parser:        0.766s
  Time for CFA construction:      2.446s
    Time for parsing file(s):     0.753s
    Time for AST to CFA:          0.757s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.562s
      Time for var class.:        0.289s
Time for Analysis:                2.179s
CPU time for analysis:            2.180s
Time for analyzing result:        0.013s
Total time for CPAchecker:        6.430s
Total CPU time for CPAchecker:    6.430s
Time for statistics:              0.143s

Time for Garbage Collector:       0.164s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     32MB (    30 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     26MB (    25 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8136MB (  7760 MiB) max;   8079MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
