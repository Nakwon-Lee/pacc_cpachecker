scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--hwmon--nct6775.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xk7yxu8a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11050: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 12204: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12229: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12281: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12311: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12341: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 12373: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12890: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12925: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12945: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 12980: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13000: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13035: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13055: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13090: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13110: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13145: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13165: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13200: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13220: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13255: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13275: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13310: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13330: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13365: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13385: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13420: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13440: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13474: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13494: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13529: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13549: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13584: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13604: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13639: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13659: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13694: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13714: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13749: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13769: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13804: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13824: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13879: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13914: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13934: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13969: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13989: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14043: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14077: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14097: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14131: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14151: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14185: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14205: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14239: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14259: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14293: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14313: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14347: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14361: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14376: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14390: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14405: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14419: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14434: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14448: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14463: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14477: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 14492: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 15081: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12626: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17511: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17530: Function pointer *function with type void (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6054: Function pointer *(data->fan_from_reg) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6568: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4316: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6675: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6666: Function pointer *(data->fan_from_reg_min) with type unsigned int (*)(u16 , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11273: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_check_resource_conflict to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4316: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3540 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1430 (40%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2110 (60%)
  Times precision was empty:       1376 (39%)
  Times precision was {false}:     1454 (41%)
  Times result was cached:         567 (16%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      143 (4%)
  Times result was 'false':        1979 (56%)
Number of strengthen sat checks:   0
Number of coverage checks:         10091
  BDD entailment checks:           191
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       361
Number of predicates discovered:          26
Number of abstraction locations:          32
Max number of predicates per location:    24
Avg number of predicates per location:    2
Total predicates per abstraction:         4524
Max number of predicates per abstraction: 24
Avg number of predicates per abstraction: 2.83
Number of irrelevant predicates:          1979 (44%)
Number of preds handled by boolean abs:   1663 (37%)
  Total number of models for allsat:      121
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.85

Time for post operator:                  8.127s
  Time for path formula creation:        8.003s
Time for strengthen operator:            0.198s
Time for prec operator:                843.977s
  Time for abstraction:                843.722s (Max:   808.214s, Count: 3540)
    Boolean abstraction:               835.946s
    Solving time:                      830.735s (Max:   808.173s)
    Model enumeration time:              7.329s
    Time for BDD construction:           0.028s (Max:     0.002s)
Time for merge operator:                 1.326s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.002s
Total time for SMT solver (w/o itp):   838.065s

Number of path formula cache hits:   103277 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.800s

Total number of created targets for pointer analysis: 45086
   Number of created targets for uf: *unsigned_short_int is 727
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *enum_kinds is 5
   Number of created targets for uf: *signed_int is 66
   Number of created targets for uf: *(char)* is 67
   Number of created targets for uf: *unsigned_char is 139
   Number of created targets for uf: *_Bool is 58
   Number of created targets for uf: *unsigned_long_long_int is 5
   Number of created targets for uf: *(struct_platform_device)* is 9
   Number of created targets for uf: *(struct_platform_driver)* is 2


Number of BDD nodes:                               1579
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4753 (count: 13012, min: 0, max: 301, avg: 0.37)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.523s
  Time for transition matches:                         0.173s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                       109403 (count: 109403, min: 1, max: 1, avg: 1.00) [1 x 109403]

CPA algorithm statistics
------------------------
Number of iterations:            70608
Max size of waitlist:            64
Average size of waitlist:        37
Number of computed successors:   78844
Max successors for one state:    2
Number of times merged:          4950
Number of times stopped:         5073
Number of times breaked:         154

Total time for CPA algorithm:       858.544s (Max:   812.771s)
  Time for choose from waitlist:      0.088s
  Time for precision adjustment:    844.931s
  Time for transfer relation:        10.919s
  Time for merge operator:            1.490s
  Time for stop operator:             0.190s
  Time for adding to reached set:     0.294s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   154
Avg. length of target path (in blocks):                 369 (count: 154, min: 1, max: 10, avg: 2.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.599s
  Counterexample analysis:                            31.070s (Max:     1.104s, Calls: 154)
    Refinement sat check:                             29.163s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.049s
  ARG update:                                          0.320s

Length of refined path (in blocks):                     369 (count: 154, min: 1, max: 10, avg: 2.40)
Number of affected states:                              117 (count: 154, min: 0, max: 8, avg: 0.76)
Length (states) of path with itp 'true':                 98 (count: 154, min: 0, max: 9, avg: 0.64)
Length (states) of path with itp non-trivial itp:       117 (count: 154, min: 0, max: 8, avg: 0.76)
Length (states) of path with itp 'false':                 0 (count: 154, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 154, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:              70 (count: 154, min: 0, max: 7, avg: 0.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                154
Number of successful refinements:     154
Number of failed refinements:         0
Max. size of reached set before ref.: 6673
Max. size of reached set after ref.:  6654
Avg. size of reached set before ref.: 1014.46
Avg. size of reached set after ref.:  575.56

Total time for CEGAR algorithm:     890.618s
Time for refinements:                31.988s
Average time for refinement:          0.207s
Max time for refinement:              1.112s

Code Coverage
-----------------------------
  Function coverage:      0.157
  Visited lines:          2057
  Total lines:            7131
  Line coverage:          0.288
  Visited conditions:     320
  Total conditions:       1672
  Condition coverage:     0.191

CPAchecker general statistics
-----------------------------
Number of program locations:     10536
Number of CFA edges:             12020
Number of relevant variables:    1933
Number of functions:             650
Number of loops:                 75
Size of reached set:             4201
  Number of reached locations:   939 (9%)
    Avg states per location:     4
    Max states per location:     97 (at node N99)
  Number of reached functions:   102 (16%)
  Number of partitions:          4199
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4809 (before line 10549), Function sensors_nct6775_init called from node N4868, stack depth 4 [5dacf18d], stack [main, ldv_entry_EMGentry_36, ldv_EMGentry_init_sensors_nct6775_init_36_11, sensors_nct6775_init]])
  Number of target states:       0
  Size of final wait list        54

Time for analysis setup:          9.839s
  Time for loading CPAs:          1.410s
  Time for loading parser:        0.796s
  Time for CFA construction:      7.448s
    Time for parsing file(s):     1.543s
    Time for AST to CFA:          3.042s
    Time for CFA sanity check:    0.633s
    Time for post-processing:     1.898s
      Time for var class.:        1.127s
Time for Analysis:              890.618s
CPU time for analysis:          890.580s
Total time for CPAchecker:      900.471s
Total CPU time for CPAchecker:  900.400s
Time for statistics:              0.202s

Time for Garbage Collector:       0.965s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    86 MiB) max;     75MB (    71 MiB) avg;     95MB (    91 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     47MB (    44 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8409MB (  8019 MiB) max;   8304MB (  7919 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
