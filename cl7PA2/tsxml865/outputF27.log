scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--iuu_phoenix.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xdurnkjk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            23110 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21103 (91%)
  Because of loop head:            1859 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         148 (1%)
  Times precision was empty:       4903 (21%)
  Times precision was {false}:     453 (2%)
  Times result was cached:         17427 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      327 (1%)
  Times result was 'false':        773 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         28309
  BDD entailment checks:           3857
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       443
Number of predicates discovered:          2
Number of abstraction locations:          158
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         18207
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 23.34
Number of irrelevant predicates:          6005 (33%)
Number of preds handled by boolean abs:   327 (2%)
  Total number of models for allsat:      337
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  6.921s
  Time for path formula creation:        6.692s
Time for strengthen operator:            0.406s
Time for prec operator:                  5.607s
  Time for abstraction:                  5.200s (Max:     0.034s, Count: 23110)
    Boolean abstraction:                 0.486s
    Solving time:                        1.077s (Max:     0.030s)
    Model enumeration time:              0.042s
    Time for BDD construction:           0.025s (Max:     0.008s)
Time for merge operator:                 0.283s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     1.119s

Number of path formula cache hits:   483716 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.355s

Total number of created targets for pointer analysis: 1276
   Number of created targets for uf: *signed_int is 192
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         653 (count: 13001, min: 0, max: 32, avg: 0.05)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.772s
  Time for transition matches:                         0.365s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                       521424 (count: 521424, min: 1, max: 1, avg: 1.00) [1 x 521424]

CPA algorithm statistics
------------------------
Number of iterations:            115396
Max size of waitlist:            41
Average size of waitlist:        16
Number of computed successors:   132544
Max successors for one state:    2
Number of times merged:          12226
Number of times stopped:         14722
Number of times breaked:         148

Total time for CPA algorithm:        19.220s (Max:     0.877s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:      6.486s
  Time for transfer relation:        11.158s
  Time for merge operator:            0.588s
  Time for stop operator:             0.220s
  Time for adding to reached set:     0.202s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   148
Avg. length of target path (in blocks):                4195 (count: 148, min: 6, max: 73, avg: 28.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.275s
  Counterexample analysis:                             1.758s (Max:     0.090s, Calls: 148)
    Refinement sat check:                              1.305s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.089s
  Precision update:                                    0.086s
  ARG update:                                          0.288s

Length of refined path (in blocks):                    4047 (count: 148, min: 5, max: 72, avg: 27.34)
Number of affected states:                             2699 (count: 148, min: 4, max: 71, avg: 18.24)
Length (states) of path with itp 'true':               1200 (count: 148, min: 0, max: 19, avg: 8.11)
Length (states) of path with itp non-trivial itp:      2699 (count: 148, min: 4, max: 71, avg: 18.24)
Length (states) of path with itp 'false':               148 (count: 148, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 148, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2551 (count: 148, min: 3, max: 70, avg: 17.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                148
Number of successful refinements:     148
Number of failed refinements:         0
Max. size of reached set before ref.: 4342
Max. size of reached set after ref.:  3787
Avg. size of reached set before ref.: 1827.66
Avg. size of reached set after ref.:  1062.67

Total time for CEGAR algorithm:      21.947s
Time for refinements:                 2.589s
Average time for refinement:          0.017s
Max time for refinement:              0.106s

Code Coverage
-----------------------------
  Function coverage:      0.735
  Visited lines:          4426
  Total lines:            5082
  Line coverage:          0.871
  Visited conditions:     350
  Total conditions:       416
  Condition coverage:     0.841

CPAchecker general statistics
-----------------------------
Number of program locations:     5603
Number of CFA edges:             5888
Number of relevant variables:    1622
Number of functions:             68
Number of loops:                 6
Size of reached set:             3831
  Number of reached locations:   1095 (20%)
    Avg states per location:     3
    Max states per location:     51 (at node N65)
  Number of reached functions:   50 (74%)
  Number of partitions:          3831
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.991s
  Time for loading CPAs:          0.802s
  Time for loading parser:        0.462s
  Time for CFA construction:      2.638s
    Time for parsing file(s):     0.706s
    Time for AST to CFA:          0.881s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     0.683s
      Time for var class.:        0.361s
Time for Analysis:               21.948s
CPU time for analysis:           21.950s
Time for analyzing result:        0.002s
Total time for CPAchecker:       25.942s
Total CPU time for CPAchecker:   25.930s
Time for statistics:              0.124s

Time for Garbage Collector:       0.857s (in 94 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                105MB (   100 MiB) max;     62MB (    59 MiB) avg;    112MB (   107 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8075MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
