scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--firmware--google--gsmi.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jlvcfe9z/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3127: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 3133: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_die_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_efivars to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_files to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kobject_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_get_system_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kobject_create_and_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_files to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_efivars to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_die_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7338 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6395 (87%)
  Because of loop head:            917 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       2432 (33%)
  Times precision was {false}:     462 (6%)
  Times result was cached:         4299 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      145 (2%)
  Times result was 'false':        34 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         21817
  BDD entailment checks:           2063
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       195
Number of predicates discovered:          2
Number of abstraction locations:          98
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4906
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 8.08
Number of irrelevant predicates:          2453 (50%)
Number of preds handled by boolean abs:   145 (3%)
  Total number of models for allsat:      145
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.456s
  Time for path formula creation:        4.265s
Time for strengthen operator:            0.209s
Time for prec operator:                  3.031s
  Time for abstraction:                  2.757s (Max:     0.027s, Count: 7338)
    Boolean abstraction:                 0.187s
    Solving time:                        0.781s (Max:     0.018s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.033s (Max:     0.009s)
Time for merge operator:                 0.345s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.784s

Number of path formula cache hits:   135861 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.819s

Total number of created targets for pointer analysis: 4
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         271 (count: 7680, min: 0, max: 29, avg: 0.04)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.517s
  Time for transition matches:                         0.251s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       225388 (count: 225388, min: 1, max: 1, avg: 1.00) [1 x 225388]

CPA algorithm statistics
------------------------
Number of iterations:            72735
Max size of waitlist:            41
Average size of waitlist:        17
Number of computed successors:   84081
Max successors for one state:    2
Number of times merged:          9877
Number of times stopped:         11214
Number of times breaked:         26

Total time for CPA algorithm:        12.872s (Max:     1.314s)
  Time for choose from waitlist:      0.091s
  Time for precision adjustment:      3.951s
  Time for transfer relation:         7.155s
  Time for merge operator:            0.682s
  Time for stop operator:             0.256s
  Time for adding to reached set:     0.133s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 692 (count: 26, min: 16, max: 50, avg: 26.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.787s
  Counterexample analysis:                             0.357s (Max:     0.027s, Calls: 26)
    Refinement sat check:                              0.252s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.030s
  ARG update:                                          0.334s

Length of refined path (in blocks):                     666 (count: 26, min: 15, max: 49, avg: 25.62)
Number of affected states:                              640 (count: 26, min: 14, max: 48, avg: 24.62)
Length (states) of path with itp 'true':                  0 (count: 26, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       640 (count: 26, min: 14, max: 48, avg: 24.62)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 26, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             614 (count: 26, min: 13, max: 47, avg: 23.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 3157
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2735.88
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      13.826s
Time for refinements:                 0.951s
Average time for refinement:          0.036s
Max time for refinement:              0.073s

Code Coverage
-----------------------------
  Function coverage:      0.780
  Visited lines:          2961
  Total lines:            3008
  Line coverage:          0.984
  Visited conditions:     176
  Total conditions:       196
  Condition coverage:     0.898

CPAchecker general statistics
-----------------------------
Number of program locations:     3321
Number of CFA edges:             3452
Number of relevant variables:    571
Number of functions:             41
Number of loops:                 2
Size of reached set:             1779
  Number of reached locations:   702 (21%)
    Avg states per location:     2
    Max states per location:     11 (at node N45)
  Number of reached functions:   32 (78%)
  Number of partitions:          1779
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.576s
  Time for loading CPAs:          0.641s
  Time for loading parser:        0.452s
  Time for CFA construction:      2.371s
    Time for parsing file(s):     0.744s
    Time for AST to CFA:          0.811s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.521s
      Time for var class.:        0.250s
Time for Analysis:               13.826s
CPU time for analysis:           13.820s
Time for analyzing result:        0.001s
Total time for CPAchecker:       17.405s
Total CPU time for CPAchecker:   17.400s
Time for statistics:              0.103s

Time for Garbage Collector:       0.690s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 89MB (    85 MiB) max;     53MB (    51 MiB) avg;     95MB (    90 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
