scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--scsi--pcmcia--sym53c500_cs.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tl_okcal/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5265: Function pointer *__cil_tmp180 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_loop_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5265: Ignoring call via function pointer SYM53C500_intr::__cil_tmp180 for which no suitable target was found in line: (*__cil_tmp180)(curSC); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5265: Ignoring function call through function pointer *__cil_tmp180: (*__cil_tmp180)(curSC); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7951 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7472 (94%)
  Because of loop head:            455 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       3127 (39%)
  Times precision was {false}:     97 (1%)
  Times result was cached:         4674 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (1%)
  Times result was 'false':        18 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2651
  BDD entailment checks:           941
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       140
Number of predicates discovered:          2
Number of abstraction locations:          81
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4824
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 32.16
Number of irrelevant predicates:          2711 (56%)
Number of preds handled by boolean abs:   53 (1%)
  Total number of models for allsat:      56
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  1.881s
  Time for path formula creation:        1.830s
Time for strengthen operator:            0.170s
Time for prec operator:                  1.343s
  Time for abstraction:                  1.153s (Max:     0.017s, Count: 7951)
    Boolean abstraction:                 0.093s
    Solving time:                        0.181s (Max:     0.013s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.015s (Max:     0.005s)
Time for merge operator:                 0.070s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     0.188s

Number of path formula cache hits:   59720 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.640s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         107 (count: 4876, min: 0, max: 20, avg: 0.02)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.244s
Automaton transfers with branching:                0
Automaton transfer successors:                        74071 (count: 74071, min: 1, max: 1, avg: 1.00) [1 x 74071]

CPA algorithm statistics
------------------------
Number of iterations:            25118
Max size of waitlist:            32
Average size of waitlist:        14
Number of computed successors:   26856
Max successors for one state:    2
Number of times merged:          855
Number of times stopped:         1450
Number of times breaked:         24

Total time for CPA algorithm:         5.858s (Max:     0.803s)
  Time for choose from waitlist:      0.056s
  Time for precision adjustment:      1.710s
  Time for transfer relation:         3.539s
  Time for merge operator:            0.127s
  Time for stop operator:             0.067s
  Time for adding to reached set:     0.093s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 811 (count: 24, min: 8, max: 59, avg: 33.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.498s
  Counterexample analysis:                             0.305s (Max:     0.021s, Calls: 24)
    Refinement sat check:                              0.213s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.043s
  Precision update:                                    0.025s
  ARG update:                                          0.113s

Length of refined path (in blocks):                     787 (count: 24, min: 7, max: 58, avg: 32.79)
Number of affected states:                              603 (count: 24, min: 6, max: 51, avg: 25.13)
Length (states) of path with itp 'true':                160 (count: 24, min: 0, max: 48, avg: 6.67)
Length (states) of path with itp non-trivial itp:       603 (count: 24, min: 6, max: 51, avg: 25.13)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 24, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             579 (count: 24, min: 5, max: 50, avg: 24.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 1920
Max. size of reached set after ref.:  1694
Avg. size of reached set before ref.: 1312.58
Avg. size of reached set after ref.:  325.71

Total time for CEGAR algorithm:       6.479s
Time for refinements:                 0.606s
Average time for refinement:          0.025s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.816
  Visited lines:          2632
  Total lines:            2879
  Line coverage:          0.914
  Visited conditions:     180
  Total conditions:       192
  Condition coverage:     0.938

CPAchecker general statistics
-----------------------------
Number of program locations:     3145
Number of CFA edges:             3324
Number of relevant variables:    505
Number of functions:             49
Number of loops:                 10
Size of reached set:             1704
  Number of reached locations:   714 (23%)
    Avg states per location:     2
    Max states per location:     175 (at node N21)
  Number of reached functions:   40 (82%)
  Number of partitions:          1704
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.155s
  Time for loading CPAs:          0.682s
  Time for loading parser:        0.418s
  Time for CFA construction:      1.954s
    Time for parsing file(s):     0.564s
    Time for AST to CFA:          0.649s
    Time for CFA sanity check:    0.120s
    Time for post-processing:     0.487s
      Time for var class.:        0.241s
Time for Analysis:                6.479s
CPU time for analysis:            6.480s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.637s
Total CPU time for CPAchecker:    9.620s
Time for statistics:              0.084s

Time for Garbage Collector:       0.250s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     43MB (    41 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8000MB (  7629 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
