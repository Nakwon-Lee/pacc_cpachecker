scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--ppp--ppp_mppe.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2qsun750/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 964: Function pointer *__cil_tmp14 with type int (*)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 932: Function pointer *__cil_tmp14 with type int (*)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 900: Function pointer *__cil_tmp9 with type int (*)(struct crypto_tfm *, u8 *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 1074: Function pointer *__cil_tmp10 with type int (*)(struct hash_desc *, struct scatterlist *, unsigned int, u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crypto_has_alg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1074: Ignoring call via function pointer crypto_hash_digest::__cil_tmp10 for which no suitable target was found in line: tmp___0 = (*__cil_tmp10)(desc, sg, nbytes, out); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 900: Ignoring call via function pointer crypto_blkcipher_setkey::__cil_tmp9 for which no suitable target was found in line: tmp___1 = (*__cil_tmp9)(tmp___0, key, keylen); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 932: Ignoring call via function pointer crypto_blkcipher_encrypt::__cil_tmp14 for which no suitable target was found in line: tmp___1 = (*__cil_tmp14)(desc, dst, src, nbytes); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 932: Ignoring function call through function pointer *__cil_tmp14: tmp___1 = (*__cil_tmp14)(desc, dst, src, nbytes); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function crypto_alloc_base to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 964: Ignoring call via function pointer crypto_blkcipher_decrypt::__cil_tmp14 for which no suitable target was found in line: tmp___1 = (*__cil_tmp14)(desc, dst, src, nbytes); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 964: Ignoring function call through function pointer *__cil_tmp14: tmp___1 = (*__cil_tmp14)(desc, dst, src, nbytes); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ppp_unregister_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_register_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33065 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24009 (73%)
  Because of loop head:            9019 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (0%)
  Times precision was empty:       17379 (53%)
  Times precision was {false}:     767 (2%)
  Times result was cached:         13563 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1356 (4%)
  Times result was 'false':        224 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         12077
  BDD entailment checks:           5579
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       264
Number of predicates discovered:          4
Number of abstraction locations:          128
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         32824
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 15.46
Number of irrelevant predicates:          14516 (44%)
Number of preds handled by boolean abs:   1891 (6%)
  Total number of models for allsat:      1335
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                  7.145s
  Time for path formula creation:        6.960s
Time for strengthen operator:            0.373s
Time for prec operator:                  5.947s
  Time for abstraction:                  5.387s (Max:     0.032s, Count: 33065)
    Boolean abstraction:                 1.190s
    Solving time:                        1.624s (Max:     0.027s)
    Model enumeration time:              0.068s
    Time for BDD construction:           0.094s (Max:     0.013s)
Time for merge operator:                 0.309s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     1.692s

Number of path formula cache hits:   243399 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.291s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2717 (count: 35009, min: 0, max: 335, avg: 0.08)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.040s
  Time for transition matches:                         0.336s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       369017 (count: 369017, min: 1, max: 1, avg: 1.00) [1 x 369017]

CPA algorithm statistics
------------------------
Number of iterations:            99263
Max size of waitlist:            68
Average size of waitlist:        31
Number of computed successors:   109038
Max successors for one state:    2
Number of times merged:          3249
Number of times stopped:         8290
Number of times breaked:         37

Total time for CPA algorithm:        19.620s (Max:     1.331s)
  Time for choose from waitlist:      0.097s
  Time for precision adjustment:      6.900s
  Time for transfer relation:        11.152s
  Time for merge operator:            0.443s
  Time for stop operator:             0.255s
  Time for adding to reached set:     0.211s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                1659 (count: 37, min: 10, max: 209, avg: 44.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.141s
  Counterexample analysis:                             0.744s (Max:     0.086s, Calls: 37)
    Refinement sat check:                              0.477s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.033s
  ARG update:                                          0.296s

Length of refined path (in blocks):                    1519 (count: 37, min: 8, max: 208, avg: 41.05)
Number of affected states:                             1463 (count: 37, min: 1, max: 207, avg: 39.54)
Length (states) of path with itp 'true':                 19 (count: 37, min: 0, max: 7, avg: 0.51)
Length (states) of path with itp non-trivial itp:      1463 (count: 37, min: 1, max: 207, avg: 39.54)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 37, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1426 (count: 37, min: 0, max: 206, avg: 38.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 4098
Max. size of reached set after ref.:  1483
Avg. size of reached set before ref.: 2752.51
Avg. size of reached set after ref.:  122.24

Total time for CEGAR algorithm:      20.906s
Time for refinements:                 1.282s
Average time for refinement:          0.034s
Max time for refinement:              0.106s

Code Coverage
-----------------------------
  Function coverage:      0.868
  Visited lines:          2341
  Total lines:            2365
  Line coverage:          0.990
  Visited conditions:     194
  Total conditions:       202
  Condition coverage:     0.960

CPAchecker general statistics
-----------------------------
Number of program locations:     2670
Number of CFA edges:             2801
Number of relevant variables:    827
Number of functions:             53
Number of loops:                 8
Size of reached set:             3205
  Number of reached locations:   689 (26%)
    Avg states per location:     4
    Max states per location:     47 (at node N228)
  Number of reached functions:   46 (87%)
  Number of partitions:          3205
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.231s
  Time for loading CPAs:          0.705s
  Time for loading parser:        0.410s
  Time for CFA construction:      2.023s
    Time for parsing file(s):     0.585s
    Time for AST to CFA:          0.581s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.522s
      Time for var class.:        0.300s
Time for Analysis:               20.907s
CPU time for analysis:           20.900s
Time for analyzing result:        0.004s
Total time for CPAchecker:       24.140s
Total CPU time for CPAchecker:   24.130s
Time for statistics:              0.092s

Time for Garbage Collector:       1.452s (in 71 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                147MB (   140 MiB) max;     72MB (    68 MiB) avg;    152MB (   145 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           201MB (   192 MiB) max;    134MB (   128 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
