scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-dtt200u.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ob0vp3rg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_generic_rw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_generic_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            866 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  622 (72%)
  Because of loop head:            230 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (2%)
  Times precision was empty:       329 (38%)
  Times precision was {false}:     35 (4%)
  Times result was cached:         471 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31 (4%)
  Times result was 'false':        14 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         648
  BDD entailment checks:           304
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       89
Number of predicates discovered:          2
Number of abstraction locations:          28
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         537
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 8.14
Number of irrelevant predicates:          219 (41%)
Number of preds handled by boolean abs:   31 (6%)
  Total number of models for allsat:      31
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.724s
  Time for path formula creation:        0.679s
Time for strengthen operator:            0.017s
Time for prec operator:                  0.527s
  Time for abstraction:                  0.495s (Max:     0.025s, Count: 866)
    Boolean abstraction:                 0.091s
    Solving time:                        0.109s (Max:     0.013s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.008s (Max:     0.006s)
Time for merge operator:                 0.019s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.121s

Number of path formula cache hits:   10258 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.594s

Total number of created targets for pointer analysis: 112
   Number of created targets for uf: *unsigned_char is 12
   Number of created targets for uf: *enum_fe_status is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          61 (count: 999, min: 0, max: 35, avg: 0.06)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.104s
Automaton transfers with branching:                0
Automaton transfer successors:                        12468 (count: 12468, min: 1, max: 1, avg: 1.00) [1 x 12468]

CPA algorithm statistics
------------------------
Number of iterations:            4028
Max size of waitlist:            16
Average size of waitlist:        10
Number of computed successors:   4580
Max successors for one state:    2
Number of times merged:          172
Number of times stopped:         384
Number of times breaked:         14

Total time for CPA algorithm:         2.129s (Max:     0.543s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      0.708s
  Time for transfer relation:         1.173s
  Time for merge operator:            0.063s
  Time for stop operator:             0.049s
  Time for adding to reached set:     0.047s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 102 (count: 14, min: 4, max: 11, avg: 7.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.167s
  Counterexample analysis:                             0.093s (Max:     0.014s, Calls: 14)
    Refinement sat check:                              0.042s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.001s
  ARG update:                                          0.024s

Length of refined path (in blocks):                      88 (count: 14, min: 3, max: 10, avg: 6.29)
Number of affected states:                               74 (count: 14, min: 2, max: 9, avg: 5.29)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        74 (count: 14, min: 2, max: 9, avg: 5.29)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              60 (count: 14, min: 1, max: 8, avg: 4.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 324
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 286.64
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.323s
Time for refinements:                 0.194s
Average time for refinement:          0.013s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.371
  Visited lines:          1500
  Total lines:            2028
  Line coverage:          0.740
  Visited conditions:     46
  Total conditions:       142
  Condition coverage:     0.324

CPAchecker general statistics
-----------------------------
Number of program locations:     2208
Number of CFA edges:             2292
Number of relevant variables:    258
Number of functions:             35
Number of loops:                 3
Size of reached set:             212
  Number of reached locations:   170 (8%)
    Avg states per location:     1
    Max states per location:     12 (at node N1305)
  Number of reached functions:   13 (37%)
  Number of partitions:          212
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.062s
  Time for loading CPAs:          0.749s
  Time for loading parser:        0.549s
  Time for CFA construction:      2.673s
    Time for parsing file(s):     0.749s
    Time for AST to CFA:          0.957s
    Time for CFA sanity check:    0.122s
    Time for post-processing:     0.648s
      Time for var class.:        0.350s
Time for Analysis:                2.323s
CPU time for analysis:            2.330s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.387s
Total CPU time for CPAchecker:    6.380s
Time for statistics:              0.057s

Time for Garbage Collector:       0.191s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     38MB (    36 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8041MB (  7669 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
