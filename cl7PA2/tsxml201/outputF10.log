scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--staging--media--cxd2099--cxd2099.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jgyslsha/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3613 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3343 (93%)
  Because of loop head:            170 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         100 (3%)
  Times precision was empty:       950 (26%)
  Times precision was {false}:     277 (8%)
  Times result was cached:         2151 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      235 (7%)
  Times result was 'false':        103 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         3450
  BDD entailment checks:           808
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          4
Number of abstraction locations:          97
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2690
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 5.25
Number of irrelevant predicates:          1191 (44%)
Number of preds handled by boolean abs:   238 (9%)
  Total number of models for allsat:      234
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.414s
  Time for path formula creation:        2.360s
Time for strengthen operator:            0.109s
Time for prec operator:                  2.768s
  Time for abstraction:                  2.607s (Max:     0.031s, Count: 3613)
    Boolean abstraction:                 0.518s
    Solving time:                        1.053s (Max:     0.020s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.034s (Max:     0.008s)
Time for merge operator:                 0.140s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     1.065s

Number of path formula cache hits:   47718 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.248s

Total number of created targets for pointer analysis: 4140
   Number of created targets for uf: *unsigned_char is 32


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         481 (count: 4571, min: 0, max: 70, avg: 0.11)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.305s
Automaton transfers with branching:                0
Automaton transfer successors:                        66595 (count: 66595, min: 1, max: 1, avg: 1.00) [1 x 66595]

CPA algorithm statistics
------------------------
Number of iterations:            17396
Max size of waitlist:            28
Average size of waitlist:        10
Number of computed successors:   19888
Max successors for one state:    2
Number of times merged:          1321
Number of times stopped:         1803
Number of times breaked:         100

Total time for CPA algorithm:         7.458s (Max:     0.609s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      3.077s
  Time for transfer relation:         3.713s
  Time for merge operator:            0.225s
  Time for stop operator:             0.102s
  Time for adding to reached set:     0.081s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   100
Avg. length of target path (in blocks):                1916 (count: 100, min: 4, max: 42, avg: 19.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.745s
  Counterexample analysis:                             1.478s (Max:     0.050s, Calls: 100)
    Refinement sat check:                              1.117s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.083s
  ARG update:                                          0.097s

Length of refined path (in blocks):                    1790 (count: 100, min: 3, max: 41, avg: 17.90)
Number of affected states:                              915 (count: 100, min: 1, max: 37, avg: 9.15)
Length (states) of path with itp 'true':                775 (count: 100, min: 0, max: 36, avg: 7.75)
Length (states) of path with itp non-trivial itp:       915 (count: 100, min: 1, max: 37, avg: 9.15)
Length (states) of path with itp 'false':               100 (count: 100, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 100, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             815 (count: 100, min: 0, max: 36, avg: 8.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                100
Number of successful refinements:     100
Number of failed refinements:         0
Max. size of reached set before ref.: 2455
Max. size of reached set after ref.:  2379
Avg. size of reached set before ref.: 1044.60
Avg. size of reached set after ref.:  888.37

Total time for CEGAR algorithm:       9.496s
Time for refinements:                 1.927s
Average time for refinement:          0.019s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.750
  Visited lines:          1804
  Total lines:            2256
  Line coverage:          0.800
  Visited conditions:     90
  Total conditions:       182
  Condition coverage:     0.495

CPAchecker general statistics
-----------------------------
Number of program locations:     2488
Number of CFA edges:             2656
Number of relevant variables:    649
Number of functions:             36
Number of loops:                 2
Size of reached set:             2360
  Number of reached locations:   383 (15%)
    Avg states per location:     6
    Max states per location:     63 (at node N6)
  Number of reached functions:   27 (75%)
  Number of partitions:          2360
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.332s
  Time for loading CPAs:          0.706s
  Time for loading parser:        0.520s
  Time for CFA construction:      2.007s
    Time for parsing file(s):     0.621s
    Time for AST to CFA:          0.632s
    Time for CFA sanity check:    0.128s
    Time for post-processing:     0.472s
      Time for var class.:        0.246s
Time for Analysis:                9.497s
CPU time for analysis:            9.500s
Time for analyzing result:        0.002s
Total time for CPAchecker:       12.832s
Total CPU time for CPAchecker:   12.830s
Time for statistics:              0.108s

Time for Garbage Collector:       0.316s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     45MB (    43 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    31 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8064MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
