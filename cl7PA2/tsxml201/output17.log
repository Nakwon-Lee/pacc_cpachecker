scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--staging--media--cxd2099--cxd2099.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xopqdqxg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            18566 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16485 (89%)
  Because of loop head:            1359 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         722 (4%)
  Times precision was empty:       4947 (27%)
  Times precision was {false}:     175 (1%)
  Times result was cached:         13206 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      238 (1%)
  Times result was 'false':        304 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         14959
  BDD entailment checks:           4211
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          4
Number of abstraction locations:          97
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         13667
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 33.09
Number of irrelevant predicates:          6486 (47%)
Number of preds handled by boolean abs:   241 (2%)
  Total number of models for allsat:      236
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  2.256s
  Time for path formula creation:        2.108s
Time for strengthen operator:            0.192s
Time for prec operator:                  3.550s
  Time for abstraction:                  3.302s (Max:     0.030s, Count: 18566)
    Boolean abstraction:                 0.482s
    Solving time:                        0.698s (Max:     0.029s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.027s (Max:     0.008s)
Time for merge operator:                 0.181s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.731s

Number of path formula cache hits:   270064 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.811s

Total number of created targets for pointer analysis: 2978
   Number of created targets for uf: *unsigned_char is 32


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         488 (count: 11472, min: 0, max: 74, avg: 0.04)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.481s
Automaton transfers with branching:                0
Automaton transfer successors:                       268229 (count: 268229, min: 1, max: 1, avg: 1.00) [1 x 268229]

CPA algorithm statistics
------------------------
Number of iterations:            85172
Max size of waitlist:            29
Average size of waitlist:        12
Number of computed successors:   98130
Max successors for one state:    2
Number of times merged:          5374
Number of times stopped:         7747
Number of times breaked:         722

Total time for CPA algorithm:         9.967s (Max:     0.464s)
  Time for choose from waitlist:      0.054s
  Time for precision adjustment:      4.237s
  Time for transfer relation:         4.693s
  Time for merge operator:            0.305s
  Time for stop operator:             0.191s
  Time for adding to reached set:     0.126s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   722
Avg. length of target path (in blocks):               15197 (count: 722, min: 4, max: 46, avg: 21.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.096s
  Counterexample analysis:                             8.374s (Max:     0.047s, Calls: 722)
    Refinement sat check:                              6.422s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.165s
  ARG update:                                          0.226s

Length of refined path (in blocks):                   14263 (count: 722, min: 3, max: 45, avg: 19.75)
Number of affected states:                             5326 (count: 722, min: 1, max: 37, avg: 7.38)
Length (states) of path with itp 'true':               8215 (count: 722, min: 0, max: 40, avg: 11.38)
Length (states) of path with itp non-trivial itp:      5326 (count: 722, min: 1, max: 37, avg: 7.38)
Length (states) of path with itp 'false':               722 (count: 722, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 722, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4604 (count: 722, min: 0, max: 36, avg: 6.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                722
Number of successful refinements:     722
Number of failed refinements:         0
Max. size of reached set before ref.: 2366
Max. size of reached set after ref.:  2289
Avg. size of reached set before ref.: 844.94
Avg. size of reached set after ref.:  723.44

Total time for CEGAR algorithm:      19.875s
Time for refinements:                 9.589s
Average time for refinement:          0.013s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.750
  Visited lines:          1804
  Total lines:            2256
  Line coverage:          0.800
  Visited conditions:     90
  Total conditions:       182
  Condition coverage:     0.495

CPAchecker general statistics
-----------------------------
Number of program locations:     2488
Number of CFA edges:             2656
Number of relevant variables:    649
Number of functions:             36
Number of loops:                 2
Size of reached set:             2360
  Number of reached locations:   383 (15%)
    Avg states per location:     6
    Max states per location:     63 (at node N6)
  Number of reached functions:   27 (75%)
  Number of partitions:          2360
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.277s
  Time for loading CPAs:          0.588s
  Time for loading parser:        0.503s
  Time for CFA construction:      2.079s
    Time for parsing file(s):     0.654s
    Time for AST to CFA:          0.662s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.495s
      Time for var class.:        0.283s
Time for Analysis:               19.877s
CPU time for analysis:           19.870s
Time for analyzing result:        0.001s
Total time for CPAchecker:       23.156s
Total CPU time for CPAchecker:   23.140s
Time for statistics:              0.071s

Time for Garbage Collector:       0.444s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     48MB (    46 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8009MB (  7638 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
