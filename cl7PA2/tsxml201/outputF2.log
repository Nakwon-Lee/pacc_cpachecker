scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--staging--media--cxd2099--cxd2099.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6xit4jm6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4384 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4146 (95%)
  Because of loop head:            169 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         69 (2%)
  Times precision was empty:       1368 (31%)
  Times precision was {false}:     359 (8%)
  Times result was cached:         2421 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      236 (5%)
  Times result was 'false':        99 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         4652
  BDD entailment checks:           1044
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          4
Number of abstraction locations:          97
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3043
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 5.11
Number of irrelevant predicates:          1569 (52%)
Number of preds handled by boolean abs:   239 (8%)
  Total number of models for allsat:      235
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.281s
  Time for path formula creation:        3.169s
Time for strengthen operator:            0.149s
Time for prec operator:                  3.501s
  Time for abstraction:                  3.340s (Max:     0.035s, Count: 4384)
    Boolean abstraction:                 0.572s
    Solving time:                        1.243s (Max:     0.031s)
    Model enumeration time:              0.054s
    Time for BDD construction:           0.025s (Max:     0.007s)
Time for merge operator:                 0.191s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     1.297s

Number of path formula cache hits:   70024 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.820s

Total number of created targets for pointer analysis: 5097
   Number of created targets for uf: *unsigned_char is 32


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         483 (count: 5641, min: 0, max: 60, avg: 0.09)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.493s
Automaton transfers with branching:                0
Automaton transfer successors:                        95046 (count: 95046, min: 1, max: 1, avg: 1.00) [1 x 95046]

CPA algorithm statistics
------------------------
Number of iterations:            21695
Max size of waitlist:            45
Average size of waitlist:        21
Number of computed successors:   24758
Max successors for one state:    2
Number of times merged:          1804
Number of times stopped:         2504
Number of times breaked:         69

Total time for CPA algorithm:         9.816s (Max:     1.385s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      3.963s
  Time for transfer relation:         5.065s
  Time for merge operator:            0.282s
  Time for stop operator:             0.128s
  Time for adding to reached set:     0.099s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   69
Avg. length of target path (in blocks):                1337 (count: 69, min: 4, max: 42, avg: 19.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.416s
  Counterexample analysis:                             1.153s (Max:     0.061s, Calls: 69)
    Refinement sat check:                              0.847s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.044s
  ARG update:                                          0.066s

Length of refined path (in blocks):                    1242 (count: 69, min: 3, max: 41, avg: 18.00)
Number of affected states:                              771 (count: 69, min: 1, max: 37, avg: 11.17)
Length (states) of path with itp 'true':                402 (count: 69, min: 0, max: 36, avg: 5.83)
Length (states) of path with itp non-trivial itp:       771 (count: 69, min: 1, max: 37, avg: 11.17)
Length (states) of path with itp 'false':                69 (count: 69, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 69, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             702 (count: 69, min: 0, max: 36, avg: 10.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                69
Number of successful refinements:     69
Number of failed refinements:         0
Max. size of reached set before ref.: 2848
Max. size of reached set after ref.:  2691
Avg. size of reached set before ref.: 1622.33
Avg. size of reached set after ref.:  1335.43

Total time for CEGAR algorithm:      11.504s
Time for refinements:                 1.608s
Average time for refinement:          0.023s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.750
  Visited lines:          1804
  Total lines:            2256
  Line coverage:          0.800
  Visited conditions:     90
  Total conditions:       182
  Condition coverage:     0.495

CPAchecker general statistics
-----------------------------
Number of program locations:     2488
Number of CFA edges:             2656
Number of relevant variables:    649
Number of functions:             36
Number of loops:                 2
Size of reached set:             2360
  Number of reached locations:   383 (15%)
    Avg states per location:     6
    Max states per location:     63 (at node N6)
  Number of reached functions:   27 (75%)
  Number of partitions:          2360
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.515s
  Time for loading CPAs:          0.636s
  Time for loading parser:        0.627s
  Time for CFA construction:      2.138s
    Time for parsing file(s):     0.648s
    Time for AST to CFA:          0.725s
    Time for CFA sanity check:    0.126s
    Time for post-processing:     0.483s
      Time for var class.:        0.259s
Time for Analysis:               11.513s
CPU time for analysis:           11.500s
Time for analyzing result:        0.002s
Total time for CPAchecker:       15.032s
Total CPU time for CPAchecker:   15.020s
Time for statistics:              0.093s

Time for Garbage Collector:       0.382s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     47MB (    45 MiB) avg;     81MB (    78 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8066MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
