scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hid--hid-twinhan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e62l8uzf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7523 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7318 (97%)
  Because of loop head:            170 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       805 (11%)
  Times precision was {false}:     7 (0%)
  Times result was cached:         6667 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44 (1%)
  Times result was 'false':        69 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         8816
  BDD entailment checks:           828
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       108
Number of predicates discovered:          2
Number of abstraction locations:          46
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         6718
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 131.73
Number of irrelevant predicates:          333 (5%)
Number of preds handled by boolean abs:   44 (1%)
  Total number of models for allsat:      44
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.793s
  Time for path formula creation:        4.711s
Time for strengthen operator:            0.157s
Time for prec operator:                  1.940s
  Time for abstraction:                  1.510s (Max:     0.024s, Count: 7523)
    Boolean abstraction:                 0.086s
    Solving time:                        0.073s (Max:     0.014s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.003s (Max:     0.003s)
Time for merge operator:                 0.262s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.002s
Total time for SMT solver (w/o itp):     0.080s

Number of path formula cache hits:   121009 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.079s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          91 (count: 1937, min: 0, max: 68, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.297s
Automaton transfers with branching:                0
Automaton transfer successors:                       115509 (count: 115509, min: 1, max: 1, avg: 1.00) [1 x 115509]

CPA algorithm statistics
------------------------
Number of iterations:            40571
Max size of waitlist:            36
Average size of waitlist:        29
Number of computed successors:   45893
Max successors for one state:    2
Number of times merged:          3994
Number of times stopped:         4691
Number of times breaked:         35

Total time for CPA algorithm:         9.711s (Max:     0.806s)
  Time for choose from waitlist:      0.075s
  Time for precision adjustment:      2.359s
  Time for transfer relation:         6.351s
  Time for merge operator:            0.421s
  Time for stop operator:             0.127s
  Time for adding to reached set:     0.088s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                 568 (count: 35, min: 5, max: 17, avg: 16.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.479s
  Counterexample analysis:                             0.282s (Max:     0.017s, Calls: 35)
    Refinement sat check:                              0.162s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.043s
  ARG update:                                          0.103s

Length of refined path (in blocks):                     533 (count: 35, min: 4, max: 16, avg: 15.23)
Number of affected states:                              498 (count: 35, min: 3, max: 15, avg: 14.23)
Length (states) of path with itp 'true':                  0 (count: 35, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       498 (count: 35, min: 3, max: 15, avg: 14.23)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 35, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             463 (count: 35, min: 2, max: 14, avg: 13.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 1342
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1140.94
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      10.296s
Time for refinements:                 0.577s
Average time for refinement:          0.016s
Max time for refinement:              0.032s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          762
  Total lines:            810
  Line coverage:          0.941
  Visited conditions:     82
  Total conditions:       102
  Condition coverage:     0.804

CPAchecker general statistics
-----------------------------
Number of program locations:     897
Number of CFA edges:             977
Number of relevant variables:    126
Number of functions:             18
Number of loops:                 1
Size of reached set:             1306
  Number of reached locations:   242 (27%)
    Avg states per location:     5
    Max states per location:     33 (at node N111)
  Number of reached functions:   8 (44%)
  Number of partitions:          1306
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.848s
  Time for loading CPAs:          0.619s
  Time for loading parser:        0.486s
  Time for CFA construction:      1.625s
    Time for parsing file(s):     0.570s
    Time for AST to CFA:          0.470s
    Time for CFA sanity check:    0.103s
    Time for post-processing:     0.354s
      Time for var class.:        0.141s
Time for Analysis:               10.296s
CPU time for analysis:           10.300s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.147s
Total CPU time for CPAchecker:   13.140s
Time for statistics:              0.079s

Time for Garbage Collector:       0.275s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    30 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8067MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
