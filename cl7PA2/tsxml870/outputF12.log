scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--staging--comedi--drivers--adl_pci8164.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f5ta9m17/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1897: Destroying the void* pointer alloc_private::__cil_tmp4 produces garbage or the memory pointed by it is unused: tmp = alloc_private(dev, __cil_tmp24); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            533 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  415 (78%)
  Because of loop head:            108 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (2%)
  Times precision was empty:       132 (25%)
  Times precision was {false}:     33 (6%)
  Times result was cached:         329 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39 (7%)
  Times result was 'false':        19 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         420
  BDD entailment checks:           194
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       147
Number of predicates discovered:          2
Number of abstraction locations:          32
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         401
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.57
Number of irrelevant predicates:          152 (38%)
Number of preds handled by boolean abs:   39 (10%)
  Total number of models for allsat:      39
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.730s
  Time for path formula creation:        0.717s
Time for strengthen operator:            0.037s
Time for prec operator:                  0.499s
  Time for abstraction:                  0.448s (Max:     0.021s, Count: 533)
    Boolean abstraction:                 0.094s
    Solving time:                        0.148s (Max:     0.019s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.038s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     0.154s

Number of path formula cache hits:   5461 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.678s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          75 (count: 730, min: 0, max: 41, avg: 0.10)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.065s
Automaton transfers with branching:                0
Automaton transfer successors:                         9109 (count: 9109, min: 1, max: 1, avg: 1.00) [1 x 9109]

CPA algorithm statistics
------------------------
Number of iterations:            2207
Max size of waitlist:            9
Average size of waitlist:        3
Number of computed successors:   2483
Max successors for one state:    2
Number of times merged:          113
Number of times stopped:         236
Number of times breaked:         10

Total time for CPA algorithm:         1.957s (Max:     0.392s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      0.640s
  Time for transfer relation:         1.117s
  Time for merge operator:            0.072s
  Time for stop operator:             0.024s
  Time for adding to reached set:     0.028s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 180 (count: 10, min: 5, max: 27, avg: 18.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.156s
  Counterexample analysis:                             0.113s (Max:     0.028s, Calls: 10)
    Refinement sat check:                              0.054s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.002s
  ARG update:                                          0.024s

Length of refined path (in blocks):                     170 (count: 10, min: 4, max: 26, avg: 17.00)
Number of affected states:                              160 (count: 10, min: 3, max: 25, avg: 16.00)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       160 (count: 10, min: 3, max: 25, avg: 16.00)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             150 (count: 10, min: 2, max: 24, avg: 15.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 340
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 205.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.126s
Time for refinements:                 0.169s
Average time for refinement:          0.016s
Max time for refinement:              0.031s

Code Coverage
-----------------------------
  Function coverage:      0.385
  Visited lines:          883
  Total lines:            1121
  Line coverage:          0.788
  Visited conditions:     52
  Total conditions:       88
  Condition coverage:     0.591

CPAchecker general statistics
-----------------------------
Number of program locations:     1321
Number of CFA edges:             1359
Number of relevant variables:    272
Number of functions:             39
Number of loops:                 3
Size of reached set:             204
  Number of reached locations:   184 (14%)
    Avg states per location:     1
    Max states per location:     4 (at node N220)
  Number of reached functions:   15 (38%)
  Number of partitions:          204
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.802s
  Time for loading CPAs:          0.600s
  Time for loading parser:        0.486s
  Time for CFA construction:      1.590s
    Time for parsing file(s):     0.507s
    Time for AST to CFA:          0.555s
    Time for CFA sanity check:    0.112s
    Time for post-processing:     0.327s
      Time for var class.:        0.157s
Time for Analysis:                2.126s
CPU time for analysis:            2.130s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.936s
Total CPU time for CPAchecker:    4.930s
Time for statistics:              0.048s

Time for Garbage Collector:       0.114s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     33MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7980MB (  7610 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
