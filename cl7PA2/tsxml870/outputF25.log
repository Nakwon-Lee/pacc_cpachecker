scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--staging--comedi--drivers--adl_pci8164.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xbzg8sfw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1897: Destroying the void* pointer alloc_private::__cil_tmp4 produces garbage or the memory pointed by it is unused: tmp = alloc_private(dev, __cil_tmp24); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            437 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  332 (76%)
  Because of loop head:            96 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (2%)
  Times precision was empty:       90 (21%)
  Times precision was {false}:     16 (4%)
  Times result was cached:         292 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39 (9%)
  Times result was 'false':        10 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         279
  BDD entailment checks:           119
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       147
Number of predicates discovered:          2
Number of abstraction locations:          32
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         347
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.31
Number of irrelevant predicates:          77 (22%)
Number of preds handled by boolean abs:   39 (11%)
  Total number of models for allsat:      39
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.438s
  Time for path formula creation:        0.428s
Time for strengthen operator:            0.026s
Time for prec operator:                  0.457s
  Time for abstraction:                  0.406s (Max:     0.040s, Count: 437)
    Boolean abstraction:                 0.092s
    Solving time:                        0.091s (Max:     0.027s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.023s (Max:     0.009s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.095s

Number of path formula cache hits:   4803 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.394s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          67 (count: 528, min: 0, max: 67, avg: 0.13)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.047s
Automaton transfers with branching:                0
Automaton transfer successors:                         5908 (count: 5908, min: 1, max: 1, avg: 1.00) [1 x 5908]

CPA algorithm statistics
------------------------
Number of iterations:            1726
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   1943
Max successors for one state:    2
Number of times merged:          80
Number of times stopped:         164
Number of times breaked:         9

Total time for CPA algorithm:         1.452s (Max:     0.290s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      0.595s
  Time for transfer relation:         0.713s
  Time for merge operator:            0.018s
  Time for stop operator:             0.038s
  Time for adding to reached set:     0.018s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 175 (count: 9, min: 8, max: 27, avg: 19.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.156s
  Counterexample analysis:                             0.109s (Max:     0.019s, Calls: 9)
    Refinement sat check:                              0.069s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.004s
  ARG update:                                          0.018s

Length of refined path (in blocks):                     166 (count: 9, min: 7, max: 26, avg: 18.44)
Number of affected states:                              157 (count: 9, min: 6, max: 25, avg: 17.44)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       157 (count: 9, min: 6, max: 25, avg: 17.44)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             148 (count: 9, min: 5, max: 24, avg: 16.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 240
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 177.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.626s
Time for refinements:                 0.174s
Average time for refinement:          0.019s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.385
  Visited lines:          883
  Total lines:            1121
  Line coverage:          0.788
  Visited conditions:     52
  Total conditions:       88
  Condition coverage:     0.591

CPAchecker general statistics
-----------------------------
Number of program locations:     1321
Number of CFA edges:             1359
Number of relevant variables:    272
Number of functions:             39
Number of loops:                 3
Size of reached set:             204
  Number of reached locations:   184 (14%)
    Avg states per location:     1
    Max states per location:     4 (at node N220)
  Number of reached functions:   15 (38%)
  Number of partitions:          204
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.924s
  Time for loading CPAs:          0.583s
  Time for loading parser:        0.496s
  Time for CFA construction:      1.723s
    Time for parsing file(s):     0.571s
    Time for AST to CFA:          0.532s
    Time for CFA sanity check:    0.129s
    Time for post-processing:     0.371s
      Time for var class.:        0.165s
Time for Analysis:                1.626s
CPU time for analysis:            1.620s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.553s
Total CPU time for CPAchecker:    4.550s
Time for statistics:              0.053s

Time for Garbage Collector:       0.106s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     32MB (    30 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8032MB (  7660 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
