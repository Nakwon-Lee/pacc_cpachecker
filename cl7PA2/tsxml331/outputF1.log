scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--hwmon--smsc47b397.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nton_8xn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2878: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_check_resource_conflict to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1109 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1061 (96%)
  Because of loop head:            39 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (1%)
  Times precision was empty:       160 (14%)
  Times precision was {false}:     27 (2%)
  Times result was cached:         877 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      45 (4%)
  Times result was 'false':        13 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         394
  BDD entailment checks:           168
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       46
Number of predicates discovered:          2
Number of abstraction locations:          47
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         949
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.18
Number of irrelevant predicates:          320 (34%)
Number of preds handled by boolean abs:   45 (5%)
  Total number of models for allsat:      45
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.355s
  Time for path formula creation:        0.327s
Time for strengthen operator:            0.017s
Time for prec operator:                  0.427s
  Time for abstraction:                  0.349s (Max:     0.011s, Count: 1109)
    Boolean abstraction:                 0.075s
    Solving time:                        0.062s (Max:     0.010s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.071s

Number of path formula cache hits:   5997 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.293s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *unsigned_short_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          57 (count: 738, min: 0, max: 57, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.085s
Automaton transfers with branching:                0
Automaton transfer successors:                         6551 (count: 6551, min: 1, max: 1, avg: 1.00) [1 x 6551]

CPA algorithm statistics
------------------------
Number of iterations:            3524
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   3779
Max successors for one state:    2
Number of times merged:          113
Number of times stopped:         200
Number of times breaked:         9

Total time for CPA algorithm:         1.506s (Max:     0.460s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      0.529s
  Time for transfer relation:         0.798s
  Time for merge operator:            0.027s
  Time for stop operator:             0.034s
  Time for adding to reached set:     0.050s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 420 (count: 9, min: 18, max: 58, avg: 46.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.165s
  Counterexample analysis:                             0.098s (Max:     0.025s, Calls: 9)
    Refinement sat check:                              0.060s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.004s
  ARG update:                                          0.027s

Length of refined path (in blocks):                     411 (count: 9, min: 17, max: 57, avg: 45.67)
Number of affected states:                              402 (count: 9, min: 16, max: 56, avg: 44.67)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       402 (count: 9, min: 16, max: 56, avg: 44.67)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             393 (count: 9, min: 15, max: 55, avg: 43.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 418
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 362.22
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.705s
Time for refinements:                 0.197s
Average time for refinement:          0.021s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          888
  Total lines:            1310
  Line coverage:          0.678
  Visited conditions:     46
  Total conditions:       80
  Condition coverage:     0.575

CPAchecker general statistics
-----------------------------
Number of program locations:     1521
Number of CFA edges:             1575
Number of relevant variables:    209
Number of functions:             40
Number of loops:                 2
Size of reached set:             334
  Number of reached locations:   216 (14%)
    Avg states per location:     1
    Max states per location:     11 (at node N29)
  Number of reached functions:   20 (50%)
  Number of partitions:          334
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.896s
  Time for loading CPAs:          0.522s
  Time for loading parser:        0.503s
  Time for CFA construction:      1.777s
    Time for parsing file(s):     0.660s
    Time for AST to CFA:          0.518s
    Time for CFA sanity check:    0.080s
    Time for post-processing:     0.342s
      Time for var class.:        0.176s
Time for Analysis:                1.705s
CPU time for analysis:            1.700s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.613s
Total CPU time for CPAchecker:    4.590s
Time for statistics:              0.052s

Time for Garbage Collector:       0.098s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    32 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7977MB (  7607 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
