scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--joystick--warrior.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z8atf2ms/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1882 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1809 (96%)
  Because of loop head:            60 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       699 (37%)
  Times precision was {false}:     34 (2%)
  Times result was cached:         1097 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      52 (3%)
  Times result was 'false':        25 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         723
  BDD entailment checks:           313
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       59
Number of predicates discovered:          2
Number of abstraction locations:          42
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1183
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.76
Number of irrelevant predicates:          224 (19%)
Number of preds handled by boolean abs:   52 (4%)
  Total number of models for allsat:      54
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  0.607s
  Time for path formula creation:        0.561s
Time for strengthen operator:            0.072s
Time for prec operator:                  0.624s
  Time for abstraction:                  0.557s (Max:     0.022s, Count: 1882)
    Boolean abstraction:                 0.108s
    Solving time:                        0.118s (Max:     0.013s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.007s (Max:     0.005s)
Time for merge operator:                 0.030s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.121s

Number of path formula cache hits:   18606 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.525s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          91 (count: 1500, min: 0, max: 39, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.126s
Automaton transfers with branching:                0
Automaton transfer successors:                        21170 (count: 21170, min: 1, max: 1, avg: 1.00) [1 x 21170]

CPA algorithm statistics
------------------------
Number of iterations:            6493
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   7063
Max successors for one state:    2
Number of times merged:          205
Number of times stopped:         460
Number of times breaked:         13

Total time for CPA algorithm:         2.501s (Max:     0.470s)
  Time for choose from waitlist:      0.022s
  Time for precision adjustment:      0.793s
  Time for transfer relation:         1.326s
  Time for merge operator:            0.069s
  Time for stop operator:             0.061s
  Time for adding to reached set:     0.091s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 236 (count: 13, min: 8, max: 25, avg: 18.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.204s
  Counterexample analysis:                             0.135s (Max:     0.020s, Calls: 13)
    Refinement sat check:                              0.071s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.009s
  ARG update:                                          0.036s

Length of refined path (in blocks):                     223 (count: 13, min: 7, max: 24, avg: 17.15)
Number of affected states:                              210 (count: 13, min: 6, max: 23, avg: 16.15)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       210 (count: 13, min: 6, max: 23, avg: 16.15)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             197 (count: 13, min: 5, max: 22, avg: 15.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 613
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 473.38
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.753s
Time for refinements:                 0.252s
Average time for refinement:          0.019s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.696
  Visited lines:          937
  Total lines:            961
  Line coverage:          0.975
  Visited conditions:     48
  Total conditions:       56
  Condition coverage:     0.857

CPAchecker general statistics
-----------------------------
Number of program locations:     1087
Number of CFA edges:             1123
Number of relevant variables:    146
Number of functions:             23
Number of loops:                 1
Size of reached set:             464
  Number of reached locations:   197 (18%)
    Avg states per location:     2
    Max states per location:     15 (at node N18)
  Number of reached functions:   16 (70%)
  Number of partitions:          464
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.742s
  Time for loading CPAs:          0.614s
  Time for loading parser:        0.463s
  Time for CFA construction:      1.570s
    Time for parsing file(s):     0.533s
    Time for AST to CFA:          0.484s
    Time for CFA sanity check:    0.103s
    Time for post-processing:     0.336s
      Time for var class.:        0.160s
Time for Analysis:                2.754s
CPU time for analysis:            2.760s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.509s
Total CPU time for CPAchecker:    5.500s
Time for statistics:              0.057s

Time for Garbage Collector:       0.120s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7984MB (  7614 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
