scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-a800.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vs7qf8ye/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_nec_rc_key_to_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            220 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  163 (74%)
  Because of loop head:            51 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (3%)
  Times precision was empty:       88 (40%)
  Times precision was {false}:     28 (13%)
  Times result was cached:         85 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19 (9%)
  Times result was 'false':        3 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         188
  BDD entailment checks:           86
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          2
Number of abstraction locations:          15
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         132
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.81
Number of irrelevant predicates:          62 (47%)
Number of preds handled by boolean abs:   19 (14%)
  Total number of models for allsat:      19
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.631s
  Time for path formula creation:        0.629s
Time for strengthen operator:            0.014s
Time for prec operator:                  0.228s
  Time for abstraction:                  0.215s (Max:     0.015s, Count: 220)
    Boolean abstraction:                 0.030s
    Solving time:                        0.042s (Max:     0.010s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.030s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.046s

Number of path formula cache hits:   1066 (31%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.594s

Total number of created targets for pointer analysis: 3
   Number of created targets for uf: *signed_int is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          27 (count: 433, min: 0, max: 27, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.070s
Automaton transfers with branching:                0
Automaton transfer successors:                         3271 (count: 3271, min: 1, max: 1, avg: 1.00) [1 x 3271]

CPA algorithm statistics
------------------------
Number of iterations:            1057
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   1182
Max successors for one state:    2
Number of times merged:          51
Number of times stopped:         104
Number of times breaked:         6

Total time for CPA algorithm:         1.299s (Max:     0.609s)
  Time for choose from waitlist:      0.003s
  Time for precision adjustment:      0.317s
  Time for transfer relation:         0.851s
  Time for merge operator:            0.045s
  Time for stop operator:             0.051s
  Time for adding to reached set:     0.002s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  45 (count: 6, min: 4, max: 11, avg: 7.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.076s
  Counterexample analysis:                             0.046s (Max:     0.015s, Calls: 6)
    Refinement sat check:                              0.019s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.001s
  ARG update:                                          0.014s

Length of refined path (in blocks):                      39 (count: 6, min: 3, max: 10, avg: 6.50)
Number of affected states:                               33 (count: 6, min: 2, max: 9, avg: 5.50)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        33 (count: 6, min: 2, max: 9, avg: 5.50)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              27 (count: 6, min: 1, max: 8, avg: 4.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 211
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 162.83
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.401s
Time for refinements:                 0.101s
Average time for refinement:          0.016s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1132
  Total lines:            1185
  Line coverage:          0.955
  Visited conditions:     26
  Total conditions:       46
  Condition coverage:     0.565

CPAchecker general statistics
-----------------------------
Number of program locations:     1296
Number of CFA edges:             1315
Number of relevant variables:    77
Number of functions:             20
Number of loops:                 1
Size of reached set:             117
  Number of reached locations:   100 (8%)
    Avg states per location:     1
    Max states per location:     5 (at node N229)
  Number of reached functions:   8 (40%)
  Number of partitions:          117
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.346s
  Time for loading CPAs:          0.669s
  Time for loading parser:        0.515s
  Time for CFA construction:      2.056s
    Time for parsing file(s):     0.631s
    Time for AST to CFA:          0.665s
    Time for CFA sanity check:    0.097s
    Time for post-processing:     0.499s
      Time for var class.:        0.187s
Time for Analysis:                1.401s
CPU time for analysis:            1.390s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.749s
Total CPU time for CPAchecker:    4.730s
Time for statistics:              0.048s

Time for Garbage Collector:       0.125s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    24 MiB) avg;     33MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8032MB (  7660 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
