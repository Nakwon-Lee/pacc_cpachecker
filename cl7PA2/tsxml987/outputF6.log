scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--joystick--spaceball.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o6ll05q0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1412 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1240 (88%)
  Because of loop head:            159 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       656 (46%)
  Times precision was {false}:     64 (5%)
  Times result was cached:         648 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44 (3%)
  Times result was 'false':        13 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1372
  BDD entailment checks:           298
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       89
Number of predicates discovered:          2
Number of abstraction locations:          57
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         756
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.00
Number of irrelevant predicates:          286 (38%)
Number of preds handled by boolean abs:   44 (6%)
  Total number of models for allsat:      46
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  0.910s
  Time for path formula creation:        0.877s
Time for strengthen operator:            0.071s
Time for prec operator:                  0.582s
  Time for abstraction:                  0.527s (Max:     0.026s, Count: 1412)
    Boolean abstraction:                 0.065s
    Solving time:                        0.164s (Max:     0.016s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.168s

Number of path formula cache hits:   13769 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.814s

Total number of created targets for pointer analysis: 20
   Number of created targets for uf: *(char)* is 11


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          91 (count: 1543, min: 0, max: 26, avg: 0.06)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.093s
Automaton transfers with branching:                0
Automaton transfer successors:                        21670 (count: 21670, min: 1, max: 1, avg: 1.00) [1 x 21670]

CPA algorithm statistics
------------------------
Number of iterations:            6567
Max size of waitlist:            16
Average size of waitlist:        6
Number of computed successors:   7440
Max successors for one state:    2
Number of times merged:          537
Number of times stopped:         743
Number of times breaked:         13

Total time for CPA algorithm:         2.539s (Max:     0.511s)
  Time for choose from waitlist:      0.029s
  Time for precision adjustment:      0.738s
  Time for transfer relation:         1.488s
  Time for merge operator:            0.115s
  Time for stop operator:             0.042s
  Time for adding to reached set:     0.014s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 265 (count: 13, min: 8, max: 43, avg: 20.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.195s
  Counterexample analysis:                             0.123s (Max:     0.015s, Calls: 13)
    Refinement sat check:                              0.072s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.019s
  ARG update:                                          0.016s

Length of refined path (in blocks):                     252 (count: 13, min: 7, max: 42, avg: 19.38)
Number of affected states:                              239 (count: 13, min: 6, max: 41, avg: 18.38)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       239 (count: 13, min: 6, max: 41, avg: 18.38)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             226 (count: 13, min: 5, max: 40, avg: 17.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 585
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 486.54
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.773s
Time for refinements:                 0.227s
Average time for refinement:          0.017s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.708
  Visited lines:          1196
  Total lines:            1220
  Line coverage:          0.980
  Visited conditions:     82
  Total conditions:       90
  Condition coverage:     0.911

CPAchecker general statistics
-----------------------------
Number of program locations:     1358
Number of CFA edges:             1422
Number of relevant variables:    212
Number of functions:             24
Number of loops:                 3
Size of reached set:             399
  Number of reached locations:   298 (22%)
    Avg states per location:     1
    Max states per location:     21 (at node N18)
  Number of reached functions:   17 (71%)
  Number of partitions:          399
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.466s
  Time for loading CPAs:          0.542s
  Time for loading parser:        0.405s
  Time for CFA construction:      1.423s
    Time for parsing file(s):     0.438s
    Time for AST to CFA:          0.462s
    Time for CFA sanity check:    0.079s
    Time for post-processing:     0.316s
      Time for var class.:        0.126s
Time for Analysis:                2.773s
CPU time for analysis:            2.770s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.241s
Total CPU time for CPAchecker:    5.230s
Time for statistics:              0.058s

Time for Garbage Collector:       0.104s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     36MB (    34 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7988MB (  7618 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
