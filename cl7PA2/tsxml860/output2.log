scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--w1--slaves--w1_ds2433.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_10kkh9j9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_register_family to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_reset_select_slave to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_write_8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_reset_bus to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_unregister_family to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            801 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  610 (76%)
  Because of loop head:            181 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (1%)
  Times precision was empty:       239 (30%)
  Times precision was {false}:     92 (11%)
  Times result was cached:         427 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43 (5%)
  Times result was 'false':        3 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         908
  BDD entailment checks:           280
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       151
Number of predicates discovered:          2
Number of abstraction locations:          31
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         562
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.16
Number of irrelevant predicates:          280 (50%)
Number of preds handled by boolean abs:   43 (8%)
  Total number of models for allsat:      44
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.135s
  Time for path formula creation:        1.113s
Time for strengthen operator:            0.075s
Time for prec operator:                  0.671s
  Time for abstraction:                  0.630s (Max:     0.047s, Count: 801)
    Boolean abstraction:                 0.127s
    Solving time:                        0.207s (Max:     0.032s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.011s (Max:     0.007s)
Time for merge operator:                 0.197s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.223s

Number of path formula cache hits:   5766 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.076s

Total number of created targets for pointer analysis: 1600
   Number of created targets for uf: *unsigned_char is 58


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          77 (count: 1242, min: 0, max: 31, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                        13579 (count: 13579, min: 1, max: 1, avg: 1.00) [1 x 13579]

CPA algorithm statistics
------------------------
Number of iterations:            3741
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   4302
Max successors for one state:    2
Number of times merged:          314
Number of times stopped:         505
Number of times breaked:         10

Total time for CPA algorithm:         2.942s (Max:     0.660s)
  Time for choose from waitlist:      0.022s
  Time for precision adjustment:      0.816s
  Time for transfer relation:         1.692s
  Time for merge operator:            0.235s
  Time for stop operator:             0.056s
  Time for adding to reached set:     0.032s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 164 (count: 10, min: 8, max: 21, avg: 16.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.175s
  Counterexample analysis:                             0.100s (Max:     0.028s, Calls: 10)
    Refinement sat check:                              0.064s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.004s
  ARG update:                                          0.034s

Length of refined path (in blocks):                     154 (count: 10, min: 7, max: 20, avg: 15.40)
Number of affected states:                              144 (count: 10, min: 6, max: 19, avg: 14.40)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       144 (count: 10, min: 6, max: 19, avg: 14.40)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             134 (count: 10, min: 5, max: 18, avg: 13.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 451
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 358.70
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.157s
Time for refinements:                 0.215s
Average time for refinement:          0.021s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          876
  Total lines:            900
  Line coverage:          0.973
  Visited conditions:     66
  Total conditions:       74
  Condition coverage:     0.892

CPAchecker general statistics
-----------------------------
Number of program locations:     1021
Number of CFA edges:             1056
Number of relevant variables:    228
Number of functions:             21
Number of loops:                 4
Size of reached set:             238
  Number of reached locations:   205 (20%)
    Avg states per location:     1
    Max states per location:     5 (at node N800)
  Number of reached functions:   14 (67%)
  Number of partitions:          238
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.717s
  Time for loading CPAs:          0.614s
  Time for loading parser:        0.537s
  Time for CFA construction:      1.444s
    Time for parsing file(s):     0.454s
    Time for AST to CFA:          0.442s
    Time for CFA sanity check:    0.120s
    Time for post-processing:     0.292s
      Time for var class.:        0.156s
Time for Analysis:                3.157s
CPU time for analysis:            3.160s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.877s
Total CPU time for CPAchecker:    5.880s
Time for statistics:              0.051s

Time for Garbage Collector:       0.122s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     34MB (    33 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8042MB (  7670 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
