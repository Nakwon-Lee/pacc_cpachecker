scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dcsfzyvz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            59153 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  51596 (87%)
  Because of loop head:            7467 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         90 (0%)
  Times precision was empty:       18326 (31%)
  Times precision was {false}:     3555 (6%)
  Times result was cached:         36112 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1160 (2%)
  Times result was 'false':        671 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         92860
  BDD entailment checks:           21006
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          186
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         45678
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 9.69
Number of irrelevant predicates:          26672 (58%)
Number of preds handled by boolean abs:   1167 (3%)
  Total number of models for allsat:      1162
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 20.766s
  Time for path formula creation:       20.124s
Time for strengthen operator:            1.107s
Time for prec operator:                 19.968s
  Time for abstraction:                 19.106s (Max:     0.890s, Count: 59153)
    Boolean abstraction:                 2.975s
    Solving time:                        9.040s (Max:     0.049s)
    Model enumeration time:              0.249s
    Time for BDD construction:           0.048s (Max:     0.009s)
Time for merge operator:                 1.537s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.074s
Total time for SMT solver (w/o itp):     9.289s

Number of path formula cache hits:   1126530 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.811s

Total number of created targets for pointer analysis: 11293
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *unsigned_int is 131


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2330 (count: 64228, min: 0, max: 108, avg: 0.04)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.164s
  Time for transition matches:                         1.223s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1741225 (count: 1741225, min: 1, max: 1, avg: 1.00) [1 x 1741225]

CPA algorithm statistics
------------------------
Number of iterations:            342749
Max size of waitlist:            49
Average size of waitlist:        23
Number of computed successors:   395993
Max successors for one state:    2
Number of times merged:          35927
Number of times stopped:         50811
Number of times breaked:         90

Total time for CPA algorithm:        58.476s (Max:     1.893s)
  Time for choose from waitlist:      0.238s
  Time for precision adjustment:     21.831s
  Time for transfer relation:        32.318s
  Time for merge operator:            1.983s
  Time for stop operator:             0.530s
  Time for adding to reached set:     0.486s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   90
Avg. length of target path (in blocks):                3111 (count: 90, min: 19, max: 65, avg: 34.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.326s
  Counterexample analysis:                             1.593s (Max:     0.040s, Calls: 90)
    Refinement sat check:                              1.232s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.046s
  ARG update:                                          0.599s

Length of refined path (in blocks):                    2941 (count: 90, min: 12, max: 64, avg: 32.68)
Number of affected states:                             2645 (count: 90, min: 5, max: 63, avg: 29.39)
Length (states) of path with itp 'true':                206 (count: 90, min: 0, max: 23, avg: 2.29)
Length (states) of path with itp non-trivial itp:      2645 (count: 90, min: 5, max: 63, avg: 29.39)
Length (states) of path with itp 'false':                90 (count: 90, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 90, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2555 (count: 90, min: 4, max: 62, avg: 28.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                90
Number of successful refinements:     90
Number of failed refinements:         0
Max. size of reached set before ref.: 5346
Max. size of reached set after ref.:  2940
Avg. size of reached set before ref.: 4281.57
Avg. size of reached set after ref.:  484.72

Total time for CEGAR algorithm:      61.142s
Time for refinements:                 2.639s
Average time for refinement:          0.029s
Max time for refinement:              0.081s

Code Coverage
-----------------------------
  Function coverage:      0.783
  Visited lines:          7474
  Total lines:            8030
  Line coverage:          0.931
  Visited conditions:     484
  Total conditions:       546
  Condition coverage:     0.886

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             2796
  Number of reached locations:   1397 (16%)
    Avg states per location:     2
    Max states per location:     39 (at node N842)
  Number of reached functions:   54 (78%)
  Number of partitions:          2795
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6095 (before line 12902), Function mwifiex_check_fw_status called from node N7771, stack depth 2 [61bf1518], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0

Time for analysis setup:          4.906s
  Time for loading CPAs:          0.681s
  Time for loading parser:        0.564s
  Time for CFA construction:      3.567s
    Time for parsing file(s):     0.890s
    Time for AST to CFA:          1.129s
    Time for CFA sanity check:    0.429s
    Time for post-processing:     0.917s
      Time for var class.:        0.415s
Time for Analysis:               61.142s
CPU time for analysis:           61.120s
Time for analyzing result:        0.004s
Total time for CPAchecker:       66.056s
Total CPU time for CPAchecker:   66.020s
Time for statistics:              0.123s

Time for Garbage Collector:       5.575s (in 145 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                473MB (   451 MiB) max;    203MB (   194 MiB) avg;    488MB (   466 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           523MB (   499 MiB) max;    311MB (   297 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8159MB (  7781 MiB) max;   8081MB (  7707 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
