scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c3kz8bv3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            39634 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34325 (87%)
  Because of loop head:            5220 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         89 (0%)
  Times precision was empty:       8066 (20%)
  Times precision was {false}:     2650 (7%)
  Times result was cached:         28277 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      641 (2%)
  Times result was 'false':        773 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         46840
  BDD entailment checks:           13640
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          186
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         35494
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 10.79
Number of irrelevant predicates:          18629 (52%)
Number of preds handled by boolean abs:   648 (2%)
  Total number of models for allsat:      622
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                 15.234s
  Time for path formula creation:       14.900s
Time for strengthen operator:            0.735s
Time for prec operator:                 11.979s
  Time for abstraction:                 11.324s (Max:     0.037s, Count: 39634)
    Boolean abstraction:                 1.095s
    Solving time:                        4.656s (Max:     0.027s)
    Model enumeration time:              0.086s
    Time for BDD construction:           0.036s (Max:     0.010s)
Time for merge operator:                 1.047s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     4.742s

Number of path formula cache hits:   524435 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.343s

Total number of created targets for pointer analysis: 4064
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1265 (count: 39125, min: 0, max: 52, avg: 0.03)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.084s
  Time for transition matches:                         0.653s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       870967 (count: 870967, min: 1, max: 1, avg: 1.00) [1 x 870967]

CPA algorithm statistics
------------------------
Number of iterations:            194414
Max size of waitlist:            27
Average size of waitlist:        12
Number of computed successors:   222222
Max successors for one state:    2
Number of times merged:          16600
Number of times stopped:         26269
Number of times breaked:         89

Total time for CPA algorithm:        38.934s (Max:     1.483s)
  Time for choose from waitlist:      0.162s
  Time for precision adjustment:     13.404s
  Time for transfer relation:        22.384s
  Time for merge operator:            1.373s
  Time for stop operator:             0.359s
  Time for adding to reached set:     0.334s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   89
Avg. length of target path (in blocks):                3092 (count: 89, min: 19, max: 65, avg: 34.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.538s
  Counterexample analysis:                             1.833s (Max:     0.051s, Calls: 89)
    Refinement sat check:                              1.396s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.048s
  ARG update:                                          0.477s

Length of refined path (in blocks):                    2939 (count: 89, min: 12, max: 64, avg: 33.02)
Number of affected states:                             2650 (count: 89, min: 5, max: 63, avg: 29.78)
Length (states) of path with itp 'true':                200 (count: 89, min: 0, max: 23, avg: 2.25)
Length (states) of path with itp non-trivial itp:      2650 (count: 89, min: 5, max: 63, avg: 29.78)
Length (states) of path with itp 'false':                89 (count: 89, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 89, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2561 (count: 89, min: 4, max: 62, avg: 28.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                89
Number of successful refinements:     89
Number of failed refinements:         0
Max. size of reached set before ref.: 3989
Max. size of reached set after ref.:  1991
Avg. size of reached set before ref.: 2522.42
Avg. size of reached set after ref.:  360.79

Total time for CEGAR algorithm:      41.798s
Time for refinements:                 2.834s
Average time for refinement:          0.031s
Max time for refinement:              0.121s

Code Coverage
-----------------------------
  Function coverage:      0.783
  Visited lines:          7474
  Total lines:            8030
  Line coverage:          0.931
  Visited conditions:     484
  Total conditions:       546
  Condition coverage:     0.886

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             2796
  Number of reached locations:   1397 (16%)
    Avg states per location:     2
    Max states per location:     39 (at node N842)
  Number of reached functions:   54 (78%)
  Number of partitions:          2795
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6095 (before line 12902), Function mwifiex_check_fw_status called from node N7771, stack depth 2 [2475be03], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0

Time for analysis setup:          5.015s
  Time for loading CPAs:          0.985s
  Time for loading parser:        0.412s
  Time for CFA construction:      3.499s
    Time for parsing file(s):     0.735s
    Time for AST to CFA:          1.128s
    Time for CFA sanity check:    0.449s
    Time for post-processing:     1.087s
      Time for var class.:        0.468s
Time for Analysis:               41.798s
CPU time for analysis:           41.810s
Time for analyzing result:        0.004s
Total time for CPAchecker:       46.816s
Total CPU time for CPAchecker:   46.800s
Time for statistics:              0.121s

Time for Garbage Collector:       3.455s (in 123 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                282MB (   268 MiB) max;    118MB (   112 MiB) avg;    288MB (   275 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           345MB (   329 MiB) max;    191MB (   183 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
