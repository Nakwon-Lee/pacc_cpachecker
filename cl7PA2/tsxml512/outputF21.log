scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d1m2mnpj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            97860 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  83521 (85%)
  Because of loop head:            13883 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         456 (0%)
  Times precision was empty:       5670 (6%)
  Times precision was {false}:     1258 (1%)
  Times result was cached:         90515 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      417 (0%)
  Times result was 'false':        366 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         103273
  BDD entailment checks:           23651
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          186
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         96456
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 57.59
Number of irrelevant predicates:          57683 (60%)
Number of preds handled by boolean abs:   424 (0%)
  Total number of models for allsat:      425
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 15.024s
  Time for path formula creation:       14.421s
Time for strengthen operator:            2.018s
Time for prec operator:                 16.137s
  Time for abstraction:                 15.007s (Max:     0.078s, Count: 97860)
    Boolean abstraction:                 0.698s
    Solving time:                        2.529s (Max:     0.029s)
    Model enumeration time:              0.054s
    Time for BDD construction:           0.035s (Max:     0.013s)
Time for merge operator:                 0.631s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     2.583s

Number of path formula cache hits:   2346881 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.942s

Total number of created targets for pointer analysis: 2295
   Number of created targets for uf: *unsigned_short_int is 13
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         828 (count: 38246, min: 0, max: 61, avg: 0.02)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.247s
  Time for transition matches:                         1.210s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      2467346 (count: 2467346, min: 1, max: 1, avg: 1.00) [1 x 2467346]

CPA algorithm statistics
------------------------
Number of iterations:            497061
Max size of waitlist:            46
Average size of waitlist:        21
Number of computed successors:   568521
Max successors for one state:    2
Number of times merged:          39811
Number of times stopped:         60353
Number of times breaked:         456

Total time for CPA algorithm:        51.160s (Max:     1.350s)
  Time for choose from waitlist:      0.225s
  Time for precision adjustment:     18.410s
  Time for transfer relation:        29.002s
  Time for merge operator:            1.114s
  Time for stop operator:             0.587s
  Time for adding to reached set:     0.651s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   456
Avg. length of target path (in blocks):               21893 (count: 456, min: 31, max: 85, avg: 48.01)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.286s
  Counterexample analysis:                            11.889s (Max:     0.101s, Calls: 456)
    Refinement sat check:                              8.967s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.108s
  Precision update:                                    0.200s
  ARG update:                                          0.858s

Length of refined path (in blocks):                   21409 (count: 456, min: 12, max: 84, avg: 46.95)
Number of affected states:                            17051 (count: 456, min: 5, max: 83, avg: 37.39)
Length (states) of path with itp 'true':               3902 (count: 456, min: 0, max: 23, avg: 8.56)
Length (states) of path with itp non-trivial itp:     17051 (count: 456, min: 5, max: 83, avg: 37.39)
Length (states) of path with itp 'false':               456 (count: 456, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 456, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           16595 (count: 456, min: 4, max: 82, avg: 36.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                456
Number of successful refinements:     456
Number of failed refinements:         0
Max. size of reached set before ref.: 3322
Max. size of reached set after ref.:  2701
Avg. size of reached set before ref.: 2193.74
Avg. size of reached set after ref.:  1086.27

Total time for CEGAR algorithm:      65.534s
Time for refinements:                14.034s
Average time for refinement:          0.030s
Max time for refinement:              0.133s

Code Coverage
-----------------------------
  Function coverage:      0.783
  Visited lines:          7474
  Total lines:            8030
  Line coverage:          0.931
  Visited conditions:     484
  Total conditions:       546
  Condition coverage:     0.886

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             2796
  Number of reached locations:   1397 (16%)
    Avg states per location:     2
    Max states per location:     39 (at node N842)
  Number of reached functions:   54 (78%)
  Number of partitions:          2795
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6095 (before line 12902), Function mwifiex_check_fw_status called from node N7771, stack depth 2 [3173b396], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0

Time for analysis setup:          5.426s
  Time for loading CPAs:          0.878s
  Time for loading parser:        0.505s
  Time for CFA construction:      3.914s
    Time for parsing file(s):     0.829s
    Time for AST to CFA:          1.252s
    Time for CFA sanity check:    0.501s
    Time for post-processing:     1.171s
      Time for var class.:        0.565s
Time for Analysis:               65.534s
CPU time for analysis:           65.530s
Time for analyzing result:        0.002s
Total time for CPAchecker:       70.964s
Total CPU time for CPAchecker:   70.930s
Time for statistics:              0.130s

Time for Garbage Collector:       3.778s (in 240 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                250MB (   238 MiB) max;    129MB (   123 MiB) avg;    251MB (   240 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           342MB (   326 MiB) max;    199MB (   189 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8079MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
