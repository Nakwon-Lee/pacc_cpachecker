scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_we13xc61/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21006 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18451 (88%)
  Because of loop head:            2517 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       11325 (54%)
  Times precision was {false}:     1028 (5%)
  Times result was cached:         8439 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      214 (1%)
  Times result was 'false':        228 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         26127
  BDD entailment checks:           6461
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          104
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         10447
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 8.41
Number of irrelevant predicates:          6690 (64%)
Number of preds handled by boolean abs:   221 (2%)
  Total number of models for allsat:      215
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  9.453s
  Time for path formula creation:        9.206s
Time for strengthen operator:            0.463s
Time for prec operator:                  6.115s
  Time for abstraction:                  5.627s (Max:     0.317s, Count: 21006)
    Boolean abstraction:                 0.262s
    Solving time:                        2.251s (Max:     0.034s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.018s (Max:     0.012s)
Time for merge operator:                 0.625s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.066s
Total time for SMT solver (w/o itp):     2.274s

Number of path formula cache hits:   367785 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.057s

Total number of created targets for pointer analysis: 1982
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *unsigned_int is 43


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         443 (count: 24275, min: 0, max: 60, avg: 0.02)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.077s
  Time for transition matches:                         0.657s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       546489 (count: 546489, min: 1, max: 1, avg: 1.00) [1 x 546489]

CPA algorithm statistics
------------------------
Number of iterations:            106482
Max size of waitlist:            46
Average size of waitlist:        25
Number of computed successors:   121888
Max successors for one state:    2
Number of times merged:          9833
Number of times stopped:         14706
Number of times breaked:         38

Total time for CPA algorithm:        24.013s (Max:     1.858s)
  Time for choose from waitlist:      0.141s
  Time for precision adjustment:      7.012s
  Time for transfer relation:        14.856s
  Time for merge operator:            0.887s
  Time for stop operator:             0.248s
  Time for adding to reached set:     0.214s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                1039 (count: 38, min: 19, max: 41, avg: 27.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.214s
  Counterexample analysis:                             0.808s (Max:     0.052s, Calls: 38)
    Refinement sat check:                              0.603s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.025s
  ARG update:                                          0.313s

Length of refined path (in blocks):                     953 (count: 38, min: 12, max: 40, avg: 25.08)
Number of affected states:                              897 (count: 38, min: 5, max: 39, avg: 23.61)
Length (states) of path with itp 'true':                 18 (count: 38, min: 0, max: 6, avg: 0.47)
Length (states) of path with itp non-trivial itp:       897 (count: 38, min: 5, max: 39, avg: 23.61)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 38, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             859 (count: 38, min: 4, max: 38, avg: 22.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 4104
Max. size of reached set after ref.:  1630
Avg. size of reached set before ref.: 2893.05
Avg. size of reached set after ref.:  131.29

Total time for CEGAR algorithm:      25.374s
Time for refinements:                 1.355s
Average time for refinement:          0.035s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.580
  Visited lines:          4607
  Total lines:            8030
  Line coverage:          0.574
  Visited conditions:     258
  Total conditions:       546
  Condition coverage:     0.473

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             2007
  Number of reached locations:   745 (9%)
    Avg states per location:     2
    Max states per location:     25 (at node N842)
  Number of reached functions:   40 (58%)
  Number of partitions:          1991
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N7828 (before line 14982), Function main called from node N7675, stack depth 1 [6d7ad0f5], stack [main]])
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          5.003s
  Time for loading CPAs:          0.878s
  Time for loading parser:        0.450s
  Time for CFA construction:      3.575s
    Time for parsing file(s):     0.849s
    Time for AST to CFA:          1.105s
    Time for CFA sanity check:    0.511s
    Time for post-processing:     0.984s
      Time for var class.:        0.410s
Time for Analysis:               25.374s
CPU time for analysis:           25.370s
Total time for CPAchecker:       30.380s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.148s

Time for Garbage Collector:       1.833s (in 85 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                172MB (   164 MiB) max;     84MB (    81 MiB) avg;    178MB (   170 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           199MB (   190 MiB) max;    149MB (   142 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
