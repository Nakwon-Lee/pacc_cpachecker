scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_55td53cr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23342 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20596 (88%)
  Because of loop head:            2719 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       16294 (70%)
  Times precision was {false}:     919 (4%)
  Times result was cached:         5957 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      172 (1%)
  Times result was 'false':        175 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         34661
  BDD entailment checks:           7393
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          90
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         7274
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 6.67
Number of irrelevant predicates:          5101 (70%)
Number of preds handled by boolean abs:   178 (2%)
  Total number of models for allsat:      173
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  9.987s
  Time for path formula creation:        9.697s
Time for strengthen operator:            0.669s
Time for prec operator:                  4.415s
  Time for abstraction:                  4.003s (Max:     0.033s, Count: 23342)
    Boolean abstraction:                 0.265s
    Solving time:                        1.736s (Max:     0.027s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.024s (Max:     0.009s)
Time for merge operator:                 0.851s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     1.756s

Number of path formula cache hits:   436049 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.619s

Total number of created targets for pointer analysis: 3764
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *unsigned_int is 29


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         339 (count: 29365, min: 0, max: 57, avg: 0.01)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.957s
  Time for transition matches:                         0.566s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       658178 (count: 658178, min: 1, max: 1, avg: 1.00) [1 x 658178]

CPA algorithm statistics
------------------------
Number of iterations:            133066
Max size of waitlist:            41
Average size of waitlist:        18
Number of computed successors:   153416
Max successors for one state:    2
Number of times merged:          13634
Number of times stopped:         20067
Number of times breaked:         27

Total time for CPA algorithm:        24.181s (Max:     2.816s)
  Time for choose from waitlist:      0.156s
  Time for precision adjustment:      5.990s
  Time for transfer relation:        15.485s
  Time for merge operator:            1.166s
  Time for stop operator:             0.509s
  Time for adding to reached set:     0.281s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 722 (count: 27, min: 19, max: 41, avg: 26.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.972s
  Counterexample analysis:                             0.506s (Max:     0.040s, Calls: 27)
    Refinement sat check:                              0.320s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.008s
  ARG update:                                          0.408s

Length of refined path (in blocks):                     679 (count: 27, min: 12, max: 40, avg: 25.15)
Number of affected states:                              646 (count: 27, min: 5, max: 39, avg: 23.93)
Length (states) of path with itp 'true':                  6 (count: 27, min: 0, max: 6, avg: 0.22)
Length (states) of path with itp non-trivial itp:       646 (count: 27, min: 5, max: 39, avg: 23.93)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 27, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             619 (count: 27, min: 4, max: 38, avg: 22.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 5224
Max. size of reached set after ref.:  2793
Avg. size of reached set before ref.: 4999.07
Avg. size of reached set after ref.:  106.33

Total time for CEGAR algorithm:      25.328s
Time for refinements:                 1.133s
Average time for refinement:          0.041s
Max time for refinement:              0.118s

Code Coverage
-----------------------------
  Function coverage:      0.522
  Visited lines:          4282
  Total lines:            8030
  Line coverage:          0.533
  Visited conditions:     216
  Total conditions:       546
  Condition coverage:     0.396

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             1070
  Number of reached locations:   616 (7%)
    Avg states per location:     1
    Max states per location:     13 (at node N7827)
  Number of reached functions:   36 (52%)
  Number of partitions:          1060
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6095 (before line 12902), Function mwifiex_check_fw_status called from node N7771, stack depth 2 [20dffc2d], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0
  Size of final wait list        36

Time for analysis setup:          5.013s
  Time for loading CPAs:          0.848s
  Time for loading parser:        0.487s
  Time for CFA construction:      3.569s
    Time for parsing file(s):     0.777s
    Time for AST to CFA:          1.147s
    Time for CFA sanity check:    0.443s
    Time for post-processing:     1.049s
      Time for var class.:        0.573s
Time for Analysis:               25.328s
CPU time for analysis:           25.320s
Total time for CPAchecker:       30.344s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.075s

Time for Garbage Collector:       2.218s (in 93 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                207MB (   197 MiB) max;     91MB (    87 MiB) avg;    224MB (   213 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           276MB (   263 MiB) max;    160MB (   152 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
