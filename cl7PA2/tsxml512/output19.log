scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_79q61eib/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27316 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24106 (88%)
  Because of loop head:            3167 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (0%)
  Times precision was empty:       15714 (58%)
  Times precision was {false}:     767 (3%)
  Times result was cached:         10579 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      256 (1%)
  Times result was 'false':        327 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         36013
  BDD entailment checks:           7957
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          111
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         13242
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 12.94
Number of irrelevant predicates:          6950 (52%)
Number of preds handled by boolean abs:   263 (2%)
  Total number of models for allsat:      259
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  9.033s
  Time for path formula creation:        8.794s
Time for strengthen operator:            0.637s
Time for prec operator:                  5.165s
  Time for abstraction:                  4.749s (Max:     0.329s, Count: 27316)
    Boolean abstraction:                 0.345s
    Solving time:                        1.284s (Max:     0.016s)
    Model enumeration time:              0.030s
    Time for BDD construction:           0.064s (Max:     0.013s)
Time for merge operator:                 0.675s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):     1.314s

Number of path formula cache hits:   541589 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.615s

Total number of created targets for pointer analysis: 1699
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *unsigned_int is 59


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         524 (count: 29133, min: 0, max: 36, avg: 0.02)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.053s
  Time for transition matches:                         0.611s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       706331 (count: 706331, min: 1, max: 1, avg: 1.00) [1 x 706331]

CPA algorithm statistics
------------------------
Number of iterations:            146060
Max size of waitlist:            26
Average size of waitlist:        16
Number of computed successors:   167692
Max successors for one state:    2
Number of times merged:          14028
Number of times stopped:         20972
Number of times breaked:         43

Total time for CPA algorithm:        23.779s (Max:     1.584s)
  Time for choose from waitlist:      0.114s
  Time for precision adjustment:      6.407s
  Time for transfer relation:        15.001s
  Time for merge operator:            0.954s
  Time for stop operator:             0.353s
  Time for adding to reached set:     0.273s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                1646 (count: 43, min: 19, max: 73, avg: 38.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.750s
  Counterexample analysis:                             1.209s (Max:     0.064s, Calls: 43)
    Refinement sat check:                              0.882s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.060s
  ARG update:                                          0.412s

Length of refined path (in blocks):                    1587 (count: 43, min: 12, max: 72, avg: 36.91)
Number of affected states:                             1538 (count: 43, min: 5, max: 71, avg: 35.77)
Length (states) of path with itp 'true':                  6 (count: 43, min: 0, max: 6, avg: 0.14)
Length (states) of path with itp non-trivial itp:      1538 (count: 43, min: 5, max: 71, avg: 35.77)
Length (states) of path with itp 'false':                43 (count: 43, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 43, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1495 (count: 43, min: 4, max: 70, avg: 34.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 3973
Max. size of reached set after ref.:  2724
Avg. size of reached set before ref.: 3457.56
Avg. size of reached set after ref.:  66.28

Total time for CEGAR algorithm:      25.763s
Time for refinements:                 1.981s
Average time for refinement:          0.046s
Max time for refinement:              0.102s

Code Coverage
-----------------------------
  Function coverage:      0.435
  Visited lines:          2953
  Total lines:            8030
  Line coverage:          0.368
  Visited conditions:     154
  Total conditions:       546
  Condition coverage:     0.282

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             569
  Number of reached locations:   458 (5%)
    Avg states per location:     1
    Max states per location:     11 (at node N842)
  Number of reached functions:   30 (43%)
  Number of partitions:          569
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          4.592s
  Time for loading CPAs:          0.745s
  Time for loading parser:        0.406s
  Time for CFA construction:      3.333s
    Time for parsing file(s):     0.851s
    Time for AST to CFA:          1.101s
    Time for CFA sanity check:    0.313s
    Time for post-processing:     0.897s
      Time for var class.:        0.433s
Time for Analysis:               25.763s
CPU time for analysis:           25.750s
Total time for CPAchecker:       30.358s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.083s

Time for Garbage Collector:       1.874s (in 97 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                157MB (   150 MiB) max;     83MB (    79 MiB) avg;    173MB (   165 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           200MB (   190 MiB) max;    146MB (   140 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8076MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
