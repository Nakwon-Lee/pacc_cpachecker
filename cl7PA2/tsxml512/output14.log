scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__xijivh4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18288 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15510 (85%)
  Because of loop head:            2707 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       2049 (11%)
  Times precision was {false}:     984 (5%)
  Times result was cached:         14940 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      315 (2%)
  Times result was 'false':        182 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         15588
  BDD entailment checks:           4040
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          139
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         16809
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 12.94
Number of irrelevant predicates:          8192 (49%)
Number of preds handled by boolean abs:   322 (2%)
  Total number of models for allsat:      321
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  9.098s
  Time for path formula creation:        8.890s
Time for strengthen operator:            0.695s
Time for prec operator:                  5.938s
  Time for abstraction:                  5.503s (Max:     0.034s, Count: 18288)
    Boolean abstraction:                 0.526s
    Solving time:                        1.781s (Max:     0.019s)
    Model enumeration time:              0.034s
    Time for BDD construction:           0.032s (Max:     0.009s)
Time for merge operator:                 0.481s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.815s

Number of path formula cache hits:   274994 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.060s

Total number of created targets for pointer analysis: 1645
   Number of created targets for uf: *unsigned_short_int is 7
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         646 (count: 12914, min: 0, max: 69, avg: 0.05)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.787s
  Time for transition matches:                         0.420s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       425251 (count: 425251, min: 1, max: 1, avg: 1.00) [1 x 425251]

CPA algorithm statistics
------------------------
Number of iterations:            85302
Max size of waitlist:            46
Average size of waitlist:        22
Number of computed successors:   96804
Max successors for one state:    2
Number of times merged:          5774
Number of times stopped:         9299
Number of times breaked:         71

Total time for CPA algorithm:        22.121s (Max:     1.209s)
  Time for choose from waitlist:      0.100s
  Time for precision adjustment:      6.758s
  Time for transfer relation:        13.576s
  Time for merge operator:            0.665s
  Time for stop operator:             0.203s
  Time for adding to reached set:     0.196s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                3572 (count: 71, min: 31, max: 85, avg: 50.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.827s
  Counterexample analysis:                             2.425s (Max:     0.072s, Calls: 71)
    Refinement sat check:                              1.775s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.056s
  ARG update:                                          0.230s

Length of refined path (in blocks):                    3473 (count: 71, min: 12, max: 84, avg: 48.92)
Number of affected states:                             3116 (count: 71, min: 5, max: 83, avg: 43.89)
Length (states) of path with itp 'true':                286 (count: 71, min: 0, max: 10, avg: 4.03)
Length (states) of path with itp non-trivial itp:      3116 (count: 71, min: 5, max: 83, avg: 43.89)
Length (states) of path with itp 'false':                71 (count: 71, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 71, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3045 (count: 71, min: 4, max: 82, avg: 42.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     71
Number of failed refinements:         0
Max. size of reached set before ref.: 2639
Max. size of reached set after ref.:  1270
Avg. size of reached set before ref.: 1720.32
Avg. size of reached set after ref.:  513.63

Total time for CEGAR algorithm:      25.181s
Time for refinements:                 3.029s
Average time for refinement:          0.042s
Max time for refinement:              0.090s

Code Coverage
-----------------------------
  Function coverage:      0.725
  Visited lines:          5288
  Total lines:            8030
  Line coverage:          0.659
  Visited conditions:     312
  Total conditions:       546
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             1649
  Number of reached locations:   938 (11%)
    Avg states per location:     1
    Max states per location:     16 (at node N842)
  Number of reached functions:   50 (72%)
  Number of partitions:          1648
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6095 (before line 12902), Function mwifiex_check_fw_status called from node N7771, stack depth 2 [bb3df61], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          4.687s
  Time for loading CPAs:          0.817s
  Time for loading parser:        0.419s
  Time for CFA construction:      3.352s
    Time for parsing file(s):     0.703s
    Time for AST to CFA:          1.027s
    Time for CFA sanity check:    0.447s
    Time for post-processing:     1.051s
      Time for var class.:        0.480s
Time for Analysis:               25.181s
CPU time for analysis:           25.180s
Total time for CPAchecker:       29.870s
Total CPU time for CPAchecker:   29.860s
Time for statistics:              0.107s

Time for Garbage Collector:       1.641s (in 79 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                167MB (   159 MiB) max;     82MB (    78 MiB) avg;    176MB (   168 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           204MB (   194 MiB) max;    146MB (   139 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
