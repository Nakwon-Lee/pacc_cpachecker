scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1jjjvugh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            86810 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  76012 (88%)
  Because of loop head:            10620 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         178 (0%)
  Times precision was empty:       20682 (24%)
  Times precision was {false}:     3517 (4%)
  Times result was cached:         62118 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      493 (1%)
  Times result was 'false':        1021 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         134884
  BDD entailment checks:           33866
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          186
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         76223
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 19.01
Number of irrelevant predicates:          54331 (71%)
Number of preds handled by boolean abs:   500 (1%)
  Total number of models for allsat:      495
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 18.888s
  Time for path formula creation:       18.304s
Time for strengthen operator:            1.641s
Time for prec operator:                 20.634s
  Time for abstraction:                 19.648s (Max:     0.556s, Count: 86810)
    Boolean abstraction:                 0.694s
    Solving time:                        7.389s (Max:     0.040s)
    Model enumeration time:              0.056s
    Time for BDD construction:           0.049s (Max:     0.009s)
Time for merge operator:                 1.364s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     7.445s

Number of path formula cache hits:   2025546 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.941s

Total number of created targets for pointer analysis: 7353
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *unsigned_int is 56


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         994 (count: 75246, min: 0, max: 40, avg: 0.01)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.273s
  Time for transition matches:                         1.314s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2464190 (count: 2464190, min: 1, max: 1, avg: 1.00) [1 x 2464190]

CPA algorithm statistics
------------------------
Number of iterations:            490661
Max size of waitlist:            45
Average size of waitlist:        23
Number of computed successors:   565936
Max successors for one state:    2
Number of times merged:          50509
Number of times stopped:         73063
Number of times breaked:         178

Total time for CPA algorithm:        62.592s (Max:     1.812s)
  Time for choose from waitlist:      0.268s
  Time for precision adjustment:     23.884s
  Time for transfer relation:        34.041s
  Time for merge operator:            1.965s
  Time for stop operator:             0.609s
  Time for adding to reached set:     0.555s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   178
Avg. length of target path (in blocks):                6373 (count: 178, min: 19, max: 65, avg: 35.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.589s
  Counterexample analysis:                             3.523s (Max:     0.067s, Calls: 178)
    Refinement sat check:                              2.684s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.084s
  ARG update:                                          0.839s

Length of refined path (in blocks):                    6179 (count: 178, min: 12, max: 64, avg: 34.71)
Number of affected states:                             4808 (count: 178, min: 5, max: 63, avg: 27.01)
Length (states) of path with itp 'true':               1193 (count: 178, min: 0, max: 23, avg: 6.70)
Length (states) of path with itp non-trivial itp:      4808 (count: 178, min: 5, max: 63, avg: 27.01)
Length (states) of path with itp 'false':               178 (count: 178, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 178, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4630 (count: 178, min: 4, max: 62, avg: 26.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                178
Number of successful refinements:     178
Number of failed refinements:         0
Max. size of reached set before ref.: 4749
Max. size of reached set after ref.:  2717
Avg. size of reached set before ref.: 3919.85
Avg. size of reached set after ref.:  1172.34

Total time for CEGAR algorithm:      67.847s
Time for refinements:                 5.127s
Average time for refinement:          0.028s
Max time for refinement:              0.082s

Code Coverage
-----------------------------
  Function coverage:      0.783
  Visited lines:          7474
  Total lines:            8030
  Line coverage:          0.931
  Visited conditions:     484
  Total conditions:       546
  Condition coverage:     0.886

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             2796
  Number of reached locations:   1397 (16%)
    Avg states per location:     2
    Max states per location:     39 (at node N842)
  Number of reached functions:   54 (78%)
  Number of partitions:          2795
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6095 (before line 12902), Function mwifiex_check_fw_status called from node N7771, stack depth 2 [bc4cd61], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0

Time for analysis setup:          4.492s
  Time for loading CPAs:          0.812s
  Time for loading parser:        0.470s
  Time for CFA construction:      3.135s
    Time for parsing file(s):     0.819s
    Time for AST to CFA:          1.012s
    Time for CFA sanity check:    0.321s
    Time for post-processing:     0.804s
      Time for var class.:        0.399s
Time for Analysis:               67.847s
CPU time for analysis:           67.830s
Time for analyzing result:        0.001s
Total time for CPAchecker:       72.342s
Total CPU time for CPAchecker:   72.320s
Time for statistics:              0.105s

Time for Garbage Collector:       5.910s (in 171 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                427MB (   408 MiB) max;    198MB (   189 MiB) avg;    431MB (   411 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           568MB (   541 MiB) max;    320MB (   305 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8081MB (  7706 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
