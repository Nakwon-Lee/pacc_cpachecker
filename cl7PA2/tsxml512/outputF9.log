scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p2o7rs0n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            265266 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  234336 (88%)
  Because of loop head:            30525 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         405 (0%)
  Times precision was empty:       57774 (22%)
  Times precision was {false}:     5409 (2%)
  Times result was cached:         201157 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      926 (0%)
  Times result was 'false':        2375 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         497156
  BDD entailment checks:           116530
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          186
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         243327
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 38.41
Number of irrelevant predicates:          188837 (78%)
Number of preds handled by boolean abs:   933 (0%)
  Total number of models for allsat:      928
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 34.737s
  Time for path formula creation:       32.900s
Time for strengthen operator:            4.135s
Time for prec operator:                 44.661s
  Time for abstraction:                 42.169s (Max:     0.831s, Count: 265266)
    Boolean abstraction:                 1.828s
    Solving time:                       11.869s (Max:     0.030s)
    Model enumeration time:              0.171s
    Time for BDD construction:           0.046s (Max:     0.008s)
Time for merge operator:                 2.251s
Time for coverage check:                 0.173s
  Time for BDD entailment checks:        0.117s
Total time for SMT solver (w/o itp):    12.040s

Number of path formula cache hits:   7699755 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    22.957s

Total number of created targets for pointer analysis: 18268
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *unsigned_int is 130


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1860 (count: 207184, min: 0, max: 152, avg: 0.01)
Time for BDD node cleanup:                             0.051s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.977s
  Time for transition matches:                         4.243s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      8281902 (count: 8281902, min: 1, max: 1, avg: 1.00) [1 x 8281902]

CPA algorithm statistics
------------------------
Number of iterations:            1689038
Max size of waitlist:            41
Average size of waitlist:        18
Number of computed successors:   1961676
Max successors for one state:    2
Number of times merged:          190313
Number of times stopped:         269367
Number of times breaked:         405

Total time for CPA algorithm:       134.152s (Max:     2.562s)
  Time for choose from waitlist:      0.438s
  Time for precision adjustment:     50.782s
  Time for transfer relation:        71.972s
  Time for merge operator:            3.567s
  Time for stop operator:             1.427s
  Time for adding to reached set:     2.853s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   405
Avg. length of target path (in blocks):               15166 (count: 405, min: 19, max: 65, avg: 37.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.503s
  Counterexample analysis:                             7.781s (Max:     0.044s, Calls: 405)
    Refinement sat check:                              6.013s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.096s
  ARG update:                                          2.368s

Length of refined path (in blocks):                   14745 (count: 405, min: 12, max: 64, avg: 36.41)
Number of affected states:                            10428 (count: 405, min: 5, max: 63, avg: 25.75)
Length (states) of path with itp 'true':               3912 (count: 405, min: 0, max: 23, avg: 9.66)
Length (states) of path with itp non-trivial itp:     10428 (count: 405, min: 5, max: 63, avg: 25.75)
Length (states) of path with itp 'false':               405 (count: 405, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 405, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10023 (count: 405, min: 4, max: 62, avg: 24.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                405
Number of successful refinements:     405
Number of failed refinements:         0
Max. size of reached set before ref.: 6051
Max. size of reached set after ref.:  2793
Avg. size of reached set before ref.: 5200.46
Avg. size of reached set after ref.:  1034.69

Total time for CEGAR algorithm:     146.027s
Time for refinements:                11.659s
Average time for refinement:          0.028s
Max time for refinement:              0.102s

Code Coverage
-----------------------------
  Function coverage:      0.783
  Visited lines:          7474
  Total lines:            8030
  Line coverage:          0.931
  Visited conditions:     484
  Total conditions:       546
  Condition coverage:     0.886

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             2796
  Number of reached locations:   1397 (16%)
    Avg states per location:     2
    Max states per location:     39 (at node N842)
  Number of reached functions:   54 (78%)
  Number of partitions:          2795
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6095 (before line 12902), Function mwifiex_check_fw_status called from node N7771, stack depth 2 [76c5697e], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0

Time for analysis setup:          4.247s
  Time for loading CPAs:          0.680s
  Time for loading parser:        0.486s
  Time for CFA construction:      3.015s
    Time for parsing file(s):     0.798s
    Time for AST to CFA:          0.963s
    Time for CFA sanity check:    0.323s
    Time for post-processing:     0.748s
      Time for var class.:        0.350s
Time for Analysis:              146.027s
CPU time for analysis:          146.020s
Time for analyzing result:        0.002s
Total time for CPAchecker:      150.279s
Total CPU time for CPAchecker:  150.250s
Time for statistics:              0.107s

Time for Garbage Collector:      10.991s (in 299 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                673MB (   642 MiB) max;    388MB (   370 MiB) avg;    684MB (   652 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           777MB (   741 MiB) max;    585MB (   558 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8170MB (  7791 MiB) max;   8123MB (  7747 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
