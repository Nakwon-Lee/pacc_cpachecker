scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--mwifiex--mwifiex_pcie_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zizbhgtp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24664 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21565 (87%)
  Because of loop head:            3058 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (0%)
  Times precision was empty:       13553 (55%)
  Times precision was {false}:     1110 (5%)
  Times result was cached:         9807 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      194 (1%)
  Times result was 'false':        188 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         38013
  BDD entailment checks:           8333
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       172
Number of predicates discovered:          3
Number of abstraction locations:          98
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         11394
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 8.74
Number of irrelevant predicates:          7792 (68%)
Number of preds handled by boolean abs:   200 (2%)
  Total number of models for allsat:      194
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 10.399s
  Time for path formula creation:       10.143s
Time for strengthen operator:            0.655s
Time for prec operator:                  5.097s
  Time for abstraction:                  4.691s (Max:     0.027s, Count: 24664)
    Boolean abstraction:                 0.261s
    Solving time:                        2.011s (Max:     0.021s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.011s (Max:     0.001s)
Time for merge operator:                 0.759s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     2.033s

Number of path formula cache hits:   494637 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.352s

Total number of created targets for pointer analysis: 3310
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *unsigned_int is 41


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         400 (count: 28647, min: 0, max: 37, avg: 0.01)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.801s
  Time for transition matches:                         0.495s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       726425 (count: 726425, min: 1, max: 1, avg: 1.00) [1 x 726425]

CPA algorithm statistics
------------------------
Number of iterations:            141967
Max size of waitlist:            42
Average size of waitlist:        25
Number of computed successors:   164022
Max successors for one state:    2
Number of times merged:          14840
Number of times stopped:         20957
Number of times breaked:         41

Total time for CPA algorithm:        24.746s (Max:     2.037s)
  Time for choose from waitlist:      0.111s
  Time for precision adjustment:      6.337s
  Time for transfer relation:        16.144s
  Time for merge operator:            1.054s
  Time for stop operator:             0.307s
  Time for adding to reached set:     0.240s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                1097 (count: 41, min: 19, max: 41, avg: 26.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.110s
  Counterexample analysis:                             0.661s (Max:     0.028s, Calls: 41)
    Refinement sat check:                              0.499s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.042s
  ARG update:                                          0.338s

Length of refined path (in blocks):                     976 (count: 41, min: 12, max: 40, avg: 23.80)
Number of affected states:                              905 (count: 41, min: 5, max: 39, avg: 22.07)
Length (states) of path with itp 'true':                 30 (count: 41, min: 0, max: 6, avg: 0.73)
Length (states) of path with itp non-trivial itp:       905 (count: 41, min: 5, max: 39, avg: 22.07)
Length (states) of path with itp 'false':                41 (count: 41, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 41, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             864 (count: 41, min: 4, max: 38, avg: 21.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 4393
Max. size of reached set after ref.:  2370
Avg. size of reached set before ref.: 3742.32
Avg. size of reached set after ref.:  291.66

Total time for CEGAR algorithm:      26.029s
Time for refinements:                 1.271s
Average time for refinement:          0.031s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.710
  Visited lines:          5391
  Total lines:            8030
  Line coverage:          0.671
  Visited conditions:     298
  Total conditions:       546
  Condition coverage:     0.546

CPAchecker general statistics
-----------------------------
Number of program locations:     8643
Number of CFA edges:             8988
Number of relevant variables:    2031
Number of functions:             69
Number of loops:                 18
Size of reached set:             1400
  Number of reached locations:   892 (10%)
    Avg states per location:     1
    Max states per location:     17 (at node N843)
  Number of reached functions:   49 (71%)
  Number of partitions:          1388
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6095 (before line 12902), Function mwifiex_check_fw_status called from node N7771, stack depth 2 [78e0a352], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0
  Size of final wait list        37

Time for analysis setup:          4.328s
  Time for loading CPAs:          0.730s
  Time for loading parser:        0.456s
  Time for CFA construction:      3.057s
    Time for parsing file(s):     0.764s
    Time for AST to CFA:          1.028s
    Time for CFA sanity check:    0.286s
    Time for post-processing:     0.799s
      Time for var class.:        0.398s
Time for Analysis:               26.029s
CPU time for analysis:           26.030s
Total time for CPAchecker:       30.360s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.131s

Time for Garbage Collector:       2.565s (in 92 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                237MB (   226 MiB) max;    102MB (    98 MiB) avg;    240MB (   229 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           319MB (   304 MiB) max;    174MB (   166 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
