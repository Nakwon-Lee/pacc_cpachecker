scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--video--backlight--lms283gf05.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_chvshznu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3221 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2610 (81%)
  Because of loop head:            600 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (0%)
  Times precision was empty:       1320 (41%)
  Times precision was {false}:     92 (3%)
  Times result was cached:         1753 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      56 (2%)
  Times result was 'false':        11 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         787
  BDD entailment checks:           479
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          2
Number of abstraction locations:          44
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1901
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 12.84
Number of irrelevant predicates:          1018 (54%)
Number of preds handled by boolean abs:   56 (3%)
  Total number of models for allsat:      58
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.483s
  Time for path formula creation:        1.430s
Time for strengthen operator:            0.075s
Time for prec operator:                  0.795s
  Time for abstraction:                  0.726s (Max:     0.017s, Count: 3221)
    Boolean abstraction:                 0.082s
    Solving time:                        0.149s (Max:     0.013s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.006s (Max:     0.004s)
Time for merge operator:                 0.037s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.151s

Number of path formula cache hits:   22817 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.380s

Total number of created targets for pointer analysis: 909
   Number of created targets for uf: *char is 151


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         113 (count: 2600, min: 0, max: 42, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.104s
Automaton transfers with branching:                0
Automaton transfer successors:                        33618 (count: 33618, min: 1, max: 1, avg: 1.00) [1 x 33618]

CPA algorithm statistics
------------------------
Number of iterations:            9596
Max size of waitlist:            8
Average size of waitlist:        5
Number of computed successors:   10213
Max successors for one state:    2
Number of times merged:          154
Number of times stopped:         576
Number of times breaked:         11

Total time for CPA algorithm:         3.573s (Max:     0.783s)
  Time for choose from waitlist:      0.056s
  Time for precision adjustment:      1.022s
  Time for transfer relation:         2.181s
  Time for merge operator:            0.054s
  Time for stop operator:             0.095s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 201 (count: 11, min: 6, max: 40, avg: 18.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.193s
  Counterexample analysis:                             0.116s (Max:     0.020s, Calls: 11)
    Refinement sat check:                              0.071s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.004s
  ARG update:                                          0.045s

Length of refined path (in blocks):                     190 (count: 11, min: 5, max: 39, avg: 17.27)
Number of affected states:                              179 (count: 11, min: 4, max: 38, avg: 16.27)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       179 (count: 11, min: 4, max: 38, avg: 16.27)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             168 (count: 11, min: 3, max: 37, avg: 15.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 904
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 828.27
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.813s
Time for refinements:                 0.239s
Average time for refinement:          0.021s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.696
  Visited lines:          1054
  Total lines:            1078
  Line coverage:          0.978
  Visited conditions:     46
  Total conditions:       54
  Condition coverage:     0.852

CPAchecker general statistics
-----------------------------
Number of program locations:     1199
Number of CFA edges:             1229
Number of relevant variables:    164
Number of functions:             23
Number of loops:                 6
Size of reached set:             549
  Number of reached locations:   201 (17%)
    Avg states per location:     2
    Max states per location:     10 (at node N0)
  Number of reached functions:   16 (70%)
  Number of partitions:          549
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.777s
  Time for loading CPAs:          0.586s
  Time for loading parser:        0.416s
  Time for CFA construction:      1.631s
    Time for parsing file(s):     0.559s
    Time for AST to CFA:          0.532s
    Time for CFA sanity check:    0.096s
    Time for post-processing:     0.290s
      Time for var class.:        0.127s
Time for Analysis:                3.813s
CPU time for analysis:            3.810s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.594s
Total CPU time for CPAchecker:    6.590s
Time for statistics:              0.069s

Time for Garbage Collector:       0.145s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     38MB (    36 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   7993MB (  7623 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
