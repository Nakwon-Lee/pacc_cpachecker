scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--misc--vmw_balloon.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p100aj2e/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            633 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  553 (87%)
  Because of loop head:            71 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (1%)
  Times precision was empty:       224 (35%)
  Times precision was {false}:     34 (5%)
  Times result was cached:         326 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      49 (8%)
  Times result was 'false':        13 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         320
  BDD entailment checks:           130
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          2
Number of abstraction locations:          35
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         409
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.93
Number of irrelevant predicates:          112 (27%)
Number of preds handled by boolean abs:   49 (12%)
  Total number of models for allsat:      49
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.650s
  Time for path formula creation:        0.634s
Time for strengthen operator:            0.045s
Time for prec operator:                  0.478s
  Time for abstraction:                  0.421s (Max:     0.028s, Count: 633)
    Boolean abstraction:                 0.054s
    Solving time:                        0.052s (Max:     0.009s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.021s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.064s

Number of path formula cache hits:   7163 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.593s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          45 (count: 823, min: 0, max: 45, avg: 0.05)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.088s
Automaton transfers with branching:                0
Automaton transfer successors:                         8845 (count: 8845, min: 1, max: 1, avg: 1.00) [1 x 8845]

CPA algorithm statistics
------------------------
Number of iterations:            2552
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   2800
Max successors for one state:    2
Number of times merged:          95
Number of times stopped:         202
Number of times breaked:         9

Total time for CPA algorithm:         1.863s (Max:     0.548s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      0.620s
  Time for transfer relation:         1.097s
  Time for merge operator:            0.027s
  Time for stop operator:             0.020s
  Time for adding to reached set:     0.031s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 149 (count: 9, min: 5, max: 25, avg: 16.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.152s
  Counterexample analysis:                             0.105s (Max:     0.016s, Calls: 9)
    Refinement sat check:                              0.079s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.003s
  ARG update:                                          0.019s

Length of refined path (in blocks):                     140 (count: 9, min: 4, max: 24, avg: 15.56)
Number of affected states:                              131 (count: 9, min: 3, max: 23, avg: 14.56)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       131 (count: 9, min: 3, max: 23, avg: 14.56)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             122 (count: 9, min: 2, max: 22, avg: 13.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 347
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 259.44
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.037s
Time for refinements:                 0.174s
Average time for refinement:          0.019s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.395
  Visited lines:          961
  Total lines:            2327
  Line coverage:          0.413
  Visited conditions:     40
  Total conditions:       158
  Condition coverage:     0.253

CPAchecker general statistics
-----------------------------
Number of program locations:     2609
Number of CFA edges:             2704
Number of relevant variables:    678
Number of functions:             38
Number of loops:                 6
Size of reached set:             278
  Number of reached locations:   185 (7%)
    Avg states per location:     1
    Max states per location:     6 (at node N59)
  Number of reached functions:   15 (39%)
  Number of partitions:          278
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.012s
  Time for loading CPAs:          0.666s
  Time for loading parser:        0.404s
  Time for CFA construction:      1.833s
    Time for parsing file(s):     0.506s
    Time for AST to CFA:          0.548s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.501s
      Time for var class.:        0.276s
Time for Analysis:                2.046s
CPU time for analysis:            2.040s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.060s
Total CPU time for CPAchecker:    5.050s
Time for statistics:              0.071s

Time for Garbage Collector:       0.135s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7984MB (  7614 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
