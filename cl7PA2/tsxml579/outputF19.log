scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--gpio-fan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7f65yyeg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4816 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3681 (76%)
  Because of loop head:            1113 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       1110 (23%)
  Times precision was {false}:     298 (6%)
  Times result was cached:         3303 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      105 (2%)
  Times result was 'false':        21 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3502
  BDD entailment checks:           1620
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       81
Number of predicates discovered:          2
Number of abstraction locations:          59
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         3706
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.20
Number of irrelevant predicates:          1906 (51%)
Number of preds handled by boolean abs:   105 (3%)
  Total number of models for allsat:      107
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  2.767s
  Time for path formula creation:        2.710s
Time for strengthen operator:            0.096s
Time for prec operator:                  2.039s
  Time for abstraction:                  1.862s (Max:     0.026s, Count: 4816)
    Boolean abstraction:                 0.142s
    Solving time:                        0.491s (Max:     0.015s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.026s (Max:     0.008s)
Time for merge operator:                 0.154s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     0.500s

Number of path formula cache hits:   28720 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.497s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         209 (count: 4855, min: 0, max: 28, avg: 0.04)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.201s
Automaton transfers with branching:                0
Automaton transfer successors:                        63056 (count: 63056, min: 1, max: 1, avg: 1.00) [1 x 63056]

CPA algorithm statistics
------------------------
Number of iterations:            21047
Max size of waitlist:            21
Average size of waitlist:        10
Number of computed successors:   23638
Max successors for one state:    2
Number of times merged:          941
Number of times stopped:         2389
Number of times breaked:         22

Total time for CPA algorithm:         7.211s (Max:     0.907s)
  Time for choose from waitlist:      0.060s
  Time for precision adjustment:      2.423s
  Time for transfer relation:         4.081s
  Time for merge operator:            0.241s
  Time for stop operator:             0.125s
  Time for adding to reached set:     0.077s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 380 (count: 22, min: 6, max: 29, avg: 17.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.389s
  Counterexample analysis:                             0.241s (Max:     0.022s, Calls: 22)
    Refinement sat check:                              0.144s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.018s
  ARG update:                                          0.106s

Length of refined path (in blocks):                     358 (count: 22, min: 5, max: 28, avg: 16.27)
Number of affected states:                              336 (count: 22, min: 4, max: 27, avg: 15.27)
Length (states) of path with itp 'true':                  0 (count: 22, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       336 (count: 22, min: 4, max: 27, avg: 15.27)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             314 (count: 22, min: 3, max: 26, avg: 14.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 1202
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 938.59
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       7.655s
Time for refinements:                 0.444s
Average time for refinement:          0.020s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          1048
  Total lines:            1488
  Line coverage:          0.704
  Visited conditions:     90
  Total conditions:       122
  Condition coverage:     0.738

CPAchecker general statistics
-----------------------------
Number of program locations:     1726
Number of CFA edges:             1782
Number of relevant variables:    379
Number of functions:             45
Number of loops:                 8
Size of reached set:             646
  Number of reached locations:   324 (19%)
    Avg states per location:     1
    Max states per location:     7 (at node N54)
  Number of reached functions:   24 (53%)
  Number of partitions:          646
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.957s
  Time for loading CPAs:          0.657s
  Time for loading parser:        0.411s
  Time for CFA construction:      1.763s
    Time for parsing file(s):     0.546s
    Time for AST to CFA:          0.516s
    Time for CFA sanity check:    0.126s
    Time for post-processing:     0.446s
      Time for var class.:        0.207s
Time for Analysis:                7.655s
CPU time for analysis:            7.660s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.615s
Total CPU time for CPAchecker:   10.610s
Time for statistics:              0.061s

Time for Garbage Collector:       0.308s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     43MB (    41 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8065MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
