scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--gpio-fan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0xms0s7l/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6355 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4878 (77%)
  Because of loop head:            1456 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (0%)
  Times precision was empty:       3225 (51%)
  Times precision was {false}:     315 (5%)
  Times result was cached:         2711 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      104 (2%)
  Times result was 'false':        20 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4361
  BDD entailment checks:           2341
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       81
Number of predicates discovered:          2
Number of abstraction locations:          59
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         3130
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.47
Number of irrelevant predicates:          1812 (58%)
Number of preds handled by boolean abs:   104 (3%)
  Total number of models for allsat:      105
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.945s
  Time for path formula creation:        2.885s
Time for strengthen operator:            0.150s
Time for prec operator:                  1.620s
  Time for abstraction:                  1.433s (Max:     0.027s, Count: 6355)
    Boolean abstraction:                 0.130s
    Solving time:                        0.343s (Max:     0.013s)
    Model enumeration time:              0.026s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 0.188s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.369s

Number of path formula cache hits:   39110 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.742s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         193 (count: 7770, min: 0, max: 26, avg: 0.02)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.272s
Automaton transfers with branching:                0
Automaton transfer successors:                        79358 (count: 79358, min: 1, max: 1, avg: 1.00) [1 x 79358]

CPA algorithm statistics
------------------------
Number of iterations:            26341
Max size of waitlist:            37
Average size of waitlist:        13
Number of computed successors:   29379
Max successors for one state:    2
Number of times merged:          1010
Number of times stopped:         2917
Number of times breaked:         21

Total time for CPA algorithm:         7.476s (Max:     0.958s)
  Time for choose from waitlist:      0.049s
  Time for precision adjustment:      2.110s
  Time for transfer relation:         4.437s
  Time for merge operator:            0.270s
  Time for stop operator:             0.154s
  Time for adding to reached set:     0.137s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 391 (count: 21, min: 6, max: 29, avg: 18.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.380s
  Counterexample analysis:                             0.202s (Max:     0.022s, Calls: 21)
    Refinement sat check:                              0.141s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.012s
  ARG update:                                          0.119s

Length of refined path (in blocks):                     370 (count: 21, min: 5, max: 28, avg: 17.62)
Number of affected states:                              349 (count: 21, min: 4, max: 27, avg: 16.62)
Length (states) of path with itp 'true':                  0 (count: 21, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       349 (count: 21, min: 4, max: 27, avg: 16.62)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             328 (count: 21, min: 3, max: 26, avg: 15.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 1414
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1231.43
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       7.925s
Time for refinements:                 0.443s
Average time for refinement:          0.021s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          1048
  Total lines:            1488
  Line coverage:          0.704
  Visited conditions:     90
  Total conditions:       122
  Condition coverage:     0.738

CPAchecker general statistics
-----------------------------
Number of program locations:     1726
Number of CFA edges:             1782
Number of relevant variables:    379
Number of functions:             45
Number of loops:                 8
Size of reached set:             646
  Number of reached locations:   324 (19%)
    Avg states per location:     1
    Max states per location:     7 (at node N54)
  Number of reached functions:   24 (53%)
  Number of partitions:          646
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.710s
  Time for loading CPAs:          0.725s
  Time for loading parser:        0.444s
  Time for CFA construction:      1.452s
    Time for parsing file(s):     0.418s
    Time for AST to CFA:          0.421s
    Time for CFA sanity check:    0.088s
    Time for post-processing:     0.384s
      Time for var class.:        0.209s
Time for Analysis:                7.926s
CPU time for analysis:            7.920s
Time for analyzing result:        0.000s
Total time for CPAchecker:       10.644s
Total CPU time for CPAchecker:   10.640s
Time for statistics:              0.079s

Time for Garbage Collector:       0.321s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     43MB (    41 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8000MB (  7629 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
