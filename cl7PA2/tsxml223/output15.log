scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--touchscreen--eeti_ts_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dsyoog23/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_init_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            300 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  241 (80%)
  Because of loop head:            51 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (3%)
  Times precision was empty:       62 (21%)
  Times precision was {false}:     26 (9%)
  Times result was cached:         182 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      30 (10%)
  Times result was 'false':        14 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         217
  BDD entailment checks:           85
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       71
Number of predicates discovered:          2
Number of abstraction locations:          23
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         238
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.25
Number of irrelevant predicates:          84 (35%)
Number of preds handled by boolean abs:   30 (13%)
  Total number of models for allsat:      32
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.550s
  Time for path formula creation:        0.532s
Time for strengthen operator:            0.012s
Time for prec operator:                  0.212s
  Time for abstraction:                  0.192s (Max:     0.021s, Count: 300)
    Boolean abstraction:                 0.032s
    Solving time:                        0.014s (Max:     0.003s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.019s (Max:     0.009s)
Time for merge operator:                 0.010s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.015s

Number of path formula cache hits:   3009 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.511s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          53 (count: 463, min: 0, max: 53, avg: 0.11)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.082s
Automaton transfers with branching:                0
Automaton transfer successors:                         4899 (count: 4899, min: 1, max: 1, avg: 1.00) [1 x 4899]

CPA algorithm statistics
------------------------
Number of iterations:            1401
Max size of waitlist:            6
Average size of waitlist:        2
Number of computed successors:   1544
Max successors for one state:    2
Number of times merged:          66
Number of times stopped:         117
Number of times breaked:         8

Total time for CPA algorithm:         1.318s (Max:     0.392s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.327s
  Time for transfer relation:         0.877s
  Time for merge operator:            0.017s
  Time for stop operator:             0.030s
  Time for adding to reached set:     0.006s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 139 (count: 8, min: 6, max: 29, avg: 17.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.111s
  Counterexample analysis:                             0.063s (Max:     0.018s, Calls: 8)
    Refinement sat check:                              0.039s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.006s
  ARG update:                                          0.006s

Length of refined path (in blocks):                     131 (count: 8, min: 5, max: 28, avg: 16.38)
Number of affected states:                              123 (count: 8, min: 4, max: 27, avg: 15.38)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       123 (count: 8, min: 4, max: 27, avg: 15.38)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             115 (count: 8, min: 3, max: 26, avg: 14.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 212
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 160.88
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.446s
Time for refinements:                 0.127s
Average time for refinement:          0.015s
Max time for refinement:              0.027s

Code Coverage
-----------------------------
  Function coverage:      0.379
  Visited lines:          891
  Total lines:            1207
  Line coverage:          0.738
  Visited conditions:     28
  Total conditions:       50
  Condition coverage:     0.560

CPAchecker general statistics
-----------------------------
Number of program locations:     1358
Number of CFA edges:             1382
Number of relevant variables:    156
Number of functions:             29
Number of loops:                 2
Size of reached set:             151
  Number of reached locations:   120 (9%)
    Avg states per location:     1
    Max states per location:     5 (at node N420)
  Number of reached functions:   11 (38%)
  Number of partitions:          151
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.706s
  Time for loading CPAs:          0.576s
  Time for loading parser:        0.411s
  Time for CFA construction:      1.559s
    Time for parsing file(s):     0.503s
    Time for AST to CFA:          0.524s
    Time for CFA sanity check:    0.116s
    Time for post-processing:     0.301s
      Time for var class.:        0.136s
Time for Analysis:                1.446s
CPU time for analysis:            1.450s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.155s
Total CPU time for CPAchecker:    4.150s
Time for statistics:              0.048s

Time for Garbage Collector:       0.104s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     33MB (    31 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7979MB (  7610 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
