scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-ce6230.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4_lbb6q3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7062: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *fe, struct i2c_adapter *i2c, struct mxl5005s_config *config) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6939: Function pointer *__a with type struct dvb_frontend *(*)(const struct zl10353_config *config, struct i2c_adapter *i2c) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6939: Ignoring call via function pointer ce6230_zl10353_frontend_attach::__a for which no suitable target was found in line: tmp___11 = (*__a)(__cil_tmp12, __cil_tmp16); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6939: Ignoring function call through function pointer *__a: tmp___11 = (*__a)(__cil_tmp12, __cil_tmp16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7062: Ignoring call via function pointer ce6230_mxl5003s_tuner_attach::__a___0 for which no suitable target was found in line: tmp___16 = (*__a___0)(__cil_tmp24, __cil_tmp28, &ce6230_mxl5003s_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7062: Ignoring function call through function pointer *__a___0: tmp___16 = (*__a___0)(__cil_tmp24, __cil_tmp28, &ce6230_mxl5003s_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            200 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  156 (78%)
  Because of loop head:            38 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (3%)
  Times precision was empty:       82 (41%)
  Times precision was {false}:     18 (9%)
  Times result was cached:         84 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (8%)
  Times result was 'false':        11 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         435
  BDD entailment checks:           61
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          2
Number of abstraction locations:          13
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         118
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.47
Number of irrelevant predicates:          50 (42%)
Number of preds handled by boolean abs:   16 (14%)
  Total number of models for allsat:      16
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.647s
  Time for path formula creation:        0.616s
Time for strengthen operator:            0.036s
Time for prec operator:                  0.181s
  Time for abstraction:                  0.172s (Max:     0.022s, Count: 200)
    Boolean abstraction:                 0.043s
    Solving time:                        0.065s (Max:     0.021s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.020s (Max:     0.009s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.067s

Number of path formula cache hits:   2398 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.589s

Total number of created targets for pointer analysis: 5
   Number of created targets for uf: *(struct_dvb_usb_device)* is 6


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          23 (count: 334, min: 0, max: 23, avg: 0.07)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.111s
Automaton transfers with branching:                0
Automaton transfer successors:                         4924 (count: 4924, min: 1, max: 1, avg: 1.00) [1 x 4924]

CPA algorithm statistics
------------------------
Number of iterations:            1782
Max size of waitlist:            11
Average size of waitlist:        6
Number of computed successors:   2053
Max successors for one state:    2
Number of times merged:          187
Number of times stopped:         229
Number of times breaked:         6

Total time for CPA algorithm:         1.456s (Max:     0.665s)
  Time for choose from waitlist:      0.004s
  Time for precision adjustment:      0.285s
  Time for transfer relation:         1.016s
  Time for merge operator:            0.058s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  38 (count: 6, min: 4, max: 7, avg: 6.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.082s
  Counterexample analysis:                             0.053s (Max:     0.015s, Calls: 6)
    Refinement sat check:                              0.020s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.000s
  ARG update:                                          0.018s

Length of refined path (in blocks):                      32 (count: 6, min: 3, max: 6, avg: 5.33)
Number of affected states:                               26 (count: 6, min: 2, max: 5, avg: 4.33)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        26 (count: 6, min: 2, max: 5, avg: 4.33)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              20 (count: 6, min: 1, max: 4, avg: 3.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 334
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 275.33
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.552s
Time for refinements:                 0.096s
Average time for refinement:          0.016s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.280
  Visited lines:          1216
  Total lines:            1827
  Line coverage:          0.666
  Visited conditions:     50
  Total conditions:       126
  Condition coverage:     0.397

CPAchecker general statistics
-----------------------------
Number of program locations:     2030
Number of CFA edges:             2093
Number of relevant variables:    286
Number of functions:             25
Number of loops:                 3
Size of reached set:             180
  Number of reached locations:   162 (8%)
    Avg states per location:     1
    Max states per location:     6 (at node N1000)
  Number of reached functions:   7 (28%)
  Number of partitions:          180
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.670s
  Time for loading CPAs:          0.695s
  Time for loading parser:        0.546s
  Time for CFA construction:      2.317s
    Time for parsing file(s):     0.691s
    Time for AST to CFA:          0.730s
    Time for CFA sanity check:    0.131s
    Time for post-processing:     0.575s
      Time for var class.:        0.231s
Time for Analysis:                1.552s
CPU time for analysis:            1.550s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.225s
Total CPU time for CPAchecker:    5.210s
Time for statistics:              0.061s

Time for Garbage Collector:       0.154s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8032MB (  7660 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
