scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--input--misc--mpu3050.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0jgg_9p2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_runtime_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_runtime_set_autosuspend_delay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pm_runtime_set_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            443 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  404 (91%)
  Because of loop head:            33 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (1%)
  Times precision was empty:       130 (29%)
  Times precision was {false}:     32 (7%)
  Times result was cached:         240 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      41 (9%)
  Times result was 'false':        10 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         176
  BDD entailment checks:           54
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          2
Number of abstraction locations:          42
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         313
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.29
Number of irrelevant predicates:          94 (30%)
Number of preds handled by boolean abs:   41 (13%)
  Total number of models for allsat:      41
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.650s
  Time for path formula creation:        0.631s
Time for strengthen operator:            0.043s
Time for prec operator:                  0.337s
  Time for abstraction:                  0.301s (Max:     0.020s, Count: 443)
    Boolean abstraction:                 0.064s
    Solving time:                        0.061s (Max:     0.014s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.031s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.061s

Number of path formula cache hits:   4039 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.590s

Total number of created targets for pointer analysis: 132
   Number of created targets for uf: *unsigned_short_int is 22
   Number of created targets for uf: *char is 7


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          67 (count: 595, min: 0, max: 67, avg: 0.11)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.145s
Automaton transfers with branching:                0
Automaton transfer successors:                         7106 (count: 7106, min: 1, max: 1, avg: 1.00) [1 x 7106]

CPA algorithm statistics
------------------------
Number of iterations:            1619
Max size of waitlist:            8
Average size of waitlist:        3
Number of computed successors:   1750
Max successors for one state:    2
Number of times merged:          61
Number of times stopped:         102
Number of times breaked:         6

Total time for CPA algorithm:         1.689s (Max:     0.541s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.429s
  Time for transfer relation:         1.087s
  Time for merge operator:            0.057s
  Time for stop operator:             0.029s
  Time for adding to reached set:     0.029s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 119 (count: 6, min: 4, max: 28, avg: 19.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.123s
  Counterexample analysis:                             0.070s (Max:     0.020s, Calls: 6)
    Refinement sat check:                              0.044s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.002s
  ARG update:                                          0.011s

Length of refined path (in blocks):                     113 (count: 6, min: 3, max: 27, avg: 18.83)
Number of affected states:                              107 (count: 6, min: 2, max: 26, avg: 17.83)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       107 (count: 6, min: 2, max: 26, avg: 17.83)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             101 (count: 6, min: 1, max: 25, avg: 16.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 316
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 238.33
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.831s
Time for refinements:                 0.141s
Average time for refinement:          0.023s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.475
  Visited lines:          1167
  Total lines:            1379
  Line coverage:          0.846
  Visited conditions:     40
  Total conditions:       62
  Condition coverage:     0.645

CPAchecker general statistics
-----------------------------
Number of program locations:     1576
Number of CFA edges:             1609
Number of relevant variables:    186
Number of functions:             40
Number of loops:                 1
Size of reached set:             227
  Number of reached locations:   189 (12%)
    Avg states per location:     1
    Max states per location:     4 (at node N531)
  Number of reached functions:   19 (48%)
  Number of partitions:          227
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.090s
  Time for loading CPAs:          0.630s
  Time for loading parser:        0.452s
  Time for CFA construction:      1.908s
    Time for parsing file(s):     0.620s
    Time for AST to CFA:          0.637s
    Time for CFA sanity check:    0.095s
    Time for post-processing:     0.389s
      Time for var class.:        0.191s
Time for Analysis:                1.831s
CPU time for analysis:            1.830s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.927s
Total CPU time for CPAchecker:    4.920s
Time for statistics:              0.067s

Time for Garbage Collector:       0.127s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     33MB (    32 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8037MB (  7665 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
