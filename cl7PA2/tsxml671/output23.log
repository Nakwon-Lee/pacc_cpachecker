scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hvgvjlfq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3452: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3455: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3461: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3464: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3903: Function pointer *__cil_tmp20 with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3968: Function pointer *__cil_tmp20 with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4031: Function pointer *__cil_tmp20 with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_schedule_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_get_divisor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_write_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4031: Ignoring call via function pointer dma_sync_single_for_device::__cil_tmp20 for which no suitable target was found in line: (*__cil_tmp20)(dev, addr, size, dir); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4031: Ignoring function call through function pointer *__cil_tmp20: (*__cil_tmp20)(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_resume_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_suspend_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_add_one_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_update_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_handle_dcd_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_handle_cts_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3968: Ignoring call via function pointer dma_sync_single_for_cpu::__cil_tmp20 for which no suitable target was found in line: (*__cil_tmp20)(dev, addr, size, dir); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3968: Ignoring function call through function pointer *__cil_tmp20: (*__cil_tmp20)(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_insert_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_SAK to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_runtime_allow to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3903: Ignoring call via function pointer dma_map_single_attrs::__cil_tmp20 for which no suitable target was found in line: addr = (*__cil_tmp20)(dev, __cil_tmp23, __cil_tmp25, size, dir, attrs); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3903: Ignoring function call through function pointer *__cil_tmp20: addr = (*__cil_tmp20)(dev, __cil_tmp23, __cil_tmp25, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            48664 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  45699 (94%)
  Because of loop head:            2868 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         97 (0%)
  Times precision was empty:       31738 (65%)
  Times precision was {false}:     563 (1%)
  Times result was cached:         16066 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      297 (1%)
  Times result was 'false':        174 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         28909
  BDD entailment checks:           9131
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       234
Number of predicates discovered:          2
Number of abstraction locations:          185
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         16926
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 19.68
Number of irrelevant predicates:          11160 (66%)
Number of preds handled by boolean abs:   297 (2%)
  Total number of models for allsat:      301
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  5.820s
  Time for path formula creation:        5.466s
Time for strengthen operator:            0.524s
Time for prec operator:                  3.754s
  Time for abstraction:                  3.181s (Max:     0.042s, Count: 48664)
    Boolean abstraction:                 0.255s
    Solving time:                        0.487s (Max:     0.013s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.046s (Max:     0.018s)
Time for merge operator:                 0.377s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):     0.515s

Number of path formula cache hits:   523513 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.666s

Total number of created targets for pointer analysis: 40
   Number of created targets for uf: *(struct_uart_hsu_port)* is 4
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         555 (count: 45473, min: 0, max: 116, avg: 0.01)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.188s
  Time for transition matches:                         0.607s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                       617672 (count: 617672, min: 1, max: 1, avg: 1.00) [1 x 617672]

CPA algorithm statistics
------------------------
Number of iterations:            183435
Max size of waitlist:            60
Average size of waitlist:        33
Number of computed successors:   202837
Max successors for one state:    2
Number of times merged:          9889
Number of times stopped:         17423
Number of times breaked:         97

Total time for CPA algorithm:        18.769s (Max:     0.995s)
  Time for choose from waitlist:      0.099s
  Time for precision adjustment:      5.205s
  Time for transfer relation:        11.392s
  Time for merge operator:            0.599s
  Time for stop operator:             0.350s
  Time for adding to reached set:     0.280s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   97
Avg. length of target path (in blocks):                4312 (count: 97, min: 6, max: 123, avg: 44.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.063s
  Counterexample analysis:                             1.318s (Max:     0.038s, Calls: 97)
    Refinement sat check:                              0.865s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.079s
  Precision update:                                    0.099s
  ARG update:                                          0.500s

Length of refined path (in blocks):                    4215 (count: 97, min: 5, max: 122, avg: 43.45)
Number of affected states:                             1308 (count: 97, min: 4, max: 63, avg: 13.48)
Length (states) of path with itp 'true':               2810 (count: 97, min: 0, max: 58, avg: 28.97)
Length (states) of path with itp non-trivial itp:      1308 (count: 97, min: 4, max: 63, avg: 13.48)
Length (states) of path with itp 'false':                97 (count: 97, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 97, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1211 (count: 97, min: 3, max: 62, avg: 12.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                97
Number of successful refinements:     97
Number of failed refinements:         0
Max. size of reached set before ref.: 4551
Max. size of reached set after ref.:  3827
Avg. size of reached set before ref.: 3595.43
Avg. size of reached set after ref.:  1720.81

Total time for CEGAR algorithm:      21.471s
Time for refinements:                 2.537s
Average time for refinement:          0.026s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.899
  Visited lines:          5106
  Total lines:            5190
  Line coverage:          0.984
  Visited conditions:     356
  Total conditions:       368
  Condition coverage:     0.967

CPAchecker general statistics
-----------------------------
Number of program locations:     5693
Number of CFA edges:             5998
Number of relevant variables:    1390
Number of functions:             79
Number of loops:                 12
Size of reached set:             3403
  Number of reached locations:   1296 (23%)
    Avg states per location:     2
    Max states per location:     64 (at node N531)
  Number of reached functions:   71 (90%)
  Number of partitions:          3403
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.912s
  Time for loading CPAs:          0.715s
  Time for loading parser:        0.477s
  Time for CFA construction:      2.625s
    Time for parsing file(s):     0.694s
    Time for AST to CFA:          0.864s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.693s
      Time for var class.:        0.358s
Time for Analysis:               21.471s
CPU time for analysis:           21.470s
Time for analyzing result:        0.003s
Total time for CPAchecker:       25.386s
Total CPU time for CPAchecker:   25.370s
Time for statistics:              0.104s

Time for Garbage Collector:       1.699s (in 102 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                140MB (   134 MiB) max;     67MB (    64 MiB) avg;    149MB (   142 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           200MB (   191 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
