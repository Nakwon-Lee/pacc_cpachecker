scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_55xul5nn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3452: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3455: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3461: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3464: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3903: Function pointer *__cil_tmp20 with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3968: Function pointer *__cil_tmp20 with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4031: Function pointer *__cil_tmp20 with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_get_divisor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_resume_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_suspend_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_schedule_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_add_one_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3968: Ignoring call via function pointer dma_sync_single_for_cpu::__cil_tmp20 for which no suitable target was found in line: (*__cil_tmp20)(dev, addr, size, dir); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3968: Ignoring function call through function pointer *__cil_tmp20: (*__cil_tmp20)(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_write_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4031: Ignoring call via function pointer dma_sync_single_for_device::__cil_tmp20 for which no suitable target was found in line: (*__cil_tmp20)(dev, addr, size, dir); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4031: Ignoring function call through function pointer *__cil_tmp20: (*__cil_tmp20)(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_update_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_handle_dcd_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_handle_cts_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_insert_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_SAK to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_runtime_allow to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            69075 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  63327 (92%)
  Because of loop head:            5600 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         148 (0%)
  Times precision was empty:       35735 (52%)
  Times precision was {false}:     480 (1%)
  Times result was cached:         32650 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      210 (0%)
  Times result was 'false':        115 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         53859
  BDD entailment checks:           13755
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       234
Number of predicates discovered:          2
Number of abstraction locations:          127
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         33340
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 48.32
Number of irrelevant predicates:          24993 (75%)
Number of preds handled by boolean abs:   210 (1%)
  Total number of models for allsat:      213
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  7.623s
  Time for path formula creation:        7.273s
Time for strengthen operator:            0.710s
Time for prec operator:                  4.147s
  Time for abstraction:                  3.491s (Max:     0.024s, Count: 69075)
    Boolean abstraction:                 0.156s
    Solving time:                        0.367s (Max:     0.013s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.034s (Max:     0.008s)
Time for merge operator:                 0.404s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.385s

Number of path formula cache hits:   888534 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.076s

Total number of created targets for pointer analysis: 59
   Number of created targets for uf: *(struct_uart_hsu_port)* is 4
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         423 (count: 53156, min: 0, max: 112, avg: 0.01)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.401s
  Time for transition matches:                         0.816s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      1008879 (count: 1008879, min: 1, max: 1, avg: 1.00) [1 x 1008879]

CPA algorithm statistics
------------------------
Number of iterations:            283832
Max size of waitlist:            104
Average size of waitlist:        60
Number of computed successors:   319241
Max successors for one state:    2
Number of times merged:          20052
Number of times stopped:         29504
Number of times breaked:         148

Total time for CPA algorithm:        23.615s (Max:     1.042s)
  Time for choose from waitlist:      0.140s
  Time for precision adjustment:      5.808s
  Time for transfer relation:        15.206s
  Time for merge operator:            0.741s
  Time for stop operator:             0.378s
  Time for adding to reached set:     0.440s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   148
Avg. length of target path (in blocks):                4563 (count: 148, min: 6, max: 61, avg: 30.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.260s
  Counterexample analysis:                             1.525s (Max:     0.035s, Calls: 148)
    Refinement sat check:                              1.001s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.071s
  ARG update:                                          0.530s

Length of refined path (in blocks):                    4415 (count: 148, min: 5, max: 60, avg: 29.83)
Number of affected states:                             1939 (count: 148, min: 4, max: 59, avg: 13.10)
Length (states) of path with itp 'true':               2328 (count: 148, min: 0, max: 34, avg: 15.73)
Length (states) of path with itp non-trivial itp:      1939 (count: 148, min: 4, max: 59, avg: 13.10)
Length (states) of path with itp 'false':               148 (count: 148, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 148, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1791 (count: 148, min: 3, max: 58, avg: 12.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                148
Number of successful refinements:     148
Number of failed refinements:         0
Max. size of reached set before ref.: 4176
Max. size of reached set after ref.:  2996
Avg. size of reached set before ref.: 2860.91
Avg. size of reached set after ref.:  914.81

Total time for CEGAR algorithm:      26.413s
Time for refinements:                 2.678s
Average time for refinement:          0.018s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.759
  Visited lines:          3570
  Total lines:            5190
  Line coverage:          0.688
  Visited conditions:     250
  Total conditions:       368
  Condition coverage:     0.679

CPAchecker general statistics
-----------------------------
Number of program locations:     5693
Number of CFA edges:             5998
Number of relevant variables:    1390
Number of functions:             79
Number of loops:                 12
Size of reached set:             1601
  Number of reached locations:   783 (14%)
    Avg states per location:     2
    Max states per location:     35 (at node N156)
  Number of reached functions:   60 (76%)
  Number of partitions:          1597
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4908 (before line 9148), Function hsu_pci_init called from node N4969, stack depth 2 [4ff5075b], stack [main, hsu_pci_init]])
  Number of target states:       0
  Size of final wait list        70

Time for analysis setup:          3.946s
  Time for loading CPAs:          0.635s
  Time for loading parser:        0.473s
  Time for CFA construction:      2.745s
    Time for parsing file(s):     0.692s
    Time for AST to CFA:          0.843s
    Time for CFA sanity check:    0.334s
    Time for post-processing:     0.764s
      Time for var class.:        0.357s
Time for Analysis:               26.413s
CPU time for analysis:           26.420s
Total time for CPAchecker:       30.363s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.101s

Time for Garbage Collector:       1.964s (in 132 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                160MB (   152 MiB) max;     84MB (    80 MiB) avg;    168MB (   160 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           191MB (   182 MiB) max;    146MB (   140 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
