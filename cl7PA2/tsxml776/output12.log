scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--staging--zram--zram.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_marazp4v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3263: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3266: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3269: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3275: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_rwsem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_alloc_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_make_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function zs_destroy_pool to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_physical_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_logical_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_io_min to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_io_opt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __free_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function zs_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1950 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1647 (84%)
  Because of loop head:            281 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (1%)
  Times precision was empty:       588 (30%)
  Times precision was {false}:     102 (5%)
  Times result was cached:         1141 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      119 (6%)
  Times result was 'false':        40 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1028
  BDD entailment checks:           506
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Number of predicates discovered:          3
Number of abstraction locations:          61
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1592
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 7.20
Number of irrelevant predicates:          532 (33%)
Number of preds handled by boolean abs:   142 (9%)
  Total number of models for allsat:      122
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.022s
  Time for path formula creation:        0.988s
Time for strengthen operator:            0.055s
Time for prec operator:                  1.038s
  Time for abstraction:                  0.921s (Max:     0.018s, Count: 1950)
    Boolean abstraction:                 0.164s
    Solving time:                        0.149s (Max:     0.013s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.030s (Max:     0.010s)
Time for merge operator:                 0.032s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.154s

Number of path formula cache hits:   26333 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.843s

Total number of created targets for pointer analysis: 7
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         253 (count: 2330, min: 0, max: 77, avg: 0.11)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.152s
Automaton transfers with branching:                0
Automaton transfer successors:                        31794 (count: 31794, min: 1, max: 1, avg: 1.00) [1 x 31794]

CPA algorithm statistics
------------------------
Number of iterations:            8090
Max size of waitlist:            12
Average size of waitlist:        5
Number of computed successors:   8785
Max successors for one state:    2
Number of times merged:          261
Number of times stopped:         556
Number of times breaked:         22

Total time for CPA algorithm:         3.330s (Max:     0.340s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      1.233s
  Time for transfer relation:         1.763s
  Time for merge operator:            0.059s
  Time for stop operator:             0.074s
  Time for adding to reached set:     0.039s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 457 (count: 22, min: 5, max: 42, avg: 20.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.313s
  Counterexample analysis:                             0.239s (Max:     0.028s, Calls: 22)
    Refinement sat check:                              0.154s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.018s
  ARG update:                                          0.020s

Length of refined path (in blocks):                     400 (count: 22, min: 4, max: 41, avg: 18.18)
Number of affected states:                              343 (count: 22, min: 3, max: 40, avg: 15.59)
Length (states) of path with itp 'true':                 35 (count: 22, min: 0, max: 5, avg: 1.59)
Length (states) of path with itp non-trivial itp:       343 (count: 22, min: 3, max: 40, avg: 15.59)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             321 (count: 22, min: 2, max: 39, avg: 14.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 694
Max. size of reached set after ref.:  434
Avg. size of reached set before ref.: 450.73
Avg. size of reached set after ref.:  103.23

Total time for CEGAR algorithm:       3.701s
Time for refinements:                 0.360s
Average time for refinement:          0.016s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.311
  Visited lines:          1592
  Total lines:            3665
  Line coverage:          0.434
  Visited conditions:     56
  Total conditions:       218
  Condition coverage:     0.257

CPAchecker general statistics
-----------------------------
Number of program locations:     4140
Number of CFA edges:             4328
Number of relevant variables:    937
Number of functions:             74
Number of loops:                 9
Size of reached set:             545
  Number of reached locations:   290 (7%)
    Avg states per location:     1
    Max states per location:     8 (at node N2844)
  Number of reached functions:   23 (31%)
  Number of partitions:          539
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2912 (before lines 6788-6810), Function zram_init called from node N3040, stack depth 2 [1218e12], stack [main, zram_init]])
  Number of target states:       0

Time for analysis setup:          3.775s
  Time for loading CPAs:          0.679s
  Time for loading parser:        0.495s
  Time for CFA construction:      2.497s
    Time for parsing file(s):     0.700s
    Time for AST to CFA:          0.783s
    Time for CFA sanity check:    0.216s
    Time for post-processing:     0.635s
      Time for var class.:        0.319s
Time for Analysis:                3.701s
CPU time for analysis:            3.700s
Time for analyzing result:        0.009s
Total time for CPAchecker:        7.478s
Total CPU time for CPAchecker:    7.460s
Time for statistics:              0.072s

Time for Garbage Collector:       0.206s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     39MB (    37 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
