scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hid--hid-tivo.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wlxucm_7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            717 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  669 (93%)
  Because of loop head:            40 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (1%)
  Times precision was empty:       206 (29%)
  Times precision was {false}:     27 (4%)
  Times result was cached:         466 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (3%)
  Times result was 'false':        9 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         961
  BDD entailment checks:           129
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          2
Number of abstraction locations:          20
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         511
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 11.36
Number of irrelevant predicates:          204 (40%)
Number of preds handled by boolean abs:   18 (4%)
  Total number of models for allsat:      18
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.953s
  Time for path formula creation:        0.937s
Time for strengthen operator:            0.030s
Time for prec operator:                  0.389s
  Time for abstraction:                  0.334s (Max:     0.017s, Count: 717)
    Boolean abstraction:                 0.035s
    Solving time:                        0.043s (Max:     0.010s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.111s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.044s

Number of path formula cache hits:   8263 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.856s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          39 (count: 583, min: 0, max: 21, avg: 0.07)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.058s
Automaton transfers with branching:                0
Automaton transfer successors:                        12000 (count: 12000, min: 1, max: 1, avg: 1.00) [1 x 12000]

CPA algorithm statistics
------------------------
Number of iterations:            4302
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   4864
Max successors for one state:    2
Number of times merged:          416
Number of times stopped:         497
Number of times breaked:         8

Total time for CPA algorithm:         2.225s (Max:     0.651s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      0.543s
  Time for transfer relation:         1.346s
  Time for merge operator:            0.144s
  Time for stop operator:             0.045s
  Time for adding to reached set:     0.020s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 121 (count: 8, min: 8, max: 17, avg: 15.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.150s
  Counterexample analysis:                             0.067s (Max:     0.014s, Calls: 8)
    Refinement sat check:                              0.050s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.008s
  ARG update:                                          0.033s

Length of refined path (in blocks):                     113 (count: 8, min: 7, max: 16, avg: 14.13)
Number of affected states:                              105 (count: 8, min: 6, max: 15, avg: 13.13)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       105 (count: 8, min: 6, max: 15, avg: 13.13)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              97 (count: 8, min: 5, max: 14, avg: 12.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 546
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 508.75
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.402s
Time for refinements:                 0.173s
Average time for refinement:          0.021s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          547
  Total lines:            595
  Line coverage:          0.919
  Visited conditions:     32
  Total conditions:       52
  Condition coverage:     0.615

CPAchecker general statistics
-----------------------------
Number of program locations:     683
Number of CFA edges:             712
Number of relevant variables:    76
Number of functions:             18
Number of loops:                 1
Size of reached set:             313
  Number of reached locations:   125 (18%)
    Avg states per location:     2
    Max states per location:     7 (at node N111)
  Number of reached functions:   8 (44%)
  Number of partitions:          313
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.585s
  Time for loading CPAs:          0.612s
  Time for loading parser:        0.425s
  Time for CFA construction:      1.428s
    Time for parsing file(s):     0.507s
    Time for AST to CFA:          0.415s
    Time for CFA sanity check:    0.066s
    Time for post-processing:     0.311s
      Time for var class.:        0.132s
Time for Analysis:                2.402s
CPU time for analysis:            2.410s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.990s
Total CPU time for CPAchecker:    4.990s
Time for statistics:              0.052s

Time for Garbage Collector:       0.110s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    32 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     28MB (    26 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7986MB (  7616 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
