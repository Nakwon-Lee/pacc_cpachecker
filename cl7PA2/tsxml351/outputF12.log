scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--media--dvb--dvb-usb--dvb-usb-az6007.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sdgzroag/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7978: Function pointer *__a with type struct dvb_frontend *(*)(const struct drxk_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8235: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, struct mt2063_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_ca_en50221_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7978: Ignoring call via function pointer az6007_frontend_attach::__a for which no suitable target was found in line: tmp___4 = (*__a)(__cil_tmp25, __cil_tmp29); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7978: Ignoring function call through function pointer *__a: tmp___4 = (*__a)(__cil_tmp25, __cil_tmp29); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_ca_en50221_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8185: Ignoring call via function pointer az6007_tuner_attach::__cil_tmp32 for which no suitable target was found in line: (*__cil_tmp32)(__cil_tmp37, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8185: Ignoring function call through function pointer *__cil_tmp32: (*__cil_tmp32)(__cil_tmp37, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8235: Ignoring call via function pointer az6007_tuner_attach::__a for which no suitable target was found in line: tmp___4 = (*__a)(__cil_tmp50, &az6007_mt2063_config, __cil_tmp54); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8235: Ignoring function call through function pointer *__a: tmp___4 = (*__a)(__cil_tmp50, &az6007_mt2063_config, __cil_tmp54); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8295: Ignoring call via function pointer az6007_tuner_attach::__cil_tmp81 for which no suitable target was found in line: (*__cil_tmp81)(__cil_tmp86, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8295: Ignoring function call through function pointer *__cil_tmp81: (*__cil_tmp81)(__cil_tmp86, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6054: Ignoring call via function pointer drxk_gate_ctrl::__cil_tmp27 for which no suitable target was found in line: status = (*__cil_tmp27)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6054: Unsupported feature (recursion): status = drxk_gate_ctrl(fe, 0); (line was originally pointer call(drxk_gate_ctrl) status = (*__cil_tmp27)(fe, 0);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2971 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2454 (83%)
  Because of loop head:            495 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (1%)
  Times precision was empty:       632 (21%)
  Times precision was {false}:     118 (4%)
  Times result was cached:         2096 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      125 (4%)
  Times result was 'false':        22 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3166
  BDD entailment checks:           938
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       180
Number of predicates discovered:          2
Number of abstraction locations:          53
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2339
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.63
Number of irrelevant predicates:          714 (31%)
Number of preds handled by boolean abs:   125 (5%)
  Total number of models for allsat:      127
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.422s
  Time for path formula creation:        1.398s
Time for strengthen operator:            0.060s
Time for prec operator:                  1.171s
  Time for abstraction:                  1.049s (Max:     0.020s, Count: 2971)
    Boolean abstraction:                 0.166s
    Solving time:                        0.233s (Max:     0.013s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.017s (Max:     0.007s)
Time for merge operator:                 0.143s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.243s

Number of path formula cache hits:   28239 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.335s

Total number of created targets for pointer analysis: 4
   Number of created targets for uf: *signed_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         247 (count: 2915, min: 0, max: 62, avg: 0.08)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.172s
Automaton transfers with branching:                0
Automaton transfer successors:                        37423 (count: 37423, min: 1, max: 1, avg: 1.00) [1 x 37423]

CPA algorithm statistics
------------------------
Number of iterations:            14118
Max size of waitlist:            24
Average size of waitlist:        10
Number of computed successors:   16248
Max successors for one state:    2
Number of times merged:          1114
Number of times stopped:         1794
Number of times breaked:         22

Total time for CPA algorithm:         4.472s (Max:     0.647s)
  Time for choose from waitlist:      0.035s
  Time for precision adjustment:      1.483s
  Time for transfer relation:         2.353s
  Time for merge operator:            0.238s
  Time for stop operator:             0.102s
  Time for adding to reached set:     0.059s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 379 (count: 22, min: 8, max: 32, avg: 17.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.347s
  Counterexample analysis:                             0.229s (Max:     0.016s, Calls: 22)
    Refinement sat check:                              0.159s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.024s
  ARG update:                                          0.068s

Length of refined path (in blocks):                     357 (count: 22, min: 7, max: 31, avg: 16.23)
Number of affected states:                              335 (count: 22, min: 6, max: 30, avg: 15.23)
Length (states) of path with itp 'true':                  0 (count: 22, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       335 (count: 22, min: 6, max: 30, avg: 15.23)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             313 (count: 22, min: 5, max: 29, avg: 14.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 1126
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 605.82
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.869s
Time for refinements:                 0.397s
Average time for refinement:          0.018s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.479
  Visited lines:          2086
  Total lines:            3735
  Line coverage:          0.559
  Visited conditions:     152
  Total conditions:       272
  Condition coverage:     0.559

CPAchecker general statistics
-----------------------------
Number of program locations:     4104
Number of CFA edges:             4260
Number of relevant variables:    994
Number of functions:             48
Number of loops:                 8
Size of reached set:             1171
  Number of reached locations:   435 (11%)
    Avg states per location:     2
    Max states per location:     26 (at node N257)
  Number of reached functions:   23 (48%)
  Number of partitions:          1166
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3138 (before line 9982), Function main called from node N3013, stack depth 1 [57a2ed35], stack [main]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          3.921s
  Time for loading CPAs:          0.660s
  Time for loading parser:        0.518s
  Time for CFA construction:      2.640s
    Time for parsing file(s):     0.702s
    Time for AST to CFA:          0.890s
    Time for CFA sanity check:    0.224s
    Time for post-processing:     0.698s
      Time for var class.:        0.305s
Time for Analysis:                4.869s
CPU time for analysis:            4.860s
Total time for CPAchecker:        8.792s
Total CPU time for CPAchecker:    8.770s
Time for statistics:              0.081s

Time for Garbage Collector:       0.241s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     44MB (    42 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8055MB (  7682 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
