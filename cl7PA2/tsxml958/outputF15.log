scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_la9yvksi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_update_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_add_one_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_write_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_insert_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_SAK to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10924 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9353 (86%)
  Because of loop head:            1534 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (0%)
  Times precision was empty:       1823 (17%)
  Times precision was {false}:     202 (2%)
  Times result was cached:         8788 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      111 (1%)
  Times result was 'false':        51 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         5267
  BDD entailment checks:           2843
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       101
Number of predicates discovered:          2
Number of abstraction locations:          118
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         9101
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 29.08
Number of irrelevant predicates:          4541 (50%)
Number of preds handled by boolean abs:   111 (1%)
  Total number of models for allsat:      111
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.418s
  Time for path formula creation:        2.363s
Time for strengthen operator:            0.142s
Time for prec operator:                  2.218s
  Time for abstraction:                  1.972s (Max:     0.020s, Count: 10924)
    Boolean abstraction:                 0.170s
    Solving time:                        0.270s (Max:     0.014s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.023s (Max:     0.007s)
Time for merge operator:                 0.078s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.274s

Number of path formula cache hits:   61276 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.202s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         215 (count: 6347, min: 0, max: 20, avg: 0.03)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.301s
Automaton transfers with branching:                0
Automaton transfer successors:                       104865 (count: 104865, min: 1, max: 1, avg: 1.00) [1 x 104865]

CPA algorithm statistics
------------------------
Number of iterations:            38732
Max size of waitlist:            45
Average size of waitlist:        16
Number of computed successors:   41969
Max successors for one state:    2
Number of times merged:          1212
Number of times stopped:         2831
Number of times breaked:         37

Total time for CPA algorithm:         7.720s (Max:     0.494s)
  Time for choose from waitlist:      0.077s
  Time for precision adjustment:      2.708s
  Time for transfer relation:         4.094s
  Time for merge operator:            0.149s
  Time for stop operator:             0.162s
  Time for adding to reached set:     0.095s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                 708 (count: 37, min: 5, max: 42, avg: 19.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.500s
  Counterexample analysis:                             0.289s (Max:     0.020s, Calls: 37)
    Refinement sat check:                              0.209s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.024s
  ARG update:                                          0.131s

Length of refined path (in blocks):                     671 (count: 37, min: 4, max: 41, avg: 18.14)
Number of affected states:                              634 (count: 37, min: 3, max: 40, avg: 17.14)
Length (states) of path with itp 'true':                  0 (count: 37, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       634 (count: 37, min: 3, max: 40, avg: 17.14)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 37, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             597 (count: 37, min: 2, max: 39, avg: 16.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 1547
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1033.46
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.307s
Time for refinements:                 0.566s
Average time for refinement:          0.015s
Max time for refinement:              0.032s

Code Coverage
-----------------------------
  Function coverage:      0.778
  Visited lines:          1966
  Total lines:            2080
  Line coverage:          0.945
  Visited conditions:     150
  Total conditions:       172
  Condition coverage:     0.872

CPAchecker general statistics
-----------------------------
Number of program locations:     2392
Number of CFA edges:             2505
Number of relevant variables:    427
Number of functions:             54
Number of loops:                 6
Size of reached set:             961
  Number of reached locations:   586 (24%)
    Avg states per location:     1
    Max states per location:     21 (at node N1667)
  Number of reached functions:   42 (78%)
  Number of partitions:          961
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.926s
  Time for loading CPAs:          0.705s
  Time for loading parser:        0.410s
  Time for CFA construction:      1.745s
    Time for parsing file(s):     0.528s
    Time for AST to CFA:          0.549s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.412s
      Time for var class.:        0.198s
Time for Analysis:                8.307s
CPU time for analysis:            8.310s
Time for analyzing result:        0.001s
Total time for CPAchecker:       11.235s
Total CPU time for CPAchecker:   11.230s
Time for statistics:              0.062s

Time for Garbage Collector:       0.329s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     45MB (    43 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8003MB (  7632 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
