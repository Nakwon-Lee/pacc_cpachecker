scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--nftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xz_9v_uk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3466: Function pointer *__cil_tmp18 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3528: Function pointer *__cil_tmp22 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3466: Ignoring call via function pointer mtd_read_oob::__cil_tmp18 for which no suitable target was found in line: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3466: Ignoring function call through function pointer *__cil_tmp18: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3528: Ignoring call via function pointer mtd_write_oob::__cil_tmp22 for which no suitable target was found in line: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3528: Ignoring function call through function pointer *__cil_tmp22: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9791 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7273 (74%)
  Because of loop head:            2493 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       3726 (38%)
  Times precision was {false}:     1786 (18%)
  Times result was cached:         3942 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      337 (3%)
  Times result was 'false':        132 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         12077
  BDD entailment checks:           3481
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       251
Number of predicates discovered:          4
Number of abstraction locations:          80
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         7702
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 3.63
Number of irrelevant predicates:          5363 (70%)
Number of preds handled by boolean abs:   364 (5%)
  Total number of models for allsat:      345
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 10.838s
  Time for path formula creation:       10.715s
Time for strengthen operator:            0.330s
Time for prec operator:                  8.247s
  Time for abstraction:                  7.913s (Max:     0.328s, Count: 9791)
    Boolean abstraction:                 0.714s
    Solving time:                        3.833s (Max:     0.043s)
    Model enumeration time:              0.054s
    Time for BDD construction:           0.046s (Max:     0.009s)
Time for merge operator:                 0.728s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     3.887s

Number of path formula cache hits:   69331 (29%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.150s

Total number of created targets for pointer analysis: 14196
   Number of created targets for uf: *unsigned_char is 201
   Number of created targets for uf: *(unsigned_char)* is 242
   Number of created targets for uf: *unsigned_long_int is 17


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         673 (count: 18204, min: 0, max: 101, avg: 0.04)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.484s
Automaton transfers with branching:                0
Automaton transfer successors:                       235319 (count: 235363, min: 0, max: 1, avg: 1.00) [0 x 44, 1 x 235319]

CPA algorithm statistics
------------------------
Number of iterations:            48452
Max size of waitlist:            54
Average size of waitlist:        22
Number of computed successors:   55888
Max successors for one state:    2
Number of times merged:          4298
Number of times stopped:         6883
Number of times breaked:         25

Total time for CPA algorithm:        24.338s (Max:     2.385s)
  Time for choose from waitlist:      0.056s
  Time for precision adjustment:      8.808s
  Time for transfer relation:        13.763s
  Time for merge operator:            0.901s
  Time for stop operator:             0.125s
  Time for adding to reached set:     0.150s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 958 (count: 25, min: 19, max: 72, avg: 38.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.692s
  Counterexample analysis:                             1.440s (Max:     0.181s, Calls: 25)
    Refinement sat check:                              1.177s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.010s
  ARG update:                                          0.152s

Length of refined path (in blocks):                     873 (count: 25, min: 18, max: 67, avg: 34.92)
Number of affected states:                              795 (count: 25, min: 5, max: 66, avg: 31.80)
Length (states) of path with itp 'true':                 53 (count: 25, min: 0, max: 39, avg: 2.12)
Length (states) of path with itp non-trivial itp:       795 (count: 25, min: 5, max: 66, avg: 31.80)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             770 (count: 25, min: 4, max: 65, avg: 30.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 4903
Max. size of reached set after ref.:  1222
Avg. size of reached set before ref.: 1888.60
Avg. size of reached set after ref.:  78.28

Total time for CEGAR algorithm:      26.131s
Time for refinements:                 1.791s
Average time for refinement:          0.071s
Max time for refinement:              0.208s

Code Coverage
-----------------------------
  Function coverage:      0.825
  Visited lines:          4202
  Total lines:            5253
  Line coverage:          0.800
  Visited conditions:     298
  Total conditions:       394
  Condition coverage:     0.756

CPAchecker general statistics
-----------------------------
Number of program locations:     5625
Number of CFA edges:             5855
Number of relevant variables:    1816
Number of functions:             40
Number of loops:                 25
Size of reached set:             3615
  Number of reached locations:   848 (15%)
    Avg states per location:     4
    Max states per location:     74 (at node N584)
  Number of reached functions:   33 (83%)
  Number of partitions:          3577
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N4863 (before line 8854), Function NFTL_mount called from node N345, stack depth 3 [1942bc06], stack [main, nftl_add_mtd, NFTL_mount]])
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          4.188s
  Time for loading CPAs:          0.713s
  Time for loading parser:        0.489s
  Time for CFA construction:      2.870s
    Time for parsing file(s):     0.767s
    Time for AST to CFA:          0.856s
    Time for CFA sanity check:    0.247s
    Time for post-processing:     0.778s
      Time for var class.:        0.364s
Time for Analysis:               26.131s
CPU time for analysis:           26.130s
Total time for CPAchecker:       30.323s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.152s

Time for Garbage Collector:       1.486s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                185MB (   177 MiB) max;     86MB (    82 MiB) avg;    190MB (   181 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           201MB (   191 MiB) max;    149MB (   142 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
