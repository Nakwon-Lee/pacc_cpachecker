scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--nftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_men87021/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3466: Function pointer *__cil_tmp18 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3528: Function pointer *__cil_tmp22 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3528: Ignoring call via function pointer mtd_write_oob::__cil_tmp22 for which no suitable target was found in line: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3528: Ignoring function call through function pointer *__cil_tmp22: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3466: Ignoring call via function pointer mtd_read_oob::__cil_tmp18 for which no suitable target was found in line: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3466: Ignoring function call through function pointer *__cil_tmp18: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9681 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7251 (75%)
  Because of loop head:            2403 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       4227 (44%)
  Times precision was {false}:     1459 (15%)
  Times result was cached:         3838 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      157 (2%)
  Times result was 'false':        82 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         12858
  BDD entailment checks:           3146
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       373
Number of predicates discovered:          2
Number of abstraction locations:          75
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         5454
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.38
Number of irrelevant predicates:          3364 (62%)
Number of preds handled by boolean abs:   157 (3%)
  Total number of models for allsat:      157
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  9.118s
  Time for path formula creation:        8.968s
Time for strengthen operator:            0.307s
Time for prec operator:                 10.331s
  Time for abstraction:                 10.057s (Max:     1.070s, Count: 9681)
    Boolean abstraction:                 0.462s
    Solving time:                        6.996s (Max:     1.061s)
    Model enumeration time:              0.034s
    Time for BDD construction:           0.007s (Max:     0.001s)
Time for merge operator:                 0.742s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     7.030s

Number of path formula cache hits:   162621 (51%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.211s

Total number of created targets for pointer analysis: 31177
   Number of created targets for uf: *unsigned_short_int is 1601
   Number of created targets for uf: *unsigned_char is 981
   Number of created targets for uf: *(unsigned_char)* is 29
   Number of created targets for uf: *unsigned_long_int is 812


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         315 (count: 15636, min: 0, max: 28, avg: 0.02)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.513s
  Time for transition matches:                         0.255s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       312460 (count: 312514, min: 0, max: 1, avg: 1.00) [0 x 54, 1 x 312460]

CPA algorithm statistics
------------------------
Number of iterations:            51821
Max size of waitlist:            46
Average size of waitlist:        18
Number of computed successors:   59967
Max successors for one state:    2
Number of times merged:          4856
Number of times stopped:         7218
Number of times breaked:         27

Total time for CPA algorithm:        24.933s (Max:     2.509s)
  Time for choose from waitlist:      0.068s
  Time for precision adjustment:     11.189s
  Time for transfer relation:        12.080s
  Time for merge operator:            0.870s
  Time for stop operator:             0.189s
  Time for adding to reached set:     0.173s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 576 (count: 27, min: 8, max: 37, avg: 21.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.767s
  Counterexample analysis:                             0.584s (Max:     0.060s, Calls: 27)
    Refinement sat check:                              0.443s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.013s
  ARG update:                                          0.134s

Length of refined path (in blocks):                     549 (count: 27, min: 7, max: 36, avg: 20.33)
Number of affected states:                              522 (count: 27, min: 6, max: 35, avg: 19.33)
Length (states) of path with itp 'true':                  0 (count: 27, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       522 (count: 27, min: 6, max: 35, avg: 19.33)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 27, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             495 (count: 27, min: 5, max: 34, avg: 18.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 2191
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1921.59
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.795s
Time for refinements:                 0.862s
Average time for refinement:          0.031s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.675
  Visited lines:          4020
  Total lines:            5253
  Line coverage:          0.765
  Visited conditions:     218
  Total conditions:       394
  Condition coverage:     0.553

CPAchecker general statistics
-----------------------------
Number of program locations:     5625
Number of CFA edges:             5855
Number of relevant variables:    1816
Number of functions:             40
Number of loops:                 25
Size of reached set:             865
  Number of reached locations:   632 (11%)
    Avg states per location:     1
    Max states per location:     16 (at node N584)
  Number of reached functions:   27 (68%)
  Number of partitions:          865
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          4.067s
  Time for loading CPAs:          0.776s
  Time for loading parser:        0.467s
  Time for CFA construction:      2.724s
    Time for parsing file(s):     0.661s
    Time for AST to CFA:          0.836s
    Time for CFA sanity check:    0.308s
    Time for post-processing:     0.812s
      Time for var class.:        0.360s
Time for Analysis:               25.795s
CPU time for analysis:           25.790s
Total time for CPAchecker:       29.865s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.076s

Time for Garbage Collector:       1.552s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                174MB (   166 MiB) max;     92MB (    88 MiB) avg;    182MB (   173 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           195MB (   186 MiB) max;    154MB (   147 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
