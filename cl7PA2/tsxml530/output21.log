scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--nftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0t63a7ke/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3466: Function pointer *__cil_tmp18 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3528: Function pointer *__cil_tmp22 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3466: Ignoring call via function pointer mtd_read_oob::__cil_tmp18 for which no suitable target was found in line: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3466: Ignoring function call through function pointer *__cil_tmp18: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3528: Ignoring call via function pointer mtd_write_oob::__cil_tmp22 for which no suitable target was found in line: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3528: Ignoring function call through function pointer *__cil_tmp22: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10885 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7936 (73%)
  Because of loop head:            2911 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       2496 (23%)
  Times precision was {false}:     1568 (14%)
  Times result was cached:         6474 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      347 (3%)
  Times result was 'false':        179 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         14231
  BDD entailment checks:           3771
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       373
Number of predicates discovered:          3
Number of abstraction locations:          90
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         9507
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.96
Number of irrelevant predicates:          4819 (51%)
Number of preds handled by boolean abs:   368 (4%)
  Total number of models for allsat:      346
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  7.748s
  Time for path formula creation:        7.609s
Time for strengthen operator:            0.262s
Time for prec operator:                 11.471s
  Time for abstraction:                 11.211s (Max:     0.861s, Count: 10885)
    Boolean abstraction:                 0.879s
    Solving time:                        6.217s (Max:     0.855s)
    Model enumeration time:              0.063s
    Time for BDD construction:           0.032s (Max:     0.007s)
Time for merge operator:                 0.672s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     6.280s

Number of path formula cache hits:   211619 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.112s

Total number of created targets for pointer analysis: 19091
   Number of created targets for uf: *unsigned_short_int is 41
   Number of created targets for uf: *unsigned_char is 1621
   Number of created targets for uf: *(unsigned_char)* is 27
   Number of created targets for uf: *unsigned_long_int is 15


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         705 (count: 16245, min: 0, max: 107, avg: 0.04)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.673s
  Time for transition matches:                         0.309s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       337481 (count: 337555, min: 0, max: 1, avg: 1.00) [0 x 74, 1 x 337481]

CPA algorithm statistics
------------------------
Number of iterations:            57469
Max size of waitlist:            52
Average size of waitlist:        16
Number of computed successors:   66422
Max successors for one state:    2
Number of times merged:          5230
Number of times stopped:         7932
Number of times breaked:         38

Total time for CPA algorithm:        24.704s (Max:     1.620s)
  Time for choose from waitlist:      0.075s
  Time for precision adjustment:     12.006s
  Time for transfer relation:        11.057s
  Time for merge operator:            0.822s
  Time for stop operator:             0.183s
  Time for adding to reached set:     0.146s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                1047 (count: 38, min: 8, max: 57, avg: 27.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.315s
  Counterexample analysis:                             1.085s (Max:     0.086s, Calls: 38)
    Refinement sat check:                              0.843s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.019s
  ARG update:                                          0.138s

Length of refined path (in blocks):                     963 (count: 38, min: 7, max: 56, avg: 25.34)
Number of affected states:                              897 (count: 38, min: 6, max: 55, avg: 23.61)
Length (states) of path with itp 'true':                 28 (count: 38, min: 0, max: 14, avg: 0.74)
Length (states) of path with itp non-trivial itp:       897 (count: 38, min: 6, max: 55, avg: 23.61)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 38, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             859 (count: 38, min: 5, max: 54, avg: 22.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 2543
Max. size of reached set after ref.:  931
Avg. size of reached set before ref.: 1532.79
Avg. size of reached set after ref.:  51.84

Total time for CEGAR algorithm:      26.122s
Time for refinements:                 1.415s
Average time for refinement:          0.037s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.850
  Visited lines:          4834
  Total lines:            5253
  Line coverage:          0.920
  Visited conditions:     322
  Total conditions:       394
  Condition coverage:     0.817

CPAchecker general statistics
-----------------------------
Number of program locations:     5625
Number of CFA edges:             5855
Number of relevant variables:    1816
Number of functions:             40
Number of loops:                 25
Size of reached set:             2035
  Number of reached locations:   910 (16%)
    Avg states per location:     2
    Max states per location:     39 (at node N584)
  Number of reached functions:   34 (85%)
  Number of partitions:          2022
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4863 (before line 8854), Function NFTL_mount called from node N345, stack depth 3 [60f96421], stack [main, nftl_add_mtd, NFTL_mount]])
  Number of target states:       0
  Size of final wait list        32

Time for analysis setup:          4.207s
  Time for loading CPAs:          0.739s
  Time for loading parser:        0.441s
  Time for CFA construction:      2.903s
    Time for parsing file(s):     0.791s
    Time for AST to CFA:          0.884s
    Time for CFA sanity check:    0.278s
    Time for post-processing:     0.820s
      Time for var class.:        0.336s
Time for Analysis:               26.123s
CPU time for analysis:           26.120s
Total time for CPAchecker:       30.332s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.090s

Time for Garbage Collector:       1.425s (in 69 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                159MB (   152 MiB) max;     82MB (    78 MiB) avg;    167MB (   160 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           210MB (   200 MiB) max;    146MB (   139 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8076MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
