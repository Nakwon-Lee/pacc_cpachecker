scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--rtc--rtc-ds3232.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_14qvz2m4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bin2bcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcd2bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq_nosync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1065 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  879 (83%)
  Because of loop head:            173 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       322 (30%)
  Times precision was {false}:     83 (8%)
  Times result was cached:         610 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50 (5%)
  Times result was 'false':        13 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1617
  BDD entailment checks:           345
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       200
Number of predicates discovered:          2
Number of abstraction locations:          40
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         743
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.59
Number of irrelevant predicates:          339 (46%)
Number of preds handled by boolean abs:   50 (7%)
  Total number of models for allsat:      52
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.818s
  Time for path formula creation:        1.763s
Time for strengthen operator:            0.049s
Time for prec operator:                  1.160s
  Time for abstraction:                  1.100s (Max:     0.041s, Count: 1065)
    Boolean abstraction:                 0.145s
    Solving time:                        0.528s (Max:     0.037s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.189s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.536s

Number of path formula cache hits:   19512 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.717s

Total number of created targets for pointer analysis: 1635
   Number of created targets for uf: *unsigned_char is 118


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          97 (count: 1387, min: 0, max: 20, avg: 0.07)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.138s
Automaton transfers with branching:                0
Automaton transfer successors:                        33522 (count: 33522, min: 1, max: 1, avg: 1.00) [1 x 33522]

CPA algorithm statistics
------------------------
Number of iterations:            6052
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   6954
Max successors for one state:    2
Number of times merged:          636
Number of times stopped:         835
Number of times breaked:         13

Total time for CPA algorithm:         4.414s (Max:     0.852s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      1.362s
  Time for transfer relation:         2.627s
  Time for merge operator:            0.237s
  Time for stop operator:             0.039s
  Time for adding to reached set:     0.062s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 182 (count: 13, min: 6, max: 23, avg: 14.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.249s
  Counterexample analysis:                             0.156s (Max:     0.027s, Calls: 13)
    Refinement sat check:                              0.122s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.005s
  ARG update:                                          0.037s

Length of refined path (in blocks):                     169 (count: 13, min: 5, max: 22, avg: 13.00)
Number of affected states:                              156 (count: 13, min: 4, max: 21, avg: 12.00)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       156 (count: 13, min: 4, max: 21, avg: 12.00)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             143 (count: 13, min: 3, max: 20, avg: 11.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 515
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 447.85
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.690s
Time for refinements:                 0.275s
Average time for refinement:          0.021s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          1882
  Total lines:            1995
  Line coverage:          0.943
  Visited conditions:     96
  Total conditions:       112
  Condition coverage:     0.857

CPAchecker general statistics
-----------------------------
Number of program locations:     2176
Number of CFA edges:             2231
Number of relevant variables:    558
Number of functions:             26
Number of loops:                 1
Size of reached set:             324
  Number of reached locations:   291 (13%)
    Avg states per location:     1
    Max states per location:     8 (at node N1600)
  Number of reached functions:   18 (69%)
  Number of partitions:          324
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.067s
  Time for loading CPAs:          0.672s
  Time for loading parser:        0.451s
  Time for CFA construction:      1.843s
    Time for parsing file(s):     0.563s
    Time for AST to CFA:          0.570s
    Time for CFA sanity check:    0.097s
    Time for post-processing:     0.449s
      Time for var class.:        0.207s
Time for Analysis:                4.690s
CPU time for analysis:            4.680s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.765s
Total CPU time for CPAchecker:    7.740s
Time for statistics:              0.068s

Time for Garbage Collector:       0.209s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     41MB (    39 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8055MB (  7682 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
