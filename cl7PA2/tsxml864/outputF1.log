scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--acpi--apei--einj.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_73b6yon8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_os_unmap_memory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_exec_ctx_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_exec_post_unmap_gars to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_resources_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_resources_fini to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_get_debugfs_dir to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_exec_collect_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_resources_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function apei_exec_pre_map_gars to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_os_map_memory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x64 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_blob to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30 (86%)
  Because of loop head:            5 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       35 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         92
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       74
Number of predicates discovered:          0

Time for post operator:                  0.383s
  Time for path formula creation:        0.361s
Time for strengthen operator:            0.012s
Time for prec operator:                  0.007s
  Time for abstraction:                  0.002s (Max:     0.001s, Count: 35)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.033s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   1 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.347s

Total number of created targets for pointer analysis: 3
   Number of created targets for uf: *unsigned_long_long_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 44, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.032s
Automaton transfers with branching:                0
Automaton transfer successors:                         1450 (count: 1450, min: 1, max: 1, avg: 1.00) [1 x 1450]

CPA algorithm statistics
------------------------
Number of iterations:            289
Max size of waitlist:            8
Average size of waitlist:        3
Number of computed successors:   338
Max successors for one state:    2
Number of times merged:          42
Number of times stopped:         50
Number of times breaked:         0

Total time for CPA algorithm:         0.684s (Max:     0.684s)
  Time for choose from waitlist:      0.001s
  Time for precision adjustment:      0.026s
  Time for transfer relation:         0.570s
  Time for merge operator:            0.047s
  Time for stop operator:             0.013s
  Time for adding to reached set:     0.019s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.270
  Visited lines:          1132
  Total lines:            1908
  Line coverage:          0.593
  Visited conditions:     100
  Total conditions:       256
  Condition coverage:     0.391

CPAchecker general statistics
-----------------------------
Number of program locations:     2231
Number of CFA edges:             2366
Number of relevant variables:    491
Number of functions:             37
Number of loops:                 4
Size of reached set:             289
  Number of reached locations:   253 (11%)
    Avg states per location:     1
    Max states per location:     4 (at node N1424)
  Number of reached functions:   10 (27%)
  Number of partitions:          289
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.258s
  Time for loading CPAs:          0.573s
  Time for loading parser:        0.532s
  Time for CFA construction:      2.050s
    Time for parsing file(s):     0.635s
    Time for AST to CFA:          0.688s
    Time for CFA sanity check:    0.131s
    Time for post-processing:     0.460s
      Time for var class.:        0.199s
Time for Analysis:                0.685s
CPU time for analysis:            0.690s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.945s
Total CPU time for CPAchecker:    3.930s
Time for statistics:              0.055s

Time for Garbage Collector:       0.117s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 50MB (    48 MiB) max;     30MB (    29 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     24MB (    23 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8024MB (  7652 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
