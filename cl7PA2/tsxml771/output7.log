scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--ppp--ppp_mppe.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_36eyhw10/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 990: Function pointer *__cil_tmp14 with type int (*)(struct blkcipher_desc *desc, struct scatterlist *dst, struct scatterlist *src, unsigned int nbytes) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 956: Function pointer *__cil_tmp14 with type int (*)(struct blkcipher_desc *desc, struct scatterlist *dst, struct scatterlist *src, unsigned int nbytes) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 922: Function pointer *__cil_tmp9 with type int (*)(struct crypto_tfm *tfm, u8 *key, unsigned int keylen) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 1111: Function pointer *__cil_tmp10 with type int (*)(struct hash_desc *desc, struct scatterlist *sg, unsigned int nsg, u8 *out) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crypto_has_alg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_register_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1111: Ignoring call via function pointer crypto_hash_digest::__cil_tmp10 for which no suitable target was found in line: tmp___0 = (*__cil_tmp10)(desc, sg, nbytes, out); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 922: Ignoring call via function pointer crypto_blkcipher_setkey::__cil_tmp9 for which no suitable target was found in line: tmp___1 = (*__cil_tmp9)(tmp___0, key, keylen); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 956: Ignoring call via function pointer crypto_blkcipher_encrypt::__cil_tmp14 for which no suitable target was found in line: tmp___1 = (*__cil_tmp14)(desc, dst, src, nbytes); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 956: Ignoring function call through function pointer *__cil_tmp14: tmp___1 = (*__cil_tmp14)(desc, dst, src, nbytes); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function crypto_destroy_tfm to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_unregister_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crypto_alloc_base to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 990: Ignoring call via function pointer crypto_blkcipher_decrypt::__cil_tmp14 for which no suitable target was found in line: tmp___1 = (*__cil_tmp14)(desc, dst, src, nbytes); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 990: Ignoring function call through function pointer *__cil_tmp14: tmp___1 = (*__cil_tmp14)(desc, dst, src, nbytes); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            63636 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  49994 (79%)
  Because of loop head:            13617 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       40065 (63%)
  Times precision was {false}:     889 (1%)
  Times result was cached:         22477 (35%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      205 (0%)
  Times result was 'false':        65 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         16759
  BDD entailment checks:           9271
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       295
Number of predicates discovered:          3
Number of abstraction locations:          106
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         23665
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 21.63
Number of irrelevant predicates:          19443 (82%)
Number of preds handled by boolean abs:   205 (1%)
  Total number of models for allsat:      205
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 10.867s
  Time for path formula creation:       10.661s
Time for strengthen operator:            0.521s
Time for prec operator:                  5.086s
  Time for abstraction:                  4.387s (Max:     0.543s, Count: 63636)
    Boolean abstraction:                 0.270s
    Solving time:                        1.003s (Max:     0.032s)
    Model enumeration time:              0.027s
    Time for BDD construction:           0.020s (Max:     0.013s)
Time for merge operator:                 0.309s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     1.030s

Number of path formula cache hits:   328882 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.797s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         416 (count: 55028, min: 0, max: 152, avg: 0.01)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.063s
  Time for transition matches:                         0.596s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       619534 (count: 619534, min: 1, max: 1, avg: 1.00) [1 x 619534]

CPA algorithm statistics
------------------------
Number of iterations:            222956
Max size of waitlist:            26
Average size of waitlist:        16
Number of computed successors:   235371
Max successors for one state:    2
Number of times merged:          3744
Number of times stopped:         12315
Number of times breaked:         25

Total time for CPA algorithm:        25.580s (Max:     2.535s)
  Time for choose from waitlist:      0.135s
  Time for precision adjustment:      6.696s
  Time for transfer relation:        16.494s
  Time for merge operator:            0.479s
  Time for stop operator:             0.377s
  Time for adding to reached set:     0.542s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 713 (count: 25, min: 7, max: 135, avg: 28.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.831s
  Counterexample analysis:                             0.238s (Max:     0.044s, Calls: 25)
    Refinement sat check:                              0.151s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.015s
  ARG update:                                          0.539s

Length of refined path (in blocks):                     645 (count: 25, min: 6, max: 134, avg: 25.80)
Number of affected states:                              614 (count: 25, min: 1, max: 133, avg: 24.56)
Length (states) of path with itp 'true':                  6 (count: 25, min: 0, max: 6, avg: 0.24)
Length (states) of path with itp non-trivial itp:       614 (count: 25, min: 1, max: 133, avg: 24.56)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             589 (count: 25, min: 0, max: 132, avg: 23.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 13273
Max. size of reached set after ref.:  4322
Avg. size of reached set before ref.: 9087.28
Avg. size of reached set after ref.:  175.76

Total time for CEGAR algorithm:      26.616s
Time for refinements:                 1.032s
Average time for refinement:          0.041s
Max time for refinement:              0.081s

Code Coverage
-----------------------------
  Function coverage:      0.364
  Visited lines:          822
  Total lines:            2565
  Line coverage:          0.320
  Visited conditions:     74
  Total conditions:       212
  Condition coverage:     0.349

CPAchecker general statistics
-----------------------------
Number of program locations:     2912
Number of CFA edges:             3054
Number of relevant variables:    872
Number of functions:             55
Number of loops:                 8
Size of reached set:             204
  Number of reached locations:   201 (7%)
    Avg states per location:     1
    Max states per location:     4 (at node N2552)
  Number of reached functions:   20 (36%)
  Number of partitions:          204
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          3.286s
  Time for loading CPAs:          0.720s
  Time for loading parser:        0.429s
  Time for CFA construction:      2.027s
    Time for parsing file(s):     0.543s
    Time for AST to CFA:          0.634s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.548s
      Time for var class.:        0.292s
Time for Analysis:               26.616s
CPU time for analysis:           26.620s
Total time for CPAchecker:       29.904s
Total CPU time for CPAchecker:   29.890s
Time for statistics:              0.043s

Time for Garbage Collector:       3.403s (in 95 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                266MB (   254 MiB) max;    110MB (   105 MiB) avg;    276MB (   264 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           387MB (   369 MiB) max;    179MB (   170 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
