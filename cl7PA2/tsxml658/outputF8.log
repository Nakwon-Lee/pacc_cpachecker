scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--video--zoran--zr36016.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vooz08xz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 591: Function pointer *__cil_tmp21 with type __u32 (*)(struct videocodec *codec, __u16 reg) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 874: Function pointer *__cil_tmp29 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 888: Function pointer *__cil_tmp45 with type __u32 (*)(struct videocodec *codec, __u16 reg) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 738: Function pointer *__cil_tmp29 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 1064: Function pointer *__cil_tmp29 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 1081: Function pointer *__cil_tmp45 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videocodec_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videocodec_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 738: Ignoring call via function pointer zr36016_write::__cil_tmp29 for which no suitable target was found in line: (*__cil_tmp29)(__cil_tmp32, reg, __cil_tmp33); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 738: Ignoring function call through function pointer *__cil_tmp29: (*__cil_tmp29)(__cil_tmp32, reg, __cil_tmp33); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1064: Ignoring call via function pointer zr36016_writei::__cil_tmp29 for which no suitable target was found in line: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1064: Ignoring function call through function pointer *__cil_tmp29: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1081: Ignoring call via function pointer zr36016_writei::__cil_tmp45 for which no suitable target was found in line: (*__cil_tmp45)(__cil_tmp48, __cil_tmp49, __cil_tmp52); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1081: Ignoring function call through function pointer *__cil_tmp45: (*__cil_tmp45)(__cil_tmp48, __cil_tmp49, __cil_tmp52); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 874: Ignoring call via function pointer zr36016_readi::__cil_tmp29 for which no suitable target was found in line: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 874: Ignoring function call through function pointer *__cil_tmp29: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 888: Ignoring call via function pointer zr36016_readi::__cil_tmp45 for which no suitable target was found in line: tmp = (*__cil_tmp45)(__cil_tmp48, __cil_tmp49); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 888: Ignoring function call through function pointer *__cil_tmp45: tmp = (*__cil_tmp45)(__cil_tmp48, __cil_tmp49); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 591: Ignoring call via function pointer zr36016_read::__cil_tmp21 for which no suitable target was found in line: tmp = (*__cil_tmp21)(__cil_tmp24, reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 591: Ignoring function call through function pointer *__cil_tmp21: tmp = (*__cil_tmp21)(__cil_tmp24, reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1373 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1167 (85%)
  Because of loop head:            192 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (1%)
  Times precision was empty:       249 (18%)
  Times precision was {false}:     107 (8%)
  Times result was cached:         922 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      95 (7%)
  Times result was 'false':        28 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         3368
  BDD entailment checks:           406
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       120
Number of predicates discovered:          2
Number of abstraction locations:          54
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1124
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.56
Number of irrelevant predicates:          323 (29%)
Number of preds handled by boolean abs:   95 (8%)
  Total number of models for allsat:      95
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.424s
  Time for path formula creation:        1.344s
Time for strengthen operator:            0.066s
Time for prec operator:                  1.301s
  Time for abstraction:                  1.162s (Max:     0.031s, Count: 1373)
    Boolean abstraction:                 0.186s
    Solving time:                        0.336s (Max:     0.013s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.118s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.343s

Number of path formula cache hits:   41469 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.234s

Total number of created targets for pointer analysis: 51
   Number of created targets for uf: *signed_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         183 (count: 1765, min: 0, max: 56, avg: 0.10)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.248s
Automaton transfers with branching:                0
Automaton transfer successors:                        53882 (count: 53882, min: 1, max: 1, avg: 1.00) [1 x 53882]

CPA algorithm statistics
------------------------
Number of iterations:            14219
Max size of waitlist:            15
Average size of waitlist:        5
Number of computed successors:   16025
Max successors for one state:    2
Number of times merged:          1481
Number of times stopped:         1723
Number of times breaked:         14

Total time for CPA algorithm:         4.742s (Max:     0.573s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      1.548s
  Time for transfer relation:         2.608s
  Time for merge operator:            0.234s
  Time for stop operator:             0.085s
  Time for adding to reached set:     0.097s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 302 (count: 14, min: 8, max: 49, avg: 21.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.371s
  Counterexample analysis:                             0.242s (Max:     0.046s, Calls: 14)
    Refinement sat check:                              0.182s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.018s
  ARG update:                                          0.050s

Length of refined path (in blocks):                     288 (count: 14, min: 7, max: 48, avg: 20.57)
Number of affected states:                              274 (count: 14, min: 6, max: 47, avg: 19.57)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       274 (count: 14, min: 6, max: 47, avg: 19.57)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             260 (count: 14, min: 5, max: 46, avg: 18.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 1676
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 922.71
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.182s
Time for refinements:                 0.437s
Average time for refinement:          0.031s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.643
  Visited lines:          1494
  Total lines:            1542
  Line coverage:          0.969
  Visited conditions:     128
  Total conditions:       148
  Condition coverage:     0.865

CPAchecker general statistics
-----------------------------
Number of program locations:     1770
Number of CFA edges:             1860
Number of relevant variables:    287
Number of functions:             28
Number of loops:                 2
Size of reached set:             1399
  Number of reached locations:   498 (28%)
    Avg states per location:     2
    Max states per location:     24 (at node N390)
  Number of reached functions:   18 (64%)
  Number of partitions:          1399
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.089s
  Time for loading CPAs:          0.681s
  Time for loading parser:        0.563s
  Time for CFA construction:      1.765s
    Time for parsing file(s):     0.430s
    Time for AST to CFA:          0.606s
    Time for CFA sanity check:    0.148s
    Time for post-processing:     0.478s
      Time for var class.:        0.264s
Time for Analysis:                5.182s
CPU time for analysis:            5.180s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.274s
Total CPU time for CPAchecker:    8.270s
Time for statistics:              0.101s

Time for Garbage Collector:       0.188s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     38MB (    36 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
