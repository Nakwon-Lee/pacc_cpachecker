scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--metro-usb_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nexg0rye/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4546 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4131 (91%)
  Because of loop head:            316 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         99 (2%)
  Times precision was empty:       2018 (44%)
  Times precision was {false}:     188 (4%)
  Times result was cached:         2180 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      160 (4%)
  Times result was 'false':        88 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         5000
  BDD entailment checks:           962
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       132
Number of predicates discovered:          2
Number of abstraction locations:          62
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2528
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.26
Number of irrelevant predicates:          1301 (51%)
Number of preds handled by boolean abs:   160 (6%)
  Total number of models for allsat:      164
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  2.330s
  Time for path formula creation:        2.253s
Time for strengthen operator:            0.114s
Time for prec operator:                  1.636s
  Time for abstraction:                  1.469s (Max:     0.029s, Count: 4546)
    Boolean abstraction:                 0.204s
    Solving time:                        0.505s (Max:     0.014s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.008s (Max:     0.006s)
Time for merge operator:                 0.159s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.514s

Number of path formula cache hits:   57926 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.097s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         293 (count: 4889, min: 0, max: 58, avg: 0.06)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.227s
Automaton transfers with branching:                0
Automaton transfer successors:                        81180 (count: 81180, min: 1, max: 1, avg: 1.00) [1 x 81180]

CPA algorithm statistics
------------------------
Number of iterations:            21951
Max size of waitlist:            21
Average size of waitlist:        14
Number of computed successors:   24851
Max successors for one state:    2
Number of times merged:          2019
Number of times stopped:         2570
Number of times breaked:         99

Total time for CPA algorithm:         6.301s (Max:     0.597s)
  Time for choose from waitlist:      0.038s
  Time for precision adjustment:      1.902s
  Time for transfer relation:         3.682s
  Time for merge operator:            0.269s
  Time for stop operator:             0.136s
  Time for adding to reached set:     0.100s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   99
Avg. length of target path (in blocks):                3027 (count: 99, min: 8, max: 41, avg: 30.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.902s
  Counterexample analysis:                             1.659s (Max:     0.037s, Calls: 99)
    Refinement sat check:                              1.216s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.049s
  ARG update:                                          0.079s

Length of refined path (in blocks):                    2928 (count: 99, min: 7, max: 40, avg: 29.58)
Number of affected states:                             1155 (count: 99, min: 6, max: 19, avg: 11.67)
Length (states) of path with itp 'true':               1674 (count: 99, min: 0, max: 29, avg: 16.91)
Length (states) of path with itp non-trivial itp:      1155 (count: 99, min: 6, max: 19, avg: 11.67)
Length (states) of path with itp 'false':                99 (count: 99, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 99, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1056 (count: 99, min: 5, max: 18, avg: 10.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                99
Number of successful refinements:     99
Number of failed refinements:         0
Max. size of reached set before ref.: 1066
Max. size of reached set after ref.:  972
Avg. size of reached set before ref.: 631.12
Avg. size of reached set after ref.:  413.58

Total time for CEGAR algorithm:       8.384s
Time for refinements:                 2.038s
Average time for refinement:          0.020s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.844
  Visited lines:          2318
  Total lines:            2338
  Line coverage:          0.991
  Visited conditions:     134
  Total conditions:       142
  Condition coverage:     0.944

CPAchecker general statistics
-----------------------------
Number of program locations:     2560
Number of CFA edges:             2654
Number of relevant variables:    570
Number of functions:             32
Number of loops:                 3
Size of reached set:             657
  Number of reached locations:   468 (18%)
    Avg states per location:     1
    Max states per location:     10 (at node N1930)
  Number of reached functions:   27 (84%)
  Number of partitions:          657
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.987s
  Time for loading CPAs:          0.595s
  Time for loading parser:        0.444s
  Time for CFA construction:      1.839s
    Time for parsing file(s):     0.548s
    Time for AST to CFA:          0.608s
    Time for CFA sanity check:    0.117s
    Time for post-processing:     0.434s
      Time for var class.:        0.233s
Time for Analysis:                8.391s
CPU time for analysis:            8.390s
Time for analyzing result:        0.000s
Total time for CPAchecker:       11.380s
Total CPU time for CPAchecker:   11.380s
Time for statistics:              0.062s

Time for Garbage Collector:       0.217s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     45MB (    43 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    31 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8001MB (  7630 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
