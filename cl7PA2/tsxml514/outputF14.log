scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--touchscreen--stmpe-ts_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kxm48s2n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_block_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_reg_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            362 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  320 (88%)
  Because of loop head:            35 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (2%)
  Times precision was empty:       113 (31%)
  Times precision was {false}:     25 (7%)
  Times result was cached:         188 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36 (10%)
  Times result was 'false':        13 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         304
  BDD entailment checks:           80
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       204
Number of predicates discovered:          2
Number of abstraction locations:          30
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         249
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.08
Number of irrelevant predicates:          59 (24%)
Number of preds handled by boolean abs:   36 (14%)
  Total number of models for allsat:      38
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.490s
  Time for path formula creation:        0.454s
Time for strengthen operator:            0.031s
Time for prec operator:                  0.366s
  Time for abstraction:                  0.305s (Max:     0.031s, Count: 362)
    Boolean abstraction:                 0.058s
    Solving time:                        0.038s (Max:     0.020s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.036s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.052s

Number of path formula cache hits:   5367 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.429s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          47 (count: 540, min: 0, max: 47, avg: 0.09)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.086s
Automaton transfers with branching:                0
Automaton transfer successors:                         7556 (count: 7556, min: 1, max: 1, avg: 1.00) [1 x 7556]

CPA algorithm statistics
------------------------
Number of iterations:            1727
Max size of waitlist:            13
Average size of waitlist:        4
Number of computed successors:   1929
Max successors for one state:    2
Number of times merged:          112
Number of times stopped:         173
Number of times breaked:         7

Total time for CPA algorithm:         1.622s (Max:     0.438s)
  Time for choose from waitlist:      0.019s
  Time for precision adjustment:      0.485s
  Time for transfer relation:         0.902s
  Time for merge operator:            0.061s
  Time for stop operator:             0.035s
  Time for adding to reached set:     0.023s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 116 (count: 7, min: 6, max: 27, avg: 16.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.143s
  Counterexample analysis:                             0.072s (Max:     0.018s, Calls: 7)
    Refinement sat check:                              0.042s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.008s
  ARG update:                                          0.015s

Length of refined path (in blocks):                     109 (count: 7, min: 5, max: 26, avg: 15.57)
Number of affected states:                              102 (count: 7, min: 4, max: 25, avg: 14.57)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       102 (count: 7, min: 4, max: 25, avg: 14.57)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              95 (count: 7, min: 3, max: 24, avg: 13.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 287
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 219.71
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.784s
Time for refinements:                 0.161s
Average time for refinement:          0.023s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          1302
  Total lines:            1428
  Line coverage:          0.912
  Visited conditions:     50
  Total conditions:       64
  Condition coverage:     0.781

CPAchecker general statistics
-----------------------------
Number of program locations:     1568
Number of CFA edges:             1602
Number of relevant variables:    262
Number of functions:             24
Number of loops:                 2
Size of reached set:             227
  Number of reached locations:   178 (11%)
    Avg states per location:     1
    Max states per location:     5 (at node N584)
  Number of reached functions:   13 (54%)
  Number of partitions:          227
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.032s
  Time for loading CPAs:          0.671s
  Time for loading parser:        0.503s
  Time for CFA construction:      1.759s
    Time for parsing file(s):     0.608s
    Time for AST to CFA:          0.533s
    Time for CFA sanity check:    0.111s
    Time for post-processing:     0.360s
      Time for var class.:        0.147s
Time for Analysis:                1.785s
CPU time for analysis:            1.790s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.822s
Total CPU time for CPAchecker:    4.820s
Time for statistics:              0.065s

Time for Garbage Collector:       0.110s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     33MB (    31 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8036MB (  7664 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
