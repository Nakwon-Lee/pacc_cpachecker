scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--touchscreen--stmpe-ts_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_heebt0tk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_reg_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_block_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            472 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  428 (91%)
  Because of loop head:            37 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (1%)
  Times precision was empty:       139 (29%)
  Times precision was {false}:     72 (15%)
  Times result was cached:         223 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      38 (8%)
  Times result was 'false':        12 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         471
  BDD entailment checks:           135
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       204
Number of predicates discovered:          2
Number of abstraction locations:          30
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         333
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.03
Number of irrelevant predicates:          155 (47%)
Number of preds handled by boolean abs:   38 (11%)
  Total number of models for allsat:      42
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  0.941s
  Time for path formula creation:        0.929s
Time for strengthen operator:            0.044s
Time for prec operator:                  0.509s
  Time for abstraction:                  0.459s (Max:     0.027s, Count: 472)
    Boolean abstraction:                 0.081s
    Solving time:                        0.128s (Max:     0.019s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.010s (Max:     0.009s)
Time for merge operator:                 0.103s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.133s

Number of path formula cache hits:   4262 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.893s

Total number of created targets for pointer analysis: 36
   Number of created targets for uf: *unsigned_char is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          69 (count: 868, min: 0, max: 39, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.098s
Automaton transfers with branching:                0
Automaton transfer successors:                        10017 (count: 10017, min: 1, max: 1, avg: 1.00) [1 x 10017]

CPA algorithm statistics
------------------------
Number of iterations:            2427
Max size of waitlist:            14
Average size of waitlist:        4
Number of computed successors:   2722
Max successors for one state:    2
Number of times merged:          168
Number of times stopped:         260
Number of times breaked:         7

Total time for CPA algorithm:         2.400s (Max:     0.786s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      0.645s
  Time for transfer relation:         1.467s
  Time for merge operator:            0.116s
  Time for stop operator:             0.034s
  Time for adding to reached set:     0.034s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 167 (count: 7, min: 11, max: 32, avg: 23.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.123s
  Counterexample analysis:                             0.077s (Max:     0.018s, Calls: 7)
    Refinement sat check:                              0.048s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.007s
  ARG update:                                          0.024s

Length of refined path (in blocks):                     160 (count: 7, min: 10, max: 31, avg: 22.86)
Number of affected states:                              153 (count: 7, min: 9, max: 30, avg: 21.86)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       153 (count: 7, min: 9, max: 30, avg: 21.86)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             146 (count: 7, min: 8, max: 29, avg: 20.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 423
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 320.71
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.558s
Time for refinements:                 0.157s
Average time for refinement:          0.022s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          1302
  Total lines:            1428
  Line coverage:          0.912
  Visited conditions:     50
  Total conditions:       64
  Condition coverage:     0.781

CPAchecker general statistics
-----------------------------
Number of program locations:     1568
Number of CFA edges:             1602
Number of relevant variables:    262
Number of functions:             24
Number of loops:                 2
Size of reached set:             227
  Number of reached locations:   178 (11%)
    Avg states per location:     1
    Max states per location:     5 (at node N584)
  Number of reached functions:   13 (54%)
  Number of partitions:          227
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.887s
  Time for loading CPAs:          0.583s
  Time for loading parser:        0.505s
  Time for CFA construction:      1.705s
    Time for parsing file(s):     0.557s
    Time for AST to CFA:          0.576s
    Time for CFA sanity check:    0.103s
    Time for post-processing:     0.324s
      Time for var class.:        0.144s
Time for Analysis:                2.558s
CPU time for analysis:            2.550s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.447s
Total CPU time for CPAchecker:    5.440s
Time for statistics:              0.061s

Time for Garbage Collector:       0.120s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     35MB (    34 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8042MB (  7670 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
