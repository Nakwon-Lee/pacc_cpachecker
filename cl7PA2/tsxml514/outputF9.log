scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--touchscreen--stmpe-ts_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3mzx1gyi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_block_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function stmpe_reg_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            671 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  617 (92%)
  Because of loop head:            47 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (1%)
  Times precision was empty:       299 (45%)
  Times precision was {false}:     67 (10%)
  Times result was cached:         268 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      37 (6%)
  Times result was 'false':        10 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         603
  BDD entailment checks:           183
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       204
Number of predicates discovered:          2
Number of abstraction locations:          30
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         372
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.58
Number of irrelevant predicates:          193 (52%)
Number of preds handled by boolean abs:   37 (10%)
  Total number of models for allsat:      40
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  0.968s
  Time for path formula creation:        0.936s
Time for strengthen operator:            0.059s
Time for prec operator:                  0.417s
  Time for abstraction:                  0.387s (Max:     0.018s, Count: 671)
    Boolean abstraction:                 0.061s
    Solving time:                        0.064s (Max:     0.013s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.023s (Max:     0.010s)
Time for merge operator:                 0.085s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.066s

Number of path formula cache hits:   6953 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.867s

Total number of created targets for pointer analysis: 36
   Number of created targets for uf: *unsigned_char is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          55 (count: 1045, min: 0, max: 38, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.095s
Automaton transfers with branching:                0
Automaton transfer successors:                        13531 (count: 13531, min: 1, max: 1, avg: 1.00) [1 x 13531]

CPA algorithm statistics
------------------------
Number of iterations:            3156
Max size of waitlist:            13
Average size of waitlist:        4
Number of computed successors:   3506
Max successors for one state:    2
Number of times merged:          210
Number of times stopped:         330
Number of times breaked:         7

Total time for CPA algorithm:         2.349s (Max:     0.724s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.548s
  Time for transfer relation:         1.503s
  Time for merge operator:            0.131s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.045s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 120 (count: 7, min: 6, max: 27, avg: 17.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.125s
  Counterexample analysis:                             0.088s (Max:     0.024s, Calls: 7)
    Refinement sat check:                              0.054s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.009s
  ARG update:                                          0.019s

Length of refined path (in blocks):                     113 (count: 7, min: 5, max: 26, avg: 16.14)
Number of affected states:                              106 (count: 7, min: 4, max: 25, avg: 15.14)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       106 (count: 7, min: 4, max: 25, avg: 15.14)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              99 (count: 7, min: 3, max: 24, avg: 14.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 461
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 423.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.513s
Time for refinements:                 0.163s
Average time for refinement:          0.023s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          1302
  Total lines:            1428
  Line coverage:          0.912
  Visited conditions:     50
  Total conditions:       64
  Condition coverage:     0.781

CPAchecker general statistics
-----------------------------
Number of program locations:     1568
Number of CFA edges:             1602
Number of relevant variables:    262
Number of functions:             24
Number of loops:                 2
Size of reached set:             227
  Number of reached locations:   178 (11%)
    Avg states per location:     1
    Max states per location:     5 (at node N584)
  Number of reached functions:   13 (54%)
  Number of partitions:          227
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.184s
  Time for loading CPAs:          0.596s
  Time for loading parser:        0.603s
  Time for CFA construction:      1.877s
    Time for parsing file(s):     0.627s
    Time for AST to CFA:          0.609s
    Time for CFA sanity check:    0.111s
    Time for post-processing:     0.349s
      Time for var class.:        0.154s
Time for Analysis:                2.513s
CPU time for analysis:            2.510s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.704s
Total CPU time for CPAchecker:    5.690s
Time for statistics:              0.065s

Time for Garbage Collector:       0.136s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     34MB (    32 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8035MB (  7663 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
