scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--platform--x86--toshiba_bluetooth.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jdtuz_58/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            247 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  202 (82%)
  Because of loop head:            38 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (3%)
  Times precision was empty:       83 (34%)
  Times precision was {false}:     13 (5%)
  Times result was cached:         131 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20 (8%)
  Times result was 'false':        13 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         162
  BDD entailment checks:           62
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          2
Number of abstraction locations:          19
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         164
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.97
Number of irrelevant predicates:          62 (38%)
Number of preds handled by boolean abs:   20 (12%)
  Total number of models for allsat:      20
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.322s
  Time for path formula creation:        0.319s
Time for strengthen operator:            0.021s
Time for prec operator:                  0.226s
  Time for abstraction:                  0.190s (Max:     0.030s, Count: 247)
    Boolean abstraction:                 0.034s
    Solving time:                        0.011s (Max:     0.002s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.024s (Max:     0.022s)
Time for merge operator:                 0.020s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.012s

Number of path formula cache hits:   1357 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.310s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 335, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                         2348 (count: 2348, min: 1, max: 1, avg: 1.00) [1 x 2348]

CPA algorithm statistics
------------------------
Number of iterations:            995
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   1131
Max successors for one state:    2
Number of times merged:          50
Number of times stopped:         91
Number of times breaked:         7

Total time for CPA algorithm:         1.014s (Max:     0.308s)
  Time for choose from waitlist:      0.037s
  Time for precision adjustment:      0.325s
  Time for transfer relation:         0.542s
  Time for merge operator:            0.056s
  Time for stop operator:             0.013s
  Time for adding to reached set:     0.009s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  74 (count: 7, min: 5, max: 13, avg: 10.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.110s
  Counterexample analysis:                             0.055s (Max:     0.017s, Calls: 7)
    Refinement sat check:                              0.034s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.010s
  ARG update:                                          0.027s

Length of refined path (in blocks):                      67 (count: 7, min: 4, max: 12, avg: 9.57)
Number of affected states:                               60 (count: 7, min: 3, max: 11, avg: 8.57)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        60 (count: 7, min: 3, max: 11, avg: 8.57)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              53 (count: 7, min: 2, max: 10, avg: 7.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 193
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 129.57
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.143s
Time for refinements:                 0.129s
Average time for refinement:          0.018s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          682
  Total lines:            730
  Line coverage:          0.934
  Visited conditions:     28
  Total conditions:       48
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     826
Number of CFA edges:             850
Number of relevant variables:    57
Number of functions:             19
Number of loops:                 1
Size of reached set:             142
  Number of reached locations:   96 (12%)
    Avg states per location:     1
    Max states per location:     5 (at node N176)
  Number of reached functions:   9 (47%)
  Number of partitions:          142
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.483s
  Time for loading CPAs:          0.505s
  Time for loading parser:        0.460s
  Time for CFA construction:      1.376s
    Time for parsing file(s):     0.463s
    Time for AST to CFA:          0.430s
    Time for CFA sanity check:    0.083s
    Time for post-processing:     0.298s
      Time for var class.:        0.094s
Time for Analysis:                1.143s
CPU time for analysis:            1.140s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.628s
Total CPU time for CPAchecker:    3.620s
Time for statistics:              0.062s

Time for Garbage Collector:       0.105s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 50MB (    48 MiB) max;     31MB (    30 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     25MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7968MB (  7599 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
