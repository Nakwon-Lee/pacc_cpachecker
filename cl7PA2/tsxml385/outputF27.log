scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--inftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5zk5z628/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4666: Dead code detected: tmp___25 = silly2; (CFACreationUtils.addEdgeToCFA, INFO)

line 4668: Dead code detected: [!(tmp___25 == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4671: Dead code detected: Goto: while_break___0 (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2123: Function pointer *__cil_tmp15 with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2180: Function pointer *__cil_tmp19 with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2123: Ignoring call via function pointer mtd_read_oob::__cil_tmp15 for which no suitable target was found in line: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2123: Ignoring function call through function pointer *__cil_tmp15: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2180: Ignoring call via function pointer mtd_write_oob::__cil_tmp19 for which no suitable target was found in line: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2180: Ignoring function call through function pointer *__cil_tmp19: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            90491 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  66245 (73%)
  Because of loop head:            24180 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (0%)
  Times precision was empty:       31906 (35%)
  Times precision was {false}:     7894 (9%)
  Times result was cached:         50135 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      556 (1%)
  Times result was 'false':        354 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         99332
  BDD entailment checks:           27084
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       367
Number of predicates discovered:          4
Number of abstraction locations:          179
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         59302
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 7.02
Number of irrelevant predicates:          38436 (65%)
Number of preds handled by boolean abs:   559 (1%)
  Total number of models for allsat:      567
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 49.386s
  Time for path formula creation:       48.123s
Time for strengthen operator:            1.254s
Time for prec operator:                 33.355s
  Time for abstraction:                 32.302s (Max:     1.467s, Count: 90491)
    Boolean abstraction:                 0.891s
    Solving time:                       17.622s (Max:     0.284s)
    Model enumeration time:              0.047s
    Time for BDD construction:           0.023s (Max:     0.008s)
Time for merge operator:                 3.506s
Time for coverage check:                 0.085s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):    17.669s

Number of path formula cache hits:   999074 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    43.003s

Total number of created targets for pointer analysis: 208011
   Number of created targets for uf: *unsigned_short_int is 300
   Number of created targets for uf: *unsigned_char is 12104
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1115 (count: 101826, min: 0, max: 134, avg: 0.01)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.135s
  Time for transition matches:                         1.273s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1917745 (count: 1917745, min: 1, max: 1, avg: 1.00) [1 x 1917745]

CPA algorithm statistics
------------------------
Number of iterations:            477816
Max size of waitlist:            27
Average size of waitlist:        14
Number of computed successors:   539296
Max successors for one state:    2
Number of times merged:          36124
Number of times stopped:         61067
Number of times breaked:         66

Total time for CPA algorithm:       104.197s (Max:     4.133s)
  Time for choose from waitlist:      0.227s
  Time for precision adjustment:     35.803s
  Time for transfer relation:        61.509s
  Time for merge operator:            4.058s
  Time for stop operator:             0.544s
  Time for adding to reached set:     0.814s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   66
Avg. length of target path (in blocks):                3354 (count: 66, min: 5, max: 104, avg: 50.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.017s
  Counterexample analysis:                             2.148s (Max:     0.088s, Calls: 66)
    Refinement sat check:                              1.629s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.024s
  ARG update:                                          0.766s

Length of refined path (in blocks):                    3216 (count: 66, min: 4, max: 103, avg: 48.73)
Number of affected states:                             3114 (count: 66, min: 1, max: 102, avg: 47.18)
Length (states) of path with itp 'true':                 36 (count: 66, min: 0, max: 26, avg: 0.55)
Length (states) of path with itp non-trivial itp:      3114 (count: 66, min: 1, max: 102, avg: 47.18)
Length (states) of path with itp 'false':                66 (count: 66, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 66, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3048 (count: 66, min: 0, max: 101, avg: 46.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                66
Number of successful refinements:     66
Number of failed refinements:         0
Max. size of reached set before ref.: 8545
Max. size of reached set after ref.:  2852
Avg. size of reached set before ref.: 7271.24
Avg. size of reached set after ref.:  84.88

Total time for CEGAR algorithm:     107.536s
Time for refinements:                 3.332s
Average time for refinement:          0.050s
Max time for refinement:              0.122s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          6352
  Total lines:            6399
  Line coverage:          0.993
  Visited conditions:     494
  Total conditions:       514
  Condition coverage:     0.961

CPAchecker general statistics
-----------------------------
Number of program locations:     7008
Number of CFA edges:             7336
Number of relevant variables:    2199
Number of functions:             44
Number of loops:                 39
Size of reached set:             3576
  Number of reached locations:   1627 (23%)
    Avg states per location:     2
    Max states per location:     72 (at node N3651)
  Number of reached functions:   35 (80%)
  Number of partitions:          3574
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6495 (before lines 9697-9919), Function INFTL_mount called from node N336, stack depth 3 [2b74f3f8], stack [main, inftl_add_mtd, INFTL_mount]])
  Number of target states:       0

Time for analysis setup:          4.294s
  Time for loading CPAs:          0.773s
  Time for loading parser:        0.438s
  Time for CFA construction:      3.020s
    Time for parsing file(s):     0.710s
    Time for AST to CFA:          0.899s
    Time for CFA sanity check:    0.388s
    Time for post-processing:     0.921s
      Time for var class.:        0.356s
Time for Analysis:              107.537s
CPU time for analysis:          107.540s
Time for analyzing result:        0.003s
Total time for CPAchecker:      111.834s
Total CPU time for CPAchecker:  111.830s
Time for statistics:              0.118s

Time for Garbage Collector:      10.752s (in 151 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                872MB (   832 MiB) max;    366MB (   349 MiB) avg;    901MB (   859 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          1170MB (  1116 MiB) max;    557MB (   531 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8165MB (  7787 MiB) max;   8103MB (  7727 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
