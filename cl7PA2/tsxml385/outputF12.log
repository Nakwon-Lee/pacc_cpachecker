scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--inftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xhlokt61/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4666: Dead code detected: tmp___25 = silly2; (CFACreationUtils.addEdgeToCFA, INFO)

line 4668: Dead code detected: [!(tmp___25 == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4671: Dead code detected: Goto: while_break___0 (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2123: Function pointer *__cil_tmp15 with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2180: Function pointer *__cil_tmp19 with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2123: Ignoring call via function pointer mtd_read_oob::__cil_tmp15 for which no suitable target was found in line: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2123: Ignoring function call through function pointer *__cil_tmp15: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2180: Ignoring call via function pointer mtd_write_oob::__cil_tmp19 for which no suitable target was found in line: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2180: Ignoring function call through function pointer *__cil_tmp19: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            23754 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17744 (75%)
  Because of loop head:            5944 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (0%)
  Times precision was empty:       1151 (5%)
  Times precision was {false}:     878 (4%)
  Times result was cached:         21203 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      522 (2%)
  Times result was 'false':        218 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         24909
  BDD entailment checks:           6421
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       367
Number of predicates discovered:          4
Number of abstraction locations:          179
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         23113
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 16.51
Number of irrelevant predicates:          3210 (14%)
Number of preds handled by boolean abs:   525 (2%)
  Total number of models for allsat:      523
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  6.192s
  Time for path formula creation:        6.006s
Time for strengthen operator:            0.392s
Time for prec operator:                  9.446s
  Time for abstraction:                  8.901s (Max:     0.231s, Count: 23754)
    Boolean abstraction:                 1.158s
    Solving time:                        3.373s (Max:     0.216s)
    Model enumeration time:              0.091s
    Time for BDD construction:           0.044s (Max:     0.009s)
Time for merge operator:                 0.467s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     3.464s

Number of path formula cache hits:   454046 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.466s

Total number of created targets for pointer analysis: 7980
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *unsigned_long_int is 59


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1054 (count: 15130, min: 0, max: 109, avg: 0.07)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.618s
  Time for transition matches:                         0.372s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       482923 (count: 482923, min: 1, max: 1, avg: 1.00) [1 x 482923]

CPA algorithm statistics
------------------------
Number of iterations:            124349
Max size of waitlist:            21
Average size of waitlist:        6
Number of computed successors:   140392
Max successors for one state:    2
Number of times merged:          9244
Number of times stopped:         15106
Number of times breaked:         66

Total time for CPA algorithm:        21.980s (Max:     1.322s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:     10.220s
  Time for transfer relation:         9.923s
  Time for merge operator:            0.663s
  Time for stop operator:             0.264s
  Time for adding to reached set:     0.176s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   66
Avg. length of target path (in blocks):                3226 (count: 66, min: 5, max: 99, avg: 48.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.938s
  Counterexample analysis:                             2.478s (Max:     0.144s, Calls: 66)
    Refinement sat check:                              1.904s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.059s
  Precision update:                                    0.046s
  ARG update:                                          0.285s

Length of refined path (in blocks):                    3088 (count: 66, min: 4, max: 98, avg: 46.79)
Number of affected states:                             2986 (count: 66, min: 1, max: 97, avg: 45.24)
Length (states) of path with itp 'true':                 36 (count: 66, min: 0, max: 26, avg: 0.55)
Length (states) of path with itp non-trivial itp:      2986 (count: 66, min: 1, max: 97, avg: 45.24)
Length (states) of path with itp 'false':                66 (count: 66, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 66, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2920 (count: 66, min: 0, max: 96, avg: 44.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                66
Number of successful refinements:     66
Number of failed refinements:         0
Max. size of reached set before ref.: 3656
Max. size of reached set after ref.:  1872
Avg. size of reached set before ref.: 1875.33
Avg. size of reached set after ref.:  34.53

Total time for CEGAR algorithm:      25.142s
Time for refinements:                 3.152s
Average time for refinement:          0.047s
Max time for refinement:              0.161s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          6352
  Total lines:            6399
  Line coverage:          0.993
  Visited conditions:     494
  Total conditions:       514
  Condition coverage:     0.961

CPAchecker general statistics
-----------------------------
Number of program locations:     7008
Number of CFA edges:             7336
Number of relevant variables:    2199
Number of functions:             44
Number of loops:                 39
Size of reached set:             3576
  Number of reached locations:   1627 (23%)
    Avg states per location:     2
    Max states per location:     72 (at node N3651)
  Number of reached functions:   35 (80%)
  Number of partitions:          3574
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1947 (before lines 4308-4412), Function INFTL_findwriteunit called from node N3134, stack depth 3 [5112b9e0], stack [main, inftl_writeblock, INFTL_findwriteunit]])
  Number of target states:       0

Time for analysis setup:          4.096s
  Time for loading CPAs:          0.625s
  Time for loading parser:        0.418s
  Time for CFA construction:      2.948s
    Time for parsing file(s):     0.798s
    Time for AST to CFA:          0.864s
    Time for CFA sanity check:    0.353s
    Time for post-processing:     0.818s
      Time for var class.:        0.410s
Time for Analysis:               25.142s
CPU time for analysis:           25.150s
Time for analyzing result:        0.003s
Total time for CPAchecker:       29.241s
Total CPU time for CPAchecker:   29.230s
Time for statistics:              0.127s

Time for Garbage Collector:       0.826s (in 105 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                103MB (    99 MiB) max;     61MB (    58 MiB) avg;    106MB (   101 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8011MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
