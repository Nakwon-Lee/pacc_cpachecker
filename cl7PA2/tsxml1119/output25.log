scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--ftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_64jeul03/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2987: Function pointer *__cil_tmp6 with type void (*)(struct mtd_info *mtd) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2987: Ignoring call via function pointer mtd_sync::__cil_tmp6 for which no suitable target was found in line: (*__cil_tmp6)(mtd); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2987: Ignoring function call through function pointer *__cil_tmp6: (*__cil_tmp6)(mtd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6636 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5177 (78%)
  Because of loop head:            1418 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (1%)
  Times precision was empty:       748 (11%)
  Times precision was {false}:     182 (3%)
  Times result was cached:         5408 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      298 (4%)
  Times result was 'false':        319 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         6306
  BDD entailment checks:           2398
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       387
Number of predicates discovered:          3
Number of abstraction locations:          93
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         8045
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 16.76
Number of irrelevant predicates:          2655 (33%)
Number of preds handled by boolean abs:   329 (4%)
  Total number of models for allsat:      287
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.96

Time for post operator:                  1.762s
  Time for path formula creation:        1.719s
Time for strengthen operator:            0.132s
Time for prec operator:                  3.146s
  Time for abstraction:                  2.935s (Max:     0.033s, Count: 6636)
    Boolean abstraction:                 0.677s
    Solving time:                        0.819s (Max:     0.022s)
    Model enumeration time:              0.051s
    Time for BDD construction:           0.029s (Max:     0.010s)
Time for merge operator:                 0.124s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.870s

Number of path formula cache hits:   115470 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.397s

Total number of created targets for pointer analysis: 69
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *unsigned_int is 4
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         596 (count: 5988, min: 0, max: 59, avg: 0.10)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.315s
Automaton transfers with branching:                0
Automaton transfer successors:                       119731 (count: 119731, min: 1, max: 1, avg: 1.00) [1 x 119731]

CPA algorithm statistics
------------------------
Number of iterations:            34010
Max size of waitlist:            18
Average size of waitlist:        6
Number of computed successors:   38407
Max successors for one state:    2
Number of times merged:          1954
Number of times stopped:         3650
Number of times breaked:         41

Total time for CPA algorithm:         8.206s (Max:     0.344s)
  Time for choose from waitlist:      0.061s
  Time for precision adjustment:      3.633s
  Time for transfer relation:         3.616s
  Time for merge operator:            0.183s
  Time for stop operator:             0.163s
  Time for adding to reached set:     0.151s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                 977 (count: 41, min: 5, max: 37, avg: 23.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.931s
  Counterexample analysis:                             0.727s (Max:     0.042s, Calls: 41)
    Refinement sat check:                              0.524s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.012s
  ARG update:                                          0.112s

Length of refined path (in blocks):                     900 (count: 41, min: 4, max: 36, avg: 21.95)
Number of affected states:                              817 (count: 41, min: 1, max: 35, avg: 19.93)
Length (states) of path with itp 'true':                 42 (count: 41, min: 0, max: 14, avg: 1.02)
Length (states) of path with itp non-trivial itp:       817 (count: 41, min: 1, max: 35, avg: 19.93)
Length (states) of path with itp 'false':                41 (count: 41, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 41, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             776 (count: 41, min: 0, max: 34, avg: 18.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 1616
Max. size of reached set after ref.:  552
Avg. size of reached set before ref.: 846.07
Avg. size of reached set after ref.:  43.17

Total time for CEGAR algorithm:       9.225s
Time for refinements:                 1.017s
Average time for refinement:          0.024s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.714
  Visited lines:          4030
  Total lines:            4176
  Line coverage:          0.965
  Visited conditions:     268
  Total conditions:       296
  Condition coverage:     0.905

CPAchecker general statistics
-----------------------------
Number of program locations:     4550
Number of CFA edges:             4723
Number of relevant variables:    1488
Number of functions:             35
Number of loops:                 19
Size of reached set:             1520
  Number of reached locations:   852 (19%)
    Avg states per location:     1
    Max states per location:     47 (at node N4173)
  Number of reached functions:   25 (71%)
  Number of partitions:          1515
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2301 (before lines 5591-5835), Function reclaim_block called from node N3409, stack depth 4 [4c05993e], stack [main, ftl_writesect, ftl_write, reclaim_block]])
  Number of target states:       0

Time for analysis setup:          3.794s
  Time for loading CPAs:          0.775s
  Time for loading parser:        0.414s
  Time for CFA construction:      2.493s
    Time for parsing file(s):     0.601s
    Time for AST to CFA:          0.785s
    Time for CFA sanity check:    0.202s
    Time for post-processing:     0.748s
      Time for var class.:        0.351s
Time for Analysis:                9.225s
CPU time for analysis:            9.230s
Time for analyzing result:        0.002s
Total time for CPAchecker:       13.022s
Total CPU time for CPAchecker:   13.020s
Time for statistics:              0.092s

Time for Garbage Collector:       0.310s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     45MB (    43 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8067MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
