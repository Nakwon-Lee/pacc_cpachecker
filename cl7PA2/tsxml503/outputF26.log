scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-vp7045.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_izgwy2n3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5212 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4338 (83%)
  Because of loop head:            816 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         58 (1%)
  Times precision was empty:       988 (19%)
  Times precision was {false}:     142 (3%)
  Times result was cached:         3974 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      108 (2%)
  Times result was 'false':        463 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         5783
  BDD entailment checks:           1139
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       90
Number of predicates discovered:          4
Number of abstraction locations:          47
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         4562
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 18.25
Number of irrelevant predicates:          1475 (32%)
Number of preds handled by boolean abs:   121 (3%)
  Total number of models for allsat:      115
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  1.769s
  Time for path formula creation:        1.669s
Time for strengthen operator:            0.119s
Time for prec operator:                  2.066s
  Time for abstraction:                  1.841s (Max:     0.027s, Count: 5212)
    Boolean abstraction:                 0.160s
    Solving time:                        0.420s (Max:     0.025s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.050s (Max:     0.010s)
Time for merge operator:                 0.092s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.426s

Number of path formula cache hits:   85356 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.461s

Total number of created targets for pointer analysis: 1227
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 116


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         235 (count: 3500, min: 0, max: 28, avg: 0.07)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.312s
Automaton transfers with branching:                0
Automaton transfer successors:                        92016 (count: 92016, min: 1, max: 1, avg: 1.00) [1 x 92016]

CPA algorithm statistics
------------------------
Number of iterations:            30237
Max size of waitlist:            40
Average size of waitlist:        15
Number of computed successors:   34411
Max successors for one state:    2
Number of times merged:          2322
Number of times stopped:         3150
Number of times breaked:         58

Total time for CPA algorithm:         6.547s (Max:     0.758s)
  Time for choose from waitlist:      0.073s
  Time for precision adjustment:      2.485s
  Time for transfer relation:         3.330s
  Time for merge operator:            0.206s
  Time for stop operator:             0.137s
  Time for adding to reached set:     0.065s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   58
Avg. length of target path (in blocks):                 807 (count: 58, min: 4, max: 25, avg: 13.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.164s
  Counterexample analysis:                             0.907s (Max:     0.036s, Calls: 58)
    Refinement sat check:                              0.679s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.033s
  ARG update:                                          0.114s

Length of refined path (in blocks):                     749 (count: 58, min: 3, max: 24, avg: 12.91)
Number of affected states:                              447 (count: 58, min: 2, max: 23, avg: 7.71)
Length (states) of path with itp 'true':                244 (count: 58, min: 0, max: 10, avg: 4.21)
Length (states) of path with itp non-trivial itp:       447 (count: 58, min: 2, max: 23, avg: 7.71)
Length (states) of path with itp 'false':                58 (count: 58, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          58 (count: 58, min: 0, max: 6, avg: 1.00)
Equal non-trivial interpolants along paths:             331 (count: 58, min: 1, max: 16, avg: 5.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                58
Number of successful refinements:     58
Number of failed refinements:         0
Max. size of reached set before ref.: 2239
Max. size of reached set after ref.:  1850
Avg. size of reached set before ref.: 1166.16
Avg. size of reached set after ref.:  671.84

Total time for CEGAR algorithm:       7.965s
Time for refinements:                 1.365s
Average time for refinement:          0.023s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.447
  Visited lines:          1721
  Total lines:            2193
  Line coverage:          0.785
  Visited conditions:     86
  Total conditions:       144
  Condition coverage:     0.597

CPAchecker general statistics
-----------------------------
Number of program locations:     2443
Number of CFA edges:             2530
Number of relevant variables:    457
Number of functions:             38
Number of loops:                 7
Size of reached set:             2129
  Number of reached locations:   319 (13%)
    Avg states per location:     6
    Max states per location:     36 (at node N325)
  Number of reached functions:   17 (45%)
  Number of partitions:          2129
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.203s
  Time for loading CPAs:          0.817s
  Time for loading parser:        0.532s
  Time for CFA construction:      2.737s
    Time for parsing file(s):     0.751s
    Time for AST to CFA:          0.915s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.687s
      Time for var class.:        0.293s
Time for Analysis:                7.967s
CPU time for analysis:            7.960s
Time for analyzing result:        0.009s
Total time for CPAchecker:       12.172s
Total CPU time for CPAchecker:   12.150s
Time for statistics:              0.127s

Time for Garbage Collector:       0.330s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     45MB (    42 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8061MB (  7688 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
