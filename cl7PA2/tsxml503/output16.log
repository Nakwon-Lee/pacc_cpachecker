scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-vp7045.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__5jhlecv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8318 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6995 (84%)
  Because of loop head:            1080 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         243 (3%)
  Times precision was empty:       1349 (16%)
  Times precision was {false}:     107 (1%)
  Times result was cached:         6752 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      110 (1%)
  Times result was 'false':        506 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         7281
  BDD entailment checks:           2607
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       90
Number of predicates discovered:          4
Number of abstraction locations:          47
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         7360
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 33.92
Number of irrelevant predicates:          3865 (53%)
Number of preds handled by boolean abs:   126 (2%)
  Total number of models for allsat:      119
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  1.546s
  Time for path formula creation:        1.499s
Time for strengthen operator:            0.125s
Time for prec operator:                  1.810s
  Time for abstraction:                  1.565s (Max:     0.025s, Count: 8318)
    Boolean abstraction:                 0.186s
    Solving time:                        0.241s (Max:     0.013s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.019s (Max:     0.007s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.249s

Number of path formula cache hits:   91016 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.250s

Total number of created targets for pointer analysis: 443
   Number of created targets for uf: *signed_int is 19
   Number of created targets for uf: *unsigned_char is 6


Number of BDD nodes:                               210
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         251 (count: 5170, min: 0, max: 88, avg: 0.05)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.307s
Automaton transfers with branching:                0
Automaton transfer successors:                        92763 (count: 92763, min: 1, max: 1, avg: 1.00) [1 x 92763]

CPA algorithm statistics
------------------------
Number of iterations:            41356
Max size of waitlist:            22
Average size of waitlist:        9
Number of computed successors:   47067
Max successors for one state:    2
Number of times merged:          2337
Number of times stopped:         3564
Number of times breaked:         243

Total time for CPA algorithm:         5.837s (Max:     0.557s)
  Time for choose from waitlist:      0.067s
  Time for precision adjustment:      2.195s
  Time for transfer relation:         2.947s
  Time for merge operator:            0.120s
  Time for stop operator:             0.102s
  Time for adding to reached set:     0.151s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   243
Avg. length of target path (in blocks):                4826 (count: 243, min: 4, max: 33, avg: 19.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.725s
  Counterexample analysis:                             3.272s (Max:     0.034s, Calls: 243)
    Refinement sat check:                              2.365s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.101s
  Precision update:                                    0.112s
  ARG update:                                          0.127s

Length of refined path (in blocks):                    4583 (count: 243, min: 3, max: 32, avg: 18.86)
Number of affected states:                             1577 (count: 243, min: 2, max: 23, avg: 6.49)
Length (states) of path with itp 'true':               2763 (count: 243, min: 0, max: 25, avg: 11.37)
Length (states) of path with itp non-trivial itp:      1577 (count: 243, min: 2, max: 23, avg: 6.49)
Length (states) of path with itp 'false':               243 (count: 243, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          85 (count: 243, min: 0, max: 6, avg: 0.35)
Equal non-trivial interpolants along paths:            1249 (count: 243, min: 1, max: 16, avg: 5.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                243
Number of successful refinements:     243
Number of failed refinements:         0
Max. size of reached set before ref.: 2225
Max. size of reached set after ref.:  2129
Avg. size of reached set before ref.: 952.01
Avg. size of reached set after ref.:  783.83

Total time for CEGAR algorithm:       9.992s
Time for refinements:                 4.064s
Average time for refinement:          0.016s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.447
  Visited lines:          1721
  Total lines:            2193
  Line coverage:          0.785
  Visited conditions:     86
  Total conditions:       144
  Condition coverage:     0.597

CPAchecker general statistics
-----------------------------
Number of program locations:     2443
Number of CFA edges:             2530
Number of relevant variables:    457
Number of functions:             38
Number of loops:                 7
Size of reached set:             2129
  Number of reached locations:   319 (13%)
    Avg states per location:     6
    Max states per location:     36 (at node N325)
  Number of reached functions:   17 (45%)
  Number of partitions:          2129
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.921s
  Time for loading CPAs:          0.713s
  Time for loading parser:        0.547s
  Time for CFA construction:      2.584s
    Time for parsing file(s):     0.726s
    Time for AST to CFA:          0.896s
    Time for CFA sanity check:    0.171s
    Time for post-processing:     0.609s
      Time for var class.:        0.283s
Time for Analysis:                9.992s
CPU time for analysis:           10.000s
Time for analyzing result:        0.005s
Total time for CPAchecker:       13.916s
Total CPU time for CPAchecker:   13.900s
Time for statistics:              0.083s

Time for Garbage Collector:       0.299s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     44MB (    42 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    31 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8064MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
