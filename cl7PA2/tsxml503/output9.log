scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-vp7045.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rvv8f3c6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9922 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8336 (84%)
  Because of loop head:            1273 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         313 (3%)
  Times precision was empty:       1741 (18%)
  Times precision was {false}:     107 (1%)
  Times result was cached:         7964 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      110 (1%)
  Times result was 'false':        548 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         8453
  BDD entailment checks:           3209
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       90
Number of predicates discovered:          4
Number of abstraction locations:          47
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         8605
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 39.65
Number of irrelevant predicates:          4810 (56%)
Number of preds handled by boolean abs:   126 (1%)
  Total number of models for allsat:      119
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  1.522s
  Time for path formula creation:        1.472s
Time for strengthen operator:            0.133s
Time for prec operator:                  1.905s
  Time for abstraction:                  1.691s (Max:     0.022s, Count: 9922)
    Boolean abstraction:                 0.130s
    Solving time:                        0.167s (Max:     0.015s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.015s (Max:     0.009s)
Time for merge operator:                 0.077s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.173s

Number of path formula cache hits:   103413 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.232s

Total number of created targets for pointer analysis: 443
   Number of created targets for uf: *signed_int is 19
   Number of created targets for uf: *unsigned_char is 6


Number of BDD nodes:                               210
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         249 (count: 6164, min: 0, max: 78, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.335s
Automaton transfers with branching:                0
Automaton transfer successors:                       103333 (count: 103333, min: 1, max: 1, avg: 1.00) [1 x 103333]

CPA algorithm statistics
------------------------
Number of iterations:            48685
Max size of waitlist:            21
Average size of waitlist:        9
Number of computed successors:   55507
Max successors for one state:    2
Number of times merged:          2622
Number of times stopped:         4057
Number of times breaked:         313

Total time for CPA algorithm:         6.160s (Max:     0.533s)
  Time for choose from waitlist:      0.054s
  Time for precision adjustment:      2.322s
  Time for transfer relation:         3.073s
  Time for merge operator:            0.188s
  Time for stop operator:             0.139s
  Time for adding to reached set:     0.120s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   313
Avg. length of target path (in blocks):                5773 (count: 313, min: 4, max: 33, avg: 18.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.840s
  Counterexample analysis:                             4.266s (Max:     0.034s, Calls: 313)
    Refinement sat check:                              3.294s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.139s
  ARG update:                                          0.220s

Length of refined path (in blocks):                    5460 (count: 313, min: 3, max: 32, avg: 17.44)
Number of affected states:                             1940 (count: 313, min: 2, max: 23, avg: 6.20)
Length (states) of path with itp 'true':               3207 (count: 313, min: 0, max: 25, avg: 10.25)
Length (states) of path with itp non-trivial itp:      1940 (count: 313, min: 2, max: 23, avg: 6.20)
Length (states) of path with itp 'false':               313 (count: 313, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         106 (count: 313, min: 0, max: 6, avg: 0.34)
Equal non-trivial interpolants along paths:            1521 (count: 313, min: 1, max: 16, avg: 4.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                313
Number of successful refinements:     313
Number of failed refinements:         0
Max. size of reached set before ref.: 2266
Max. size of reached set after ref.:  2137
Avg. size of reached set before ref.: 822.79
Avg. size of reached set after ref.:  666.96

Total time for CEGAR algorithm:      11.480s
Time for refinements:                 5.154s
Average time for refinement:          0.016s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.447
  Visited lines:          1721
  Total lines:            2193
  Line coverage:          0.785
  Visited conditions:     86
  Total conditions:       144
  Condition coverage:     0.597

CPAchecker general statistics
-----------------------------
Number of program locations:     2443
Number of CFA edges:             2530
Number of relevant variables:    457
Number of functions:             38
Number of loops:                 7
Size of reached set:             2129
  Number of reached locations:   319 (13%)
    Avg states per location:     6
    Max states per location:     36 (at node N325)
  Number of reached functions:   17 (45%)
  Number of partitions:          2129
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.510s
  Time for loading CPAs:          0.608s
  Time for loading parser:        0.442s
  Time for CFA construction:      2.379s
    Time for parsing file(s):     0.713s
    Time for AST to CFA:          0.845s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.517s
      Time for var class.:        0.255s
Time for Analysis:               11.481s
CPU time for analysis:           11.480s
Time for analyzing result:        0.002s
Total time for CPAchecker:       14.994s
Total CPU time for CPAchecker:   14.990s
Time for statistics:              0.118s

Time for Garbage Collector:       0.272s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     47MB (    45 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     33MB (    31 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
