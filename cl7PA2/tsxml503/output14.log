scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-vp7045.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_eo51q_nf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12112 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9610 (79%)
  Because of loop head:            2223 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         279 (2%)
  Times precision was empty:       2336 (19%)
  Times precision was {false}:     155 (1%)
  Times result was cached:         9466 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      155 (1%)
  Times result was 'false':        202 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         11728
  BDD entailment checks:           6096
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       90
Number of predicates discovered:          4
Number of abstraction locations:          47
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         9979
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 32.19
Number of irrelevant predicates:          8094 (81%)
Number of preds handled by boolean abs:   173 (2%)
  Total number of models for allsat:      168
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  2.834s
  Time for path formula creation:        2.743s
Time for strengthen operator:            0.187s
Time for prec operator:                  2.489s
  Time for abstraction:                  2.319s (Max:     0.026s, Count: 12112)
    Boolean abstraction:                 0.207s
    Solving time:                        0.406s (Max:     0.025s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.013s (Max:     0.006s)
Time for merge operator:                 0.140s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.422s

Number of path formula cache hits:   149726 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.342s

Total number of created targets for pointer analysis: 3505
   Number of created targets for uf: *signed_int is 31
   Number of created targets for uf: *unsigned_char is 416


Number of BDD nodes:                               210
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         343 (count: 10156, min: 0, max: 44, avg: 0.03)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.406s
Automaton transfers with branching:                0
Automaton transfer successors:                       164551 (count: 164551, min: 1, max: 1, avg: 1.00) [1 x 164551]

CPA algorithm statistics
------------------------
Number of iterations:            56133
Max size of waitlist:            70
Average size of waitlist:        27
Number of computed successors:   63352
Max successors for one state:    2
Number of times merged:          2816
Number of times stopped:         5279
Number of times breaked:         279

Total time for CPA algorithm:         8.811s (Max:     0.709s)
  Time for choose from waitlist:      0.061s
  Time for precision adjustment:      3.077s
  Time for transfer relation:         4.843s
  Time for merge operator:            0.262s
  Time for stop operator:             0.156s
  Time for adding to reached set:     0.120s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   279
Avg. length of target path (in blocks):                6490 (count: 279, min: 4, max: 38, avg: 23.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.809s
  Counterexample analysis:                             4.254s (Max:     0.050s, Calls: 279)
    Refinement sat check:                              3.237s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.131s
  Precision update:                                    0.125s
  ARG update:                                          0.156s

Length of refined path (in blocks):                    6211 (count: 279, min: 3, max: 37, avg: 22.26)
Number of affected states:                             1679 (count: 279, min: 2, max: 23, avg: 6.02)
Length (states) of path with itp 'true':               4253 (count: 279, min: 0, max: 30, avg: 15.24)
Length (states) of path with itp non-trivial itp:      1679 (count: 279, min: 2, max: 23, avg: 6.02)
Length (states) of path with itp 'false':               279 (count: 279, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          57 (count: 279, min: 0, max: 6, avg: 0.20)
Equal non-trivial interpolants along paths:            1343 (count: 279, min: 1, max: 16, avg: 4.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                279
Number of successful refinements:     279
Number of failed refinements:         0
Max. size of reached set before ref.: 3362
Max. size of reached set after ref.:  3188
Avg. size of reached set before ref.: 1826.69
Avg. size of reached set after ref.:  1626.90

Total time for CEGAR algorithm:      14.511s
Time for refinements:                 5.355s
Average time for refinement:          0.019s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.447
  Visited lines:          1721
  Total lines:            2193
  Line coverage:          0.785
  Visited conditions:     86
  Total conditions:       144
  Condition coverage:     0.597

CPAchecker general statistics
-----------------------------
Number of program locations:     2443
Number of CFA edges:             2530
Number of relevant variables:    457
Number of functions:             38
Number of loops:                 7
Size of reached set:             2129
  Number of reached locations:   319 (13%)
    Avg states per location:     6
    Max states per location:     36 (at node N325)
  Number of reached functions:   17 (45%)
  Number of partitions:          2129
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.827s
  Time for loading CPAs:          0.706s
  Time for loading parser:        0.474s
  Time for CFA construction:      2.545s
    Time for parsing file(s):     0.768s
    Time for AST to CFA:          0.818s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.600s
      Time for var class.:        0.267s
Time for Analysis:               14.512s
CPU time for analysis:           14.510s
Time for analyzing result:        0.001s
Total time for CPAchecker:       18.342s
Total CPU time for CPAchecker:   18.330s
Time for statistics:              0.077s

Time for Garbage Collector:       0.469s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     50MB (    48 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
