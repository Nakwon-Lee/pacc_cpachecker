scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--pmbus--max8688.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_108adr6a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pmbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pmbus_do_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            178 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  131 (74%)
  Because of loop head:            42 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (3%)
  Times precision was empty:       79 (44%)
  Times precision was {false}:     17 (10%)
  Times result was cached:         68 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (8%)
  Times result was 'false':        7 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         636
  BDD entailment checks:           76
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         99
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.19
Number of irrelevant predicates:          52 (53%)
Number of preds handled by boolean abs:   14 (14%)
  Total number of models for allsat:      14
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.429s
  Time for path formula creation:        0.398s
Time for strengthen operator:            0.027s
Time for prec operator:                  0.187s
  Time for abstraction:                  0.176s (Max:     0.022s, Count: 178)
    Boolean abstraction:                 0.066s
    Solving time:                        0.073s (Max:     0.021s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.023s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.081s

Number of path formula cache hits:   1878 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.384s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          27 (count: 329, min: 0, max: 27, avg: 0.08)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.056s
Automaton transfers with branching:                0
Automaton transfer successors:                         3665 (count: 3665, min: 1, max: 1, avg: 1.00) [1 x 3665]

CPA algorithm statistics
------------------------
Number of iterations:            1907
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   2255
Max successors for one state:    2
Number of times merged:          280
Number of times stopped:         333
Number of times breaked:         5

Total time for CPA algorithm:         1.175s (Max:     0.459s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      0.265s
  Time for transfer relation:         0.738s
  Time for merge operator:            0.040s
  Time for stop operator:             0.041s
  Time for adding to reached set:     0.032s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  31 (count: 5, min: 4, max: 7, avg: 6.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.055s
  Counterexample analysis:                             0.023s (Max:     0.010s, Calls: 5)
    Refinement sat check:                              0.015s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.007s
  ARG update:                                          0.018s

Length of refined path (in blocks):                      26 (count: 5, min: 3, max: 6, avg: 5.20)
Number of affected states:                               21 (count: 5, min: 2, max: 5, avg: 4.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        21 (count: 5, min: 2, max: 5, avg: 4.20)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              16 (count: 5, min: 1, max: 4, avg: 3.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 397
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 346.20
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.269s
Time for refinements:                 0.094s
Average time for refinement:          0.018s
Max time for refinement:              0.027s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          630
  Total lines:            683
  Line coverage:          0.922
  Visited conditions:     70
  Total conditions:       90
  Condition coverage:     0.778

CPAchecker general statistics
-----------------------------
Number of program locations:     799
Number of CFA edges:             840
Number of relevant variables:    47
Number of functions:             18
Number of loops:                 1
Size of reached set:             200
  Number of reached locations:   184 (23%)
    Avg states per location:     1
    Max states per location:     5 (at node N332)
  Number of reached functions:   6 (33%)
  Number of partitions:          200
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.544s
  Time for loading CPAs:          0.585s
  Time for loading parser:        0.453s
  Time for CFA construction:      1.339s
    Time for parsing file(s):     0.495s
    Time for AST to CFA:          0.375s
    Time for CFA sanity check:    0.064s
    Time for post-processing:     0.305s
      Time for var class.:        0.116s
Time for Analysis:                1.269s
CPU time for analysis:            1.270s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.815s
Total CPU time for CPAchecker:    3.810s
Time for statistics:              0.065s

Time for Garbage Collector:       0.098s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    52 MiB) max;     30MB (    29 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7971MB (  7601 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
