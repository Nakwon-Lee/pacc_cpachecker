scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--ttpci--budget-patch.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hthv55cy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7172: Function pointer *__cil_tmp55 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8242: Function pointer *__cil_tmp65 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8630: Function pointer *__a with type struct dvb_frontend *(*)(const struct ves1x93_config *config, struct i2c_adapter *i2c) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8714: Function pointer *__a___0 with type struct dvb_frontend *(*)(const struct stv0299_config *config, struct i2c_adapter *i2c) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8807: Function pointer *__a___1 with type struct dvb_frontend *(*)(const struct tda8083_config *config, struct i2c_adapter *i2c) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8359: Function pointer *__cil_tmp42 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6923: Function pointer *__cil_tmp16 with type int (*)(struct dvb_frontend *fe, u8 *buf, int len) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function saa7146_register_extension to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_frontend_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function saa7146_unregister_extension to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function saa7146_setgpio to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ttpci_budget_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8630: Ignoring call via function pointer frontend_init::__a for which no suitable target was found in line: tmp___11 = (*__a)(__cil_tmp34, __cil_tmp37); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8630: Ignoring function call through function pointer *__a: tmp___11 = (*__a)(__cil_tmp34, __cil_tmp37); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8714: Ignoring call via function pointer frontend_init::__a___0 for which no suitable target was found in line: tmp___16 = (*__a___0)(__cil_tmp71, __cil_tmp74); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8714: Ignoring function call through function pointer *__a___0: tmp___16 = (*__a___0)(__cil_tmp71, __cil_tmp74); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8807: Ignoring call via function pointer frontend_init::__a___1 for which no suitable target was found in line: tmp___21 = (*__a___1)(__cil_tmp116, __cil_tmp119); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8807: Ignoring function call through function pointer *__a___1: tmp___21 = (*__a___1)(__cil_tmp116, __cil_tmp119); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_register_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ttpci_budget_init_hooks to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            230 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  186 (81%)
  Because of loop head:            39 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (2%)
  Times precision was empty:       91 (40%)
  Times precision was {false}:     11 (5%)
  Times result was cached:         101 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27 (12%)
  Times result was 'false':        9 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         155
  BDD entailment checks:           49
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       295
Number of predicates discovered:          2
Number of abstraction locations:          28
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         139
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.66
Number of irrelevant predicates:          41 (29%)
Number of preds handled by boolean abs:   27 (19%)
  Total number of models for allsat:      27
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.679s
  Time for path formula creation:        0.667s
Time for strengthen operator:            0.028s
Time for prec operator:                  0.273s
  Time for abstraction:                  0.264s (Max:     0.055s, Count: 230)
    Boolean abstraction:                 0.097s
    Solving time:                        0.085s (Max:     0.036s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.056s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.091s

Number of path formula cache hits:   3063 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.640s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          21 (count: 362, min: 0, max: 21, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.046s
Automaton transfers with branching:                0
Automaton transfer successors:                         6107 (count: 6107, min: 1, max: 1, avg: 1.00) [1 x 6107]

CPA algorithm statistics
------------------------
Number of iterations:            1185
Max size of waitlist:            6
Average size of waitlist:        2
Number of computed successors:   1289
Max successors for one state:    2
Number of times merged:          53
Number of times stopped:         88
Number of times breaked:         5

Total time for CPA algorithm:         1.432s (Max:     0.509s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      0.366s
  Time for transfer relation:         0.910s
  Time for merge operator:            0.061s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  88 (count: 5, min: 5, max: 35, avg: 17.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.109s
  Counterexample analysis:                             0.063s (Max:     0.030s, Calls: 5)
    Refinement sat check:                              0.040s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.010s
  ARG update:                                          0.013s

Length of refined path (in blocks):                      83 (count: 5, min: 4, max: 34, avg: 16.60)
Number of affected states:                               78 (count: 5, min: 3, max: 33, avg: 15.60)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        78 (count: 5, min: 3, max: 33, avg: 15.60)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              73 (count: 5, min: 2, max: 32, avg: 14.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 365
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 180.20
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.570s
Time for refinements:                 0.137s
Average time for refinement:          0.027s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.263
  Visited lines:          2114
  Total lines:            3210
  Line coverage:          0.659
  Visited conditions:     58
  Total conditions:       176
  Condition coverage:     0.330

CPAchecker general statistics
-----------------------------
Number of program locations:     3519
Number of CFA edges:             3613
Number of relevant variables:    644
Number of functions:             38
Number of loops:                 10
Size of reached set:             307
  Number of reached locations:   274 (8%)
    Avg states per location:     1
    Max states per location:     8 (at node N8)
  Number of reached functions:   10 (26%)
  Number of partitions:          307
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.652s
  Time for loading CPAs:          0.683s
  Time for loading parser:        0.525s
  Time for CFA construction:      2.368s
    Time for parsing file(s):     0.642s
    Time for AST to CFA:          0.825s
    Time for CFA sanity check:    0.139s
    Time for post-processing:     0.560s
      Time for var class.:        0.258s
Time for Analysis:                1.570s
CPU time for analysis:            1.560s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.224s
Total CPU time for CPAchecker:    5.200s
Time for statistics:              0.047s

Time for Garbage Collector:       0.186s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     36MB (    34 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8033MB (  7661 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
