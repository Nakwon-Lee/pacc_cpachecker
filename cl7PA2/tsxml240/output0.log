scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--common--tuners--mt2131.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p3omdhc9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            608 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  491 (81%)
  Because of loop head:            109 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (1%)
  Times precision was empty:       244 (40%)
  Times precision was {false}:     97 (16%)
  Times result was cached:         226 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      41 (7%)
  Times result was 'false':        1 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1353
  BDD entailment checks:           179
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       181
Number of predicates discovered:          2
Number of abstraction locations:          28
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         364
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.64
Number of irrelevant predicates:          179 (49%)
Number of preds handled by boolean abs:   41 (11%)
  Total number of models for allsat:      41
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.661s
  Time for path formula creation:        1.630s
Time for strengthen operator:            0.017s
Time for prec operator:                  2.987s
  Time for abstraction:                  2.935s (Max:     0.731s, Count: 608)
    Boolean abstraction:                 0.240s
    Solving time:                        2.482s (Max:     0.723s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.048s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     2.501s

Number of path formula cache hits:   6280 (38%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.561s

Total number of created targets for pointer analysis: 8089
   Number of created targets for uf: *unsigned_char is 319


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          75 (count: 1159, min: 0, max: 32, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.125s
Automaton transfers with branching:                0
Automaton transfer successors:                        16005 (count: 16005, min: 1, max: 1, avg: 1.00) [1 x 16005]

CPA algorithm statistics
------------------------
Number of iterations:            4154
Max size of waitlist:            28
Average size of waitlist:        8
Number of computed successors:   4877
Max successors for one state:    2
Number of times merged:          587
Number of times stopped:         699
Number of times breaked:         8

Total time for CPA algorithm:         5.616s (Max:     1.216s)
  Time for choose from waitlist:      0.012s
  Time for precision adjustment:      3.125s
  Time for transfer relation:         2.185s
  Time for merge operator:            0.100s
  Time for stop operator:             0.052s
  Time for adding to reached set:     0.034s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  80 (count: 8, min: 4, max: 19, avg: 10.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.237s
  Counterexample analysis:                             0.202s (Max:     0.056s, Calls: 8)
    Refinement sat check:                              0.162s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.008s
  ARG update:                                          0.016s

Length of refined path (in blocks):                      72 (count: 8, min: 3, max: 18, avg: 9.00)
Number of affected states:                               64 (count: 8, min: 2, max: 17, avg: 8.00)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        64 (count: 8, min: 2, max: 17, avg: 8.00)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              56 (count: 8, min: 1, max: 16, avg: 7.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 623
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 485.75
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.883s
Time for refinements:                 0.267s
Average time for refinement:          0.033s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.476
  Visited lines:          1202
  Total lines:            1363
  Line coverage:          0.882
  Visited conditions:     94
  Total conditions:       126
  Condition coverage:     0.746

CPAchecker general statistics
-----------------------------
Number of program locations:     1521
Number of CFA edges:             1590
Number of relevant variables:    258
Number of functions:             21
Number of loops:                 2
Size of reached set:             316
  Number of reached locations:   247 (16%)
    Avg states per location:     1
    Max states per location:     6 (at node N859)
  Number of reached functions:   10 (48%)
  Number of partitions:          316
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.877s
  Time for loading CPAs:          0.604s
  Time for loading parser:        0.410s
  Time for CFA construction:      1.761s
    Time for parsing file(s):     0.547s
    Time for AST to CFA:          0.566s
    Time for CFA sanity check:    0.092s
    Time for post-processing:     0.390s
      Time for var class.:        0.198s
Time for Analysis:                5.888s
CPU time for analysis:            5.880s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.775s
Total CPU time for CPAchecker:    8.740s
Time for statistics:              0.053s

Time for Garbage Collector:       0.143s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8062MB (  7688 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
