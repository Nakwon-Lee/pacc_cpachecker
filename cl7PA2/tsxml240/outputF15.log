scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--common--tuners--mt2131.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ml3wzm1y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            439 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  355 (81%)
  Because of loop head:            76 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (2%)
  Times precision was empty:       189 (43%)
  Times precision was {false}:     44 (10%)
  Times result was cached:         165 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      41 (9%)
  Times result was 'false':        8 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1244
  BDD entailment checks:           102
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       181
Number of predicates discovered:          2
Number of abstraction locations:          28
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         250
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.94
Number of irrelevant predicates:          95 (38%)
Number of preds handled by boolean abs:   41 (16%)
  Total number of models for allsat:      41
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.093s
  Time for path formula creation:        1.078s
Time for strengthen operator:            0.034s
Time for prec operator:                  2.100s
  Time for abstraction:                  2.055s (Max:     0.428s, Count: 439)
    Boolean abstraction:                 0.550s
    Solving time:                        1.728s (Max:     0.414s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.041s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     1.747s

Number of path formula cache hits:   8457 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.028s

Total number of created targets for pointer analysis: 4014
   Number of created targets for uf: *unsigned_char is 319


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          65 (count: 762, min: 0, max: 34, avg: 0.09)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.065s
Automaton transfers with branching:                0
Automaton transfer successors:                        13223 (count: 13223, min: 1, max: 1, avg: 1.00) [1 x 13223]

CPA algorithm statistics
------------------------
Number of iterations:            3598
Max size of waitlist:            29
Average size of waitlist:        9
Number of computed successors:   4293
Max successors for one state:    2
Number of times merged:          571
Number of times stopped:         637
Number of times breaked:         8

Total time for CPA algorithm:         4.039s (Max:     1.001s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      2.250s
  Time for transfer relation:         1.513s
  Time for merge operator:            0.078s
  Time for stop operator:             0.077s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  80 (count: 8, min: 4, max: 19, avg: 10.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.193s
  Counterexample analysis:                             0.159s (Max:     0.043s, Calls: 8)
    Refinement sat check:                              0.119s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.001s
  ARG update:                                          0.018s

Length of refined path (in blocks):                      72 (count: 8, min: 3, max: 18, avg: 9.00)
Number of affected states:                               64 (count: 8, min: 2, max: 17, avg: 8.00)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        64 (count: 8, min: 2, max: 17, avg: 8.00)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              56 (count: 8, min: 1, max: 16, avg: 7.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 491
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 419.63
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.265s
Time for refinements:                 0.226s
Average time for refinement:          0.028s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.476
  Visited lines:          1202
  Total lines:            1363
  Line coverage:          0.882
  Visited conditions:     94
  Total conditions:       126
  Condition coverage:     0.746

CPAchecker general statistics
-----------------------------
Number of program locations:     1521
Number of CFA edges:             1590
Number of relevant variables:    258
Number of functions:             21
Number of loops:                 2
Size of reached set:             316
  Number of reached locations:   247 (16%)
    Avg states per location:     1
    Max states per location:     6 (at node N859)
  Number of reached functions:   10 (48%)
  Number of partitions:          316
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.107s
  Time for loading CPAs:          0.647s
  Time for loading parser:        0.496s
  Time for CFA construction:      1.886s
    Time for parsing file(s):     0.626s
    Time for AST to CFA:          0.624s
    Time for CFA sanity check:    0.097s
    Time for post-processing:     0.402s
      Time for var class.:        0.200s
Time for Analysis:                4.265s
CPU time for analysis:            4.270s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.375s
Total CPU time for CPAchecker:    7.370s
Time for statistics:              0.052s

Time for Garbage Collector:       0.117s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     38MB (    37 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
