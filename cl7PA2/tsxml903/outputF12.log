scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--power--max8903_charger_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_prcvret4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_changed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6034 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5812 (96%)
  Because of loop head:            193 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       2683 (44%)
  Times precision was {false}:     118 (2%)
  Times result was cached:         3089 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      144 (2%)
  Times result was 'false':        173 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         10584
  BDD entailment checks:           2582
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       197
Number of predicates discovered:          2
Number of abstraction locations:          47
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         3351
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 12.79
Number of irrelevant predicates:          934 (28%)
Number of preds handled by boolean abs:   144 (4%)
  Total number of models for allsat:      133
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.92

Time for post operator:                  1.692s
  Time for path formula creation:        1.622s
Time for strengthen operator:            0.118s
Time for prec operator:                  2.360s
  Time for abstraction:                  2.166s (Max:     0.029s, Count: 6034)
    Boolean abstraction:                 0.511s
    Solving time:                        0.577s (Max:     0.019s)
    Model enumeration time:              0.060s
    Time for BDD construction:           0.017s (Max:     0.007s)
Time for merge operator:                 0.084s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     0.637s

Number of path formula cache hits:   96380 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.349s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         275 (count: 6724, min: 0, max: 54, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.276s
Automaton transfers with branching:                0
Automaton transfer successors:                       101979 (count: 101979, min: 1, max: 1, avg: 1.00) [1 x 101979]

CPA algorithm statistics
------------------------
Number of iterations:            43001
Max size of waitlist:            25
Average size of waitlist:        11
Number of computed successors:   49479
Max successors for one state:    2
Number of times merged:          4001
Number of times stopped:         6155
Number of times breaked:         29

Total time for CPA algorithm:         6.964s (Max:     1.120s)
  Time for choose from waitlist:      0.067s
  Time for precision adjustment:      2.759s
  Time for transfer relation:         3.163s
  Time for merge operator:            0.250s
  Time for stop operator:             0.246s
  Time for adding to reached set:     0.100s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 578 (count: 29, min: 6, max: 31, avg: 19.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.653s
  Counterexample analysis:                             0.402s (Max:     0.032s, Calls: 29)
    Refinement sat check:                              0.270s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.016s
  ARG update:                                          0.188s

Length of refined path (in blocks):                     549 (count: 29, min: 5, max: 30, avg: 18.93)
Number of affected states:                              520 (count: 29, min: 4, max: 29, avg: 17.93)
Length (states) of path with itp 'true':                  0 (count: 29, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       520 (count: 29, min: 4, max: 29, avg: 17.93)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             491 (count: 29, min: 3, max: 28, avg: 16.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 1737
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1445.14
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       7.734s
Time for refinements:                 0.770s
Average time for refinement:          0.026s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          1274
  Total lines:            1389
  Line coverage:          0.917
  Visited conditions:     142
  Total conditions:       170
  Condition coverage:     0.835

CPAchecker general statistics
-----------------------------
Number of program locations:     1596
Number of CFA edges:             1700
Number of relevant variables:    391
Number of functions:             20
Number of loops:                 1
Size of reached set:             1330
  Number of reached locations:   424 (27%)
    Avg states per location:     3
    Max states per location:     26 (at node N25)
  Number of reached functions:   12 (60%)
  Number of partitions:          1330
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.896s
  Time for loading CPAs:          0.672s
  Time for loading parser:        0.473s
  Time for CFA construction:      1.678s
    Time for parsing file(s):     0.528s
    Time for AST to CFA:          0.515s
    Time for CFA sanity check:    0.139s
    Time for post-processing:     0.381s
      Time for var class.:        0.205s
Time for Analysis:                7.734s
CPU time for analysis:            7.740s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.633s
Total CPU time for CPAchecker:   10.630s
Time for statistics:              0.078s

Time for Garbage Collector:       0.247s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8063MB (  7690 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
