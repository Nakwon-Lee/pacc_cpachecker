scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--power--max8903_charger_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9rw6ao9x/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_changed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6181 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5916 (96%)
  Because of loop head:            236 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       2123 (34%)
  Times precision was {false}:     173 (3%)
  Times result was cached:         3748 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      137 (2%)
  Times result was 'false':        256 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         10616
  BDD entailment checks:           2662
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       197
Number of predicates discovered:          2
Number of abstraction locations:          47
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4058
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.09
Number of irrelevant predicates:          1523 (38%)
Number of preds handled by boolean abs:   137 (3%)
  Total number of models for allsat:      132
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                  1.692s
  Time for path formula creation:        1.597s
Time for strengthen operator:            0.169s
Time for prec operator:                  2.742s
  Time for abstraction:                  2.513s (Max:     0.030s, Count: 6181)
    Boolean abstraction:                 0.310s
    Solving time:                        0.547s (Max:     0.020s)
    Model enumeration time:              0.045s
    Time for BDD construction:           0.012s (Max:     0.007s)
Time for merge operator:                 0.117s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.592s

Number of path formula cache hits:   95986 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.348s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         266 (count: 6540, min: 0, max: 28, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.317s
Automaton transfers with branching:                0
Automaton transfer successors:                       107705 (count: 107705, min: 1, max: 1, avg: 1.00) [1 x 107705]

CPA algorithm statistics
------------------------
Number of iterations:            43404
Max size of waitlist:            24
Average size of waitlist:        11
Number of computed successors:   49865
Max successors for one state:    2
Number of times merged:          3977
Number of times stopped:         6090
Number of times breaked:         29

Total time for CPA algorithm:         7.540s (Max:     0.967s)
  Time for choose from waitlist:      0.094s
  Time for precision adjustment:      3.192s
  Time for transfer relation:         3.320s
  Time for merge operator:            0.244s
  Time for stop operator:             0.134s
  Time for adding to reached set:     0.129s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 528 (count: 29, min: 6, max: 27, avg: 18.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.638s
  Counterexample analysis:                             0.385s (Max:     0.031s, Calls: 29)
    Refinement sat check:                              0.234s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.046s
  ARG update:                                          0.151s

Length of refined path (in blocks):                     499 (count: 29, min: 5, max: 26, avg: 17.21)
Number of affected states:                              470 (count: 29, min: 4, max: 25, avg: 16.21)
Length (states) of path with itp 'true':                  0 (count: 29, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       470 (count: 29, min: 4, max: 25, avg: 16.21)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             441 (count: 29, min: 3, max: 24, avg: 15.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 1805
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1457.83
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.306s
Time for refinements:                 0.765s
Average time for refinement:          0.026s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          1274
  Total lines:            1389
  Line coverage:          0.917
  Visited conditions:     142
  Total conditions:       170
  Condition coverage:     0.835

CPAchecker general statistics
-----------------------------
Number of program locations:     1596
Number of CFA edges:             1700
Number of relevant variables:    391
Number of functions:             20
Number of loops:                 1
Size of reached set:             1330
  Number of reached locations:   424 (27%)
    Avg states per location:     3
    Max states per location:     26 (at node N25)
  Number of reached functions:   12 (60%)
  Number of partitions:          1330
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.629s
  Time for loading CPAs:          0.542s
  Time for loading parser:        0.538s
  Time for CFA construction:      1.465s
    Time for parsing file(s):     0.425s
    Time for AST to CFA:          0.493s
    Time for CFA sanity check:    0.124s
    Time for post-processing:     0.311s
      Time for var class.:        0.166s
Time for Analysis:                8.306s
CPU time for analysis:            8.310s
Time for analyzing result:        0.005s
Total time for CPAchecker:       10.938s
Total CPU time for CPAchecker:   10.930s
Time for statistics:              0.073s

Time for Garbage Collector:       0.288s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     43MB (    41 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7999MB (  7628 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
