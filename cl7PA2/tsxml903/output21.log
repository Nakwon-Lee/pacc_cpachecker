scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--power--max8903_charger_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ze1x_j36/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_changed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7321 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6987 (95%)
  Because of loop head:            305 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       2065 (28%)
  Times precision was {false}:     260 (4%)
  Times result was cached:         4857 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      139 (2%)
  Times result was 'false':        293 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         14355
  BDD entailment checks:           3809
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       197
Number of predicates discovered:          2
Number of abstraction locations:          47
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         5256
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.17
Number of irrelevant predicates:          2951 (56%)
Number of preds handled by boolean abs:   139 (3%)
  Total number of models for allsat:      133
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                  3.153s
  Time for path formula creation:        3.111s
Time for strengthen operator:            0.160s
Time for prec operator:                  3.880s
  Time for abstraction:                  3.581s (Max:     0.042s, Count: 7321)
    Boolean abstraction:                 0.467s
    Solving time:                        1.096s (Max:     0.024s)
    Model enumeration time:              0.036s
    Time for BDD construction:           0.028s (Max:     0.010s)
Time for merge operator:                 0.289s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     1.132s

Number of path formula cache hits:   102874 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.869s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         250 (count: 8059, min: 0, max: 28, avg: 0.03)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.486s
Automaton transfers with branching:                0
Automaton transfer successors:                       131722 (count: 131722, min: 1, max: 1, avg: 1.00) [1 x 131722]

CPA algorithm statistics
------------------------
Number of iterations:            54215
Max size of waitlist:            17
Average size of waitlist:        7
Number of computed successors:   62359
Max successors for one state:    2
Number of times merged:          5273
Number of times stopped:         7823
Number of times breaked:         29

Total time for CPA algorithm:        11.273s (Max:     0.993s)
  Time for choose from waitlist:      0.116s
  Time for precision adjustment:      4.464s
  Time for transfer relation:         5.314s
  Time for merge operator:            0.547s
  Time for stop operator:             0.216s
  Time for adding to reached set:     0.172s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 524 (count: 29, min: 6, max: 27, avg: 18.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.677s
  Counterexample analysis:                             0.381s (Max:     0.020s, Calls: 29)
    Refinement sat check:                              0.258s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.065s
  ARG update:                                          0.169s

Length of refined path (in blocks):                     495 (count: 29, min: 5, max: 26, avg: 17.07)
Number of affected states:                              466 (count: 29, min: 4, max: 25, avg: 16.07)
Length (states) of path with itp 'true':                  0 (count: 29, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       466 (count: 29, min: 4, max: 25, avg: 16.07)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             437 (count: 29, min: 3, max: 24, avg: 15.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 2211
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1827.62
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      12.120s
Time for refinements:                 0.845s
Average time for refinement:          0.029s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          1274
  Total lines:            1389
  Line coverage:          0.917
  Visited conditions:     142
  Total conditions:       170
  Condition coverage:     0.835

CPAchecker general statistics
-----------------------------
Number of program locations:     1596
Number of CFA edges:             1700
Number of relevant variables:    391
Number of functions:             20
Number of loops:                 1
Size of reached set:             1330
  Number of reached locations:   424 (27%)
    Avg states per location:     3
    Max states per location:     26 (at node N25)
  Number of reached functions:   12 (60%)
  Number of partitions:          1330
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.950s
  Time for loading CPAs:          0.594s
  Time for loading parser:        0.547s
  Time for CFA construction:      1.725s
    Time for parsing file(s):     0.531s
    Time for AST to CFA:          0.535s
    Time for CFA sanity check:    0.142s
    Time for post-processing:     0.374s
      Time for var class.:        0.205s
Time for Analysis:               12.120s
CPU time for analysis:           12.120s
Time for analyzing result:        0.001s
Total time for CPAchecker:       15.074s
Total CPU time for CPAchecker:   15.070s
Time for statistics:              0.099s

Time for Garbage Collector:       0.465s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     45MB (    43 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8067MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
