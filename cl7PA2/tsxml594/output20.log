scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--regulator--wm831x-dcdc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ipcpnr31/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_notifier_call_chain to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27328 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24516 (90%)
  Because of loop head:            2749 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       10261 (38%)
  Times precision was {false}:     354 (1%)
  Times result was cached:         16542 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      171 (1%)
  Times result was 'false':        181 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         37336
  BDD entailment checks:           9644
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       183
Number of predicates discovered:          2
Number of abstraction locations:          119
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         17067
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 32.51
Number of irrelevant predicates:          7966 (47%)
Number of preds handled by boolean abs:   171 (1%)
  Total number of models for allsat:      171
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.145s
  Time for path formula creation:        5.891s
Time for strengthen operator:            0.453s
Time for prec operator:                  4.816s
  Time for abstraction:                  4.441s (Max:     0.029s, Count: 27328)
    Boolean abstraction:                 0.262s
    Solving time:                        0.614s (Max:     0.015s)
    Model enumeration time:              0.036s
    Time for BDD construction:           0.014s (Max:     0.006s)
Time for merge operator:                 0.491s
Time for coverage check:                 0.064s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     0.650s

Number of path formula cache hits:   398581 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.970s

Total number of created targets for pointer analysis: 6
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         345 (count: 22735, min: 0, max: 24, avg: 0.02)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.976s
  Time for transition matches:                         0.440s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       482767 (count: 482767, min: 1, max: 1, avg: 1.00) [1 x 482767]

CPA algorithm statistics
------------------------
Number of iterations:            152736
Max size of waitlist:            82
Average size of waitlist:        41
Number of computed successors:   175160
Max successors for one state:    2
Number of times merged:          13846
Number of times stopped:         20823
Number of times breaked:         63

Total time for CPA algorithm:        19.558s (Max:     1.197s)
  Time for choose from waitlist:      0.103s
  Time for precision adjustment:      6.264s
  Time for transfer relation:        11.103s
  Time for merge operator:            0.778s
  Time for stop operator:             0.286s
  Time for adding to reached set:     0.286s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                 846 (count: 63, min: 5, max: 22, avg: 13.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.176s
  Counterexample analysis:                             0.664s (Max:     0.020s, Calls: 63)
    Refinement sat check:                              0.483s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.061s
  ARG update:                                          0.353s

Length of refined path (in blocks):                     783 (count: 63, min: 4, max: 21, avg: 12.43)
Number of affected states:                              720 (count: 63, min: 3, max: 20, avg: 11.43)
Length (states) of path with itp 'true':                  0 (count: 63, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       720 (count: 63, min: 3, max: 20, avg: 11.43)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 63, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             657 (count: 63, min: 2, max: 19, avg: 10.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 2970
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2425.90
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      20.967s
Time for refinements:                 1.401s
Average time for refinement:          0.022s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.741
  Visited lines:          3292
  Total lines:            3464
  Line coverage:          0.950
  Visited conditions:     310
  Total conditions:       332
  Condition coverage:     0.934

CPAchecker general statistics
-----------------------------
Number of program locations:     3854
Number of CFA edges:             4061
Number of relevant variables:    871
Number of functions:             54
Number of loops:                 3
Size of reached set:             1514
  Number of reached locations:   909 (24%)
    Avg states per location:     1
    Max states per location:     39 (at node N3217)
  Number of reached functions:   40 (74%)
  Number of partitions:          1514
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.873s
  Time for loading CPAs:          0.800s
  Time for loading parser:        0.524s
  Time for CFA construction:      2.457s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.769s
    Time for CFA sanity check:    0.240s
    Time for post-processing:     0.635s
      Time for var class.:        0.340s
Time for Analysis:               20.967s
CPU time for analysis:           20.960s
Time for analyzing result:        0.001s
Total time for CPAchecker:       24.842s
Total CPU time for CPAchecker:   24.820s
Time for statistics:              0.078s

Time for Garbage Collector:       1.059s (in 96 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                112MB (   107 MiB) max;     63MB (    60 MiB) avg;    118MB (   112 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8009MB (  7638 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
