scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--regulator--wm831x-dcdc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h_qs2z4i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_notifier_call_chain to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17693 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14890 (84%)
  Because of loop head:            2739 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         64 (0%)
  Times precision was empty:       2861 (16%)
  Times precision was {false}:     474 (3%)
  Times result was cached:         14186 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      172 (1%)
  Times result was 'false':        146 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         23298
  BDD entailment checks:           6248
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       183
Number of predicates discovered:          2
Number of abstraction locations:          119
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         14832
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 22.96
Number of irrelevant predicates:          5854 (39%)
Number of preds handled by boolean abs:   172 (1%)
  Total number of models for allsat:      171
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  4.471s
  Time for path formula creation:        4.299s
Time for strengthen operator:            0.193s
Time for prec operator:                  5.340s
  Time for abstraction:                  5.000s (Max:     0.029s, Count: 17693)
    Boolean abstraction:                 0.280s
    Solving time:                        0.876s (Max:     0.014s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.014s (Max:     0.006s)
Time for merge operator:                 0.421s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.891s

Number of path formula cache hits:   190746 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.714s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         342 (count: 12516, min: 0, max: 20, avg: 0.03)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.593s
  Time for transition matches:                         0.294s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       241010 (count: 241010, min: 1, max: 1, avg: 1.00) [1 x 241010]

CPA algorithm statistics
------------------------
Number of iterations:            95435
Max size of waitlist:            88
Average size of waitlist:        38
Number of computed successors:   111250
Max successors for one state:    2
Number of times merged:          8525
Number of times stopped:         12826
Number of times breaked:         64

Total time for CPA algorithm:        15.472s (Max:     0.624s)
  Time for choose from waitlist:      0.125s
  Time for precision adjustment:      6.275s
  Time for transfer relation:         7.461s
  Time for merge operator:            0.621s
  Time for stop operator:             0.197s
  Time for adding to reached set:     0.215s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   64
Avg. length of target path (in blocks):                 880 (count: 64, min: 5, max: 23, avg: 13.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.214s
  Counterexample analysis:                             0.777s (Max:     0.034s, Calls: 64)
    Refinement sat check:                              0.556s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.038s
  ARG update:                                          0.302s

Length of refined path (in blocks):                     816 (count: 64, min: 4, max: 22, avg: 12.75)
Number of affected states:                              752 (count: 64, min: 3, max: 21, avg: 11.75)
Length (states) of path with itp 'true':                  0 (count: 64, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       752 (count: 64, min: 3, max: 21, avg: 11.75)
Length (states) of path with itp 'false':                64 (count: 64, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 64, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             688 (count: 64, min: 2, max: 20, avg: 10.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                64
Number of successful refinements:     64
Number of failed refinements:         0
Max. size of reached set before ref.: 2150
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1514.95
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      16.828s
Time for refinements:                 1.353s
Average time for refinement:          0.021s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.741
  Visited lines:          3292
  Total lines:            3464
  Line coverage:          0.950
  Visited conditions:     310
  Total conditions:       332
  Condition coverage:     0.934

CPAchecker general statistics
-----------------------------
Number of program locations:     3854
Number of CFA edges:             4061
Number of relevant variables:    871
Number of functions:             54
Number of loops:                 3
Size of reached set:             1514
  Number of reached locations:   909 (24%)
    Avg states per location:     1
    Max states per location:     39 (at node N3217)
  Number of reached functions:   40 (74%)
  Number of partitions:          1514
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.502s
  Time for loading CPAs:          0.727s
  Time for loading parser:        0.464s
  Time for CFA construction:      2.222s
    Time for parsing file(s):     0.601s
    Time for AST to CFA:          0.689s
    Time for CFA sanity check:    0.218s
    Time for post-processing:     0.557s
      Time for var class.:        0.286s
Time for Analysis:               16.828s
CPU time for analysis:           16.830s
Time for analyzing result:        0.001s
Total time for CPAchecker:       20.333s
Total CPU time for CPAchecker:   20.320s
Time for statistics:              0.106s

Time for Garbage Collector:       0.674s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 86MB (    82 MiB) max;     54MB (    51 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8007MB (  7636 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
