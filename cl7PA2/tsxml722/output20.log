scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-nova-t-usb2.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_an0nl2yi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_generic_rw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            285 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  206 (72%)
  Because of loop head:            72 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (2%)
  Times precision was empty:       98 (34%)
  Times precision was {false}:     31 (11%)
  Times result was cached:         132 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24 (8%)
  Times result was 'false':        13 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         237
  BDD entailment checks:           129
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       123
Number of predicates discovered:          2
Number of abstraction locations:          14
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         187
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.40
Number of irrelevant predicates:          96 (51%)
Number of preds handled by boolean abs:   24 (13%)
  Total number of models for allsat:      24
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.592s
  Time for path formula creation:        0.572s
Time for strengthen operator:            0.023s
Time for prec operator:                  0.434s
  Time for abstraction:                  0.385s (Max:     0.021s, Count: 285)
    Boolean abstraction:                 0.083s
    Solving time:                        0.094s (Max:     0.017s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.012s (Max:     0.006s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.095s

Number of path formula cache hits:   2592 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.552s

Total number of created targets for pointer analysis: 252
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 85


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          23 (count: 531, min: 0, max: 23, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.071s
Automaton transfers with branching:                0
Automaton transfer successors:                         5654 (count: 5654, min: 1, max: 1, avg: 1.00) [1 x 5654]

CPA algorithm statistics
------------------------
Number of iterations:            1532
Max size of waitlist:            8
Average size of waitlist:        3
Number of computed successors:   1705
Max successors for one state:    2
Number of times merged:          54
Number of times stopped:         141
Number of times breaked:         7

Total time for CPA algorithm:         1.507s (Max:     0.531s)
  Time for choose from waitlist:      0.006s
  Time for precision adjustment:      0.490s
  Time for transfer relation:         0.907s
  Time for merge operator:            0.030s
  Time for stop operator:             0.028s
  Time for adding to reached set:     0.014s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  64 (count: 7, min: 4, max: 16, avg: 9.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.091s
  Counterexample analysis:                             0.071s (Max:     0.022s, Calls: 7)
    Refinement sat check:                              0.056s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.000s
  ARG update:                                          0.011s

Length of refined path (in blocks):                      57 (count: 7, min: 3, max: 15, avg: 8.14)
Number of affected states:                               50 (count: 7, min: 2, max: 14, avg: 7.14)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        50 (count: 7, min: 2, max: 14, avg: 7.14)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              43 (count: 7, min: 1, max: 13, avg: 6.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 257
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 201.57
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.623s
Time for refinements:                 0.115s
Average time for refinement:          0.016s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.316
  Visited lines:          1250
  Total lines:            1334
  Line coverage:          0.937
  Visited conditions:     30
  Total conditions:       52
  Condition coverage:     0.577

CPAchecker general statistics
-----------------------------
Number of program locations:     1454
Number of CFA edges:             1477
Number of relevant variables:    129
Number of functions:             19
Number of loops:                 3
Size of reached set:             162
  Number of reached locations:   117 (8%)
    Avg states per location:     1
    Max states per location:     4 (at node N18)
  Number of reached functions:   6 (32%)
  Number of partitions:          162
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.394s
  Time for loading CPAs:          0.584s
  Time for loading parser:        0.508s
  Time for CFA construction:      2.194s
    Time for parsing file(s):     0.684s
    Time for AST to CFA:          0.785s
    Time for CFA sanity check:    0.111s
    Time for post-processing:     0.473s
      Time for var class.:        0.190s
Time for Analysis:                1.623s
CPU time for analysis:            1.620s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.021s
Total CPU time for CPAchecker:    5.010s
Time for statistics:              0.062s

Time for Garbage Collector:       0.134s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     34MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8037MB (  7664 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
