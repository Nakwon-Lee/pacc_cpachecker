scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-nova-t-usb2.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_91hto8h1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_generic_rw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            265 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  187 (71%)
  Because of loop head:            71 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (3%)
  Times precision was empty:       88 (33%)
  Times precision was {false}:     27 (10%)
  Times result was cached:         126 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24 (9%)
  Times result was 'false':        13 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         228
  BDD entailment checks:           114
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       123
Number of predicates discovered:          2
Number of abstraction locations:          14
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         177
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.47
Number of irrelevant predicates:          86 (49%)
Number of preds handled by boolean abs:   24 (14%)
  Total number of models for allsat:      24
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.609s
  Time for path formula creation:        0.572s
Time for strengthen operator:            0.018s
Time for prec operator:                  0.353s
  Time for abstraction:                  0.338s (Max:     0.023s, Count: 265)
    Boolean abstraction:                 0.051s
    Solving time:                        0.096s (Max:     0.017s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.015s (Max:     0.009s)
Time for merge operator:                 0.028s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.097s

Number of path formula cache hits:   2723 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.539s

Total number of created targets for pointer analysis: 233
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 78


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          23 (count: 486, min: 0, max: 23, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.079s
Automaton transfers with branching:                0
Automaton transfer successors:                         5420 (count: 5420, min: 1, max: 1, avg: 1.00) [1 x 5420]

CPA algorithm statistics
------------------------
Number of iterations:            1451
Max size of waitlist:            7
Average size of waitlist:        3
Number of computed successors:   1615
Max successors for one state:    2
Number of times merged:          57
Number of times stopped:         131
Number of times breaked:         7

Total time for CPA algorithm:         1.637s (Max:     0.622s)
  Time for choose from waitlist:      0.012s
  Time for precision adjustment:      0.487s
  Time for transfer relation:         1.015s
  Time for merge operator:            0.033s
  Time for stop operator:             0.044s
  Time for adding to reached set:     0.019s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  64 (count: 7, min: 4, max: 16, avg: 9.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.110s
  Counterexample analysis:                             0.067s (Max:     0.018s, Calls: 7)
    Refinement sat check:                              0.048s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.005s
  ARG update:                                          0.031s

Length of refined path (in blocks):                      57 (count: 7, min: 3, max: 15, avg: 8.14)
Number of affected states:                               50 (count: 7, min: 2, max: 14, avg: 7.14)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        50 (count: 7, min: 2, max: 14, avg: 7.14)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              43 (count: 7, min: 1, max: 13, avg: 6.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 262
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 190.14
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.776s
Time for refinements:                 0.138s
Average time for refinement:          0.019s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.316
  Visited lines:          1250
  Total lines:            1334
  Line coverage:          0.937
  Visited conditions:     30
  Total conditions:       52
  Condition coverage:     0.577

CPAchecker general statistics
-----------------------------
Number of program locations:     1454
Number of CFA edges:             1477
Number of relevant variables:    129
Number of functions:             19
Number of loops:                 3
Size of reached set:             162
  Number of reached locations:   117 (8%)
    Avg states per location:     1
    Max states per location:     4 (at node N18)
  Number of reached functions:   6 (32%)
  Number of partitions:          162
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.325s
  Time for loading CPAs:          0.705s
  Time for loading parser:        0.392s
  Time for CFA construction:      2.153s
    Time for parsing file(s):     0.677s
    Time for AST to CFA:          0.728s
    Time for CFA sanity check:    0.108s
    Time for post-processing:     0.487s
      Time for var class.:        0.209s
Time for Analysis:                1.776s
CPU time for analysis:            1.780s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.108s
Total CPU time for CPAchecker:    5.100s
Time for statistics:              0.066s

Time for Garbage Collector:       0.126s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     34MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    25 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7982MB (  7613 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
