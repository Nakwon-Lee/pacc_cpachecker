scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--ubi--gluebi.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8fngkbgg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2092: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2095: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2098: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2104: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ubi_register_volume_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ubi_unregister_volume_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_parse_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1487 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1149 (77%)
  Because of loop head:            325 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       556 (37%)
  Times precision was {false}:     85 (6%)
  Times result was cached:         796 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50 (3%)
  Times result was 'false':        20 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1127
  BDD entailment checks:           451
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       92
Number of predicates discovered:          2
Number of abstraction locations:          34
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         931
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.90
Number of irrelevant predicates:          418 (45%)
Number of preds handled by boolean abs:   50 (5%)
  Total number of models for allsat:      52
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.208s
  Time for path formula creation:        1.147s
Time for strengthen operator:            0.071s
Time for prec operator:                  0.695s
  Time for abstraction:                  0.618s (Max:     0.018s, Count: 1487)
    Boolean abstraction:                 0.075s
    Solving time:                        0.142s (Max:     0.013s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.015s (Max:     0.009s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     0.145s

Number of path formula cache hits:   15853 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.087s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          85 (count: 1743, min: 0, max: 30, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.110s
Automaton transfers with branching:                0
Automaton transfer successors:                        25011 (count: 25011, min: 1, max: 1, avg: 1.00) [1 x 25011]

CPA algorithm statistics
------------------------
Number of iterations:            6857
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   7672
Max successors for one state:    2
Number of times merged:          338
Number of times stopped:         690
Number of times breaked:         13

Total time for CPA algorithm:         3.214s (Max:     0.630s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      0.887s
  Time for transfer relation:         1.939s
  Time for merge operator:            0.145s
  Time for stop operator:             0.038s
  Time for adding to reached set:     0.041s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 239 (count: 13, min: 9, max: 25, avg: 18.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.245s
  Counterexample analysis:                             0.152s (Max:     0.026s, Calls: 13)
    Refinement sat check:                              0.078s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.006s
  ARG update:                                          0.045s

Length of refined path (in blocks):                     226 (count: 13, min: 8, max: 24, avg: 17.38)
Number of affected states:                              213 (count: 13, min: 7, max: 23, avg: 16.38)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       213 (count: 13, min: 7, max: 23, avg: 16.38)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             200 (count: 13, min: 6, max: 22, avg: 15.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 551
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 512.15
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.502s
Time for refinements:                 0.288s
Average time for refinement:          0.022s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.406
  Visited lines:          1137
  Total lines:            1687
  Line coverage:          0.674
  Visited conditions:     54
  Total conditions:       104
  Condition coverage:     0.519

CPAchecker general statistics
-----------------------------
Number of program locations:     1869
Number of CFA edges:             1925
Number of relevant variables:    473
Number of functions:             32
Number of loops:                 6
Size of reached set:             344
  Number of reached locations:   206 (11%)
    Avg states per location:     1
    Max states per location:     8 (at node N11)
  Number of reached functions:   13 (41%)
  Number of partitions:          344
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.584s
  Time for loading CPAs:          0.557s
  Time for loading parser:        0.388s
  Time for CFA construction:      1.580s
    Time for parsing file(s):     0.475s
    Time for AST to CFA:          0.540s
    Time for CFA sanity check:    0.119s
    Time for post-processing:     0.309s
      Time for var class.:        0.150s
Time for Analysis:                3.503s
CPU time for analysis:            3.500s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.090s
Total CPU time for CPAchecker:    6.070s
Time for statistics:              0.080s

Time for Garbage Collector:       0.122s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     36MB (    35 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7991MB (  7621 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
