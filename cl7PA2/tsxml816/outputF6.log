scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--ubi--gluebi.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p37kmz0e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2092: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2095: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2098: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2104: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ubi_register_volume_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ubi_unregister_volume_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_parse_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1927 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1563 (81%)
  Because of loop head:            351 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       808 (42%)
  Times precision was {false}:     114 (6%)
  Times result was cached:         955 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50 (3%)
  Times result was 'false':        28 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1492
  BDD entailment checks:           660
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       92
Number of predicates discovered:          2
Number of abstraction locations:          34
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1119
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.82
Number of irrelevant predicates:          619 (55%)
Number of preds handled by boolean abs:   50 (4%)
  Total number of models for allsat:      50
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.512s
  Time for path formula creation:        1.469s
Time for strengthen operator:            0.060s
Time for prec operator:                  0.924s
  Time for abstraction:                  0.789s (Max:     0.025s, Count: 1927)
    Boolean abstraction:                 0.066s
    Solving time:                        0.187s (Max:     0.016s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.068s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.191s

Number of path formula cache hits:   16498 (51%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.373s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         100 (count: 2345, min: 0, max: 26, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.191s
Automaton transfers with branching:                0
Automaton transfer successors:                        30893 (count: 30893, min: 1, max: 1, avg: 1.00) [1 x 30893]

CPA algorithm statistics
------------------------
Number of iterations:            8865
Max size of waitlist:            13
Average size of waitlist:        5
Number of computed successors:   9839
Max successors for one state:    2
Number of times merged:          416
Number of times stopped:         947
Number of times breaked:         13

Total time for CPA algorithm:         3.990s (Max:     0.775s)
  Time for choose from waitlist:      0.029s
  Time for precision adjustment:      1.134s
  Time for transfer relation:         2.388s
  Time for merge operator:            0.132s
  Time for stop operator:             0.113s
  Time for adding to reached set:     0.048s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 239 (count: 13, min: 9, max: 25, avg: 18.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.222s
  Counterexample analysis:                             0.158s (Max:     0.020s, Calls: 13)
    Refinement sat check:                              0.087s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.009s
  ARG update:                                          0.036s

Length of refined path (in blocks):                     226 (count: 13, min: 8, max: 24, avg: 17.38)
Number of affected states:                              213 (count: 13, min: 7, max: 23, avg: 16.38)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       213 (count: 13, min: 7, max: 23, avg: 16.38)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             200 (count: 13, min: 6, max: 22, avg: 15.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 696
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 658.46
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.253s
Time for refinements:                 0.262s
Average time for refinement:          0.020s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.406
  Visited lines:          1137
  Total lines:            1687
  Line coverage:          0.674
  Visited conditions:     54
  Total conditions:       104
  Condition coverage:     0.519

CPAchecker general statistics
-----------------------------
Number of program locations:     1869
Number of CFA edges:             1925
Number of relevant variables:    473
Number of functions:             32
Number of loops:                 6
Size of reached set:             344
  Number of reached locations:   206 (11%)
    Avg states per location:     1
    Max states per location:     8 (at node N11)
  Number of reached functions:   13 (41%)
  Number of partitions:          344
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.036s
  Time for loading CPAs:          0.637s
  Time for loading parser:        0.469s
  Time for CFA construction:      1.854s
    Time for parsing file(s):     0.573s
    Time for AST to CFA:          0.636s
    Time for CFA sanity check:    0.129s
    Time for post-processing:     0.371s
      Time for var class.:        0.202s
Time for Analysis:                4.253s
CPU time for analysis:            4.250s
Time for analyzing result:        0.004s
Total time for CPAchecker:        7.293s
Total CPU time for CPAchecker:    7.280s
Time for statistics:              0.049s

Time for Garbage Collector:       0.192s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     38MB (    36 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8052MB (  7679 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
