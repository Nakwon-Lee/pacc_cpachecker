scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--tests--mtd_oobtest_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hnn3j7ev/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 2112: Function pointer *__cil_tmp18 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2174: Function pointer *__cil_tmp22 with type int (*)(struct mtd_info *, loff_t , struct mtd_oob_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_mtd_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_mtd_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2174: Ignoring call via function pointer mtd_write_oob::__cil_tmp22 for which no suitable target was found in line: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2174: Ignoring function call through function pointer *__cil_tmp22: tmp___0 = (*__cil_tmp22)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2112: Ignoring call via function pointer mtd_read_oob::__cil_tmp18 for which no suitable target was found in line: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2112: Ignoring function call through function pointer *__cil_tmp18: tmp___0 = (*__cil_tmp18)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            673 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  489 (73%)
  Because of loop head:            181 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (0%)
  Times precision was empty:       616 (92%)
  Times precision was {false}:     11 (2%)
  Times result was cached:         26 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20 (3%)
  Times result was 'false':        6 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         737
  BDD entailment checks:           209
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       339
Number of predicates discovered:          2
Number of abstraction locations:          12
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         57
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.84
Number of irrelevant predicates:          16 (28%)
Number of preds handled by boolean abs:   20 (35%)
  Total number of models for allsat:      21
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  0.928s
  Time for path formula creation:        0.923s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.191s
  Time for abstraction:                  0.127s (Max:     0.019s, Count: 673)
    Boolean abstraction:                 0.027s
    Solving time:                        0.019s (Max:     0.009s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.007s (Max:     0.006s)
Time for merge operator:                 0.061s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.019s

Number of path formula cache hits:   6229 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.884s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          43 (count: 1007, min: 0, max: 31, avg: 0.04)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.184s
Automaton transfers with branching:                0
Automaton transfer successors:                        10788 (count: 10788, min: 1, max: 1, avg: 1.00) [1 x 10788]

CPA algorithm statistics
------------------------
Number of iterations:            3408
Max size of waitlist:            20
Average size of waitlist:        9
Number of computed successors:   3894
Max successors for one state:    2
Number of times merged:          264
Number of times stopped:         473
Number of times breaked:         3

Total time for CPA algorithm:         2.149s (Max:     1.177s)
  Time for choose from waitlist:      0.055s
  Time for precision adjustment:      0.295s
  Time for transfer relation:         1.491s
  Time for merge operator:            0.081s
  Time for stop operator:             0.066s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  40 (count: 3, min: 7, max: 20, avg: 13.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.058s
  Counterexample analysis:                             0.021s (Max:     0.014s, Calls: 3)
    Refinement sat check:                              0.014s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.001s
  ARG update:                                          0.009s

Length of refined path (in blocks):                      37 (count: 3, min: 6, max: 19, avg: 12.33)
Number of affected states:                               34 (count: 3, min: 5, max: 18, avg: 11.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        34 (count: 3, min: 5, max: 18, avg: 11.33)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              31 (count: 3, min: 4, max: 17, avg: 10.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 1572
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 612.33
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.244s
Time for refinements:                 0.087s
Average time for refinement:          0.029s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.767
  Visited lines:          2223
  Total lines:            2247
  Line coverage:          0.989
  Visited conditions:     202
  Total conditions:       210
  Condition coverage:     0.962

CPAchecker general statistics
-----------------------------
Number of program locations:     2472
Number of CFA edges:             2605
Number of relevant variables:    630
Number of functions:             30
Number of loops:                 12
Size of reached set:             1588
  Number of reached locations:   612 (25%)
    Avg states per location:     2
    Max states per location:     21 (at node N956)
  Number of reached functions:   23 (77%)
  Number of partitions:          1588
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.410s
  Time for loading CPAs:          0.687s
  Time for loading parser:        0.495s
  Time for CFA construction:      2.111s
    Time for parsing file(s):     0.583s
    Time for AST to CFA:          0.651s
    Time for CFA sanity check:    0.164s
    Time for post-processing:     0.549s
      Time for var class.:        0.266s
Time for Analysis:                2.244s
CPU time for analysis:            2.240s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.657s
Total CPU time for CPAchecker:    5.640s
Time for statistics:              0.088s

Time for Garbage Collector:       0.147s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7982MB (  7612 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
