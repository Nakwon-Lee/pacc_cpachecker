scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--maps--intel_vr_nor.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s2i45u98/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_map_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_parse_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function map_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_map_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            646 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  562 (87%)
  Because of loop head:            75 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (1%)
  Times precision was empty:       248 (38%)
  Times precision was {false}:     80 (12%)
  Times result was cached:         284 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      34 (5%)
  Times result was 'false':        8 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         790
  BDD entailment checks:           228
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       314
Number of predicates discovered:          2
Number of abstraction locations:          25
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         398
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.49
Number of irrelevant predicates:          192 (48%)
Number of preds handled by boolean abs:   34 (9%)
  Total number of models for allsat:      35
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.132s
  Time for path formula creation:        1.107s
Time for strengthen operator:            0.042s
Time for prec operator:                  0.696s
  Time for abstraction:                  0.641s (Max:     0.057s, Count: 646)
    Boolean abstraction:                 0.092s
    Solving time:                        0.299s (Max:     0.047s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.083s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.305s

Number of path formula cache hits:   5933 (42%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.047s

Total number of created targets for pointer analysis: 117
   Number of created targets for uf: *(char)* is 37


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          69 (count: 1085, min: 0, max: 32, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.116s
Automaton transfers with branching:                0
Automaton transfer successors:                        13615 (count: 13615, min: 1, max: 1, avg: 1.00) [1 x 13615]

CPA algorithm statistics
------------------------
Number of iterations:            3449
Max size of waitlist:            10
Average size of waitlist:        3
Number of computed successors:   3915
Max successors for one state:    2
Number of times merged:          281
Number of times stopped:         447
Number of times breaked:         9

Total time for CPA algorithm:         2.801s (Max:     0.673s)
  Time for choose from waitlist:      0.028s
  Time for precision adjustment:      0.816s
  Time for transfer relation:         1.626s
  Time for merge operator:            0.124s
  Time for stop operator:             0.058s
  Time for adding to reached set:     0.019s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 165 (count: 9, min: 8, max: 26, avg: 18.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.227s
  Counterexample analysis:                             0.168s (Max:     0.034s, Calls: 9)
    Refinement sat check:                              0.109s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.021s
  ARG update:                                          0.018s

Length of refined path (in blocks):                     156 (count: 9, min: 7, max: 25, avg: 17.33)
Number of affected states:                              147 (count: 9, min: 6, max: 24, avg: 16.33)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       147 (count: 9, min: 6, max: 24, avg: 16.33)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             138 (count: 9, min: 5, max: 23, avg: 15.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 450
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 362.44
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.061s
Time for refinements:                 0.260s
Average time for refinement:          0.028s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1154
  Total lines:            1250
  Line coverage:          0.923
  Visited conditions:     62
  Total conditions:       70
  Condition coverage:     0.886

CPAchecker general statistics
-----------------------------
Number of program locations:     1386
Number of CFA edges:             1421
Number of relevant variables:    274
Number of functions:             24
Number of loops:                 2
Size of reached set:             226
  Number of reached locations:   187 (13%)
    Avg states per location:     1
    Max states per location:     5 (at node N726)
  Number of reached functions:   12 (50%)
  Number of partitions:          226
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.747s
  Time for loading CPAs:          0.529s
  Time for loading parser:        0.481s
  Time for CFA construction:      1.640s
    Time for parsing file(s):     0.623s
    Time for AST to CFA:          0.488s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.304s
      Time for var class.:        0.122s
Time for Analysis:                3.061s
CPU time for analysis:            3.050s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.811s
Total CPU time for CPAchecker:    5.800s
Time for statistics:              0.061s

Time for Garbage Collector:       0.110s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     36MB (    35 MiB) avg;     67MB (    63 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8046MB (  7673 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
