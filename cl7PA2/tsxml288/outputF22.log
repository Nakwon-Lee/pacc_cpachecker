scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hid--hid-zydacron.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9fcsdj2n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2183: Function pointer *__cil_tmp8 with type int (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2145: Function pointer *__cil_tmp11 with type int (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2145: Ignoring call via function pointer hid_parse::__cil_tmp11 for which no suitable target was found in line: ret = (*__cil_tmp11)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2145: Ignoring function call through function pointer *__cil_tmp11: ret = (*__cil_tmp11)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2183: Ignoring call via function pointer hid_hw_start::__cil_tmp8 for which no suitable target was found in line: tmp = (*__cil_tmp8)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2183: Ignoring function call through function pointer *__cil_tmp8: tmp = (*__cil_tmp8)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hid_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2205: Ignoring call via function pointer hid_hw_start::__cil_tmp14 for which no suitable target was found in line: (*__cil_tmp14)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2205: Ignoring function call through function pointer *__cil_tmp14: (*__cil_tmp14)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2231: Ignoring call via function pointer hid_hw_stop::__cil_tmp7 for which no suitable target was found in line: (*__cil_tmp7)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2231: Ignoring function call through function pointer *__cil_tmp7: (*__cil_tmp7)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 2231: Unsupported feature (recursion): zc_remove(hdev); (line was originally pointer call(zc_remove) (*__cil_tmp7)(hdev);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            192 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  167 (87%)
  Because of loop head:            20 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (3%)
  Times precision was empty:       81 (42%)
  Times precision was {false}:     10 (5%)
  Times result was cached:         79 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22 (11%)
  Times result was 'false':        9 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         96
  BDD entailment checks:           36
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          2
Number of abstraction locations:          19
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         111
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.47
Number of irrelevant predicates:          36 (32%)
Number of preds handled by boolean abs:   22 (20%)
  Total number of models for allsat:      22
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.256s
  Time for path formula creation:        0.253s
Time for strengthen operator:            0.003s
Time for prec operator:                  0.126s
  Time for abstraction:                  0.120s (Max:     0.023s, Count: 192)
    Boolean abstraction:                 0.031s
    Solving time:                        0.014s (Max:     0.007s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.014s (Max:     0.014s)
Time for merge operator:                 0.018s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.015s

Number of path formula cache hits:   890 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.239s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 304, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.044s
Automaton transfers with branching:                0
Automaton transfer successors:                         1713 (count: 1713, min: 1, max: 1, avg: 1.00) [1 x 1713]

CPA algorithm statistics
------------------------
Number of iterations:            800
Max size of waitlist:            14
Average size of waitlist:        6
Number of computed successors:   907
Max successors for one state:    2
Number of times merged:          30
Number of times stopped:         55
Number of times breaked:         5

Total time for CPA algorithm:         0.682s (Max:     0.200s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:      0.173s
  Time for transfer relation:         0.418s
  Time for merge operator:            0.022s
  Time for stop operator:             0.028s
  Time for adding to reached set:     0.012s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  68 (count: 5, min: 5, max: 21, avg: 13.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.053s
  Counterexample analysis:                             0.033s (Max:     0.013s, Calls: 5)
    Refinement sat check:                              0.017s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.003s
  ARG update:                                          0.003s

Length of refined path (in blocks):                      63 (count: 5, min: 4, max: 20, avg: 12.60)
Number of affected states:                               58 (count: 5, min: 3, max: 19, avg: 11.60)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        58 (count: 5, min: 3, max: 19, avg: 11.60)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              53 (count: 5, min: 2, max: 18, avg: 10.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 226
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 138.60
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       0.755s
Time for refinements:                 0.073s
Average time for refinement:          0.014s
Max time for refinement:              0.034s

Code Coverage
-----------------------------
  Function coverage:      0.552
  Visited lines:          581
  Total lines:            1084
  Line coverage:          0.536
  Visited conditions:     42
  Total conditions:       134
  Condition coverage:     0.313

CPAchecker general statistics
-----------------------------
Number of program locations:     1269
Number of CFA edges:             1349
Number of relevant variables:    240
Number of functions:             29
Number of loops:                 3
Size of reached set:             166
  Number of reached locations:   147 (12%)
    Avg states per location:     1
    Max states per location:     3 (at node N718)
  Number of reached functions:   16 (55%)
  Number of partitions:          166
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          2.621s
  Time for loading CPAs:          0.511s
  Time for loading parser:        0.481s
  Time for CFA construction:      1.513s
    Time for parsing file(s):     0.580s
    Time for AST to CFA:          0.415s
    Time for CFA sanity check:    0.083s
    Time for post-processing:     0.297s
      Time for var class.:        0.133s
Time for Analysis:                0.755s
CPU time for analysis:            0.750s
Total time for CPAchecker:        3.378s
Total CPU time for CPAchecker:    3.370s
Time for statistics:              0.041s

Time for Garbage Collector:       0.089s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 48MB (    46 MiB) max;     30MB (    29 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     24MB (    23 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8019MB (  7648 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
