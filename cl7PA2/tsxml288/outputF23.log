scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hid--hid-zydacron.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1nfaemhs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2183: Function pointer *__cil_tmp8 with type int (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2145: Function pointer *__cil_tmp11 with type int (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2231: Ignoring call via function pointer hid_hw_stop::__cil_tmp7 for which no suitable target was found in line: (*__cil_tmp7)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2231: Ignoring function call through function pointer *__cil_tmp7: (*__cil_tmp7)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 2231: Unsupported feature (recursion): zc_remove(hdev); (line was originally pointer call(zc_remove) (*__cil_tmp7)(hdev);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            45 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  38 (84%)
  Because of loop head:            5 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (4%)
  Times precision was empty:       29 (64%)
  Times precision was {false}:     3 (7%)
  Times result was cached:         6 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7 (16%)
  Times result was 'false':        3 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         12
  BDD entailment checks:           4
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       19
Number of predicates discovered:          2
Number of abstraction locations:          7
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         16
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.60
Number of irrelevant predicates:          5 (31%)
Number of preds handled by boolean abs:   7 (44%)
  Total number of models for allsat:      7
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.173s
  Time for path formula creation:        0.168s
Time for strengthen operator:            0.013s
Time for prec operator:                  0.031s
  Time for abstraction:                  0.030s (Max:     0.012s, Count: 45)
    Boolean abstraction:                 0.016s
    Solving time:                        0.008s (Max:     0.003s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.007s (Max:     0.007s)
Time for merge operator:                 0.005s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.008s

Number of path formula cache hits:   132 (20%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.162s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 95, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                          641 (count: 641, min: 1, max: 1, avg: 1.00) [1 x 641]

CPA algorithm statistics
------------------------
Number of iterations:            172
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   194
Max successors for one state:    2
Number of times merged:          4
Number of times stopped:         8
Number of times breaked:         2

Total time for CPA algorithm:         0.348s (Max:     0.208s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      0.042s
  Time for transfer relation:         0.282s
  Time for merge operator:            0.005s
  Time for stop operator:             0.001s
  Time for adding to reached set:     0.003s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                  13 (count: 2, min: 5, max: 8, avg: 6.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.027s
  Counterexample analysis:                             0.010s (Max:     0.008s, Calls: 2)
    Refinement sat check:                              0.002s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.001s
  ARG update:                                          0.003s

Length of refined path (in blocks):                      11 (count: 2, min: 4, max: 7, avg: 5.50)
Number of affected states:                                9 (count: 2, min: 3, max: 6, avg: 4.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 2, min: 3, max: 6, avg: 4.50)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               7 (count: 2, min: 2, max: 5, avg: 3.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 80
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 51.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       0.391s
Time for refinements:                 0.043s
Average time for refinement:          0.021s
Max time for refinement:              0.028s

Code Coverage
-----------------------------
  Function coverage:      0.379
  Visited lines:          439
  Total lines:            1084
  Line coverage:          0.405
  Visited conditions:     22
  Total conditions:       134
  Condition coverage:     0.164

CPAchecker general statistics
-----------------------------
Number of program locations:     1269
Number of CFA edges:             1349
Number of relevant variables:    240
Number of functions:             29
Number of loops:                 3
Size of reached set:             87
  Number of reached locations:   80 (6%)
    Avg states per location:     1
    Max states per location:     2 (at node N927)
  Number of reached functions:   11 (38%)
  Number of partitions:          87
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          2.461s
  Time for loading CPAs:          0.516s
  Time for loading parser:        0.443s
  Time for CFA construction:      1.420s
    Time for parsing file(s):     0.484s
    Time for AST to CFA:          0.435s
    Time for CFA sanity check:    0.091s
    Time for post-processing:     0.295s
      Time for var class.:        0.131s
Time for Analysis:                0.391s
CPU time for analysis:            0.390s
Total time for CPAchecker:        2.855s
Total CPU time for CPAchecker:    2.850s
Time for statistics:              0.030s

Time for Garbage Collector:       0.075s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 47MB (    45 MiB) max;     29MB (    28 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    30 MiB) max;     23MB (    22 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    33 MiB) max;     25MB (    23 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8014MB (  7643 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
