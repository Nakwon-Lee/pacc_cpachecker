scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hid--hid-zydacron.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n0za9ezb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2183: Function pointer *__cil_tmp8 with type int (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2145: Function pointer *__cil_tmp11 with type int (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2231: Ignoring call via function pointer hid_hw_stop::__cil_tmp7 for which no suitable target was found in line: (*__cil_tmp7)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2231: Ignoring function call through function pointer *__cil_tmp7: (*__cil_tmp7)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 2231: Unsupported feature (recursion): zc_remove(hdev); (line was originally pointer call(zc_remove) (*__cil_tmp7)(hdev);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            222 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  190 (86%)
  Because of loop head:            29 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (1%)
  Times precision was empty:       175 (79%)
  Times precision was {false}:     7 (3%)
  Times result was cached:         31 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9 (4%)
  Times result was 'false':        5 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         231
  BDD entailment checks:           43
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       73
Number of predicates discovered:          2
Number of abstraction locations:          9
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         47
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.94
Number of irrelevant predicates:          25 (53%)
Number of preds handled by boolean abs:   9 (19%)
  Total number of models for allsat:      9
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.401s
  Time for path formula creation:        0.397s
Time for strengthen operator:            0.013s
Time for prec operator:                  0.109s
  Time for abstraction:                  0.084s (Max:     0.015s, Count: 222)
    Boolean abstraction:                 0.021s
    Solving time:                        0.022s (Max:     0.010s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.011s (Max:     0.011s)
Time for merge operator:                 0.052s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.022s

Number of path formula cache hits:   1606 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.378s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 312, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                         3256 (count: 3256, min: 1, max: 1, avg: 1.00) [1 x 3256]

CPA algorithm statistics
------------------------
Number of iterations:            1198
Max size of waitlist:            31
Average size of waitlist:        11
Number of computed successors:   1394
Max successors for one state:    2
Number of times merged:          94
Number of times stopped:         126
Number of times breaked:         3

Total time for CPA algorithm:         0.969s (Max:     0.381s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      0.197s
  Time for transfer relation:         0.595s
  Time for merge operator:            0.063s
  Time for stop operator:             0.026s
  Time for adding to reached set:     0.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  24 (count: 3, min: 5, max: 11, avg: 8.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.050s
  Counterexample analysis:                             0.022s (Max:     0.016s, Calls: 3)
    Refinement sat check:                              0.017s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.000s
  ARG update:                                          0.015s

Length of refined path (in blocks):                      21 (count: 3, min: 4, max: 10, avg: 7.00)
Number of affected states:                               18 (count: 3, min: 3, max: 9, avg: 6.00)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        18 (count: 3, min: 3, max: 9, avg: 6.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              15 (count: 3, min: 2, max: 8, avg: 5.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 510
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 301.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.028s
Time for refinements:                 0.059s
Average time for refinement:          0.019s
Max time for refinement:              0.026s

Code Coverage
-----------------------------
  Function coverage:      0.517
  Visited lines:          801
  Total lines:            1084
  Line coverage:          0.739
  Visited conditions:     84
  Total conditions:       134
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     1269
Number of CFA edges:             1349
Number of relevant variables:    240
Number of functions:             29
Number of loops:                 3
Size of reached set:             370
  Number of reached locations:   240 (19%)
    Avg states per location:     1
    Max states per location:     12 (at node N139)
  Number of reached functions:   15 (52%)
  Number of partitions:          367
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N851 (before lines 2967-3049), Function main called from node N824, stack depth 1 [3724af13], stack [main]])
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          2.806s
  Time for loading CPAs:          0.551s
  Time for loading parser:        0.498s
  Time for CFA construction:      1.658s
    Time for parsing file(s):     0.589s
    Time for AST to CFA:          0.489s
    Time for CFA sanity check:    0.133s
    Time for post-processing:     0.332s
      Time for var class.:        0.133s
Time for Analysis:                1.028s
CPU time for analysis:            1.030s
Total time for CPAchecker:        3.836s
Total CPU time for CPAchecker:    3.830s
Time for statistics:              0.055s

Time for Garbage Collector:       0.095s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     32MB (    30 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    23 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8025MB (  7653 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
