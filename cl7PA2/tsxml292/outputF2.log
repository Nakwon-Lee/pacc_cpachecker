scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--frpw.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0s4c4h4n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15707 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14845 (95%)
  Because of loop head:            828 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (0%)
  Times precision was empty:       937 (6%)
  Times precision was {false}:     442 (3%)
  Times result was cached:         13845 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      483 (3%)
  Times result was 'false':        67 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         14914
  BDD entailment checks:           996
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       265
Number of predicates discovered:          2
Number of abstraction locations:          250
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         14770
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 15.97
Number of irrelevant predicates:          4956 (34%)
Number of preds handled by boolean abs:   483 (3%)
  Total number of models for allsat:      483
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.567s
  Time for path formula creation:        1.458s
Time for strengthen operator:            0.177s
Time for prec operator:                  3.059s
  Time for abstraction:                  2.763s (Max:     0.023s, Count: 15707)
    Boolean abstraction:                 0.415s
    Solving time:                        0.555s (Max:     0.021s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.036s (Max:     0.013s)
Time for merge operator:                 0.112s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.003s
Total time for SMT solver (w/o itp):     0.572s

Number of path formula cache hits:   231203 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.115s

Total number of created targets for pointer analysis: 70
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *(char)* is 7


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         969 (count: 7046, min: 0, max: 182, avg: 0.14)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.318s
Automaton transfers with branching:                0
Automaton transfer successors:                       233221 (count: 233221, min: 1, max: 1, avg: 1.00) [1 x 233221]

CPA algorithm statistics
------------------------
Number of iterations:            76677
Max size of waitlist:            18
Average size of waitlist:        6
Number of computed successors:   84915
Max successors for one state:    2
Number of times merged:          6959
Number of times stopped:         7766
Number of times breaked:         34

Total time for CPA algorithm:        10.470s (Max:     0.906s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:      3.608s
  Time for transfer relation:         5.714s
  Time for merge operator:            0.309s
  Time for stop operator:             0.152s
  Time for adding to reached set:     0.160s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                1418 (count: 34, min: 5, max: 202, avg: 41.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.674s
  Counterexample analysis:                             0.362s (Max:     0.043s, Calls: 34)
    Refinement sat check:                              0.197s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.022s
  ARG update:                                          0.233s

Length of refined path (in blocks):                    1384 (count: 34, min: 4, max: 201, avg: 40.71)
Number of affected states:                             1350 (count: 34, min: 3, max: 200, avg: 39.71)
Length (states) of path with itp 'true':                  0 (count: 34, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1350 (count: 34, min: 3, max: 200, avg: 39.71)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 34, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1316 (count: 34, min: 2, max: 199, avg: 38.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 5136
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2144.91
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      11.312s
Time for refinements:                 0.841s
Average time for refinement:          0.024s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          5439
  Total lines:            5487
  Line coverage:          0.991
  Visited conditions:     500
  Total conditions:       520
  Condition coverage:     0.962

CPAchecker general statistics
-----------------------------
Number of program locations:     6072
Number of CFA edges:             6528
Number of relevant variables:    638
Number of functions:             30
Number of loops:                 14
Size of reached set:             4258
  Number of reached locations:   1737 (29%)
    Avg states per location:     2
    Max states per location:     323 (at node N0)
  Number of reached functions:   20 (67%)
  Number of partitions:          4258
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.533s
  Time for loading CPAs:          0.556s
  Time for loading parser:        0.369s
  Time for CFA construction:      2.551s
    Time for parsing file(s):     0.614s
    Time for AST to CFA:          0.767s
    Time for CFA sanity check:    0.314s
    Time for post-processing:     0.779s
      Time for var class.:        0.337s
Time for Analysis:               11.313s
CPU time for analysis:           11.310s
Time for analyzing result:        0.002s
Total time for CPAchecker:       14.848s
Total CPU time for CPAchecker:   14.850s
Time for statistics:              0.132s

Time for Garbage Collector:       0.400s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     49MB (    47 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8005MB (  7634 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
