scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_axxmpql1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            45944 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  41002 (89%)
  Because of loop head:            4886 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         56 (0%)
  Times precision was empty:       14822 (32%)
  Times precision was {false}:     2637 (6%)
  Times result was cached:         28123 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      362 (1%)
  Times result was 'false':        125 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         98937
  BDD entailment checks:           13559
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       378
Number of predicates discovered:          2
Number of abstraction locations:          136
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         31122
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 10.38
Number of irrelevant predicates:          19482 (63%)
Number of preds handled by boolean abs:   362 (1%)
  Total number of models for allsat:      365
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 20.007s
  Time for path formula creation:       19.679s
Time for strengthen operator:            0.951s
Time for prec operator:                  9.841s
  Time for abstraction:                  9.099s (Max:     0.075s, Count: 45944)
    Boolean abstraction:                 0.456s
    Solving time:                        3.227s (Max:     0.057s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.028s (Max:     0.009s)
Time for merge operator:                 1.993s
Time for coverage check:                 0.100s
  Time for BDD entailment checks:        0.082s
Total time for SMT solver (w/o itp):     3.250s

Number of path formula cache hits:   588689 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.269s

Total number of created targets for pointer analysis: 1443
   Number of created targets for uf: *(void)* is 57
   Number of created targets for uf: *_Bool is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         671 (count: 43744, min: 0, max: 52, avg: 0.02)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.534s
  Time for transition matches:                         0.762s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1071597 (count: 1071597, min: 1, max: 1, avg: 1.00) [1 x 1071597]

CPA algorithm statistics
------------------------
Number of iterations:            345395
Max size of waitlist:            82
Average size of waitlist:        40
Number of computed successors:   402466
Max successors for one state:    2
Number of times merged:          42689
Number of times stopped:         52947
Number of times breaked:         56

Total time for CPA algorithm:        47.160s (Max:     2.384s)
  Time for choose from waitlist:      0.185s
  Time for precision adjustment:     13.257s
  Time for transfer relation:        29.087s
  Time for merge operator:            2.523s
  Time for stop operator:             0.578s
  Time for adding to reached set:     0.410s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   56
Avg. length of target path (in blocks):                1578 (count: 56, min: 8, max: 57, avg: 28.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.435s
  Counterexample analysis:                             1.616s (Max:     0.079s, Calls: 56)
    Refinement sat check:                              1.262s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.021s
  ARG update:                                          0.729s

Length of refined path (in blocks):                    1522 (count: 56, min: 7, max: 56, avg: 27.18)
Number of affected states:                             1466 (count: 56, min: 6, max: 55, avg: 26.18)
Length (states) of path with itp 'true':                  0 (count: 56, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1466 (count: 56, min: 6, max: 55, avg: 26.18)
Length (states) of path with itp 'false':                56 (count: 56, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 56, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1410 (count: 56, min: 5, max: 54, avg: 25.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                56
Number of successful refinements:     56
Number of failed refinements:         0
Max. size of reached set before ref.: 8991
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 6154.13
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      49.928s
Time for refinements:                 2.764s
Average time for refinement:          0.049s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.679
  Visited lines:          3982
  Total lines:            4407
  Line coverage:          0.904
  Visited conditions:     318
  Total conditions:       360
  Condition coverage:     0.883

CPAchecker general statistics
-----------------------------
Number of program locations:     4826
Number of CFA edges:             5053
Number of relevant variables:    1274
Number of functions:             56
Number of loops:                 11
Size of reached set:             4932
  Number of reached locations:   955 (20%)
    Avg states per location:     5
    Max states per location:     64 (at node N190)
  Number of reached functions:   38 (68%)
  Number of partitions:          4932
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.369s
  Time for loading CPAs:          0.825s
  Time for loading parser:        0.458s
  Time for CFA construction:      3.011s
    Time for parsing file(s):     0.720s
    Time for AST to CFA:          1.023s
    Time for CFA sanity check:    0.329s
    Time for post-processing:     0.839s
      Time for var class.:        0.436s
Time for Analysis:               49.928s
CPU time for analysis:           49.920s
Time for analyzing result:        0.004s
Total time for CPAchecker:       54.301s
Total CPU time for CPAchecker:   54.280s
Time for statistics:              0.141s

Time for Garbage Collector:       4.652s (in 125 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                373MB (   355 MiB) max;    151MB (   144 MiB) avg;    381MB (   364 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           424MB (   404 MiB) max;    238MB (   227 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8079MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
