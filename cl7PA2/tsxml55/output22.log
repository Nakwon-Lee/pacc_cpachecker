scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bbsf55my/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            28628 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25879 (90%)
  Because of loop head:            2692 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (0%)
  Times precision was empty:       6588 (23%)
  Times precision was {false}:     817 (3%)
  Times result was cached:         20859 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      364 (1%)
  Times result was 'false':        168 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         66563
  BDD entailment checks:           9639
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       378
Number of predicates discovered:          2
Number of abstraction locations:          136
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         22040
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 18.66
Number of irrelevant predicates:          9345 (42%)
Number of preds handled by boolean abs:   364 (2%)
  Total number of models for allsat:      367
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  5.886s
  Time for path formula creation:        5.610s
Time for strengthen operator:            0.517s
Time for prec operator:                  5.500s
  Time for abstraction:                  5.130s (Max:     0.054s, Count: 28628)
    Boolean abstraction:                 0.533s
    Solving time:                        1.181s (Max:     0.049s)
    Model enumeration time:              0.052s
    Time for BDD construction:           0.017s (Max:     0.009s)
Time for merge operator:                 0.542s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     1.233s

Number of path formula cache hits:   592297 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.329s

Total number of created targets for pointer analysis: 76
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *_Bool is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         695 (count: 22502, min: 0, max: 56, avg: 0.03)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.015s
  Time for transition matches:                         0.521s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       645180 (count: 645180, min: 1, max: 1, avg: 1.00) [1 x 645180]

CPA algorithm statistics
------------------------
Number of iterations:            224809
Max size of waitlist:            49
Average size of waitlist:        25
Number of computed successors:   261815
Max successors for one state:    2
Number of times merged:          28462
Number of times stopped:         35448
Number of times breaked:         57

Total time for CPA algorithm:        20.651s (Max:     0.699s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:      6.968s
  Time for transfer relation:        11.094s
  Time for merge operator:            0.918s
  Time for stop operator:             0.363s
  Time for adding to reached set:     0.337s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                1606 (count: 57, min: 8, max: 57, avg: 28.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.335s
  Counterexample analysis:                             1.730s (Max:     0.077s, Calls: 57)
    Refinement sat check:                              1.384s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.033s
  ARG update:                                          0.498s

Length of refined path (in blocks):                    1549 (count: 57, min: 7, max: 56, avg: 27.18)
Number of affected states:                             1492 (count: 57, min: 6, max: 55, avg: 26.18)
Length (states) of path with itp 'true':                  0 (count: 57, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1492 (count: 57, min: 6, max: 55, avg: 26.18)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 57, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1435 (count: 57, min: 5, max: 54, avg: 25.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 6929
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 3884.89
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      23.309s
Time for refinements:                 2.656s
Average time for refinement:          0.046s
Max time for refinement:              0.088s

Code Coverage
-----------------------------
  Function coverage:      0.679
  Visited lines:          3982
  Total lines:            4407
  Line coverage:          0.904
  Visited conditions:     318
  Total conditions:       360
  Condition coverage:     0.883

CPAchecker general statistics
-----------------------------
Number of program locations:     4826
Number of CFA edges:             5053
Number of relevant variables:    1274
Number of functions:             56
Number of loops:                 11
Size of reached set:             4932
  Number of reached locations:   955 (20%)
    Avg states per location:     5
    Max states per location:     64 (at node N190)
  Number of reached functions:   38 (68%)
  Number of partitions:          4932
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.850s
  Time for loading CPAs:          0.681s
  Time for loading parser:        0.512s
  Time for CFA construction:      2.552s
    Time for parsing file(s):     0.607s
    Time for AST to CFA:          0.827s
    Time for CFA sanity check:    0.275s
    Time for post-processing:     0.708s
      Time for var class.:        0.368s
Time for Analysis:               23.310s
CPU time for analysis:           23.310s
Time for analyzing result:        0.004s
Total time for CPAchecker:       27.163s
Total CPU time for CPAchecker:   27.160s
Time for statistics:              0.121s

Time for Garbage Collector:       1.325s (in 118 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     66MB (    63 MiB) avg;    126MB (   120 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8018MB (  7646 MiB) max;   8009MB (  7638 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
