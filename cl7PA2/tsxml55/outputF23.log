scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v7nvq8p7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            43474 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  38836 (89%)
  Because of loop head:            4583 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         55 (0%)
  Times precision was empty:       13392 (31%)
  Times precision was {false}:     2762 (6%)
  Times result was cached:         26958 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      362 (1%)
  Times result was 'false':        114 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         91788
  BDD entailment checks:           12198
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       378
Number of predicates discovered:          2
Number of abstraction locations:          136
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         30082
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.63
Number of irrelevant predicates:          18801 (62%)
Number of preds handled by boolean abs:   362 (1%)
  Total number of models for allsat:      365
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 18.119s
  Time for path formula creation:       17.747s
Time for strengthen operator:            0.805s
Time for prec operator:                 10.243s
  Time for abstraction:                  9.538s (Max:     0.056s, Count: 43474)
    Boolean abstraction:                 0.453s
    Solving time:                        3.366s (Max:     0.044s)
    Model enumeration time:              0.039s
    Time for BDD construction:           0.055s (Max:     0.013s)
Time for merge operator:                 2.602s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     3.405s

Number of path formula cache hits:   574240 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.885s

Total number of created targets for pointer analysis: 1372
   Number of created targets for uf: *(void)* is 53
   Number of created targets for uf: *_Bool is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         671 (count: 41578, min: 0, max: 52, avg: 0.02)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.349s
  Time for transition matches:                         0.762s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1014409 (count: 1014409, min: 1, max: 1, avg: 1.00) [1 x 1014409]

CPA algorithm statistics
------------------------
Number of iterations:            323887
Max size of waitlist:            83
Average size of waitlist:        39
Number of computed successors:   377317
Max successors for one state:    2
Number of times merged:          39795
Number of times stopped:         49496
Number of times breaked:         55

Total time for CPA algorithm:        44.127s (Max:     2.268s)
  Time for choose from waitlist:      0.244s
  Time for precision adjustment:     12.623s
  Time for transfer relation:        26.041s
  Time for merge operator:            3.183s
  Time for stop operator:             0.462s
  Time for adding to reached set:     0.481s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   55
Avg. length of target path (in blocks):                1929 (count: 55, min: 13, max: 71, avg: 35.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.494s
  Counterexample analysis:                             1.756s (Max:     0.078s, Calls: 55)
    Refinement sat check:                              1.376s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.030s
  ARG update:                                          0.619s

Length of refined path (in blocks):                    1874 (count: 55, min: 12, max: 70, avg: 34.07)
Number of affected states:                             1819 (count: 55, min: 11, max: 69, avg: 33.07)
Length (states) of path with itp 'true':                  0 (count: 55, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1819 (count: 55, min: 11, max: 69, avg: 33.07)
Length (states) of path with itp 'false':                55 (count: 55, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 55, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1764 (count: 55, min: 10, max: 68, avg: 32.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 8289
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 5871.65
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      46.896s
Time for refinements:                 2.767s
Average time for refinement:          0.050s
Max time for refinement:              0.109s

Code Coverage
-----------------------------
  Function coverage:      0.679
  Visited lines:          3982
  Total lines:            4407
  Line coverage:          0.904
  Visited conditions:     318
  Total conditions:       360
  Condition coverage:     0.883

CPAchecker general statistics
-----------------------------
Number of program locations:     4826
Number of CFA edges:             5053
Number of relevant variables:    1274
Number of functions:             56
Number of loops:                 11
Size of reached set:             4932
  Number of reached locations:   955 (20%)
    Avg states per location:     5
    Max states per location:     64 (at node N190)
  Number of reached functions:   38 (68%)
  Number of partitions:          4932
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.984s
  Time for loading CPAs:          0.743s
  Time for loading parser:        0.458s
  Time for CFA construction:      2.684s
    Time for parsing file(s):     0.743s
    Time for AST to CFA:          0.838s
    Time for CFA sanity check:    0.284s
    Time for post-processing:     0.713s
      Time for var class.:        0.361s
Time for Analysis:               46.896s
CPU time for analysis:           46.880s
Time for analyzing result:        0.004s
Total time for CPAchecker:       50.883s
Total CPU time for CPAchecker:   50.860s
Time for statistics:              0.143s

Time for Garbage Collector:       4.396s (in 125 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                359MB (   342 MiB) max;    145MB (   138 MiB) avg;    373MB (   356 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           467MB (   445 MiB) max;    232MB (   221 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
