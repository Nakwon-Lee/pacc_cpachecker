scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hm2mt3pd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23059 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20945 (91%)
  Because of loop head:            2075 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       5912 (26%)
  Times precision was {false}:     974 (4%)
  Times result was cached:         15866 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      307 (1%)
  Times result was 'false':        169 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         73851
  BDD entailment checks:           5731
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       378
Number of predicates discovered:          2
Number of abstraction locations:          117
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         17147
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.39
Number of irrelevant predicates:          8540 (50%)
Number of preds handled by boolean abs:   307 (2%)
  Total number of models for allsat:      309
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  7.268s
  Time for path formula creation:        6.966s
Time for strengthen operator:            0.446s
Time for prec operator:                  5.693s
  Time for abstraction:                  5.275s (Max:     0.067s, Count: 23059)
    Boolean abstraction:                 0.451s
    Solving time:                        1.272s (Max:     0.062s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.024s (Max:     0.009s)
Time for merge operator:                 0.771s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.297s

Number of path formula cache hits:   538054 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.741s

Total number of created targets for pointer analysis: 104
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *_Bool is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         617 (count: 18361, min: 0, max: 80, avg: 0.03)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.892s
  Time for transition matches:                         0.503s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       600615 (count: 600615, min: 1, max: 1, avg: 1.00) [1 x 600615]

CPA algorithm statistics
------------------------
Number of iterations:            234459
Max size of waitlist:            80
Average size of waitlist:        43
Number of computed successors:   275420
Max successors for one state:    2
Number of times merged:          34060
Number of times stopped:         38404
Number of times breaked:         39

Total time for CPA algorithm:        23.235s (Max:     1.964s)
  Time for choose from waitlist:      0.156s
  Time for precision adjustment:      7.245s
  Time for transfer relation:        12.723s
  Time for merge operator:            1.483s
  Time for stop operator:             0.329s
  Time for adding to reached set:     0.333s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                1253 (count: 39, min: 8, max: 59, avg: 32.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.177s
  Counterexample analysis:                             1.505s (Max:     0.101s, Calls: 39)
    Refinement sat check:                              1.196s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.018s
  ARG update:                                          0.554s

Length of refined path (in blocks):                    1214 (count: 39, min: 7, max: 58, avg: 31.13)
Number of affected states:                             1175 (count: 39, min: 6, max: 57, avg: 30.13)
Length (states) of path with itp 'true':                  0 (count: 39, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1175 (count: 39, min: 6, max: 57, avg: 30.13)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1136 (count: 39, min: 5, max: 56, avg: 29.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 8564
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 5956.92
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.668s
Time for refinements:                 2.432s
Average time for refinement:          0.062s
Max time for refinement:              0.125s

Code Coverage
-----------------------------
  Function coverage:      0.643
  Visited lines:          3854
  Total lines:            4407
  Line coverage:          0.875
  Visited conditions:     304
  Total conditions:       360
  Condition coverage:     0.844

CPAchecker general statistics
-----------------------------
Number of program locations:     4826
Number of CFA edges:             5053
Number of relevant variables:    1274
Number of functions:             56
Number of loops:                 11
Size of reached set:             4644
  Number of reached locations:   891 (18%)
    Avg states per location:     5
    Max states per location:     64 (at node N190)
  Number of reached functions:   36 (64%)
  Number of partitions:          4644
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        41

Time for analysis setup:          4.180s
  Time for loading CPAs:          0.742s
  Time for loading parser:        0.530s
  Time for CFA construction:      2.781s
    Time for parsing file(s):     0.728s
    Time for AST to CFA:          0.887s
    Time for CFA sanity check:    0.265s
    Time for post-processing:     0.719s
      Time for var class.:        0.386s
Time for Analysis:               25.668s
CPU time for analysis:           25.660s
Total time for CPAchecker:       29.852s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.112s

Time for Garbage Collector:       2.060s (in 113 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                130MB (   124 MiB) max;     72MB (    69 MiB) avg;    148MB (   141 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           181MB (   172 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
