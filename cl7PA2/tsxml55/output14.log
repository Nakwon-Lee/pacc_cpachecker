scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_snvs571z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13831 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12929 (93%)
  Because of loop head:            862 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (0%)
  Times precision was empty:       1645 (12%)
  Times precision was {false}:     1221 (9%)
  Times result was cached:         10672 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      293 (2%)
  Times result was 'false':        66 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         23311
  BDD entailment checks:           3227
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       378
Number of predicates discovered:          2
Number of abstraction locations:          110
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         12186
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 8.05
Number of irrelevant predicates:          5594 (46%)
Number of preds handled by boolean abs:   293 (2%)
  Total number of models for allsat:      296
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  8.580s
  Time for path formula creation:        8.465s
Time for strengthen operator:            0.285s
Time for prec operator:                  6.307s
  Time for abstraction:                  5.898s (Max:     0.092s, Count: 13831)
    Boolean abstraction:                 0.370s
    Solving time:                        2.356s (Max:     0.089s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.013s (Max:     0.005s)
Time for merge operator:                 0.664s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     2.375s

Number of path formula cache hits:   161903 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.819s

Total number of created targets for pointer analysis: 664
   Number of created targets for uf: *(void)* is 39
   Number of created targets for uf: *_Bool is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         589 (count: 12741, min: 0, max: 60, avg: 0.05)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.527s
  Time for transition matches:                         0.226s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       298460 (count: 298460, min: 1, max: 1, avg: 1.00) [1 x 298460]

CPA algorithm statistics
------------------------
Number of iterations:            88437
Max size of waitlist:            44
Average size of waitlist:        21
Number of computed successors:   102590
Max successors for one state:    2
Number of times merged:          10042
Number of times stopped:         12860
Number of times breaked:         40

Total time for CPA algorithm:        20.845s (Max:     1.644s)
  Time for choose from waitlist:      0.101s
  Time for precision adjustment:      7.124s
  Time for transfer relation:        11.790s
  Time for merge operator:            0.905s
  Time for stop operator:             0.213s
  Time for adding to reached set:     0.153s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                2868 (count: 40, min: 33, max: 104, avg: 71.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.001s
  Counterexample analysis:                             4.518s (Max:     0.208s, Calls: 40)
    Refinement sat check:                              3.504s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.026s
  ARG update:                                          0.290s

Length of refined path (in blocks):                    2828 (count: 40, min: 32, max: 103, avg: 70.70)
Number of affected states:                             2788 (count: 40, min: 31, max: 102, avg: 69.70)
Length (states) of path with itp 'true':                  0 (count: 40, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      2788 (count: 40, min: 31, max: 102, avg: 69.70)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 40, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2748 (count: 40, min: 30, max: 101, avg: 68.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 3957
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2197.43
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.051s
Time for refinements:                 5.205s
Average time for refinement:          0.130s
Max time for refinement:              0.240s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          3481
  Total lines:            4407
  Line coverage:          0.790
  Visited conditions:     266
  Total conditions:       360
  Condition coverage:     0.739

CPAchecker general statistics
-----------------------------
Number of program locations:     4826
Number of CFA edges:             5053
Number of relevant variables:    1274
Number of functions:             56
Number of loops:                 11
Size of reached set:             1888
  Number of reached locations:   784 (16%)
    Avg states per location:     2
    Max states per location:     21 (at node N17)
  Number of reached functions:   35 (63%)
  Number of partitions:          1888
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          3.795s
  Time for loading CPAs:          0.842s
  Time for loading parser:        0.414s
  Time for CFA construction:      2.427s
    Time for parsing file(s):     0.621s
    Time for AST to CFA:          0.785s
    Time for CFA sanity check:    0.274s
    Time for post-processing:     0.652s
      Time for var class.:        0.352s
Time for Analysis:               26.051s
CPU time for analysis:           26.050s
Total time for CPAchecker:       29.849s
Total CPU time for CPAchecker:   29.840s
Time for statistics:              0.084s

Time for Garbage Collector:       1.426s (in 69 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                148MB (   141 MiB) max;     71MB (    68 MiB) avg;    152MB (   145 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           205MB (   195 MiB) max;    134MB (   128 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
