scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d310u4zi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21470 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19066 (89%)
  Because of loop head:            2375 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       11244 (52%)
  Times precision was {false}:     1152 (5%)
  Times result was cached:         8926 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      148 (1%)
  Times result was 'false':        45 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         45310
  BDD entailment checks:           5832
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       378
Number of predicates discovered:          2
Number of abstraction locations:          77
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         10226
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.87
Number of irrelevant predicates:          7626 (75%)
Number of preds handled by boolean abs:   148 (1%)
  Total number of models for allsat:      150
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  9.942s
  Time for path formula creation:        9.632s
Time for strengthen operator:            0.445s
Time for prec operator:                  4.738s
  Time for abstraction:                  4.315s (Max:     0.036s, Count: 21470)
    Boolean abstraction:                 0.222s
    Solving time:                        1.479s (Max:     0.030s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.009s (Max:     0.002s)
Time for merge operator:                 1.363s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):     1.504s

Number of path formula cache hits:   306689 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.584s

Total number of created targets for pointer analysis: 645
   Number of created targets for uf: *(void)* is 27
   Number of created targets for uf: *_Bool is 79


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         295 (count: 23729, min: 0, max: 34, avg: 0.01)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.850s
  Time for transition matches:                         0.421s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       510549 (count: 510549, min: 1, max: 1, avg: 1.00) [1 x 510549]

CPA algorithm statistics
------------------------
Number of iterations:            160549
Max size of waitlist:            81
Average size of waitlist:        42
Number of computed successors:   187169
Max successors for one state:    2
Number of times merged:          19739
Number of times stopped:         24455
Number of times breaked:         29

Total time for CPA algorithm:        24.180s (Max:     2.187s)
  Time for choose from waitlist:      0.155s
  Time for precision adjustment:      6.181s
  Time for transfer relation:        14.675s
  Time for merge operator:            1.684s
  Time for stop operator:             0.323s
  Time for adding to reached set:     0.350s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 791 (count: 29, min: 13, max: 43, avg: 27.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.387s
  Counterexample analysis:                             0.799s (Max:     0.071s, Calls: 29)
    Refinement sat check:                              0.608s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.097s
  Precision update:                                    0.018s
  ARG update:                                          0.449s

Length of refined path (in blocks):                     762 (count: 29, min: 12, max: 42, avg: 26.28)
Number of affected states:                              733 (count: 29, min: 11, max: 41, avg: 25.28)
Length (states) of path with itp 'true':                  0 (count: 29, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       733 (count: 29, min: 11, max: 41, avg: 25.28)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             704 (count: 29, min: 10, max: 40, avg: 24.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 6454
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 5571.86
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.777s
Time for refinements:                 1.597s
Average time for refinement:          0.055s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.554
  Visited lines:          3055
  Total lines:            4407
  Line coverage:          0.693
  Visited conditions:     216
  Total conditions:       360
  Condition coverage:     0.600

CPAchecker general statistics
-----------------------------
Number of program locations:     4826
Number of CFA edges:             5053
Number of relevant variables:    1274
Number of functions:             56
Number of loops:                 11
Size of reached set:             1171
  Number of reached locations:   620 (13%)
    Avg states per location:     1
    Max states per location:     16 (at node N18)
  Number of reached functions:   31 (55%)
  Number of partitions:          1164
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4381 (before line 8845), Function main called from node N4280, stack depth 1 [58472096], stack [main]])
  Number of target states:       0
  Size of final wait list        29

Time for analysis setup:          4.088s
  Time for loading CPAs:          0.847s
  Time for loading parser:        0.416s
  Time for CFA construction:      2.760s
    Time for parsing file(s):     0.728s
    Time for AST to CFA:          0.910s
    Time for CFA sanity check:    0.282s
    Time for post-processing:     0.732s
      Time for var class.:        0.371s
Time for Analysis:               25.778s
CPU time for analysis:           25.780s
Total time for CPAchecker:       29.868s
Total CPU time for CPAchecker:   29.860s
Time for statistics:              0.081s

Time for Garbage Collector:       2.283s (in 84 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                210MB (   200 MiB) max;     88MB (    84 MiB) avg;    215MB (   205 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           268MB (   256 MiB) max;    156MB (   149 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
