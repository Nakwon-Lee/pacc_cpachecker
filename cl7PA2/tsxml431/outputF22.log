scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mfd--wm8400-core.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zc38ij1x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3384: Function pointer *__cil_tmp113 with type int (*)(struct device *dev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_regmap_init_i2c to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regmap_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regmap_raw_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regmap_bulk_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mfd_add_devices to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3384: Ignoring call via function pointer wm8400_init::__cil_tmp113 for which no suitable target was found in line: ret = (*__cil_tmp113)(__cil_tmp114); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3384: Ignoring function call through function pointer *__cil_tmp113: ret = (*__cil_tmp113)(__cil_tmp114); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mfd_remove_devices to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            527 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  404 (77%)
  Because of loop head:            113 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (2%)
  Times precision was empty:       132 (25%)
  Times precision was {false}:     26 (5%)
  Times result was cached:         325 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44 (8%)
  Times result was 'false':        19 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         397
  BDD entailment checks:           141
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       122
Number of predicates discovered:          2
Number of abstraction locations:          35
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         395
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.64
Number of irrelevant predicates:          109 (28%)
Number of preds handled by boolean abs:   44 (11%)
  Total number of models for allsat:      44
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.587s
  Time for path formula creation:        0.571s
Time for strengthen operator:            0.018s
Time for prec operator:                  0.346s
  Time for abstraction:                  0.309s (Max:     0.016s, Count: 527)
    Boolean abstraction:                 0.064s
    Solving time:                        0.056s (Max:     0.009s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.023s (Max:     0.006s)
Time for merge operator:                 0.029s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.058s

Number of path formula cache hits:   5272 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.480s

Total number of created targets for pointer analysis: 10
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *signed_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          51 (count: 672, min: 0, max: 51, avg: 0.08)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.057s
Automaton transfers with branching:                0
Automaton transfer successors:                         6938 (count: 6938, min: 1, max: 1, avg: 1.00) [1 x 6938]

CPA algorithm statistics
------------------------
Number of iterations:            2475
Max size of waitlist:            12
Average size of waitlist:        4
Number of computed successors:   2778
Max successors for one state:    2
Number of times merged:          128
Number of times stopped:         233
Number of times breaked:         10

Total time for CPA algorithm:         1.622s (Max:     0.293s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      0.487s
  Time for transfer relation:         0.939s
  Time for merge operator:            0.068s
  Time for stop operator:             0.031s
  Time for adding to reached set:     0.027s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 181 (count: 10, min: 5, max: 28, avg: 18.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.168s
  Counterexample analysis:                             0.109s (Max:     0.019s, Calls: 10)
    Refinement sat check:                              0.068s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.002s
  ARG update:                                          0.033s

Length of refined path (in blocks):                     171 (count: 10, min: 4, max: 27, avg: 17.10)
Number of affected states:                              161 (count: 10, min: 3, max: 26, avg: 16.10)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       161 (count: 10, min: 3, max: 26, avg: 16.10)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             151 (count: 10, min: 2, max: 25, avg: 15.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 344
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 226.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.843s
Time for refinements:                 0.220s
Average time for refinement:          0.022s
Max time for refinement:              0.036s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          1056
  Total lines:            1333
  Line coverage:          0.792
  Visited conditions:     58
  Total conditions:       92
  Condition coverage:     0.630

CPAchecker general statistics
-----------------------------
Number of program locations:     1534
Number of CFA edges:             1589
Number of relevant variables:    302
Number of functions:             30
Number of loops:                 9
Size of reached set:             297
  Number of reached locations:   229 (15%)
    Avg states per location:     1
    Max states per location:     3 (at node N512)
  Number of reached functions:   16 (53%)
  Number of partitions:          297
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.292s
  Time for loading CPAs:          0.641s
  Time for loading parser:        0.491s
  Time for CFA construction:      2.040s
    Time for parsing file(s):     0.675s
    Time for AST to CFA:          0.639s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.413s
      Time for var class.:        0.217s
Time for Analysis:                1.843s
CPU time for analysis:            1.850s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.139s
Total CPU time for CPAchecker:    5.140s
Time for statistics:              0.067s

Time for Garbage Collector:       0.110s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     32MB (    31 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8038MB (  7666 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
