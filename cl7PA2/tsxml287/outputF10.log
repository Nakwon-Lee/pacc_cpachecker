scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--input--touchscreen--penmount.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u01x9w29/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2864: Ignoring call via function pointer pm_interrupt::__cil_tmp15 for which no suitable target was found in line: (*__cil_tmp15)(pm); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2864: Ignoring function call through function pointer *__cil_tmp15: (*__cil_tmp15)(pm); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_report_pointer_emulation to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_report_slot_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3465 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3001 (87%)
  Because of loop head:            445 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (1%)
  Times precision was empty:       1286 (37%)
  Times precision was {false}:     151 (4%)
  Times result was cached:         1963 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      65 (2%)
  Times result was 'false':        37 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1927
  BDD entailment checks:           937
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          2
Number of abstraction locations:          58
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2179
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 10.09
Number of irrelevant predicates:          1120 (51%)
Number of preds handled by boolean abs:   65 (3%)
  Total number of models for allsat:      65
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.893s
  Time for path formula creation:        1.802s
Time for strengthen operator:            0.098s
Time for prec operator:                  1.265s
  Time for abstraction:                  1.166s (Max:     0.028s, Count: 3465)
    Boolean abstraction:                 0.104s
    Solving time:                        0.350s (Max:     0.023s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.020s (Max:     0.005s)
Time for merge operator:                 0.139s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.002s
Total time for SMT solver (w/o itp):     0.353s

Number of path formula cache hits:   31189 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.689s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         131 (count: 3373, min: 0, max: 40, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.245s
Automaton transfers with branching:                0
Automaton transfer successors:                        52829 (count: 52829, min: 1, max: 1, avg: 1.00) [1 x 52829]

CPA algorithm statistics
------------------------
Number of iterations:            13338
Max size of waitlist:            12
Average size of waitlist:        7
Number of computed successors:   14637
Max successors for one state:    2
Number of times merged:          495
Number of times stopped:         1222
Number of times breaked:         19

Total time for CPA algorithm:         5.255s (Max:     0.559s)
  Time for choose from waitlist:      0.053s
  Time for precision adjustment:      1.589s
  Time for transfer relation:         3.024s
  Time for merge operator:            0.218s
  Time for stop operator:             0.081s
  Time for adding to reached set:     0.120s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 342 (count: 19, min: 5, max: 26, avg: 18.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.279s
  Counterexample analysis:                             0.179s (Max:     0.018s, Calls: 19)
    Refinement sat check:                              0.105s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.010s
  ARG update:                                          0.045s

Length of refined path (in blocks):                     323 (count: 19, min: 4, max: 25, avg: 17.00)
Number of affected states:                              304 (count: 19, min: 3, max: 24, avg: 16.00)
Length (states) of path with itp 'true':                  0 (count: 19, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       304 (count: 19, min: 3, max: 24, avg: 16.00)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 19, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             285 (count: 19, min: 2, max: 23, avg: 15.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 830
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 685.21
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.568s
Time for refinements:                 0.312s
Average time for refinement:          0.016s
Max time for refinement:              0.033s

Code Coverage
-----------------------------
  Function coverage:      0.688
  Visited lines:          1485
  Total lines:            1533
  Line coverage:          0.969
  Visited conditions:     72
  Total conditions:       92
  Condition coverage:     0.783

CPAchecker general statistics
-----------------------------
Number of program locations:     1733
Number of CFA edges:             1790
Number of relevant variables:    390
Number of functions:             32
Number of loops:                 3
Size of reached set:             417
  Number of reached locations:   277 (16%)
    Avg states per location:     1
    Max states per location:     5 (at node N846)
  Number of reached functions:   22 (69%)
  Number of partitions:          417
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.569s
  Time for loading CPAs:          0.485s
  Time for loading parser:        0.447s
  Time for CFA construction:      1.531s
    Time for parsing file(s):     0.472s
    Time for AST to CFA:          0.485s
    Time for CFA sanity check:    0.120s
    Time for post-processing:     0.353s
      Time for var class.:        0.187s
Time for Analysis:                5.568s
CPU time for analysis:            5.570s
Time for analyzing result:        0.005s
Total time for CPAchecker:        8.140s
Total CPU time for CPAchecker:    8.140s
Time for statistics:              0.071s

Time for Garbage Collector:       0.178s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     41MB (    39 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7996MB (  7626 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
