scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--input--joystick--spaceball.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vaggbz40/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2557 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2343 (92%)
  Because of loop head:            201 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       1455 (57%)
  Times precision was {false}:     68 (3%)
  Times result was cached:         992 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42 (2%)
  Times result was 'false':        14 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1740
  BDD entailment checks:           544
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          2
Number of abstraction locations:          56
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1102
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 10.02
Number of irrelevant predicates:          559 (51%)
Number of preds handled by boolean abs:   42 (4%)
  Total number of models for allsat:      42
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.350s
  Time for path formula creation:        1.299s
Time for strengthen operator:            0.050s
Time for prec operator:                  0.791s
  Time for abstraction:                  0.690s (Max:     0.024s, Count: 2557)
    Boolean abstraction:                 0.083s
    Solving time:                        0.142s (Max:     0.018s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.118s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.146s

Number of path formula cache hits:   23325 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.186s

Total number of created targets for pointer analysis: 200
   Number of created targets for uf: *(char)* is 101


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          85 (count: 2596, min: 0, max: 32, avg: 0.03)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.166s
Automaton transfers with branching:                0
Automaton transfer successors:                        32536 (count: 32536, min: 1, max: 1, avg: 1.00) [1 x 32536]

CPA algorithm statistics
------------------------
Number of iterations:            10210
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   11227
Max successors for one state:    2
Number of times merged:          598
Number of times stopped:         986
Number of times breaked:         13

Total time for CPA algorithm:         3.805s (Max:     0.853s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      1.091s
  Time for transfer relation:         2.192s
  Time for merge operator:            0.169s
  Time for stop operator:             0.088s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 249 (count: 13, min: 8, max: 43, avg: 19.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.253s
  Counterexample analysis:                             0.153s (Max:     0.025s, Calls: 13)
    Refinement sat check:                              0.099s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.009s
  ARG update:                                          0.060s

Length of refined path (in blocks):                     236 (count: 13, min: 7, max: 42, avg: 18.15)
Number of affected states:                              223 (count: 13, min: 6, max: 41, avg: 17.15)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       223 (count: 13, min: 6, max: 41, avg: 17.15)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             210 (count: 13, min: 5, max: 40, avg: 16.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 810
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 758.54
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.127s
Time for refinements:                 0.320s
Average time for refinement:          0.024s
Max time for refinement:              0.063s

Code Coverage
-----------------------------
  Function coverage:      0.615
  Visited lines:          1225
  Total lines:            1273
  Line coverage:          0.962
  Visited conditions:     80
  Total conditions:       100
  Condition coverage:     0.800

CPAchecker general statistics
-----------------------------
Number of program locations:     1435
Number of CFA edges:             1506
Number of relevant variables:    236
Number of functions:             26
Number of loops:                 3
Size of reached set:             406
  Number of reached locations:   294 (20%)
    Avg states per location:     1
    Max states per location:     21 (at node N18)
  Number of reached functions:   16 (62%)
  Number of partitions:          406
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.131s
  Time for loading CPAs:          0.653s
  Time for loading parser:        0.538s
  Time for CFA construction:      1.843s
    Time for parsing file(s):     0.562s
    Time for AST to CFA:          0.599s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.403s
      Time for var class.:        0.202s
Time for Analysis:                4.127s
CPU time for analysis:            4.120s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.267s
Total CPU time for CPAchecker:    7.240s
Time for statistics:              0.069s

Time for Garbage Collector:       0.156s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     37MB (    36 MiB) avg;     67MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
