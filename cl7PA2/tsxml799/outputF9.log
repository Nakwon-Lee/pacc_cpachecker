scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-cinergyT2.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qlrsdiiv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_generic_rw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            701 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  511 (73%)
  Because of loop head:            179 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (2%)
  Times precision was empty:       273 (39%)
  Times precision was {false}:     54 (8%)
  Times result was cached:         347 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27 (4%)
  Times result was 'false':        11 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1923
  BDD entailment checks:           339
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       132
Number of predicates discovered:          2
Number of abstraction locations:          25
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         428
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.28
Number of irrelevant predicates:          220 (51%)
Number of preds handled by boolean abs:   27 (6%)
  Total number of models for allsat:      27
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.616s
  Time for path formula creation:        1.585s
Time for strengthen operator:            0.085s
Time for prec operator:                  0.754s
  Time for abstraction:                  0.662s (Max:     0.038s, Count: 701)
    Boolean abstraction:                 0.133s
    Solving time:                        0.241s (Max:     0.035s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.008s (Max:     0.005s)
Time for merge operator:                 0.164s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.265s

Number of path formula cache hits:   10743 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.488s

Total number of created targets for pointer analysis: 109
   Number of created targets for uf: *signed_int is 9
   Number of created targets for uf: *unsigned_char is 2
   Number of created targets for uf: *char is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          45 (count: 1049, min: 0, max: 14, avg: 0.04)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.131s
Automaton transfers with branching:                0
Automaton transfer successors:                        20820 (count: 20820, min: 1, max: 1, avg: 1.00) [1 x 20820]

CPA algorithm statistics
------------------------
Number of iterations:            6665
Max size of waitlist:            24
Average size of waitlist:        12
Number of computed successors:   7709
Max successors for one state:    2
Number of times merged:          792
Number of times stopped:         995
Number of times breaked:         11

Total time for CPA algorithm:         3.722s (Max:     0.935s)
  Time for choose from waitlist:      0.027s
  Time for precision adjustment:      0.935s
  Time for transfer relation:         2.318s
  Time for merge operator:            0.222s
  Time for stop operator:             0.059s
  Time for adding to reached set:     0.048s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  76 (count: 11, min: 4, max: 9, avg: 6.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.198s
  Counterexample analysis:                             0.138s (Max:     0.023s, Calls: 11)
    Refinement sat check:                              0.074s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.004s
  ARG update:                                          0.043s

Length of refined path (in blocks):                      65 (count: 11, min: 3, max: 8, avg: 5.91)
Number of affected states:                               54 (count: 11, min: 2, max: 7, avg: 4.91)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        54 (count: 11, min: 2, max: 7, avg: 4.91)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              43 (count: 11, min: 1, max: 6, avg: 3.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 631
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 583.27
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.952s
Time for refinements:                 0.229s
Average time for refinement:          0.020s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.382
  Visited lines:          1717
  Total lines:            2254
  Line coverage:          0.762
  Visited conditions:     96
  Total conditions:       164
  Condition coverage:     0.585

CPAchecker general statistics
-----------------------------
Number of program locations:     2474
Number of CFA edges:             2552
Number of relevant variables:    448
Number of functions:             34
Number of loops:                 3
Size of reached set:             321
  Number of reached locations:   300 (12%)
    Avg states per location:     1
    Max states per location:     11 (at node N1594)
  Number of reached functions:   13 (38%)
  Number of partitions:          321
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.374s
  Time for loading CPAs:          0.637s
  Time for loading parser:        0.455s
  Time for CFA construction:      2.154s
    Time for parsing file(s):     0.647s
    Time for AST to CFA:          0.735s
    Time for CFA sanity check:    0.138s
    Time for post-processing:     0.493s
      Time for var class.:        0.240s
Time for Analysis:                3.952s
CPU time for analysis:            3.960s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.333s
Total CPU time for CPAchecker:    7.330s
Time for statistics:              0.083s

Time for Garbage Collector:       0.201s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     41MB (    39 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8052MB (  7679 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
