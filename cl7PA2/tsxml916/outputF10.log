scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--video--backlight--l4f00242t03.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j9aavht2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_set_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4181: Unsupported feature (recursion): l4f00242t03_lcd_power_set(ld, power); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2162 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1869 (86%)
  Because of loop head:            282 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (1%)
  Times precision was empty:       1476 (68%)
  Times precision was {false}:     70 (3%)
  Times result was cached:         567 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      49 (2%)
  Times result was 'false':        11 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1079
  BDD entailment checks:           331
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       77
Number of predicates discovered:          2
Number of abstraction locations:          40
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         686
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.76
Number of irrelevant predicates:          343 (50%)
Number of preds handled by boolean abs:   49 (7%)
  Total number of models for allsat:      51
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.471s
  Time for path formula creation:        1.395s
Time for strengthen operator:            0.129s
Time for prec operator:                  0.652s
  Time for abstraction:                  0.576s (Max:     0.016s, Count: 2162)
    Boolean abstraction:                 0.057s
    Solving time:                        0.074s (Max:     0.013s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.090s

Number of path formula cache hits:   25068 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.309s

Total number of created targets for pointer analysis: 560
   Number of created targets for uf: *unsigned_short_int is 22


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          81 (count: 2456, min: 0, max: 20, avg: 0.03)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.153s
Automaton transfers with branching:                0
Automaton transfer successors:                        33496 (count: 33496, min: 1, max: 1, avg: 1.00) [1 x 33496]

CPA algorithm statistics
------------------------
Number of iterations:            8159
Max size of waitlist:            29
Average size of waitlist:        13
Number of computed successors:   9033
Max successors for one state:    2
Number of times merged:          374
Number of times stopped:         600
Number of times breaked:         11

Total time for CPA algorithm:         3.507s (Max:     0.617s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      0.824s
  Time for transfer relation:         2.320s
  Time for merge operator:            0.123s
  Time for stop operator:             0.058s
  Time for adding to reached set:     0.031s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 154 (count: 11, min: 6, max: 25, avg: 14.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.189s
  Counterexample analysis:                             0.086s (Max:     0.018s, Calls: 11)
    Refinement sat check:                              0.054s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.006s
  ARG update:                                          0.056s

Length of refined path (in blocks):                     143 (count: 11, min: 5, max: 24, avg: 13.00)
Number of affected states:                              132 (count: 11, min: 4, max: 23, avg: 12.00)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       132 (count: 11, min: 4, max: 23, avg: 12.00)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             121 (count: 11, min: 3, max: 22, avg: 11.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 1046
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 676.27
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.737s
Time for refinements:                 0.230s
Average time for refinement:          0.020s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.731
  Visited lines:          1398
  Total lines:            1441
  Line coverage:          0.970
  Visited conditions:     66
  Total conditions:       74
  Condition coverage:     0.892

CPAchecker general statistics
-----------------------------
Number of program locations:     1594
Number of CFA edges:             1647
Number of relevant variables:    254
Number of functions:             26
Number of loops:                 4
Size of reached set:             1017
  Number of reached locations:   270 (17%)
    Avg states per location:     3
    Max states per location:     22 (at node N37)
  Number of reached functions:   19 (73%)
  Number of partitions:          1012
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N969 (before line 4631), Function main called from node N902, stack depth 1 [61884cb1], stack [main]])
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          2.960s
  Time for loading CPAs:          0.659s
  Time for loading parser:        0.477s
  Time for CFA construction:      1.741s
    Time for parsing file(s):     0.619s
    Time for AST to CFA:          0.540s
    Time for CFA sanity check:    0.085s
    Time for post-processing:     0.343s
      Time for var class.:        0.159s
Time for Analysis:                3.737s
CPU time for analysis:            3.730s
Total time for CPAchecker:        6.700s
Total CPU time for CPAchecker:    6.690s
Time for statistics:              0.068s

Time for Garbage Collector:       0.143s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     38MB (    36 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   7989MB (  7619 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
