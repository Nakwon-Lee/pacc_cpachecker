scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--video--backlight--l4f00242t03.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yed578jy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_set_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4181: Unsupported feature (recursion): l4f00242t03_lcd_power_set(ld, power); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2453 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2204 (90%)
  Because of loop head:            236 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       1343 (55%)
  Times precision was {false}:     123 (5%)
  Times result was cached:         932 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      55 (2%)
  Times result was 'false':        13 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1627
  BDD entailment checks:           489
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       77
Number of predicates discovered:          2
Number of abstraction locations:          44
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1110
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.24
Number of irrelevant predicates:          551 (50%)
Number of preds handled by boolean abs:   55 (5%)
  Total number of models for allsat:      57
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  2.484s
  Time for path formula creation:        2.412s
Time for strengthen operator:            0.087s
Time for prec operator:                  0.771s
  Time for abstraction:                  0.686s (Max:     0.014s, Count: 2453)
    Boolean abstraction:                 0.089s
    Solving time:                        0.158s (Max:     0.013s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.086s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.160s

Number of path formula cache hits:   28604 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.284s

Total number of created targets for pointer analysis: 2856
   Number of created targets for uf: *unsigned_short_int is 28


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         111 (count: 2782, min: 0, max: 22, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.191s
Automaton transfers with branching:                0
Automaton transfer successors:                        51343 (count: 51343, min: 1, max: 1, avg: 1.00) [1 x 51343]

CPA algorithm statistics
------------------------
Number of iterations:            10337
Max size of waitlist:            26
Average size of waitlist:        15
Number of computed successors:   11502
Max successors for one state:    2
Number of times merged:          569
Number of times stopped:         879
Number of times breaked:         13

Total time for CPA algorithm:         4.834s (Max:     0.943s)
  Time for choose from waitlist:      0.035s
  Time for precision adjustment:      1.007s
  Time for transfer relation:         3.406s
  Time for merge operator:            0.148s
  Time for stop operator:             0.054s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 216 (count: 13, min: 6, max: 31, avg: 16.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.204s
  Counterexample analysis:                             0.124s (Max:     0.021s, Calls: 13)
    Refinement sat check:                              0.057s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.010s
  ARG update:                                          0.039s

Length of refined path (in blocks):                     203 (count: 13, min: 5, max: 30, avg: 15.62)
Number of affected states:                              190 (count: 13, min: 4, max: 29, avg: 14.62)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       190 (count: 13, min: 4, max: 29, avg: 14.62)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             177 (count: 13, min: 3, max: 28, avg: 13.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 986
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 757.54
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.080s
Time for refinements:                 0.246s
Average time for refinement:          0.018s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.731
  Visited lines:          1398
  Total lines:            1441
  Line coverage:          0.970
  Visited conditions:     66
  Total conditions:       74
  Condition coverage:     0.892

CPAchecker general statistics
-----------------------------
Number of program locations:     1594
Number of CFA edges:             1647
Number of relevant variables:    254
Number of functions:             26
Number of loops:                 4
Size of reached set:             802
  Number of reached locations:   269 (17%)
    Avg states per location:     2
    Max states per location:     20 (at node N38)
  Number of reached functions:   19 (73%)
  Number of partitions:          802
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          3.064s
  Time for loading CPAs:          0.745s
  Time for loading parser:        0.490s
  Time for CFA construction:      1.724s
    Time for parsing file(s):     0.616s
    Time for AST to CFA:          0.533s
    Time for CFA sanity check:    0.072s
    Time for post-processing:     0.330s
      Time for var class.:        0.155s
Time for Analysis:                5.080s
CPU time for analysis:            5.080s
Total time for CPAchecker:        8.146s
Total CPU time for CPAchecker:    8.140s
Time for statistics:              0.071s

Time for Garbage Collector:       0.243s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     41MB (    39 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8056MB (  7683 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
