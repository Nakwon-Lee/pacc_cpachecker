scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--usb--serial--mos7840.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_idqc4xpt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3692: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3695: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3698: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3704: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10629: Destroying the void* pointer mos7840_write::__cil_tmp68 produces garbage or the memory pointed by it is unused: status = mos7840_write(tty, port, __cil_tmp36, 1); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10833: Destroying the void* pointer mos7840_write::__cil_tmp68 produces garbage or the memory pointed by it is unused: status = mos7840_write(tty, port, __cil_tmp32, 1); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15919: Destroying the void* pointer mos7840_write::__cil_tmp68 produces garbage or the memory pointed by it is unused: mos7840_write(var_group1, var_group2, var_mos7840_write_24_p2, var_mos7840_write_24_p3); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            34487 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30738 (89%)
  Because of loop head:            3656 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         93 (0%)
  Times precision was empty:       2995 (9%)
  Times precision was {false}:     426 (1%)
  Times result was cached:         30573 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      493 (1%)
  Times result was 'false':        139 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         64236
  BDD entailment checks:           7054
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       442
Number of predicates discovered:          2
Number of abstraction locations:          226
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         31492
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 34.27
Number of irrelevant predicates:          2735 (9%)
Number of preds handled by boolean abs:   493 (2%)
  Total number of models for allsat:      492
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.574s
  Time for path formula creation:        3.280s
Time for strengthen operator:            0.709s
Time for prec operator:                  7.881s
  Time for abstraction:                  7.285s (Max:     0.025s, Count: 34487)
    Boolean abstraction:                 0.776s
    Solving time:                        1.256s (Max:     0.019s)
    Model enumeration time:              0.039s
    Time for BDD construction:           0.034s (Max:     0.010s)
Time for merge operator:                 0.218s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.295s

Number of path formula cache hits:   798788 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.585s

Total number of created targets for pointer analysis: 209
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *signed_int is 8
   Number of created targets for uf: *unsigned_char is 6
   Number of created targets for uf: *_Bool is 5
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         988 (count: 15142, min: 0, max: 60, avg: 0.07)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.040s
  Time for transition matches:                         0.457s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       780924 (count: 780924, min: 1, max: 1, avg: 1.00) [1 x 780924]

CPA algorithm statistics
------------------------
Number of iterations:            290552
Max size of waitlist:            39
Average size of waitlist:        12
Number of computed successors:   328415
Max successors for one state:    2
Number of times merged:          28591
Number of times stopped:         35192
Number of times breaked:         93

Total time for CPA algorithm:        22.003s (Max:     0.746s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:      9.565s
  Time for transfer relation:         9.882s
  Time for merge operator:            0.620s
  Time for stop operator:             0.411s
  Time for adding to reached set:     0.439s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   93
Avg. length of target path (in blocks):                2187 (count: 93, min: 4, max: 85, avg: 23.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.866s
  Counterexample analysis:                             2.077s (Max:     0.242s, Calls: 93)
    Refinement sat check:                              1.579s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.087s
  ARG update:                                          0.588s

Length of refined path (in blocks):                    2094 (count: 93, min: 3, max: 84, avg: 22.52)
Number of affected states:                             2001 (count: 93, min: 2, max: 83, avg: 21.52)
Length (states) of path with itp 'true':                  0 (count: 93, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      2001 (count: 93, min: 2, max: 83, avg: 21.52)
Length (states) of path with itp 'false':                93 (count: 93, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 93, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1908 (count: 93, min: 1, max: 82, avg: 20.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                93
Number of successful refinements:     93
Number of failed refinements:         0
Max. size of reached set before ref.: 6461
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 3090.44
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.170s
Time for refinements:                 3.141s
Average time for refinement:          0.033s
Max time for refinement:              0.262s

Code Coverage
-----------------------------
  Function coverage:      0.784
  Visited lines:          6644
  Total lines:            8661
  Line coverage:          0.767
  Visited conditions:     786
  Total conditions:       998
  Condition coverage:     0.788

CPAchecker general statistics
-----------------------------
Number of program locations:     9928
Number of CFA edges:             10559
Number of relevant variables:    2363
Number of functions:             74
Number of loops:                 16
Size of reached set:             5953
  Number of reached locations:   2720 (27%)
    Avg states per location:     2
    Max states per location:     59 (at node N334)
  Number of reached functions:   58 (78%)
  Number of partitions:          5953
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          5.144s
  Time for loading CPAs:          0.893s
  Time for loading parser:        0.498s
  Time for CFA construction:      3.630s
    Time for parsing file(s):     0.799s
    Time for AST to CFA:          1.125s
    Time for CFA sanity check:    0.515s
    Time for post-processing:     1.063s
      Time for var class.:        0.468s
Time for Analysis:               25.170s
CPU time for analysis:           25.170s
Total time for CPAchecker:       30.324s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.176s

Time for Garbage Collector:       1.260s (in 149 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 96MB (    92 MiB) max;     60MB (    57 MiB) avg;    100MB (    95 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
