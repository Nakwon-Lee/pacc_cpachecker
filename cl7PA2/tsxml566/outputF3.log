scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--usb--serial--mos7840.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xcpmn18y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3692: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3695: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3698: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3704: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15919: Destroying the void* pointer mos7840_write::__cil_tmp68 produces garbage or the memory pointed by it is unused: mos7840_write(var_group1, var_group2, var_mos7840_write_24_p2, var_mos7840_write_24_p3); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10833: Destroying the void* pointer mos7840_write::__cil_tmp68 produces garbage or the memory pointed by it is unused: status = mos7840_write(tty, port, __cil_tmp32, 1); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10629: Destroying the void* pointer mos7840_write::__cil_tmp68 produces garbage or the memory pointed by it is unused: status = mos7840_write(tty, port, __cil_tmp36, 1); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 15867: Destroying the void* pointer mos7840_open::__cil_tmp65 produces garbage or the memory pointed by it is unused: res_mos7840_open_18 = mos7840_open(var_group1, var_group2); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            58376 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  51881 (89%)
  Because of loop head:            6388 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         107 (0%)
  Times precision was empty:       9758 (17%)
  Times precision was {false}:     2003 (3%)
  Times result was cached:         45970 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      645 (1%)
  Times result was 'false':        242 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         115307
  BDD entailment checks:           13975
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       442
Number of predicates discovered:          2
Number of abstraction locations:          263
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         48618
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 18.36
Number of irrelevant predicates:          12241 (25%)
Number of preds handled by boolean abs:   645 (1%)
  Total number of models for allsat:      644
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 10.386s
  Time for path formula creation:        9.853s
Time for strengthen operator:            0.984s
Time for prec operator:                 12.048s
  Time for abstraction:                 10.646s (Max:     0.291s, Count: 58376)
    Boolean abstraction:                 0.856s
    Solving time:                        2.678s (Max:     0.019s)
    Model enumeration time:              0.066s
    Time for BDD construction:           0.061s (Max:     0.010s)
Time for merge operator:                 0.694s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     2.744s

Number of path formula cache hits:   1358716 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.281s

Total number of created targets for pointer analysis: 2601
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *unsigned_char is 5
   Number of created targets for uf: *_Bool is 10
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1276 (count: 37624, min: 0, max: 166, avg: 0.03)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.831s
  Time for transition matches:                         1.009s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      1577533 (count: 1577533, min: 1, max: 1, avg: 1.00) [1 x 1577533]

CPA algorithm statistics
------------------------
Number of iterations:            510790
Max size of waitlist:            63
Average size of waitlist:        26
Number of computed successors:   576304
Max successors for one state:    2
Number of times merged:          50666
Number of times stopped:         61250
Number of times breaked:         107

Total time for CPA algorithm:        39.158s (Max:     1.182s)
  Time for choose from waitlist:      0.174s
  Time for precision adjustment:     14.484s
  Time for transfer relation:        20.669s
  Time for merge operator:            1.216s
  Time for stop operator:             0.633s
  Time for adding to reached set:     0.582s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   107
Avg. length of target path (in blocks):                2823 (count: 107, min: 4, max: 123, avg: 26.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.054s
  Counterexample analysis:                             1.905s (Max:     0.134s, Calls: 107)
    Refinement sat check:                              1.401s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.042s
  ARG update:                                          0.984s

Length of refined path (in blocks):                    2716 (count: 107, min: 3, max: 122, avg: 25.38)
Number of affected states:                             2609 (count: 107, min: 2, max: 121, avg: 24.38)
Length (states) of path with itp 'true':                  0 (count: 107, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      2609 (count: 107, min: 2, max: 121, avg: 24.38)
Length (states) of path with itp 'false':               107 (count: 107, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 107, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2502 (count: 107, min: 1, max: 120, avg: 23.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                107
Number of successful refinements:     107
Number of failed refinements:         0
Max. size of reached set before ref.: 8045
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 4743.12
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      42.629s
Time for refinements:                 3.467s
Average time for refinement:          0.032s
Max time for refinement:              0.156s

Code Coverage
-----------------------------
  Function coverage:      0.797
  Visited lines:          8158
  Total lines:            8661
  Line coverage:          0.942
  Visited conditions:     912
  Total conditions:       998
  Condition coverage:     0.914

CPAchecker general statistics
-----------------------------
Number of program locations:     9928
Number of CFA edges:             10559
Number of relevant variables:    2363
Number of functions:             74
Number of loops:                 16
Size of reached set:             7620
  Number of reached locations:   3190 (32%)
    Avg states per location:     2
    Max states per location:     97 (at node N333)
  Number of reached functions:   59 (80%)
  Number of partitions:          7620
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.369s
  Time for loading CPAs:          0.975s
  Time for loading parser:        0.475s
  Time for CFA construction:      3.802s
    Time for parsing file(s):     0.845s
    Time for AST to CFA:          1.177s
    Time for CFA sanity check:    0.470s
    Time for post-processing:     1.187s
      Time for var class.:        0.497s
Time for Analysis:               42.629s
CPU time for analysis:           42.630s
Time for analyzing result:        0.007s
Total time for CPAchecker:       48.002s
Total CPU time for CPAchecker:   47.980s
Time for statistics:              0.182s

Time for Garbage Collector:       3.815s (in 164 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                295MB (   282 MiB) max;    139MB (   133 MiB) avg;    304MB (   290 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           341MB (   325 MiB) max;    219MB (   209 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8077MB (  7703 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
