scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--ide--cmd640.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3hqcqu6h/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4053: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4053: Ignoring call via function pointer slow_down_io::__cil_tmp2 for which no suitable target was found in line: (*__cil_tmp2)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4053: Ignoring function call through function pointer *__cil_tmp2: (*__cil_tmp2)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_pio_cycle_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_timing_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4447: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4447: Ignoring function call through function pointer *__get_cmd640_reg: b = (*__get_cmd640_reg)(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4872: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(__cil_tmp13); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5173: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5173: Ignoring function call through function pointer *__get_cmd640_reg: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5183: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5183: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4895: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp27, b); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp27, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5189: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5189: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4477: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4477: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_host_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            62929 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  61849 (98%)
  Because of loop head:            962 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         118 (0%)
  Times precision was empty:       7493 (12%)
  Times precision was {false}:     267 (0%)
  Times result was cached:         54733 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      436 (1%)
  Times result was 'false':        528 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         14987
  BDD entailment checks:           5169
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       149
Number of predicates discovered:          5
Number of abstraction locations:          159
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         109773
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 156.15
Number of irrelevant predicates:          33140 (30%)
Number of preds handled by boolean abs:   694 (1%)
  Total number of models for allsat:      487
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                  3.331s
  Time for path formula creation:        3.161s
Time for strengthen operator:            0.418s
Time for prec operator:                  7.116s
  Time for abstraction:                  6.320s (Max:     0.033s, Count: 62929)
    Boolean abstraction:                 0.422s
    Solving time:                        0.572s (Max:     0.027s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.067s (Max:     0.010s)
Time for merge operator:                 0.141s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.605s

Number of path formula cache hits:   407804 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.430s

Total number of created targets for pointer analysis: 5847
   Number of created targets for uf: *(struct_ide_hw)* is 23
   Number of created targets for uf: *unsigned_char is 305
   Number of created targets for uf: *_Bool is 4


Number of BDD nodes:                               261
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         929 (count: 16745, min: 0, max: 52, avg: 0.06)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.666s
  Time for transition matches:                         0.359s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       387269 (count: 387269, min: 1, max: 1, avg: 1.00) [1 x 387269]

CPA algorithm statistics
------------------------
Number of iterations:            195172
Max size of waitlist:            76
Average size of waitlist:        29
Number of computed successors:   205737
Max successors for one state:    2
Number of times merged:          4909
Number of times stopped:         8026
Number of times breaked:         118

Total time for CPA algorithm:        18.019s (Max:     0.887s)
  Time for choose from waitlist:      0.160s
  Time for precision adjustment:      8.647s
  Time for transfer relation:         7.361s
  Time for merge operator:            0.249s
  Time for stop operator:             0.348s
  Time for adding to reached set:     0.374s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   118
Avg. length of target path (in blocks):               10436 (count: 118, min: 35, max: 250, avg: 88.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.014s
  Counterexample analysis:                             2.171s (Max:     0.044s, Calls: 118)
    Refinement sat check:                              1.333s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.085s
  ARG update:                                          0.564s

Length of refined path (in blocks):                    8274 (count: 118, min: 34, max: 249, avg: 70.12)
Number of affected states:                             4711 (count: 118, min: 16, max: 248, avg: 39.92)
Length (states) of path with itp 'true':               3445 (count: 118, min: 0, max: 58, avg: 29.19)
Length (states) of path with itp non-trivial itp:      4711 (count: 118, min: 16, max: 248, avg: 39.92)
Length (states) of path with itp 'false':               118 (count: 118, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 118, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4593 (count: 118, min: 15, max: 247, avg: 38.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                118
Number of successful refinements:     118
Number of failed refinements:         0
Max. size of reached set before ref.: 6240
Max. size of reached set after ref.:  5542
Avg. size of reached set before ref.: 4553.16
Avg. size of reached set after ref.:  2936.77

Total time for CEGAR algorithm:      21.949s
Time for refinements:                 3.621s
Average time for refinement:          0.030s
Max time for refinement:              0.073s

Code Coverage
-----------------------------
  Function coverage:      0.816
  Visited lines:          2061
  Total lines:            2107
  Line coverage:          0.978
  Visited conditions:     202
  Total conditions:       222
  Condition coverage:     0.910

CPAchecker general statistics
-----------------------------
Number of program locations:     2477
Number of CFA edges:             2662
Number of relevant variables:    405
Number of functions:             49
Number of loops:                 5
Size of reached set:             6450
  Number of reached locations:   747 (30%)
    Avg states per location:     8
    Max states per location:     229 (at node N0)
  Number of reached functions:   40 (82%)
  Number of partitions:          6414
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N897 (before line 5185), Function program_drive_counts called from node N1262, stack depth 3 [56507f8f], stack [main, cmd640_init_dev, program_drive_counts]])
  Number of target states:       0

Time for analysis setup:          3.254s
  Time for loading CPAs:          0.613s
  Time for loading parser:        0.481s
  Time for CFA construction:      2.068s
    Time for parsing file(s):     0.645s
    Time for AST to CFA:          0.647s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.474s
      Time for var class.:        0.227s
Time for Analysis:               21.949s
CPU time for analysis:           21.940s
Time for analyzing result:        0.005s
Total time for CPAchecker:       25.206s
Total CPU time for CPAchecker:   25.180s
Time for statistics:              0.160s

Time for Garbage Collector:       0.954s (in 101 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    90 MiB) max;     54MB (    52 MiB) avg;    105MB (   100 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8009MB (  7638 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
