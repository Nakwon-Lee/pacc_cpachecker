scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--ide--cmd640.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cofsfm1g/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4053: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_pio_cycle_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_timing_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4447: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4447: Ignoring function call through function pointer *__get_cmd640_reg: b = (*__get_cmd640_reg)(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4872: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(__cil_tmp13); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5173: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5173: Ignoring function call through function pointer *__get_cmd640_reg: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5183: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5183: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4895: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp27, b); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp27, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5189: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5189: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4477: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4477: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4053: Ignoring call via function pointer slow_down_io::__cil_tmp2 for which no suitable target was found in line: (*__cil_tmp2)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4053: Ignoring function call through function pointer *__cil_tmp2: (*__cil_tmp2)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_host_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            83415 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  81482 (98%)
  Because of loop head:            1502 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         431 (1%)
  Times precision was empty:       3393 (4%)
  Times precision was {false}:     333 (0%)
  Times result was cached:         78101 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1588 (2%)
  Times result was 'false':        1579 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         35676
  BDD entailment checks:           12190
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       149
Number of predicates discovered:          8
Number of abstraction locations:          159
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         228799
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 119.10
Number of irrelevant predicates:          109792 (48%)
Number of preds handled by boolean abs:   4657 (2%)
  Total number of models for allsat:      3487
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.20

Time for post operator:                  3.722s
  Time for path formula creation:        3.487s
Time for strengthen operator:            0.453s
Time for prec operator:                  9.787s
  Time for abstraction:                  9.082s (Max:     0.138s, Count: 83415)
    Boolean abstraction:                 1.117s
    Solving time:                        1.025s (Max:     0.027s)
    Model enumeration time:              0.133s
    Time for BDD construction:           0.116s (Max:     0.011s)
Time for merge operator:                 0.206s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     1.158s

Number of path formula cache hits:   723231 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.535s

Total number of created targets for pointer analysis: 6977
   Number of created targets for uf: *(struct_ide_hw)* is 7
   Number of created targets for uf: *unsigned_char is 129
   Number of created targets for uf: *_Bool is 4


Number of BDD nodes:                               1412
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3543 (count: 27444, min: 0, max: 173, avg: 0.13)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.907s
  Time for transition matches:                         0.473s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                       689001 (count: 689001, min: 1, max: 1, avg: 1.00) [1 x 689001]

CPA algorithm statistics
------------------------
Number of iterations:            289162
Max size of waitlist:            68
Average size of waitlist:        34
Number of computed successors:   313036
Max successors for one state:    2
Number of times merged:          11743
Number of times stopped:         14968
Number of times breaked:         431

Total time for CPA algorithm:        21.825s (Max:     0.711s)
  Time for choose from waitlist:      0.190s
  Time for precision adjustment:     11.170s
  Time for transfer relation:         8.620s
  Time for merge operator:            0.361s
  Time for stop operator:             0.326s
  Time for adding to reached set:     0.346s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   431
Avg. length of target path (in blocks):               36537 (count: 431, min: 35, max: 250, avg: 84.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.172s
  Counterexample analysis:                             6.305s (Max:     0.044s, Calls: 431)
    Refinement sat check:                              4.071s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.151s
  ARG update:                                          0.395s

Length of refined path (in blocks):                   29444 (count: 431, min: 34, max: 249, avg: 68.32)
Number of affected states:                            11723 (count: 431, min: 2, max: 248, avg: 27.20)
Length (states) of path with itp 'true':              17290 (count: 431, min: 0, max: 57, avg: 40.12)
Length (states) of path with itp non-trivial itp:     11723 (count: 431, min: 2, max: 248, avg: 27.20)
Length (states) of path with itp 'false':               431 (count: 431, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 431, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11292 (count: 431, min: 1, max: 247, avg: 26.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                431
Number of successful refinements:     431
Number of failed refinements:         0
Max. size of reached set before ref.: 10382
Max. size of reached set after ref.:  6308
Avg. size of reached set before ref.: 3336.23
Avg. size of reached set after ref.:  2672.00

Total time for CEGAR algorithm:      30.499s
Time for refinements:                 8.058s
Average time for refinement:          0.018s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.816
  Visited lines:          2061
  Total lines:            2107
  Line coverage:          0.978
  Visited conditions:     202
  Total conditions:       222
  Condition coverage:     0.910

CPAchecker general statistics
-----------------------------
Number of program locations:     2477
Number of CFA edges:             2662
Number of relevant variables:    405
Number of functions:             49
Number of loops:                 5
Size of reached set:             10207
  Number of reached locations:   747 (30%)
    Avg states per location:     13
    Max states per location:     391 (at node N0)
  Number of reached functions:   40 (82%)
  Number of partitions:          10097
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N897 (before line 5185), Function program_drive_counts called from node N1262, stack depth 3 [5b9f33e9], stack [main, cmd640_init_dev, program_drive_counts]])
  Number of target states:       0

Time for analysis setup:          2.989s
  Time for loading CPAs:          0.581s
  Time for loading parser:        0.412s
  Time for CFA construction:      1.902s
    Time for parsing file(s):     0.590s
    Time for AST to CFA:          0.620s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.421s
      Time for var class.:        0.195s
Time for Analysis:               30.499s
CPU time for analysis:           30.500s
Time for analyzing result:        0.007s
Total time for CPAchecker:       33.495s
Total CPU time for CPAchecker:   33.480s
Time for statistics:              0.169s

Time for Garbage Collector:       1.379s (in 176 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8013MB (  7642 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
