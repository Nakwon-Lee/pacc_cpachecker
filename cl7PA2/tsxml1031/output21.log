scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--ide--cmd640.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mp67_027/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4053: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4053: Ignoring call via function pointer slow_down_io::__cil_tmp2 for which no suitable target was found in line: (*__cil_tmp2)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4053: Ignoring function call through function pointer *__cil_tmp2: (*__cil_tmp2)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_host_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4447: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4447: Ignoring function call through function pointer *__get_cmd640_reg: b = (*__get_cmd640_reg)(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5173: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5173: Ignoring function call through function pointer *__get_cmd640_reg: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5183: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5183: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5189: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5189: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4872: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(__cil_tmp13); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp27, b); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp27, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ide_pio_cycle_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_timing_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4477: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4477: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            109015 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  107368 (98%)
  Because of loop head:            1583 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         64 (0%)
  Times precision was empty:       8675 (8%)
  Times precision was {false}:     406 (0%)
  Times result was cached:         98838 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1096 (1%)
  Times result was 'false':        1216 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         22903
  BDD entailment checks:           13523
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       149
Number of predicates discovered:          8
Number of abstraction locations:          158
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         317073
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 211.10
Number of irrelevant predicates:          203199 (64%)
Number of preds handled by boolean abs:   2828 (1%)
  Total number of models for allsat:      2127
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.94

Time for post operator:                  3.641s
  Time for path formula creation:        3.345s
Time for strengthen operator:            0.471s
Time for prec operator:                 10.331s
  Time for abstraction:                  9.305s (Max:     0.116s, Count: 109015)
    Boolean abstraction:                 0.872s
    Solving time:                        0.766s (Max:     0.018s)
    Model enumeration time:              0.135s
    Time for BDD construction:           0.096s (Max:     0.009s)
Time for merge operator:                 0.193s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.068s
Total time for SMT solver (w/o itp):     0.901s

Number of path formula cache hits:   635126 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.203s

Total number of created targets for pointer analysis: 2848
   Number of created targets for uf: *(struct_ide_hw)* is 73
   Number of created targets for uf: *unsigned_char is 237
   Number of created targets for uf: *_Bool is 3


Number of BDD nodes:                               893
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2339 (count: 31386, min: 0, max: 90, avg: 0.07)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.869s
  Time for transition matches:                         0.500s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       577445 (count: 577445, min: 1, max: 1, avg: 1.00) [1 x 577445]

CPA algorithm statistics
------------------------
Number of iterations:            323987
Max size of waitlist:            28
Average size of waitlist:        7
Number of computed successors:   335967
Max successors for one state:    2
Number of times merged:          4690
Number of times stopped:         10754
Number of times breaked:         64

Total time for CPA algorithm:        23.677s (Max:     1.724s)
  Time for choose from waitlist:      0.251s
  Time for precision adjustment:     12.553s
  Time for transfer relation:         8.608s
  Time for merge operator:            0.333s
  Time for stop operator:             0.448s
  Time for adding to reached set:     0.458s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   64
Avg. length of target path (in blocks):                5518 (count: 64, min: 35, max: 318, avg: 86.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.206s
  Counterexample analysis:                             1.252s (Max:     0.092s, Calls: 64)
    Refinement sat check:                              0.659s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.079s
  Precision update:                                    0.084s
  ARG update:                                          0.699s

Length of refined path (in blocks):                    4967 (count: 64, min: 34, max: 317, avg: 77.61)
Number of affected states:                             4012 (count: 64, min: 8, max: 316, avg: 62.69)
Length (states) of path with itp 'true':                891 (count: 64, min: 0, max: 38, avg: 13.92)
Length (states) of path with itp non-trivial itp:      4012 (count: 64, min: 8, max: 316, avg: 62.69)
Length (states) of path with itp 'false':                64 (count: 64, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 64, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3948 (count: 64, min: 7, max: 315, avg: 61.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                64
Number of successful refinements:     64
Number of failed refinements:         0
Max. size of reached set before ref.: 15075
Max. size of reached set after ref.:  10897
Avg. size of reached set before ref.: 8352.19
Avg. size of reached set after ref.:  3289.77

Total time for CEGAR algorithm:      26.640s
Time for refinements:                 2.811s
Average time for refinement:          0.043s
Max time for refinement:              0.155s

Code Coverage
-----------------------------
  Function coverage:      0.020
  Visited lines:          688
  Total lines:            2107
  Line coverage:          0.327
  Visited conditions:     0
  Total conditions:       222
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     2477
Number of CFA edges:             2662
Number of relevant variables:    405
Number of functions:             49
Number of loops:                 5
Size of reached set:             3
  Number of reached locations:   3 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N1677)
  Number of reached functions:   1 (2%)
  Number of partitions:          3
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          3.687s
  Time for loading CPAs:          0.758s
  Time for loading parser:        0.509s
  Time for CFA construction:      2.310s
    Time for parsing file(s):     0.722s
    Time for AST to CFA:          0.738s
    Time for CFA sanity check:    0.181s
    Time for post-processing:     0.543s
      Time for var class.:        0.236s
Time for Analysis:               26.640s
CPU time for analysis:           26.640s
Total time for CPAchecker:       30.336s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.083s

Time for Garbage Collector:       1.775s (in 165 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   116 MiB) max;     61MB (    58 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
