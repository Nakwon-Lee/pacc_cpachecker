scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--ide--cmd640.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jhi0mnt3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4053: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_pio_cycle_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_timing_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4872: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(__cil_tmp13); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp27, b); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp27, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5173: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5173: Ignoring function call through function pointer *__get_cmd640_reg: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5183: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5183: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5189: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5189: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4447: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4447: Ignoring function call through function pointer *__get_cmd640_reg: b = (*__get_cmd640_reg)(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4053: Ignoring call via function pointer slow_down_io::__cil_tmp2 for which no suitable target was found in line: (*__cil_tmp2)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4053: Ignoring function call through function pointer *__cil_tmp2: (*__cil_tmp2)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4477: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4477: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_host_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            68297 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  66728 (98%)
  Because of loop head:            1282 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         287 (0%)
  Times precision was empty:       5756 (8%)
  Times precision was {false}:     285 (0%)
  Times result was cached:         61906 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      350 (1%)
  Times result was 'false':        496 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         40327
  BDD entailment checks:           5749
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       149
Number of predicates discovered:          8
Number of abstraction locations:          149
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         80069
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 126.09
Number of irrelevant predicates:          44995 (56%)
Number of preds handled by boolean abs:   456 (1%)
  Total number of models for allsat:      353
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.01

Time for post operator:                  4.293s
  Time for path formula creation:        4.098s
Time for strengthen operator:            0.564s
Time for prec operator:                  6.011s
  Time for abstraction:                  5.277s (Max:     0.030s, Count: 68297)
    Boolean abstraction:                 0.317s
    Solving time:                        0.534s (Max:     0.027s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.052s (Max:     0.010s)
Time for merge operator:                 0.360s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.563s

Number of path formula cache hits:   691434 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.890s

Total number of created targets for pointer analysis: 5665
   Number of created targets for uf: *(struct_ide_hw)* is 5
   Number of created targets for uf: *unsigned_char is 153
   Number of created targets for uf: *_Bool is 2


Number of BDD nodes:                               387
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         829 (count: 15128, min: 0, max: 93, avg: 0.05)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.987s
  Time for transition matches:                         0.482s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       668602 (count: 668602, min: 1, max: 1, avg: 1.00) [1 x 668602]

CPA algorithm statistics
------------------------
Number of iterations:            282386
Max size of waitlist:            88
Average size of waitlist:        48
Number of computed successors:   308368
Max successors for one state:    2
Number of times merged:          17289
Number of times stopped:         19364
Number of times breaked:         287

Total time for CPA algorithm:        19.323s (Max:     1.193s)
  Time for choose from waitlist:      0.145s
  Time for precision adjustment:      7.752s
  Time for transfer relation:         9.348s
  Time for merge operator:            0.648s
  Time for stop operator:             0.299s
  Time for adding to reached set:     0.388s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   287
Avg. length of target path (in blocks):               22897 (count: 287, min: 38, max: 204, avg: 79.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.321s
  Counterexample analysis:                             4.402s (Max:     0.054s, Calls: 287)
    Refinement sat check:                              2.813s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.103s
  ARG update:                                          0.518s

Length of refined path (in blocks):                   18016 (count: 287, min: 37, max: 203, avg: 62.77)
Number of affected states:                             6693 (count: 287, min: 2, max: 202, avg: 23.32)
Length (states) of path with itp 'true':              11036 (count: 287, min: 0, max: 57, avg: 38.45)
Length (states) of path with itp non-trivial itp:      6693 (count: 287, min: 2, max: 202, avg: 23.32)
Length (states) of path with itp 'false':               287 (count: 287, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 287, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6406 (count: 287, min: 1, max: 201, avg: 22.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                287
Number of successful refinements:     287
Number of failed refinements:         0
Max. size of reached set before ref.: 6300
Max. size of reached set after ref.:  5754
Avg. size of reached set before ref.: 4811.24
Avg. size of reached set after ref.:  3819.78

Total time for CEGAR algorithm:      26.352s
Time for refinements:                 6.337s
Average time for refinement:          0.022s
Max time for refinement:              0.087s

Code Coverage
-----------------------------
  Function coverage:      0.755
  Visited lines:          1827
  Total lines:            2107
  Line coverage:          0.867
  Visited conditions:     154
  Total conditions:       222
  Condition coverage:     0.694

CPAchecker general statistics
-----------------------------
Number of program locations:     2477
Number of CFA edges:             2662
Number of relevant variables:    405
Number of functions:             49
Number of loops:                 5
Size of reached set:             3958
  Number of reached locations:   577 (23%)
    Avg states per location:     6
    Max states per location:     118 (at node N0)
  Number of reached functions:   37 (76%)
  Number of partitions:          3945
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1693 (before lines 6201-6248), Function main called from node N1677, stack depth 1 [3e792ce3], stack [main]])
  Number of target states:       0
  Size of final wait list        68

Time for analysis setup:          3.499s
  Time for loading CPAs:          0.737s
  Time for loading parser:        0.492s
  Time for CFA construction:      2.167s
    Time for parsing file(s):     0.629s
    Time for AST to CFA:          0.703s
    Time for CFA sanity check:    0.155s
    Time for post-processing:     0.539s
      Time for var class.:        0.243s
Time for Analysis:               26.352s
CPU time for analysis:           26.350s
Total time for CPAchecker:       29.856s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.151s

Time for Garbage Collector:       1.172s (in 144 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   115 MiB) max;     67MB (    64 MiB) avg;    123MB (   117 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8077MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
