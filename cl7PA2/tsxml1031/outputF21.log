scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--ide--cmd640.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7x_eqabx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4053: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4053: Ignoring call via function pointer slow_down_io::__cil_tmp2 for which no suitable target was found in line: (*__cil_tmp2)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4053: Ignoring function call through function pointer *__cil_tmp2: (*__cil_tmp2)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_host_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4447: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4447: Ignoring function call through function pointer *__get_cmd640_reg: b = (*__get_cmd640_reg)(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5173: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5173: Ignoring function call through function pointer *__get_cmd640_reg: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5183: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5183: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5189: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5189: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4872: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(__cil_tmp13); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp27, b); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp27, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ide_pio_cycle_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_timing_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4477: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4477: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            114263 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  112545 (98%)
  Because of loop head:            1653 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         65 (0%)
  Times precision was empty:       8680 (8%)
  Times precision was {false}:     442 (0%)
  Times result was cached:         103983 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1158 (1%)
  Times result was 'false':        1305 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         23975
  BDD entailment checks:           14129
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       149
Number of predicates discovered:          8
Number of abstraction locations:          159
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         342011
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 213.76
Number of irrelevant predicates:          214694 (63%)
Number of preds handled by boolean abs:   2949 (1%)
  Total number of models for allsat:      2240
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.93

Time for post operator:                  3.357s
  Time for path formula creation:        3.118s
Time for strengthen operator:            0.549s
Time for prec operator:                 11.574s
  Time for abstraction:                 10.505s (Max:     0.147s, Count: 114263)
    Boolean abstraction:                 0.937s
    Solving time:                        0.817s (Max:     0.018s)
    Model enumeration time:              0.120s
    Time for BDD construction:           0.095s (Max:     0.011s)
Time for merge operator:                 0.147s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):     0.937s

Number of path formula cache hits:   662993 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.031s

Total number of created targets for pointer analysis: 3161
   Number of created targets for uf: *(struct_ide_hw)* is 29
   Number of created targets for uf: *unsigned_char is 225
   Number of created targets for uf: *_Bool is 4


Number of BDD nodes:                               893
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2497 (count: 32583, min: 0, max: 96, avg: 0.08)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.955s
  Time for transition matches:                         0.553s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                       605392 (count: 605392, min: 1, max: 1, avg: 1.00) [1 x 605392]

CPA algorithm statistics
------------------------
Number of iterations:            339839
Max size of waitlist:            28
Average size of waitlist:        7
Number of computed successors:   352408
Max successors for one state:    2
Number of times merged:          4923
Number of times stopped:         11250
Number of times breaked:         65

Total time for CPA algorithm:        24.019s (Max:     1.566s)
  Time for choose from waitlist:      0.130s
  Time for precision adjustment:     13.353s
  Time for transfer relation:         8.406s
  Time for merge operator:            0.269s
  Time for stop operator:             0.467s
  Time for adding to reached set:     0.461s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   65
Avg. length of target path (in blocks):                5598 (count: 65, min: 35, max: 318, avg: 86.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.967s
  Counterexample analysis:                             1.157s (Max:     0.076s, Calls: 65)
    Refinement sat check:                              0.614s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.083s
  ARG update:                                          0.566s

Length of refined path (in blocks):                    5046 (count: 65, min: 34, max: 317, avg: 77.63)
Number of affected states:                             4090 (count: 65, min: 8, max: 316, avg: 62.92)
Length (states) of path with itp 'true':                891 (count: 65, min: 0, max: 38, avg: 13.71)
Length (states) of path with itp non-trivial itp:      4090 (count: 65, min: 8, max: 316, avg: 62.92)
Length (states) of path with itp 'false':                65 (count: 65, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 65, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4025 (count: 65, min: 7, max: 315, avg: 61.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                65
Number of successful refinements:     65
Number of failed refinements:         0
Max. size of reached set before ref.: 15075
Max. size of reached set after ref.:  10897
Avg. size of reached set before ref.: 8326.88
Avg. size of reached set after ref.:  3239.20

Total time for CEGAR algorithm:      26.716s
Time for refinements:                 2.569s
Average time for refinement:          0.039s
Max time for refinement:              0.108s

Code Coverage
-----------------------------
  Function coverage:      0.816
  Visited lines:          2061
  Total lines:            2107
  Line coverage:          0.978
  Visited conditions:     202
  Total conditions:       222
  Condition coverage:     0.910

CPAchecker general statistics
-----------------------------
Number of program locations:     2477
Number of CFA edges:             2662
Number of relevant variables:    405
Number of functions:             49
Number of loops:                 5
Size of reached set:             9155
  Number of reached locations:   747 (30%)
    Avg states per location:     12
    Max states per location:     339 (at node N0)
  Number of reached functions:   40 (82%)
  Number of partitions:          9066
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N897 (before line 5185), Function program_drive_counts called from node N1262, stack depth 3 [ba593e6], stack [main, cmd640_init_dev, program_drive_counts]])
  Number of target states:       0

Time for analysis setup:          3.239s
  Time for loading CPAs:          0.577s
  Time for loading parser:        0.578s
  Time for CFA construction:      1.974s
    Time for parsing file(s):     0.587s
    Time for AST to CFA:          0.632s
    Time for CFA sanity check:    0.143s
    Time for post-processing:     0.430s
      Time for var class.:        0.216s
Time for Analysis:               26.716s
CPU time for analysis:           26.720s
Time for analyzing result:        0.008s
Total time for CPAchecker:       29.958s
Total CPU time for CPAchecker:   29.950s
Time for statistics:              0.182s

Time for Garbage Collector:       1.855s (in 175 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   117 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8075MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
