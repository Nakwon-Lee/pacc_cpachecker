scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--input--touchscreen--tsc40.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a28u9z9d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            809 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  727 (90%)
  Because of loop head:            69 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (2%)
  Times precision was empty:       218 (27%)
  Times precision was {false}:     32 (4%)
  Times result was cached:         510 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      49 (6%)
  Times result was 'false':        25 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         418
  BDD entailment checks:           182
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          2
Number of abstraction locations:          45
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         591
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.30
Number of irrelevant predicates:          163 (28%)
Number of preds handled by boolean abs:   49 (8%)
  Total number of models for allsat:      49
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.558s
  Time for path formula creation:        0.546s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.468s
  Time for abstraction:                  0.385s (Max:     0.021s, Count: 809)
    Boolean abstraction:                 0.106s
    Solving time:                        0.062s (Max:     0.014s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.038s (Max:     0.013s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.073s

Number of path formula cache hits:   6611 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.506s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          99 (count: 859, min: 0, max: 54, avg: 0.12)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.092s
Automaton transfers with branching:                0
Automaton transfer successors:                         9296 (count: 9296, min: 1, max: 1, avg: 1.00) [1 x 9296]

CPA algorithm statistics
------------------------
Number of iterations:            3344
Max size of waitlist:            12
Average size of waitlist:        5
Number of computed successors:   3686
Max successors for one state:    2
Number of times merged:          118
Number of times stopped:         250
Number of times breaked:         13

Total time for CPA algorithm:         1.706s (Max:     0.368s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      0.591s
  Time for transfer relation:         0.913s
  Time for merge operator:            0.040s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.042s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 220 (count: 13, min: 5, max: 27, avg: 16.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.144s
  Counterexample analysis:                             0.061s (Max:     0.017s, Calls: 13)
    Refinement sat check:                              0.045s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.010s
  ARG update:                                          0.033s

Length of refined path (in blocks):                     207 (count: 13, min: 4, max: 26, avg: 15.92)
Number of affected states:                              194 (count: 13, min: 3, max: 25, avg: 14.92)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       194 (count: 13, min: 3, max: 25, avg: 14.92)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             181 (count: 13, min: 2, max: 24, avg: 13.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 361
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 243.23
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.871s
Time for refinements:                 0.164s
Average time for refinement:          0.012s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          849
  Total lines:            896
  Line coverage:          0.948
  Visited conditions:     46
  Total conditions:       66
  Condition coverage:     0.697

CPAchecker general statistics
-----------------------------
Number of program locations:     1048
Number of CFA edges:             1090
Number of relevant variables:    143
Number of functions:             27
Number of loops:                 1
Size of reached set:             289
  Number of reached locations:   211 (20%)
    Avg states per location:     1
    Max states per location:     7 (at node N135)
  Number of reached functions:   18 (67%)
  Number of partitions:          289
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.726s
  Time for loading CPAs:          0.658s
  Time for loading parser:        0.427s
  Time for CFA construction:      1.569s
    Time for parsing file(s):     0.457s
    Time for AST to CFA:          0.460s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.414s
      Time for var class.:        0.197s
Time for Analysis:                1.871s
CPU time for analysis:            1.870s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.599s
Total CPU time for CPAchecker:    4.600s
Time for statistics:              0.097s

Time for Garbage Collector:       0.109s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     32MB (    31 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     27MB (    25 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7982MB (  7612 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
