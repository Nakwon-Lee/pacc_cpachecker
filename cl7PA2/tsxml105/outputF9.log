scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--media--dvb--dvb-usb--dvb-usb-rtl28xxu.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_523mj1fq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7365: Function pointer *__a with type struct dvb_frontend *(*)(const struct rtl2830_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7975: Function pointer *__a___1 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, struct mxl5005s_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7910-7911: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, struct mt2060_config *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7845: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, struct qt1010_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            736 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  591 (80%)
  Because of loop head:            137 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (1%)
  Times precision was empty:       185 (25%)
  Times precision was {false}:     59 (8%)
  Times result was cached:         419 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      73 (10%)
  Times result was 'false':        19 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1392
  BDD entailment checks:           206
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          2
Number of abstraction locations:          27
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         551
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.17
Number of irrelevant predicates:          152 (28%)
Number of preds handled by boolean abs:   73 (13%)
  Total number of models for allsat:      77
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  0.850s
  Time for path formula creation:        0.823s
Time for strengthen operator:            0.020s
Time for prec operator:                  0.675s
  Time for abstraction:                  0.586s (Max:     0.019s, Count: 736)
    Boolean abstraction:                 0.107s
    Solving time:                        0.121s (Max:     0.013s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.052s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.143s

Number of path formula cache hits:   12302 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.733s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         143 (count: 1131, min: 0, max: 66, avg: 0.13)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.158s
Automaton transfers with branching:                0
Automaton transfer successors:                        15669 (count: 15669, min: 1, max: 1, avg: 1.00) [1 x 15669]

CPA algorithm statistics
------------------------
Number of iterations:            5044
Max size of waitlist:            8
Average size of waitlist:        3
Number of computed successors:   5837
Max successors for one state:    2
Number of times merged:          593
Number of times stopped:         761
Number of times breaked:         8

Total time for CPA algorithm:         2.626s (Max:     0.743s)
  Time for choose from waitlist:      0.027s
  Time for precision adjustment:      0.857s
  Time for transfer relation:         1.455s
  Time for merge operator:            0.121s
  Time for stop operator:             0.036s
  Time for adding to reached set:     0.033s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 198 (count: 8, min: 12, max: 48, avg: 24.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.185s
  Counterexample analysis:                             0.109s (Max:     0.020s, Calls: 8)
    Refinement sat check:                              0.063s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.003s
  ARG update:                                          0.035s

Length of refined path (in blocks):                     190 (count: 8, min: 11, max: 47, avg: 23.75)
Number of affected states:                              182 (count: 8, min: 10, max: 46, avg: 22.75)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       182 (count: 8, min: 10, max: 46, avg: 22.75)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             174 (count: 8, min: 9, max: 45, avg: 21.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 722
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 560.63
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.842s
Time for refinements:                 0.216s
Average time for refinement:          0.027s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          1434
  Total lines:            3712
  Line coverage:          0.386
  Visited conditions:     76
  Total conditions:       284
  Condition coverage:     0.268

CPAchecker general statistics
-----------------------------
Number of program locations:     4042
Number of CFA edges:             4212
Number of relevant variables:    1007
Number of functions:             36
Number of loops:                 5
Size of reached set:             597
  Number of reached locations:   227 (6%)
    Avg states per location:     2
    Max states per location:     6 (at node N6)
  Number of reached functions:   12 (33%)
  Number of partitions:          597
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.845s
  Time for loading CPAs:          0.651s
  Time for loading parser:        0.453s
  Time for CFA construction:      2.643s
    Time for parsing file(s):     0.682s
    Time for AST to CFA:          0.873s
    Time for CFA sanity check:    0.187s
    Time for post-processing:     0.742s
      Time for var class.:        0.325s
Time for Analysis:                2.842s
CPU time for analysis:            2.840s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.689s
Total CPU time for CPAchecker:    6.670s
Time for statistics:              0.065s

Time for Garbage Collector:       0.189s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     41MB (    39 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8048MB (  7675 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
