scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--regulator--wm831x-ldo.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x9n7zb6z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_notifier_call_chain to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13220 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10786 (82%)
  Because of loop head:            2389 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         45 (0%)
  Times precision was empty:       5044 (38%)
  Times precision was {false}:     294 (2%)
  Times result was cached:         7754 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      128 (1%)
  Times result was 'false':        89 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         23821
  BDD entailment checks:           5705
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       144
Number of predicates discovered:          2
Number of abstraction locations:          98
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         8176
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 19.37
Number of irrelevant predicates:          4334 (53%)
Number of preds handled by boolean abs:   128 (2%)
  Total number of models for allsat:      128
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.857s
  Time for path formula creation:        4.659s
Time for strengthen operator:            0.290s
Time for prec operator:                  2.893s
  Time for abstraction:                  2.627s (Max:     0.028s, Count: 13220)
    Boolean abstraction:                 0.248s
    Solving time:                        0.531s (Max:     0.020s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.013s (Max:     0.004s)
Time for merge operator:                 0.390s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.540s

Number of path formula cache hits:   165337 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.273s

Total number of created targets for pointer analysis: 74
   Number of created targets for uf: *unsigned_int is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         257 (count: 12992, min: 0, max: 14, avg: 0.02)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.620s
  Time for transition matches:                         0.327s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       233903 (count: 233903, min: 1, max: 1, avg: 1.00) [1 x 233903]

CPA algorithm statistics
------------------------
Number of iterations:            75468
Max size of waitlist:            52
Average size of waitlist:        29
Number of computed successors:   88452
Max successors for one state:    2
Number of times merged:          9058
Number of times stopped:         12294
Number of times breaked:         45

Total time for CPA algorithm:        13.407s (Max:     0.940s)
  Time for choose from waitlist:      0.124s
  Time for precision adjustment:      3.837s
  Time for transfer relation:         7.833s
  Time for merge operator:            0.647s
  Time for stop operator:             0.250s
  Time for adding to reached set:     0.171s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                 569 (count: 45, min: 5, max: 18, avg: 12.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.759s
  Counterexample analysis:                             0.442s (Max:     0.035s, Calls: 45)
    Refinement sat check:                              0.270s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.035s
  ARG update:                                          0.218s

Length of refined path (in blocks):                     524 (count: 45, min: 4, max: 17, avg: 11.64)
Number of affected states:                              479 (count: 45, min: 3, max: 16, avg: 10.64)
Length (states) of path with itp 'true':                  0 (count: 45, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       479 (count: 45, min: 3, max: 16, avg: 10.64)
Length (states) of path with itp 'false':                45 (count: 45, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 45, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             434 (count: 45, min: 2, max: 15, avg: 9.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     45
Number of failed refinements:         0
Max. size of reached set before ref.: 1834
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1671.33
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      14.339s
Time for refinements:                 0.932s
Average time for refinement:          0.020s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.745
  Visited lines:          2357
  Total lines:            2472
  Line coverage:          0.953
  Visited conditions:     254
  Total conditions:       274
  Condition coverage:     0.927

CPAchecker general statistics
-----------------------------
Number of program locations:     2788
Number of CFA edges:             2947
Number of relevant variables:    623
Number of functions:             51
Number of loops:                 1
Size of reached set:             995
  Number of reached locations:   694 (25%)
    Avg states per location:     1
    Max states per location:     34 (at node N2171)
  Number of reached functions:   38 (75%)
  Number of partitions:          995
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.378s
  Time for loading CPAs:          0.687s
  Time for loading parser:        0.467s
  Time for CFA construction:      2.155s
    Time for parsing file(s):     0.633s
    Time for AST to CFA:          0.714s
    Time for CFA sanity check:    0.159s
    Time for post-processing:     0.492s
      Time for var class.:        0.276s
Time for Analysis:               14.339s
CPU time for analysis:           14.340s
Time for analyzing result:        0.001s
Total time for CPAchecker:       17.720s
Total CPU time for CPAchecker:   17.710s
Time for statistics:              0.087s

Time for Garbage Collector:       0.745s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                100MB (    96 MiB) max;     56MB (    53 MiB) avg;    103MB (    98 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
