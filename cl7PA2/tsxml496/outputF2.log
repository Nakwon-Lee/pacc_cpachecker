scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--input--serio--parkbd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a75lc30w/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1952: Function pointer *__cil_tmp10 with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 1997: Function pointer *__cil_tmp10 with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_find_number to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_put_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1997: Ignoring call via function pointer parkbd_writelines::__cil_tmp10 for which no suitable target was found in line: (*__cil_tmp10)(__cil_tmp13, __cil_tmp17); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1997: Ignoring function call through function pointer *__cil_tmp10: (*__cil_tmp10)(__cil_tmp13, __cil_tmp17); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __serio_register_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            113 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  98 (87%)
  Because of loop head:            12 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (3%)
  Times precision was empty:       43 (38%)
  Times precision was {false}:     9 (8%)
  Times result was cached:         44 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (15%)
  Times result was 'false':        6 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         66
  BDD entailment checks:           26
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          2
Number of abstraction locations:          17
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         70
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.69
Number of irrelevant predicates:          23 (33%)
Number of preds handled by boolean abs:   17 (24%)
  Total number of models for allsat:      17
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.229s
  Time for path formula creation:        0.215s
Time for strengthen operator:            0.014s
Time for prec operator:                  0.124s
  Time for abstraction:                  0.113s (Max:     0.019s, Count: 113)
    Boolean abstraction:                 0.018s
    Solving time:                        0.009s (Max:     0.005s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.009s

Number of path formula cache hits:   804 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.206s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 221, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.041s
Automaton transfers with branching:                0
Automaton transfer successors:                         1426 (count: 1426, min: 1, max: 1, avg: 1.00) [1 x 1426]

CPA algorithm statistics
------------------------
Number of iterations:            437
Max size of waitlist:            4
Average size of waitlist:        2
Number of computed successors:   483
Max successors for one state:    2
Number of times merged:          20
Number of times stopped:         37
Number of times breaked:         3

Total time for CPA algorithm:         0.632s (Max:     0.355s)
  Time for choose from waitlist:      0.000s
  Time for precision adjustment:      0.176s
  Time for transfer relation:         0.404s
  Time for merge operator:            0.020s
  Time for stop operator:             0.011s
  Time for adding to reached set:     0.010s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  44 (count: 3, min: 10, max: 18, avg: 14.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.048s
  Counterexample analysis:                             0.022s (Max:     0.009s, Calls: 3)
    Refinement sat check:                              0.014s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.003s
  ARG update:                                          0.017s

Length of refined path (in blocks):                      41 (count: 3, min: 9, max: 17, avg: 13.67)
Number of affected states:                               38 (count: 3, min: 8, max: 16, avg: 12.67)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        38 (count: 3, min: 8, max: 16, avg: 12.67)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              35 (count: 3, min: 7, max: 15, avg: 11.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 130
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 118.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       0.688s
Time for refinements:                 0.056s
Average time for refinement:          0.018s
Max time for refinement:              0.023s

Code Coverage
-----------------------------
  Function coverage:      0.409
  Visited lines:          533
  Total lines:            756
  Line coverage:          0.705
  Visited conditions:     20
  Total conditions:       58
  Condition coverage:     0.345

CPAchecker general statistics
-----------------------------
Number of program locations:     882
Number of CFA edges:             912
Number of relevant variables:    76
Number of functions:             22
Number of loops:                 1
Size of reached set:             96
  Number of reached locations:   87 (10%)
    Avg states per location:     1
    Max states per location:     3 (at node N361)
  Number of reached functions:   9 (41%)
  Number of partitions:          96
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.877s
  Time for loading CPAs:          0.722s
  Time for loading parser:        0.515s
  Time for CFA construction:      1.551s
    Time for parsing file(s):     0.538s
    Time for AST to CFA:          0.464s
    Time for CFA sanity check:    0.123s
    Time for post-processing:     0.332s
      Time for var class.:        0.149s
Time for Analysis:                0.689s
CPU time for analysis:            0.690s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.570s
Total CPU time for CPAchecker:    3.570s
Time for statistics:              0.055s

Time for Garbage Collector:       0.116s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 47MB (    45 MiB) max;     28MB (    26 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     24MB (    23 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8022MB (  7650 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
