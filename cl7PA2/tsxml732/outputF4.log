scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--mouse--vsxxxaa.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8hx9hzrx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 1896: Function pointer *__cil_tmp12 with type int (*)(struct serio *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1896: Ignoring call via function pointer serio_write::__cil_tmp12 for which no suitable target was found in line: tmp = (*__cil_tmp12)(serio, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3954 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3346 (85%)
  Because of loop head:            590 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (0%)
  Times precision was empty:       1457 (37%)
  Times precision was {false}:     190 (5%)
  Times result was cached:         2223 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      84 (2%)
  Times result was 'false':        34 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2868
  BDD entailment checks:           968
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          2
Number of abstraction locations:          94
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2497
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.11
Number of irrelevant predicates:          1011 (40%)
Number of preds handled by boolean abs:   84 (3%)
  Total number of models for allsat:      86
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.663s
  Time for path formula creation:        1.577s
Time for strengthen operator:            0.054s
Time for prec operator:                  1.138s
  Time for abstraction:                  0.988s (Max:     0.023s, Count: 3954)
    Boolean abstraction:                 0.087s
    Solving time:                        0.160s (Max:     0.012s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.018s (Max:     0.009s)
Time for merge operator:                 0.116s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.167s

Number of path formula cache hits:   38447 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.463s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         171 (count: 3885, min: 0, max: 39, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.223s
Automaton transfers with branching:                0
Automaton transfer successors:                        58660 (count: 58660, min: 1, max: 1, avg: 1.00) [1 x 58660]

CPA algorithm statistics
------------------------
Number of iterations:            15312
Max size of waitlist:            20
Average size of waitlist:        8
Number of computed successors:   17062
Max successors for one state:    2
Number of times merged:          950
Number of times stopped:         1620
Number of times breaked:         18

Total time for CPA algorithm:         4.707s (Max:     0.621s)
  Time for choose from waitlist:      0.066s
  Time for precision adjustment:      1.388s
  Time for transfer relation:         2.735s
  Time for merge operator:            0.189s
  Time for stop operator:             0.089s
  Time for adding to reached set:     0.089s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 605 (count: 18, min: 8, max: 59, avg: 33.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.480s
  Counterexample analysis:                             0.256s (Max:     0.046s, Calls: 18)
    Refinement sat check:                              0.164s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.021s
  ARG update:                                          0.109s

Length of refined path (in blocks):                     587 (count: 18, min: 7, max: 58, avg: 32.61)
Number of affected states:                              569 (count: 18, min: 6, max: 57, avg: 31.61)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       569 (count: 18, min: 6, max: 57, avg: 31.61)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             551 (count: 18, min: 5, max: 56, avg: 30.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 1212
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 821.94
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.235s
Time for refinements:                 0.527s
Average time for refinement:          0.029s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.788
  Visited lines:          1375
  Total lines:            1399
  Line coverage:          0.983
  Visited conditions:     80
  Total conditions:       88
  Condition coverage:     0.909

CPAchecker general statistics
-----------------------------
Number of program locations:     1577
Number of CFA edges:             1656
Number of relevant variables:    228
Number of functions:             33
Number of loops:                 6
Size of reached set:             668
  Number of reached locations:   350 (22%)
    Avg states per location:     1
    Max states per location:     12 (at node N13)
  Number of reached functions:   26 (79%)
  Number of partitions:          668
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.884s
  Time for loading CPAs:          0.656s
  Time for loading parser:        0.412s
  Time for CFA construction:      1.728s
    Time for parsing file(s):     0.467s
    Time for AST to CFA:          0.567s
    Time for CFA sanity check:    0.151s
    Time for post-processing:     0.408s
      Time for var class.:        0.185s
Time for Analysis:                5.235s
CPU time for analysis:            5.230s
Time for analyzing result:        0.009s
Total time for CPAchecker:        8.121s
Total CPU time for CPAchecker:    8.110s
Time for statistics:              0.065s

Time for Garbage Collector:       0.168s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     39MB (    37 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7997MB (  7626 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
