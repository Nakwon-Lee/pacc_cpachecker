scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--misc--rotary_encoder_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pfqr_n92/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1424 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1326 (93%)
  Because of loop head:            84 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (1%)
  Times precision was empty:       273 (19%)
  Times precision was {false}:     121 (8%)
  Times result was cached:         970 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      60 (4%)
  Times result was 'false':        26 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1132
  BDD entailment checks:           416
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       97
Number of predicates discovered:          2
Number of abstraction locations:          41
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1151
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.36
Number of irrelevant predicates:          517 (45%)
Number of preds handled by boolean abs:   60 (5%)
  Total number of models for allsat:      64
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  1.376s
  Time for path formula creation:        1.329s
Time for strengthen operator:            0.045s
Time for prec operator:                  0.832s
  Time for abstraction:                  0.719s (Max:     0.017s, Count: 1424)
    Boolean abstraction:                 0.107s
    Solving time:                        0.246s (Max:     0.015s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.007s (Max:     0.003s)
Time for merge operator:                 0.042s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.250s

Number of path formula cache hits:   11473 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.278s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         111 (count: 1660, min: 0, max: 43, avg: 0.07)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.149s
Automaton transfers with branching:                0
Automaton transfer successors:                        22069 (count: 22075, min: 0, max: 1, avg: 1.00) [0 x 6, 1 x 22069]

CPA algorithm statistics
------------------------
Number of iterations:            7207
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   7928
Max successors for one state:    2
Number of times merged:          358
Number of times stopped:         619
Number of times breaked:         14

Total time for CPA algorithm:         3.621s (Max:     0.715s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      0.972s
  Time for transfer relation:         2.245s
  Time for merge operator:            0.103s
  Time for stop operator:             0.073s
  Time for adding to reached set:     0.057s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 355 (count: 14, min: 11, max: 36, avg: 25.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.249s
  Counterexample analysis:                             0.132s (Max:     0.020s, Calls: 14)
    Refinement sat check:                              0.095s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.015s
  ARG update:                                          0.060s

Length of refined path (in blocks):                     341 (count: 14, min: 10, max: 35, avg: 24.36)
Number of affected states:                              327 (count: 14, min: 9, max: 34, avg: 23.36)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       327 (count: 14, min: 9, max: 34, avg: 23.36)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             313 (count: 14, min: 8, max: 33, avg: 22.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 720
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 488.57
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.946s
Time for refinements:                 0.324s
Average time for refinement:          0.023s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.708
  Visited lines:          1098
  Total lines:            1123
  Line coverage:          0.978
  Visited conditions:     82
  Total conditions:       90
  Condition coverage:     0.911

CPAchecker general statistics
-----------------------------
Number of program locations:     1275
Number of CFA edges:             1323
Number of relevant variables:    229
Number of functions:             24
Number of loops:                 1
Size of reached set:             486
  Number of reached locations:   280 (22%)
    Avg states per location:     1
    Max states per location:     9 (at node N405)
  Number of reached functions:   17 (71%)
  Number of partitions:          483
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N765 (before line 2731), Function rotary_encoder_probe called from node N861, stack depth 2 [2b44d6d0], stack [main, rotary_encoder_probe]])
  Number of target states:       0

Time for analysis setup:          2.704s
  Time for loading CPAs:          0.534s
  Time for loading parser:        0.454s
  Time for CFA construction:      1.563s
    Time for parsing file(s):     0.523s
    Time for AST to CFA:          0.486s
    Time for CFA sanity check:    0.112s
    Time for post-processing:     0.323s
      Time for var class.:        0.132s
Time for Analysis:                3.947s
CPU time for analysis:            3.940s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.655s
Total CPU time for CPAchecker:    6.640s
Time for statistics:              0.059s

Time for Garbage Collector:       0.132s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    34 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
