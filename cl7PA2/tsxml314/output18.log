scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--mtdoops_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_30_f3yyn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2120: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 2464: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2467: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2470: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2476: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 2523: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2526: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2529: Dead code detected: Goto: case_4___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2535: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmsg_dump_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmsg_dump_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_mtd_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            896 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  733 (82%)
  Because of loop head:            150 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       224 (25%)
  Times precision was {false}:     58 (6%)
  Times result was cached:         563 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      51 (6%)
  Times result was 'false':        19 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1537
  BDD entailment checks:           265
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          3
Number of abstraction locations:          41
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         710
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 6.51
Number of irrelevant predicates:          235 (33%)
Number of preds handled by boolean abs:   56 (8%)
  Total number of models for allsat:      54
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.773s
  Time for path formula creation:        0.754s
Time for strengthen operator:            0.036s
Time for prec operator:                  0.820s
  Time for abstraction:                  0.730s (Max:     0.031s, Count: 896)
    Boolean abstraction:                 0.155s
    Solving time:                        0.299s (Max:     0.029s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.005s (Max:     0.004s)
Time for merge operator:                 0.066s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.317s

Number of path formula cache hits:   12277 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.696s

Total number of created targets for pointer analysis: 37
   Number of created targets for uf: *unsigned_int is 25


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          99 (count: 1099, min: 0, max: 52, avg: 0.09)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.065s
Automaton transfers with branching:                0
Automaton transfer successors:                        17049 (count: 17049, min: 1, max: 1, avg: 1.00) [1 x 17049]

CPA algorithm statistics
------------------------
Number of iterations:            5292
Max size of waitlist:            20
Average size of waitlist:        7
Number of computed successors:   6177
Max successors for one state:    2
Number of times merged:          636
Number of times stopped:         798
Number of times breaked:         13

Total time for CPA algorithm:         2.472s (Max:     0.471s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      0.969s
  Time for transfer relation:         1.192s
  Time for merge operator:            0.112s
  Time for stop operator:             0.088s
  Time for adding to reached set:     0.055s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 304 (count: 13, min: 5, max: 37, avg: 23.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.260s
  Counterexample analysis:                             0.206s (Max:     0.025s, Calls: 13)
    Refinement sat check:                              0.164s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.002s
  ARG update:                                          0.023s

Length of refined path (in blocks):                     275 (count: 13, min: 4, max: 36, avg: 21.15)
Number of affected states:                              249 (count: 13, min: 1, max: 35, avg: 19.15)
Length (states) of path with itp 'true':                 13 (count: 13, min: 0, max: 13, avg: 1.00)
Length (states) of path with itp non-trivial itp:       249 (count: 13, min: 1, max: 35, avg: 19.15)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             236 (count: 13, min: 0, max: 34, avg: 18.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 573
Max. size of reached set after ref.:  137
Avg. size of reached set before ref.: 394.92
Avg. size of reached set after ref.:  13.31

Total time for CEGAR algorithm:       2.758s
Time for refinements:                 0.286s
Average time for refinement:          0.022s
Max time for refinement:              0.033s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          1255
  Total lines:            2055
  Line coverage:          0.611
  Visited conditions:     82
  Total conditions:       146
  Condition coverage:     0.562

CPAchecker general statistics
-----------------------------
Number of program locations:     2288
Number of CFA edges:             2361
Number of relevant variables:    520
Number of functions:             35
Number of loops:                 5
Size of reached set:             400
  Number of reached locations:   264 (12%)
    Avg states per location:     1
    Max states per location:     5 (at node N1258)
  Number of reached functions:   20 (57%)
  Number of partitions:          399
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1260 (before line 3553), Function find_next_position called from node N1628, stack depth 3 [2001e48c], stack [main, mtdoops_notify_add, find_next_position]])
  Number of target states:       0

Time for analysis setup:          2.732s
  Time for loading CPAs:          0.564s
  Time for loading parser:        0.402s
  Time for CFA construction:      1.677s
    Time for parsing file(s):     0.510s
    Time for AST to CFA:          0.532s
    Time for CFA sanity check:    0.119s
    Time for post-processing:     0.391s
      Time for var class.:        0.193s
Time for Analysis:                2.759s
CPU time for analysis:            2.760s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.494s
Total CPU time for CPAchecker:    5.480s
Time for statistics:              0.052s

Time for Garbage Collector:       0.100s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     37MB (    35 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7987MB (  7617 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
