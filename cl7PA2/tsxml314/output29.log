scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--mtdoops_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m71kobja/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2120: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 2464: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2467: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2470: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2476: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 2523: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2526: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2529: Dead code detected: Goto: case_4___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2535: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmsg_dump_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmsg_dump_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_mtd_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1171 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  957 (82%)
  Because of loop head:            202 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (1%)
  Times precision was empty:       375 (32%)
  Times precision was {false}:     74 (6%)
  Times result was cached:         621 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      101 (9%)
  Times result was 'false':        18 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2352
  BDD entailment checks:           384
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          3
Number of abstraction locations:          41
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         848
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.85
Number of irrelevant predicates:          256 (30%)
Number of preds handled by boolean abs:   114 (13%)
  Total number of models for allsat:      108
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  1.357s
  Time for path formula creation:        1.319s
Time for strengthen operator:            0.022s
Time for prec operator:                  1.369s
  Time for abstraction:                  1.264s (Max:     0.035s, Count: 1171)
    Boolean abstraction:                 0.468s
    Solving time:                        0.637s (Max:     0.029s)
    Model enumeration time:              0.058s
    Time for BDD construction:           0.025s (Max:     0.009s)
Time for merge operator:                 0.183s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.695s

Number of path formula cache hits:   10659 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.255s

Total number of created targets for pointer analysis: 56
   Number of created targets for uf: *unsigned_int is 25
   Number of created targets for uf: *unsigned_long_int is 9


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         192 (count: 1749, min: 0, max: 85, avg: 0.11)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.101s
Automaton transfers with branching:                0
Automaton transfer successors:                        23300 (count: 23300, min: 1, max: 1, avg: 1.00) [1 x 23300]

CPA algorithm statistics
------------------------
Number of iterations:            7513
Max size of waitlist:            26
Average size of waitlist:        8
Number of computed successors:   8819
Max successors for one state:    2
Number of times merged:          984
Number of times stopped:         1230
Number of times breaked:         12

Total time for CPA algorithm:         4.030s (Max:     0.807s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      1.597s
  Time for transfer relation:         1.941s
  Time for merge operator:            0.253s
  Time for stop operator:             0.102s
  Time for adding to reached set:     0.048s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 301 (count: 12, min: 12, max: 37, avg: 25.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.307s
  Counterexample analysis:                             0.228s (Max:     0.028s, Calls: 12)
    Refinement sat check:                              0.159s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.007s
  ARG update:                                          0.047s

Length of refined path (in blocks):                     273 (count: 12, min: 11, max: 36, avg: 22.75)
Number of affected states:                              248 (count: 12, min: 1, max: 35, avg: 20.67)
Length (states) of path with itp 'true':                 13 (count: 12, min: 0, max: 13, avg: 1.08)
Length (states) of path with itp non-trivial itp:       248 (count: 12, min: 1, max: 35, avg: 20.67)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             236 (count: 12, min: 0, max: 34, avg: 19.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 933
Max. size of reached set after ref.:  128
Avg. size of reached set before ref.: 611.08
Avg. size of reached set after ref.:  13.42

Total time for CEGAR algorithm:       4.392s
Time for refinements:                 0.362s
Average time for refinement:          0.030s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          1255
  Total lines:            2055
  Line coverage:          0.611
  Visited conditions:     82
  Total conditions:       146
  Condition coverage:     0.562

CPAchecker general statistics
-----------------------------
Number of program locations:     2288
Number of CFA edges:             2361
Number of relevant variables:    520
Number of functions:             35
Number of loops:                 5
Size of reached set:             400
  Number of reached locations:   264 (12%)
    Avg states per location:     1
    Max states per location:     5 (at node N1258)
  Number of reached functions:   20 (57%)
  Number of partitions:          399
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1260 (before line 3553), Function find_next_position called from node N1628, stack depth 3 [70b33256], stack [main, mtdoops_notify_add, find_next_position]])
  Number of target states:       0

Time for analysis setup:          2.692s
  Time for loading CPAs:          0.563s
  Time for loading parser:        0.380s
  Time for CFA construction:      1.693s
    Time for parsing file(s):     0.513s
    Time for AST to CFA:          0.522s
    Time for CFA sanity check:    0.119s
    Time for post-processing:     0.403s
      Time for var class.:        0.211s
Time for Analysis:                4.393s
CPU time for analysis:            4.390s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.087s
Total CPU time for CPAchecker:    7.090s
Time for statistics:              0.053s

Time for Garbage Collector:       0.136s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     38MB (    36 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7995MB (  7624 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
