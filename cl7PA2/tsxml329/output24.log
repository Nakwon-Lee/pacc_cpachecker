scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--mwifiex--mwifiex_pcie.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0wd98ijp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            39385 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35748 (91%)
  Because of loop head:            3572 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         65 (0%)
  Times precision was empty:       10610 (27%)
  Times precision was {false}:     1029 (3%)
  Times result was cached:         27348 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      398 (1%)
  Times result was 'false':        318 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         35081
  BDD entailment checks:           12785
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       152
Number of predicates discovered:          3
Number of abstraction locations:          167
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         33903
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 23.76
Number of irrelevant predicates:          19262 (57%)
Number of preds handled by boolean abs:   407 (1%)
  Total number of models for allsat:      395
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  8.381s
  Time for path formula creation:        8.053s
Time for strengthen operator:            0.527s
Time for prec operator:                  6.117s
  Time for abstraction:                  5.546s (Max:     0.263s, Count: 39385)
    Boolean abstraction:                 0.335s
    Solving time:                        0.827s (Max:     0.014s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.058s (Max:     0.009s)
Time for merge operator:                 0.362s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.858s

Number of path formula cache hits:   627197 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.595s

Total number of created targets for pointer analysis: 279
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         810 (count: 30989, min: 0, max: 54, avg: 0.03)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.174s
  Time for transition matches:                         0.642s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       767625 (count: 767625, min: 1, max: 1, avg: 1.00) [1 x 767625]

CPA algorithm statistics
------------------------
Number of iterations:            208007
Max size of waitlist:            64
Average size of waitlist:        36
Number of computed successors:   230911
Max successors for one state:    2
Number of times merged:          11148
Number of times stopped:         19646
Number of times breaked:         65

Total time for CPA algorithm:        23.607s (Max:     1.235s)
  Time for choose from waitlist:      0.084s
  Time for precision adjustment:      7.338s
  Time for transfer relation:        14.389s
  Time for merge operator:            0.580s
  Time for stop operator:             0.284s
  Time for adding to reached set:     0.266s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   65
Avg. length of target path (in blocks):                1495 (count: 65, min: 12, max: 30, avg: 23.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.336s
  Counterexample analysis:                             0.711s (Max:     0.030s, Calls: 65)
    Refinement sat check:                              0.523s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.061s
  ARG update:                                          0.461s

Length of refined path (in blocks):                    1423 (count: 65, min: 11, max: 29, avg: 21.89)
Number of affected states:                             1350 (count: 65, min: 7, max: 28, avg: 20.77)
Length (states) of path with itp 'true':                  8 (count: 65, min: 0, max: 8, avg: 0.12)
Length (states) of path with itp non-trivial itp:      1350 (count: 65, min: 7, max: 28, avg: 20.77)
Length (states) of path with itp 'false':                65 (count: 65, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 65, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1285 (count: 65, min: 6, max: 27, avg: 19.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                65
Number of successful refinements:     65
Number of failed refinements:         0
Max. size of reached set before ref.: 4767
Max. size of reached set after ref.:  2971
Avg. size of reached set before ref.: 3290.62
Avg. size of reached set after ref.:  48.66

Total time for CEGAR algorithm:      25.162s
Time for refinements:                 1.537s
Average time for refinement:          0.023s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.412
  Visited lines:          1949
  Total lines:            7559
  Line coverage:          0.258
  Visited conditions:     58
  Total conditions:       552
  Condition coverage:     0.105

CPAchecker general statistics
-----------------------------
Number of program locations:     8341
Number of CFA edges:             8737
Number of relevant variables:    1745
Number of functions:             68
Number of loops:                 18
Size of reached set:             220
  Number of reached locations:   213 (3%)
    Avg states per location:     1
    Max states per location:     6 (at node N7760)
  Number of reached functions:   28 (41%)
  Number of partitions:          220
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          5.130s
  Time for loading CPAs:          1.064s
  Time for loading parser:        0.509s
  Time for CFA construction:      3.454s
    Time for parsing file(s):     0.837s
    Time for AST to CFA:          1.141s
    Time for CFA sanity check:    0.398s
    Time for post-processing:     0.919s
      Time for var class.:        0.393s
Time for Analysis:               25.162s
CPU time for analysis:           25.160s
Total time for CPAchecker:       30.308s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.074s

Time for Garbage Collector:       1.830s (in 119 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                160MB (   153 MiB) max;     86MB (    82 MiB) avg;    163MB (   156 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     38MB (    36 MiB) avg;     46MB (    43 MiB) peak
Allocated heap memory:           186MB (   177 MiB) max;    146MB (   139 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
