scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--mwifiex--mwifiex_pcie.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2coelzvk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            44216 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  38140 (86%)
  Because of loop head:            5899 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         177 (0%)
  Times precision was empty:       3237 (7%)
  Times precision was {false}:     323 (1%)
  Times result was cached:         39303 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1353 (3%)
  Times result was 'false':        613 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         35670
  BDD entailment checks:           12400
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       120
Number of predicates discovered:          4
Number of abstraction locations:          182
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         84497
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 50.42
Number of irrelevant predicates:          24242 (29%)
Number of preds handled by boolean abs:   1728 (2%)
  Total number of models for allsat:      1348
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.769s
  Time for path formula creation:        6.516s
Time for strengthen operator:            0.446s
Time for prec operator:                  7.585s
  Time for abstraction:                  6.880s (Max:     0.026s, Count: 44216)
    Boolean abstraction:                 0.930s
    Solving time:                        0.777s (Max:     0.015s)
    Model enumeration time:              0.081s
    Time for BDD construction:           0.063s (Max:     0.010s)
Time for merge operator:                 0.405s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.858s

Number of path formula cache hits:   579842 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.480s

Total number of created targets for pointer analysis: 201
   Number of created targets for uf: *unsigned_int is 18


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2744 (count: 25732, min: 0, max: 114, avg: 0.11)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.830s
  Time for transition matches:                         0.455s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       652158 (count: 652158, min: 1, max: 1, avg: 1.00) [1 x 652158]

CPA algorithm statistics
------------------------
Number of iterations:            214985
Max size of waitlist:            37
Average size of waitlist:        14
Number of computed successors:   240861
Max successors for one state:    2
Number of times merged:          11635
Number of times stopped:         20670
Number of times breaked:         177

Total time for CPA algorithm:        22.463s (Max:     0.527s)
  Time for choose from waitlist:      0.178s
  Time for precision adjustment:      8.814s
  Time for transfer relation:        11.529s
  Time for merge operator:            0.630s
  Time for stop operator:             0.265s
  Time for adding to reached set:     0.338s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   177
Avg. length of target path (in blocks):                6747 (count: 177, min: 12, max: 89, avg: 38.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.299s
  Counterexample analysis:                             2.595s (Max:     0.043s, Calls: 177)
    Refinement sat check:                              1.848s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.113s
  ARG update:                                          0.412s

Length of refined path (in blocks):                    5793 (count: 177, min: 11, max: 81, avg: 32.73)
Number of affected states:                             5058 (count: 177, min: 7, max: 75, avg: 28.58)
Length (states) of path with itp 'true':                558 (count: 177, min: 0, max: 8, avg: 3.15)
Length (states) of path with itp non-trivial itp:      5058 (count: 177, min: 7, max: 75, avg: 28.58)
Length (states) of path with itp 'false':               177 (count: 177, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 177, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4881 (count: 177, min: 6, max: 74, avg: 27.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                177
Number of successful refinements:     177
Number of failed refinements:         0
Max. size of reached set before ref.: 2696
Max. size of reached set after ref.:  561
Avg. size of reached set before ref.: 1266.03
Avg. size of reached set after ref.:  29.21

Total time for CEGAR algorithm:      26.104s
Time for refinements:                 3.622s
Average time for refinement:          0.020s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          2356
  Total lines:            7559
  Line coverage:          0.312
  Visited conditions:     144
  Total conditions:       552
  Condition coverage:     0.261

CPAchecker general statistics
-----------------------------
Number of program locations:     8341
Number of CFA edges:             8737
Number of relevant variables:    1745
Number of functions:             68
Number of loops:                 18
Size of reached set:             662
  Number of reached locations:   532 (6%)
    Avg states per location:     1
    Max states per location:     12 (at node N7759)
  Number of reached functions:   34 (50%)
  Number of partitions:          661
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5886 (before lines 13055-13104), Function mwifiex_check_fw_status called from node N7608, stack depth 2 [5c80db87], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          4.231s
  Time for loading CPAs:          0.701s
  Time for loading parser:        0.421s
  Time for CFA construction:      3.046s
    Time for parsing file(s):     0.721s
    Time for AST to CFA:          0.994s
    Time for CFA sanity check:    0.373s
    Time for post-processing:     0.804s
      Time for var class.:        0.433s
Time for Analysis:               26.104s
CPU time for analysis:           26.100s
Total time for CPAchecker:       30.338s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.076s

Time for Garbage Collector:       1.245s (in 143 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                112MB (   107 MiB) max;     69MB (    66 MiB) avg;    124MB (   118 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
