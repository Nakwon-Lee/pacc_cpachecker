scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--mwifiex--mwifiex_pcie.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2nm1z92d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24584 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21249 (86%)
  Because of loop head:            3270 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         65 (0%)
  Times precision was empty:       4290 (17%)
  Times precision was {false}:     674 (3%)
  Times result was cached:         18610 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1010 (4%)
  Times result was 'false':        473 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         19294
  BDD entailment checks:           8516
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       152
Number of predicates discovered:          4
Number of abstraction locations:          103
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         33829
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 20.09
Number of irrelevant predicates:          17127 (51%)
Number of preds handled by boolean abs:   1225 (4%)
  Total number of models for allsat:      982
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                 10.250s
  Time for path formula creation:       10.020s
Time for strengthen operator:            0.495s
Time for prec operator:                  6.156s
  Time for abstraction:                  5.700s (Max:     0.036s, Count: 24584)
    Boolean abstraction:                 0.915s
    Solving time:                        1.128s (Max:     0.017s)
    Model enumeration time:              0.099s
    Time for BDD construction:           0.051s (Max:     0.008s)
Time for merge operator:                 0.404s
Time for coverage check:                 0.099s
  Time for BDD entailment checks:        0.093s
Total time for SMT solver (w/o itp):     1.227s

Number of path formula cache hits:   338108 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.663s

Total number of created targets for pointer analysis: 510
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1927 (count: 22372, min: 0, max: 151, avg: 0.09)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.858s
  Time for transition matches:                         0.426s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       538210 (count: 538210, min: 1, max: 1, avg: 1.00) [1 x 538210]

CPA algorithm statistics
------------------------
Number of iterations:            120616
Max size of waitlist:            63
Average size of waitlist:        34
Number of computed successors:   134226
Max successors for one state:    2
Number of times merged:          5389
Number of times stopped:         10231
Number of times breaked:         65

Total time for CPA algorithm:        24.065s (Max:     0.846s)
  Time for choose from waitlist:      0.113s
  Time for precision adjustment:      7.264s
  Time for transfer relation:        14.945s
  Time for merge operator:            0.561s
  Time for stop operator:             0.298s
  Time for adding to reached set:     0.214s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   65
Avg. length of target path (in blocks):                1837 (count: 65, min: 9, max: 46, avg: 28.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.389s
  Counterexample analysis:                             0.860s (Max:     0.031s, Calls: 65)
    Refinement sat check:                              0.650s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.069s
  Precision update:                                    0.040s
  ARG update:                                          0.357s

Length of refined path (in blocks):                    1562 (count: 65, min: 8, max: 38, avg: 24.03)
Number of affected states:                             1344 (count: 65, min: 7, max: 32, avg: 20.68)
Length (states) of path with itp 'true':                153 (count: 65, min: 0, max: 8, avg: 2.35)
Length (states) of path with itp non-trivial itp:      1344 (count: 65, min: 7, max: 32, avg: 20.68)
Length (states) of path with itp 'false':                65 (count: 65, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 65, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1279 (count: 65, min: 6, max: 31, avg: 19.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                65
Number of successful refinements:     65
Number of failed refinements:         0
Max. size of reached set before ref.: 2934
Max. size of reached set after ref.:  1109
Avg. size of reached set before ref.: 1918.66
Avg. size of reached set after ref.:  38.74

Total time for CEGAR algorithm:      25.653s
Time for refinements:                 1.563s
Average time for refinement:          0.024s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.632
  Visited lines:          4100
  Total lines:            7559
  Line coverage:          0.542
  Visited conditions:     206
  Total conditions:       552
  Condition coverage:     0.373

CPAchecker general statistics
-----------------------------
Number of program locations:     8341
Number of CFA edges:             8737
Number of relevant variables:    1745
Number of functions:             68
Number of loops:                 18
Size of reached set:             1327
  Number of reached locations:   803 (10%)
    Avg states per location:     1
    Max states per location:     40 (at node N7760)
  Number of reached functions:   43 (63%)
  Number of partitions:          1318
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N5886 (before lines 13055-13104), Function mwifiex_check_fw_status called from node N7608, stack depth 2 [3e9b2a35], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0
  Size of final wait list        46

Time for analysis setup:          4.685s
  Time for loading CPAs:          0.748s
  Time for loading parser:        0.466s
  Time for CFA construction:      3.357s
    Time for parsing file(s):     0.818s
    Time for AST to CFA:          1.153s
    Time for CFA sanity check:    0.361s
    Time for post-processing:     0.848s
      Time for var class.:        0.431s
Time for Analysis:               25.653s
CPU time for analysis:           25.650s
Total time for CPAchecker:       30.341s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.085s

Time for Garbage Collector:       1.887s (in 94 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                174MB (   166 MiB) max;     86MB (    82 MiB) avg;    189MB (   181 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           207MB (   198 MiB) max;    149MB (   142 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
