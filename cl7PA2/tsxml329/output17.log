scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--mwifiex--mwifiex_pcie.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nin6iqze/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32449 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29407 (91%)
  Because of loop head:            2984 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         58 (0%)
  Times precision was empty:       9859 (30%)
  Times precision was {false}:     909 (3%)
  Times result was cached:         21337 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      344 (1%)
  Times result was 'false':        315 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         28528
  BDD entailment checks:           10468
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       152
Number of predicates discovered:          3
Number of abstraction locations:          136
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         26043
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 20.78
Number of irrelevant predicates:          15407 (59%)
Number of preds handled by boolean abs:   352 (1%)
  Total number of models for allsat:      341
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  9.653s
  Time for path formula creation:        9.429s
Time for strengthen operator:            0.519s
Time for prec operator:                  5.402s
  Time for abstraction:                  4.766s (Max:     0.034s, Count: 32449)
    Boolean abstraction:                 0.350s
    Solving time:                        0.777s (Max:     0.015s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.040s (Max:     0.009s)
Time for merge operator:                 0.390s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     0.797s

Number of path formula cache hits:   506221 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.091s

Total number of created targets for pointer analysis: 236
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         704 (count: 26986, min: 0, max: 41, avg: 0.03)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.926s
  Time for transition matches:                         0.486s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       630694 (count: 630694, min: 1, max: 1, avg: 1.00) [1 x 630694]

CPA algorithm statistics
------------------------
Number of iterations:            170024
Max size of waitlist:            62
Average size of waitlist:        35
Number of computed successors:   188745
Max successors for one state:    2
Number of times merged:          9030
Number of times stopped:         15970
Number of times breaked:         58

Total time for CPA algorithm:        24.202s (Max:     0.895s)
  Time for choose from waitlist:      0.172s
  Time for precision adjustment:      6.626s
  Time for transfer relation:        15.482s
  Time for merge operator:            0.596s
  Time for stop operator:             0.312s
  Time for adding to reached set:     0.321s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   58
Avg. length of target path (in blocks):                1250 (count: 58, min: 9, max: 28, avg: 21.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.240s
  Counterexample analysis:                             0.670s (Max:     0.023s, Calls: 58)
    Refinement sat check:                              0.502s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.037s
  ARG update:                                          0.416s

Length of refined path (in blocks):                    1185 (count: 58, min: 8, max: 27, avg: 20.43)
Number of affected states:                             1119 (count: 58, min: 7, max: 26, avg: 19.29)
Length (states) of path with itp 'true':                  8 (count: 58, min: 0, max: 8, avg: 0.14)
Length (states) of path with itp non-trivial itp:      1119 (count: 58, min: 7, max: 26, avg: 19.29)
Length (states) of path with itp 'false':                58 (count: 58, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 58, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1061 (count: 58, min: 6, max: 25, avg: 18.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                58
Number of successful refinements:     58
Number of failed refinements:         0
Max. size of reached set before ref.: 4683
Max. size of reached set after ref.:  2984
Avg. size of reached set before ref.: 3005.29
Avg. size of reached set after ref.:  54.40

Total time for CEGAR algorithm:      25.612s
Time for refinements:                 1.409s
Average time for refinement:          0.024s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.647
  Visited lines:          4236
  Total lines:            7559
  Line coverage:          0.560
  Visited conditions:     226
  Total conditions:       552
  Condition coverage:     0.409

CPAchecker general statistics
-----------------------------
Number of program locations:     8341
Number of CFA edges:             8737
Number of relevant variables:    1745
Number of functions:             68
Number of loops:                 18
Size of reached set:             1307
  Number of reached locations:   864 (10%)
    Avg states per location:     1
    Max states per location:     39 (at node N7760)
  Number of reached functions:   44 (65%)
  Number of partitions:          1307
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          4.749s
  Time for loading CPAs:          0.695s
  Time for loading parser:        0.491s
  Time for CFA construction:      3.469s
    Time for parsing file(s):     0.865s
    Time for AST to CFA:          1.117s
    Time for CFA sanity check:    0.403s
    Time for post-processing:     0.922s
      Time for var class.:        0.397s
Time for Analysis:               25.612s
CPU time for analysis:           25.610s
Total time for CPAchecker:       30.363s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.094s

Time for Garbage Collector:       1.759s (in 106 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                146MB (   139 MiB) max;     77MB (    73 MiB) avg;    156MB (   149 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           197MB (   188 MiB) max;    140MB (   134 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
