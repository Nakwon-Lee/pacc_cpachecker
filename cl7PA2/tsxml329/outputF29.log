scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--mwifiex--mwifiex_pcie.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sktp8jn_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            128188 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  111724 (87%)
  Because of loop head:            16196 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         268 (0%)
  Times precision was empty:       6777 (5%)
  Times precision was {false}:     1129 (1%)
  Times result was cached:         116892 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3390 (3%)
  Times result was 'false':        1915 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         111178
  BDD entailment checks:           44564
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       152
Number of predicates discovered:          4
Number of abstraction locations:          239
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         262059
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 57.99
Number of irrelevant predicates:          90849 (35%)
Number of preds handled by boolean abs:   4071 (2%)
  Total number of models for allsat:      3343
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                 20.721s
  Time for path formula creation:       20.065s
Time for strengthen operator:            1.483s
Time for prec operator:                 21.527s
  Time for abstraction:                 19.951s (Max:     0.343s, Count: 128188)
    Boolean abstraction:                 2.728s
    Solving time:                        2.962s (Max:     0.019s)
    Model enumeration time:              0.223s
    Time for BDD construction:           0.119s (Max:     0.013s)
Time for merge operator:                 0.862s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):     3.185s

Number of path formula cache hits:   2028317 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.037s

Total number of created targets for pointer analysis: 3201
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *unsigned_char is 73
   Number of created targets for uf: *unsigned_int is 69


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6762 (count: 78005, min: 0, max: 146, avg: 0.09)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.603s
  Time for transition matches:                         1.489s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      2414857 (count: 2414857, min: 1, max: 1, avg: 1.00) [1 x 2414857]

CPA algorithm statistics
------------------------
Number of iterations:            658417
Max size of waitlist:            64
Average size of waitlist:        25
Number of computed successors:   731581
Max successors for one state:    2
Number of times merged:          33307
Number of times stopped:         61959
Number of times breaked:         268

Total time for CPA algorithm:        66.180s (Max:     1.475s)
  Time for choose from waitlist:      0.261s
  Time for precision adjustment:     25.807s
  Time for transfer relation:        35.961s
  Time for merge operator:            1.311s
  Time for stop operator:             0.668s
  Time for adding to reached set:     0.746s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   268
Avg. length of target path (in blocks):               10371 (count: 268, min: 12, max: 89, avg: 38.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.371s
  Counterexample analysis:                             4.002s (Max:     0.046s, Calls: 268)
    Refinement sat check:                              2.945s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.104s
  Precision update:                                    0.139s
  ARG update:                                          1.020s

Length of refined path (in blocks):                    8927 (count: 268, min: 11, max: 81, avg: 33.31)
Number of affected states:                             7816 (count: 268, min: 7, max: 75, avg: 29.16)
Length (states) of path with itp 'true':                843 (count: 268, min: 0, max: 8, avg: 3.15)
Length (states) of path with itp non-trivial itp:      7816 (count: 268, min: 7, max: 75, avg: 29.16)
Length (states) of path with itp 'false':               268 (count: 268, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 268, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            7548 (count: 268, min: 6, max: 74, avg: 28.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                268
Number of successful refinements:     268
Number of failed refinements:         0
Max. size of reached set before ref.: 5357
Max. size of reached set after ref.:  1175
Avg. size of reached set before ref.: 2789.03
Avg. size of reached set after ref.:  312.84

Total time for CEGAR algorithm:      72.170s
Time for refinements:                 5.919s
Average time for refinement:          0.022s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.794
  Visited lines:          7085
  Total lines:            7559
  Line coverage:          0.937
  Visited conditions:     478
  Total conditions:       552
  Condition coverage:     0.866

CPAchecker general statistics
-----------------------------
Number of program locations:     8341
Number of CFA edges:             8737
Number of relevant variables:    1745
Number of functions:             68
Number of loops:                 18
Size of reached set:             4089
  Number of reached locations:   1803 (22%)
    Avg states per location:     2
    Max states per location:     91 (at node N7759)
  Number of reached functions:   54 (79%)
  Number of partitions:          4088
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5886 (before lines 13055-13104), Function mwifiex_check_fw_status called from node N7608, stack depth 2 [47b902a4], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0

Time for analysis setup:          4.626s
  Time for loading CPAs:          0.711s
  Time for loading parser:        0.500s
  Time for CFA construction:      3.307s
    Time for parsing file(s):     0.771s
    Time for AST to CFA:          1.124s
    Time for CFA sanity check:    0.443s
    Time for post-processing:     0.871s
      Time for var class.:        0.392s
Time for Analysis:               72.170s
CPU time for analysis:           72.170s
Time for analyzing result:        0.004s
Total time for CPAchecker:       76.800s
Total CPU time for CPAchecker:   76.780s
Time for statistics:              0.141s

Time for Garbage Collector:       6.662s (in 235 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                400MB (   382 MiB) max;    172MB (   164 MiB) avg;    406MB (   387 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     37MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           568MB (   542 MiB) max;    260MB (   247 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8080MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
