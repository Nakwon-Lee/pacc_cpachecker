scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--mwifiex--mwifiex_pcie.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lizc2tmj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            28433 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24279 (85%)
  Because of loop head:            4070 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (0%)
  Times precision was empty:       4271 (15%)
  Times precision was {false}:     521 (2%)
  Times result was cached:         22203 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1438 (5%)
  Times result was 'false':        526 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         21969
  BDD entailment checks:           9587
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       152
Number of predicates discovered:          4
Number of abstraction locations:          119
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         44423
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 22.68
Number of irrelevant predicates:          17980 (40%)
Number of preds handled by boolean abs:   1741 (4%)
  Total number of models for allsat:      1407
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                  8.793s
  Time for path formula creation:        8.587s
Time for strengthen operator:            0.513s
Time for prec operator:                  6.876s
  Time for abstraction:                  6.381s (Max:     0.034s, Count: 28433)
    Boolean abstraction:                 1.214s
    Solving time:                        1.262s (Max:     0.015s)
    Model enumeration time:              0.103s
    Time for BDD construction:           0.075s (Max:     0.013s)
Time for merge operator:                 0.393s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     1.365s

Number of path formula cache hits:   332583 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.728s

Total number of created targets for pointer analysis: 771
   Number of created targets for uf: *unsigned_int is 16


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2896 (count: 25246, min: 0, max: 142, avg: 0.11)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.774s
  Time for transition matches:                         0.372s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       516690 (count: 516690, min: 1, max: 1, avg: 1.00) [1 x 516690]

CPA algorithm statistics
------------------------
Number of iterations:            139311
Max size of waitlist:            64
Average size of waitlist:        27
Number of computed successors:   154816
Max successors for one state:    2
Number of times merged:          6191
Number of times stopped:         11975
Number of times breaked:         84

Total time for CPA algorithm:        23.481s (Max:     0.907s)
  Time for choose from waitlist:      0.079s
  Time for precision adjustment:      7.889s
  Time for transfer relation:        13.808s
  Time for merge operator:            0.568s
  Time for stop operator:             0.289s
  Time for adding to reached set:     0.243s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                2574 (count: 84, min: 9, max: 52, avg: 30.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.755s
  Counterexample analysis:                             1.226s (Max:     0.039s, Calls: 84)
    Refinement sat check:                              0.928s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.056s
  ARG update:                                          0.343s

Length of refined path (in blocks):                    2157 (count: 83, min: 8, max: 44, avg: 25.99)
Number of affected states:                             1866 (count: 83, min: 7, max: 38, avg: 22.48)
Length (states) of path with itp 'true':                208 (count: 83, min: 0, max: 8, avg: 2.51)
Length (states) of path with itp non-trivial itp:      1866 (count: 83, min: 7, max: 38, avg: 22.48)
Length (states) of path with itp 'false':                83 (count: 83, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 83, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1783 (count: 83, min: 6, max: 37, avg: 21.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     83
Number of failed refinements:         0
Max. size of reached set before ref.: 2998
Max. size of reached set after ref.:  1083
Avg. size of reached set before ref.: 1737.86
Avg. size of reached set after ref.:  44.14

Total time for CEGAR algorithm:      25.481s
Time for refinements:                 1.992s
Average time for refinement:          0.023s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          4639
  Total lines:            7559
  Line coverage:          0.614
  Visited conditions:     260
  Total conditions:       552
  Condition coverage:     0.471

CPAchecker general statistics
-----------------------------
Number of program locations:     8341
Number of CFA edges:             8737
Number of relevant variables:    1745
Number of functions:             68
Number of loops:                 18
Size of reached set:             2913
  Number of reached locations:   999 (12%)
    Avg states per location:     2
    Max states per location:     70 (at node N7760)
  Number of reached functions:   46 (68%)
  Number of partitions:          2886
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N7529 (before lines 15151-15289), Function main called from node N7508, stack depth 1 [6d293993], stack [main]])
  Number of target states:       1
  Size of final wait list        47

Time for analysis setup:          4.839s
  Time for loading CPAs:          0.915s
  Time for loading parser:        0.516s
  Time for CFA construction:      3.294s
    Time for parsing file(s):     0.769s
    Time for AST to CFA:          1.007s
    Time for CFA sanity check:    0.376s
    Time for post-processing:     0.911s
      Time for var class.:        0.435s
Time for Analysis:               25.481s
CPU time for analysis:           25.490s
Total time for CPAchecker:       30.322s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.128s

Time for Garbage Collector:       1.860s (in 100 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                169MB (   161 MiB) max;     83MB (    79 MiB) avg;    180MB (   172 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           204MB (   195 MiB) max;    147MB (   140 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
