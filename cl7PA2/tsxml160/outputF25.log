scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--mtd--devices--phram.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7219_j6h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1602: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

line 1645: Dead code detected: Goto: while_break___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 1665: Dead code detected: Goto: while_break___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 1706: Dead code detected: Goto: while_break___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 1734: Dead code detected: Goto: while_break___4 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strnlen to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_parse_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            588 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  494 (84%)
  Because of loop head:            84 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (2%)
  Times precision was empty:       175 (30%)
  Times precision was {false}:     29 (5%)
  Times result was cached:         338 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      46 (8%)
  Times result was 'false':        12 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         526
  BDD entailment checks:           172
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          2
Number of abstraction locations:          33
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         413
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.51
Number of irrelevant predicates:          113 (27%)
Number of preds handled by boolean abs:   46 (11%)
  Total number of models for allsat:      46
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.540s
  Time for path formula creation:        0.522s
Time for strengthen operator:            0.044s
Time for prec operator:                  0.447s
  Time for abstraction:                  0.421s (Max:     0.020s, Count: 588)
    Boolean abstraction:                 0.107s
    Solving time:                        0.117s (Max:     0.017s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.129s

Number of path formula cache hits:   6946 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.467s

Total number of created targets for pointer analysis: 125
   Number of created targets for uf: *(char)* is 7
   Number of created targets for uf: *unsigned_int is 7
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          43 (count: 773, min: 0, max: 43, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.065s
Automaton transfers with branching:                0
Automaton transfer successors:                         8060 (count: 8060, min: 1, max: 1, avg: 1.00) [1 x 8060]

CPA algorithm statistics
------------------------
Number of iterations:            2747
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   3086
Max successors for one state:    2
Number of times merged:          177
Number of times stopped:         293
Number of times breaked:         10

Total time for CPA algorithm:         1.652s (Max:     0.447s)
  Time for choose from waitlist:      0.006s
  Time for precision adjustment:      0.570s
  Time for transfer relation:         0.898s
  Time for merge operator:            0.062s
  Time for stop operator:             0.023s
  Time for adding to reached set:     0.034s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 180 (count: 10, min: 10, max: 30, avg: 18.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.198s
  Counterexample analysis:                             0.131s (Max:     0.028s, Calls: 10)
    Refinement sat check:                              0.096s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.002s
  ARG update:                                          0.031s

Length of refined path (in blocks):                     170 (count: 10, min: 9, max: 29, avg: 17.00)
Number of affected states:                              160 (count: 10, min: 8, max: 28, avg: 16.00)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       160 (count: 10, min: 8, max: 28, avg: 16.00)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             150 (count: 10, min: 7, max: 27, avg: 15.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 323
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 256.40
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.890s
Time for refinements:                 0.236s
Average time for refinement:          0.023s
Max time for refinement:              0.035s

Code Coverage
-----------------------------
  Function coverage:      0.484
  Visited lines:          749
  Total lines:            893
  Line coverage:          0.839
  Visited conditions:     50
  Total conditions:       72
  Condition coverage:     0.694

CPAchecker general statistics
-----------------------------
Number of program locations:     1063
Number of CFA edges:             1093
Number of relevant variables:    234
Number of functions:             31
Number of loops:                 3
Size of reached set:             248
  Number of reached locations:   198 (19%)
    Avg states per location:     1
    Max states per location:     6 (at node N527)
  Number of reached functions:   15 (48%)
  Number of partitions:          248
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.423s
  Time for loading CPAs:          0.542s
  Time for loading parser:        0.449s
  Time for CFA construction:      1.327s
    Time for parsing file(s):     0.445s
    Time for AST to CFA:          0.388s
    Time for CFA sanity check:    0.088s
    Time for post-processing:     0.283s
      Time for var class.:        0.127s
Time for Analysis:                1.890s
CPU time for analysis:            1.890s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.316s
Total CPU time for CPAchecker:    4.320s
Time for statistics:              0.051s

Time for Garbage Collector:       0.096s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     33MB (    31 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     27MB (    25 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8034MB (  7662 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
