scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--phy--spi_ks8995.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xl52v78_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1543 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1404 (91%)
  Because of loop head:            99 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (3%)
  Times precision was empty:       376 (24%)
  Times precision was {false}:     78 (5%)
  Times result was cached:         986 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      103 (7%)
  Times result was 'false':        32 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         788
  BDD entailment checks:           318
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          3
Number of abstraction locations:          63
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1167
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.45
Number of irrelevant predicates:          674 (58%)
Number of preds handled by boolean abs:   103 (9%)
  Total number of models for allsat:      103
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.745s
  Time for path formula creation:        0.735s
Time for strengthen operator:            0.074s
Time for prec operator:                  0.668s
  Time for abstraction:                  0.610s (Max:     0.017s, Count: 1543)
    Boolean abstraction:                 0.113s
    Solving time:                        0.099s (Max:     0.013s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.023s (Max:     0.010s)
Time for merge operator:                 0.020s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.109s

Number of path formula cache hits:   12969 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.703s

Total number of created targets for pointer analysis: 80
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *char is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         158 (count: 1709, min: 0, max: 57, avg: 0.09)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.067s
Automaton transfers with branching:                0
Automaton transfer successors:                        16643 (count: 16643, min: 1, max: 1, avg: 1.00) [1 x 16643]

CPA algorithm statistics
------------------------
Number of iterations:            5479
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   6053
Max successors for one state:    2
Number of times merged:          235
Number of times stopped:         405
Number of times breaked:         40

Total time for CPA algorithm:         2.520s (Max:     0.370s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      0.893s
  Time for transfer relation:         1.368s
  Time for merge operator:            0.038s
  Time for stop operator:             0.062s
  Time for adding to reached set:     0.052s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                1591 (count: 40, min: 5, max: 82, avg: 39.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.667s
  Counterexample analysis:                             0.551s (Max:     0.047s, Calls: 40)
    Refinement sat check:                              0.355s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.014s
  ARG update:                                          0.021s

Length of refined path (in blocks):                    1551 (count: 40, min: 4, max: 81, avg: 38.78)
Number of affected states:                              425 (count: 40, min: 2, max: 22, avg: 10.63)
Length (states) of path with itp 'true':               1086 (count: 40, min: 0, max: 69, avg: 27.15)
Length (states) of path with itp non-trivial itp:       425 (count: 40, min: 2, max: 22, avg: 10.63)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 40, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             385 (count: 40, min: 1, max: 21, avg: 9.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 625
Max. size of reached set after ref.:  503
Avg. size of reached set before ref.: 405.15
Avg. size of reached set after ref.:  277.53

Total time for CEGAR algorithm:       3.297s
Time for refinements:                 0.752s
Average time for refinement:          0.018s
Max time for refinement:              0.055s

Code Coverage
-----------------------------
  Function coverage:      0.765
  Visited lines:          1033
  Total lines:            1102
  Line coverage:          0.937
  Visited conditions:     58
  Total conditions:       74
  Condition coverage:     0.784

CPAchecker general statistics
-----------------------------
Number of program locations:     1281
Number of CFA edges:             1330
Number of relevant variables:    225
Number of functions:             34
Number of loops:                 1
Size of reached set:             512
  Number of reached locations:   262 (20%)
    Avg states per location:     1
    Max states per location:     10 (at node N10)
  Number of reached functions:   26 (76%)
  Number of partitions:          512
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.845s
  Time for loading CPAs:          0.625s
  Time for loading parser:        0.493s
  Time for CFA construction:      1.602s
    Time for parsing file(s):     0.547s
    Time for AST to CFA:          0.473s
    Time for CFA sanity check:    0.118s
    Time for post-processing:     0.334s
      Time for var class.:        0.124s
Time for Analysis:                3.297s
CPU time for analysis:            3.300s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.145s
Total CPU time for CPAchecker:    6.140s
Time for statistics:              0.053s

Time for Garbage Collector:       0.118s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     37MB (    35 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8048MB (  7675 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
