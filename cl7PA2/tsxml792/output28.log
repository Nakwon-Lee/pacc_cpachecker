scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--input--mouse--vsxxxaa.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5qutfzht/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 1935: Function pointer *__cil_tmp8 with type int (*)(struct serio *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1935: Ignoring call via function pointer serio_write::__cil_tmp8 for which no suitable target was found in line: tmp = (*__cil_tmp8)(serio, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2264 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1953 (86%)
  Because of loop head:            293 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       241 (11%)
  Times precision was {false}:     101 (4%)
  Times result was cached:         1837 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      85 (4%)
  Times result was 'false':        35 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1356
  BDD entailment checks:           450
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       77
Number of predicates discovered:          2
Number of abstraction locations:          97
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2023
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 10.88
Number of irrelevant predicates:          384 (19%)
Number of preds handled by boolean abs:   85 (4%)
  Total number of models for allsat:      85
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.873s
  Time for path formula creation:        0.840s
Time for strengthen operator:            0.058s
Time for prec operator:                  0.916s
  Time for abstraction:                  0.834s (Max:     0.015s, Count: 2264)
    Boolean abstraction:                 0.136s
    Solving time:                        0.162s (Max:     0.010s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.035s (Max:     0.010s)
Time for merge operator:                 0.067s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.164s

Number of path formula cache hits:   23002 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.804s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         169 (count: 1711, min: 0, max: 67, avg: 0.10)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.138s
Automaton transfers with branching:                0
Automaton transfer successors:                        27686 (count: 27686, min: 1, max: 1, avg: 1.00) [1 x 27686]

CPA algorithm statistics
------------------------
Number of iterations:            8885
Max size of waitlist:            15
Average size of waitlist:        4
Number of computed successors:   9825
Max successors for one state:    2
Number of times merged:          453
Number of times stopped:         759
Number of times breaked:         18

Total time for CPA algorithm:         3.224s (Max:     0.245s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      1.134s
  Time for transfer relation:         1.631s
  Time for merge operator:            0.113s
  Time for stop operator:             0.086s
  Time for adding to reached set:     0.065s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 595 (count: 18, min: 5, max: 59, avg: 33.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.393s
  Counterexample analysis:                             0.271s (Max:     0.036s, Calls: 18)
    Refinement sat check:                              0.174s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.028s
  ARG update:                                          0.053s

Length of refined path (in blocks):                     577 (count: 18, min: 4, max: 58, avg: 32.06)
Number of affected states:                              559 (count: 18, min: 3, max: 57, avg: 31.06)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       559 (count: 18, min: 3, max: 57, avg: 31.06)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             541 (count: 18, min: 2, max: 56, avg: 30.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 856
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 465.11
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.662s
Time for refinements:                 0.435s
Average time for refinement:          0.024s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.730
  Visited lines:          1488
  Total lines:            1536
  Line coverage:          0.969
  Visited conditions:     78
  Total conditions:       98
  Condition coverage:     0.796

CPAchecker general statistics
-----------------------------
Number of program locations:     1758
Number of CFA edges:             1844
Number of relevant variables:    236
Number of functions:             37
Number of loops:                 6
Size of reached set:             714
  Number of reached locations:   377 (21%)
    Avg states per location:     1
    Max states per location:     12 (at node N27)
  Number of reached functions:   27 (73%)
  Number of partitions:          714
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.666s
  Time for loading CPAs:          0.540s
  Time for loading parser:        0.430s
  Time for CFA construction:      1.596s
    Time for parsing file(s):     0.490s
    Time for AST to CFA:          0.516s
    Time for CFA sanity check:    0.120s
    Time for post-processing:     0.325s
      Time for var class.:        0.156s
Time for Analysis:                3.662s
CPU time for analysis:            3.660s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.331s
Total CPU time for CPAchecker:    6.330s
Time for statistics:              0.064s

Time for Garbage Collector:       0.121s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    58 MiB) max;     38MB (    36 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7991MB (  7621 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
