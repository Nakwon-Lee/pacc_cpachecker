scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--power--wm831x_power.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xvyqd5sx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_changed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_crit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            732 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  464 (63%)
  Because of loop head:            259 (35%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (1%)
  Times precision was empty:       266 (36%)
  Times precision was {false}:     90 (12%)
  Times result was cached:         327 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      49 (7%)
  Times result was 'false':        9 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1379
  BDD entailment checks:           253
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       122
Number of predicates discovered:          2
Number of abstraction locations:          27
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         466
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.35
Number of irrelevant predicates:          212 (45%)
Number of preds handled by boolean abs:   49 (11%)
  Total number of models for allsat:      51
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.640s
  Time for path formula creation:        1.605s
Time for strengthen operator:            0.038s
Time for prec operator:                  1.129s
  Time for abstraction:                  1.061s (Max:     0.040s, Count: 732)
    Boolean abstraction:                 0.154s
    Solving time:                        0.547s (Max:     0.035s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.214s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.556s

Number of path formula cache hits:   9629 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.516s

Total number of created targets for pointer analysis: 2111
   Number of created targets for uf: *signed_int is 53
   Number of created targets for uf: *(char)* is 9


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          99 (count: 1268, min: 0, max: 48, avg: 0.08)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.160s
Automaton transfers with branching:                0
Automaton transfer successors:                        21045 (count: 21045, min: 1, max: 1, avg: 1.00) [1 x 21045]

CPA algorithm statistics
------------------------
Number of iterations:            5181
Max size of waitlist:            17
Average size of waitlist:        7
Number of computed successors:   6004
Max successors for one state:    2
Number of times merged:          563
Number of times stopped:         763
Number of times breaked:         9

Total time for CPA algorithm:         4.070s (Max:     0.860s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      1.287s
  Time for transfer relation:         2.344s
  Time for merge operator:            0.251s
  Time for stop operator:             0.042s
  Time for adding to reached set:     0.040s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 132 (count: 9, min: 6, max: 32, avg: 14.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.231s
  Counterexample analysis:                             0.178s (Max:     0.073s, Calls: 9)
    Refinement sat check:                              0.129s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.005s
  ARG update:                                          0.028s

Length of refined path (in blocks):                     123 (count: 9, min: 5, max: 31, avg: 13.67)
Number of affected states:                              114 (count: 9, min: 4, max: 30, avg: 12.67)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       114 (count: 9, min: 4, max: 30, avg: 12.67)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             105 (count: 9, min: 3, max: 29, avg: 11.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 688
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 544.89
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.331s
Time for refinements:                 0.261s
Average time for refinement:          0.029s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1163
  Total lines:            1426
  Line coverage:          0.816
  Visited conditions:     80
  Total conditions:       148
  Condition coverage:     0.541

CPAchecker general statistics
-----------------------------
Number of program locations:     1597
Number of CFA edges:             1672
Number of relevant variables:    342
Number of functions:             25
Number of loops:                 4
Size of reached set:             356
  Number of reached locations:   246 (15%)
    Avg states per location:     1
    Max states per location:     5 (at node N144)
  Number of reached functions:   10 (40%)
  Number of partitions:          356
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.938s
  Time for loading CPAs:          0.692s
  Time for loading parser:        0.480s
  Time for CFA construction:      1.697s
    Time for parsing file(s):     0.517s
    Time for AST to CFA:          0.548s
    Time for CFA sanity check:    0.145s
    Time for post-processing:     0.357s
      Time for var class.:        0.178s
Time for Analysis:                4.332s
CPU time for analysis:            4.330s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.273s
Total CPU time for CPAchecker:    7.260s
Time for statistics:              0.066s

Time for Garbage Collector:       0.147s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     38MB (    36 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
