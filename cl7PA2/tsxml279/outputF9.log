scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--video--backlight--l4f00242t03.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gwqdsq_m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_set_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4357: Unsupported feature (recursion): l4f00242t03_lcd_power_set(ld, power); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1439 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1265 (88%)
  Because of loop head:            162 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (1%)
  Times precision was empty:       496 (34%)
  Times precision was {false}:     67 (5%)
  Times result was cached:         810 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66 (5%)
  Times result was 'false':        24 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         583
  BDD entailment checks:           255
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       79
Number of predicates discovered:          2
Number of abstraction locations:          50
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         943
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.09
Number of irrelevant predicates:          336 (36%)
Number of preds handled by boolean abs:   66 (7%)
  Total number of models for allsat:      66
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.062s
  Time for path formula creation:        1.012s
Time for strengthen operator:            0.025s
Time for prec operator:                  0.727s
  Time for abstraction:                  0.635s (Max:     0.019s, Count: 1439)
    Boolean abstraction:                 0.080s
    Solving time:                        0.109s (Max:     0.017s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.035s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.112s

Number of path formula cache hits:   15730 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.920s

Total number of created targets for pointer analysis: 340
   Number of created targets for uf: *unsigned_short_int is 53


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         129 (count: 1487, min: 0, max: 48, avg: 0.09)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.139s
Automaton transfers with branching:                0
Automaton transfer successors:                        21471 (count: 21471, min: 1, max: 1, avg: 1.00) [1 x 21471]

CPA algorithm statistics
------------------------
Number of iterations:            5711
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   6233
Max successors for one state:    2
Number of times merged:          164
Number of times stopped:         352
Number of times breaked:         12

Total time for CPA algorithm:         2.763s (Max:     0.458s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      0.880s
  Time for transfer relation:         1.601s
  Time for merge operator:            0.050s
  Time for stop operator:             0.080s
  Time for adding to reached set:     0.027s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 213 (count: 12, min: 6, max: 33, avg: 17.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.207s
  Counterexample analysis:                             0.141s (Max:     0.021s, Calls: 12)
    Refinement sat check:                              0.084s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.021s
  ARG update:                                          0.025s

Length of refined path (in blocks):                     201 (count: 12, min: 5, max: 32, avg: 16.75)
Number of affected states:                              189 (count: 12, min: 4, max: 31, avg: 15.75)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       189 (count: 12, min: 4, max: 31, avg: 15.75)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             177 (count: 12, min: 3, max: 30, avg: 14.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 895
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 422.75
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.003s
Time for refinements:                 0.239s
Average time for refinement:          0.019s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.618
  Visited lines:          1389
  Total lines:            1536
  Line coverage:          0.904
  Visited conditions:     64
  Total conditions:       86
  Condition coverage:     0.744

CPAchecker general statistics
-----------------------------
Number of program locations:     1759
Number of CFA edges:             1824
Number of relevant variables:    274
Number of functions:             34
Number of loops:                 4
Size of reached set:             821
  Number of reached locations:   319 (18%)
    Avg states per location:     2
    Max states per location:     18 (at node N1222)
  Number of reached functions:   21 (62%)
  Number of partitions:          821
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          2.684s
  Time for loading CPAs:          0.532s
  Time for loading parser:        0.443s
  Time for CFA construction:      1.653s
    Time for parsing file(s):     0.529s
    Time for AST to CFA:          0.544s
    Time for CFA sanity check:    0.111s
    Time for post-processing:     0.348s
      Time for var class.:        0.163s
Time for Analysis:                3.004s
CPU time for analysis:            3.000s
Total time for CPAchecker:        5.690s
Total CPU time for CPAchecker:    5.680s
Time for statistics:              0.085s

Time for Garbage Collector:       0.134s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     37MB (    35 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7988MB (  7618 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
