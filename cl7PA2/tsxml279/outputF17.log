scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--video--backlight--l4f00242t03.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_79ostqkk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_set_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4357: Unsupported feature (recursion): l4f00242t03_lcd_power_set(ld, power); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2651 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2297 (87%)
  Because of loop head:            341 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (0%)
  Times precision was empty:       1440 (54%)
  Times precision was {false}:     99 (4%)
  Times result was cached:         1046 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66 (2%)
  Times result was 'false':        25 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         959
  BDD entailment checks:           397
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       79
Number of predicates discovered:          2
Number of abstraction locations:          50
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1211
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.34
Number of irrelevant predicates:          606 (50%)
Number of preds handled by boolean abs:   66 (5%)
  Total number of models for allsat:      66
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.745s
  Time for path formula creation:        1.703s
Time for strengthen operator:            0.040s
Time for prec operator:                  0.924s
  Time for abstraction:                  0.855s (Max:     0.025s, Count: 2651)
    Boolean abstraction:                 0.068s
    Solving time:                        0.193s (Max:     0.016s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.014s (Max:     0.007s)
Time for merge operator:                 0.042s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.210s

Number of path formula cache hits:   26393 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.562s

Total number of created targets for pointer analysis: 2396
   Number of created targets for uf: *unsigned_short_int is 405


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         129 (count: 2733, min: 0, max: 34, avg: 0.05)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.205s
Automaton transfers with branching:                0
Automaton transfer successors:                        40217 (count: 40217, min: 1, max: 1, avg: 1.00) [1 x 40217]

CPA algorithm statistics
------------------------
Number of iterations:            10429
Max size of waitlist:            32
Average size of waitlist:        13
Number of computed successors:   11347
Max successors for one state:    2
Number of times merged:          281
Number of times stopped:         580
Number of times breaked:         13

Total time for CPA algorithm:         4.287s (Max:     0.708s)
  Time for choose from waitlist:      0.050s
  Time for precision adjustment:      1.164s
  Time for transfer relation:         2.652s
  Time for merge operator:            0.098s
  Time for stop operator:             0.068s
  Time for adding to reached set:     0.086s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 203 (count: 13, min: 4, max: 31, avg: 15.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.224s
  Counterexample analysis:                             0.147s (Max:     0.018s, Calls: 13)
    Refinement sat check:                              0.082s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.002s
  ARG update:                                          0.039s

Length of refined path (in blocks):                     190 (count: 13, min: 3, max: 30, avg: 14.62)
Number of affected states:                              177 (count: 13, min: 2, max: 29, avg: 13.62)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       177 (count: 13, min: 2, max: 29, avg: 13.62)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             164 (count: 13, min: 1, max: 28, avg: 12.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 1184
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 746.92
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.535s
Time for refinements:                 0.248s
Average time for refinement:          0.019s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.618
  Visited lines:          1389
  Total lines:            1536
  Line coverage:          0.904
  Visited conditions:     64
  Total conditions:       86
  Condition coverage:     0.744

CPAchecker general statistics
-----------------------------
Number of program locations:     1759
Number of CFA edges:             1824
Number of relevant variables:    274
Number of functions:             34
Number of loops:                 4
Size of reached set:             1072
  Number of reached locations:   319 (18%)
    Avg states per location:     3
    Max states per location:     22 (at node N41)
  Number of reached functions:   21 (62%)
  Number of partitions:          1072
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          2.892s
  Time for loading CPAs:          0.679s
  Time for loading parser:        0.427s
  Time for CFA construction:      1.675s
    Time for parsing file(s):     0.529s
    Time for AST to CFA:          0.533s
    Time for CFA sanity check:    0.079s
    Time for post-processing:     0.391s
      Time for var class.:        0.188s
Time for Analysis:                4.535s
CPU time for analysis:            4.540s
Total time for CPAchecker:        7.429s
Total CPU time for CPAchecker:    7.430s
Time for statistics:              0.060s

Time for Garbage Collector:       0.207s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     40MB (    38 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   7996MB (  7625 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
