scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y4lgg1om/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            26395 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24250 (92%)
  Because of loop head:            2079 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (0%)
  Times precision was empty:       1418 (5%)
  Times precision was {false}:     439 (2%)
  Times result was cached:         24059 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      479 (2%)
  Times result was 'false':        67 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         46526
  BDD entailment checks:           7620
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       196
Number of predicates discovered:          2
Number of abstraction locations:          160
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         24977
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 27.21
Number of irrelevant predicates:          3265 (13%)
Number of preds handled by boolean abs:   479 (2%)
  Total number of models for allsat:      479
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.206s
  Time for path formula creation:        4.999s
Time for strengthen operator:            0.442s
Time for prec operator:                  6.427s
  Time for abstraction:                  6.021s (Max:     0.020s, Count: 26395)
    Boolean abstraction:                 0.674s
    Solving time:                        0.931s (Max:     0.018s)
    Model enumeration time:              0.043s
    Time for BDD construction:           0.059s (Max:     0.009s)
Time for merge operator:                 0.359s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     0.974s

Number of path formula cache hits:   515585 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.666s

Total number of created targets for pointer analysis: 266
   Number of created targets for uf: *(void)* is 19
   Number of created targets for uf: *_Bool is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         933 (count: 14112, min: 0, max: 60, avg: 0.07)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.732s
  Time for transition matches:                         0.332s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       535574 (count: 535574, min: 1, max: 1, avg: 1.00) [1 x 535574]

CPA algorithm statistics
------------------------
Number of iterations:            201141
Max size of waitlist:            76
Average size of waitlist:        27
Number of computed successors:   229158
Max successors for one state:    2
Number of times merged:          19453
Number of times stopped:         26088
Number of times breaked:         66

Total time for CPA algorithm:        19.451s (Max:     0.676s)
  Time for choose from waitlist:      0.118s
  Time for precision adjustment:      7.810s
  Time for transfer relation:         9.605s
  Time for merge operator:            0.608s
  Time for stop operator:             0.325s
  Time for adding to reached set:     0.297s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   66
Avg. length of target path (in blocks):                2131 (count: 66, min: 8, max: 61, avg: 32.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.096s
  Counterexample analysis:                             1.477s (Max:     0.046s, Calls: 66)
    Refinement sat check:                              1.091s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.053s
  ARG update:                                          0.472s

Length of refined path (in blocks):                    2065 (count: 66, min: 7, max: 60, avg: 31.29)
Number of affected states:                             1999 (count: 66, min: 6, max: 59, avg: 30.29)
Length (states) of path with itp 'true':                  0 (count: 66, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1999 (count: 66, min: 6, max: 59, avg: 30.29)
Length (states) of path with itp 'false':                66 (count: 66, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 66, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1933 (count: 66, min: 5, max: 58, avg: 29.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                66
Number of successful refinements:     66
Number of failed refinements:         0
Max. size of reached set before ref.: 7759
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2964.08
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      21.772s
Time for refinements:                 2.317s
Average time for refinement:          0.035s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          3846
  Total lines:            4337
  Line coverage:          0.887
  Visited conditions:     320
  Total conditions:       374
  Condition coverage:     0.856

CPAchecker general statistics
-----------------------------
Number of program locations:     4901
Number of CFA edges:             5157
Number of relevant variables:    1226
Number of functions:             60
Number of loops:                 11
Size of reached set:             7573
  Number of reached locations:   1178 (24%)
    Avg states per location:     6
    Max states per location:     98 (at node N4563)
  Number of reached functions:   40 (67%)
  Number of partitions:          7573
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.769s
  Time for loading CPAs:          0.727s
  Time for loading parser:        0.429s
  Time for CFA construction:      2.518s
    Time for parsing file(s):     0.678s
    Time for AST to CFA:          0.810s
    Time for CFA sanity check:    0.264s
    Time for post-processing:     0.647s
      Time for var class.:        0.330s
Time for Analysis:               21.772s
CPU time for analysis:           21.770s
Time for analyzing result:        0.013s
Total time for CPAchecker:       25.544s
Total CPU time for CPAchecker:   25.530s
Time for statistics:              0.159s

Time for Garbage Collector:       1.009s (in 114 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 99MB (    95 MiB) max;     58MB (    56 MiB) avg;    105MB (   100 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
