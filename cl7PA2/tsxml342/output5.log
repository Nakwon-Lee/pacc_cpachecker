scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5bxinsgc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30729 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28883 (94%)
  Because of loop head:            1784 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (0%)
  Times precision was empty:       4511 (15%)
  Times precision was {false}:     763 (2%)
  Times result was cached:         25008 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      447 (1%)
  Times result was 'false':        123 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         93725
  BDD entailment checks:           7719
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       196
Number of predicates discovered:          2
Number of abstraction locations:          155
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         26218
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 21.67
Number of irrelevant predicates:          5400 (21%)
Number of preds handled by boolean abs:   447 (2%)
  Total number of models for allsat:      447
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.789s
  Time for path formula creation:        6.507s
Time for strengthen operator:            0.479s
Time for prec operator:                  6.260s
  Time for abstraction:                  5.629s (Max:     0.035s, Count: 30729)
    Boolean abstraction:                 0.513s
    Solving time:                        1.038s (Max:     0.020s)
    Model enumeration time:              0.043s
    Time for BDD construction:           0.032s (Max:     0.013s)
Time for merge operator:                 0.672s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     1.081s

Number of path formula cache hits:   702284 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.696s

Total number of created targets for pointer analysis: 209
   Number of created targets for uf: *(void)* is 19
   Number of created targets for uf: *_Bool is 64


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         897 (count: 18732, min: 0, max: 78, avg: 0.05)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.896s
  Time for transition matches:                         0.495s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       747659 (count: 747659, min: 1, max: 1, avg: 1.00) [1 x 747659]

CPA algorithm statistics
------------------------
Number of iterations:            327132
Max size of waitlist:            73
Average size of waitlist:        43
Number of computed successors:   379091
Max successors for one state:    2
Number of times merged:          43003
Number of times stopped:         49649
Number of times breaked:         62

Total time for CPA algorithm:        23.463s (Max:     0.886s)
  Time for choose from waitlist:      0.192s
  Time for precision adjustment:      8.238s
  Time for transfer relation:        12.245s
  Time for merge operator:            1.089s
  Time for stop operator:             0.359s
  Time for adding to reached set:     0.405s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                1897 (count: 62, min: 5, max: 61, avg: 30.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.045s
  Counterexample analysis:                             1.242s (Max:     0.048s, Calls: 62)
    Refinement sat check:                              0.932s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.047s
  ARG update:                                          0.660s

Length of refined path (in blocks):                    1835 (count: 62, min: 4, max: 60, avg: 29.60)
Number of affected states:                             1773 (count: 62, min: 3, max: 59, avg: 28.60)
Length (states) of path with itp 'true':                  0 (count: 62, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1773 (count: 62, min: 3, max: 59, avg: 28.60)
Length (states) of path with itp 'false':                62 (count: 62, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 62, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1711 (count: 62, min: 2, max: 58, avg: 27.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 8708
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 5197.45
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.872s
Time for refinements:                 2.397s
Average time for refinement:          0.038s
Max time for refinement:              0.094s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          3800
  Total lines:            4337
  Line coverage:          0.876
  Visited conditions:     304
  Total conditions:       374
  Condition coverage:     0.813

CPAchecker general statistics
-----------------------------
Number of program locations:     4901
Number of CFA edges:             5157
Number of relevant variables:    1226
Number of functions:             60
Number of loops:                 11
Size of reached set:             7264
  Number of reached locations:   1139 (23%)
    Avg states per location:     6
    Max states per location:     94 (at node N4564)
  Number of reached functions:   40 (67%)
  Number of partitions:          7263
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2665 (before line 6475), Function atk_ec_enabled called from node N2884, stack depth 4 [6082ac60], stack [main, atk_add, atk_enumerate_new_hwmon, atk_ec_enabled]])
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          3.955s
  Time for loading CPAs:          0.725s
  Time for loading parser:        0.483s
  Time for CFA construction:      2.661s
    Time for parsing file(s):     0.759s
    Time for AST to CFA:          0.826s
    Time for CFA sanity check:    0.250s
    Time for post-processing:     0.701s
      Time for var class.:        0.353s
Time for Analysis:               25.872s
CPU time for analysis:           25.860s
Total time for CPAchecker:       29.830s
Total CPU time for CPAchecker:   29.820s
Time for statistics:              0.433s

Time for Garbage Collector:       2.068s (in 155 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                126MB (   120 MiB) max;     73MB (    69 MiB) avg;    134MB (   128 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           132MB (   126 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
