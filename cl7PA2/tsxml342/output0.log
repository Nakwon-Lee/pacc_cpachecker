scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m7izpkha/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24721 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23552 (95%)
  Because of loop head:            1147 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       17384 (70%)
  Times precision was {false}:     878 (4%)
  Times result was cached:         6336 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      123 (0%)
  Times result was 'false':        31 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         65211
  BDD entailment checks:           6455
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       196
Number of predicates discovered:          2
Number of abstraction locations:          64
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         7337
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.33
Number of irrelevant predicates:          6187 (84%)
Number of preds handled by boolean abs:   123 (2%)
  Total number of models for allsat:      123
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 10.120s
  Time for path formula creation:        9.871s
Time for strengthen operator:            0.431s
Time for prec operator:                  3.865s
  Time for abstraction:                  3.233s (Max:     0.035s, Count: 24721)
    Boolean abstraction:                 0.159s
    Solving time:                        1.011s (Max:     0.015s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.013s (Max:     0.008s)
Time for merge operator:                 1.378s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     1.026s

Number of path formula cache hits:   354514 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.320s

Total number of created targets for pointer analysis: 2216
   Number of created targets for uf: *(void)* is 166
   Number of created targets for uf: *_Bool is 34


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         235 (count: 28972, min: 0, max: 24, avg: 0.01)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.830s
  Time for transition matches:                         0.437s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       537106 (count: 537106, min: 1, max: 1, avg: 1.00) [1 x 537106]

CPA algorithm statistics
------------------------
Number of iterations:            235609
Max size of waitlist:            28
Average size of waitlist:        14
Number of computed successors:   271263
Max successors for one state:    2
Number of times merged:          29378
Number of times stopped:         35534
Number of times breaked:         22

Total time for CPA algorithm:        25.354s (Max:     3.162s)
  Time for choose from waitlist:      0.163s
  Time for precision adjustment:      5.471s
  Time for transfer relation:        16.265s
  Time for merge operator:            1.787s
  Time for stop operator:             0.457s
  Time for adding to reached set:     0.302s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 437 (count: 22, min: 5, max: 31, avg: 19.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.790s
  Counterexample analysis:                             0.253s (Max:     0.027s, Calls: 22)
    Refinement sat check:                              0.184s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.013s
  ARG update:                                          0.486s

Length of refined path (in blocks):                     415 (count: 22, min: 4, max: 30, avg: 18.86)
Number of affected states:                              393 (count: 22, min: 3, max: 29, avg: 17.86)
Length (states) of path with itp 'true':                  0 (count: 22, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       393 (count: 22, min: 3, max: 29, avg: 17.86)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             371 (count: 22, min: 2, max: 28, avg: 16.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 15210
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 10667.77
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.380s
Time for refinements:                 1.016s
Average time for refinement:          0.046s
Max time for refinement:              0.098s

Code Coverage
-----------------------------
  Function coverage:      0.233
  Visited lines:          1238
  Total lines:            4337
  Line coverage:          0.285
  Visited conditions:     82
  Total conditions:       374
  Condition coverage:     0.219

CPAchecker general statistics
-----------------------------
Number of program locations:     4901
Number of CFA edges:             5157
Number of relevant variables:    1226
Number of functions:             60
Number of loops:                 11
Size of reached set:             1074
  Number of reached locations:   305 (6%)
    Avg states per location:     3
    Max states per location:     39 (at node N4564)
  Number of reached functions:   14 (23%)
  Number of partitions:          1073
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4109 (before line 8176), Function atk_add called from node N4418, stack depth 2 [4770c0ac], stack [main, atk_add]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          3.497s
  Time for loading CPAs:          0.786s
  Time for loading parser:        0.450s
  Time for CFA construction:      2.182s
    Time for parsing file(s):     0.571s
    Time for AST to CFA:          0.692s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.565s
      Time for var class.:        0.288s
Time for Analysis:               26.380s
CPU time for analysis:           26.380s
Total time for CPAchecker:       29.879s
Total CPU time for CPAchecker:   29.870s
Time for statistics:              0.090s

Time for Garbage Collector:       2.819s (in 103 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                200MB (   191 MiB) max;     87MB (    82 MiB) avg;    225MB (   215 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           264MB (   252 MiB) max;    147MB (   140 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
