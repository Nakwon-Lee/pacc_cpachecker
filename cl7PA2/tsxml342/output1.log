scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zx0eyd4i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21475 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19802 (92%)
  Because of loop head:            1606 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         67 (0%)
  Times precision was empty:       1071 (5%)
  Times precision was {false}:     262 (1%)
  Times result was cached:         19661 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      481 (2%)
  Times result was 'false':        133 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         28682
  BDD entailment checks:           5794
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       196
Number of predicates discovered:          2
Number of abstraction locations:          160
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         20404
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 27.46
Number of irrelevant predicates:          1601 (8%)
Number of preds handled by boolean abs:   481 (2%)
  Total number of models for allsat:      481
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.243s
  Time for path formula creation:        3.069s
Time for strengthen operator:            0.305s
Time for prec operator:                  5.556s
  Time for abstraction:                  5.113s (Max:     0.023s, Count: 21475)
    Boolean abstraction:                 0.672s
    Solving time:                        0.714s (Max:     0.015s)
    Model enumeration time:              0.047s
    Time for BDD construction:           0.062s (Max:     0.009s)
Time for merge operator:                 0.301s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.761s

Number of path formula cache hits:   346789 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.194s

Total number of created targets for pointer analysis: 246
   Number of created targets for uf: *(void)* is 19
   Number of created targets for uf: *_Bool is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         963 (count: 11066, min: 0, max: 88, avg: 0.09)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.562s
  Time for transition matches:                         0.282s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       343556 (count: 343556, min: 1, max: 1, avg: 1.00) [1 x 343556]

CPA algorithm statistics
------------------------
Number of iterations:            135086
Max size of waitlist:            21
Average size of waitlist:        8
Number of computed successors:   152699
Max successors for one state:    2
Number of times merged:          11444
Number of times stopped:         16700
Number of times breaked:         67

Total time for CPA algorithm:        15.172s (Max:     0.627s)
  Time for choose from waitlist:      0.106s
  Time for precision adjustment:      6.499s
  Time for transfer relation:         6.764s
  Time for merge operator:            0.522s
  Time for stop operator:             0.308s
  Time for adding to reached set:     0.264s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   67
Avg. length of target path (in blocks):                2376 (count: 67, min: 5, max: 76, avg: 35.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.308s
  Counterexample analysis:                             1.775s (Max:     0.089s, Calls: 67)
    Refinement sat check:                              1.327s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.062s
  ARG update:                                          0.355s

Length of refined path (in blocks):                    2309 (count: 67, min: 4, max: 75, avg: 34.46)
Number of affected states:                             2242 (count: 67, min: 3, max: 74, avg: 33.46)
Length (states) of path with itp 'true':                  0 (count: 67, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      2242 (count: 67, min: 3, max: 74, avg: 33.46)
Length (states) of path with itp 'false':                67 (count: 67, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 67, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2175 (count: 67, min: 2, max: 73, avg: 32.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                67
Number of successful refinements:     67
Number of failed refinements:         0
Max. size of reached set before ref.: 6630
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1917.84
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      17.736s
Time for refinements:                 2.555s
Average time for refinement:          0.038s
Max time for refinement:              0.107s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          3846
  Total lines:            4337
  Line coverage:          0.887
  Visited conditions:     320
  Total conditions:       374
  Condition coverage:     0.856

CPAchecker general statistics
-----------------------------
Number of program locations:     4901
Number of CFA edges:             5157
Number of relevant variables:    1226
Number of functions:             60
Number of loops:                 11
Size of reached set:             7573
  Number of reached locations:   1178 (24%)
    Avg states per location:     6
    Max states per location:     98 (at node N4563)
  Number of reached functions:   40 (67%)
  Number of partitions:          7573
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.064s
  Time for loading CPAs:          0.759s
  Time for loading parser:        0.512s
  Time for CFA construction:      2.684s
    Time for parsing file(s):     0.757s
    Time for AST to CFA:          0.817s
    Time for CFA sanity check:    0.298s
    Time for post-processing:     0.682s
      Time for var class.:        0.349s
Time for Analysis:               17.736s
CPU time for analysis:           17.740s
Time for analyzing result:        0.007s
Total time for CPAchecker:       21.804s
Total CPU time for CPAchecker:   21.790s
Time for statistics:              0.186s

Time for Garbage Collector:       0.677s (in 78 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     49MB (    47 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
