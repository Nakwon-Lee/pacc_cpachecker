scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cl06msgf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33381 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31422 (94%)
  Because of loop head:            1892 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         67 (0%)
  Times precision was empty:       3202 (10%)
  Times precision was {false}:     826 (2%)
  Times result was cached:         28874 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      479 (1%)
  Times result was 'false':        133 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         96559
  BDD entailment checks:           8933
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       196
Number of predicates discovered:          2
Number of abstraction locations:          160
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         30179
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 23.13
Number of irrelevant predicates:          5417 (18%)
Number of preds handled by boolean abs:   479 (2%)
  Total number of models for allsat:      479
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  7.961s
  Time for path formula creation:        7.699s
Time for strengthen operator:            0.591s
Time for prec operator:                  7.107s
  Time for abstraction:                  6.508s (Max:     0.026s, Count: 33381)
    Boolean abstraction:                 0.531s
    Solving time:                        1.127s (Max:     0.017s)
    Model enumeration time:              0.038s
    Time for BDD construction:           0.020s (Max:     0.003s)
Time for merge operator:                 0.824s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     1.165s

Number of path formula cache hits:   729252 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.418s

Total number of created targets for pointer analysis: 218
   Number of created targets for uf: *(void)* is 19
   Number of created targets for uf: *_Bool is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         953 (count: 19144, min: 0, max: 104, avg: 0.05)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.031s
  Time for transition matches:                         0.526s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       775612 (count: 775612, min: 1, max: 1, avg: 1.00) [1 x 775612]

CPA algorithm statistics
------------------------
Number of iterations:            340865
Max size of waitlist:            40
Average size of waitlist:        19
Number of computed successors:   394206
Max successors for one state:    2
Number of times merged:          43813
Number of times stopped:         51653
Number of times breaked:         67

Total time for CPA algorithm:        26.896s (Max:     1.129s)
  Time for choose from waitlist:      0.139s
  Time for precision adjustment:      9.607s
  Time for transfer relation:        13.958s
  Time for merge operator:            1.274s
  Time for stop operator:             0.558s
  Time for adding to reached set:     0.434s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   67
Avg. length of target path (in blocks):                2155 (count: 67, min: 5, max: 61, avg: 32.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.387s
  Counterexample analysis:                             1.418s (Max:     0.054s, Calls: 67)
    Refinement sat check:                              1.064s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.078s
  ARG update:                                          0.762s

Length of refined path (in blocks):                    2088 (count: 67, min: 4, max: 60, avg: 31.16)
Number of affected states:                             2021 (count: 67, min: 3, max: 59, avg: 30.16)
Length (states) of path with itp 'true':                  0 (count: 67, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      2021 (count: 67, min: 3, max: 59, avg: 30.16)
Length (states) of path with itp 'false':                67 (count: 67, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 67, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1954 (count: 67, min: 2, max: 58, avg: 29.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                67
Number of successful refinements:     67
Number of failed refinements:         0
Max. size of reached set before ref.: 9043
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 5000.73
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      29.598s
Time for refinements:                 2.700s
Average time for refinement:          0.040s
Max time for refinement:              0.095s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          3846
  Total lines:            4337
  Line coverage:          0.887
  Visited conditions:     320
  Total conditions:       374
  Condition coverage:     0.856

CPAchecker general statistics
-----------------------------
Number of program locations:     4901
Number of CFA edges:             5157
Number of relevant variables:    1226
Number of functions:             60
Number of loops:                 11
Size of reached set:             7573
  Number of reached locations:   1178 (24%)
    Avg states per location:     6
    Max states per location:     98 (at node N4563)
  Number of reached functions:   40 (67%)
  Number of partitions:          7573
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.430s
  Time for loading CPAs:          0.620s
  Time for loading parser:        0.400s
  Time for CFA construction:      2.334s
    Time for parsing file(s):     0.620s
    Time for AST to CFA:          0.772s
    Time for CFA sanity check:    0.227s
    Time for post-processing:     0.574s
      Time for var class.:        0.311s
Time for Analysis:               29.598s
CPU time for analysis:           29.600s
Time for analyzing result:        0.006s
Total time for CPAchecker:       33.030s
Total CPU time for CPAchecker:   33.020s
Time for statistics:              0.151s

Time for Garbage Collector:       1.924s (in 155 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                138MB (   132 MiB) max;     76MB (    73 MiB) avg;    141MB (   134 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           143MB (   137 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
