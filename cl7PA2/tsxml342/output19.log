scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ufxlwokc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            33677 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31372 (93%)
  Because of loop head:            2245 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60 (0%)
  Times precision was empty:       6944 (21%)
  Times precision was {false}:     684 (2%)
  Times result was cached:         25661 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      388 (1%)
  Times result was 'false':        119 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         78152
  BDD entailment checks:           11126
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       196
Number of predicates discovered:          2
Number of abstraction locations:          133
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         26733
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 24.94
Number of irrelevant predicates:          9479 (35%)
Number of preds handled by boolean abs:   388 (1%)
  Total number of models for allsat:      388
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.585s
  Time for path formula creation:        6.303s
Time for strengthen operator:            0.569s
Time for prec operator:                  6.571s
  Time for abstraction:                  6.003s (Max:     0.047s, Count: 33677)
    Boolean abstraction:                 0.513s
    Solving time:                        1.108s (Max:     0.019s)
    Model enumeration time:              0.036s
    Time for BDD construction:           0.035s (Max:     0.013s)
Time for merge operator:                 0.495s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     1.144s

Number of path formula cache hits:   692141 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.448s

Total number of created targets for pointer analysis: 257
   Number of created targets for uf: *(void)* is 19
   Number of created targets for uf: *_Bool is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         775 (count: 23823, min: 0, max: 36, avg: 0.03)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.944s
  Time for transition matches:                         0.562s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       725329 (count: 725329, min: 1, max: 1, avg: 1.00) [1 x 725329]

CPA algorithm statistics
------------------------
Number of iterations:            294911
Max size of waitlist:            54
Average size of waitlist:        26
Number of computed successors:   339028
Max successors for one state:    2
Number of times merged:          33513
Number of times stopped:         42446
Number of times breaked:         60

Total time for CPA algorithm:        23.924s (Max:     0.770s)
  Time for choose from waitlist:      0.206s
  Time for precision adjustment:      8.479s
  Time for transfer relation:        12.267s
  Time for merge operator:            0.929s
  Time for stop operator:             0.414s
  Time for adding to reached set:     0.666s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                1769 (count: 60, min: 5, max: 45, avg: 29.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.919s
  Counterexample analysis:                             1.134s (Max:     0.033s, Calls: 60)
    Refinement sat check:                              0.830s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.062s
  ARG update:                                          0.635s

Length of refined path (in blocks):                    1709 (count: 60, min: 4, max: 44, avg: 28.48)
Number of affected states:                             1649 (count: 60, min: 3, max: 43, avg: 27.48)
Length (states) of path with itp 'true':                  0 (count: 60, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1649 (count: 60, min: 3, max: 43, avg: 27.48)
Length (states) of path with itp 'false':                60 (count: 60, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 60, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1589 (count: 60, min: 2, max: 42, avg: 26.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 8697
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 4925.12
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.227s
Time for refinements:                 2.293s
Average time for refinement:          0.038s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1892
  Total lines:            4337
  Line coverage:          0.436
  Visited conditions:     126
  Total conditions:       374
  Condition coverage:     0.337

CPAchecker general statistics
-----------------------------
Number of program locations:     4901
Number of CFA edges:             5157
Number of relevant variables:    1226
Number of functions:             60
Number of loops:                 11
Size of reached set:             1136
  Number of reached locations:   485 (10%)
    Avg states per location:     2
    Max states per location:     40 (at node N4564)
  Number of reached functions:   24 (40%)
  Number of partitions:          1136
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        34

Time for analysis setup:          4.111s
  Time for loading CPAs:          0.749s
  Time for loading parser:        0.469s
  Time for CFA construction:      2.772s
    Time for parsing file(s):     0.775s
    Time for AST to CFA:          0.920s
    Time for CFA sanity check:    0.239s
    Time for post-processing:     0.696s
      Time for var class.:        0.363s
Time for Analysis:               26.227s
CPU time for analysis:           26.230s
Total time for CPAchecker:       30.341s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.072s

Time for Garbage Collector:       1.743s (in 143 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   119 MiB) max;     64MB (    61 MiB) avg;    135MB (   128 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           149MB (   142 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
