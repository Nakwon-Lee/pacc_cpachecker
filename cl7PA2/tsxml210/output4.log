scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--uio--uio_sercos3.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w2sko7i6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uio_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __uio_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            892 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  722 (81%)
  Because of loop head:            158 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (1%)
  Times precision was empty:       274 (31%)
  Times precision was {false}:     45 (5%)
  Times result was cached:         509 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      64 (7%)
  Times result was 'false':        23 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         955
  BDD entailment checks:           261
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       199
Number of predicates discovered:          2
Number of abstraction locations:          30
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         618
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.67
Number of irrelevant predicates:          196 (32%)
Number of preds handled by boolean abs:   64 (10%)
  Total number of models for allsat:      67
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  0.817s
  Time for path formula creation:        0.769s
Time for strengthen operator:            0.073s
Time for prec operator:                  0.765s
  Time for abstraction:                  0.674s (Max:     0.026s, Count: 892)
    Boolean abstraction:                 0.205s
    Solving time:                        0.184s (Max:     0.015s)
    Model enumeration time:              0.035s
    Time for BDD construction:           0.030s (Max:     0.011s)
Time for merge operator:                 0.079s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.219s

Number of path formula cache hits:   17512 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.710s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         115 (count: 1150, min: 0, max: 51, avg: 0.10)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.113s
Automaton transfers with branching:                0
Automaton transfer successors:                        21537 (count: 21537, min: 1, max: 1, avg: 1.00) [1 x 21537]

CPA algorithm statistics
------------------------
Number of iterations:            4494
Max size of waitlist:            9
Average size of waitlist:        3
Number of computed successors:   5101
Max successors for one state:    2
Number of times merged:          347
Number of times stopped:         545
Number of times breaked:         12

Total time for CPA algorithm:         2.731s (Max:     0.397s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      0.902s
  Time for transfer relation:         1.445s
  Time for merge operator:            0.124s
  Time for stop operator:             0.075s
  Time for adding to reached set:     0.031s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 257 (count: 12, min: 8, max: 33, avg: 21.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.223s
  Counterexample analysis:                             0.132s (Max:     0.019s, Calls: 12)
    Refinement sat check:                              0.084s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.005s
  ARG update:                                          0.041s

Length of refined path (in blocks):                     245 (count: 12, min: 7, max: 32, avg: 20.42)
Number of affected states:                              233 (count: 12, min: 6, max: 31, avg: 19.42)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       233 (count: 12, min: 6, max: 31, avg: 19.42)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             221 (count: 12, min: 5, max: 30, avg: 18.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 475
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 349.42
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.975s
Time for refinements:                 0.244s
Average time for refinement:          0.020s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.387
  Visited lines:          1007
  Total lines:            1189
  Line coverage:          0.847
  Visited conditions:     58
  Total conditions:       70
  Condition coverage:     0.829

CPAchecker general statistics
-----------------------------
Number of program locations:     1352
Number of CFA edges:             1392
Number of relevant variables:    287
Number of functions:             31
Number of loops:                 3
Size of reached set:             377
  Number of reached locations:   190 (14%)
    Avg states per location:     1
    Max states per location:     10 (at node N209)
  Number of reached functions:   12 (39%)
  Number of partitions:          377
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.663s
  Time for loading CPAs:          0.614s
  Time for loading parser:        0.416s
  Time for CFA construction:      1.520s
    Time for parsing file(s):     0.488s
    Time for AST to CFA:          0.465s
    Time for CFA sanity check:    0.074s
    Time for post-processing:     0.353s
      Time for var class.:        0.180s
Time for Analysis:                2.976s
CPU time for analysis:            2.970s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.643s
Total CPU time for CPAchecker:    5.640s
Time for statistics:              0.062s

Time for Garbage Collector:       0.123s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     36MB (    35 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8049MB (  7676 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
