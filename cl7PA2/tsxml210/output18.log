scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--uio--uio_sercos3.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wybkqyv8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uio_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __uio_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1622 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1311 (81%)
  Because of loop head:            300 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (1%)
  Times precision was empty:       716 (44%)
  Times precision was {false}:     146 (9%)
  Times result was cached:         695 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      65 (4%)
  Times result was 'false':        22 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2285
  BDD entailment checks:           641
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       199
Number of predicates discovered:          2
Number of abstraction locations:          30
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         906
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.29
Number of irrelevant predicates:          510 (56%)
Number of preds handled by boolean abs:   65 (7%)
  Total number of models for allsat:      69
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  2.212s
  Time for path formula creation:        2.149s
Time for strengthen operator:            0.102s
Time for prec operator:                  1.222s
  Time for abstraction:                  1.149s (Max:     0.024s, Count: 1622)
    Boolean abstraction:                 0.154s
    Solving time:                        0.438s (Max:     0.017s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.009s (Max:     0.007s)
Time for merge operator:                 0.162s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.456s

Number of path formula cache hits:   30039 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.052s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         109 (count: 2483, min: 0, max: 27, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.181s
Automaton transfers with branching:                0
Automaton transfer successors:                        51041 (count: 51041, min: 1, max: 1, avg: 1.00) [1 x 51041]

CPA algorithm statistics
------------------------
Number of iterations:            8994
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   10309
Max successors for one state:    2
Number of times merged:          822
Number of times stopped:         1283
Number of times breaked:         11

Total time for CPA algorithm:         5.245s (Max:     1.023s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      1.423s
  Time for transfer relation:         3.275s
  Time for merge operator:            0.237s
  Time for stop operator:             0.057s
  Time for adding to reached set:     0.038s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 297 (count: 11, min: 12, max: 37, avg: 27.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.218s
  Counterexample analysis:                             0.144s (Max:     0.028s, Calls: 11)
    Refinement sat check:                              0.091s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.012s
  ARG update:                                          0.047s

Length of refined path (in blocks):                     286 (count: 11, min: 11, max: 36, avg: 26.00)
Number of affected states:                              275 (count: 11, min: 10, max: 35, avg: 25.00)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       275 (count: 11, min: 10, max: 35, avg: 25.00)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             264 (count: 11, min: 9, max: 34, avg: 24.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 947
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 787.36
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.513s
Time for refinements:                 0.268s
Average time for refinement:          0.024s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.387
  Visited lines:          1007
  Total lines:            1189
  Line coverage:          0.847
  Visited conditions:     58
  Total conditions:       70
  Condition coverage:     0.829

CPAchecker general statistics
-----------------------------
Number of program locations:     1352
Number of CFA edges:             1392
Number of relevant variables:    287
Number of functions:             31
Number of loops:                 3
Size of reached set:             377
  Number of reached locations:   190 (14%)
    Avg states per location:     1
    Max states per location:     10 (at node N209)
  Number of reached functions:   12 (39%)
  Number of partitions:          377
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.872s
  Time for loading CPAs:          0.634s
  Time for loading parser:        0.484s
  Time for CFA construction:      1.648s
    Time for parsing file(s):     0.556s
    Time for AST to CFA:          0.504s
    Time for CFA sanity check:    0.087s
    Time for post-processing:     0.372s
      Time for var class.:        0.175s
Time for Analysis:                5.514s
CPU time for analysis:            5.520s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.390s
Total CPU time for CPAchecker:    8.370s
Time for statistics:              0.055s

Time for Garbage Collector:       0.198s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     41MB (    39 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7995MB (  7625 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
