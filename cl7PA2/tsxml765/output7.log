scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--staging--comedi--drivers--adl_pci7296_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_99vpa2q2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function subdev_8255_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function subdev_8255_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            860 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  670 (78%)
  Because of loop head:            181 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (1%)
  Times precision was empty:       325 (38%)
  Times precision was {false}:     85 (10%)
  Times result was cached:         405 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      45 (5%)
  Times result was 'false':        18 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1033
  BDD entailment checks:           327
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       97
Number of predicates discovered:          2
Number of abstraction locations:          31
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         535
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.12
Number of irrelevant predicates:          265 (50%)
Number of preds handled by boolean abs:   45 (8%)
  Total number of models for allsat:      49
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.865s
  Time for path formula creation:        0.850s
Time for strengthen operator:            0.023s
Time for prec operator:                  0.571s
  Time for abstraction:                  0.536s (Max:     0.021s, Count: 860)
    Boolean abstraction:                 0.080s
    Solving time:                        0.133s (Max:     0.015s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.022s (Max:     0.009s)
Time for merge operator:                 0.073s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.139s

Number of path formula cache hits:   7369 (51%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.798s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          87 (count: 1353, min: 0, max: 39, avg: 0.06)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.128s
Automaton transfers with branching:                0
Automaton transfer successors:                        13918 (count: 13918, min: 1, max: 1, avg: 1.00) [1 x 13918]

CPA algorithm statistics
------------------------
Number of iterations:            3978
Max size of waitlist:            10
Average size of waitlist:        4
Number of computed successors:   4591
Max successors for one state:    2
Number of times merged:          353
Number of times stopped:         587
Number of times breaked:         9

Total time for CPA algorithm:         2.366s (Max:     0.508s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      0.707s
  Time for transfer relation:         1.355s
  Time for merge operator:            0.095s
  Time for stop operator:             0.041s
  Time for adding to reached set:     0.048s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 256 (count: 9, min: 15, max: 38, avg: 28.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.177s
  Counterexample analysis:                             0.101s (Max:     0.019s, Calls: 9)
    Refinement sat check:                              0.069s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.023s
  ARG update:                                          0.020s

Length of refined path (in blocks):                     247 (count: 9, min: 14, max: 37, avg: 27.44)
Number of affected states:                              238 (count: 9, min: 13, max: 36, avg: 26.44)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       238 (count: 9, min: 13, max: 36, avg: 26.44)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             229 (count: 9, min: 12, max: 35, avg: 25.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 496
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 421.56
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.567s
Time for refinements:                 0.201s
Average time for refinement:          0.022s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          864
  Total lines:            897
  Line coverage:          0.963
  Visited conditions:     62
  Total conditions:       70
  Condition coverage:     0.886

CPAchecker general statistics
-----------------------------
Number of program locations:     1036
Number of CFA edges:             1066
Number of relevant variables:    196
Number of functions:             24
Number of loops:                 3
Size of reached set:             220
  Number of reached locations:   192 (19%)
    Avg states per location:     1
    Max states per location:     4 (at node N201)
  Number of reached functions:   15 (63%)
  Number of partitions:          220
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.278s
  Time for loading CPAs:          0.518s
  Time for loading parser:        0.459s
  Time for CFA construction:      1.231s
    Time for parsing file(s):     0.404s
    Time for AST to CFA:          0.351s
    Time for CFA sanity check:    0.092s
    Time for post-processing:     0.298s
      Time for var class.:        0.135s
Time for Analysis:                2.568s
CPU time for analysis:            2.560s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.849s
Total CPU time for CPAchecker:    4.830s
Time for statistics:              0.055s

Time for Garbage Collector:       0.123s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     28MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7982MB (  7613 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
