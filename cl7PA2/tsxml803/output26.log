scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--input--serio--ct82c710.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_usgocxq1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 1104: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1104: Ignoring call via function pointer slow_down_io::__cil_tmp2 for which no suitable target was found in line: (*__cil_tmp2)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1104: Ignoring function call through function pointer *__cil_tmp2: (*__cil_tmp2)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            537 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  507 (94%)
  Because of loop head:            25 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (1%)
  Times precision was empty:       128 (24%)
  Times precision was {false}:     23 (4%)
  Times result was cached:         358 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28 (5%)
  Times result was 'false':        9 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         158
  BDD entailment checks:           44
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          2
Number of abstraction locations:          38
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         409
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 8.02
Number of irrelevant predicates:          76 (19%)
Number of preds handled by boolean abs:   28 (7%)
  Total number of models for allsat:      28
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.314s
  Time for path formula creation:        0.298s
Time for strengthen operator:            0.023s
Time for prec operator:                  0.292s
  Time for abstraction:                  0.234s (Max:     0.021s, Count: 537)
    Boolean abstraction:                 0.031s
    Solving time:                        0.028s (Max:     0.006s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.018s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.036s

Number of path formula cache hits:   2522 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.278s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          49 (count: 460, min: 0, max: 49, avg: 0.11)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.053s
Automaton transfers with branching:                0
Automaton transfer successors:                         3029 (count: 3029, min: 1, max: 1, avg: 1.00) [1 x 3029]

CPA algorithm statistics
------------------------
Number of iterations:            1618
Max size of waitlist:            7
Average size of waitlist:        2
Number of computed successors:   1728
Max successors for one state:    2
Number of times merged:          57
Number of times stopped:         87
Number of times breaked:         5

Total time for CPA algorithm:         1.091s (Max:     0.357s)
  Time for choose from waitlist:      0.004s
  Time for precision adjustment:      0.365s
  Time for transfer relation:         0.608s
  Time for merge operator:            0.025s
  Time for stop operator:             0.025s
  Time for adding to reached set:     0.021s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 289 (count: 5, min: 49, max: 73, avg: 57.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.109s
  Counterexample analysis:                             0.063s (Max:     0.021s, Calls: 5)
    Refinement sat check:                              0.019s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.006s
  ARG update:                                          0.013s

Length of refined path (in blocks):                     284 (count: 5, min: 48, max: 72, avg: 56.80)
Number of affected states:                              279 (count: 5, min: 47, max: 71, avg: 55.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       279 (count: 5, min: 47, max: 71, avg: 55.80)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             274 (count: 5, min: 46, max: 70, avg: 54.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 349
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 275.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.237s
Time for refinements:                 0.145s
Average time for refinement:          0.029s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.467
  Visited lines:          432
  Total lines:            669
  Line coverage:          0.646
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     832
Number of CFA edges:             884
Number of relevant variables:    94
Number of functions:             30
Number of loops:                 2
Size of reached set:             273
  Number of reached locations:   140 (17%)
    Avg states per location:     1
    Max states per location:     11 (at node N0)
  Number of reached functions:   14 (47%)
  Number of partitions:          273
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.535s
  Time for loading CPAs:          0.552s
  Time for loading parser:        0.544s
  Time for CFA construction:      1.343s
    Time for parsing file(s):     0.493s
    Time for AST to CFA:          0.386s
    Time for CFA sanity check:    0.078s
    Time for post-processing:     0.237s
      Time for var class.:        0.097s
Time for Analysis:                1.237s
CPU time for analysis:            1.230s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.774s
Total CPU time for CPAchecker:    3.770s
Time for statistics:              0.051s

Time for Garbage Collector:       0.096s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    52 MiB) max;     30MB (    29 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8021MB (  7650 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
