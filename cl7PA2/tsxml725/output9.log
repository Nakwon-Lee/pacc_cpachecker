scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--isdn--hardware--avm--b1pci.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y4vlts49/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_capi_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1_alloc_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function avmcard_dma_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function avmcard_dma_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1_free_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1dma_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1pciv4_detect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1_getrevision to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1_detect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function attach_capi_ctr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_capi_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1786 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1484 (83%)
  Because of loop head:            291 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (1%)
  Times precision was empty:       1049 (59%)
  Times precision was {false}:     95 (5%)
  Times result was cached:         580 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      62 (3%)
  Times result was 'false':        21 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1006
  BDD entailment checks:           434
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       143
Number of predicates discovered:          2
Number of abstraction locations:          35
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         737
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.69
Number of irrelevant predicates:          351 (48%)
Number of preds handled by boolean abs:   62 (8%)
  Total number of models for allsat:      62
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.354s
  Time for path formula creation:        1.321s
Time for strengthen operator:            0.064s
Time for prec operator:                  0.732s
  Time for abstraction:                  0.641s (Max:     0.021s, Count: 1786)
    Boolean abstraction:                 0.120s
    Solving time:                        0.190s (Max:     0.012s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.020s (Max:     0.011s)
Time for merge operator:                 0.100s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.204s

Number of path formula cache hits:   15881 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.227s

Total number of created targets for pointer analysis: 20
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         125 (count: 2335, min: 0, max: 74, avg: 0.05)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.143s
Automaton transfers with branching:                0
Automaton transfer successors:                        28260 (count: 28260, min: 1, max: 1, avg: 1.00) [1 x 28260]

CPA algorithm statistics
------------------------
Number of iterations:            7500
Max size of waitlist:            10
Average size of waitlist:        6
Number of computed successors:   8168
Max successors for one state:    2
Number of times merged:          286
Number of times stopped:         636
Number of times breaked:         11

Total time for CPA algorithm:         3.345s (Max:     0.550s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      0.898s
  Time for transfer relation:         2.030s
  Time for merge operator:            0.135s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.049s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 252 (count: 11, min: 5, max: 62, avg: 22.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.240s
  Counterexample analysis:                             0.153s (Max:     0.024s, Calls: 11)
    Refinement sat check:                              0.102s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.006s
  ARG update:                                          0.044s

Length of refined path (in blocks):                     241 (count: 11, min: 4, max: 61, avg: 21.91)
Number of affected states:                              230 (count: 11, min: 3, max: 60, avg: 20.91)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       230 (count: 11, min: 3, max: 60, avg: 20.91)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             219 (count: 11, min: 2, max: 59, avg: 19.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 750
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 650.36
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.623s
Time for refinements:                 0.278s
Average time for refinement:          0.025s
Max time for refinement:              0.037s

Code Coverage
-----------------------------
  Function coverage:      0.467
  Visited lines:          1375
  Total lines:            1827
  Line coverage:          0.753
  Visited conditions:     64
  Total conditions:       112
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     2065
Number of CFA edges:             2125
Number of relevant variables:    350
Number of functions:             30
Number of loops:                 4
Size of reached set:             391
  Number of reached locations:   244 (12%)
    Avg states per location:     1
    Max states per location:     6 (at node N6)
  Number of reached functions:   14 (47%)
  Number of partitions:          391
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.676s
  Time for loading CPAs:          0.518s
  Time for loading parser:        0.442s
  Time for CFA construction:      1.617s
    Time for parsing file(s):     0.526s
    Time for AST to CFA:          0.466s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.356s
      Time for var class.:        0.190s
Time for Analysis:                3.623s
CPU time for analysis:            3.620s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.302s
Total CPU time for CPAchecker:    6.290s
Time for statistics:              0.064s

Time for Garbage Collector:       0.142s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     38MB (    36 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7991MB (  7621 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
