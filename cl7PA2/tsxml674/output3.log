scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--rtc--rtc-da9052.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pobh0v6k/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regmap_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_update_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regmap_bulk_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_valid_tm to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regmap_update_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regmap_raw_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3155 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2940 (93%)
  Because of loop head:            197 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       1150 (36%)
  Times precision was {false}:     246 (8%)
  Times result was cached:         1688 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      71 (2%)
  Times result was 'false':        35 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2346
  BDD entailment checks:           872
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       86
Number of predicates discovered:          2
Number of abstraction locations:          50
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2005
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.32
Number of irrelevant predicates:          1148 (57%)
Number of preds handled by boolean abs:   71 (4%)
  Total number of models for allsat:      71
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.203s
  Time for path formula creation:        2.160s
Time for strengthen operator:            0.077s
Time for prec operator:                  1.348s
  Time for abstraction:                  1.200s (Max:     0.022s, Count: 3155)
    Boolean abstraction:                 0.121s
    Solving time:                        0.297s (Max:     0.013s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.018s (Max:     0.007s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.330s

Number of path formula cache hits:   28554 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.053s

Total number of created targets for pointer analysis: 1220
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 25


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         139 (count: 3683, min: 0, max: 26, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.183s
Automaton transfers with branching:                0
Automaton transfer successors:                        46321 (count: 46321, min: 1, max: 1, avg: 1.00) [1 x 46321]

CPA algorithm statistics
------------------------
Number of iterations:            12048
Max size of waitlist:            27
Average size of waitlist:        15
Number of computed successors:   13628
Max successors for one state:    2
Number of times merged:          737
Number of times stopped:         1353
Number of times breaked:         18

Total time for CPA algorithm:         5.297s (Max:     0.843s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      1.609s
  Time for transfer relation:         3.257s
  Time for merge operator:            0.123s
  Time for stop operator:             0.096s
  Time for adding to reached set:     0.045s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 213 (count: 18, min: 4, max: 19, avg: 11.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.279s
  Counterexample analysis:                             0.157s (Max:     0.015s, Calls: 18)
    Refinement sat check:                              0.111s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.019s
  ARG update:                                          0.065s

Length of refined path (in blocks):                     195 (count: 18, min: 3, max: 18, avg: 10.83)
Number of affected states:                              177 (count: 18, min: 2, max: 17, avg: 9.83)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       177 (count: 18, min: 2, max: 17, avg: 9.83)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             159 (count: 18, min: 1, max: 16, avg: 8.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 720
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 662.94
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.678s
Time for refinements:                 0.374s
Average time for refinement:          0.020s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.636
  Visited lines:          1172
  Total lines:            1261
  Line coverage:          0.929
  Visited conditions:     66
  Total conditions:       86
  Condition coverage:     0.767

CPAchecker general statistics
-----------------------------
Number of program locations:     1440
Number of CFA edges:             1489
Number of relevant variables:    361
Number of functions:             33
Number of loops:                 1
Size of reached set:             362
  Number of reached locations:   236 (16%)
    Avg states per location:     1
    Max states per location:     10 (at node N90)
  Number of reached functions:   21 (64%)
  Number of partitions:          362
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.334s
  Time for loading CPAs:          0.721s
  Time for loading parser:        0.554s
  Time for CFA construction:      1.960s
    Time for parsing file(s):     0.647s
    Time for AST to CFA:          0.589s
    Time for CFA sanity check:    0.135s
    Time for post-processing:     0.420s
      Time for var class.:        0.218s
Time for Analysis:                5.678s
CPU time for analysis:            5.680s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.024s
Total CPU time for CPAchecker:    9.020s
Time for statistics:              0.057s

Time for Garbage Collector:       0.248s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     39MB (    37 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   7995MB (  7625 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
