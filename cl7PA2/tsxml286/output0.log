scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--video--backlight--tdo24m.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oovt3af9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4315: Ignoring call via function pointer tdo24m_set_mode::__cil_tmp18 for which no suitable target was found in line: tmp___8 = (*__cil_tmp18)(lcd, mode); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4143: Ignoring call via function pointer tdo24m_power_on::__cil_tmp11 for which no suitable target was found in line: err = (*__cil_tmp11)(lcd, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4143: Ignoring function call through function pointer *__cil_tmp11: err = (*__cil_tmp11)(lcd, __cil_tmp14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3275 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2612 (80%)
  Because of loop head:            640 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (1%)
  Times precision was empty:       497 (15%)
  Times precision was {false}:     87 (3%)
  Times result was cached:         2554 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      137 (4%)
  Times result was 'false':        46 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         4183
  BDD entailment checks:           775
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Number of predicates discovered:          2
Number of abstraction locations:          73
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2778
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 12.40
Number of irrelevant predicates:          606 (22%)
Number of preds handled by boolean abs:   137 (5%)
  Total number of models for allsat:      137
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.005s
  Time for path formula creation:        2.907s
Time for strengthen operator:            0.162s
Time for prec operator:                  4.649s
  Time for abstraction:                  4.502s (Max:     0.120s, Count: 3275)
    Boolean abstraction:                 2.122s
    Solving time:                        2.113s (Max:     0.093s)
    Model enumeration time:              0.166s
    Time for BDD construction:           0.041s (Max:     0.009s)
Time for merge operator:                 0.875s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     2.279s

Number of path formula cache hits:   44145 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.572s

Total number of created targets for pointer analysis: 7799
   Number of created targets for uf: *unsigned_char is 16
   Number of created targets for uf: *unsigned_int is 88


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         277 (count: 2534, min: 0, max: 39, avg: 0.11)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.250s
Automaton transfers with branching:                0
Automaton transfer successors:                        67271 (count: 67271, min: 1, max: 1, avg: 1.00) [1 x 67271]

CPA algorithm statistics
------------------------
Number of iterations:            18769
Max size of waitlist:            34
Average size of waitlist:        13
Number of computed successors:   21626
Max successors for one state:    2
Number of times merged:          1704
Number of times stopped:         2368
Number of times breaked:         23

Total time for CPA algorithm:        10.878s (Max:     3.852s)
  Time for choose from waitlist:      0.070s
  Time for precision adjustment:      4.904s
  Time for transfer relation:         4.435s
  Time for merge operator:            0.994s
  Time for stop operator:             0.108s
  Time for adding to reached set:     0.099s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 385 (count: 23, min: 6, max: 26, avg: 16.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.119s
  Counterexample analysis:                             0.898s (Max:     0.099s, Calls: 23)
    Refinement sat check:                              0.691s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.030s
  ARG update:                                          0.068s

Length of refined path (in blocks):                     362 (count: 23, min: 5, max: 25, avg: 15.74)
Number of affected states:                              339 (count: 23, min: 4, max: 24, avg: 14.74)
Length (states) of path with itp 'true':                  0 (count: 23, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       339 (count: 23, min: 4, max: 24, avg: 14.74)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 23, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             316 (count: 23, min: 3, max: 23, avg: 13.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 1816
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 642.48
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      12.068s
Time for refinements:                 1.181s
Average time for refinement:          0.051s
Max time for refinement:              0.123s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          1381
  Total lines:            1471
  Line coverage:          0.939
  Visited conditions:     90
  Total conditions:       112
  Condition coverage:     0.804

CPAchecker general statistics
-----------------------------
Number of program locations:     1678
Number of CFA edges:             1754
Number of relevant variables:    335
Number of functions:             38
Number of loops:                 2
Size of reached set:             4505
  Number of reached locations:   344 (21%)
    Avg states per location:     13
    Max states per location:     87 (at node N106)
  Number of reached functions:   25 (66%)
  Number of partitions:          4505
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.341s
  Time for loading CPAs:          0.662s
  Time for loading parser:        0.550s
  Time for CFA construction:      2.062s
    Time for parsing file(s):     0.717s
    Time for AST to CFA:          0.647s
    Time for CFA sanity check:    0.090s
    Time for post-processing:     0.443s
      Time for var class.:        0.192s
Time for Analysis:               12.069s
CPU time for analysis:           12.060s
Time for analyzing result:        0.003s
Total time for CPAchecker:       15.412s
Total CPU time for CPAchecker:   15.400s
Time for statistics:              0.111s

Time for Garbage Collector:       0.387s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     44MB (    42 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8068MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
