scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--tests--mtd_oobtest.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jpwlkc6g/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2097: Function pointer *__cil_tmp15 with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2154: Function pointer *__cil_tmp19 with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_mtd_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_mtd_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2154: Ignoring call via function pointer mtd_write_oob::__cil_tmp19 for which no suitable target was found in line: tmp___0 = (*__cil_tmp19)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2154: Ignoring function call through function pointer *__cil_tmp19: tmp___0 = (*__cil_tmp19)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2097: Ignoring call via function pointer mtd_read_oob::__cil_tmp15 for which no suitable target was found in line: tmp___0 = (*__cil_tmp15)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2097: Ignoring function call through function pointer *__cil_tmp15: tmp___0 = (*__cil_tmp15)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7454 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5342 (72%)
  Because of loop head:            2068 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (1%)
  Times precision was empty:       798 (11%)
  Times precision was {false}:     475 (6%)
  Times result was cached:         5758 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      423 (6%)
  Times result was 'false':        154 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         8734
  BDD entailment checks:           3112
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       331
Number of predicates discovered:          3
Number of abstraction locations:          91
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         10582
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 11.78
Number of irrelevant predicates:          3622 (34%)
Number of preds handled by boolean abs:   512 (5%)
  Total number of models for allsat:      423
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.222s
  Time for path formula creation:        2.168s
Time for strengthen operator:            0.151s
Time for prec operator:                  3.623s
  Time for abstraction:                  3.414s (Max:     0.024s, Count: 7454)
    Boolean abstraction:                 0.524s
    Solving time:                        0.890s (Max:     0.017s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.073s (Max:     0.011s)
Time for merge operator:                 0.215s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.907s

Number of path formula cache hits:   96913 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.963s

Total number of created targets for pointer analysis: 30
   Number of created targets for uf: *unsigned_char is 4


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         857 (count: 8881, min: 0, max: 128, avg: 0.10)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.300s
Automaton transfers with branching:                0
Automaton transfer successors:                       107066 (count: 107066, min: 1, max: 1, avg: 1.00) [1 x 107066]

CPA algorithm statistics
------------------------
Number of iterations:            38770
Max size of waitlist:            23
Average size of waitlist:        7
Number of computed successors:   44416
Max successors for one state:    2
Number of times merged:          2811
Number of times stopped:         5230
Number of times breaked:         44

Total time for CPA algorithm:         9.200s (Max:     0.424s)
  Time for choose from waitlist:      0.070s
  Time for precision adjustment:      4.179s
  Time for transfer relation:         3.993s
  Time for merge operator:            0.342s
  Time for stop operator:             0.148s
  Time for adding to reached set:     0.196s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                1711 (count: 44, min: 5, max: 76, avg: 38.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.096s
  Counterexample analysis:                             0.808s (Max:     0.060s, Calls: 44)
    Refinement sat check:                              0.570s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.054s
  ARG update:                                          0.111s

Length of refined path (in blocks):                    1611 (count: 44, min: 4, max: 75, avg: 36.61)
Number of affected states:                             1463 (count: 44, min: 3, max: 74, avg: 33.25)
Length (states) of path with itp 'true':                104 (count: 44, min: 0, max: 13, avg: 2.36)
Length (states) of path with itp non-trivial itp:      1463 (count: 44, min: 3, max: 74, avg: 33.25)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 44, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1419 (count: 44, min: 2, max: 73, avg: 32.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 2046
Max. size of reached set after ref.:  158
Avg. size of reached set before ref.: 883.18
Avg. size of reached set after ref.:  31.18

Total time for CEGAR algorithm:      10.402s
Time for refinements:                 1.202s
Average time for refinement:          0.027s
Max time for refinement:              0.068s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          2119
  Total lines:            2166
  Line coverage:          0.978
  Visited conditions:     202
  Total conditions:       222
  Condition coverage:     0.910

CPAchecker general statistics
-----------------------------
Number of program locations:     2452
Number of CFA edges:             2594
Number of relevant variables:    609
Number of functions:             32
Number of loops:                 12
Size of reached set:             1545
  Number of reached locations:   630 (26%)
    Avg states per location:     2
    Max states per location:     21 (at node N913)
  Number of reached functions:   23 (72%)
  Number of partitions:          1545
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.267s
  Time for loading CPAs:          0.650s
  Time for loading parser:        0.514s
  Time for CFA construction:      2.043s
    Time for parsing file(s):     0.568s
    Time for AST to CFA:          0.641s
    Time for CFA sanity check:    0.160s
    Time for post-processing:     0.515s
      Time for var class.:        0.222s
Time for Analysis:               10.402s
CPU time for analysis:           10.390s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.671s
Total CPU time for CPAchecker:   13.660s
Time for statistics:              0.075s

Time for Garbage Collector:       0.324s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     45MB (    43 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    31 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8067MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
