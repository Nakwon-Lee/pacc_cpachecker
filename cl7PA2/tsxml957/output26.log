scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--tests--mtd_oobtest.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dw3239p8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2097: Function pointer *__cil_tmp15 with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2154: Function pointer *__cil_tmp19 with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_mtd_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_mtd_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2154: Ignoring call via function pointer mtd_write_oob::__cil_tmp19 for which no suitable target was found in line: tmp___0 = (*__cil_tmp19)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2154: Ignoring function call through function pointer *__cil_tmp19: tmp___0 = (*__cil_tmp19)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2097: Ignoring call via function pointer mtd_read_oob::__cil_tmp15 for which no suitable target was found in line: tmp___0 = (*__cil_tmp15)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2097: Ignoring function call through function pointer *__cil_tmp15: tmp___0 = (*__cil_tmp15)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7201 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5292 (73%)
  Because of loop head:            1869 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (1%)
  Times precision was empty:       587 (8%)
  Times precision was {false}:     180 (2%)
  Times result was cached:         6030 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      404 (6%)
  Times result was 'false':        88 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         6726
  BDD entailment checks:           2468
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       331
Number of predicates discovered:          3
Number of abstraction locations:          91
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         7992
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 13.68
Number of irrelevant predicates:          1759 (22%)
Number of preds handled by boolean abs:   458 (6%)
  Total number of models for allsat:      404
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.791s
  Time for path formula creation:        1.714s
Time for strengthen operator:            0.135s
Time for prec operator:                  3.084s
  Time for abstraction:                  2.850s (Max:     0.021s, Count: 7201)
    Boolean abstraction:                 0.524s
    Solving time:                        0.543s (Max:     0.019s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.054s (Max:     0.013s)
Time for merge operator:                 0.134s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.571s

Number of path formula cache hits:   96680 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.475s

Total number of created targets for pointer analysis: 57
   Number of created targets for uf: *unsigned_char is 4


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         727 (count: 6399, min: 0, max: 98, avg: 0.11)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.268s
Automaton transfers with branching:                0
Automaton transfer successors:                        99644 (count: 99644, min: 1, max: 1, avg: 1.00) [1 x 99644]

CPA algorithm statistics
------------------------
Number of iterations:            34946
Max size of waitlist:            29
Average size of waitlist:        11
Number of computed successors:   39682
Max successors for one state:    2
Number of times merged:          2129
Number of times stopped:         4168
Number of times breaked:         40

Total time for CPA algorithm:         7.770s (Max:     0.590s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      3.568s
  Time for transfer relation:         3.347s
  Time for merge operator:            0.266s
  Time for stop operator:             0.137s
  Time for adding to reached set:     0.099s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                1618 (count: 40, min: 5, max: 77, avg: 40.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.026s
  Counterexample analysis:                             0.756s (Max:     0.057s, Calls: 40)
    Refinement sat check:                              0.518s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.054s
  ARG update:                                          0.137s

Length of refined path (in blocks):                    1557 (count: 40, min: 4, max: 76, avg: 38.92)
Number of affected states:                             1478 (count: 40, min: 3, max: 75, avg: 36.95)
Length (states) of path with itp 'true':                 39 (count: 40, min: 0, max: 13, avg: 0.98)
Length (states) of path with itp non-trivial itp:      1478 (count: 40, min: 3, max: 75, avg: 36.95)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 40, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1438 (count: 40, min: 2, max: 74, avg: 35.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 2271
Max. size of reached set after ref.:  164
Avg. size of reached set before ref.: 831.63
Avg. size of reached set after ref.:  15.08

Total time for CEGAR algorithm:       8.910s
Time for refinements:                 1.138s
Average time for refinement:          0.028s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          2119
  Total lines:            2166
  Line coverage:          0.978
  Visited conditions:     202
  Total conditions:       222
  Condition coverage:     0.910

CPAchecker general statistics
-----------------------------
Number of program locations:     2452
Number of CFA edges:             2594
Number of relevant variables:    609
Number of functions:             32
Number of loops:                 12
Size of reached set:             2765
  Number of reached locations:   630 (26%)
    Avg states per location:     4
    Max states per location:     25 (at node N913)
  Number of reached functions:   23 (72%)
  Number of partitions:          2740
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N207 (before lines 2343-2377), Function erase_whole_device called from node N1369, stack depth 3 [68cacf8b], stack [main, mtd_oobtest_init, erase_whole_device]])
  Number of target states:       0

Time for analysis setup:          3.141s
  Time for loading CPAs:          0.676s
  Time for loading parser:        0.437s
  Time for CFA construction:      1.930s
    Time for parsing file(s):     0.503s
    Time for AST to CFA:          0.611s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.538s
      Time for var class.:        0.260s
Time for Analysis:                8.911s
CPU time for analysis:            8.910s
Time for analyzing result:        0.003s
Total time for CPAchecker:       12.055s
Total CPU time for CPAchecker:   12.040s
Time for statistics:              0.127s

Time for Garbage Collector:       0.237s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8003MB (  7632 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
