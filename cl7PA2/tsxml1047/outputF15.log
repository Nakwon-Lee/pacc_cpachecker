scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--uio--uio_sercos3.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pvmwcuo7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __uio_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uio_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            658 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  532 (81%)
  Because of loop head:            114 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (2%)
  Times precision was empty:       134 (20%)
  Times precision was {false}:     27 (4%)
  Times result was cached:         433 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      64 (10%)
  Times result was 'false':        23 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         552
  BDD entailment checks:           186
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       195
Number of predicates discovered:          2
Number of abstraction locations:          33
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         524
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.76
Number of irrelevant predicates:          128 (24%)
Number of preds handled by boolean abs:   64 (12%)
  Total number of models for allsat:      64
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.660s
  Time for path formula creation:        0.613s
Time for strengthen operator:            0.018s
Time for prec operator:                  0.533s
  Time for abstraction:                  0.484s (Max:     0.019s, Count: 658)
    Boolean abstraction:                 0.143s
    Solving time:                        0.149s (Max:     0.017s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.010s (Max:     0.007s)
Time for merge operator:                 0.021s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.160s

Number of path formula cache hits:   10664 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.588s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          95 (count: 844, min: 0, max: 61, avg: 0.11)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.127s
Automaton transfers with branching:                0
Automaton transfer successors:                        13333 (count: 13333, min: 1, max: 1, avg: 1.00) [1 x 13333]

CPA algorithm statistics
------------------------
Number of iterations:            3224
Max size of waitlist:            13
Average size of waitlist:        4
Number of computed successors:   3639
Max successors for one state:    2
Number of times merged:          183
Number of times stopped:         319
Number of times breaked:         12

Total time for CPA algorithm:         1.976s (Max:     0.335s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      0.689s
  Time for transfer relation:         1.078s
  Time for merge operator:            0.061s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.022s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 258 (count: 12, min: 5, max: 33, avg: 21.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.193s
  Counterexample analysis:                             0.126s (Max:     0.018s, Calls: 12)
    Refinement sat check:                              0.097s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.015s
  ARG update:                                          0.010s

Length of refined path (in blocks):                     246 (count: 12, min: 4, max: 32, avg: 20.50)
Number of affected states:                              234 (count: 12, min: 3, max: 31, avg: 19.50)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       234 (count: 12, min: 3, max: 31, avg: 19.50)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             222 (count: 12, min: 2, max: 30, avg: 18.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 445
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 244.58
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.195s
Time for refinements:                 0.218s
Average time for refinement:          0.018s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.419
  Visited lines:          975
  Total lines:            1169
  Line coverage:          0.834
  Visited conditions:     56
  Total conditions:       80
  Condition coverage:     0.700

CPAchecker general statistics
-----------------------------
Number of program locations:     1357
Number of CFA edges:             1400
Number of relevant variables:    279
Number of functions:             31
Number of loops:                 3
Size of reached set:             399
  Number of reached locations:   205 (15%)
    Avg states per location:     1
    Max states per location:     10 (at node N223)
  Number of reached functions:   13 (42%)
  Number of partitions:          399
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.778s
  Time for loading CPAs:          0.579s
  Time for loading parser:        0.494s
  Time for CFA construction:      1.611s
    Time for parsing file(s):     0.559s
    Time for AST to CFA:          0.505s
    Time for CFA sanity check:    0.088s
    Time for post-processing:     0.335s
      Time for var class.:        0.167s
Time for Analysis:                2.195s
CPU time for analysis:            2.200s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.976s
Total CPU time for CPAchecker:    4.980s
Time for statistics:              0.073s

Time for Garbage Collector:       0.107s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     33MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     27MB (    26 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8039MB (  7667 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
