scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--uio--uio_sercos3.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fhznygyc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uio_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __uio_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1040 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  829 (80%)
  Because of loop head:            199 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (1%)
  Times precision was empty:       301 (29%)
  Times precision was {false}:     50 (5%)
  Times result was cached:         625 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      64 (6%)
  Times result was 'false':        23 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1165
  BDD entailment checks:           371
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       195
Number of predicates discovered:          2
Number of abstraction locations:          33
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         739
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.48
Number of irrelevant predicates:          305 (41%)
Number of preds handled by boolean abs:   64 (9%)
  Total number of models for allsat:      64
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.933s
  Time for path formula creation:        0.888s
Time for strengthen operator:            0.044s
Time for prec operator:                  0.772s
  Time for abstraction:                  0.696s (Max:     0.020s, Count: 1040)
    Boolean abstraction:                 0.131s
    Solving time:                        0.213s (Max:     0.018s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.065s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.219s

Number of path formula cache hits:   20691 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.848s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         121 (count: 1311, min: 0, max: 53, avg: 0.09)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.081s
Automaton transfers with branching:                0
Automaton transfer successors:                        25824 (count: 25824, min: 1, max: 1, avg: 1.00) [1 x 25824]

CPA algorithm statistics
------------------------
Number of iterations:            5399
Max size of waitlist:            16
Average size of waitlist:        6
Number of computed successors:   6096
Max successors for one state:    2
Number of times merged:          397
Number of times stopped:         643
Number of times breaked:         12

Total time for CPA algorithm:         2.774s (Max:     0.555s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      0.944s
  Time for transfer relation:         1.501s
  Time for merge operator:            0.123s
  Time for stop operator:             0.056s
  Time for adding to reached set:     0.044s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 241 (count: 12, min: 5, max: 32, avg: 20.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.215s
  Counterexample analysis:                             0.157s (Max:     0.022s, Calls: 12)
    Refinement sat check:                              0.108s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.005s
  ARG update:                                          0.032s

Length of refined path (in blocks):                     229 (count: 12, min: 4, max: 31, avg: 19.08)
Number of affected states:                              217 (count: 12, min: 3, max: 30, avg: 18.08)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       217 (count: 12, min: 3, max: 30, avg: 18.08)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             205 (count: 12, min: 2, max: 29, avg: 17.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 670
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 422.33
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.050s
Time for refinements:                 0.264s
Average time for refinement:          0.022s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.419
  Visited lines:          975
  Total lines:            1169
  Line coverage:          0.834
  Visited conditions:     56
  Total conditions:       80
  Condition coverage:     0.700

CPAchecker general statistics
-----------------------------
Number of program locations:     1357
Number of CFA edges:             1400
Number of relevant variables:    279
Number of functions:             31
Number of loops:                 3
Size of reached set:             399
  Number of reached locations:   205 (15%)
    Avg states per location:     1
    Max states per location:     10 (at node N223)
  Number of reached functions:   13 (42%)
  Number of partitions:          399
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.009s
  Time for loading CPAs:          0.648s
  Time for loading parser:        0.538s
  Time for CFA construction:      1.730s
    Time for parsing file(s):     0.587s
    Time for AST to CFA:          0.511s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.360s
      Time for var class.:        0.195s
Time for Analysis:                3.050s
CPU time for analysis:            3.050s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.062s
Total CPU time for CPAchecker:    6.060s
Time for statistics:              0.057s

Time for Garbage Collector:       0.137s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    58 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8044MB (  7671 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
