scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--ath--ath6kl--ath6kl_usb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jp3i1am5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_stop_txrx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_core_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_core_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_core_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_core_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3790 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3496 (92%)
  Because of loop head:            270 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       737 (19%)
  Times precision was {false}:     123 (3%)
  Times result was cached:         2830 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      100 (3%)
  Times result was 'false':        151 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1916
  BDD entailment checks:           802
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          3
Number of abstraction locations:          61
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3115
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 13.97
Number of irrelevant predicates:          879 (28%)
Number of preds handled by boolean abs:   104 (3%)
  Total number of models for allsat:      102
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.154s
  Time for path formula creation:        1.115s
Time for strengthen operator:            0.075s
Time for prec operator:                  1.060s
  Time for abstraction:                  0.960s (Max:     0.017s, Count: 3790)
    Boolean abstraction:                 0.114s
    Solving time:                        0.132s (Max:     0.014s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.014s (Max:     0.007s)
Time for merge operator:                 0.033s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     0.144s

Number of path formula cache hits:   30927 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.064s

Total number of created targets for pointer analysis: 22
   Number of created targets for uf: *unsigned_int is 17


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         201 (count: 2766, min: 0, max: 36, avg: 0.07)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.189s
Automaton transfers with branching:                0
Automaton transfer successors:                        37140 (count: 37140, min: 1, max: 1, avg: 1.00) [1 x 37140]

CPA algorithm statistics
------------------------
Number of iterations:            13351
Max size of waitlist:            12
Average size of waitlist:        5
Number of computed successors:   14802
Max successors for one state:    2
Number of times merged:          557
Number of times stopped:         1164
Number of times breaked:         24

Total time for CPA algorithm:         4.035s (Max:     0.640s)
  Time for choose from waitlist:      0.045s
  Time for precision adjustment:      1.354s
  Time for transfer relation:         2.126s
  Time for merge operator:            0.120s
  Time for stop operator:             0.102s
  Time for adding to reached set:     0.065s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 437 (count: 24, min: 9, max: 32, avg: 18.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.346s
  Counterexample analysis:                             0.195s (Max:     0.017s, Calls: 24)
    Refinement sat check:                              0.141s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.023s
  ARG update:                                          0.061s

Length of refined path (in blocks):                     402 (count: 24, min: 8, max: 31, avg: 16.75)
Number of affected states:                              369 (count: 24, min: 4, max: 30, avg: 15.38)
Length (states) of path with itp 'true':                  9 (count: 24, min: 0, max: 9, avg: 0.38)
Length (states) of path with itp non-trivial itp:       369 (count: 24, min: 4, max: 30, avg: 15.38)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 24, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             345 (count: 24, min: 3, max: 29, avg: 14.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 817
Max. size of reached set after ref.:  484
Avg. size of reached set before ref.: 558.96
Avg. size of reached set after ref.:  23.04

Total time for CEGAR algorithm:       4.455s
Time for refinements:                 0.418s
Average time for refinement:          0.017s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          1591
  Total lines:            1635
  Line coverage:          0.973
  Visited conditions:     74
  Total conditions:       82
  Condition coverage:     0.902

CPAchecker general statistics
-----------------------------
Number of program locations:     1822
Number of CFA edges:             1872
Number of relevant variables:    273
Number of functions:             37
Number of loops:                 1
Size of reached set:             626
  Number of reached locations:   288 (16%)
    Avg states per location:     2
    Max states per location:     12 (at node N45)
  Number of reached functions:   25 (68%)
  Number of partitions:          626
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.066s
  Time for loading CPAs:          0.613s
  Time for loading parser:        0.474s
  Time for CFA construction:      1.893s
    Time for parsing file(s):     0.624s
    Time for AST to CFA:          0.621s
    Time for CFA sanity check:    0.096s
    Time for post-processing:     0.412s
      Time for var class.:        0.162s
Time for Analysis:                4.455s
CPU time for analysis:            4.450s
Time for analyzing result:        0.008s
Total time for CPAchecker:        7.531s
Total CPU time for CPAchecker:    7.520s
Time for statistics:              0.078s

Time for Garbage Collector:       0.146s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     40MB (    38 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7992MB (  7622 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
