scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--ath--ath6kl--ath6kl_usb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_49gvt900/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_stop_txrx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_core_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_core_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_core_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath6kl_core_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5899 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5548 (94%)
  Because of loop head:            330 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (0%)
  Times precision was empty:       2182 (37%)
  Times precision was {false}:     280 (5%)
  Times result was cached:         3324 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      113 (2%)
  Times result was 'false':        104 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         3361
  BDD entailment checks:           1307
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          3
Number of abstraction locations:          61
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3944
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 10.04
Number of irrelevant predicates:          2518 (64%)
Number of preds handled by boolean abs:   120 (3%)
  Total number of models for allsat:      121
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  2.328s
  Time for path formula creation:        2.250s
Time for strengthen operator:            0.100s
Time for prec operator:                  1.539s
  Time for abstraction:                  1.386s (Max:     0.014s, Count: 5899)
    Boolean abstraction:                 0.129s
    Solving time:                        0.194s (Max:     0.013s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.039s (Max:     0.011s)
Time for merge operator:                 0.198s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.216s

Number of path formula cache hits:   42033 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.097s

Total number of created targets for pointer analysis: 42
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         220 (count: 5594, min: 0, max: 45, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.190s
Automaton transfers with branching:                0
Automaton transfer successors:                        65090 (count: 65090, min: 1, max: 1, avg: 1.00) [1 x 65090]

CPA algorithm statistics
------------------------
Number of iterations:            21669
Max size of waitlist:            23
Average size of waitlist:        13
Number of computed successors:   24003
Max successors for one state:    2
Number of times merged:          1027
Number of times stopped:         1954
Number of times breaked:         21

Total time for CPA algorithm:         6.427s (Max:     1.006s)
  Time for choose from waitlist:      0.053s
  Time for precision adjustment:      1.908s
  Time for transfer relation:         3.599s
  Time for merge operator:            0.271s
  Time for stop operator:             0.128s
  Time for adding to reached set:     0.174s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 405 (count: 21, min: 9, max: 32, avg: 19.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.361s
  Counterexample analysis:                             0.183s (Max:     0.017s, Calls: 21)
    Refinement sat check:                              0.130s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.005s
  ARG update:                                          0.113s

Length of refined path (in blocks):                     373 (count: 21, min: 8, max: 31, avg: 17.76)
Number of affected states:                              343 (count: 21, min: 4, max: 30, avg: 16.33)
Length (states) of path with itp 'true':                  9 (count: 21, min: 0, max: 9, avg: 0.43)
Length (states) of path with itp non-trivial itp:       343 (count: 21, min: 4, max: 30, avg: 16.33)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             322 (count: 21, min: 3, max: 29, avg: 15.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 1086
Max. size of reached set after ref.:  382
Avg. size of reached set before ref.: 1036.29
Avg. size of reached set after ref.:  21.05

Total time for CEGAR algorithm:       6.832s
Time for refinements:                 0.404s
Average time for refinement:          0.019s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          1591
  Total lines:            1635
  Line coverage:          0.973
  Visited conditions:     74
  Total conditions:       82
  Condition coverage:     0.902

CPAchecker general statistics
-----------------------------
Number of program locations:     1822
Number of CFA edges:             1872
Number of relevant variables:    273
Number of functions:             37
Number of loops:                 1
Size of reached set:             626
  Number of reached locations:   288 (16%)
    Avg states per location:     2
    Max states per location:     12 (at node N45)
  Number of reached functions:   25 (68%)
  Number of partitions:          626
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.064s
  Time for loading CPAs:          0.610s
  Time for loading parser:        0.442s
  Time for CFA construction:      1.915s
    Time for parsing file(s):     0.619s
    Time for AST to CFA:          0.632s
    Time for CFA sanity check:    0.095s
    Time for post-processing:     0.402s
      Time for var class.:        0.159s
Time for Analysis:                6.833s
CPU time for analysis:            6.830s
Time for analyzing result:        0.000s
Total time for CPAchecker:        9.900s
Total CPU time for CPAchecker:    9.890s
Time for statistics:              0.072s

Time for Garbage Collector:       0.230s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     44MB (    42 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8063MB (  7689 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
