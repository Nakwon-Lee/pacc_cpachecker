scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--video--backlight--tdo24m.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_leq_3zli/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4115: Ignoring call via function pointer tdo24m_set_mode::__cil_tmp18 for which no suitable target was found in line: tmp___0 = (*__cil_tmp18)(lcd, mode); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lcd_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3954: Ignoring call via function pointer tdo24m_power_on::__cil_tmp7 for which no suitable target was found in line: err = (*__cil_tmp7)(lcd, __cil_tmp10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3954: Ignoring function call through function pointer *__cil_tmp7: err = (*__cil_tmp7)(lcd, __cil_tmp10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7236 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5567 (77%)
  Because of loop head:            1646 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (0%)
  Times precision was empty:       3000 (41%)
  Times precision was {false}:     323 (4%)
  Times result was cached:         3773 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      140 (2%)
  Times result was 'false':        46 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         12253
  BDD entailment checks:           2139
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       86
Number of predicates discovered:          2
Number of abstraction locations:          74
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4236
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.15
Number of irrelevant predicates:          2037 (48%)
Number of preds handled by boolean abs:   140 (3%)
  Total number of models for allsat:      144
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  5.026s
  Time for path formula creation:        4.943s
Time for strengthen operator:            0.217s
Time for prec operator:                  4.360s
  Time for abstraction:                  4.120s (Max:     0.101s, Count: 7236)
    Boolean abstraction:                 1.209s
    Solving time:                        2.155s (Max:     0.078s)
    Model enumeration time:              0.097s
    Time for BDD construction:           0.011s (Max:     0.004s)
Time for merge operator:                 1.724s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     2.252s

Number of path formula cache hits:   81336 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.522s

Total number of created targets for pointer analysis: 30363
   Number of created targets for uf: *unsigned_int is 30364


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         283 (count: 7600, min: 0, max: 30, avg: 0.04)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.387s
Automaton transfers with branching:                0
Automaton transfer successors:                       160988 (count: 160988, min: 1, max: 1, avg: 1.00) [1 x 160988]

CPA algorithm statistics
------------------------
Number of iterations:            46241
Max size of waitlist:            45
Average size of waitlist:        22
Number of computed successors:   53409
Max successors for one state:    2
Number of times merged:          5057
Number of times stopped:         6630
Number of times breaked:         23

Total time for CPA algorithm:        14.581s (Max:     1.384s)
  Time for choose from waitlist:      0.096s
  Time for precision adjustment:      4.836s
  Time for transfer relation:         7.023s
  Time for merge operator:            1.885s
  Time for stop operator:             0.217s
  Time for adding to reached set:     0.118s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 518 (count: 23, min: 10, max: 40, avg: 22.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.844s
  Counterexample analysis:                             0.632s (Max:     0.080s, Calls: 23)
    Refinement sat check:                              0.521s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.016s
  ARG update:                                          0.115s

Length of refined path (in blocks):                     495 (count: 23, min: 9, max: 39, avg: 21.52)
Number of affected states:                              472 (count: 23, min: 8, max: 38, avg: 20.52)
Length (states) of path with itp 'true':                  0 (count: 23, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       472 (count: 23, min: 8, max: 38, avg: 20.52)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 23, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             449 (count: 23, min: 7, max: 37, avg: 19.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 2598
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1843.22
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      15.534s
Time for refinements:                 0.952s
Average time for refinement:          0.041s
Max time for refinement:              0.097s

Code Coverage
-----------------------------
  Function coverage:      0.781
  Visited lines:          1295
  Total lines:            1319
  Line coverage:          0.982
  Visited conditions:     92
  Total conditions:       100
  Condition coverage:     0.920

CPAchecker general statistics
-----------------------------
Number of program locations:     1487
Number of CFA edges:             1556
Number of relevant variables:    277
Number of functions:             32
Number of loops:                 2
Size of reached set:             4409
  Number of reached locations:   343 (23%)
    Avg states per location:     12
    Max states per location:     87 (at node N80)
  Number of reached functions:   25 (78%)
  Number of partitions:          4409
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.578s
  Time for loading CPAs:          0.540s
  Time for loading parser:        0.385s
  Time for CFA construction:      1.583s
    Time for parsing file(s):     0.509s
    Time for AST to CFA:          0.528s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.326s
      Time for var class.:        0.144s
Time for Analysis:               15.534s
CPU time for analysis:           15.540s
Time for analyzing result:        0.003s
Total time for CPAchecker:       18.115s
Total CPU time for CPAchecker:   18.110s
Time for statistics:              0.099s

Time for Garbage Collector:       0.634s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 96MB (    92 MiB) max;     57MB (    54 MiB) avg;    105MB (   100 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8009MB (  7638 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
