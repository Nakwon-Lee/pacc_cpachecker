scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--platform--x86--panasonic-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v77uig3i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_generate_proc_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2959 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2595 (88%)
  Because of loop head:            345 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (1%)
  Times precision was empty:       898 (30%)
  Times precision was {false}:     209 (7%)
  Times result was cached:         1768 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      84 (3%)
  Times result was 'false':        96 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         2838
  BDD entailment checks:           978
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          2
Number of abstraction locations:          56
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2061
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.03
Number of irrelevant predicates:          1074 (52%)
Number of preds handled by boolean abs:   84 (4%)
  Total number of models for allsat:      86
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  2.146s
  Time for path formula creation:        2.105s
Time for strengthen operator:            0.078s
Time for prec operator:                  1.303s
  Time for abstraction:                  1.217s (Max:     0.028s, Count: 2959)
    Boolean abstraction:                 0.128s
    Solving time:                        0.332s (Max:     0.013s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.015s (Max:     0.006s)
Time for merge operator:                 0.148s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.337s

Number of path formula cache hits:   25158 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.960s

Total number of created targets for pointer analysis: 57
   Number of created targets for uf: *unsigned_long_long_int is 22


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         156 (count: 3445, min: 0, max: 27, avg: 0.05)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.168s
Automaton transfers with branching:                0
Automaton transfer successors:                        45085 (count: 45085, min: 1, max: 1, avg: 1.00) [1 x 45085]

CPA algorithm statistics
------------------------
Number of iterations:            12629
Max size of waitlist:            16
Average size of waitlist:        6
Number of computed successors:   14344
Max successors for one state:    2
Number of times merged:          930
Number of times stopped:         1554
Number of times breaked:         19

Total time for CPA algorithm:         5.106s (Max:     0.832s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      1.525s
  Time for transfer relation:         3.032s
  Time for merge operator:            0.227s
  Time for stop operator:             0.076s
  Time for adding to reached set:     0.091s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 464 (count: 19, min: 14, max: 43, avg: 24.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.344s
  Counterexample analysis:                             0.234s (Max:     0.026s, Calls: 19)
    Refinement sat check:                              0.165s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.004s
  ARG update:                                          0.053s

Length of refined path (in blocks):                     445 (count: 19, min: 13, max: 42, avg: 23.42)
Number of affected states:                              426 (count: 19, min: 12, max: 41, avg: 22.42)
Length (states) of path with itp 'true':                  0 (count: 19, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       426 (count: 19, min: 12, max: 41, avg: 22.42)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 19, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             407 (count: 19, min: 11, max: 40, avg: 21.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 738
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 648.42
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.497s
Time for refinements:                 0.390s
Average time for refinement:          0.020s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          1438
  Total lines:            1663
  Line coverage:          0.865
  Visited conditions:     90
  Total conditions:       118
  Condition coverage:     0.763

CPAchecker general statistics
-----------------------------
Number of program locations:     1864
Number of CFA edges:             1935
Number of relevant variables:    392
Number of functions:             35
Number of loops:                 2
Size of reached set:             432
  Number of reached locations:   296 (16%)
    Avg states per location:     1
    Max states per location:     7 (at node N825)
  Number of reached functions:   23 (66%)
  Number of partitions:          432
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.123s
  Time for loading CPAs:          0.683s
  Time for loading parser:        0.479s
  Time for CFA construction:      1.896s
    Time for parsing file(s):     0.583s
    Time for AST to CFA:          0.635s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.414s
      Time for var class.:        0.208s
Time for Analysis:                5.499s
CPU time for analysis:            5.490s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.625s
Total CPU time for CPAchecker:    8.620s
Time for statistics:              0.059s

Time for Garbage Collector:       0.233s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     42MB (    40 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7995MB (  7625 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
