scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--platform--x86--panasonic-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y0cgqloy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_generate_proc_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2067 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1875 (91%)
  Because of loop head:            175 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (1%)
  Times precision was empty:       331 (16%)
  Times precision was {false}:     149 (7%)
  Times result was cached:         1500 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      87 (4%)
  Times result was 'false':        78 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1542
  BDD entailment checks:           548
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          2
Number of abstraction locations:          56
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1736
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.36
Number of irrelevant predicates:          709 (41%)
Number of preds handled by boolean abs:   87 (5%)
  Total number of models for allsat:      92
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  1.762s
  Time for path formula creation:        1.696s
Time for strengthen operator:            0.039s
Time for prec operator:                  1.087s
  Time for abstraction:                  0.964s (Max:     0.027s, Count: 2067)
    Boolean abstraction:                 0.145s
    Solving time:                        0.197s (Max:     0.016s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.007s (Max:     0.002s)
Time for merge operator:                 0.078s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.200s

Number of path formula cache hits:   15733 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.577s

Total number of created targets for pointer analysis: 18
   Number of created targets for uf: *unsigned_long_long_int is 19


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         172 (count: 2167, min: 0, max: 67, avg: 0.08)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.114s
Automaton transfers with branching:                0
Automaton transfer successors:                        27236 (count: 27236, min: 1, max: 1, avg: 1.00) [1 x 27236]

CPA algorithm statistics
------------------------
Number of iterations:            8607
Max size of waitlist:            23
Average size of waitlist:        9
Number of computed successors:   9784
Max successors for one state:    2
Number of times merged:          497
Number of times stopped:         885
Number of times breaked:         17

Total time for CPA algorithm:         4.131s (Max:     0.738s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      1.278s
  Time for transfer relation:         2.420s
  Time for merge operator:            0.135s
  Time for stop operator:             0.088s
  Time for adding to reached set:     0.073s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 607 (count: 17, min: 24, max: 53, avg: 35.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.378s
  Counterexample analysis:                             0.282s (Max:     0.029s, Calls: 17)
    Refinement sat check:                              0.169s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.006s
  ARG update:                                          0.039s

Length of refined path (in blocks):                     590 (count: 17, min: 23, max: 52, avg: 34.71)
Number of affected states:                              573 (count: 17, min: 22, max: 51, avg: 33.71)
Length (states) of path with itp 'true':                  0 (count: 17, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       573 (count: 17, min: 22, max: 51, avg: 33.71)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             556 (count: 17, min: 21, max: 50, avg: 32.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 646
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 496.53
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.565s
Time for refinements:                 0.434s
Average time for refinement:          0.025s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          1438
  Total lines:            1663
  Line coverage:          0.865
  Visited conditions:     90
  Total conditions:       118
  Condition coverage:     0.763

CPAchecker general statistics
-----------------------------
Number of program locations:     1864
Number of CFA edges:             1935
Number of relevant variables:    392
Number of functions:             35
Number of loops:                 2
Size of reached set:             432
  Number of reached locations:   296 (16%)
    Avg states per location:     1
    Max states per location:     7 (at node N825)
  Number of reached functions:   23 (66%)
  Number of partitions:          432
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.877s
  Time for loading CPAs:          0.672s
  Time for loading parser:        0.403s
  Time for CFA construction:      1.725s
    Time for parsing file(s):     0.532s
    Time for AST to CFA:          0.544s
    Time for CFA sanity check:    0.092s
    Time for post-processing:     0.395s
      Time for var class.:        0.197s
Time for Analysis:                4.565s
CPU time for analysis:            4.570s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.445s
Total CPU time for CPAchecker:    7.440s
Time for statistics:              0.064s

Time for Garbage Collector:       0.166s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     40MB (    38 MiB) avg;     70MB (    66 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8058MB (  7684 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
