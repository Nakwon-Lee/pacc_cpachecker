scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--regulator--gpio-regulator.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vat9mym9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3245: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_set_value_cansleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_array to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free_array to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3519 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2519 (72%)
  Because of loop head:            978 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (1%)
  Times precision was empty:       1379 (39%)
  Times precision was {false}:     129 (4%)
  Times result was cached:         1943 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      68 (2%)
  Times result was 'false':        43 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3626
  BDD entailment checks:           1344
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       187
Number of predicates discovered:          2
Number of abstraction locations:          56
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2140
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 10.86
Number of irrelevant predicates:          1021 (48%)
Number of preds handled by boolean abs:   68 (3%)
  Total number of models for allsat:      68
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.254s
  Time for path formula creation:        1.219s
Time for strengthen operator:            0.103s
Time for prec operator:                  1.221s
  Time for abstraction:                  1.077s (Max:     0.020s, Count: 3519)
    Boolean abstraction:                 0.113s
    Solving time:                        0.173s (Max:     0.017s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.011s (Max:     0.010s)
Time for merge operator:                 0.053s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.183s

Number of path formula cache hits:   45529 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.138s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         133 (count: 3781, min: 0, max: 30, avg: 0.04)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.270s
Automaton transfers with branching:                0
Automaton transfer successors:                        53883 (count: 53883, min: 1, max: 1, avg: 1.00) [1 x 53883]

CPA algorithm statistics
------------------------
Number of iterations:            17017
Max size of waitlist:            28
Average size of waitlist:        13
Number of computed successors:   19270
Max successors for one state:    2
Number of times merged:          1141
Number of times stopped:         2017
Number of times breaked:         22

Total time for CPA algorithm:         4.381s (Max:     0.479s)
  Time for choose from waitlist:      0.050s
  Time for precision adjustment:      1.468s
  Time for transfer relation:         2.395s
  Time for merge operator:            0.093s
  Time for stop operator:             0.094s
  Time for adding to reached set:     0.109s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 301 (count: 22, min: 5, max: 25, avg: 13.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.320s
  Counterexample analysis:                             0.152s (Max:     0.019s, Calls: 22)
    Refinement sat check:                              0.090s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.029s
  ARG update:                                          0.092s

Length of refined path (in blocks):                     279 (count: 22, min: 4, max: 24, avg: 12.68)
Number of affected states:                              257 (count: 22, min: 3, max: 23, avg: 11.68)
Length (states) of path with itp 'true':                  0 (count: 22, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       257 (count: 22, min: 3, max: 23, avg: 11.68)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             235 (count: 22, min: 2, max: 22, avg: 10.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 894
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 760.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.768s
Time for refinements:                 0.386s
Average time for refinement:          0.017s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1418
  Total lines:            1549
  Line coverage:          0.915
  Visited conditions:     94
  Total conditions:       116
  Condition coverage:     0.810

CPAchecker general statistics
-----------------------------
Number of program locations:     1748
Number of CFA edges:             1814
Number of relevant variables:    338
Number of functions:             33
Number of loops:                 5
Size of reached set:             546
  Number of reached locations:   337 (19%)
    Avg states per location:     1
    Max states per location:     15 (at node N1170)
  Number of reached functions:   22 (67%)
  Number of partitions:          546
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.963s
  Time for loading CPAs:          0.615s
  Time for loading parser:        0.466s
  Time for CFA construction:      1.783s
    Time for parsing file(s):     0.534s
    Time for AST to CFA:          0.542s
    Time for CFA sanity check:    0.120s
    Time for post-processing:     0.410s
      Time for var class.:        0.193s
Time for Analysis:                4.768s
CPU time for analysis:            4.770s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.751s
Total CPU time for CPAchecker:    7.730s
Time for statistics:              0.076s

Time for Garbage Collector:       0.158s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     38MB (    37 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8055MB (  7682 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
