scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--comm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kgt4um6t/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17256 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15897 (92%)
  Because of loop head:            1328 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       6167 (36%)
  Times precision was {false}:     576 (3%)
  Times result was cached:         10338 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      175 (1%)
  Times result was 'false':        62 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         17452
  BDD entailment checks:           2522
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       116
Number of predicates discovered:          2
Number of abstraction locations:          165
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         11089
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 14.77
Number of irrelevant predicates:          6307 (57%)
Number of preds handled by boolean abs:   175 (2%)
  Total number of models for allsat:      175
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.484s
  Time for path formula creation:        3.354s
Time for strengthen operator:            0.309s
Time for prec operator:                  2.711s
  Time for abstraction:                  2.392s (Max:     0.022s, Count: 17256)
    Boolean abstraction:                 0.140s
    Solving time:                        0.403s (Max:     0.013s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.006s (Max:     0.001s)
Time for merge operator:                 0.280s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.414s

Number of path formula cache hits:   130155 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.118s

Total number of created targets for pointer analysis: 800
   Number of created targets for uf: *(char)* is 161


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         347 (count: 12624, min: 0, max: 48, avg: 0.03)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.494s
Automaton transfers with branching:                0
Automaton transfer successors:                       251556 (count: 251556, min: 1, max: 1, avg: 1.00) [1 x 251556]

CPA algorithm statistics
------------------------
Number of iterations:            86770
Max size of waitlist:            35
Average size of waitlist:        19
Number of computed successors:   96206
Max successors for one state:    2
Number of times merged:          7465
Number of times stopped:         9105
Number of times breaked:         31

Total time for CPA algorithm:        12.191s (Max:     1.226s)
  Time for choose from waitlist:      0.072s
  Time for precision adjustment:      3.518s
  Time for transfer relation:         7.124s
  Time for merge operator:            0.481s
  Time for stop operator:             0.235s
  Time for adding to reached set:     0.179s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 699 (count: 31, min: 8, max: 49, avg: 22.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.548s
  Counterexample analysis:                             0.185s (Max:     0.029s, Calls: 31)
    Refinement sat check:                              0.082s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.018s
  ARG update:                                          0.286s

Length of refined path (in blocks):                     668 (count: 31, min: 7, max: 48, avg: 21.55)
Number of affected states:                              637 (count: 31, min: 6, max: 47, avg: 20.55)
Length (states) of path with itp 'true':                  0 (count: 31, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       637 (count: 31, min: 6, max: 47, avg: 20.55)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 31, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             606 (count: 31, min: 5, max: 46, avg: 19.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 3126
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2759.84
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      12.879s
Time for refinements:                 0.686s
Average time for refinement:          0.022s
Max time for refinement:              0.091s

Code Coverage
-----------------------------
  Function coverage:      0.655
  Visited lines:          3528
  Total lines:            3576
  Line coverage:          0.987
  Visited conditions:     334
  Total conditions:       354
  Condition coverage:     0.944

CPAchecker general statistics
-----------------------------
Number of program locations:     3979
Number of CFA edges:             4273
Number of relevant variables:    392
Number of functions:             29
Number of loops:                 10
Size of reached set:             1578
  Number of reached locations:   1162 (29%)
    Avg states per location:     1
    Max states per location:     103 (at node N0)
  Number of reached functions:   19 (66%)
  Number of partitions:          1578
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.062s
  Time for loading CPAs:          0.602s
  Time for loading parser:        0.454s
  Time for CFA construction:      1.923s
    Time for parsing file(s):     0.523s
    Time for AST to CFA:          0.507s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.587s
      Time for var class.:        0.311s
Time for Analysis:               12.879s
CPU time for analysis:           12.880s
Time for analyzing result:        0.001s
Total time for CPAchecker:       15.943s
Total CPU time for CPAchecker:   15.940s
Time for statistics:              0.094s

Time for Garbage Collector:       0.594s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    85 MiB) max;     54MB (    51 MiB) avg;     97MB (    92 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8005MB (  7634 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
