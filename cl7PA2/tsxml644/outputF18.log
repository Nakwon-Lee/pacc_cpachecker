scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--comm.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3mkrvji2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6431 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5880 (91%)
  Because of loop head:            520 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       461 (7%)
  Times precision was {false}:     154 (2%)
  Times result was cached:         5641 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      175 (3%)
  Times result was 'false':        32 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         5812
  BDD entailment checks:           700
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       116
Number of predicates discovered:          2
Number of abstraction locations:          165
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         5970
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 18.15
Number of irrelevant predicates:          534 (9%)
Number of preds handled by boolean abs:   175 (3%)
  Total number of models for allsat:      175
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.846s
  Time for path formula creation:        0.771s
Time for strengthen operator:            0.088s
Time for prec operator:                  1.539s
  Time for abstraction:                  1.331s (Max:     0.013s, Count: 6431)
    Boolean abstraction:                 0.163s
    Solving time:                        0.188s (Max:     0.013s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.011s (Max:     0.006s)
Time for merge operator:                 0.059s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.197s

Number of path formula cache hits:   88170 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.682s

Total number of created targets for pointer analysis: 25
   Number of created targets for uf: *(char)* is 6


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         339 (count: 2986, min: 0, max: 66, avg: 0.11)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.213s
Automaton transfers with branching:                0
Automaton transfer successors:                        87613 (count: 87613, min: 1, max: 1, avg: 1.00) [1 x 87613]

CPA algorithm statistics
------------------------
Number of iterations:            31419
Max size of waitlist:            17
Average size of waitlist:        6
Number of computed successors:   34929
Max successors for one state:    2
Number of times merged:          2556
Number of times stopped:         3128
Number of times breaked:         31

Total time for CPA algorithm:         5.279s (Max:     0.241s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      1.906s
  Time for transfer relation:         2.598s
  Time for merge operator:            0.190s
  Time for stop operator:             0.149s
  Time for adding to reached set:     0.144s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 699 (count: 31, min: 8, max: 49, avg: 22.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.389s
  Counterexample analysis:                             0.215s (Max:     0.017s, Calls: 31)
    Refinement sat check:                              0.125s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.043s
  ARG update:                                          0.102s

Length of refined path (in blocks):                     668 (count: 31, min: 7, max: 48, avg: 21.55)
Number of affected states:                              637 (count: 31, min: 6, max: 47, avg: 20.55)
Length (states) of path with itp 'true':                  0 (count: 31, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       637 (count: 31, min: 6, max: 47, avg: 20.55)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 31, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             606 (count: 31, min: 5, max: 46, avg: 19.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 1678
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 976.94
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.766s
Time for refinements:                 0.482s
Average time for refinement:          0.015s
Max time for refinement:              0.028s

Code Coverage
-----------------------------
  Function coverage:      0.655
  Visited lines:          3528
  Total lines:            3576
  Line coverage:          0.987
  Visited conditions:     334
  Total conditions:       354
  Condition coverage:     0.944

CPAchecker general statistics
-----------------------------
Number of program locations:     3979
Number of CFA edges:             4273
Number of relevant variables:    392
Number of functions:             29
Number of loops:                 10
Size of reached set:             1578
  Number of reached locations:   1162 (29%)
    Avg states per location:     1
    Max states per location:     103 (at node N0)
  Number of reached functions:   19 (66%)
  Number of partitions:          1578
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.465s
  Time for loading CPAs:          0.624s
  Time for loading parser:        0.461s
  Time for CFA construction:      2.277s
    Time for parsing file(s):     0.636s
    Time for AST to CFA:          0.635s
    Time for CFA sanity check:    0.251s
    Time for post-processing:     0.657s
      Time for var class.:        0.347s
Time for Analysis:                5.767s
CPU time for analysis:            5.770s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.234s
Total CPU time for CPAchecker:    9.230s
Time for statistics:              0.080s

Time for Garbage Collector:       0.213s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     42MB (    40 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7996MB (  7626 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
