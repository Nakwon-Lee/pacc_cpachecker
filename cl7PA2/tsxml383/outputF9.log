scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--smsc47b397_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p3zbixlh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2852: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_check_resource_conflict to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            846 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  789 (93%)
  Because of loop head:            48 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (1%)
  Times precision was empty:       288 (34%)
  Times precision was {false}:     37 (4%)
  Times result was cached:         479 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42 (5%)
  Times result was 'false':        9 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         569
  BDD entailment checks:           175
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          2
Number of abstraction locations:          42
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         558
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.06
Number of irrelevant predicates:          174 (31%)
Number of preds handled by boolean abs:   42 (8%)
  Total number of models for allsat:      44
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  0.461s
  Time for path formula creation:        0.440s
Time for strengthen operator:            0.029s
Time for prec operator:                  0.387s
  Time for abstraction:                  0.329s (Max:     0.023s, Count: 846)
    Boolean abstraction:                 0.060s
    Solving time:                        0.036s (Max:     0.009s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.030s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.049s

Number of path formula cache hits:   6029 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.413s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *unsigned_short_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          33 (count: 905, min: 0, max: 33, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.057s
Automaton transfers with branching:                0
Automaton transfer successors:                         7762 (count: 7762, min: 1, max: 1, avg: 1.00) [1 x 7762]

CPA algorithm statistics
------------------------
Number of iterations:            3356
Max size of waitlist:            10
Average size of waitlist:        4
Number of computed successors:   3699
Max successors for one state:    2
Number of times merged:          197
Number of times stopped:         315
Number of times breaked:         9

Total time for CPA algorithm:         1.606s (Max:     0.506s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      0.572s
  Time for transfer relation:         0.860s
  Time for merge operator:            0.041s
  Time for stop operator:             0.019s
  Time for adding to reached set:     0.041s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 239 (count: 9, min: 18, max: 44, avg: 26.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.129s
  Counterexample analysis:                             0.086s (Max:     0.018s, Calls: 9)
    Refinement sat check:                              0.041s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.003s
  ARG update:                                          0.013s

Length of refined path (in blocks):                     230 (count: 9, min: 17, max: 43, avg: 25.56)
Number of affected states:                              221 (count: 9, min: 16, max: 42, avg: 24.56)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       221 (count: 9, min: 16, max: 42, avg: 24.56)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             212 (count: 9, min: 15, max: 41, avg: 23.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 414
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 343.56
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.764s
Time for refinements:                 0.158s
Average time for refinement:          0.017s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          905
  Total lines:            1332
  Line coverage:          0.679
  Visited conditions:     48
  Total conditions:       70
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     1510
Number of CFA edges:             1550
Number of relevant variables:    218
Number of functions:             36
Number of loops:                 2
Size of reached set:             311
  Number of reached locations:   199 (13%)
    Avg states per location:     1
    Max states per location:     11 (at node N25)
  Number of reached functions:   18 (50%)
  Number of partitions:          311
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.034s
  Time for loading CPAs:          0.536s
  Time for loading parser:        0.525s
  Time for CFA construction:      1.900s
    Time for parsing file(s):     0.637s
    Time for AST to CFA:          0.632s
    Time for CFA sanity check:    0.096s
    Time for post-processing:     0.376s
      Time for var class.:        0.193s
Time for Analysis:                1.764s
CPU time for analysis:            1.760s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.800s
Total CPU time for CPAchecker:    4.780s
Time for statistics:              0.042s

Time for Garbage Collector:       0.106s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     33MB (    31 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8034MB (  7661 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
