scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--fit3.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qvbngj_b/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5866 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5342 (91%)
  Because of loop head:            499 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       1499 (26%)
  Times precision was {false}:     194 (3%)
  Times result was cached:         4021 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      152 (3%)
  Times result was 'false':        49 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         5413
  BDD entailment checks:           937
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       114
Number of predicates discovered:          2
Number of abstraction locations:          130
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4367
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 12.62
Number of irrelevant predicates:          1649 (38%)
Number of preds handled by boolean abs:   152 (3%)
  Total number of models for allsat:      152
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.523s
  Time for path formula creation:        1.425s
Time for strengthen operator:            0.131s
Time for prec operator:                  1.574s
  Time for abstraction:                  1.392s (Max:     0.020s, Count: 5866)
    Boolean abstraction:                 0.199s
    Solving time:                        0.225s (Max:     0.013s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.025s (Max:     0.010s)
Time for merge operator:                 0.111s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     0.245s

Number of path formula cache hits:   79058 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.275s

Total number of created targets for pointer analysis: 225
   Number of created targets for uf: *(char)* is 76


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         289 (count: 4323, min: 0, max: 44, avg: 0.07)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.250s
Automaton transfers with branching:                0
Automaton transfer successors:                       110113 (count: 110113, min: 1, max: 1, avg: 1.00) [1 x 110113]

CPA algorithm statistics
------------------------
Number of iterations:            28645
Max size of waitlist:            35
Average size of waitlist:        14
Number of computed successors:   31973
Max successors for one state:    2
Number of times merged:          2238
Number of times stopped:         2813
Number of times breaked:         25

Total time for CPA algorithm:         6.112s (Max:     0.543s)
  Time for choose from waitlist:      0.060s
  Time for precision adjustment:      1.950s
  Time for transfer relation:         3.425s
  Time for merge operator:            0.199s
  Time for stop operator:             0.153s
  Time for adding to reached set:     0.057s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 551 (count: 25, min: 5, max: 39, avg: 22.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.395s
  Counterexample analysis:                             0.202s (Max:     0.024s, Calls: 25)
    Refinement sat check:                              0.108s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.006s
  ARG update:                                          0.115s

Length of refined path (in blocks):                     526 (count: 25, min: 4, max: 38, avg: 21.04)
Number of affected states:                              501 (count: 25, min: 3, max: 37, avg: 20.04)
Length (states) of path with itp 'true':                  0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       501 (count: 25, min: 3, max: 37, avg: 20.04)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             476 (count: 25, min: 2, max: 36, avg: 19.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 1544
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1116.28
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.642s
Time for refinements:                 0.527s
Average time for refinement:          0.021s
Max time for refinement:              0.068s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          2861
  Total lines:            2909
  Line coverage:          0.983
  Visited conditions:     272
  Total conditions:       292
  Condition coverage:     0.932

CPAchecker general statistics
-----------------------------
Number of program locations:     3242
Number of CFA edges:             3486
Number of relevant variables:    316
Number of functions:             23
Number of loops:                 6
Size of reached set:             1280
  Number of reached locations:   931 (29%)
    Avg states per location:     1
    Max states per location:     88 (at node N0)
  Number of reached functions:   13 (57%)
  Number of partitions:          1280
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.396s
  Time for loading CPAs:          0.751s
  Time for loading parser:        0.439s
  Time for CFA construction:      2.112s
    Time for parsing file(s):     0.642s
    Time for AST to CFA:          0.551s
    Time for CFA sanity check:    0.218s
    Time for post-processing:     0.540s
      Time for var class.:        0.288s
Time for Analysis:                6.643s
CPU time for analysis:            6.640s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.042s
Total CPU time for CPAchecker:   10.030s
Time for statistics:              0.080s

Time for Garbage Collector:       0.266s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     43MB (    41 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8062MB (  7688 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
