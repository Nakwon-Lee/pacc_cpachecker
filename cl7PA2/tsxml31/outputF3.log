scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--fit3.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nm_1szhl/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12237 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11387 (93%)
  Because of loop head:            825 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       3635 (30%)
  Times precision was {false}:     515 (4%)
  Times result was cached:         7935 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      152 (1%)
  Times result was 'false':        49 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         12248
  BDD entailment checks:           1676
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       114
Number of predicates discovered:          2
Number of abstraction locations:          130
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         8602
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 12.90
Number of irrelevant predicates:          5244 (61%)
Number of preds handled by boolean abs:   152 (2%)
  Total number of models for allsat:      152
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.117s
  Time for path formula creation:        2.999s
Time for strengthen operator:            0.111s
Time for prec operator:                  2.572s
  Time for abstraction:                  2.250s (Max:     0.034s, Count: 12237)
    Boolean abstraction:                 0.191s
    Solving time:                        0.429s (Max:     0.013s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.010s (Max:     0.005s)
Time for merge operator:                 0.275s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.442s

Number of path formula cache hits:   96695 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.731s

Total number of created targets for pointer analysis: 225
   Number of created targets for uf: *(char)* is 76


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         303 (count: 8803, min: 0, max: 24, avg: 0.03)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.426s
Automaton transfers with branching:                0
Automaton transfer successors:                       173328 (count: 173328, min: 1, max: 1, avg: 1.00) [1 x 173328]

CPA algorithm statistics
------------------------
Number of iterations:            60966
Max size of waitlist:            14
Average size of waitlist:        8
Number of computed successors:   67484
Max successors for one state:    2
Number of times merged:          5286
Number of times stopped:         6468
Number of times breaked:         25

Total time for CPA algorithm:        10.614s (Max:     0.984s)
  Time for choose from waitlist:      0.099s
  Time for precision adjustment:      3.245s
  Time for transfer relation:         5.878s
  Time for merge operator:            0.468s
  Time for stop operator:             0.189s
  Time for adding to reached set:     0.173s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 551 (count: 25, min: 5, max: 39, avg: 22.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.493s
  Counterexample analysis:                             0.180s (Max:     0.023s, Calls: 25)
    Refinement sat check:                              0.083s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.043s
  ARG update:                                          0.228s

Length of refined path (in blocks):                     526 (count: 25, min: 4, max: 38, avg: 21.04)
Number of affected states:                              501 (count: 25, min: 3, max: 37, avg: 20.04)
Length (states) of path with itp 'true':                  0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       501 (count: 25, min: 3, max: 37, avg: 20.04)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             476 (count: 25, min: 2, max: 36, avg: 19.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 2576
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2390.52
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      11.230s
Time for refinements:                 0.616s
Average time for refinement:          0.024s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          2861
  Total lines:            2909
  Line coverage:          0.983
  Visited conditions:     272
  Total conditions:       292
  Condition coverage:     0.932

CPAchecker general statistics
-----------------------------
Number of program locations:     3242
Number of CFA edges:             3486
Number of relevant variables:    316
Number of functions:             23
Number of loops:                 6
Size of reached set:             1280
  Number of reached locations:   931 (29%)
    Avg states per location:     1
    Max states per location:     88 (at node N0)
  Number of reached functions:   13 (57%)
  Number of partitions:          1280
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.134s
  Time for loading CPAs:          0.625s
  Time for loading parser:        0.527s
  Time for CFA construction:      1.872s
    Time for parsing file(s):     0.561s
    Time for AST to CFA:          0.485s
    Time for CFA sanity check:    0.186s
    Time for post-processing:     0.494s
      Time for var class.:        0.260s
Time for Analysis:               11.230s
CPU time for analysis:           11.230s
Time for analyzing result:        0.001s
Total time for CPAchecker:       14.373s
Total CPU time for CPAchecker:   14.360s
Time for statistics:              0.131s

Time for Garbage Collector:       0.532s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     49MB (    47 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8068MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
