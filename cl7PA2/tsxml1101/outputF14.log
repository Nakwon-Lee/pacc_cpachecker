scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--net--tokenring--abyss.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xbtq3wv0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_trdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tmsdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tms380tr_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tmsdev_term to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12361 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11245 (91%)
  Because of loop head:            1101 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (0%)
  Times precision was empty:       3943 (32%)
  Times precision was {false}:     252 (2%)
  Times result was cached:         8023 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      143 (1%)
  Times result was 'false':        16 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         9791
  BDD entailment checks:           1161
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       109
Number of predicates discovered:          2
Number of abstraction locations:          70
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         8418
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 21.31
Number of irrelevant predicates:          4281 (51%)
Number of preds handled by boolean abs:   143 (2%)
  Total number of models for allsat:      143
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.359s
  Time for path formula creation:        2.305s
Time for strengthen operator:            0.147s
Time for prec operator:                  1.795s
  Time for abstraction:                  1.423s (Max:     0.025s, Count: 12361)
    Boolean abstraction:                 0.135s
    Solving time:                        0.107s (Max:     0.009s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.044s (Max:     0.009s)
Time for merge operator:                 0.119s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     0.109s

Number of path formula cache hits:   63736 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.994s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         283 (count: 7227, min: 0, max: 56, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.333s
Automaton transfers with branching:                0
Automaton transfer successors:                        96725 (count: 96725, min: 1, max: 1, avg: 1.00) [1 x 96725]

CPA algorithm statistics
------------------------
Number of iterations:            51645
Max size of waitlist:            9
Average size of waitlist:        5
Number of computed successors:   57084
Max successors for one state:    2
Number of times merged:          4315
Number of times stopped:         5384
Number of times breaked:         15

Total time for CPA algorithm:         7.938s (Max:     1.357s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:      2.559s
  Time for transfer relation:         4.150s
  Time for merge operator:            0.302s
  Time for stop operator:             0.203s
  Time for adding to reached set:     0.176s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 678 (count: 15, min: 5, max: 85, avg: 45.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.508s
  Counterexample analysis:                             0.265s (Max:     0.029s, Calls: 15)
    Refinement sat check:                              0.187s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.012s
  ARG update:                                          0.183s

Length of refined path (in blocks):                     663 (count: 15, min: 4, max: 84, avg: 44.20)
Number of affected states:                              648 (count: 15, min: 3, max: 83, avg: 43.20)
Length (states) of path with itp 'true':                  0 (count: 15, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       648 (count: 15, min: 3, max: 83, avg: 43.20)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             633 (count: 15, min: 2, max: 82, avg: 42.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 4521
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 3249.67
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.568s
Time for refinements:                 0.628s
Average time for refinement:          0.041s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.489
  Visited lines:          1435
  Total lines:            1728
  Line coverage:          0.830
  Visited conditions:     64
  Total conditions:       88
  Condition coverage:     0.727

CPAchecker general statistics
-----------------------------
Number of program locations:     1976
Number of CFA edges:             2045
Number of relevant variables:    232
Number of functions:             45
Number of loops:                 8
Size of reached set:             2985
  Number of reached locations:   296 (15%)
    Avg states per location:     10
    Max states per location:     112 (at node N0)
  Number of reached functions:   22 (49%)
  Number of partitions:          2985
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.556s
  Time for loading CPAs:          0.653s
  Time for loading parser:        0.560s
  Time for CFA construction:      2.252s
    Time for parsing file(s):     0.824s
    Time for AST to CFA:          0.708s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.431s
      Time for var class.:        0.187s
Time for Analysis:                8.568s
CPU time for analysis:            8.560s
Time for analyzing result:        0.001s
Total time for CPAchecker:       12.137s
Total CPU time for CPAchecker:   12.120s
Time for statistics:              0.105s

Time for Garbage Collector:       0.319s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     43MB (    41 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8062MB (  7689 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
