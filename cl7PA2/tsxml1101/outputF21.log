scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--net--tokenring--abyss.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ja_jr_3r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_trdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tmsdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tms380tr_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tmsdev_term to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3715 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3322 (89%)
  Because of loop head:            378 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (0%)
  Times precision was empty:       534 (14%)
  Times precision was {false}:     88 (2%)
  Times result was cached:         2950 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      143 (4%)
  Times result was 'false':        29 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2745
  BDD entailment checks:           561
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       109
Number of predicates discovered:          2
Number of abstraction locations:          70
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         3181
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.77
Number of irrelevant predicates:          736 (23%)
Number of preds handled by boolean abs:   143 (4%)
  Total number of models for allsat:      143
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.235s
  Time for path formula creation:        1.198s
Time for strengthen operator:            0.087s
Time for prec operator:                  1.066s
  Time for abstraction:                  0.897s (Max:     0.017s, Count: 3715)
    Boolean abstraction:                 0.102s
    Solving time:                        0.106s (Max:     0.013s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.030s (Max:     0.008s)
Time for merge operator:                 0.070s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     0.114s

Number of path formula cache hits:   26075 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.127s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         259 (count: 2398, min: 0, max: 72, avg: 0.11)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.174s
Automaton transfers with branching:                0
Automaton transfer successors:                        35959 (count: 35959, min: 1, max: 1, avg: 1.00) [1 x 35959]

CPA algorithm statistics
------------------------
Number of iterations:            15646
Max size of waitlist:            33
Average size of waitlist:        12
Number of computed successors:   17324
Max successors for one state:    2
Number of times merged:          1092
Number of times stopped:         1447
Number of times breaked:         15

Total time for CPA algorithm:         4.009s (Max:     0.554s)
  Time for choose from waitlist:      0.035s
  Time for precision adjustment:      1.347s
  Time for transfer relation:         2.187s
  Time for merge operator:            0.147s
  Time for stop operator:             0.094s
  Time for adding to reached set:     0.069s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 645 (count: 15, min: 5, max: 71, avg: 43.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.385s
  Counterexample analysis:                             0.235s (Max:     0.026s, Calls: 15)
    Refinement sat check:                              0.136s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.017s
  ARG update:                                          0.077s

Length of refined path (in blocks):                     630 (count: 15, min: 4, max: 70, avg: 42.00)
Number of affected states:                              615 (count: 15, min: 3, max: 69, avg: 41.00)
Length (states) of path with itp 'true':                  0 (count: 15, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       615 (count: 15, min: 3, max: 69, avg: 41.00)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             600 (count: 15, min: 2, max: 68, avg: 40.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 2616
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 860.60
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.449s
Time for refinements:                 0.440s
Average time for refinement:          0.029s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.489
  Visited lines:          1435
  Total lines:            1728
  Line coverage:          0.830
  Visited conditions:     64
  Total conditions:       88
  Condition coverage:     0.727

CPAchecker general statistics
-----------------------------
Number of program locations:     1976
Number of CFA edges:             2045
Number of relevant variables:    232
Number of functions:             45
Number of loops:                 8
Size of reached set:             2985
  Number of reached locations:   296 (15%)
    Avg states per location:     10
    Max states per location:     112 (at node N0)
  Number of reached functions:   22 (49%)
  Number of partitions:          2985
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.313s
  Time for loading CPAs:          0.715s
  Time for loading parser:        0.452s
  Time for CFA construction:      2.040s
    Time for parsing file(s):     0.649s
    Time for AST to CFA:          0.678s
    Time for CFA sanity check:    0.111s
    Time for post-processing:     0.446s
      Time for var class.:        0.172s
Time for Analysis:                4.449s
CPU time for analysis:            4.450s
Time for analyzing result:        0.003s
Total time for CPAchecker:        7.764s
Total CPU time for CPAchecker:    7.750s
Time for statistics:              0.092s

Time for Garbage Collector:       0.174s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     41MB (    39 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     33MB (    31 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8021MB (  7650 MiB) max;   7994MB (  7623 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
