scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--uio--uio_aec.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_etaof5sh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __uio_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uio_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            189 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  159 (84%)
  Because of loop head:            25 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (3%)
  Times precision was empty:       52 (28%)
  Times precision was {false}:     13 (7%)
  Times result was cached:         103 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21 (11%)
  Times result was 'false':        6 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         151
  BDD entailment checks:           43
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       110
Number of predicates discovered:          2
Number of abstraction locations:          22
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         137
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.03
Number of irrelevant predicates:          39 (28%)
Number of preds handled by boolean abs:   21 (15%)
  Total number of models for allsat:      21
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.386s
  Time for path formula creation:        0.369s
Time for strengthen operator:            0.019s
Time for prec operator:                  0.214s
  Time for abstraction:                  0.181s (Max:     0.015s, Count: 189)
    Boolean abstraction:                 0.027s
    Solving time:                        0.043s (Max:     0.011s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.023s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.043s

Number of path formula cache hits:   2187 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.360s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 291, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.037s
Automaton transfers with branching:                0
Automaton transfer successors:                         3297 (count: 3297, min: 1, max: 1, avg: 1.00) [1 x 3297]

CPA algorithm statistics
------------------------
Number of iterations:            919
Max size of waitlist:            10
Average size of waitlist:        4
Number of computed successors:   1030
Max successors for one state:    2
Number of times merged:          54
Number of times stopped:         83
Number of times breaked:         5

Total time for CPA algorithm:         0.977s (Max:     0.313s)
  Time for choose from waitlist:      0.002s
  Time for precision adjustment:      0.319s
  Time for transfer relation:         0.567s
  Time for merge operator:            0.034s
  Time for stop operator:             0.025s
  Time for adding to reached set:     0.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  74 (count: 5, min: 8, max: 19, avg: 14.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.107s
  Counterexample analysis:                             0.078s (Max:     0.019s, Calls: 5)
    Refinement sat check:                              0.044s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.002s
  ARG update:                                          0.006s

Length of refined path (in blocks):                      69 (count: 5, min: 7, max: 18, avg: 13.80)
Number of affected states:                               64 (count: 5, min: 6, max: 17, avg: 12.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        64 (count: 5, min: 6, max: 17, avg: 12.80)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              59 (count: 5, min: 5, max: 16, avg: 11.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 199
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 159.80
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.116s
Time for refinements:                 0.139s
Average time for refinement:          0.027s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          880
  Total lines:            959
  Line coverage:          0.918
  Visited conditions:     34
  Total conditions:       58
  Condition coverage:     0.586

CPAchecker general statistics
-----------------------------
Number of program locations:     1099
Number of CFA edges:             1126
Number of relevant variables:    163
Number of functions:             22
Number of loops:                 1
Size of reached set:             158
  Number of reached locations:   131 (12%)
    Avg states per location:     1
    Max states per location:     3 (at node N150)
  Number of reached functions:   11 (50%)
  Number of partitions:          158
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.932s
  Time for loading CPAs:          0.740s
  Time for loading parser:        0.497s
  Time for CFA construction:      1.629s
    Time for parsing file(s):     0.587s
    Time for AST to CFA:          0.477s
    Time for CFA sanity check:    0.101s
    Time for post-processing:     0.323s
      Time for var class.:        0.138s
Time for Analysis:                1.117s
CPU time for analysis:            1.110s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.051s
Total CPU time for CPAchecker:    4.050s
Time for statistics:              0.042s

Time for Garbage Collector:       0.094s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 53MB (    51 MiB) max;     31MB (    30 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7970MB (  7601 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
