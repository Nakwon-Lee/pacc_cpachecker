scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--common--tuners--max2165.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bii777q5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4736: Function pointer *__cil_tmp15 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4756: Function pointer *__cil_tmp22 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4867: Function pointer *__cil_tmp13 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4923: Function pointer *__cil_tmp45 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4547: Function pointer *__cil_tmp32 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4593: Function pointer *__cil_tmp45 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4867: Ignoring call via function pointer max2165_init::__cil_tmp13 for which no suitable target was found in line: (*__cil_tmp13)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4867: Ignoring function call through function pointer *__cil_tmp13: (*__cil_tmp13)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4547: Ignoring call via function pointer max2165_set_params::__cil_tmp32 for which no suitable target was found in line: (*__cil_tmp32)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4547: Ignoring function call through function pointer *__cil_tmp32: (*__cil_tmp32)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4736: Ignoring call via function pointer max2165_get_status::__cil_tmp15 for which no suitable target was found in line: (*__cil_tmp15)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4736: Ignoring function call through function pointer *__cil_tmp15: (*__cil_tmp15)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4756: Ignoring call via function pointer max2165_get_status::__cil_tmp22 for which no suitable target was found in line: (*__cil_tmp22)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4756: Ignoring function call through function pointer *__cil_tmp22: (*__cil_tmp22)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4593: Ignoring call via function pointer max2165_set_params::__cil_tmp45 for which no suitable target was found in line: (*__cil_tmp45)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4593: Ignoring function call through function pointer *__cil_tmp45: (*__cil_tmp45)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4923: Ignoring call via function pointer max2165_init::__cil_tmp45 for which no suitable target was found in line: (*__cil_tmp45)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4923: Ignoring function call through function pointer *__cil_tmp45: (*__cil_tmp45)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1248 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1030 (83%)
  Because of loop head:            205 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       387 (31%)
  Times precision was {false}:     129 (10%)
  Times result was cached:         625 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      107 (9%)
  Times result was 'false':        13 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3130
  BDD entailment checks:           356
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       109
Number of predicates discovered:          2
Number of abstraction locations:          60
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         861
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.65
Number of irrelevant predicates:          324 (38%)
Number of preds handled by boolean abs:   107 (12%)
  Total number of models for allsat:      107
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.650s
  Time for path formula creation:        1.616s
Time for strengthen operator:            0.060s
Time for prec operator:                  1.243s
  Time for abstraction:                  1.172s (Max:     0.023s, Count: 1248)
    Boolean abstraction:                 0.246s
    Solving time:                        0.412s (Max:     0.018s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.069s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.427s

Number of path formula cache hits:   29722 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.512s

Total number of created targets for pointer analysis: 2421
   Number of created targets for uf: *unsigned_char is 57
   Number of created targets for uf: *unsigned_int is 9


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         199 (count: 2035, min: 0, max: 68, avg: 0.10)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.177s
Automaton transfers with branching:                0
Automaton transfer successors:                        40880 (count: 40880, min: 1, max: 1, avg: 1.00) [1 x 40880]

CPA algorithm statistics
------------------------
Number of iterations:            12652
Max size of waitlist:            17
Average size of waitlist:        5
Number of computed successors:   14338
Max successors for one state:    2
Number of times merged:          1387
Number of times stopped:         1600
Number of times breaked:         13

Total time for CPA algorithm:         4.455s (Max:     0.552s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:      1.418s
  Time for transfer relation:         2.517s
  Time for merge operator:            0.151s
  Time for stop operator:             0.096s
  Time for adding to reached set:     0.063s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 264 (count: 13, min: 4, max: 47, avg: 20.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.446s
  Counterexample analysis:                             0.362s (Max:     0.078s, Calls: 13)
    Refinement sat check:                              0.272s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.005s
  ARG update:                                          0.052s

Length of refined path (in blocks):                     251 (count: 13, min: 3, max: 46, avg: 19.31)
Number of affected states:                              238 (count: 13, min: 2, max: 45, avg: 18.31)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       238 (count: 13, min: 2, max: 45, avg: 18.31)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             225 (count: 13, min: 1, max: 44, avg: 17.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 1609
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 874.85
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.975s
Time for refinements:                 0.516s
Average time for refinement:          0.039s
Max time for refinement:              0.088s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          1840
  Total lines:            1977
  Line coverage:          0.931
  Visited conditions:     116
  Total conditions:       146
  Condition coverage:     0.795

CPAchecker general statistics
-----------------------------
Number of program locations:     2223
Number of CFA edges:             2317
Number of relevant variables:    416
Number of functions:             30
Number of loops:                 4
Size of reached set:             1392
  Number of reached locations:   479 (22%)
    Avg states per location:     2
    Max states per location:     19 (at node N22)
  Number of reached functions:   18 (60%)
  Number of partitions:          1392
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.984s
  Time for loading CPAs:          0.613s
  Time for loading parser:        0.490s
  Time for CFA construction:      1.816s
    Time for parsing file(s):     0.623s
    Time for AST to CFA:          0.533s
    Time for CFA sanity check:    0.103s
    Time for post-processing:     0.393s
      Time for var class.:        0.194s
Time for Analysis:                4.975s
CPU time for analysis:            4.980s
Time for analyzing result:        0.004s
Total time for CPAchecker:        7.961s
Total CPU time for CPAchecker:    7.950s
Time for statistics:              0.080s

Time for Garbage Collector:       0.179s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     40MB (    38 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8055MB (  7682 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
