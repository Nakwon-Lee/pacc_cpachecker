scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hid--hid-primax.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_giaus8u8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1941: Function pointer *__cil_tmp8 with type int (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 1903: Function pointer *__cil_tmp11 with type int (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1903: Ignoring call via function pointer hid_parse::__cil_tmp11 for which no suitable target was found in line: ret = (*__cil_tmp11)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1903: Ignoring function call through function pointer *__cil_tmp11: ret = (*__cil_tmp11)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hid_report_raw_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1941: Ignoring call via function pointer hid_hw_start::__cil_tmp8 for which no suitable target was found in line: tmp = (*__cil_tmp8)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1941: Ignoring function call through function pointer *__cil_tmp8: tmp = (*__cil_tmp8)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hid_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1963: Ignoring call via function pointer hid_hw_start::__cil_tmp14 for which no suitable target was found in line: (*__cil_tmp14)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1963: Ignoring function call through function pointer *__cil_tmp14: (*__cil_tmp14)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1989: Ignoring call via function pointer hid_hw_stop::__cil_tmp7 for which no suitable target was found in line: (*__cil_tmp7)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1989: Ignoring function call through function pointer *__cil_tmp7: (*__cil_tmp7)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 1989: Unsupported feature (recursion): px_remove(hdev); (line was originally pointer call(px_remove) (*__cil_tmp7)(hdev);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            230 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  158 (69%)
  Because of loop head:            68 (30%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (2%)
  Times precision was empty:       116 (50%)
  Times precision was {false}:     29 (13%)
  Times result was cached:         65 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20 (9%)
  Times result was 'false':        6 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         219
  BDD entailment checks:           91
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          2
Number of abstraction locations:          15
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         114
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.33
Number of irrelevant predicates:          59 (52%)
Number of preds handled by boolean abs:   20 (18%)
  Total number of models for allsat:      20
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.454s
  Time for path formula creation:        0.430s
Time for strengthen operator:            0.013s
Time for prec operator:                  0.225s
  Time for abstraction:                  0.212s (Max:     0.017s, Count: 230)
    Boolean abstraction:                 0.039s
    Solving time:                        0.060s (Max:     0.017s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.061s

Number of path formula cache hits:   1354 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.406s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 477, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.028s
Automaton transfers with branching:                0
Automaton transfer successors:                         2752 (count: 2752, min: 1, max: 1, avg: 1.00) [1 x 2752]

CPA algorithm statistics
------------------------
Number of iterations:            1101
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   1263
Max successors for one state:    2
Number of times merged:          64
Number of times stopped:         130
Number of times breaked:         4

Total time for CPA algorithm:         1.126s (Max:     0.476s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      0.304s
  Time for transfer relation:         0.689s
  Time for merge operator:            0.034s
  Time for stop operator:             0.037s
  Time for adding to reached set:     0.011s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  49 (count: 4, min: 5, max: 17, avg: 12.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.054s
  Counterexample analysis:                             0.037s (Max:     0.013s, Calls: 4)
    Refinement sat check:                              0.020s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.001s
  ARG update:                                          0.006s

Length of refined path (in blocks):                      45 (count: 4, min: 4, max: 16, avg: 11.25)
Number of affected states:                               41 (count: 4, min: 3, max: 15, avg: 10.25)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        41 (count: 4, min: 3, max: 15, avg: 10.25)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              37 (count: 4, min: 2, max: 14, avg: 9.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 287
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 217.75
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.199s
Time for refinements:                 0.073s
Average time for refinement:          0.018s
Max time for refinement:              0.035s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          576
  Total lines:            630
  Line coverage:          0.914
  Visited conditions:     44
  Total conditions:       64
  Condition coverage:     0.688

CPAchecker general statistics
-----------------------------
Number of program locations:     754
Number of CFA edges:             786
Number of relevant variables:    93
Number of functions:             20
Number of loops:                 2
Size of reached set:             269
  Number of reached locations:   136 (18%)
    Avg states per location:     1
    Max states per location:     6 (at node N301)
  Number of reached functions:   10 (50%)
  Number of partitions:          266
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N287 (before lines 2287-2352), Function main called from node N267, stack depth 1 [5f9be66c], stack [main]])
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          2.643s
  Time for loading CPAs:          0.595s
  Time for loading parser:        0.462s
  Time for CFA construction:      1.458s
    Time for parsing file(s):     0.523s
    Time for AST to CFA:          0.443s
    Time for CFA sanity check:    0.058s
    Time for post-processing:     0.311s
      Time for var class.:        0.109s
Time for Analysis:                1.199s
CPU time for analysis:            1.200s
Total time for CPAchecker:        3.845s
Total CPU time for CPAchecker:    3.840s
Time for statistics:              0.070s

Time for Garbage Collector:       0.091s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    52 MiB) max;     30MB (    28 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8026MB (  7655 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
