scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--regulator--gpio-regulator.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_agjv9kdt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_set_value_cansleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_array to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free_array to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3177 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2218 (70%)
  Because of loop head:            938 (30%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (1%)
  Times precision was empty:       1145 (36%)
  Times precision was {false}:     145 (5%)
  Times result was cached:         1822 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      65 (2%)
  Times result was 'false':        19 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3458
  BDD entailment checks:           1184
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       194
Number of predicates discovered:          2
Number of abstraction locations:          51
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2032
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.68
Number of irrelevant predicates:          956 (47%)
Number of preds handled by boolean abs:   65 (3%)
  Total number of models for allsat:      67
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.322s
  Time for path formula creation:        1.262s
Time for strengthen operator:            0.089s
Time for prec operator:                  1.128s
  Time for abstraction:                  0.992s (Max:     0.021s, Count: 3177)
    Boolean abstraction:                 0.098s
    Solving time:                        0.194s (Max:     0.017s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.018s (Max:     0.008s)
Time for merge operator:                 0.063s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.208s

Number of path formula cache hits:   40556 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.187s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         127 (count: 3449, min: 0, max: 29, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.135s
Automaton transfers with branching:                0
Automaton transfer successors:                        51441 (count: 51441, min: 1, max: 1, avg: 1.00) [1 x 51441]

CPA algorithm statistics
------------------------
Number of iterations:            15248
Max size of waitlist:            31
Average size of waitlist:        13
Number of computed successors:   17414
Max successors for one state:    2
Number of times merged:          1137
Number of times stopped:         1916
Number of times breaked:         21

Total time for CPA algorithm:         4.099s (Max:     0.651s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      1.347s
  Time for transfer relation:         2.203s
  Time for merge operator:            0.122s
  Time for stop operator:             0.124s
  Time for adding to reached set:     0.065s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 297 (count: 21, min: 8, max: 24, avg: 14.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.330s
  Counterexample analysis:                             0.175s (Max:     0.030s, Calls: 21)
    Refinement sat check:                              0.118s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.019s
  ARG update:                                          0.096s

Length of refined path (in blocks):                     276 (count: 21, min: 7, max: 23, avg: 13.14)
Number of affected states:                              255 (count: 21, min: 6, max: 22, avg: 12.14)
Length (states) of path with itp 'true':                  0 (count: 21, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       255 (count: 21, min: 6, max: 22, avg: 12.14)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             234 (count: 21, min: 5, max: 21, avg: 11.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 830
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 715.71
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.490s
Time for refinements:                 0.391s
Average time for refinement:          0.018s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.690
  Visited lines:          1451
  Total lines:            1559
  Line coverage:          0.931
  Visited conditions:     96
  Total conditions:       106
  Condition coverage:     0.906

CPAchecker general statistics
-----------------------------
Number of program locations:     1722
Number of CFA edges:             1780
Number of relevant variables:    336
Number of functions:             29
Number of loops:                 5
Size of reached set:             513
  Number of reached locations:   325 (19%)
    Avg states per location:     1
    Max states per location:     15 (at node N1289)
  Number of reached functions:   20 (69%)
  Number of partitions:          513
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.707s
  Time for loading CPAs:          0.544s
  Time for loading parser:        0.394s
  Time for CFA construction:      1.607s
    Time for parsing file(s):     0.501s
    Time for AST to CFA:          0.458s
    Time for CFA sanity check:    0.121s
    Time for post-processing:     0.401s
      Time for var class.:        0.172s
Time for Analysis:                4.491s
CPU time for analysis:            4.490s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.207s
Total CPU time for CPAchecker:    7.200s
Time for statistics:              0.067s

Time for Garbage Collector:       0.180s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     38MB (    36 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    28 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7995MB (  7625 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
