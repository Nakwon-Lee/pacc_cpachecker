scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--dstr.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ka1cxmtw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14100 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13259 (94%)
  Because of loop head:            805 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       2357 (17%)
  Times precision was {false}:     212 (2%)
  Times result was cached:         11311 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      220 (2%)
  Times result was 'false':        71 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         13422
  BDD entailment checks:           1662
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       132
Number of predicates discovered:          2
Number of abstraction locations:          201
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         11743
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 27.18
Number of irrelevant predicates:          2764 (24%)
Number of preds handled by boolean abs:   220 (2%)
  Total number of models for allsat:      220
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.861s
  Time for path formula creation:        1.726s
Time for strengthen operator:            0.248s
Time for prec operator:                  2.152s
  Time for abstraction:                  1.889s (Max:     0.019s, Count: 14100)
    Boolean abstraction:                 0.182s
    Solving time:                        0.229s (Max:     0.013s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.017s (Max:     0.006s)
Time for merge operator:                 0.137s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.242s

Number of path formula cache hits:   198264 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.532s

Total number of created targets for pointer analysis: 900
   Number of created targets for uf: *(char)* is 181


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         427 (count: 6404, min: 0, max: 42, avg: 0.07)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.467s
Automaton transfers with branching:                0
Automaton transfer successors:                       257755 (count: 257755, min: 1, max: 1, avg: 1.00) [1 x 257755]

CPA algorithm statistics
------------------------
Number of iterations:            68827
Max size of waitlist:            26
Average size of waitlist:        8
Number of computed successors:   76196
Max successors for one state:    2
Number of times merged:          5880
Number of times stopped:         6987
Number of times breaked:         36

Total time for CPA algorithm:         9.837s (Max:     0.576s)
  Time for choose from waitlist:      0.083s
  Time for precision adjustment:      2.727s
  Time for transfer relation:         6.051s
  Time for merge operator:            0.346s
  Time for stop operator:             0.120s
  Time for adding to reached set:     0.110s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                1938 (count: 36, min: 5, max: 73, avg: 53.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.767s
  Counterexample analysis:                             0.434s (Max:     0.019s, Calls: 36)
    Refinement sat check:                              0.283s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.086s
  ARG update:                                          0.181s

Length of refined path (in blocks):                    1902 (count: 36, min: 4, max: 72, avg: 52.83)
Number of affected states:                             1866 (count: 36, min: 3, max: 71, avg: 51.83)
Length (states) of path with itp 'true':                  0 (count: 36, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1866 (count: 36, min: 3, max: 71, avg: 51.83)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1830 (count: 36, min: 2, max: 70, avg: 50.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 2372
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1868.06
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      10.766s
Time for refinements:                 0.928s
Average time for refinement:          0.025s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.630
  Visited lines:          4360
  Total lines:            4408
  Line coverage:          0.989
  Visited conditions:     422
  Total conditions:       442
  Condition coverage:     0.955

CPAchecker general statistics
-----------------------------
Number of program locations:     4889
Number of CFA edges:             5267
Number of relevant variables:    446
Number of functions:             27
Number of loops:                 10
Size of reached set:             1997
  Number of reached locations:   1441 (29%)
    Avg states per location:     1
    Max states per location:     155 (at node N0)
  Number of reached functions:   17 (63%)
  Number of partitions:          1997
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.773s
  Time for loading CPAs:          0.610s
  Time for loading parser:        0.468s
  Time for CFA construction:      2.611s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.723s
    Time for CFA sanity check:    0.245s
    Time for post-processing:     0.852s
      Time for var class.:        0.338s
Time for Analysis:               10.766s
CPU time for analysis:           10.770s
Time for analyzing result:        0.001s
Total time for CPAchecker:       14.541s
Total CPU time for CPAchecker:   14.540s
Time for statistics:              0.097s

Time for Garbage Collector:       0.475s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     49MB (    46 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8016MB (  7645 MiB) max;   8002MB (  7631 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
