scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--mtd--mtdoops.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pe3zje_z/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2101: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2104: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2107: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2113: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 2601: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2604: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2607: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2613: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 2674: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2677: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2680: Dead code detected: Goto: case_4___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2686: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmsg_dump_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_mtd_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmsg_dump_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            583 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  473 (81%)
  Because of loop head:            99 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (2%)
  Times precision was empty:       153 (26%)
  Times precision was {false}:     32 (5%)
  Times result was cached:         350 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      48 (8%)
  Times result was 'false':        21 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         828
  BDD entailment checks:           178
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       94
Number of predicates discovered:          3
Number of abstraction locations:          37
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         444
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 5.55
Number of irrelevant predicates:          145 (33%)
Number of preds handled by boolean abs:   53 (12%)
  Total number of models for allsat:      51
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.636s
  Time for path formula creation:        0.629s
Time for strengthen operator:            0.027s
Time for prec operator:                  0.573s
  Time for abstraction:                  0.543s (Max:     0.037s, Count: 583)
    Boolean abstraction:                 0.177s
    Solving time:                        0.197s (Max:     0.034s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.007s (Max:     0.006s)
Time for merge operator:                 0.063s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.003s
Total time for SMT solver (w/o itp):     0.218s

Number of path formula cache hits:   8756 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.591s

Total number of created targets for pointer analysis: 14
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          63 (count: 790, min: 0, max: 33, avg: 0.08)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.129s
Automaton transfers with branching:                0
Automaton transfer successors:                        12243 (count: 12243, min: 1, max: 1, avg: 1.00) [1 x 12243]

CPA algorithm statistics
------------------------
Number of iterations:            3414
Max size of waitlist:            13
Average size of waitlist:        4
Number of computed successors:   3903
Max successors for one state:    2
Number of times merged:          325
Number of times stopped:         434
Number of times breaked:         11

Total time for CPA algorithm:         1.964s (Max:     0.430s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.663s
  Time for transfer relation:         1.101s
  Time for merge operator:            0.084s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.009s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 194 (count: 11, min: 5, max: 29, avg: 17.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.218s
  Counterexample analysis:                             0.160s (Max:     0.022s, Calls: 11)
    Refinement sat check:                              0.124s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.015s
  ARG update:                                          0.014s

Length of refined path (in blocks):                     171 (count: 11, min: 4, max: 28, avg: 15.55)
Number of affected states:                              151 (count: 11, min: 1, max: 27, avg: 13.73)
Length (states) of path with itp 'true':                  9 (count: 11, min: 0, max: 9, avg: 0.82)
Length (states) of path with itp non-trivial itp:       151 (count: 11, min: 1, max: 27, avg: 13.73)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             140 (count: 11, min: 0, max: 26, avg: 12.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 476
Max. size of reached set after ref.:  172
Avg. size of reached set before ref.: 294.45
Avg. size of reached set after ref.:  18.36

Total time for CEGAR algorithm:       2.204s
Time for refinements:                 0.240s
Average time for refinement:          0.021s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1280
  Total lines:            2173
  Line coverage:          0.589
  Visited conditions:     82
  Total conditions:       156
  Condition coverage:     0.526

CPAchecker general statistics
-----------------------------
Number of program locations:     2438
Number of CFA edges:             2517
Number of relevant variables:    567
Number of functions:             36
Number of loops:                 5
Size of reached set:             412
  Number of reached locations:   277 (11%)
    Avg states per location:     1
    Max states per location:     5 (at node N1311)
  Number of reached functions:   18 (50%)
  Number of partitions:          411
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1171 (before lines 3570-3753), Function find_next_position called from node N1720, stack depth 3 [43e065f2], stack [main, mtdoops_notify_add, find_next_position]])
  Number of target states:       0

Time for analysis setup:          2.834s
  Time for loading CPAs:          0.590s
  Time for loading parser:        0.386s
  Time for CFA construction:      1.753s
    Time for parsing file(s):     0.514s
    Time for AST to CFA:          0.605s
    Time for CFA sanity check:    0.098s
    Time for post-processing:     0.425s
      Time for var class.:        0.215s
Time for Analysis:                2.204s
CPU time for analysis:            2.200s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.041s
Total CPU time for CPAchecker:    5.040s
Time for statistics:              0.063s

Time for Garbage Collector:       0.104s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     36MB (    34 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7985MB (  7615 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
