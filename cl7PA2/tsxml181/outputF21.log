scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--gpio-fan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t91v_vu6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 891: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4446 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3410 (77%)
  Because of loop head:            1014 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       1733 (39%)
  Times precision was {false}:     109 (2%)
  Times result was cached:         2497 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      107 (2%)
  Times result was 'false':        43 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2876
  BDD entailment checks:           1596
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          2
Number of abstraction locations:          62
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2713
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 12.56
Number of irrelevant predicates:          804 (30%)
Number of preds handled by boolean abs:   107 (4%)
  Total number of models for allsat:      107
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.087s
  Time for path formula creation:        1.024s
Time for strengthen operator:            0.078s
Time for prec operator:                  1.056s
  Time for abstraction:                  0.918s (Max:     0.016s, Count: 4446)
    Boolean abstraction:                 0.115s
    Solving time:                        0.120s (Max:     0.013s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.022s (Max:     0.011s)
Time for merge operator:                 0.046s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.137s

Number of path formula cache hits:   47247 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.859s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         205 (count: 4521, min: 0, max: 36, avg: 0.05)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.196s
Automaton transfers with branching:                0
Automaton transfer successors:                        49445 (count: 49445, min: 1, max: 1, avg: 1.00) [1 x 49445]

CPA algorithm statistics
------------------------
Number of iterations:            18554
Max size of waitlist:            21
Average size of waitlist:        11
Number of computed successors:   20567
Max successors for one state:    2
Number of times merged:          640
Number of times stopped:         1914
Number of times breaked:         22

Total time for CPA algorithm:         3.926s (Max:     0.661s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      1.371s
  Time for transfer relation:         2.043s
  Time for merge operator:            0.097s
  Time for stop operator:             0.113s
  Time for adding to reached set:     0.086s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 326 (count: 22, min: 4, max: 26, avg: 14.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.354s
  Counterexample analysis:                             0.235s (Max:     0.019s, Calls: 22)
    Refinement sat check:                              0.162s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.015s
  ARG update:                                          0.078s

Length of refined path (in blocks):                     304 (count: 22, min: 3, max: 25, avg: 13.82)
Number of affected states:                              282 (count: 22, min: 2, max: 24, avg: 12.82)
Length (states) of path with itp 'true':                  0 (count: 22, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       282 (count: 22, min: 2, max: 24, avg: 12.82)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             260 (count: 22, min: 1, max: 23, avg: 11.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 1175
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 817.09
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.335s
Time for refinements:                 0.406s
Average time for refinement:          0.018s
Max time for refinement:              0.037s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          966
  Total lines:            1481
  Line coverage:          0.652
  Visited conditions:     88
  Total conditions:       136
  Condition coverage:     0.647

CPAchecker general statistics
-----------------------------
Number of program locations:     1795
Number of CFA edges:             1867
Number of relevant variables:    368
Number of functions:             52
Number of loops:                 8
Size of reached set:             701
  Number of reached locations:   355 (20%)
    Avg states per location:     1
    Max states per location:     7 (at node N93)
  Number of reached functions:   26 (50%)
  Number of partitions:          701
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.592s
  Time for loading CPAs:          0.507s
  Time for loading parser:        0.437s
  Time for CFA construction:      1.536s
    Time for parsing file(s):     0.473s
    Time for AST to CFA:          0.481s
    Time for CFA sanity check:    0.093s
    Time for post-processing:     0.369s
      Time for var class.:        0.208s
Time for Analysis:                4.335s
CPU time for analysis:            4.330s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.930s
Total CPU time for CPAchecker:    6.920s
Time for statistics:              0.067s

Time for Garbage Collector:       0.137s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     38MB (    36 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7995MB (  7624 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
