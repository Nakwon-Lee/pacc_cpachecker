scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--ftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8c2zz7a0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 2986: Function pointer *__cil_tmp10 with type void (*)(struct mtd_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2986: Ignoring call via function pointer mtd_sync::__cil_tmp10 for which no suitable target was found in line: (*__cil_tmp10)(mtd); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2986: Ignoring function call through function pointer *__cil_tmp10: (*__cil_tmp10)(mtd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6688 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4688 (70%)
  Because of loop head:            1964 (29%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (1%)
  Times precision was empty:       1520 (23%)
  Times precision was {false}:     408 (6%)
  Times result was cached:         4549 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      211 (3%)
  Times result was 'false':        378 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         12539
  BDD entailment checks:           2383
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       405
Number of predicates discovered:          4
Number of abstraction locations:          78
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         5719
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 9.24
Number of irrelevant predicates:          1293 (23%)
Number of preds handled by boolean abs:   221 (4%)
  Total number of models for allsat:      240
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  3.888s
  Time for path formula creation:        3.749s
Time for strengthen operator:            0.176s
Time for prec operator:                  5.324s
  Time for abstraction:                  5.081s (Max:     0.044s, Count: 6688)
    Boolean abstraction:                 1.326s
    Solving time:                        2.211s (Max:     0.032s)
    Model enumeration time:              0.217s
    Time for BDD construction:           0.042s (Max:     0.009s)
Time for merge operator:                 0.268s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     2.428s

Number of path formula cache hits:   205661 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.322s

Total number of created targets for pointer analysis: 692
   Number of created targets for uf: *unsigned_short_int is 6
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *unsigned_int is 17
   Number of created targets for uf: *unsigned_long_int is 37


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         435 (count: 7277, min: 0, max: 45, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.492s
Automaton transfers with branching:                0
Automaton transfer successors:                       236819 (count: 236819, min: 1, max: 1, avg: 1.00) [1 x 236819]

CPA algorithm statistics
------------------------
Number of iterations:            45271
Max size of waitlist:            19
Average size of waitlist:        11
Number of computed successors:   53075
Max successors for one state:    2
Number of times merged:          5078
Number of times stopped:         7015
Number of times breaked:         36

Total time for CPA algorithm:        13.109s (Max:     0.785s)
  Time for choose from waitlist:      0.060s
  Time for precision adjustment:      5.737s
  Time for transfer relation:         6.218s
  Time for merge operator:            0.414s
  Time for stop operator:             0.189s
  Time for adding to reached set:     0.166s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 858 (count: 36, min: 8, max: 53, avg: 23.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.043s
  Counterexample analysis:                             0.834s (Max:     0.043s, Calls: 36)
    Refinement sat check:                              0.633s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.023s
  ARG update:                                          0.130s

Length of refined path (in blocks):                     809 (count: 36, min: 7, max: 52, avg: 22.47)
Number of affected states:                              756 (count: 36, min: 1, max: 51, avg: 21.00)
Length (states) of path with itp 'true':                 17 (count: 36, min: 0, max: 9, avg: 0.47)
Length (states) of path with itp non-trivial itp:       756 (count: 36, min: 1, max: 51, avg: 21.00)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             720 (count: 36, min: 0, max: 50, avg: 20.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 1733
Max. size of reached set after ref.:  514
Avg. size of reached set before ref.: 1252.75
Avg. size of reached set after ref.:  20.97

Total time for CEGAR algorithm:      14.260s
Time for refinements:                 1.149s
Average time for refinement:          0.031s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.794
  Visited lines:          4412
  Total lines:            4539
  Line coverage:          0.972
  Visited conditions:     272
  Total conditions:       286
  Condition coverage:     0.951

CPAchecker general statistics
-----------------------------
Number of program locations:     4829
Number of CFA edges:             4977
Number of relevant variables:    1617
Number of functions:             34
Number of loops:                 19
Size of reached set:             1339
  Number of reached locations:   768 (16%)
    Avg states per location:     1
    Max states per location:     7 (at node N3510)
  Number of reached functions:   27 (79%)
  Number of partitions:          1337
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2713 (before line 5925), Function reclaim_block called from node N3713, stack depth 4 [43264e4a], stack [main, ftl_writesect, ftl_write, reclaim_block]])
  Number of target states:       0

Time for analysis setup:          3.715s
  Time for loading CPAs:          0.682s
  Time for loading parser:        0.443s
  Time for CFA construction:      2.518s
    Time for parsing file(s):     0.638s
    Time for AST to CFA:          0.749s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.744s
      Time for var class.:        0.381s
Time for Analysis:               14.260s
CPU time for analysis:           14.260s
Time for analyzing result:        0.001s
Total time for CPAchecker:       17.978s
Total CPU time for CPAchecker:   17.960s
Time for statistics:              0.089s

Time for Garbage Collector:       0.539s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     53MB (    50 MiB) avg;     93MB (    89 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
