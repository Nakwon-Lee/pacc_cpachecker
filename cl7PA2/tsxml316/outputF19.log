scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--target--loopback--tcm_loop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4ce7ydz1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6839: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6842: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6845: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 6851: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9754: Function pointer *__cil_tmp45 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9987: Function pointer *__cil_tmp77 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8344: Function pointer *__cil_tmp39 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8216: Function pointer *__cil_tmp147 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __root_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bus_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bus_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function root_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function target_fabric_configfs_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function target_fabric_configfs_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function target_fabric_configfs_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function target_fabric_configfs_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_track_queue_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8344: Ignoring call via function pointer tcm_loop_queuecommand::__cil_tmp39 for which no suitable target was found in line: (*__cil_tmp39)(sc); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8344: Ignoring function call through function pointer *__cil_tmp39: (*__cil_tmp39)(sc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function transport_init_se_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function core_tmr_alloc_req to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function transport_lookup_tmr_lun to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function transport_generic_handle_tmr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function transport_generic_free_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5369 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5005 (93%)
  Because of loop head:            329 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (1%)
  Times precision was empty:       1871 (35%)
  Times precision was {false}:     159 (3%)
  Times result was cached:         3177 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      162 (3%)
  Times result was 'false':        47 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3640
  BDD entailment checks:           1504
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       203
Number of predicates discovered:          3
Number of abstraction locations:          76
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         5112
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 15.93
Number of irrelevant predicates:          2020 (40%)
Number of preds handled by boolean abs:   195 (4%)
  Total number of models for allsat:      165
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  3.289s
  Time for path formula creation:        3.212s
Time for strengthen operator:            0.111s
Time for prec operator:                  1.881s
  Time for abstraction:                  1.637s (Max:     0.026s, Count: 5369)
    Boolean abstraction:                 0.247s
    Solving time:                        0.240s (Max:     0.019s)
    Model enumeration time:              0.047s
    Time for BDD construction:           0.013s (Max:     0.006s)
Time for merge operator:                 0.213s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.287s

Number of path formula cache hits:   50084 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.480s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         327 (count: 5151, min: 0, max: 56, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.274s
Automaton transfers with branching:                0
Automaton transfer successors:                        71631 (count: 71631, min: 1, max: 1, avg: 1.00) [1 x 71631]

CPA algorithm statistics
------------------------
Number of iterations:            24165
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   26590
Max successors for one state:    2
Number of times merged:          1068
Number of times stopped:         2160
Number of times breaked:         35

Total time for CPA algorithm:         7.725s (Max:     0.825s)
  Time for choose from waitlist:      0.029s
  Time for precision adjustment:      2.237s
  Time for transfer relation:         4.697s
  Time for merge operator:            0.258s
  Time for stop operator:             0.108s
  Time for adding to reached set:     0.099s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                 924 (count: 35, min: 5, max: 46, avg: 26.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.970s
  Counterexample analysis:                             0.783s (Max:     0.039s, Calls: 35)
    Refinement sat check:                              0.568s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.042s
  ARG update:                                          0.078s

Length of refined path (in blocks):                     835 (count: 35, min: 4, max: 45, avg: 23.86)
Number of affected states:                              800 (count: 35, min: 3, max: 44, avg: 22.86)
Length (states) of path with itp 'true':                  0 (count: 35, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       800 (count: 35, min: 3, max: 44, avg: 22.86)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 35, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             765 (count: 35, min: 2, max: 43, avg: 21.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 1044
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 681.31
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.806s
Time for refinements:                 1.080s
Average time for refinement:          0.030s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.314
  Visited lines:          2284
  Total lines:            4692
  Line coverage:          0.487
  Visited conditions:     98
  Total conditions:       290
  Condition coverage:     0.338

CPAchecker general statistics
-----------------------------
Number of program locations:     5310
Number of CFA edges:             5473
Number of relevant variables:    1144
Number of functions:             102
Number of loops:                 4
Size of reached set:             643
  Number of reached locations:   425 (8%)
    Avg states per location:     1
    Max states per location:     12 (at node N4496)
  Number of reached functions:   32 (31%)
  Number of partitions:          641
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4288 (before line 12252), Function main called from node N4267, stack depth 1 [52f57666], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.234s
  Time for loading CPAs:          0.728s
  Time for loading parser:        0.418s
  Time for CFA construction:      3.003s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          1.099s
    Time for CFA sanity check:    0.283s
    Time for post-processing:     0.807s
      Time for var class.:        0.355s
Time for Analysis:                8.806s
CPU time for analysis:            8.800s
Time for analyzing result:        0.007s
Total time for CPAchecker:       13.045s
Total CPU time for CPAchecker:   13.020s
Time for statistics:              0.056s

Time for Garbage Collector:       0.400s (in 26 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     50MB (    48 MiB) avg;     81MB (    78 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     32MB (    30 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
