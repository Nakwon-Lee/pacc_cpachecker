scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--arcnet--arc-rawmode_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f_pdo_2g/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4949: Function pointer *__cil_tmp36 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4958: Function pointer *__cil_tmp41 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4770: Function pointer *__cil_tmp43 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4770: Ignoring call via function pointer rx::__cil_tmp43 for which no suitable target was found in line: (*__cil_tmp43)(dev, bufnum, __cil_tmp46, __cil_tmp51, __cil_tmp54); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4770: Ignoring function call through function pointer *__cil_tmp43: (*__cil_tmp43)(dev, bufnum, __cil_tmp46, __cil_tmp51, __cil_tmp54); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4949: Ignoring call via function pointer prepare_tx::__cil_tmp36 for which no suitable target was found in line: (*__cil_tmp36)(dev, bufnum, 0, __cil_tmp37, 4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4949: Ignoring function call through function pointer *__cil_tmp36: (*__cil_tmp36)(dev, bufnum, 0, __cil_tmp37, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4958: Ignoring call via function pointer prepare_tx::__cil_tmp41 for which no suitable target was found in line: (*__cil_tmp41)(dev, bufnum, ofs, __cil_tmp45, length); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4958: Ignoring function call through function pointer *__cil_tmp41: (*__cil_tmp41)(dev, bufnum, ofs, __cil_tmp45, length); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function arcnet_unregister_proto to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            237 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  190 (80%)
  Because of loop head:            42 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (2%)
  Times precision was empty:       74 (31%)
  Times precision was {false}:     31 (13%)
  Times result was cached:         104 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28 (12%)
  Times result was 'false':        5 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         195
  BDD entailment checks:           53
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          2
Number of abstraction locations:          22
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         163
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.76
Number of irrelevant predicates:          61 (37%)
Number of preds handled by boolean abs:   28 (17%)
  Total number of models for allsat:      30
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.559s
  Time for path formula creation:        0.551s
Time for strengthen operator:            0.006s
Time for prec operator:                  0.284s
  Time for abstraction:                  0.255s (Max:     0.018s, Count: 237)
    Boolean abstraction:                 0.043s
    Solving time:                        0.042s (Max:     0.017s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.009s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.044s

Number of path formula cache hits:   1725 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.499s

Total number of created targets for pointer analysis: 20
   Number of created targets for uf: *(struct_ArcProto)* is 21


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          51 (count: 455, min: 0, max: 51, avg: 0.11)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.089s
Automaton transfers with branching:                0
Automaton transfer successors:                         3759 (count: 3759, min: 1, max: 1, avg: 1.00) [1 x 3759]

CPA algorithm statistics
------------------------
Number of iterations:            1110
Max size of waitlist:            11
Average size of waitlist:        4
Number of computed successors:   1246
Max successors for one state:    2
Number of times merged:          71
Number of times stopped:         107
Number of times breaked:         5

Total time for CPA algorithm:         1.382s (Max:     0.613s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.419s
  Time for transfer relation:         0.847s
  Time for merge operator:            0.036s
  Time for stop operator:             0.032s
  Time for adding to reached set:     0.008s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  87 (count: 5, min: 11, max: 24, avg: 17.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.089s
  Counterexample analysis:                             0.035s (Max:     0.011s, Calls: 5)
    Refinement sat check:                              0.024s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.006s
  ARG update:                                          0.034s

Length of refined path (in blocks):                      82 (count: 5, min: 10, max: 23, avg: 16.40)
Number of affected states:                               77 (count: 5, min: 9, max: 22, avg: 15.40)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        77 (count: 5, min: 9, max: 22, avg: 15.40)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              72 (count: 5, min: 8, max: 21, avg: 14.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 248
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 197.60
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.505s
Time for refinements:                 0.122s
Average time for refinement:          0.024s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.478
  Visited lines:          1141
  Total lines:            1185
  Line coverage:          0.963
  Visited conditions:     40
  Total conditions:       48
  Condition coverage:     0.833

CPAchecker general statistics
-----------------------------
Number of program locations:     1307
Number of CFA edges:             1328
Number of relevant variables:    139
Number of functions:             23
Number of loops:                 2
Size of reached set:             162
  Number of reached locations:   152 (12%)
    Avg states per location:     1
    Max states per location:     4 (at node N464)
  Number of reached functions:   11 (48%)
  Number of partitions:          162
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.114s
  Time for loading CPAs:          0.735s
  Time for loading parser:        0.477s
  Time for CFA construction:      1.811s
    Time for parsing file(s):     0.619s
    Time for AST to CFA:          0.607s
    Time for CFA sanity check:    0.089s
    Time for post-processing:     0.345s
      Time for var class.:        0.117s
Time for Analysis:                1.510s
CPU time for analysis:            1.510s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.627s
Total CPU time for CPAchecker:    4.610s
Time for statistics:              0.060s

Time for Garbage Collector:       0.124s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     32MB (    30 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8034MB (  7662 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
