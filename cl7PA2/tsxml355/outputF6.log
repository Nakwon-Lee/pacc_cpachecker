scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--w1--slaves--w1_ds2408.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mv8_iibn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_register_family to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_unregister_family to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            241 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  131 (54%)
  Because of loop head:            104 (43%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (2%)
  Times precision was empty:       98 (41%)
  Times precision was {false}:     25 (10%)
  Times result was cached:         92 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26 (11%)
  Times result was 'false':        12 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         142
  BDD entailment checks:           114
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       19
Number of predicates discovered:          3
Number of abstraction locations:          14
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         155
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 3.04
Number of irrelevant predicates:          74 (48%)
Number of preds handled by boolean abs:   29 (19%)
  Total number of models for allsat:      30
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.15

Time for post operator:                  0.301s
  Time for path formula creation:        0.294s
Time for strengthen operator:            0.025s
Time for prec operator:                  0.199s
  Time for abstraction:                  0.167s (Max:     0.017s, Count: 241)
    Boolean abstraction:                 0.028s
    Solving time:                        0.026s (Max:     0.007s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.006s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.026s

Number of path formula cache hits:   1042 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.261s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 505, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.039s
Automaton transfers with branching:                0
Automaton transfer successors:                         1995 (count: 1995, min: 1, max: 1, avg: 1.00) [1 x 1995]

CPA algorithm statistics
------------------------
Number of iterations:            923
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   1036
Max successors for one state:    2
Number of times merged:          14
Number of times stopped:         96
Number of times breaked:         6

Total time for CPA algorithm:         0.826s (Max:     0.255s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      0.267s
  Time for transfer relation:         0.486s
  Time for merge operator:            0.009s
  Time for stop operator:             0.019s
  Time for adding to reached set:     0.019s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  64 (count: 6, min: 5, max: 14, avg: 10.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.065s
  Counterexample analysis:                             0.035s (Max:     0.008s, Calls: 6)
    Refinement sat check:                              0.017s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.004s
  ARG update:                                          0.007s

Length of refined path (in blocks):                      52 (count: 6, min: 4, max: 13, avg: 8.67)
Number of affected states:                               42 (count: 6, min: 1, max: 12, avg: 7.00)
Length (states) of path with itp 'true':                  4 (count: 6, min: 0, max: 4, avg: 0.67)
Length (states) of path with itp non-trivial itp:        42 (count: 6, min: 1, max: 12, avg: 7.00)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              36 (count: 6, min: 0, max: 11, avg: 6.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 202
Max. size of reached set after ref.:  66
Avg. size of reached set before ref.: 150.17
Avg. size of reached set after ref.:  13.50

Total time for CEGAR algorithm:       0.904s
Time for refinements:                 0.078s
Average time for refinement:          0.013s
Max time for refinement:              0.035s

Code Coverage
-----------------------------
  Function coverage:      0.214
  Visited lines:          293
  Total lines:            1340
  Line coverage:          0.219
  Visited conditions:     20
  Total conditions:       128
  Condition coverage:     0.156

CPAchecker general statistics
-----------------------------
Number of program locations:     1548
Number of CFA edges:             1641
Number of relevant variables:    295
Number of functions:             28
Number of loops:                 7
Size of reached set:             109
  Number of reached locations:   82 (5%)
    Avg states per location:     1
    Max states per location:     3 (at node N1198)
  Number of reached functions:   6 (21%)
  Number of partitions:          108
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1221 (before lines 2296-2319), Function w1_f29_add_slave called from node N1364, stack depth 2 [721eb7df], stack [main, w1_f29_add_slave]])
  Number of target states:       0

Time for analysis setup:          2.923s
  Time for loading CPAs:          0.626s
  Time for loading parser:        0.540s
  Time for CFA construction:      1.642s
    Time for parsing file(s):     0.571s
    Time for AST to CFA:          0.467s
    Time for CFA sanity check:    0.098s
    Time for post-processing:     0.389s
      Time for var class.:        0.202s
Time for Analysis:                0.904s
CPU time for analysis:            0.900s
Time for analyzing result:        0.001s
Total time for CPAchecker:        3.830s
Total CPU time for CPAchecker:    3.820s
Time for statistics:              0.049s

Time for Garbage Collector:       0.112s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 48MB (    46 MiB) max;     30MB (    28 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     25MB (    23 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7968MB (  7599 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
