scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--ppp--bsd_comp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g9g096u8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_register_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_unregister_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3419 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2622 (77%)
  Because of loop head:            768 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (1%)
  Times precision was empty:       525 (15%)
  Times precision was {false}:     116 (3%)
  Times result was cached:         2658 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      120 (4%)
  Times result was 'false':        63 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         4555
  BDD entailment checks:           1055
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       295
Number of predicates discovered:          3
Number of abstraction locations:          60
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2997
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 12.70
Number of irrelevant predicates:          659 (22%)
Number of preds handled by boolean abs:   128 (4%)
  Total number of models for allsat:      126
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  1.205s
  Time for path formula creation:        1.117s
Time for strengthen operator:            0.113s
Time for prec operator:                  2.018s
  Time for abstraction:                  1.915s (Max:     0.031s, Count: 3419)
    Boolean abstraction:                 0.436s
    Solving time:                        0.631s (Max:     0.021s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.037s (Max:     0.010s)
Time for merge operator:                 0.111s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.662s

Number of path formula cache hits:   60493 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.047s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         251 (count: 2897, min: 0, max: 58, avg: 0.09)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.161s
Automaton transfers with branching:                0
Automaton transfer successors:                        66526 (count: 66526, min: 1, max: 1, avg: 1.00) [1 x 66526]

CPA algorithm statistics
------------------------
Number of iterations:            18308
Max size of waitlist:            20
Average size of waitlist:        8
Number of computed successors:   21368
Max successors for one state:    2
Number of times merged:          1750
Number of times stopped:         2604
Number of times breaked:         29

Total time for CPA algorithm:         5.233s (Max:     0.348s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      2.325s
  Time for transfer relation:         2.236s
  Time for merge operator:            0.169s
  Time for stop operator:             0.157s
  Time for adding to reached set:     0.111s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 417 (count: 29, min: 5, max: 19, avg: 14.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.564s
  Counterexample analysis:                             0.411s (Max:     0.032s, Calls: 29)
    Refinement sat check:                              0.289s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.030s
  ARG update:                                          0.073s

Length of refined path (in blocks):                     381 (count: 29, min: 4, max: 18, avg: 13.14)
Number of affected states:                              348 (count: 29, min: 2, max: 17, avg: 12.00)
Length (states) of path with itp 'true':                  4 (count: 29, min: 0, max: 4, avg: 0.14)
Length (states) of path with itp non-trivial itp:       348 (count: 29, min: 2, max: 17, avg: 12.00)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             319 (count: 29, min: 1, max: 16, avg: 11.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 1307
Max. size of reached set after ref.:  461
Avg. size of reached set before ref.: 618.10
Avg. size of reached set after ref.:  18.79

Total time for CEGAR algorithm:       5.877s
Time for refinements:                 0.643s
Average time for refinement:          0.022s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          2112
  Total lines:            2160
  Line coverage:          0.978
  Visited conditions:     216
  Total conditions:       236
  Condition coverage:     0.915

CPAchecker general statistics
-----------------------------
Number of program locations:     2427
Number of CFA edges:             2553
Number of relevant variables:    799
Number of functions:             30
Number of loops:                 10
Size of reached set:             1322
  Number of reached locations:   585 (24%)
    Avg states per location:     2
    Max states per location:     15 (at node N14)
  Number of reached functions:   20 (67%)
  Number of partitions:          1320
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1826 (before lines 2491-2834), Function bsd_decompress called from node N2331, stack depth 2 [4d204b30], stack [main, bsd_decompress]])
  Number of target states:       0

Time for analysis setup:          2.813s
  Time for loading CPAs:          0.624s
  Time for loading parser:        0.454s
  Time for CFA construction:      1.647s
    Time for parsing file(s):     0.474s
    Time for AST to CFA:          0.433s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.491s
      Time for var class.:        0.258s
Time for Analysis:                5.877s
CPU time for analysis:            5.880s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.692s
Total CPU time for CPAchecker:    8.690s
Time for statistics:              0.084s

Time for Garbage Collector:       0.168s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7998MB (  7628 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
