scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--ppp--bsd_comp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h9vq0ou1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_register_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_unregister_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8513 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5339 (63%)
  Because of loop head:            3146 (37%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       3376 (40%)
  Times precision was {false}:     473 (6%)
  Times result was cached:         4482 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      182 (2%)
  Times result was 'false':        55 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         18681
  BDD entailment checks:           4317
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       295
Number of predicates discovered:          3
Number of abstraction locations:          60
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         5419
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 8.27
Number of irrelevant predicates:          2907 (54%)
Number of preds handled by boolean abs:   190 (4%)
  Total number of models for allsat:      211
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.16

Time for post operator:                  4.674s
  Time for path formula creation:        4.547s
Time for strengthen operator:            0.284s
Time for prec operator:                  4.637s
  Time for abstraction:                  4.366s (Max:     0.039s, Count: 8513)
    Boolean abstraction:                 0.487s
    Solving time:                        1.904s (Max:     0.032s)
    Model enumeration time:              0.044s
    Time for BDD construction:           0.012s (Max:     0.007s)
Time for merge operator:                 0.459s
Time for coverage check:                 0.087s
  Time for BDD entailment checks:        0.075s
Total time for SMT solver (w/o itp):     1.948s

Number of path formula cache hits:   168869 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.209s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         367 (count: 11178, min: 0, max: 40, avg: 0.03)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.400s
Automaton transfers with branching:                0
Automaton transfer successors:                       251740 (count: 251740, min: 1, max: 1, avg: 1.00) [1 x 251740]

CPA algorithm statistics
------------------------
Number of iterations:            58795
Max size of waitlist:            45
Average size of waitlist:        21
Number of computed successors:   69337
Max successors for one state:    2
Number of times merged:          7182
Number of times stopped:         10072
Number of times breaked:         28

Total time for CPA algorithm:        14.141s (Max:     1.090s)
  Time for choose from waitlist:      0.073s
  Time for precision adjustment:      5.245s
  Time for transfer relation:         7.291s
  Time for merge operator:            0.651s
  Time for stop operator:             0.273s
  Time for adding to reached set:     0.163s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 412 (count: 28, min: 8, max: 19, avg: 14.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.582s
  Counterexample analysis:                             0.342s (Max:     0.034s, Calls: 28)
    Refinement sat check:                              0.237s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.023s
  ARG update:                                          0.178s

Length of refined path (in blocks):                     377 (count: 28, min: 7, max: 18, avg: 13.46)
Number of affected states:                              345 (count: 28, min: 2, max: 17, avg: 12.32)
Length (states) of path with itp 'true':                  4 (count: 28, min: 0, max: 4, avg: 0.14)
Length (states) of path with itp non-trivial itp:       345 (count: 28, min: 2, max: 17, avg: 12.32)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             317 (count: 28, min: 1, max: 16, avg: 11.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 2505
Max. size of reached set after ref.:  968
Avg. size of reached set before ref.: 2104.93
Avg. size of reached set after ref.:  37.46

Total time for CEGAR algorithm:      14.863s
Time for refinements:                 0.714s
Average time for refinement:          0.025s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          2112
  Total lines:            2160
  Line coverage:          0.978
  Visited conditions:     216
  Total conditions:       236
  Condition coverage:     0.915

CPAchecker general statistics
-----------------------------
Number of program locations:     2427
Number of CFA edges:             2553
Number of relevant variables:    799
Number of functions:             30
Number of loops:                 10
Size of reached set:             1322
  Number of reached locations:   585 (24%)
    Avg states per location:     2
    Max states per location:     15 (at node N14)
  Number of reached functions:   20 (67%)
  Number of partitions:          1320
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1826 (before lines 2491-2834), Function bsd_decompress called from node N2331, stack depth 2 [4b77b7e1], stack [main, bsd_decompress]])
  Number of target states:       0

Time for analysis setup:          2.903s
  Time for loading CPAs:          0.678s
  Time for loading parser:        0.429s
  Time for CFA construction:      1.718s
    Time for parsing file(s):     0.503s
    Time for AST to CFA:          0.469s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.468s
      Time for var class.:        0.260s
Time for Analysis:               14.864s
CPU time for analysis:           14.860s
Time for analyzing result:        0.001s
Total time for CPAchecker:       17.769s
Total CPU time for CPAchecker:   17.760s
Time for statistics:              0.067s

Time for Garbage Collector:       0.670s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                109MB (   104 MiB) max;     62MB (    59 MiB) avg;    117MB (   112 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
