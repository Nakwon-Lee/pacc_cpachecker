scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--ppp--bsd_comp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mdbcoddz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_register_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ppp_unregister_compressor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9596 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6429 (67%)
  Because of loop head:            3139 (33%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       3785 (39%)
  Times precision was {false}:     680 (7%)
  Times result was cached:         5002 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      129 (1%)
  Times result was 'false':        31 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         21085
  BDD entailment checks:           4351
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       295
Number of predicates discovered:          3
Number of abstraction locations:          60
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         5848
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 7.23
Number of irrelevant predicates:          3476 (59%)
Number of preds handled by boolean abs:   137 (2%)
  Total number of models for allsat:      140
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  6.726s
  Time for path formula creation:        6.523s
Time for strengthen operator:            0.261s
Time for prec operator:                  5.441s
  Time for abstraction:                  5.220s (Max:     0.034s, Count: 9596)
    Boolean abstraction:                 0.457s
    Solving time:                        2.502s (Max:     0.031s)
    Model enumeration time:              0.054s
    Time for BDD construction:           0.018s (Max:     0.007s)
Time for merge operator:                 0.620s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     2.556s

Number of path formula cache hits:   155683 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.055s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         263 (count: 12322, min: 0, max: 56, avg: 0.02)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.477s
Automaton transfers with branching:                0
Automaton transfer successors:                       289217 (count: 289217, min: 1, max: 1, avg: 1.00) [1 x 289217]

CPA algorithm statistics
------------------------
Number of iterations:            67384
Max size of waitlist:            26
Average size of waitlist:        15
Number of computed successors:   79377
Max successors for one state:    2
Number of times merged:          8367
Number of times stopped:         11875
Number of times breaked:         28

Total time for CPA algorithm:        17.764s (Max:     1.518s)
  Time for choose from waitlist:      0.083s
  Time for precision adjustment:      6.438s
  Time for transfer relation:         9.574s
  Time for merge operator:            0.868s
  Time for stop operator:             0.177s
  Time for adding to reached set:     0.124s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 428 (count: 28, min: 8, max: 21, avg: 15.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.642s
  Counterexample analysis:                             0.375s (Max:     0.038s, Calls: 28)
    Refinement sat check:                              0.269s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.009s
  ARG update:                                          0.222s

Length of refined path (in blocks):                     393 (count: 28, min: 7, max: 20, avg: 14.04)
Number of affected states:                              361 (count: 28, min: 2, max: 19, avg: 12.89)
Length (states) of path with itp 'true':                  4 (count: 28, min: 0, max: 4, avg: 0.14)
Length (states) of path with itp non-trivial itp:       361 (count: 28, min: 2, max: 19, avg: 12.89)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             333 (count: 28, min: 1, max: 18, avg: 11.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 2807
Max. size of reached set after ref.:  940
Avg. size of reached set before ref.: 2398.96
Avg. size of reached set after ref.:  36.46

Total time for CEGAR algorithm:      18.517s
Time for refinements:                 0.750s
Average time for refinement:          0.026s
Max time for refinement:              0.071s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          2112
  Total lines:            2160
  Line coverage:          0.978
  Visited conditions:     216
  Total conditions:       236
  Condition coverage:     0.915

CPAchecker general statistics
-----------------------------
Number of program locations:     2427
Number of CFA edges:             2553
Number of relevant variables:    799
Number of functions:             30
Number of loops:                 10
Size of reached set:             1322
  Number of reached locations:   585 (24%)
    Avg states per location:     2
    Max states per location:     15 (at node N14)
  Number of reached functions:   20 (67%)
  Number of partitions:          1320
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1826 (before lines 2491-2834), Function bsd_decompress called from node N2331, stack depth 2 [577fe3fc], stack [main, bsd_decompress]])
  Number of target states:       0

Time for analysis setup:          3.396s
  Time for loading CPAs:          0.750s
  Time for loading parser:        0.488s
  Time for CFA construction:      2.064s
    Time for parsing file(s):     0.561s
    Time for AST to CFA:          0.646s
    Time for CFA sanity check:    0.156s
    Time for post-processing:     0.557s
      Time for var class.:        0.294s
Time for Analysis:               18.523s
CPU time for analysis:           18.520s
Time for analyzing result:        0.001s
Total time for CPAchecker:       21.921s
Total CPU time for CPAchecker:   21.910s
Time for statistics:              0.065s

Time for Garbage Collector:       1.335s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                151MB (   144 MiB) max;     69MB (    66 MiB) avg;    163MB (   155 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           205MB (   196 MiB) max;    138MB (   132 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8009MB (  7638 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
