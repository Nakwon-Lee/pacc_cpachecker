scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--common--tuners--mt2266.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p3edrbs3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1401 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1158 (83%)
  Because of loop head:            228 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (1%)
  Times precision was empty:       459 (33%)
  Times precision was {false}:     91 (6%)
  Times result was cached:         797 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      54 (4%)
  Times result was 'false':        15 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3553
  BDD entailment checks:           491
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       160
Number of predicates discovered:          2
Number of abstraction locations:          36
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         942
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.50
Number of irrelevant predicates:          407 (43%)
Number of preds handled by boolean abs:   54 (6%)
  Total number of models for allsat:      54
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.832s
  Time for path formula creation:        1.799s
Time for strengthen operator:            0.045s
Time for prec operator:                  4.185s
  Time for abstraction:                  4.088s (Max:     0.146s, Count: 1401)
    Boolean abstraction:                 1.173s
    Solving time:                        3.019s (Max:     0.128s)
    Model enumeration time:              0.048s
    Time for BDD construction:           0.018s (Max:     0.009s)
Time for merge operator:                 0.115s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     3.067s

Number of path formula cache hits:   27392 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.595s

Total number of created targets for pointer analysis: 11420
   Number of created targets for uf: *unsigned_char is 494


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         107 (count: 1734, min: 0, max: 30, avg: 0.06)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.160s
Automaton transfers with branching:                0
Automaton transfer successors:                        34570 (count: 34570, min: 1, max: 1, avg: 1.00) [1 x 34570]

CPA algorithm statistics
------------------------
Number of iterations:            11050
Max size of waitlist:            30
Average size of waitlist:        10
Number of computed successors:   13047
Max successors for one state:    2
Number of times merged:          1531
Number of times stopped:         1845
Number of times breaked:         15

Total time for CPA algorithm:         7.434s (Max:     1.323s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      4.347s
  Time for transfer relation:         2.608s
  Time for merge operator:            0.194s
  Time for stop operator:             0.089s
  Time for adding to reached set:     0.064s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 177 (count: 15, min: 4, max: 20, avg: 11.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.866s
  Counterexample analysis:                             0.776s (Max:     0.148s, Calls: 15)
    Refinement sat check:                              0.695s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.010s
  ARG update:                                          0.044s

Length of refined path (in blocks):                     162 (count: 15, min: 3, max: 19, avg: 10.80)
Number of affected states:                              147 (count: 15, min: 2, max: 18, avg: 9.80)
Length (states) of path with itp 'true':                  0 (count: 15, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       147 (count: 15, min: 2, max: 18, avg: 9.80)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             132 (count: 15, min: 1, max: 17, avg: 8.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 930
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 701.07
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.331s
Time for refinements:                 0.897s
Average time for refinement:          0.059s
Max time for refinement:              0.153s

Code Coverage
-----------------------------
  Function coverage:      0.478
  Visited lines:          1268
  Total lines:            1488
  Line coverage:          0.852
  Visited conditions:     100
  Total conditions:       128
  Condition coverage:     0.781

CPAchecker general statistics
-----------------------------
Number of program locations:     1658
Number of CFA edges:             1746
Number of relevant variables:    323
Number of functions:             23
Number of loops:                 2
Size of reached set:             717
  Number of reached locations:   299 (18%)
    Avg states per location:     2
    Max states per location:     13 (at node N98)
  Number of reached functions:   11 (48%)
  Number of partitions:          717
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.034s
  Time for loading CPAs:          0.693s
  Time for loading parser:        0.442s
  Time for CFA construction:      1.826s
    Time for parsing file(s):     0.602s
    Time for AST to CFA:          0.607s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.418s
      Time for var class.:        0.202s
Time for Analysis:                8.331s
CPU time for analysis:            8.330s
Time for analyzing result:        0.000s
Total time for CPAchecker:       11.368s
Total CPU time for CPAchecker:   11.370s
Time for statistics:              0.058s

Time for Garbage Collector:       0.165s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8066MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
