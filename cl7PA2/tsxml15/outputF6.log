scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--common--tuners--mt2266.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_onwl42yo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1917 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1633 (85%)
  Because of loop head:            269 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (1%)
  Times precision was empty:       578 (30%)
  Times precision was {false}:     217 (11%)
  Times result was cached:         1068 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      54 (3%)
  Times result was 'false':        1 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         5811
  BDD entailment checks:           649
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       160
Number of predicates discovered:          2
Number of abstraction locations:          36
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1339
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.94
Number of irrelevant predicates:          743 (55%)
Number of preds handled by boolean abs:   54 (4%)
  Total number of models for allsat:      54
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.222s
  Time for path formula creation:        5.135s
Time for strengthen operator:            0.056s
Time for prec operator:                  8.573s
  Time for abstraction:                  8.478s (Max:     0.149s, Count: 1917)
    Boolean abstraction:                 1.211s
    Solving time:                        6.489s (Max:     0.147s)
    Model enumeration time:              0.051s
    Time for BDD construction:           0.021s (Max:     0.013s)
Time for merge operator:                 0.161s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     6.540s

Number of path formula cache hits:   20438 (38%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.850s

Total number of created targets for pointer analysis: 101212
   Number of created targets for uf: *unsigned_char is 19472


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         109 (count: 2641, min: 0, max: 30, avg: 0.04)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.211s
Automaton transfers with branching:                0
Automaton transfer successors:                        52530 (count: 52530, min: 1, max: 1, avg: 1.00) [1 x 52530]

CPA algorithm statistics
------------------------
Number of iterations:            16738
Max size of waitlist:            30
Average size of waitlist:        12
Number of computed successors:   19853
Max successors for one state:    2
Number of times merged:          2581
Number of times stopped:         3030
Number of times breaked:         15

Total time for CPA algorithm:        15.939s (Max:     2.356s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      8.919s
  Time for transfer relation:         6.317s
  Time for merge operator:            0.284s
  Time for stop operator:             0.120s
  Time for adding to reached set:     0.090s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 177 (count: 15, min: 4, max: 20, avg: 11.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.078s
  Counterexample analysis:                             0.956s (Max:     0.210s, Calls: 15)
    Refinement sat check:                              0.854s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.024s
  ARG update:                                          0.062s

Length of refined path (in blocks):                     162 (count: 15, min: 3, max: 19, avg: 10.80)
Number of affected states:                              147 (count: 15, min: 2, max: 18, avg: 9.80)
Length (states) of path with itp 'true':                  0 (count: 15, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       147 (count: 15, min: 2, max: 18, avg: 9.80)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             132 (count: 15, min: 1, max: 17, avg: 8.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 1482
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1076.73
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      17.125s
Time for refinements:                 1.184s
Average time for refinement:          0.078s
Max time for refinement:              0.265s

Code Coverage
-----------------------------
  Function coverage:      0.478
  Visited lines:          1268
  Total lines:            1488
  Line coverage:          0.852
  Visited conditions:     100
  Total conditions:       128
  Condition coverage:     0.781

CPAchecker general statistics
-----------------------------
Number of program locations:     1658
Number of CFA edges:             1746
Number of relevant variables:    323
Number of functions:             23
Number of loops:                 2
Size of reached set:             717
  Number of reached locations:   299 (18%)
    Avg states per location:     2
    Max states per location:     13 (at node N98)
  Number of reached functions:   11 (48%)
  Number of partitions:          717
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.116s
  Time for loading CPAs:          0.672s
  Time for loading parser:        0.443s
  Time for CFA construction:      1.911s
    Time for parsing file(s):     0.650s
    Time for AST to CFA:          0.613s
    Time for CFA sanity check:    0.099s
    Time for post-processing:     0.414s
      Time for var class.:        0.198s
Time for Analysis:               17.125s
CPU time for analysis:           17.120s
Time for analyzing result:        0.001s
Total time for CPAchecker:       20.244s
Total CPU time for CPAchecker:   20.230s
Time for statistics:              0.078s

Time for Garbage Collector:       0.388s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     48MB (    46 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8008MB (  7637 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
