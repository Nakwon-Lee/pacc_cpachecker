scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--common--tuners--mt2266.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uisawsqg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            961 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  772 (80%)
  Because of loop head:            174 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (2%)
  Times precision was empty:       208 (22%)
  Times precision was {false}:     55 (6%)
  Times result was cached:         644 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      54 (6%)
  Times result was 'false':        15 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1705
  BDD entailment checks:           279
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       160
Number of predicates discovered:          2
Number of abstraction locations:          36
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         753
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.91
Number of irrelevant predicates:          225 (30%)
Number of preds handled by boolean abs:   54 (7%)
  Total number of models for allsat:      54
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.370s
  Time for path formula creation:        1.334s
Time for strengthen operator:            0.034s
Time for prec operator:                  2.998s
  Time for abstraction:                  2.901s (Max:     0.153s, Count: 961)
    Boolean abstraction:                 1.048s
    Solving time:                        1.960s (Max:     0.142s)
    Model enumeration time:              0.041s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.048s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     2.001s

Number of path formula cache hits:   15155 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.224s

Total number of created targets for pointer analysis: 10475
   Number of created targets for uf: *unsigned_char is 1765


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         111 (count: 1091, min: 0, max: 29, avg: 0.10)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.075s
Automaton transfers with branching:                0
Automaton transfer successors:                        19152 (count: 19152, min: 1, max: 1, avg: 1.00) [1 x 19152]

CPA algorithm statistics
------------------------
Number of iterations:            6274
Max size of waitlist:            18
Average size of waitlist:        6
Number of computed successors:   7316
Max successors for one state:    2
Number of times merged:          713
Number of times stopped:         905
Number of times breaked:         15

Total time for CPA algorithm:         5.359s (Max:     0.816s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      3.132s
  Time for transfer relation:         1.901s
  Time for merge operator:            0.099s
  Time for stop operator:             0.060s
  Time for adding to reached set:     0.067s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 177 (count: 15, min: 4, max: 20, avg: 11.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.843s
  Counterexample analysis:                             0.764s (Max:     0.141s, Calls: 15)
    Refinement sat check:                              0.663s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.015s
  ARG update:                                          0.029s

Length of refined path (in blocks):                     162 (count: 15, min: 3, max: 19, avg: 10.80)
Number of affected states:                              147 (count: 15, min: 2, max: 18, avg: 9.80)
Length (states) of path with itp 'true':                  0 (count: 15, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       147 (count: 15, min: 2, max: 18, avg: 9.80)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             132 (count: 15, min: 1, max: 17, avg: 8.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 878
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 381.67
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.237s
Time for refinements:                 0.878s
Average time for refinement:          0.058s
Max time for refinement:              0.149s

Code Coverage
-----------------------------
  Function coverage:      0.478
  Visited lines:          1268
  Total lines:            1488
  Line coverage:          0.852
  Visited conditions:     100
  Total conditions:       128
  Condition coverage:     0.781

CPAchecker general statistics
-----------------------------
Number of program locations:     1658
Number of CFA edges:             1746
Number of relevant variables:    323
Number of functions:             23
Number of loops:                 2
Size of reached set:             717
  Number of reached locations:   299 (18%)
    Avg states per location:     2
    Max states per location:     13 (at node N98)
  Number of reached functions:   11 (48%)
  Number of partitions:          717
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.069s
  Time for loading CPAs:          0.621s
  Time for loading parser:        0.467s
  Time for CFA construction:      1.908s
    Time for parsing file(s):     0.615s
    Time for AST to CFA:          0.668s
    Time for CFA sanity check:    0.095s
    Time for post-processing:     0.390s
      Time for var class.:        0.174s
Time for Analysis:                6.237s
CPU time for analysis:            6.240s
Time for analyzing result:        0.000s
Total time for CPAchecker:        9.309s
Total CPU time for CPAchecker:    9.310s
Time for statistics:              0.057s

Time for Garbage Collector:       0.154s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     39MB (    37 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7997MB (  7626 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
