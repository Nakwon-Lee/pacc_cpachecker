scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--cpufreq--pcc-cpufreq.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8tuf8bhl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpufreq_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_percpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpufreq_notify_transition to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4242 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3793 (89%)
  Because of loop head:            431 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (0%)
  Times precision was empty:       789 (19%)
  Times precision was {false}:     345 (8%)
  Times result was cached:         2885 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      223 (5%)
  Times result was 'false':        60 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3410
  BDD entailment checks:           1004
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          3
Number of abstraction locations:          43
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         4884
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 8.60
Number of irrelevant predicates:          2998 (61%)
Number of preds handled by boolean abs:   272 (6%)
  Total number of models for allsat:      238
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  2.437s
  Time for path formula creation:        2.376s
Time for strengthen operator:            0.093s
Time for prec operator:                  1.985s
  Time for abstraction:                  1.794s (Max:     0.022s, Count: 4242)
    Boolean abstraction:                 0.286s
    Solving time:                        0.369s (Max:     0.013s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.038s (Max:     0.009s)
Time for merge operator:                 0.200s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.394s

Number of path formula cache hits:   37621 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.078s

Total number of created targets for pointer analysis: 14
   Number of created targets for uf: *unsigned_long_long_int is 15


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         447 (count: 4873, min: 0, max: 76, avg: 0.09)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.276s
Automaton transfers with branching:                0
Automaton transfer successors:                        62328 (count: 62328, min: 1, max: 1, avg: 1.00) [1 x 62328]

CPA algorithm statistics
------------------------
Number of iterations:            20248
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   22219
Max successors for one state:    2
Number of times merged:          1203
Number of times stopped:         1860
Number of times breaked:         18

Total time for CPA algorithm:         6.906s (Max:     0.922s)
  Time for choose from waitlist:      0.047s
  Time for precision adjustment:      2.352s
  Time for transfer relation:         3.700s
  Time for merge operator:            0.296s
  Time for stop operator:             0.139s
  Time for adding to reached set:     0.123s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 528 (count: 18, min: 8, max: 48, avg: 29.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.472s
  Counterexample analysis:                             0.315s (Max:     0.031s, Calls: 18)
    Refinement sat check:                              0.247s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.021s
  ARG update:                                          0.082s

Length of refined path (in blocks):                     276 (count: 18, min: 3, max: 25, avg: 15.33)
Number of affected states:                              258 (count: 18, min: 2, max: 24, avg: 14.33)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       258 (count: 18, min: 2, max: 24, avg: 14.33)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             240 (count: 18, min: 1, max: 23, avg: 13.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 1284
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1113.94
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       7.444s
Time for refinements:                 0.537s
Average time for refinement:          0.029s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.536
  Visited lines:          1243
  Total lines:            2510
  Line coverage:          0.495
  Visited conditions:     52
  Total conditions:       168
  Condition coverage:     0.310

CPAchecker general statistics
-----------------------------
Number of program locations:     2760
Number of CFA edges:             2871
Number of relevant variables:    549
Number of functions:             28
Number of loops:                 2
Size of reached set:             303
  Number of reached locations:   240 (9%)
    Avg states per location:     1
    Max states per location:     7 (at node N2283)
  Number of reached functions:   15 (54%)
  Number of partitions:          303
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.457s
  Time for loading CPAs:          0.649s
  Time for loading parser:        0.455s
  Time for CFA construction:      2.275s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          0.740s
    Time for CFA sanity check:    0.163s
    Time for post-processing:     0.524s
      Time for var class.:        0.276s
Time for Analysis:                7.444s
CPU time for analysis:            7.450s
Time for analyzing result:        0.000s
Total time for CPAchecker:       10.904s
Total CPU time for CPAchecker:   10.900s
Time for statistics:              0.072s

Time for Garbage Collector:       0.262s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     43MB (    41 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7999MB (  7629 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
