scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--cpufreq--pcc-cpufreq.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d55nz8r1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpufreq_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_percpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpufreq_notify_transition to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1936 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1661 (86%)
  Because of loop head:            257 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       202 (10%)
  Times precision was {false}:     111 (6%)
  Times result was cached:         1409 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      214 (11%)
  Times result was 'false':        31 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1271
  BDD entailment checks:           397
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       111
Number of predicates discovered:          3
Number of abstraction locations:          43
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2670
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 8.22
Number of irrelevant predicates:          947 (35%)
Number of preds handled by boolean abs:   263 (10%)
  Total number of models for allsat:      222
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.488s
  Time for path formula creation:        1.445s
Time for strengthen operator:            0.059s
Time for prec operator:                  1.047s
  Time for abstraction:                  0.972s (Max:     0.021s, Count: 1936)
    Boolean abstraction:                 0.160s
    Solving time:                        0.170s (Max:     0.014s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.008s (Max:     0.002s)
Time for merge operator:                 0.078s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.180s

Number of path formula cache hits:   12655 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.335s

Total number of created targets for pointer analysis: 5
   Number of created targets for uf: *unsigned_long_long_int is 6


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         435 (count: 2452, min: 0, max: 110, avg: 0.18)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.161s
Automaton transfers with branching:                0
Automaton transfer successors:                        25553 (count: 25553, min: 1, max: 1, avg: 1.00) [1 x 25553]

CPA algorithm statistics
------------------------
Number of iterations:            8764
Max size of waitlist:            16
Average size of waitlist:        6
Number of computed successors:   9653
Max successors for one state:    2
Number of times merged:          437
Number of times stopped:         686
Number of times breaked:         18

Total time for CPA algorithm:         3.774s (Max:     0.367s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      1.192s
  Time for transfer relation:         2.199s
  Time for merge operator:            0.110s
  Time for stop operator:             0.064s
  Time for adding to reached set:     0.053s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 528 (count: 18, min: 8, max: 48, avg: 29.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.373s
  Counterexample analysis:                             0.272s (Max:     0.033s, Calls: 18)
    Refinement sat check:                              0.210s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.012s
  ARG update:                                          0.044s

Length of refined path (in blocks):                     276 (count: 18, min: 3, max: 25, avg: 15.33)
Number of affected states:                              258 (count: 18, min: 2, max: 24, avg: 14.33)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       258 (count: 18, min: 2, max: 24, avg: 14.33)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             240 (count: 18, min: 1, max: 23, avg: 13.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 796
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 482.67
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.184s
Time for refinements:                 0.410s
Average time for refinement:          0.022s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.536
  Visited lines:          1243
  Total lines:            2510
  Line coverage:          0.495
  Visited conditions:     52
  Total conditions:       168
  Condition coverage:     0.310

CPAchecker general statistics
-----------------------------
Number of program locations:     2760
Number of CFA edges:             2871
Number of relevant variables:    549
Number of functions:             28
Number of loops:                 2
Size of reached set:             303
  Number of reached locations:   240 (9%)
    Avg states per location:     1
    Max states per location:     7 (at node N2283)
  Number of reached functions:   15 (54%)
  Number of partitions:          303
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.391s
  Time for loading CPAs:          0.628s
  Time for loading parser:        0.571s
  Time for CFA construction:      2.097s
    Time for parsing file(s):     0.649s
    Time for AST to CFA:          0.658s
    Time for CFA sanity check:    0.170s
    Time for post-processing:     0.481s
      Time for var class.:        0.245s
Time for Analysis:                4.184s
CPU time for analysis:            4.180s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.579s
Total CPU time for CPAchecker:    7.570s
Time for statistics:              0.039s

Time for Garbage Collector:       0.175s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     39MB (    37 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     29MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8049MB (  7676 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
