scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--media--video--cx231xx--cx231xx-dvb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_faa5j2sr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8468: Function pointer *__cil_tmp38 with type int (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8348: Function pointer *__cil_tmp39 with type int (*)(struct dvb_frontend *, struct analog_parameters *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10716: Function pointer *__a___10 with type struct dvb_frontend *(*)(struct dvb_frontend *, u8 , struct i2c_adapter *, struct tda18271_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10618: Function pointer *__a___9 with type struct dvb_frontend *(*)(const struct mb86a20s_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10537: Function pointer *__a___8 with type struct dvb_frontend *(*)(struct dvb_frontend *, u8 , struct i2c_adapter *, struct tda18271_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10439: Function pointer *__a___7 with type struct dvb_frontend *(*)(const struct lgdt3305_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10347: Function pointer *__a___6 with type struct dvb_frontend *(*)(struct dvb_frontend *, u8 , struct i2c_adapter *, struct tda18271_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10249: Function pointer *__a___5 with type struct dvb_frontend *(*)(const struct s5h1411_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10173: Function pointer *__a___4 with type struct dvb_frontend *(*)(struct dvb_frontend *, u8 , struct i2c_adapter *, struct tda18271_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10075: Function pointer *__a___3 with type struct dvb_frontend *(*)(const struct s5h1432_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9999: Function pointer *__a___2 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, const struct xc5000_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9901: Function pointer *__a___1 with type struct dvb_frontend *(*)(const struct s5h1411_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9824: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *, struct i2c_adapter *, const struct xc5000_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9726: Function pointer *__a with type struct dvb_frontend *(*)(const struct s5h1432_config *, struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8803: Function pointer *__cil_tmp79 with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8832: Function pointer *__cil_tmp95 with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8857: Function pointer *__cil_tmp108 with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8895: Function pointer *__cil_tmp130 with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8910: Function pointer *__cil_tmp141 with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8999: Function pointer *__cil_tmp9 with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9011: Function pointer *__cil_tmp20 with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx231xx_register_extension to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx231xx_set_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx231xx_demod_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10249: Ignoring call via function pointer dvb_init::__a___5 for which no suitable target was found in line: tmp___41 = (*__a___5)(__cil_tmp328, __cil_tmp339); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10249: Ignoring function call through function pointer *__a___5: tmp___41 = (*__a___5)(__cil_tmp328, __cil_tmp339); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10347: Ignoring call via function pointer dvb_init::__a___6 for which no suitable target was found in line: tmp___47 = (*__a___6)(__cil_tmp367, __cil_tmp368, __cil_tmp379, &cnxt_rde253s_tunerconfig); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10347: Ignoring function call through function pointer *__a___6: tmp___47 = (*__a___6)(__cil_tmp367, __cil_tmp368, __cil_tmp379, &cnxt_rde253s_tunerconfig); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10075: Ignoring call via function pointer dvb_init::__a___3 for which no suitable target was found in line: tmp___29 = (*__a___3)(__cil_tmp262, __cil_tmp273); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10075: Ignoring function call through function pointer *__a___3: tmp___29 = (*__a___3)(__cil_tmp262, __cil_tmp273); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10173: Ignoring call via function pointer dvb_init::__a___4 for which no suitable target was found in line: tmp___35 = (*__a___4)(__cil_tmp301, __cil_tmp302, __cil_tmp313, &cnxt_rde253s_tunerconfig); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10173: Ignoring function call through function pointer *__a___4: tmp___35 = (*__a___4)(__cil_tmp301, __cil_tmp302, __cil_tmp313, &cnxt_rde253s_tunerconfig); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9901: Ignoring call via function pointer dvb_init::__a___1 for which no suitable target was found in line: tmp___17 = (*__a___1)(__cil_tmp196, __cil_tmp207); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9901: Ignoring function call through function pointer *__a___1: tmp___17 = (*__a___1)(__cil_tmp196, __cil_tmp207); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9999: Ignoring call via function pointer dvb_init::__a___2 for which no suitable target was found in line: tmp___23 = (*__a___2)(__cil_tmp235, __cil_tmp246, __cil_tmp247); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9999: Ignoring function call through function pointer *__a___2: tmp___23 = (*__a___2)(__cil_tmp235, __cil_tmp246, __cil_tmp247); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9726: Ignoring call via function pointer dvb_init::__a for which no suitable target was found in line: tmp___5 = (*__a)(__cil_tmp130, __cil_tmp141); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9726: Ignoring function call through function pointer *__a: tmp___5 = (*__a)(__cil_tmp130, __cil_tmp141); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9824: Ignoring call via function pointer dvb_init::__a___0 for which no suitable target was found in line: tmp___11 = (*__a___0)(__cil_tmp169, __cil_tmp180, __cil_tmp181); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9824: Ignoring function call through function pointer *__a___0: tmp___11 = (*__a___0)(__cil_tmp169, __cil_tmp180, __cil_tmp181); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmxdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8803: Ignoring call via function pointer register_dvb::__cil_tmp79 for which no suitable target was found in line: result = (*__cil_tmp79)(__cil_tmp82, __cil_tmp85); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8803: Ignoring function call through function pointer *__cil_tmp79: result = (*__cil_tmp79)(__cil_tmp82, __cil_tmp85); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8832: Ignoring call via function pointer register_dvb::__cil_tmp95 for which no suitable target was found in line: result = (*__cil_tmp95)(__cil_tmp98, __cil_tmp101); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8832: Ignoring function call through function pointer *__cil_tmp95: result = (*__cil_tmp95)(__cil_tmp98, __cil_tmp101); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8857: Ignoring call via function pointer register_dvb::__cil_tmp108 for which no suitable target was found in line: result = (*__cil_tmp108)(__cil_tmp111, __cil_tmp114); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8857: Ignoring function call through function pointer *__cil_tmp108: result = (*__cil_tmp108)(__cil_tmp111, __cil_tmp114); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_net_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8895: Ignoring call via function pointer register_dvb::__cil_tmp130 for which no suitable target was found in line: (*__cil_tmp130)(__cil_tmp133, __cil_tmp136); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8895: Ignoring function call through function pointer *__cil_tmp130: (*__cil_tmp130)(__cil_tmp133, __cil_tmp136); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8910: Ignoring call via function pointer register_dvb::__cil_tmp141 for which no suitable target was found in line: (*__cil_tmp141)(__cil_tmp144, __cil_tmp147); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8910: Ignoring function call through function pointer *__cil_tmp141: (*__cil_tmp141)(__cil_tmp144, __cil_tmp147); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_dmxdev_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_frontend_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10439: Ignoring call via function pointer dvb_init::__a___7 for which no suitable target was found in line: tmp___54 = (*__a___7)(__cil_tmp405, __cil_tmp416); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10439: Ignoring function call through function pointer *__a___7: tmp___54 = (*__a___7)(__cil_tmp405, __cil_tmp416); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10537: Ignoring call via function pointer dvb_init::__a___8 for which no suitable target was found in line: tmp___60 = (*__a___8)(__cil_tmp444, __cil_tmp445, __cil_tmp456, &hcw_tda18271_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10537: Ignoring function call through function pointer *__a___8: tmp___60 = (*__a___8)(__cil_tmp444, __cil_tmp445, __cil_tmp456, &hcw_tda18271_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10618: Ignoring call via function pointer dvb_init::__a___9 for which no suitable target was found in line: tmp___67 = (*__a___9)(&pv_mb86a20s_config, __cil_tmp489); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10618: Ignoring function call through function pointer *__a___9: tmp___67 = (*__a___9)(&pv_mb86a20s_config, __cil_tmp489); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10716: Ignoring call via function pointer dvb_init::__a___10 for which no suitable target was found in line: tmp___73 = (*__a___10)(__cil_tmp517, __cil_tmp518, __cil_tmp529, &pv_tda18271_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10716: Ignoring function call through function pointer *__a___10: tmp___73 = (*__a___10)(__cil_tmp517, __cil_tmp518, __cil_tmp529, &pv_tda18271_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_net_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8999: Ignoring call via function pointer unregister_dvb::__cil_tmp9 for which no suitable target was found in line: (*__cil_tmp9)(__cil_tmp12, __cil_tmp15); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8999: Ignoring function call through function pointer *__cil_tmp9: (*__cil_tmp9)(__cil_tmp12, __cil_tmp15); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9011: Ignoring call via function pointer unregister_dvb::__cil_tmp20 for which no suitable target was found in line: (*__cil_tmp20)(__cil_tmp23, __cil_tmp26); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9011: Ignoring function call through function pointer *__cil_tmp20: (*__cil_tmp20)(__cil_tmp23, __cil_tmp26); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function cx231xx_unregister_extension to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            407 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  355 (87%)
  Because of loop head:            44 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (2%)
  Times precision was empty:       126 (31%)
  Times precision was {false}:     60 (15%)
  Times result was cached:         192 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29 (7%)
  Times result was 'false':        7 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2290
  BDD entailment checks:           158
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       498
Number of predicates discovered:          2
Number of abstraction locations:          19
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         281
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.16
Number of irrelevant predicates:          129 (46%)
Number of preds handled by boolean abs:   29 (10%)
  Total number of models for allsat:      31
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  2.433s
  Time for path formula creation:        2.395s
Time for strengthen operator:            0.065s
Time for prec operator:                  2.107s
  Time for abstraction:                  2.074s (Max:     0.263s, Count: 407)
    Boolean abstraction:                 0.297s
    Solving time:                        1.534s (Max:     0.248s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.455s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     1.547s

Number of path formula cache hits:   17871 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.299s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          57 (count: 763, min: 0, max: 15, avg: 0.07)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.191s
Automaton transfers with branching:                0
Automaton transfer successors:                        39131 (count: 39131, min: 1, max: 1, avg: 1.00) [1 x 39131]

CPA algorithm statistics
------------------------
Number of iterations:            7611
Max size of waitlist:            21
Average size of waitlist:        10
Number of computed successors:   8828
Max successors for one state:    2
Number of times merged:          1066
Number of times stopped:         1173
Number of times breaked:         8

Total time for CPA algorithm:         6.356s (Max:     1.312s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      2.272s
  Time for transfer relation:         3.261s
  Time for merge operator:            0.533s
  Time for stop operator:             0.076s
  Time for adding to reached set:     0.044s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 109 (count: 8, min: 8, max: 17, avg: 13.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.236s
  Counterexample analysis:                             0.170s (Max:     0.055s, Calls: 8)
    Refinement sat check:                              0.117s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.002s
  ARG update:                                          0.046s

Length of refined path (in blocks):                     101 (count: 8, min: 7, max: 16, avg: 12.63)
Number of affected states:                               93 (count: 8, min: 6, max: 15, avg: 11.63)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        93 (count: 8, min: 6, max: 15, avg: 11.63)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              85 (count: 8, min: 5, max: 14, avg: 10.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 1121
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 886.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.621s
Time for refinements:                 0.265s
Average time for refinement:          0.033s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.313
  Visited lines:          2923
  Total lines:            3717
  Line coverage:          0.786
  Visited conditions:     148
  Total conditions:       234
  Condition coverage:     0.632

CPAchecker general statistics
-----------------------------
Number of program locations:     4011
Number of CFA edges:             4120
Number of relevant variables:    874
Number of functions:             32
Number of loops:                 2
Size of reached set:             581
  Number of reached locations:   445 (11%)
    Avg states per location:     1
    Max states per location:     5 (at node N1345)
  Number of reached functions:   10 (31%)
  Number of partitions:          581
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.658s
  Time for loading CPAs:          0.699s
  Time for loading parser:        0.431s
  Time for CFA construction:      2.457s
    Time for parsing file(s):     0.671s
    Time for AST to CFA:          0.874s
    Time for CFA sanity check:    0.155s
    Time for post-processing:     0.576s
      Time for var class.:        0.299s
Time for Analysis:                6.621s
CPU time for analysis:            6.620s
Time for analyzing result:        0.009s
Total time for CPAchecker:       10.281s
Total CPU time for CPAchecker:   10.280s
Time for statistics:              0.066s

Time for Garbage Collector:       0.270s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     46MB (    44 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8062MB (  7689 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
