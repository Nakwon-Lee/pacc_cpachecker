scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--w1--slaves--w1_ds2760.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fhgn7o_u/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ida_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_register_family to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_unregister_family to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ida_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_reset_select_slave to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_write_8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ida_simple_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ida_simple_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            342 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  282 (82%)
  Because of loop head:            42 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (5%)
  Times precision was empty:       103 (30%)
  Times precision was {false}:     14 (4%)
  Times result was cached:         202 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      23 (7%)
  Times result was 'false':        18 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         210
  BDD entailment checks:           106
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          3
Number of abstraction locations:          21
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         239
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.46
Number of irrelevant predicates:          132 (55%)
Number of preds handled by boolean abs:   23 (10%)
  Total number of models for allsat:      23
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.236s
  Time for path formula creation:        0.215s
Time for strengthen operator:            0.017s
Time for prec operator:                  0.226s
  Time for abstraction:                  0.178s (Max:     0.016s, Count: 342)
    Boolean abstraction:                 0.034s
    Solving time:                        0.021s (Max:     0.011s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.011s (Max:     0.008s)
Time for merge operator:                 0.030s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.023s

Number of path formula cache hits:   2252 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.185s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 424, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.025s
Automaton transfers with branching:                0
Automaton transfer successors:                         2785 (count: 2785, min: 1, max: 1, avg: 1.00) [1 x 2785]

CPA algorithm statistics
------------------------
Number of iterations:            1319
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   1480
Max successors for one state:    2
Number of times merged:          52
Number of times stopped:         101
Number of times breaked:         18

Total time for CPA algorithm:         0.920s (Max:     0.167s)
  Time for choose from waitlist:      0.006s
  Time for precision adjustment:      0.336s
  Time for transfer relation:         0.424s
  Time for merge operator:            0.045s
  Time for stop operator:             0.058s
  Time for adding to reached set:     0.010s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 255 (count: 18, min: 5, max: 19, avg: 14.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.169s
  Counterexample analysis:                             0.117s (Max:     0.014s, Calls: 18)
    Refinement sat check:                              0.095s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.015s
  ARG update:                                          0.008s

Length of refined path (in blocks):                     237 (count: 18, min: 4, max: 18, avg: 13.17)
Number of affected states:                              119 (count: 18, min: 2, max: 13, avg: 6.61)
Length (states) of path with itp 'true':                100 (count: 18, min: 0, max: 9, avg: 5.56)
Length (states) of path with itp non-trivial itp:       119 (count: 18, min: 2, max: 13, avg: 6.61)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             101 (count: 18, min: 1, max: 12, avg: 5.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 184
Max. size of reached set after ref.:  112
Avg. size of reached set before ref.: 136.11
Avg. size of reached set after ref.:  68.28

Total time for CEGAR algorithm:       1.103s
Time for refinements:                 0.181s
Average time for refinement:          0.010s
Max time for refinement:              0.026s

Code Coverage
-----------------------------
  Function coverage:      0.478
  Visited lines:          493
  Total lines:            612
  Line coverage:          0.806
  Visited conditions:     36
  Total conditions:       56
  Condition coverage:     0.643

CPAchecker general statistics
-----------------------------
Number of program locations:     741
Number of CFA edges:             770
Number of relevant variables:    99
Number of functions:             23
Number of loops:                 1
Size of reached set:             141
  Number of reached locations:   127 (17%)
    Avg states per location:     1
    Max states per location:     4 (at node N426)
  Number of reached functions:   11 (48%)
  Number of partitions:          141
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.495s
  Time for loading CPAs:          0.560s
  Time for loading parser:        0.487s
  Time for CFA construction:      1.295s
    Time for parsing file(s):     0.481s
    Time for AST to CFA:          0.320s
    Time for CFA sanity check:    0.079s
    Time for post-processing:     0.290s
      Time for var class.:        0.157s
Time for Analysis:                1.103s
CPU time for analysis:            1.110s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.600s
Total CPU time for CPAchecker:    3.600s
Time for statistics:              0.053s

Time for Garbage Collector:       0.090s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 52MB (    50 MiB) max;     30MB (    29 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    23 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8024MB (  7652 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
