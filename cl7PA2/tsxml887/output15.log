scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--ir-usb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3w1gnunk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1293 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1114 (86%)
  Because of loop head:            164 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (1%)
  Times precision was empty:       420 (32%)
  Times precision was {false}:     76 (6%)
  Times result was cached:         739 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      58 (4%)
  Times result was 'false':        45 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         3177
  BDD entailment checks:           281
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          2
Number of abstraction locations:          49
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         873
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.51
Number of irrelevant predicates:          370 (42%)
Number of preds handled by boolean abs:   58 (7%)
  Total number of models for allsat:      62
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  1.054s
  Time for path formula creation:        1.022s
Time for strengthen operator:            0.039s
Time for prec operator:                  0.608s
  Time for abstraction:                  0.533s (Max:     0.018s, Count: 1293)
    Boolean abstraction:                 0.068s
    Solving time:                        0.113s (Max:     0.014s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.067s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.116s

Number of path formula cache hits:   17726 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.928s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         105 (count: 1436, min: 0, max: 29, avg: 0.07)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.146s
Automaton transfers with branching:                0
Automaton transfer successors:                        25303 (count: 25303, min: 1, max: 1, avg: 1.00) [1 x 25303]

CPA algorithm statistics
------------------------
Number of iterations:            10431
Max size of waitlist:            25
Average size of waitlist:        10
Number of computed successors:   12249
Max successors for one state:    2
Number of times merged:          1448
Number of times stopped:         1651
Number of times breaked:         15

Total time for CPA algorithm:         3.053s (Max:     0.721s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      0.781s
  Time for transfer relation:         1.758s
  Time for merge operator:            0.130s
  Time for stop operator:             0.117s
  Time for adding to reached set:     0.045s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 264 (count: 15, min: 9, max: 32, avg: 17.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.271s
  Counterexample analysis:                             0.134s (Max:     0.019s, Calls: 15)
    Refinement sat check:                              0.087s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.015s
  ARG update:                                          0.043s

Length of refined path (in blocks):                     249 (count: 15, min: 8, max: 31, avg: 16.60)
Number of affected states:                              224 (count: 15, min: 7, max: 30, avg: 14.93)
Length (states) of path with itp 'true':                 10 (count: 15, min: 0, max: 10, avg: 0.67)
Length (states) of path with itp non-trivial itp:       224 (count: 15, min: 7, max: 30, avg: 14.93)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             209 (count: 15, min: 6, max: 29, avg: 13.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 914
Max. size of reached set after ref.:  602
Avg. size of reached set before ref.: 705.40
Avg. size of reached set after ref.:  42.93

Total time for CEGAR algorithm:       3.355s
Time for refinements:                 0.302s
Average time for refinement:          0.020s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.806
  Visited lines:          1620
  Total lines:            1689
  Line coverage:          0.959
  Visited conditions:     162
  Total conditions:       176
  Condition coverage:     0.920

CPAchecker general statistics
-----------------------------
Number of program locations:     1909
Number of CFA edges:             2000
Number of relevant variables:    293
Number of functions:             31
Number of loops:                 2
Size of reached set:             617
  Number of reached locations:   502 (26%)
    Avg states per location:     1
    Max states per location:     6 (at node N1338)
  Number of reached functions:   25 (81%)
  Number of partitions:          617
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.982s
  Time for loading CPAs:          0.698s
  Time for loading parser:        0.422s
  Time for CFA construction:      1.800s
    Time for parsing file(s):     0.536s
    Time for AST to CFA:          0.611s
    Time for CFA sanity check:    0.119s
    Time for post-processing:     0.383s
      Time for var class.:        0.187s
Time for Analysis:                3.355s
CPU time for analysis:            3.350s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.340s
Total CPU time for CPAchecker:    6.330s
Time for statistics:              0.054s

Time for Garbage Collector:       0.130s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     37MB (    36 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7991MB (  7621 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
