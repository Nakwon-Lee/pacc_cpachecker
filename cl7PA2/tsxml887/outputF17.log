scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--ir-usb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xl6b2ib2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2145 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1940 (90%)
  Because of loop head:            191 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (1%)
  Times precision was empty:       1013 (47%)
  Times precision was {false}:     129 (6%)
  Times result was cached:         943 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      60 (3%)
  Times result was 'false':        39 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         4535
  BDD entailment checks:           505
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          2
Number of abstraction locations:          49
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1132
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.99
Number of irrelevant predicates:          606 (54%)
Number of preds handled by boolean abs:   60 (5%)
  Total number of models for allsat:      66
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  1.586s
  Time for path formula creation:        1.534s
Time for strengthen operator:            0.091s
Time for prec operator:                  0.991s
  Time for abstraction:                  0.835s (Max:     0.023s, Count: 2145)
    Boolean abstraction:                 0.116s
    Solving time:                        0.278s (Max:     0.021s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.161s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.279s

Number of path formula cache hits:   23039 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.474s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         113 (count: 2530, min: 0, max: 32, avg: 0.04)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.183s
Automaton transfers with branching:                0
Automaton transfer successors:                        36092 (count: 36092, min: 1, max: 1, avg: 1.00) [1 x 36092]

CPA algorithm statistics
------------------------
Number of iterations:            15551
Max size of waitlist:            21
Average size of waitlist:        9
Number of computed successors:   18038
Max successors for one state:    2
Number of times merged:          2015
Number of times stopped:         2376
Number of times breaked:         14

Total time for CPA algorithm:         4.629s (Max:     1.043s)
  Time for choose from waitlist:      0.071s
  Time for precision adjustment:      1.341s
  Time for transfer relation:         2.556s
  Time for merge operator:            0.250s
  Time for stop operator:             0.135s
  Time for adding to reached set:     0.071s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 265 (count: 14, min: 10, max: 33, avg: 18.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.356s
  Counterexample analysis:                             0.219s (Max:     0.037s, Calls: 14)
    Refinement sat check:                              0.150s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.017s
  ARG update:                                          0.080s

Length of refined path (in blocks):                     251 (count: 14, min: 9, max: 32, avg: 17.93)
Number of affected states:                              217 (count: 14, min: 8, max: 31, avg: 15.50)
Length (states) of path with itp 'true':                 20 (count: 14, min: 0, max: 10, avg: 1.43)
Length (states) of path with itp non-trivial itp:       217 (count: 14, min: 8, max: 31, avg: 15.50)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             203 (count: 14, min: 7, max: 30, avg: 14.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 1316
Max. size of reached set after ref.:  606
Avg. size of reached set before ref.: 1160.86
Avg. size of reached set after ref.:  88.93

Total time for CEGAR algorithm:       5.070s
Time for refinements:                 0.440s
Average time for refinement:          0.031s
Max time for refinement:              0.064s

Code Coverage
-----------------------------
  Function coverage:      0.806
  Visited lines:          1620
  Total lines:            1689
  Line coverage:          0.959
  Visited conditions:     162
  Total conditions:       176
  Condition coverage:     0.920

CPAchecker general statistics
-----------------------------
Number of program locations:     1909
Number of CFA edges:             2000
Number of relevant variables:    293
Number of functions:             31
Number of loops:                 2
Size of reached set:             617
  Number of reached locations:   502 (26%)
    Avg states per location:     1
    Max states per location:     6 (at node N1338)
  Number of reached functions:   25 (81%)
  Number of partitions:          617
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.973s
  Time for loading CPAs:          0.613s
  Time for loading parser:        0.488s
  Time for CFA construction:      1.788s
    Time for parsing file(s):     0.564s
    Time for AST to CFA:          0.581s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.398s
      Time for var class.:        0.183s
Time for Analysis:                5.071s
CPU time for analysis:            5.080s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.055s
Total CPU time for CPAchecker:    8.040s
Time for statistics:              0.069s

Time for Garbage Collector:       0.162s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     39MB (    38 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7994MB (  7624 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
