scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--ir-usb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lquu7qs_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1174 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1020 (87%)
  Because of loop head:            141 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       270 (23%)
  Times precision was {false}:     102 (9%)
  Times result was cached:         740 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      62 (5%)
  Times result was 'false':        36 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         2137
  BDD entailment checks:           281
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          2
Number of abstraction locations:          49
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         904
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.51
Number of irrelevant predicates:          440 (49%)
Number of preds handled by boolean abs:   62 (7%)
  Total number of models for allsat:      70
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.13

Time for post operator:                  1.014s
  Time for path formula creation:        0.992s
Time for strengthen operator:            0.039s
Time for prec operator:                  0.817s
  Time for abstraction:                  0.717s (Max:     0.028s, Count: 1174)
    Boolean abstraction:                 0.131s
    Solving time:                        0.187s (Max:     0.018s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.007s (Max:     0.004s)
Time for merge operator:                 0.102s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.192s

Number of path formula cache hits:   10575 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.943s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         123 (count: 1440, min: 0, max: 45, avg: 0.09)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.103s
Automaton transfers with branching:                0
Automaton transfer successors:                        16959 (count: 16959, min: 1, max: 1, avg: 1.00) [1 x 16959]

CPA algorithm statistics
------------------------
Number of iterations:            7839
Max size of waitlist:            20
Average size of waitlist:        7
Number of computed successors:   9096
Max successors for one state:    2
Number of times merged:          928
Number of times stopped:         1116
Number of times breaked:         13

Total time for CPA algorithm:         3.222s (Max:     0.743s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      1.011s
  Time for transfer relation:         1.712s
  Time for merge operator:            0.236s
  Time for stop operator:             0.066s
  Time for adding to reached set:     0.040s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 443 (count: 13, min: 24, max: 47, avg: 34.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.377s
  Counterexample analysis:                             0.235s (Max:     0.027s, Calls: 13)
    Refinement sat check:                              0.167s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.012s
  ARG update:                                          0.073s

Length of refined path (in blocks):                     430 (count: 13, min: 23, max: 46, avg: 33.08)
Number of affected states:                              387 (count: 13, min: 22, max: 45, avg: 29.77)
Length (states) of path with itp 'true':                 30 (count: 13, min: 0, max: 10, avg: 2.31)
Length (states) of path with itp non-trivial itp:       387 (count: 13, min: 22, max: 45, avg: 29.77)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             374 (count: 13, min: 21, max: 44, avg: 28.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 921
Max. size of reached set after ref.:  578
Avg. size of reached set before ref.: 699.38
Avg. size of reached set after ref.:  135.69

Total time for CEGAR algorithm:       3.666s
Time for refinements:                 0.442s
Average time for refinement:          0.034s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.806
  Visited lines:          1620
  Total lines:            1689
  Line coverage:          0.959
  Visited conditions:     162
  Total conditions:       176
  Condition coverage:     0.920

CPAchecker general statistics
-----------------------------
Number of program locations:     1909
Number of CFA edges:             2000
Number of relevant variables:    293
Number of functions:             31
Number of loops:                 2
Size of reached set:             617
  Number of reached locations:   502 (26%)
    Avg states per location:     1
    Max states per location:     6 (at node N1338)
  Number of reached functions:   25 (81%)
  Number of partitions:          617
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.934s
  Time for loading CPAs:          0.689s
  Time for loading parser:        0.452s
  Time for CFA construction:      1.689s
    Time for parsing file(s):     0.484s
    Time for AST to CFA:          0.547s
    Time for CFA sanity check:    0.093s
    Time for post-processing:     0.440s
      Time for var class.:        0.238s
Time for Analysis:                3.666s
CPU time for analysis:            3.660s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.609s
Total CPU time for CPAchecker:    6.600s
Time for statistics:              0.081s

Time for Garbage Collector:       0.134s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     37MB (    36 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7989MB (  7619 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
