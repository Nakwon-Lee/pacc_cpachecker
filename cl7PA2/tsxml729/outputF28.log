scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--char--hw_random--virtio-rng.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tkcbqkg0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 1155: Function pointer *__cil_tmp19 with type int (*)(struct virtio_device *, unsigned int, struct virtqueue **, vq_callback_t **, const char **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_virtio_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1155: Ignoring call via function pointer virtio_find_single_vq::__cil_tmp19 for which no suitable target was found in line: tmp = (*__cil_tmp19)(vdev, 1U, &vq__1, __cil_tmp20, __cil_tmp21); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1155: Ignoring function call through function pointer *__cil_tmp19: tmp = (*__cil_tmp19)(vdev, 1U, &vq__1, __cil_tmp20, __cil_tmp21); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_init_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function virtqueue_add_buf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function virtqueue_kick to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwrng_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1327: Ignoring call via function pointer virtrng_probe::__cil_tmp12 for which no suitable target was found in line: (*__cil_tmp12)(vdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1327: Ignoring function call through function pointer *__cil_tmp12: (*__cil_tmp12)(vdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1358: Ignoring call via function pointer virtrng_remove::__cil_tmp7 for which no suitable target was found in line: (*__cil_tmp7)(vdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1358: Ignoring function call through function pointer *__cil_tmp7: (*__cil_tmp7)(vdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 1358: Unsupported feature (recursion): virtrng_remove(vdev); (line was originally pointer call(virtrng_remove) (*__cil_tmp7)(vdev);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            22 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19 (86%)
  Because of loop head:            3 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       22 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         9
  BDD entailment checks:           1
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          0

Time for post operator:                  0.178s
  Time for path formula creation:        0.174s
Time for strengthen operator:            0.004s
Time for prec operator:                  0.003s
  Time for abstraction:                  0.000s (Max:     0.000s, Count: 22)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.007s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   0 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.168s

Total number of created targets for pointer analysis: 2
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_virtqueue)*],_VarArgs:_false)* is 2
   Number of created targets for uf: *(char)* is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 24, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                          507 (count: 507, min: 1, max: 1, avg: 1.00) [1 x 507]

CPA algorithm statistics
------------------------
Number of iterations:            97
Max size of waitlist:            10
Average size of waitlist:        5
Number of computed successors:   110
Max successors for one state:    2
Number of times merged:          4
Number of times stopped:         5
Number of times breaked:         0

Total time for CPA algorithm:         0.280s (Max:     0.280s)
  Time for choose from waitlist:      0.002s
  Time for precision adjustment:      0.023s
  Time for transfer relation:         0.237s
  Time for merge operator:            0.008s
  Time for stop operator:             0.010s
  Time for adding to reached set:     0.000s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.591
  Visited lines:          424
  Total lines:            489
  Line coverage:          0.867
  Visited conditions:     30
  Total conditions:       50
  Condition coverage:     0.600

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             630
Number of relevant variables:    103
Number of functions:             22
Number of loops:                 2
Size of reached set:             106
  Number of reached locations:   106 (17%)
    Avg states per location:     1
    Max states per location:     1 (at node N1)
  Number of reached functions:   13 (59%)
  Number of partitions:          106
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          2.381s
  Time for loading CPAs:          0.558s
  Time for loading parser:        0.455s
  Time for CFA construction:      1.278s
    Time for parsing file(s):     0.489s
    Time for AST to CFA:          0.352s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.229s
      Time for var class.:        0.104s
Time for Analysis:                0.280s
CPU time for analysis:            0.280s
Total time for CPAchecker:        2.663s
Total CPU time for CPAchecker:    2.670s
Time for statistics:              0.042s

Time for Garbage Collector:       0.086s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 42MB (    41 MiB) max;     25MB (    24 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             30MB (    29 MiB) max;     22MB (    21 MiB) avg;     32MB (    30 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        33MB (    32 MiB) max;     24MB (    22 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8004MB (  7633 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
