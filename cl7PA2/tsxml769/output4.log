scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-umt-010.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mcw6u1j6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6031: Function pointer *__cil_tmp11 with type int (*)(struct dvb_frontend *fe, u8 *buf, int len) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6295: Function pointer *__a with type struct dvb_frontend *(*)(const struct mt352_config *config, struct i2c_adapter *i2c) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6372: Function pointer *__a with type struct dvb_frontend *(*)(struct dvb_frontend *fe, int pll_addr, struct i2c_adapter *i2c, unsigned int pll_desc_id) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6372: Ignoring call via function pointer umt_tuner_attach::__a for which no suitable target was found in line: tmp___11 = (*__a)(__cil_tmp14, 97, __cil_tmp16, 7U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6372: Ignoring function call through function pointer *__a: tmp___11 = (*__a)(__cil_tmp14, 97, __cil_tmp16, 7U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6295: Ignoring call via function pointer umt_mt352_frontend_attach::__a for which no suitable target was found in line: tmp___11 = (*__a)(__cil_tmp14, __cil_tmp18); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6295: Ignoring function call through function pointer *__a: tmp___11 = (*__a)(__cil_tmp14, __cil_tmp18); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            114 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  82 (72%)
  Because of loop head:            28 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (4%)
  Times precision was empty:       48 (42%)
  Times precision was {false}:     13 (11%)
  Times result was cached:         41 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12 (11%)
  Times result was 'false':        7 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         173
  BDD entailment checks:           43
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       52
Number of predicates discovered:          2
Number of abstraction locations:          9
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         66
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.64
Number of irrelevant predicates:          33 (50%)
Number of preds handled by boolean abs:   12 (18%)
  Total number of models for allsat:      12
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.540s
  Time for path formula creation:        0.532s
Time for strengthen operator:            0.013s
Time for prec operator:                  0.143s
  Time for abstraction:                  0.130s (Max:     0.018s, Count: 114)
    Boolean abstraction:                 0.017s
    Solving time:                        0.036s (Max:     0.009s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.042s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.036s

Number of path formula cache hits:   949 (36%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.471s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 233, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.043s
Automaton transfers with branching:                0
Automaton transfer successors:                         2508 (count: 2508, min: 1, max: 1, avg: 1.00) [1 x 2508]

CPA algorithm statistics
------------------------
Number of iterations:            759
Max size of waitlist:            7
Average size of waitlist:        4
Number of computed successors:   870
Max successors for one state:    2
Number of times merged:          65
Number of times stopped:         94
Number of times breaked:         4

Total time for CPA algorithm:         1.060s (Max:     0.678s)
  Time for choose from waitlist:      0.002s
  Time for precision adjustment:      0.199s
  Time for transfer relation:         0.744s
  Time for merge operator:            0.052s
  Time for stop operator:             0.039s
  Time for adding to reached set:     0.003s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  24 (count: 4, min: 4, max: 7, avg: 6.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.056s
  Counterexample analysis:                             0.029s (Max:     0.014s, Calls: 4)
    Refinement sat check:                              0.014s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.018s
  ARG update:                                          0.003s

Length of refined path (in blocks):                      20 (count: 4, min: 3, max: 6, avg: 5.00)
Number of affected states:                               16 (count: 4, min: 2, max: 5, avg: 4.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        16 (count: 4, min: 2, max: 5, avg: 4.00)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              12 (count: 4, min: 1, max: 4, avg: 3.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 209
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 168.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.141s
Time for refinements:                 0.081s
Average time for refinement:          0.020s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.263
  Visited lines:          1097
  Total lines:            1303
  Line coverage:          0.842
  Visited conditions:     30
  Total conditions:       52
  Condition coverage:     0.577

CPAchecker general statistics
-----------------------------
Number of program locations:     1417
Number of CFA edges:             1449
Number of relevant variables:    71
Number of functions:             19
Number of loops:                 1
Size of reached set:             110
  Number of reached locations:   96 (7%)
    Avg states per location:     1
    Max states per location:     4 (at node N349)
  Number of reached functions:   5 (26%)
  Number of partitions:          110
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.276s
  Time for loading CPAs:          0.631s
  Time for loading parser:        0.480s
  Time for CFA construction:      2.073s
    Time for parsing file(s):     0.689s
    Time for AST to CFA:          0.698s
    Time for CFA sanity check:    0.094s
    Time for post-processing:     0.434s
      Time for var class.:        0.180s
Time for Analysis:                1.141s
CPU time for analysis:            1.140s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.420s
Total CPU time for CPAchecker:    4.410s
Time for statistics:              0.058s

Time for Garbage Collector:       0.121s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    24 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8031MB (  7659 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
