scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--phy--national.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hd7zr65t/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            498 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  447 (90%)
  Because of loop head:            43 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (2%)
  Times precision was empty:       136 (27%)
  Times precision was {false}:     43 (9%)
  Times result was cached:         257 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      62 (12%)
  Times result was 'false':        15 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         95
  BDD entailment checks:           87
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       19
Number of predicates discovered:          2
Number of abstraction locations:          42
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         362
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.45
Number of irrelevant predicates:          113 (31%)
Number of preds handled by boolean abs:   62 (17%)
  Total number of models for allsat:      62
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.495s
  Time for path formula creation:        0.465s
Time for strengthen operator:            0.021s
Time for prec operator:                  0.325s
  Time for abstraction:                  0.303s (Max:     0.018s, Count: 498)
    Boolean abstraction:                 0.055s
    Solving time:                        0.053s (Max:     0.012s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.004s (Max:     0.003s)
Time for merge operator:                 0.008s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.056s

Number of path formula cache hits:   2634 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.453s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         109 (count: 815, min: 0, max: 109, avg: 0.13)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.081s
Automaton transfers with branching:                0
Automaton transfer successors:                         4176 (count: 4176, min: 1, max: 1, avg: 1.00) [1 x 4176]

CPA algorithm statistics
------------------------
Number of iterations:            1499
Max size of waitlist:            6
Average size of waitlist:        2
Number of computed successors:   1603
Max successors for one state:    2
Number of times merged:          4
Number of times stopped:         64
Number of times breaked:         8

Total time for CPA algorithm:         1.300s (Max:     0.308s)
  Time for choose from waitlist:      0.003s
  Time for precision adjustment:      0.383s
  Time for transfer relation:         0.799s
  Time for merge operator:            0.016s
  Time for stop operator:             0.022s
  Time for adding to reached set:     0.036s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 169 (count: 8, min: 5, max: 51, avg: 21.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.095s
  Counterexample analysis:                             0.068s (Max:     0.022s, Calls: 8)
    Refinement sat check:                              0.041s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.003s
  ARG update:                                          0.008s

Length of refined path (in blocks):                     161 (count: 8, min: 4, max: 50, avg: 20.13)
Number of affected states:                              153 (count: 8, min: 3, max: 49, avg: 19.13)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       153 (count: 8, min: 3, max: 49, avg: 19.13)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             145 (count: 8, min: 2, max: 48, avg: 18.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 330
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 161.88
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.412s
Time for refinements:                 0.110s
Average time for refinement:          0.013s
Max time for refinement:              0.029s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          925
  Total lines:            973
  Line coverage:          0.951
  Visited conditions:     20
  Total conditions:       40
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     1082
Number of CFA edges:             1117
Number of relevant variables:    101
Number of functions:             23
Number of loops:                 1
Size of reached set:             254
  Number of reached locations:   133 (12%)
    Avg states per location:     1
    Max states per location:     18 (at node N18)
  Number of reached functions:   13 (57%)
  Number of partitions:          254
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.625s
  Time for loading CPAs:          0.673s
  Time for loading parser:        0.445s
  Time for CFA construction:      1.439s
    Time for parsing file(s):     0.465s
    Time for AST to CFA:          0.460s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.296s
      Time for var class.:        0.102s
Time for Analysis:                1.412s
CPU time for analysis:            1.420s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.040s
Total CPU time for CPAchecker:    4.040s
Time for statistics:              0.072s

Time for Garbage Collector:       0.118s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     31MB (    29 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    24 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7978MB (  7608 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
