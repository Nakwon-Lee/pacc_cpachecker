scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hid--hid-cherry.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jz98zq2i/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            417 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  366 (88%)
  Because of loop head:            44 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (2%)
  Times precision was empty:       185 (44%)
  Times precision was {false}:     19 (5%)
  Times result was cached:         196 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (4%)
  Times result was 'false':        13 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         501
  BDD entailment checks:           85
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          2
Number of abstraction locations:          19
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         232
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.44
Number of irrelevant predicates:          97 (42%)
Number of preds handled by boolean abs:   17 (7%)
  Total number of models for allsat:      17
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.711s
  Time for path formula creation:        0.689s
Time for strengthen operator:            0.016s
Time for prec operator:                  0.295s
  Time for abstraction:                  0.235s (Max:     0.014s, Count: 417)
    Boolean abstraction:                 0.021s
    Solving time:                        0.035s (Max:     0.008s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.056s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.037s

Number of path formula cache hits:   3914 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.611s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          25 (count: 472, min: 0, max: 25, avg: 0.05)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.073s
Automaton transfers with branching:                0
Automaton transfer successors:                         6269 (count: 6269, min: 1, max: 1, avg: 1.00) [1 x 6269]

CPA algorithm statistics
------------------------
Number of iterations:            2265
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   2575
Max successors for one state:    2
Number of times merged:          208
Number of times stopped:         263
Number of times breaked:         7

Total time for CPA algorithm:         1.711s (Max:     0.547s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      0.425s
  Time for transfer relation:         1.063s
  Time for merge operator:            0.060s
  Time for stop operator:             0.036s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  86 (count: 7, min: 5, max: 17, avg: 12.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.117s
  Counterexample analysis:                             0.066s (Max:     0.021s, Calls: 7)
    Refinement sat check:                              0.025s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.001s
  ARG update:                                          0.030s

Length of refined path (in blocks):                      79 (count: 7, min: 4, max: 16, avg: 11.29)
Number of affected states:                               72 (count: 7, min: 3, max: 15, avg: 10.29)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        72 (count: 7, min: 3, max: 15, avg: 10.29)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              65 (count: 7, min: 2, max: 14, avg: 9.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 364
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 303.43
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.854s
Time for refinements:                 0.137s
Average time for refinement:          0.019s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          551
  Total lines:            599
  Line coverage:          0.920
  Visited conditions:     32
  Total conditions:       52
  Condition coverage:     0.615

CPAchecker general statistics
-----------------------------
Number of program locations:     696
Number of CFA edges:             722
Number of relevant variables:    85
Number of functions:             19
Number of loops:                 1
Size of reached set:             197
  Number of reached locations:   117 (17%)
    Avg states per location:     1
    Max states per location:     4 (at node N163)
  Number of reached functions:   9 (47%)
  Number of partitions:          197
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.754s
  Time for loading CPAs:          0.607s
  Time for loading parser:        0.502s
  Time for CFA construction:      1.498s
    Time for parsing file(s):     0.560s
    Time for AST to CFA:          0.448s
    Time for CFA sanity check:    0.056s
    Time for post-processing:     0.282s
      Time for var class.:        0.111s
Time for Analysis:                1.859s
CPU time for analysis:            1.860s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.615s
Total CPU time for CPAchecker:    4.610s
Time for statistics:              0.065s

Time for Garbage Collector:       0.105s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     31MB (    30 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     26MB (    25 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7978MB (  7608 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
