scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--net--usb--plusb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u659ws_u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            84 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  67 (80%)
  Because of loop head:            14 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (4%)
  Times precision was empty:       36 (43%)
  Times precision was {false}:     12 (14%)
  Times result was cached:         21 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (18%)
  Times result was 'false':        3 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         32
  BDD entailment checks:           16
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       27
Number of predicates discovered:          2
Number of abstraction locations:          13
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         48
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.78
Number of irrelevant predicates:          18 (38%)
Number of preds handled by boolean abs:   15 (31%)
  Total number of models for allsat:      15
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.407s
  Time for path formula creation:        0.402s
Time for strengthen operator:            0.006s
Time for prec operator:                  0.118s
  Time for abstraction:                  0.109s (Max:     0.013s, Count: 84)
    Boolean abstraction:                 0.021s
    Solving time:                        0.020s (Max:     0.010s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.021s

Number of path formula cache hits:   488 (29%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.380s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 207, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.035s
Automaton transfers with branching:                0
Automaton transfer successors:                         1648 (count: 1648, min: 1, max: 1, avg: 1.00) [1 x 1648]

CPA algorithm statistics
------------------------
Number of iterations:            337
Max size of waitlist:            5
Average size of waitlist:        2
Number of computed successors:   365
Max successors for one state:    2
Number of times merged:          8
Number of times stopped:         19
Number of times breaked:         3

Total time for CPA algorithm:         0.799s (Max:     0.474s)
  Time for choose from waitlist:      0.001s
  Time for precision adjustment:      0.156s
  Time for transfer relation:         0.558s
  Time for merge operator:            0.015s
  Time for stop operator:             0.038s
  Time for adding to reached set:     0.006s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  32 (count: 3, min: 4, max: 15, avg: 10.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.033s
  Counterexample analysis:                             0.018s (Max:     0.008s, Calls: 3)
    Refinement sat check:                              0.008s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.002s
  ARG update:                                          0.003s

Length of refined path (in blocks):                      29 (count: 3, min: 3, max: 14, avg: 9.67)
Number of affected states:                               26 (count: 3, min: 2, max: 13, avg: 8.67)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        26 (count: 3, min: 2, max: 13, avg: 8.67)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              23 (count: 3, min: 1, max: 12, avg: 7.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 123
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 90.67
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       0.842s
Time for refinements:                 0.041s
Average time for refinement:          0.013s
Max time for refinement:              0.027s

Code Coverage
-----------------------------
  Function coverage:      0.389
  Visited lines:          891
  Total lines:            943
  Line coverage:          0.945
  Visited conditions:     14
  Total conditions:       34
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     1040
Number of CFA edges:             1054
Number of relevant variables:    68
Number of functions:             18
Number of loops:                 1
Size of reached set:             81
  Number of reached locations:   73 (7%)
    Avg states per location:     1
    Max states per location:     2 (at node N58)
  Number of reached functions:   7 (39%)
  Number of partitions:          81
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.999s
  Time for loading CPAs:          0.643s
  Time for loading parser:        0.447s
  Time for CFA construction:      1.782s
    Time for parsing file(s):     0.588s
    Time for AST to CFA:          0.583s
    Time for CFA sanity check:    0.076s
    Time for post-processing:     0.393s
      Time for var class.:        0.112s
Time for Analysis:                0.845s
CPU time for analysis:            0.840s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.847s
Total CPU time for CPAchecker:    3.840s
Time for statistics:              0.062s

Time for Garbage Collector:       0.101s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 49MB (    47 MiB) max;     28MB (    27 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             32MB (    30 MiB) max;     24MB (    23 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8024MB (  7652 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
