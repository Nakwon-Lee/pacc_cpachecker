scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--i2c--busses--i2c-diolan-u2c.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0w7d7m_h/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_add_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17334 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14644 (84%)
  Because of loop head:            2667 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (0%)
  Times precision was empty:       2542 (15%)
  Times precision was {false}:     1067 (6%)
  Times result was cached:         13431 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      294 (2%)
  Times result was 'false':        34 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         24363
  BDD entailment checks:           5309
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       91
Number of predicates discovered:          3
Number of abstraction locations:          88
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         14883
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 10.94
Number of irrelevant predicates:          8233 (55%)
Number of preds handled by boolean abs:   297 (2%)
  Total number of models for allsat:      300
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 11.176s
  Time for path formula creation:       10.955s
Time for strengthen operator:            0.428s
Time for prec operator:                  6.358s
  Time for abstraction:                  5.979s (Max:     0.397s, Count: 17334)
    Boolean abstraction:                 0.288s
    Solving time:                        1.214s (Max:     0.018s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.032s (Max:     0.007s)
Time for merge operator:                 0.691s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     1.238s

Number of path formula cache hits:   141967 (42%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.212s

Total number of created targets for pointer analysis: 3175
   Number of created targets for uf: *signed_int is 1442
   Number of created targets for uf: *unsigned_char is 30
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         589 (count: 14971, min: 0, max: 90, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.801s
  Time for transition matches:                         0.421s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       331177 (count: 331177, min: 1, max: 1, avg: 1.00) [1 x 331177]

CPA algorithm statistics
------------------------
Number of iterations:            100775
Max size of waitlist:            37
Average size of waitlist:        18
Number of computed successors:   115696
Max successors for one state:    2
Number of times merged:          9527
Number of times stopped:         14615
Number of times breaked:         23

Total time for CPA algorithm:        25.206s (Max:     2.546s)
  Time for choose from waitlist:      0.134s
  Time for precision adjustment:      7.329s
  Time for transfer relation:        15.208s
  Time for merge operator:            1.058s
  Time for stop operator:             0.382s
  Time for adding to reached set:     0.354s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 663 (count: 23, min: 4, max: 56, avg: 28.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.754s
  Counterexample analysis:                             0.370s (Max:     0.032s, Calls: 23)
    Refinement sat check:                              0.255s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.016s
  ARG update:                                          0.307s

Length of refined path (in blocks):                     625 (count: 23, min: 3, max: 55, avg: 27.17)
Number of affected states:                              592 (count: 23, min: 1, max: 54, avg: 25.74)
Length (states) of path with itp 'true':                 10 (count: 23, min: 0, max: 10, avg: 0.43)
Length (states) of path with itp non-trivial itp:       592 (count: 23, min: 1, max: 54, avg: 25.74)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 23, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             569 (count: 23, min: 0, max: 53, avg: 24.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 7038
Max. size of reached set after ref.:  81
Avg. size of reached set before ref.: 4226.26
Avg. size of reached set after ref.:  6.39

Total time for CEGAR algorithm:      26.089s
Time for refinements:                 0.882s
Average time for refinement:          0.038s
Max time for refinement:              0.101s

Code Coverage
-----------------------------
  Function coverage:      0.750
  Visited lines:          1879
  Total lines:            1931
  Line coverage:          0.973
  Visited conditions:     124
  Total conditions:       144
  Condition coverage:     0.861

CPAchecker general statistics
-----------------------------
Number of program locations:     2191
Number of CFA edges:             2278
Number of relevant variables:    484
Number of functions:             44
Number of loops:                 4
Size of reached set:             3991
  Number of reached locations:   456 (21%)
    Avg states per location:     8
    Max states per location:     132 (at node N100)
  Number of reached functions:   33 (75%)
  Number of partitions:          3990
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1059 (before lines 4406-4594), Function diolan_usb_xfer called from node N1582, stack depth 2 [20866076], stack [main, diolan_usb_xfer]])
  Number of target states:       0

Time for analysis setup:          3.547s
  Time for loading CPAs:          0.768s
  Time for loading parser:        0.559s
  Time for CFA construction:      2.093s
    Time for parsing file(s):     0.626s
    Time for AST to CFA:          0.680s
    Time for CFA sanity check:    0.136s
    Time for post-processing:     0.501s
      Time for var class.:        0.255s
Time for Analysis:               26.089s
CPU time for analysis:           26.090s
Time for analyzing result:        0.003s
Total time for CPAchecker:       29.639s
Total CPU time for CPAchecker:   29.630s
Time for statistics:              0.118s

Time for Garbage Collector:       2.068s (in 71 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                208MB (   199 MiB) max;     92MB (    87 MiB) avg;    226MB (   215 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           303MB (   289 MiB) max;    156MB (   149 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
