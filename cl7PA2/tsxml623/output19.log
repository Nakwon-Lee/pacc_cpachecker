scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--i2c--busses--i2c-diolan-u2c.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lw3_xeso/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_add_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            19408 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16457 (85%)
  Because of loop head:            2929 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       4961 (26%)
  Times precision was {false}:     732 (4%)
  Times result was cached:         13448 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      267 (1%)
  Times result was 'false':        41 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         27661
  BDD entailment checks:           5927
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       91
Number of predicates discovered:          3
Number of abstraction locations:          88
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         14495
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 14.51
Number of irrelevant predicates:          10109 (70%)
Number of preds handled by boolean abs:   270 (2%)
  Total number of models for allsat:      281
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  7.556s
  Time for path formula creation:        7.404s
Time for strengthen operator:            0.434s
Time for prec operator:                  5.039s
  Time for abstraction:                  4.630s (Max:     0.032s, Count: 19408)
    Boolean abstraction:                 0.291s
    Solving time:                        0.812s (Max:     0.032s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.007s (Max:     0.001s)
Time for merge operator:                 0.449s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     0.843s

Number of path formula cache hits:   275596 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.575s

Total number of created targets for pointer analysis: 1851
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         537 (count: 16165, min: 0, max: 60, avg: 0.03)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.731s
  Time for transition matches:                         0.381s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                       377388 (count: 377388, min: 1, max: 1, avg: 1.00) [1 x 377388]

CPA algorithm statistics
------------------------
Number of iterations:            113858
Max size of waitlist:            23
Average size of waitlist:        12
Number of computed successors:   130598
Max successors for one state:    2
Number of times merged:          10867
Number of times stopped:         16602
Number of times breaked:         22

Total time for CPA algorithm:        19.840s (Max:     2.077s)
  Time for choose from waitlist:      0.082s
  Time for precision adjustment:      6.098s
  Time for transfer relation:        11.545s
  Time for merge operator:            0.713s
  Time for stop operator:             0.258s
  Time for adding to reached set:     0.272s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 716 (count: 22, min: 4, max: 53, avg: 32.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.847s
  Counterexample analysis:                             0.410s (Max:     0.042s, Calls: 22)
    Refinement sat check:                              0.280s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.027s
  ARG update:                                          0.354s

Length of refined path (in blocks):                     679 (count: 22, min: 3, max: 52, avg: 30.86)
Number of affected states:                              647 (count: 22, min: 1, max: 51, avg: 29.41)
Length (states) of path with itp 'true':                 10 (count: 22, min: 0, max: 10, avg: 0.45)
Length (states) of path with itp non-trivial itp:       647 (count: 22, min: 1, max: 51, avg: 29.41)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             625 (count: 22, min: 0, max: 50, avg: 28.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 8847
Max. size of reached set after ref.:  1253
Avg. size of reached set before ref.: 5058.23
Avg. size of reached set after ref.:  59.82

Total time for CEGAR algorithm:      20.842s
Time for refinements:                 1.001s
Average time for refinement:          0.045s
Max time for refinement:              0.101s

Code Coverage
-----------------------------
  Function coverage:      0.750
  Visited lines:          1879
  Total lines:            1931
  Line coverage:          0.973
  Visited conditions:     124
  Total conditions:       144
  Condition coverage:     0.861

CPAchecker general statistics
-----------------------------
Number of program locations:     2191
Number of CFA edges:             2278
Number of relevant variables:    484
Number of functions:             44
Number of loops:                 4
Size of reached set:             3991
  Number of reached locations:   456 (21%)
    Avg states per location:     8
    Max states per location:     132 (at node N100)
  Number of reached functions:   33 (75%)
  Number of partitions:          3990
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1059 (before lines 4406-4594), Function diolan_usb_xfer called from node N1582, stack depth 2 [4e3e8ce2], stack [main, diolan_usb_xfer]])
  Number of target states:       0

Time for analysis setup:          3.024s
  Time for loading CPAs:          0.611s
  Time for loading parser:        0.537s
  Time for CFA construction:      1.800s
    Time for parsing file(s):     0.541s
    Time for AST to CFA:          0.577s
    Time for CFA sanity check:    0.114s
    Time for post-processing:     0.426s
      Time for var class.:        0.218s
Time for Analysis:               20.842s
CPU time for analysis:           20.840s
Time for analyzing result:        0.003s
Total time for CPAchecker:       23.869s
Total CPU time for CPAchecker:   23.860s
Time for statistics:              0.110s

Time for Garbage Collector:       1.274s (in 76 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                140MB (   133 MiB) max;     70MB (    67 MiB) avg;    151MB (   144 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           160MB (   153 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
