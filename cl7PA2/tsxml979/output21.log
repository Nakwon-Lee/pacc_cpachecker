scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--spcp8x5_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_otqmlh6y/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3557: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3560: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3563: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3569: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5869: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_handle_dcd_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_hw_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10834 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9877 (91%)
  Because of loop head:            887 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70 (1%)
  Times precision was empty:       4579 (42%)
  Times precision was {false}:     227 (2%)
  Times result was cached:         5842 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      186 (2%)
  Times result was 'false':        23 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         9413
  BDD entailment checks:           2317
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       174
Number of predicates discovered:          2
Number of abstraction locations:          79
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         6255
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 15.15
Number of irrelevant predicates:          3019 (48%)
Number of preds handled by boolean abs:   186 (3%)
  Total number of models for allsat:      186
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.801s
  Time for path formula creation:        2.723s
Time for strengthen operator:            0.199s
Time for prec operator:                  2.441s
  Time for abstraction:                  2.174s (Max:     0.064s, Count: 10834)
    Boolean abstraction:                 0.400s
    Solving time:                        0.563s (Max:     0.045s)
    Model enumeration time:              0.075s
    Time for BDD construction:           0.011s (Max:     0.005s)
Time for merge operator:                 0.187s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.638s

Number of path formula cache hits:   103049 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.552s

Total number of created targets for pointer analysis: 466
   Number of created targets for uf: *unsigned_char is 11
   Number of created targets for uf: *char is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         359 (count: 9152, min: 0, max: 76, avg: 0.04)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.292s
Automaton transfers with branching:                0
Automaton transfer successors:                       129656 (count: 129656, min: 1, max: 1, avg: 1.00) [1 x 129656]

CPA algorithm statistics
------------------------
Number of iterations:            45323
Max size of waitlist:            21
Average size of waitlist:        10
Number of computed successors:   50688
Max successors for one state:    2
Number of times merged:          3548
Number of times stopped:         4961
Number of times breaked:         70

Total time for CPA algorithm:         8.603s (Max:     0.867s)
  Time for choose from waitlist:      0.045s
  Time for precision adjustment:      2.997s
  Time for transfer relation:         4.558s
  Time for merge operator:            0.303s
  Time for stop operator:             0.127s
  Time for adding to reached set:     0.180s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   70
Avg. length of target path (in blocks):                2081 (count: 70, min: 7, max: 47, avg: 29.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.489s
  Counterexample analysis:                             1.144s (Max:     0.065s, Calls: 70)
    Refinement sat check:                              0.910s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.080s
  Precision update:                                    0.071s
  ARG update:                                          0.113s

Length of refined path (in blocks):                    2011 (count: 70, min: 6, max: 46, avg: 28.73)
Number of affected states:                             1229 (count: 70, min: 5, max: 28, avg: 17.56)
Length (states) of path with itp 'true':                712 (count: 70, min: 0, max: 28, avg: 10.17)
Length (states) of path with itp non-trivial itp:      1229 (count: 70, min: 5, max: 28, avg: 17.56)
Length (states) of path with itp 'false':                70 (count: 70, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 70, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1159 (count: 70, min: 4, max: 27, avg: 16.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                70
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 2018
Max. size of reached set after ref.:  1352
Avg. size of reached set before ref.: 1136.23
Avg. size of reached set after ref.:  504.30

Total time for CEGAR algorithm:      10.286s
Time for refinements:                 1.656s
Average time for refinement:          0.023s
Max time for refinement:              0.068s

Code Coverage
-----------------------------
  Function coverage:      0.872
  Visited lines:          2664
  Total lines:            2684
  Line coverage:          0.993
  Visited conditions:     222
  Total conditions:       230
  Condition coverage:     0.965

CPAchecker general statistics
-----------------------------
Number of program locations:     2960
Number of CFA edges:             3107
Number of relevant variables:    702
Number of functions:             39
Number of loops:                 5
Size of reached set:             1470
  Number of reached locations:   708 (24%)
    Avg states per location:     2
    Max states per location:     14 (at node N208)
  Number of reached functions:   34 (87%)
  Number of partitions:          1470
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.067s
  Time for loading CPAs:          0.722s
  Time for loading parser:        0.357s
  Time for CFA construction:      1.882s
    Time for parsing file(s):     0.537s
    Time for AST to CFA:          0.621s
    Time for CFA sanity check:    0.146s
    Time for post-processing:     0.465s
      Time for var class.:        0.217s
Time for Analysis:               10.287s
CPU time for analysis:           10.280s
Time for analyzing result:        0.000s
Total time for CPAchecker:       13.365s
Total CPU time for CPAchecker:   13.350s
Time for statistics:              0.118s

Time for Garbage Collector:       0.355s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     48MB (    46 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   8005MB (  7634 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
