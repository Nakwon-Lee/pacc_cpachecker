scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--rtc--rtc-pcf2123.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2afza07o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2967: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2973: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_write_then_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcd2bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_valid_tm to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bin2bcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1686 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1550 (92%)
  Because of loop head:            120 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       206 (12%)
  Times precision was {false}:     84 (5%)
  Times result was cached:         1310 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      86 (5%)
  Times result was 'false':        29 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         677
  BDD entailment checks:           249
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       137
Number of predicates discovered:          2
Number of abstraction locations:          54
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1480
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 8.71
Number of irrelevant predicates:          284 (19%)
Number of preds handled by boolean abs:   86 (6%)
  Total number of models for allsat:      86
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.938s
  Time for path formula creation:        0.894s
Time for strengthen operator:            0.050s
Time for prec operator:                  0.828s
  Time for abstraction:                  0.742s (Max:     0.021s, Count: 1686)
    Boolean abstraction:                 0.123s
    Solving time:                        0.157s (Max:     0.019s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.037s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.171s

Number of path formula cache hits:   23931 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.816s

Total number of created targets for pointer analysis: 517
   Number of created targets for uf: *unsigned_char is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         163 (count: 1396, min: 0, max: 58, avg: 0.12)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.175s
Automaton transfers with branching:                0
Automaton transfer successors:                        31954 (count: 31954, min: 1, max: 1, avg: 1.00) [1 x 31954]

CPA algorithm statistics
------------------------
Number of iterations:            6277
Max size of waitlist:            9
Average size of waitlist:        3
Number of computed successors:   6800
Max successors for one state:    2
Number of times merged:          214
Number of times stopped:         416
Number of times breaked:         16

Total time for CPA algorithm:         2.914s (Max:     0.438s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      0.992s
  Time for transfer relation:         1.666s
  Time for merge operator:            0.070s
  Time for stop operator:             0.055s
  Time for adding to reached set:     0.040s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 565 (count: 16, min: 4, max: 62, avg: 35.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.384s
  Counterexample analysis:                             0.308s (Max:     0.031s, Calls: 16)
    Refinement sat check:                              0.219s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.003s
  ARG update:                                          0.025s

Length of refined path (in blocks):                     549 (count: 16, min: 3, max: 61, avg: 34.31)
Number of affected states:                              533 (count: 16, min: 2, max: 60, avg: 33.31)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       533 (count: 16, min: 2, max: 60, avg: 33.31)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             517 (count: 16, min: 1, max: 59, avg: 32.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 544
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 370.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.333s
Time for refinements:                 0.418s
Average time for refinement:          0.026s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.515
  Visited lines:          1712
  Total lines:            2005
  Line coverage:          0.854
  Visited conditions:     64
  Total conditions:       104
  Condition coverage:     0.615

CPAchecker general statistics
-----------------------------
Number of program locations:     2233
Number of CFA edges:             2305
Number of relevant variables:    521
Number of functions:             33
Number of loops:                 4
Size of reached set:             476
  Number of reached locations:   291 (13%)
    Avg states per location:     1
    Max states per location:     9 (at node N925)
  Number of reached functions:   17 (52%)
  Number of partitions:          476
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.015s
  Time for loading CPAs:          0.571s
  Time for loading parser:        0.447s
  Time for CFA construction:      1.920s
    Time for parsing file(s):     0.594s
    Time for AST to CFA:          0.663s
    Time for CFA sanity check:    0.110s
    Time for post-processing:     0.417s
      Time for var class.:        0.207s
Time for Analysis:                3.333s
CPU time for analysis:            3.320s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.351s
Total CPU time for CPAchecker:    6.330s
Time for statistics:              0.060s

Time for Garbage Collector:       0.140s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     38MB (    36 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7988MB (  7618 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
