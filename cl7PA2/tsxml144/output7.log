scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--frontends--cxd2820r.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u_qjjda4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function intlog10 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6222: Ignoring call via function pointer cxd2820r_set_frontend_c::__cil_tmp145 for which no suitable target was found in line: (*__cil_tmp145)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6222: Ignoring function call through function pointer *__cil_tmp145: (*__cil_tmp145)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6293: Ignoring call via function pointer cxd2820r_set_frontend_c::__cil_tmp176 for which no suitable target was found in line: ret = (*__cil_tmp176)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6293: Ignoring function call through function pointer *__cil_tmp176: ret = (*__cil_tmp176)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10433: Ignoring call via function pointer cxd2820r_set_frontend_t2::__cil_tmp364 for which no suitable target was found in line: (*__cil_tmp364)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10433: Ignoring function call through function pointer *__cil_tmp364: (*__cil_tmp364)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10501: Ignoring call via function pointer cxd2820r_set_frontend_t2::__cil_tmp393 for which no suitable target was found in line: ret = (*__cil_tmp393)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10501: Ignoring function call through function pointer *__cil_tmp393: ret = (*__cil_tmp393)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7960: Ignoring call via function pointer cxd2820r_set_frontend_t::__cil_tmp219 for which no suitable target was found in line: (*__cil_tmp219)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7960: Ignoring function call through function pointer *__cil_tmp219: (*__cil_tmp219)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8031: Ignoring call via function pointer cxd2820r_set_frontend_t::__cil_tmp250 for which no suitable target was found in line: ret = (*__cil_tmp250)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8031: Ignoring function call through function pointer *__cil_tmp250: ret = (*__cil_tmp250)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function intlog2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32438 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30852 (95%)
  Because of loop head:            1534 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         52 (0%)
  Times precision was empty:       15485 (48%)
  Times precision was {false}:     785 (2%)
  Times result was cached:         15763 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      405 (1%)
  Times result was 'false':        134 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         38000
  BDD entailment checks:           7878
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       857
Number of predicates discovered:          2
Number of abstraction locations:          126
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         16953
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 14.25
Number of irrelevant predicates:          8744 (52%)
Number of preds handled by boolean abs:   405 (2%)
  Total number of models for allsat:      403
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.002s
  Time for path formula creation:        5.646s
Time for strengthen operator:            0.783s
Time for prec operator:                  7.141s
  Time for abstraction:                  6.589s (Max:     0.051s, Count: 32438)
    Boolean abstraction:                 0.658s
    Solving time:                        1.787s (Max:     0.047s)
    Model enumeration time:              0.050s
    Time for BDD construction:           0.021s (Max:     0.006s)
Time for merge operator:                 0.390s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.837s

Number of path formula cache hits:   910186 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.498s

Total number of created targets for pointer analysis: 12075
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 53
   Number of created targets for uf: *enum_fe_status is 52
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         811 (count: 29729, min: 0, max: 40, avg: 0.03)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.463s
  Time for transition matches:                         0.804s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       942847 (count: 942847, min: 1, max: 1, avg: 1.00) [1 x 942847]

CPA algorithm statistics
------------------------
Number of iterations:            199096
Max size of waitlist:            274
Average size of waitlist:        62
Number of computed successors:   225282
Max successors for one state:    2
Number of times merged:          15061
Number of times stopped:         21076
Number of times breaked:         52

Total time for CPA algorithm:        24.075s (Max:     1.406s)
  Time for choose from waitlist:      0.113s
  Time for precision adjustment:      8.556s
  Time for transfer relation:        13.242s
  Time for merge operator:            0.687s
  Time for stop operator:             0.356s
  Time for adding to reached set:     0.386s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   52
Avg. length of target path (in blocks):                 574 (count: 52, min: 4, max: 17, avg: 11.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.054s
  Counterexample analysis:                             0.419s (Max:     0.019s, Calls: 52)
    Refinement sat check:                              0.312s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.047s
  ARG update:                                          0.520s

Length of refined path (in blocks):                     522 (count: 52, min: 3, max: 16, avg: 10.04)
Number of affected states:                              470 (count: 52, min: 2, max: 15, avg: 9.04)
Length (states) of path with itp 'true':                  0 (count: 52, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       470 (count: 52, min: 2, max: 15, avg: 9.04)
Length (states) of path with itp 'false':                52 (count: 52, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 52, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             418 (count: 52, min: 1, max: 14, avg: 8.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                52
Number of successful refinements:     52
Number of failed refinements:         0
Max. size of reached set before ref.: 8728
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 3927.42
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.426s
Time for refinements:                 1.340s
Average time for refinement:          0.025s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.015
  Visited lines:          577
  Total lines:            6983
  Line coverage:          0.083
  Visited conditions:     0
  Total conditions:       670
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     7623
Number of CFA edges:             8039
Number of relevant variables:    2250
Number of functions:             67
Number of loops:                 9
Size of reached set:             3
  Number of reached locations:   3 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N1777)
  Number of reached functions:   1 (1%)
  Number of partitions:          3
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.930s
  Time for loading CPAs:          0.976s
  Time for loading parser:        0.541s
  Time for CFA construction:      3.274s
    Time for parsing file(s):     0.748s
    Time for AST to CFA:          1.124s
    Time for CFA sanity check:    0.371s
    Time for post-processing:     0.876s
      Time for var class.:        0.442s
Time for Analysis:               25.426s
CPU time for analysis:           25.420s
Total time for CPAchecker:       30.358s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.061s

Time for Garbage Collector:       1.450s (in 138 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                115MB (   110 MiB) max;     65MB (    62 MiB) avg;    123MB (   117 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
