scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--frontends--cxd2820r.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_308gifak/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function intlog10 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function intlog2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6222: Ignoring call via function pointer cxd2820r_set_frontend_c::__cil_tmp145 for which no suitable target was found in line: (*__cil_tmp145)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6222: Ignoring function call through function pointer *__cil_tmp145: (*__cil_tmp145)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6293: Ignoring call via function pointer cxd2820r_set_frontend_c::__cil_tmp176 for which no suitable target was found in line: ret = (*__cil_tmp176)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6293: Ignoring function call through function pointer *__cil_tmp176: ret = (*__cil_tmp176)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10433: Ignoring call via function pointer cxd2820r_set_frontend_t2::__cil_tmp364 for which no suitable target was found in line: (*__cil_tmp364)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10433: Ignoring function call through function pointer *__cil_tmp364: (*__cil_tmp364)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10501: Ignoring call via function pointer cxd2820r_set_frontend_t2::__cil_tmp393 for which no suitable target was found in line: ret = (*__cil_tmp393)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10501: Ignoring function call through function pointer *__cil_tmp393: ret = (*__cil_tmp393)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29295 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26790 (91%)
  Because of loop head:            2434 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       4779 (16%)
  Times precision was {false}:     715 (2%)
  Times result was cached:         23292 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      509 (2%)
  Times result was 'false':        230 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         32430
  BDD entailment checks:           7470
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       857
Number of predicates discovered:          2
Number of abstraction locations:          149
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         24516
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 20.03
Number of irrelevant predicates:          5520 (23%)
Number of preds handled by boolean abs:   509 (2%)
  Total number of models for allsat:      505
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  5.153s
  Time for path formula creation:        4.915s
Time for strengthen operator:            0.544s
Time for prec operator:                  9.538s
  Time for abstraction:                  8.926s (Max:     0.253s, Count: 29295)
    Boolean abstraction:                 1.452s
    Solving time:                        2.333s (Max:     0.218s)
    Model enumeration time:              0.101s
    Time for BDD construction:           0.088s (Max:     0.009s)
Time for merge operator:                 0.340s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):     2.434s

Number of path formula cache hits:   678996 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.902s

Total number of created targets for pointer analysis: 2737
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 25
   Number of created targets for uf: *enum_fe_status is 2
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1017 (count: 18883, min: 0, max: 52, avg: 0.05)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.962s
  Time for transition matches:                         0.482s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       723065 (count: 723065, min: 1, max: 1, avg: 1.00) [1 x 723065]

CPA algorithm statistics
------------------------
Number of iterations:            171156
Max size of waitlist:            174
Average size of waitlist:        50
Number of computed successors:   195151
Max successors for one state:    2
Number of times merged:          12480
Number of times stopped:         18064
Number of times breaked:         71

Total time for CPA algorithm:        23.886s (Max:     0.918s)
  Time for choose from waitlist:      0.156s
  Time for precision adjustment:     10.746s
  Time for transfer relation:        10.860s
  Time for merge operator:            0.636s
  Time for stop operator:             0.364s
  Time for adding to reached set:     0.345s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                 992 (count: 71, min: 4, max: 27, avg: 13.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.806s
  Counterexample analysis:                             1.139s (Max:     0.142s, Calls: 71)
    Refinement sat check:                              0.918s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.085s
  Precision update:                                    0.050s
  ARG update:                                          0.509s

Length of refined path (in blocks):                     921 (count: 71, min: 3, max: 26, avg: 12.97)
Number of affected states:                              850 (count: 71, min: 2, max: 25, avg: 11.97)
Length (states) of path with itp 'true':                  0 (count: 71, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       850 (count: 71, min: 2, max: 25, avg: 11.97)
Length (states) of path with itp 'false':                71 (count: 71, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 71, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             779 (count: 71, min: 1, max: 24, avg: 10.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     71
Number of failed refinements:         0
Max. size of reached set before ref.: 6027
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2417.24
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.916s
Time for refinements:                 2.029s
Average time for refinement:          0.028s
Max time for refinement:              0.154s

Code Coverage
-----------------------------
  Function coverage:      0.821
  Visited lines:          5873
  Total lines:            6983
  Line coverage:          0.841
  Visited conditions:     512
  Total conditions:       670
  Condition coverage:     0.764

CPAchecker general statistics
-----------------------------
Number of program locations:     7623
Number of CFA edges:             8039
Number of relevant variables:    2250
Number of functions:             67
Number of loops:                 9
Size of reached set:             5447
  Number of reached locations:   1448 (19%)
    Avg states per location:     3
    Max states per location:     84 (at node N290)
  Number of reached functions:   55 (82%)
  Number of partitions:          5447
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        129

Time for analysis setup:          4.377s
  Time for loading CPAs:          0.941s
  Time for loading parser:        0.530s
  Time for CFA construction:      2.805s
    Time for parsing file(s):     0.608s
    Time for AST to CFA:          0.832s
    Time for CFA sanity check:    0.332s
    Time for post-processing:     0.880s
      Time for var class.:        0.433s
Time for Analysis:               25.917s
CPU time for analysis:           25.920s
Total time for CPAchecker:       30.297s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.178s

Time for Garbage Collector:       1.404s (in 131 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                116MB (   111 MiB) max;     70MB (    67 MiB) avg;    120MB (   114 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     40MB (    38 MiB) avg;     44MB (    42 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
