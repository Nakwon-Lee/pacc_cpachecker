scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--frontends--cxd2820r.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_461d966k/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function intlog10 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function intlog2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6222: Ignoring call via function pointer cxd2820r_set_frontend_c::__cil_tmp145 for which no suitable target was found in line: (*__cil_tmp145)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6222: Ignoring function call through function pointer *__cil_tmp145: (*__cil_tmp145)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6293: Ignoring call via function pointer cxd2820r_set_frontend_c::__cil_tmp176 for which no suitable target was found in line: ret = (*__cil_tmp176)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6293: Ignoring function call through function pointer *__cil_tmp176: ret = (*__cil_tmp176)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10433: Ignoring call via function pointer cxd2820r_set_frontend_t2::__cil_tmp364 for which no suitable target was found in line: (*__cil_tmp364)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10433: Ignoring function call through function pointer *__cil_tmp364: (*__cil_tmp364)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10501: Ignoring call via function pointer cxd2820r_set_frontend_t2::__cil_tmp393 for which no suitable target was found in line: ret = (*__cil_tmp393)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10501: Ignoring function call through function pointer *__cil_tmp393: ret = (*__cil_tmp393)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7960: Ignoring call via function pointer cxd2820r_set_frontend_t::__cil_tmp219 for which no suitable target was found in line: (*__cil_tmp219)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7960: Ignoring function call through function pointer *__cil_tmp219: (*__cil_tmp219)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8031: Ignoring call via function pointer cxd2820r_set_frontend_t::__cil_tmp250 for which no suitable target was found in line: ret = (*__cil_tmp250)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8031: Ignoring function call through function pointer *__cil_tmp250: ret = (*__cil_tmp250)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1593439 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1577260 (99%)
  Because of loop head:            16081 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         98 (0%)
  Times precision was empty:       409485 (26%)
  Times precision was {false}:     10811 (1%)
  Times result was cached:         1169710 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3433 (0%)
  Times result was 'false':        9503 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2076638
  BDD entailment checks:           420132
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       857
Number of predicates discovered:          2
Number of abstraction locations:          180
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1183954
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 83.12
Number of irrelevant predicates:          811197 (69%)
Number of preds handled by boolean abs:   3433 (0%)
  Total number of models for allsat:      3431
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                213.084s
  Time for path formula creation:      202.468s
Time for strengthen operator:           25.438s
Time for prec operator:                328.892s
  Time for abstraction:                312.948s (Max:     5.082s, Count: 1593439)
    Boolean abstraction:                35.898s
    Solving time:                       67.884s (Max:     4.977s)
    Model enumeration time:              1.126s
    Time for BDD construction:           0.061s (Max:     0.002s)
Time for merge operator:                 6.143s
Time for coverage check:                 0.458s
  Time for BDD entailment checks:        0.289s
Total time for SMT solver (w/o itp):    69.010s

Number of path formula cache hits:   51095227 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    69.824s

Total number of created targets for pointer analysis: 349032
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 343
   Number of created targets for uf: *enum_fe_status is 2
   Number of created targets for uf: *unsigned_int is 52


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6859 (count: 906979, min: 0, max: 376, avg: 0.01)
Time for BDD node cleanup:                             0.115s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 43.075s
  Time for transition matches:                        24.799s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     50605425 (count: 50605425, min: 1, max: 1, avg: 1.00) [1 x 50605425]

CPA algorithm statistics
------------------------
Number of iterations:            10249979
Max size of waitlist:            68
Average size of waitlist:        48
Number of computed successors:   11502756
Max successors for one state:    2
Number of times merged:          828253
Number of times stopped:         1241950
Number of times breaked:         98

Total time for CPA algorithm:       866.358s (Max:    33.433s)
  Time for choose from waitlist:      2.092s
  Time for precision adjustment:    380.728s
  Time for transfer relation:       439.325s
  Time for merge operator:           11.900s
  Time for stop operator:             7.604s
  Time for adding to reached set:     8.674s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   98
Avg. length of target path (in blocks):                2013 (count: 98, min: 4, max: 55, avg: 20.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.306s
  Counterexample analysis:                             4.372s (Max:     0.184s, Calls: 98)
    Refinement sat check:                              3.553s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.033s
  ARG update:                                         19.804s

Length of refined path (in blocks):                    1915 (count: 98, min: 3, max: 54, avg: 19.54)
Number of affected states:                             1817 (count: 98, min: 2, max: 53, avg: 18.54)
Length (states) of path with itp 'true':                  0 (count: 98, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1817 (count: 98, min: 2, max: 53, avg: 18.54)
Length (states) of path with itp 'false':                98 (count: 98, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 98, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1719 (count: 98, min: 1, max: 52, avg: 17.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                98
Number of successful refinements:     98
Number of failed refinements:         0
Max. size of reached set before ref.: 161571
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 104177.96
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:     896.042s
Time for refinements:                29.676s
Average time for refinement:          0.302s
Max time for refinement:              0.690s

Code Coverage
-----------------------------
  Function coverage:      0.836
  Visited lines:          6756
  Total lines:            6983
  Line coverage:          0.967
  Visited conditions:     626
  Total conditions:       670
  Condition coverage:     0.934

CPAchecker general statistics
-----------------------------
Number of program locations:     7623
Number of CFA edges:             8039
Number of relevant variables:    2250
Number of functions:             67
Number of loops:                 9
Size of reached set:             42158
  Number of reached locations:   1710 (22%)
    Avg states per location:     24
    Max states per location:     821 (at node N32)
  Number of reached functions:   56 (84%)
  Number of partitions:          42154
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1489 (before line 4908), Function cxd2820r_search called from node N1897, stack depth 2 [791cc36d], stack [main, cxd2820r_search]])
  Number of target states:       0
  Size of final wait list        50

Time for analysis setup:          4.284s
  Time for loading CPAs:          0.665s
  Time for loading parser:        0.495s
  Time for CFA construction:      3.056s
    Time for parsing file(s):     0.788s
    Time for AST to CFA:          0.964s
    Time for CFA sanity check:    0.285s
    Time for post-processing:     0.864s
      Time for var class.:        0.413s
Time for Analysis:              896.042s
CPU time for analysis:          896.040s
Total time for CPAchecker:      900.328s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              0.657s

Time for Garbage Collector:      95.956s (in 840 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2155MB (  2055 MiB) max;   1083MB (  1032 MiB) avg;   2197MB (  2095 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:          2339MB (  2231 MiB) max;   1560MB (  1488 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8239MB (  7857 MiB) max;   8153MB (  7776 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
