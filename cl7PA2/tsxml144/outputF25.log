scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--frontends--cxd2820r.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_atxc24jb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function intlog10 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function intlog2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6222: Ignoring call via function pointer cxd2820r_set_frontend_c::__cil_tmp145 for which no suitable target was found in line: (*__cil_tmp145)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6222: Ignoring function call through function pointer *__cil_tmp145: (*__cil_tmp145)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6293: Ignoring call via function pointer cxd2820r_set_frontend_c::__cil_tmp176 for which no suitable target was found in line: ret = (*__cil_tmp176)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6293: Ignoring function call through function pointer *__cil_tmp176: ret = (*__cil_tmp176)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10433: Ignoring call via function pointer cxd2820r_set_frontend_t2::__cil_tmp364 for which no suitable target was found in line: (*__cil_tmp364)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10433: Ignoring function call through function pointer *__cil_tmp364: (*__cil_tmp364)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10501: Ignoring call via function pointer cxd2820r_set_frontend_t2::__cil_tmp393 for which no suitable target was found in line: ret = (*__cil_tmp393)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10501: Ignoring function call through function pointer *__cil_tmp393: ret = (*__cil_tmp393)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7960: Ignoring call via function pointer cxd2820r_set_frontend_t::__cil_tmp219 for which no suitable target was found in line: (*__cil_tmp219)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7960: Ignoring function call through function pointer *__cil_tmp219: (*__cil_tmp219)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8031: Ignoring call via function pointer cxd2820r_set_frontend_t::__cil_tmp250 for which no suitable target was found in line: ret = (*__cil_tmp250)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8031: Ignoring function call through function pointer *__cil_tmp250: ret = (*__cil_tmp250)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            216430 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  209749 (97%)
  Because of loop head:            6567 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         114 (0%)
  Times precision was empty:       7009 (3%)
  Times precision was {false}:     1295 (1%)
  Times result was cached:         204399 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3727 (2%)
  Times result was 'false':        3011 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         232621
  BDD entailment checks:           45549
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       857
Number of predicates discovered:          2
Number of abstraction locations:          202
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         209421
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 41.70
Number of irrelevant predicates:          10263 (5%)
Number of preds handled by boolean abs:   3727 (2%)
  Total number of models for allsat:      3707
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                 34.673s
  Time for path formula creation:       33.274s
Time for strengthen operator:            3.066s
Time for prec operator:                 80.012s
  Time for abstraction:                 77.915s (Max:     4.480s, Count: 216430)
    Boolean abstraction:                34.542s
    Solving time:                       34.690s (Max:     4.381s)
    Model enumeration time:              1.141s
    Time for BDD construction:           0.135s (Max:     0.013s)
Time for merge operator:                 1.218s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.067s
Total time for SMT solver (w/o itp):    35.831s

Number of path formula cache hits:   5488500 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.750s

Total number of created targets for pointer analysis: 112244
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 73
   Number of created targets for uf: *enum_fe_status is 2
   Number of created targets for uf: *unsigned_int is 19


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7397 (count: 81400, min: 0, max: 302, avg: 0.09)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.551s
  Time for transition matches:                         2.561s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      5788669 (count: 5788669, min: 1, max: 1, avg: 1.00) [1 x 5788669]

CPA algorithm statistics
------------------------
Number of iterations:            1256974
Max size of waitlist:            1257
Average size of waitlist:        583
Number of computed successors:   1427224
Max successors for one state:    2
Number of times merged:          93536
Number of times stopped:         135815
Number of times breaked:         114

Total time for CPA algorithm:       154.334s (Max:    26.159s)
  Time for choose from waitlist:      0.353s
  Time for precision adjustment:     86.460s
  Time for transfer relation:        61.067s
  Time for merge operator:            2.037s
  Time for stop operator:             1.133s
  Time for adding to reached set:     1.124s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   114
Avg. length of target path (in blocks):                2265 (count: 114, min: 4, max: 59, avg: 19.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.550s
  Counterexample analysis:                             4.625s (Max:     0.194s, Calls: 114)
    Refinement sat check:                              3.926s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.026s
  ARG update:                                          1.753s

Length of refined path (in blocks):                    2151 (count: 114, min: 3, max: 58, avg: 18.87)
Number of affected states:                             2037 (count: 114, min: 2, max: 57, avg: 17.87)
Length (states) of path with itp 'true':                  0 (count: 114, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      2037 (count: 114, min: 2, max: 57, avg: 17.87)
Length (states) of path with itp 'false':               114 (count: 114, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 114, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1923 (count: 114, min: 1, max: 56, avg: 16.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                114
Number of successful refinements:     114
Number of failed refinements:         0
Max. size of reached set before ref.: 85688
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 10443.14
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:     161.508s
Time for refinements:                 7.158s
Average time for refinement:          0.062s
Max time for refinement:              0.303s

Code Coverage
-----------------------------
  Function coverage:      0.836
  Visited lines:          6806
  Total lines:            6983
  Line coverage:          0.975
  Visited conditions:     638
  Total conditions:       670
  Condition coverage:     0.952

CPAchecker general statistics
-----------------------------
Number of program locations:     7623
Number of CFA edges:             8039
Number of relevant variables:    2250
Number of functions:             67
Number of loops:                 9
Size of reached set:             98223
  Number of reached locations:   1740 (23%)
    Avg states per location:     56
    Max states per location:     1889 (at node N32)
  Number of reached functions:   56 (84%)
  Number of partitions:          98223
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.357s
  Time for loading CPAs:          0.793s
  Time for loading parser:        0.406s
  Time for CFA construction:      3.073s
    Time for parsing file(s):     0.629s
    Time for AST to CFA:          1.110s
    Time for CFA sanity check:    0.291s
    Time for post-processing:     0.911s
      Time for var class.:        0.414s
Time for Analysis:              161.508s
CPU time for analysis:          161.480s
Time for analyzing result:        0.066s
Total time for CPAchecker:      165.866s
Total CPU time for CPAchecker:  165.830s
Time for statistics:              0.855s

Time for Garbage Collector:      15.483s (in 503 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                658MB (   627 MiB) max;    250MB (   239 MiB) avg;    668MB (   637 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     38MB (    36 MiB) avg;     44MB (    42 MiB) peak
Allocated heap memory:           948MB (   904 MiB) max;    364MB (   347 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     45MB (    43 MiB) avg
Total process virtual memory:   8157MB (  7779 MiB) max;   8108MB (  7732 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
