scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--frontends--cxd2820r.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wk9umqc5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function intlog10 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function intlog2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6222: Ignoring call via function pointer cxd2820r_set_frontend_c::__cil_tmp145 for which no suitable target was found in line: (*__cil_tmp145)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6222: Ignoring function call through function pointer *__cil_tmp145: (*__cil_tmp145)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6293: Ignoring call via function pointer cxd2820r_set_frontend_c::__cil_tmp176 for which no suitable target was found in line: ret = (*__cil_tmp176)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6293: Ignoring function call through function pointer *__cil_tmp176: ret = (*__cil_tmp176)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10433: Ignoring call via function pointer cxd2820r_set_frontend_t2::__cil_tmp364 for which no suitable target was found in line: (*__cil_tmp364)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10433: Ignoring function call through function pointer *__cil_tmp364: (*__cil_tmp364)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10501: Ignoring call via function pointer cxd2820r_set_frontend_t2::__cil_tmp393 for which no suitable target was found in line: ret = (*__cil_tmp393)(fe, &if_freq); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10501: Ignoring function call through function pointer *__cil_tmp393: ret = (*__cil_tmp393)(fe, &if_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            33267 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30705 (92%)
  Because of loop head:            2486 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         76 (0%)
  Times precision was empty:       4355 (13%)
  Times precision was {false}:     770 (2%)
  Times result was cached:         27567 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      575 (2%)
  Times result was 'false':        281 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         35745
  BDD entailment checks:           8481
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       857
Number of predicates discovered:          2
Number of abstraction locations:          160
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         28912
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 21.50
Number of irrelevant predicates:          5777 (20%)
Number of preds handled by boolean abs:   575 (2%)
  Total number of models for allsat:      571
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  5.373s
  Time for path formula creation:        5.121s
Time for strengthen operator:            0.534s
Time for prec operator:                  9.574s
  Time for abstraction:                  9.074s (Max:     0.200s, Count: 33267)
    Boolean abstraction:                 1.435s
    Solving time:                        2.235s (Max:     0.154s)
    Model enumeration time:              0.125s
    Time for BDD construction:           0.062s (Max:     0.010s)
Time for merge operator:                 0.316s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     2.360s

Number of path formula cache hits:   722821 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.098s

Total number of created targets for pointer analysis: 2821
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 25
   Number of created targets for uf: *enum_fe_status is 2
   Number of created targets for uf: *unsigned_int is 7


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1149 (count: 20141, min: 0, max: 52, avg: 0.06)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.062s
  Time for transition matches:                         0.556s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       768411 (count: 768411, min: 1, max: 1, avg: 1.00) [1 x 768411]

CPA algorithm statistics
------------------------
Number of iterations:            190541
Max size of waitlist:            185
Average size of waitlist:        54
Number of computed successors:   216954
Max successors for one state:    2
Number of times merged:          13632
Number of times stopped:         20037
Number of times breaked:         76

Total time for CPA algorithm:        23.287s (Max:     0.819s)
  Time for choose from waitlist:      0.160s
  Time for precision adjustment:     10.823s
  Time for transfer relation:        10.428s
  Time for merge operator:            0.537s
  Time for stop operator:             0.302s
  Time for adding to reached set:     0.261s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                1114 (count: 76, min: 4, max: 31, avg: 14.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.125s
  Counterexample analysis:                             1.542s (Max:     0.129s, Calls: 76)
    Refinement sat check:                              1.221s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.075s
  ARG update:                                          0.409s

Length of refined path (in blocks):                    1038 (count: 76, min: 3, max: 30, avg: 13.66)
Number of affected states:                              962 (count: 76, min: 2, max: 29, avg: 12.66)
Length (states) of path with itp 'true':                  0 (count: 76, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       962 (count: 76, min: 2, max: 29, avg: 12.66)
Length (states) of path with itp 'false':                76 (count: 76, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 76, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             886 (count: 76, min: 1, max: 28, avg: 11.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 6419
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2577.87
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.631s
Time for refinements:                 2.334s
Average time for refinement:          0.030s
Max time for refinement:              0.147s

Code Coverage
-----------------------------
  Function coverage:      0.731
  Visited lines:          2887
  Total lines:            6983
  Line coverage:          0.413
  Visited conditions:     174
  Total conditions:       670
  Condition coverage:     0.260

CPAchecker general statistics
-----------------------------
Number of program locations:     7623
Number of CFA edges:             8039
Number of relevant variables:    2250
Number of functions:             67
Number of loops:                 9
Size of reached set:             947
  Number of reached locations:   579 (8%)
    Avg states per location:     1
    Max states per location:     17 (at node N376)
  Number of reached functions:   49 (73%)
  Number of partitions:          947
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        48

Time for analysis setup:          4.208s
  Time for loading CPAs:          0.681s
  Time for loading parser:        0.424s
  Time for CFA construction:      3.023s
    Time for parsing file(s):     0.688s
    Time for AST to CFA:          1.003s
    Time for CFA sanity check:    0.354s
    Time for post-processing:     0.874s
      Time for var class.:        0.418s
Time for Analysis:               25.631s
CPU time for analysis:           25.640s
Total time for CPAchecker:       29.841s
Total CPU time for CPAchecker:   29.840s
Time for statistics:              0.071s

Time for Garbage Collector:       1.200s (in 142 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                112MB (   107 MiB) max;     67MB (    64 MiB) avg;    119MB (   113 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
