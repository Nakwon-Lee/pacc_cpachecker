scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--platform--x86--panasonic-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_agx_yl04/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_generate_proc_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4067 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3674 (90%)
  Because of loop head:            372 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (1%)
  Times precision was empty:       1810 (45%)
  Times precision was {false}:     233 (6%)
  Times result was cached:         1943 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      81 (2%)
  Times result was 'false':        104 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         3532
  BDD entailment checks:           1250
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       85
Number of predicates discovered:          2
Number of abstraction locations:          58
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2257
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.19
Number of irrelevant predicates:          1209 (54%)
Number of preds handled by boolean abs:   81 (4%)
  Total number of models for allsat:      80
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  2.588s
  Time for path formula creation:        2.516s
Time for strengthen operator:            0.131s
Time for prec operator:                  1.457s
  Time for abstraction:                  1.340s (Max:     0.019s, Count: 4067)
    Boolean abstraction:                 0.096s
    Solving time:                        0.277s (Max:     0.014s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.024s (Max:     0.009s)
Time for merge operator:                 0.155s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     0.280s

Number of path formula cache hits:   33965 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.361s

Total number of created targets for pointer analysis: 203
   Number of created targets for uf: *unsigned_long_long_int is 40
   Number of created targets for uf: *unsigned_int is 29


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         160 (count: 4735, min: 0, max: 24, avg: 0.03)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.231s
Automaton transfers with branching:                0
Automaton transfer successors:                        62316 (count: 62316, min: 1, max: 1, avg: 1.00) [1 x 62316]

CPA algorithm statistics
------------------------
Number of iterations:            17355
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   19543
Max successors for one state:    2
Number of times merged:          1141
Number of times stopped:         2046
Number of times breaked:         21

Total time for CPA algorithm:         6.441s (Max:     0.754s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      1.840s
  Time for transfer relation:         3.941s
  Time for merge operator:            0.247s
  Time for stop operator:             0.070s
  Time for adding to reached set:     0.084s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 395 (count: 21, min: 5, max: 39, avg: 18.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.334s
  Counterexample analysis:                             0.190s (Max:     0.021s, Calls: 21)
    Refinement sat check:                              0.114s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.013s
  ARG update:                                          0.069s

Length of refined path (in blocks):                     374 (count: 21, min: 4, max: 38, avg: 17.81)
Number of affected states:                              353 (count: 21, min: 3, max: 37, avg: 16.81)
Length (states) of path with itp 'true':                  0 (count: 21, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       353 (count: 21, min: 3, max: 37, avg: 16.81)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             332 (count: 21, min: 2, max: 36, avg: 15.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 977
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 811.29
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.860s
Time for refinements:                 0.418s
Average time for refinement:          0.019s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.632
  Visited lines:          1419
  Total lines:            1734
  Line coverage:          0.818
  Visited conditions:     86
  Total conditions:       126
  Condition coverage:     0.683

CPAchecker general statistics
-----------------------------
Number of program locations:     1954
Number of CFA edges:             2033
Number of relevant variables:    424
Number of functions:             38
Number of loops:                 2
Size of reached set:             420
  Number of reached locations:   292 (15%)
    Avg states per location:     1
    Max states per location:     7 (at node N925)
  Number of reached functions:   24 (63%)
  Number of partitions:          420
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.269s
  Time for loading CPAs:          0.585s
  Time for loading parser:        0.526s
  Time for CFA construction:      2.049s
    Time for parsing file(s):     0.675s
    Time for AST to CFA:          0.648s
    Time for CFA sanity check:    0.108s
    Time for post-processing:     0.451s
      Time for var class.:        0.227s
Time for Analysis:                6.861s
CPU time for analysis:            6.860s
Time for analyzing result:        0.000s
Total time for CPAchecker:       10.133s
Total CPU time for CPAchecker:   10.120s
Time for statistics:              0.068s

Time for Garbage Collector:       0.281s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     42MB (    40 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8059MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
