scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--platform--x86--panasonic-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cc_qcvgp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_generate_proc_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2638 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2248 (85%)
  Because of loop head:            370 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (1%)
  Times precision was empty:       809 (31%)
  Times precision was {false}:     166 (6%)
  Times result was cached:         1582 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      81 (3%)
  Times result was 'false':        60 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2351
  BDD entailment checks:           787
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       85
Number of predicates discovered:          2
Number of abstraction locations:          58
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1829
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.40
Number of irrelevant predicates:          819 (45%)
Number of preds handled by boolean abs:   81 (4%)
  Total number of models for allsat:      80
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  1.706s
  Time for path formula creation:        1.671s
Time for strengthen operator:            0.081s
Time for prec operator:                  1.149s
  Time for abstraction:                  1.041s (Max:     0.021s, Count: 2638)
    Boolean abstraction:                 0.101s
    Solving time:                        0.282s (Max:     0.014s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.056s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.295s

Number of path formula cache hits:   26469 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.553s

Total number of created targets for pointer analysis: 48
   Number of created targets for uf: *unsigned_long_long_int is 18
   Number of created targets for uf: *unsigned_int is 6


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         158 (count: 2927, min: 0, max: 26, avg: 0.05)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.164s
Automaton transfers with branching:                0
Automaton transfer successors:                        41187 (count: 41187, min: 1, max: 1, avg: 1.00) [1 x 41187]

CPA algorithm statistics
------------------------
Number of iterations:            11297
Max size of waitlist:            23
Average size of waitlist:        9
Number of computed successors:   12803
Max successors for one state:    2
Number of times merged:          782
Number of times stopped:         1264
Number of times breaked:         20

Total time for CPA algorithm:         4.637s (Max:     0.682s)
  Time for choose from waitlist:      0.049s
  Time for precision adjustment:      1.397s
  Time for transfer relation:         2.682s
  Time for merge operator:            0.108s
  Time for stop operator:             0.143s
  Time for adding to reached set:     0.088s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 372 (count: 20, min: 8, max: 39, avg: 18.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.321s
  Counterexample analysis:                             0.180s (Max:     0.021s, Calls: 20)
    Refinement sat check:                              0.123s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.020s
  ARG update:                                          0.078s

Length of refined path (in blocks):                     352 (count: 20, min: 7, max: 38, avg: 17.60)
Number of affected states:                              332 (count: 20, min: 6, max: 37, avg: 16.60)
Length (states) of path with itp 'true':                  0 (count: 20, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       332 (count: 20, min: 6, max: 37, avg: 16.60)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 20, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             312 (count: 20, min: 5, max: 36, avg: 15.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 631
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 556.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.015s
Time for refinements:                 0.378s
Average time for refinement:          0.018s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.632
  Visited lines:          1419
  Total lines:            1734
  Line coverage:          0.818
  Visited conditions:     86
  Total conditions:       126
  Condition coverage:     0.683

CPAchecker general statistics
-----------------------------
Number of program locations:     1954
Number of CFA edges:             2033
Number of relevant variables:    424
Number of functions:             38
Number of loops:                 2
Size of reached set:             420
  Number of reached locations:   292 (15%)
    Avg states per location:     1
    Max states per location:     7 (at node N925)
  Number of reached functions:   24 (63%)
  Number of partitions:          420
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.172s
  Time for loading CPAs:          0.607s
  Time for loading parser:        0.511s
  Time for CFA construction:      1.970s
    Time for parsing file(s):     0.612s
    Time for AST to CFA:          0.651s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.436s
      Time for var class.:        0.232s
Time for Analysis:                5.015s
CPU time for analysis:            5.020s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.190s
Total CPU time for CPAchecker:    8.180s
Time for statistics:              0.055s

Time for Garbage Collector:       0.211s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     40MB (    38 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7994MB (  7623 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
