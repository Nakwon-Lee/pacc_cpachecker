scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--nftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bfmt5yww/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3424: Function pointer *__cil_tmp15 with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3481: Function pointer *__cil_tmp19 with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3481: Ignoring call via function pointer mtd_write_oob::__cil_tmp19 for which no suitable target was found in line: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3481: Ignoring function call through function pointer *__cil_tmp19: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3424: Ignoring call via function pointer mtd_read_oob::__cil_tmp15 for which no suitable target was found in line: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3424: Ignoring function call through function pointer *__cil_tmp15: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8820 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6670 (76%)
  Because of loop head:            2114 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       1683 (19%)
  Times precision was {false}:     1059 (12%)
  Times result was cached:         5846 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      232 (3%)
  Times result was 'false':        191 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         9597
  BDD entailment checks:           2401
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       349
Number of predicates discovered:          3
Number of abstraction locations:          96
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         7317
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 5.67
Number of irrelevant predicates:          3422 (47%)
Number of preds handled by boolean abs:   234 (3%)
  Total number of models for allsat:      229
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  8.319s
  Time for path formula creation:        8.212s
Time for strengthen operator:            0.254s
Time for prec operator:                 11.150s
  Time for abstraction:                 10.896s (Max:     1.211s, Count: 8820)
    Boolean abstraction:                 1.601s
    Solving time:                        7.658s (Max:     1.203s)
    Model enumeration time:              0.067s
    Time for BDD construction:           0.007s (Max:     0.001s)
Time for merge operator:                 0.455s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     7.725s

Number of path formula cache hits:   129628 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.584s

Total number of created targets for pointer analysis: 28063
   Number of created targets for uf: *unsigned_short_int is 41
   Number of created targets for uf: *unsigned_char is 1961
   Number of created targets for uf: *unsigned_long_int is 11


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         450 (count: 10828, min: 0, max: 44, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.440s
Automaton transfers with branching:                0
Automaton transfer successors:                       243633 (count: 243633, min: 1, max: 1, avg: 1.00) [1 x 243633]

CPA algorithm statistics
------------------------
Number of iterations:            47517
Max size of waitlist:            64
Average size of waitlist:        21
Number of computed successors:   54370
Max successors for one state:    2
Number of times merged:          3598
Number of times stopped:         5399
Number of times breaked:         36

Total time for CPA algorithm:        24.304s (Max:     2.604s)
  Time for choose from waitlist:      0.093s
  Time for precision adjustment:     12.075s
  Time for transfer relation:        10.887s
  Time for merge operator:            0.600s
  Time for stop operator:             0.174s
  Time for adding to reached set:     0.135s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                1020 (count: 36, min: 5, max: 59, avg: 28.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.231s
  Counterexample analysis:                             1.006s (Max:     0.085s, Calls: 36)
    Refinement sat check:                              0.795s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.037s
  ARG update:                                          0.125s

Length of refined path (in blocks):                     971 (count: 36, min: 4, max: 58, avg: 26.97)
Number of affected states:                              921 (count: 36, min: 1, max: 57, avg: 25.58)
Length (states) of path with itp 'true':                 14 (count: 36, min: 0, max: 14, avg: 0.39)
Length (states) of path with itp non-trivial itp:       921 (count: 36, min: 1, max: 57, avg: 25.58)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             885 (count: 36, min: 0, max: 56, avg: 24.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 1909
Max. size of reached set after ref.:  714
Avg. size of reached set before ref.: 1328.72
Avg. size of reached set after ref.:  22.75

Total time for CEGAR algorithm:      25.671s
Time for refinements:                 1.366s
Average time for refinement:          0.037s
Max time for refinement:              0.092s

Code Coverage
-----------------------------
  Function coverage:      0.732
  Visited lines:          4432
  Total lines:            5144
  Line coverage:          0.862
  Visited conditions:     286
  Total conditions:       402
  Condition coverage:     0.711

CPAchecker general statistics
-----------------------------
Number of program locations:     5603
Number of CFA edges:             5850
Number of relevant variables:    1783
Number of functions:             41
Number of loops:                 25
Size of reached set:             1765
  Number of reached locations:   893 (16%)
    Avg states per location:     1
    Max states per location:     22 (at node N556)
  Number of reached functions:   30 (73%)
  Number of partitions:          1759
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2811 (before lines 6670-6733), Function main called from node N2791, stack depth 1 [12e0f1cb], stack [main]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          4.246s
  Time for loading CPAs:          0.779s
  Time for loading parser:        0.421s
  Time for CFA construction:      2.932s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.942s
    Time for CFA sanity check:    0.340s
    Time for post-processing:     0.867s
      Time for var class.:        0.356s
Time for Analysis:               25.671s
CPU time for analysis:           25.670s
Total time for CPAchecker:       29.928s
Total CPU time for CPAchecker:   29.920s
Time for statistics:              0.142s

Time for Garbage Collector:       1.454s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                150MB (   143 MiB) max;     78MB (    74 MiB) avg;    156MB (   149 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           208MB (   198 MiB) max;    136MB (   129 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8077MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
