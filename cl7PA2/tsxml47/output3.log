scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--serial--iuu_phoenix.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9zujj37l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3543: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 3549: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6078: Dead code detected: __cil_tmp106 = (unsigned int )frq; (CFACreationUtils.addEdgeToCFA, INFO)

line 6082: Dead code detected: [!(__x < 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6083: Dead code detected: ret = - __x; (CFACreationUtils.addEdgeToCFA, INFO)

line 6085: Dead code detected: ret = __x; (CFACreationUtils.addEdgeToCFA, INFO)

line 6099: Dead code detected: __cil_tmp112 = (unsigned int )frq; (CFACreationUtils.addEdgeToCFA, INFO)

line 6103: Dead code detected: [!(__x___1 < 0L)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6104: Dead code detected: ret___0 = - __x___1; (CFACreationUtils.addEdgeToCFA, INFO)

line 6106: Dead code detected: ret___0 = __x___1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8263: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

line 8310: Dead code detected: Goto: switch_break___0 (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23382 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21211 (91%)
  Because of loop head:            2133 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       6349 (27%)
  Times precision was {false}:     587 (3%)
  Times result was cached:         16177 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      269 (1%)
  Times result was 'false':        74 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         45988
  BDD entailment checks:           5286
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          2
Number of abstraction locations:          118
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         17033
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 19.90
Number of irrelevant predicates:          6360 (37%)
Number of preds handled by boolean abs:   269 (2%)
  Total number of models for allsat:      269
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  9.171s
  Time for path formula creation:        8.895s
Time for strengthen operator:            0.529s
Time for prec operator:                  6.994s
  Time for abstraction:                  6.432s (Max:     0.279s, Count: 23382)
    Boolean abstraction:                 0.510s
    Solving time:                        1.366s (Max:     0.045s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.008s (Max:     0.001s)
Time for merge operator:                 0.462s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     1.391s

Number of path formula cache hits:   682317 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.344s

Total number of created targets for pointer analysis: 11347
   Number of created targets for uf: *signed_int is 6
   Number of created targets for uf: *unsigned_char is 34
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         537 (count: 16189, min: 0, max: 64, avg: 0.03)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.899s
  Time for transition matches:                         0.528s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       722426 (count: 722426, min: 1, max: 1, avg: 1.00) [1 x 722426]

CPA algorithm statistics
------------------------
Number of iterations:            199708
Max size of waitlist:            31
Average size of waitlist:        19
Number of computed successors:   224672
Max successors for one state:    2
Number of times merged:          20351
Number of times stopped:         24621
Number of times breaked:         38

Total time for CPA algorithm:        24.441s (Max:     2.991s)
  Time for choose from waitlist:      0.077s
  Time for precision adjustment:      8.225s
  Time for transfer relation:        14.129s
  Time for merge operator:            0.777s
  Time for stop operator:             0.309s
  Time for adding to reached set:     0.262s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                1160 (count: 38, min: 4, max: 57, avg: 30.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.585s
  Counterexample analysis:                             1.058s (Max:     0.130s, Calls: 38)
    Refinement sat check:                              0.816s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.026s
  ARG update:                                          0.427s

Length of refined path (in blocks):                    1122 (count: 38, min: 3, max: 56, avg: 29.53)
Number of affected states:                             1084 (count: 38, min: 2, max: 55, avg: 28.53)
Length (states) of path with itp 'true':                  0 (count: 38, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1084 (count: 38, min: 2, max: 55, avg: 28.53)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 38, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1046 (count: 38, min: 1, max: 54, avg: 27.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 7326
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 5216.76
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.234s
Time for refinements:                 1.779s
Average time for refinement:          0.046s
Max time for refinement:              0.150s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          4092
  Total lines:            5064
  Line coverage:          0.808
  Visited conditions:     284
  Total conditions:       426
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     5691
Number of CFA edges:             5970
Number of relevant variables:    1473
Number of functions:             61
Number of loops:                 6
Size of reached set:             1855
  Number of reached locations:   1119 (20%)
    Avg states per location:     1
    Max states per location:     20 (at node N97)
  Number of reached functions:   39 (64%)
  Number of partitions:          1852
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5339 (before line 10092), Function main called from node N5192, stack depth 1 [6af91cc8], stack [main]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          3.802s
  Time for loading CPAs:          0.725s
  Time for loading parser:        0.404s
  Time for CFA construction:      2.584s
    Time for parsing file(s):     0.659s
    Time for AST to CFA:          0.789s
    Time for CFA sanity check:    0.280s
    Time for post-processing:     0.748s
      Time for var class.:        0.414s
Time for Analysis:               26.234s
CPU time for analysis:           26.220s
Total time for CPAchecker:       30.039s
Total CPU time for CPAchecker:   30.010s
Time for statistics:              0.146s

Time for Garbage Collector:       1.439s (in 135 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     73MB (    69 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           160MB (   152 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
