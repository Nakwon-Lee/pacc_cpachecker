scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hid--hid-petalynx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zsupcusy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2066: Function pointer *__cil_tmp8 with type int (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2088: Function pointer *__cil_tmp14 with type void (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2028: Function pointer *__cil_tmp11 with type int (*)(struct hid_device *hdev) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2028: Ignoring call via function pointer hid_parse::__cil_tmp11 for which no suitable target was found in line: ret = (*__cil_tmp11)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2028: Ignoring function call through function pointer *__cil_tmp11: ret = (*__cil_tmp11)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2066: Ignoring call via function pointer hid_hw_start::__cil_tmp8 for which no suitable target was found in line: tmp = (*__cil_tmp8)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2066: Ignoring function call through function pointer *__cil_tmp8: tmp = (*__cil_tmp8)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hid_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2088: Ignoring call via function pointer hid_hw_start::__cil_tmp14 for which no suitable target was found in line: (*__cil_tmp14)(hdev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2088: Ignoring function call through function pointer *__cil_tmp14: (*__cil_tmp14)(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            917 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  812 (89%)
  Because of loop head:            93 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (1%)
  Times precision was empty:       204 (22%)
  Times precision was {false}:     44 (5%)
  Times result was cached:         639 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      30 (3%)
  Times result was 'false':        24 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1145
  BDD entailment checks:           225
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          2
Number of abstraction locations:          29
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         713
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.64
Number of irrelevant predicates:          211 (30%)
Number of preds handled by boolean abs:   30 (4%)
  Total number of models for allsat:      30
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.852s
  Time for path formula creation:        0.832s
Time for strengthen operator:            0.050s
Time for prec operator:                  0.525s
  Time for abstraction:                  0.455s (Max:     0.019s, Count: 917)
    Boolean abstraction:                 0.044s
    Solving time:                        0.071s (Max:     0.009s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.066s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.072s

Number of path formula cache hits:   8501 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.717s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          63 (count: 834, min: 0, max: 37, avg: 0.08)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.081s
Automaton transfers with branching:                0
Automaton transfer successors:                        12038 (count: 12038, min: 1, max: 1, avg: 1.00) [1 x 12038]

CPA algorithm statistics
------------------------
Number of iterations:            5117
Max size of waitlist:            19
Average size of waitlist:        7
Number of computed successors:   5899
Max successors for one state:    2
Number of times merged:          460
Number of times stopped:         610
Number of times breaked:         12

Total time for CPA algorithm:         2.354s (Max:     0.423s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      0.701s
  Time for transfer relation:         1.303s
  Time for merge operator:            0.099s
  Time for stop operator:             0.051s
  Time for adding to reached set:     0.045s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 175 (count: 12, min: 8, max: 17, avg: 14.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.190s
  Counterexample analysis:                             0.116s (Max:     0.020s, Calls: 12)
    Refinement sat check:                              0.046s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.003s
  ARG update:                                          0.049s

Length of refined path (in blocks):                     163 (count: 12, min: 7, max: 16, avg: 13.58)
Number of affected states:                              151 (count: 12, min: 6, max: 15, avg: 12.58)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       151 (count: 12, min: 6, max: 15, avg: 12.58)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             139 (count: 12, min: 5, max: 14, avg: 11.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 584
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 404.67
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.568s
Time for refinements:                 0.214s
Average time for refinement:          0.017s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.545
  Visited lines:          743
  Total lines:            791
  Line coverage:          0.939
  Visited conditions:     72
  Total conditions:       92
  Condition coverage:     0.783

CPAchecker general statistics
-----------------------------
Number of program locations:     926
Number of CFA edges:             976
Number of relevant variables:    146
Number of functions:             22
Number of loops:                 1
Size of reached set:             446
  Number of reached locations:   222 (24%)
    Avg states per location:     2
    Max states per location:     8 (at node N272)
  Number of reached functions:   12 (55%)
  Number of partitions:          446
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.593s
  Time for loading CPAs:          0.578s
  Time for loading parser:        0.464s
  Time for CFA construction:      1.418s
    Time for parsing file(s):     0.491s
    Time for AST to CFA:          0.401s
    Time for CFA sanity check:    0.110s
    Time for post-processing:     0.331s
      Time for var class.:        0.122s
Time for Analysis:                2.568s
CPU time for analysis:            2.570s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.163s
Total CPU time for CPAchecker:    5.160s
Time for statistics:              0.067s

Time for Garbage Collector:       0.118s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7982MB (  7612 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
