scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--char--ipmi--ipmi_poweroff.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ol1df724/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_sysctl_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_sysctl_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_supply_msgs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3399: Ignoring call via function pointer ipmi_po_new_smi::__cil_tmp83 for which no suitable target was found in line: tmp___3 = (*__cil_tmp83)(__cil_tmp85); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3399: Ignoring function call through function pointer *__cil_tmp83: tmp___3 = (*__cil_tmp83)(__cil_tmp85); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1179 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  943 (80%)
  Because of loop head:            224 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (1%)
  Times precision was empty:       353 (30%)
  Times precision was {false}:     68 (6%)
  Times result was cached:         719 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39 (3%)
  Times result was 'false':        13 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1378
  BDD entailment checks:           548
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          2
Number of abstraction locations:          34
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         826
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.72
Number of irrelevant predicates:          471 (57%)
Number of preds handled by boolean abs:   39 (5%)
  Total number of models for allsat:      39
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.898s
  Time for path formula creation:        0.873s
Time for strengthen operator:            0.038s
Time for prec operator:                  0.667s
  Time for abstraction:                  0.581s (Max:     0.017s, Count: 1179)
    Boolean abstraction:                 0.052s
    Solving time:                        0.102s (Max:     0.010s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.051s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.110s

Number of path formula cache hits:   9404 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.819s

Total number of created targets for pointer analysis: 143
   Number of created targets for uf: *signed_int is 34
   Number of created targets for uf: *unsigned_char is 3
   Number of created targets for uf: *char is 19
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          65 (count: 1480, min: 0, max: 27, avg: 0.04)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.111s
Automaton transfers with branching:                0
Automaton transfer successors:                        15226 (count: 15226, min: 1, max: 1, avg: 1.00) [1 x 15226]

CPA algorithm statistics
------------------------
Number of iterations:            5637
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   6428
Max successors for one state:    2
Number of times merged:          415
Number of times stopped:         724
Number of times breaked:         12

Total time for CPA algorithm:         2.612s (Max:     0.505s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      0.826s
  Time for transfer relation:         1.410s
  Time for merge operator:            0.084s
  Time for stop operator:             0.110s
  Time for adding to reached set:     0.031s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 174 (count: 12, min: 8, max: 22, avg: 14.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.192s
  Counterexample analysis:                             0.121s (Max:     0.017s, Calls: 12)
    Refinement sat check:                              0.090s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.014s
  ARG update:                                          0.033s

Length of refined path (in blocks):                     162 (count: 12, min: 7, max: 21, avg: 13.50)
Number of affected states:                              150 (count: 12, min: 6, max: 20, avg: 12.50)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       150 (count: 12, min: 6, max: 20, avg: 12.50)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             138 (count: 12, min: 5, max: 19, avg: 11.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 638
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 453.17
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.835s
Time for refinements:                 0.221s
Average time for refinement:          0.018s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.432
  Visited lines:          849
  Total lines:            1328
  Line coverage:          0.639
  Visited conditions:     72
  Total conditions:       146
  Condition coverage:     0.493

CPAchecker general statistics
-----------------------------
Number of program locations:     1582
Number of CFA edges:             1667
Number of relevant variables:    375
Number of functions:             37
Number of loops:                 4
Size of reached set:             290
  Number of reached locations:   222 (14%)
    Avg states per location:     1
    Max states per location:     8 (at node N728)
  Number of reached functions:   16 (43%)
  Number of partitions:          289
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N728 (exit of function ipmi_po_new_smi in lines 3151-3434), Function ipmi_po_new_smi called from node N1126, stack depth 2 [4e424582], stack [main, ipmi_po_new_smi], ABS1153])
  Number of target states:       0

Time for analysis setup:          3.719s
  Time for loading CPAs:          0.794s
  Time for loading parser:        0.506s
  Time for CFA construction:      2.282s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.684s
    Time for CFA sanity check:    0.145s
    Time for post-processing:     0.559s
      Time for var class.:        0.332s
Time for Analysis:                2.835s
CPU time for analysis:            2.840s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.556s
Total CPU time for CPAchecker:    6.540s
Time for statistics:              0.035s

Time for Garbage Collector:       0.154s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     36MB (    34 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7986MB (  7616 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
