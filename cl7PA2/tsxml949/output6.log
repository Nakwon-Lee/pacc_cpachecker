scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--watchdog--wm831x_wdt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fd1e6p4z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_set_value_cansleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function watchdog_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1894 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1512 (80%)
  Because of loop head:            262 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         120 (6%)
  Times precision was empty:       656 (35%)
  Times precision was {false}:     46 (2%)
  Times result was cached:         1143 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      49 (3%)
  Times result was 'false':        102 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1169
  BDD entailment checks:           465
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       118
Number of predicates discovered:          3
Number of abstraction locations:          34
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1238
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.03
Number of irrelevant predicates:          784 (63%)
Number of preds handled by boolean abs:   49 (4%)
  Total number of models for allsat:      49
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.471s
  Time for path formula creation:        0.450s
Time for strengthen operator:            0.040s
Time for prec operator:                  0.484s
  Time for abstraction:                  0.432s (Max:     0.014s, Count: 1894)
    Boolean abstraction:                 0.057s
    Solving time:                        0.080s (Max:     0.012s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.023s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.082s

Number of path formula cache hits:   14109 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.402s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          88 (count: 1652, min: 0, max: 54, avg: 0.05)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.091s
Automaton transfers with branching:                0
Automaton transfer successors:                        14091 (count: 14091, min: 1, max: 1, avg: 1.00) [1 x 14091]

CPA algorithm statistics
------------------------
Number of iterations:            7699
Max size of waitlist:            14
Average size of waitlist:        8
Number of computed successors:   8645
Max successors for one state:    2
Number of times merged:          352
Number of times stopped:         575
Number of times breaked:         120

Total time for CPA algorithm:         1.913s (Max:     0.269s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      0.672s
  Time for transfer relation:         0.981s
  Time for merge operator:            0.050s
  Time for stop operator:             0.074s
  Time for adding to reached set:     0.025s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   120
Avg. length of target path (in blocks):                1779 (count: 120, min: 4, max: 19, avg: 14.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.856s
  Counterexample analysis:                             0.692s (Max:     0.021s, Calls: 120)
    Refinement sat check:                              0.469s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.068s
  ARG update:                                          0.043s

Length of refined path (in blocks):                    1659 (count: 120, min: 3, max: 18, avg: 13.82)
Number of affected states:                              518 (count: 120, min: 2, max: 15, avg: 4.32)
Length (states) of path with itp 'true':               1021 (count: 120, min: 0, max: 15, avg: 8.51)
Length (states) of path with itp non-trivial itp:       518 (count: 120, min: 2, max: 15, avg: 4.32)
Length (states) of path with itp 'false':               120 (count: 120, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 120, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             398 (count: 120, min: 1, max: 14, avg: 3.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                120
Number of successful refinements:     120
Number of failed refinements:         0
Max. size of reached set before ref.: 467
Max. size of reached set after ref.:  443
Avg. size of reached set before ref.: 196.26
Avg. size of reached set after ref.:  132.42

Total time for CEGAR algorithm:       2.850s
Time for refinements:                 0.929s
Average time for refinement:          0.007s
Max time for refinement:              0.030s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          870
  Total lines:            947
  Line coverage:          0.919
  Visited conditions:     72
  Total conditions:       90
  Condition coverage:     0.800

CPAchecker general statistics
-----------------------------
Number of program locations:     1110
Number of CFA edges:             1159
Number of relevant variables:    194
Number of functions:             24
Number of loops:                 3
Size of reached set:             308
  Number of reached locations:   249 (22%)
    Avg states per location:     1
    Max states per location:     6 (at node N770)
  Number of reached functions:   13 (54%)
  Number of partitions:          308
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.320s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.383s
  Time for CFA construction:      1.308s
    Time for parsing file(s):     0.439s
    Time for AST to CFA:          0.372s
    Time for CFA sanity check:    0.087s
    Time for post-processing:     0.306s
      Time for var class.:        0.142s
Time for Analysis:                2.851s
CPU time for analysis:            2.860s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.174s
Total CPU time for CPAchecker:    5.180s
Time for statistics:              0.053s

Time for Garbage Collector:       0.089s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    33 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8048MB (  7675 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
