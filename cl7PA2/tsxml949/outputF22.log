scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--watchdog--wm831x_wdt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i8uqmjrk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_set_value_cansleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function watchdog_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            598 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  491 (82%)
  Because of loop head:            84 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (4%)
  Times precision was empty:       243 (41%)
  Times precision was {false}:     46 (8%)
  Times result was cached:         266 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43 (7%)
  Times result was 'false':        36 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         451
  BDD entailment checks:           109
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       118
Number of predicates discovered:          3
Number of abstraction locations:          34
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         355
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.99
Number of irrelevant predicates:          175 (49%)
Number of preds handled by boolean abs:   43 (12%)
  Total number of models for allsat:      43
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.468s
  Time for path formula creation:        0.447s
Time for strengthen operator:            0.042s
Time for prec operator:                  0.465s
  Time for abstraction:                  0.407s (Max:     0.030s, Count: 598)
    Boolean abstraction:                 0.070s
    Solving time:                        0.089s (Max:     0.016s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.030s (Max:     0.010s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.093s

Number of path formula cache hits:   6313 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.410s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          46 (count: 847, min: 0, max: 46, avg: 0.05)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.080s
Automaton transfers with branching:                0
Automaton transfer successors:                         8591 (count: 8591, min: 1, max: 1, avg: 1.00) [1 x 8591]

CPA algorithm statistics
------------------------
Number of iterations:            2828
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   3203
Max successors for one state:    2
Number of times merged:          171
Number of times stopped:         245
Number of times breaked:         23

Total time for CPA algorithm:         1.673s (Max:     0.348s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      0.581s
  Time for transfer relation:         0.904s
  Time for merge operator:            0.021s
  Time for stop operator:             0.040s
  Time for adding to reached set:     0.032s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 212 (count: 23, min: 4, max: 13, avg: 9.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.216s
  Counterexample analysis:                             0.143s (Max:     0.017s, Calls: 23)
    Refinement sat check:                              0.056s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.009s
  ARG update:                                          0.027s

Length of refined path (in blocks):                     189 (count: 23, min: 3, max: 12, avg: 8.22)
Number of affected states:                               85 (count: 23, min: 2, max: 11, avg: 3.70)
Length (states) of path with itp 'true':                 81 (count: 23, min: 0, max: 7, avg: 3.52)
Length (states) of path with itp non-trivial itp:        85 (count: 23, min: 2, max: 11, avg: 3.70)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 23, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              62 (count: 23, min: 1, max: 10, avg: 2.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 432
Max. size of reached set after ref.:  365
Avg. size of reached set before ref.: 302.83
Avg. size of reached set after ref.:  189.13

Total time for CEGAR algorithm:       1.949s
Time for refinements:                 0.274s
Average time for refinement:          0.011s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          870
  Total lines:            947
  Line coverage:          0.919
  Visited conditions:     72
  Total conditions:       90
  Condition coverage:     0.800

CPAchecker general statistics
-----------------------------
Number of program locations:     1110
Number of CFA edges:             1159
Number of relevant variables:    194
Number of functions:             24
Number of loops:                 3
Size of reached set:             308
  Number of reached locations:   249 (22%)
    Avg states per location:     1
    Max states per location:     6 (at node N770)
  Number of reached functions:   13 (54%)
  Number of partitions:          308
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.927s
  Time for loading CPAs:          0.704s
  Time for loading parser:        0.557s
  Time for CFA construction:      1.557s
    Time for parsing file(s):     0.493s
    Time for AST to CFA:          0.440s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.357s
      Time for var class.:        0.150s
Time for Analysis:                1.949s
CPU time for analysis:            1.950s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.885s
Total CPU time for CPAchecker:    4.880s
Time for statistics:              0.060s

Time for Garbage Collector:       0.107s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     33MB (    31 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     26MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8032MB (  7660 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
