scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--watchdog--wm831x_wdt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8gt0apk0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function watchdog_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_set_value_cansleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1039 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  849 (82%)
  Because of loop head:            161 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (3%)
  Times precision was empty:       334 (32%)
  Times precision was {false}:     45 (4%)
  Times result was cached:         616 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44 (4%)
  Times result was 'false':        24 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         812
  BDD entailment checks:           286
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       118
Number of predicates discovered:          3
Number of abstraction locations:          34
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         705
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.92
Number of irrelevant predicates:          480 (68%)
Number of preds handled by boolean abs:   44 (6%)
  Total number of models for allsat:      44
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.575s
  Time for path formula creation:        0.537s
Time for strengthen operator:            0.060s
Time for prec operator:                  0.546s
  Time for abstraction:                  0.445s (Max:     0.024s, Count: 1039)
    Boolean abstraction:                 0.080s
    Solving time:                        0.071s (Max:     0.019s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.027s (Max:     0.012s)
Time for merge operator:                 0.027s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.072s

Number of path formula cache hits:   13635 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.501s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          94 (count: 1116, min: 0, max: 34, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.121s
Automaton transfers with branching:                0
Automaton transfer successors:                        16068 (count: 16068, min: 1, max: 1, avg: 1.00) [1 x 16068]

CPA algorithm statistics
------------------------
Number of iterations:            4761
Max size of waitlist:            16
Average size of waitlist:        9
Number of computed successors:   5403
Max successors for one state:    2
Number of times merged:          263
Number of times stopped:         442
Number of times breaked:         29

Total time for CPA algorithm:         2.083s (Max:     0.373s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      0.732s
  Time for transfer relation:         1.152s
  Time for merge operator:            0.045s
  Time for stop operator:             0.057s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 326 (count: 29, min: 4, max: 13, avg: 11.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.265s
  Counterexample analysis:                             0.182s (Max:     0.017s, Calls: 29)
    Refinement sat check:                              0.117s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.032s
  ARG update:                                          0.024s

Length of refined path (in blocks):                     297 (count: 29, min: 3, max: 12, avg: 10.24)
Number of affected states:                              127 (count: 29, min: 2, max: 11, avg: 4.38)
Length (states) of path with itp 'true':                141 (count: 29, min: 0, max: 7, avg: 4.86)
Length (states) of path with itp non-trivial itp:       127 (count: 29, min: 2, max: 11, avg: 4.38)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              98 (count: 29, min: 1, max: 10, avg: 3.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 479
Max. size of reached set after ref.:  305
Avg. size of reached set before ref.: 378.14
Avg. size of reached set after ref.:  218.48

Total time for CEGAR algorithm:       2.416s
Time for refinements:                 0.327s
Average time for refinement:          0.011s
Max time for refinement:              0.026s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          870
  Total lines:            947
  Line coverage:          0.919
  Visited conditions:     72
  Total conditions:       90
  Condition coverage:     0.800

CPAchecker general statistics
-----------------------------
Number of program locations:     1110
Number of CFA edges:             1159
Number of relevant variables:    194
Number of functions:             24
Number of loops:                 3
Size of reached set:             308
  Number of reached locations:   249 (22%)
    Avg states per location:     1
    Max states per location:     6 (at node N770)
  Number of reached functions:   13 (54%)
  Number of partitions:          308
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.336s
  Time for loading CPAs:          0.518s
  Time for loading parser:        0.416s
  Time for CFA construction:      1.326s
    Time for parsing file(s):     0.471s
    Time for AST to CFA:          0.346s
    Time for CFA sanity check:    0.104s
    Time for post-processing:     0.306s
      Time for var class.:        0.152s
Time for Analysis:                2.417s
CPU time for analysis:            2.420s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.755s
Total CPU time for CPAchecker:    4.740s
Time for statistics:              0.062s

Time for Garbage Collector:       0.106s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8045MB (  7673 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
