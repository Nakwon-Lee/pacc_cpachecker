scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--watchdog--wm831x_wdt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6rlska2k/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function watchdog_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_set_value_cansleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1084 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  917 (85%)
  Because of loop head:            135 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (3%)
  Times precision was empty:       455 (42%)
  Times precision was {false}:     89 (8%)
  Times result was cached:         493 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      47 (4%)
  Times result was 'false':        49 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1070
  BDD entailment checks:           184
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       118
Number of predicates discovered:          3
Number of abstraction locations:          34
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         629
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.63
Number of irrelevant predicates:          401 (64%)
Number of preds handled by boolean abs:   47 (7%)
  Total number of models for allsat:      47
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.829s
  Time for path formula creation:        0.818s
Time for strengthen operator:            0.037s
Time for prec operator:                  0.581s
  Time for abstraction:                  0.533s (Max:     0.028s, Count: 1084)
    Boolean abstraction:                 0.055s
    Solving time:                        0.151s (Max:     0.019s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.066s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.157s

Number of path formula cache hits:   11107 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.774s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          86 (count: 1373, min: 0, max: 32, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.102s
Automaton transfers with branching:                0
Automaton transfer successors:                        16253 (count: 16253, min: 1, max: 1, avg: 1.00) [1 x 16253]

CPA algorithm statistics
------------------------
Number of iterations:            5706
Max size of waitlist:            24
Average size of waitlist:        12
Number of computed successors:   6498
Max successors for one state:    2
Number of times merged:          443
Number of times stopped:         575
Number of times breaked:         32

Total time for CPA algorithm:         2.422s (Max:     0.524s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      0.737s
  Time for transfer relation:         1.358s
  Time for merge operator:            0.112s
  Time for stop operator:             0.078s
  Time for adding to reached set:     0.040s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                 317 (count: 32, min: 4, max: 17, avg: 9.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.292s
  Counterexample analysis:                             0.231s (Max:     0.017s, Calls: 32)
    Refinement sat check:                              0.130s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.015s
  ARG update:                                          0.022s

Length of refined path (in blocks):                     285 (count: 32, min: 3, max: 16, avg: 8.91)
Number of affected states:                              127 (count: 32, min: 2, max: 15, avg: 3.97)
Length (states) of path with itp 'true':                126 (count: 32, min: 0, max: 7, avg: 3.94)
Length (states) of path with itp non-trivial itp:       127 (count: 32, min: 2, max: 15, avg: 3.97)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 32, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              95 (count: 32, min: 1, max: 14, avg: 2.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 660
Max. size of reached set after ref.:  575
Avg. size of reached set before ref.: 491.59
Avg. size of reached set after ref.:  317.63

Total time for CEGAR algorithm:       2.776s
Time for refinements:                 0.334s
Average time for refinement:          0.010s
Max time for refinement:              0.028s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          870
  Total lines:            947
  Line coverage:          0.919
  Visited conditions:     72
  Total conditions:       90
  Condition coverage:     0.800

CPAchecker general statistics
-----------------------------
Number of program locations:     1110
Number of CFA edges:             1159
Number of relevant variables:    194
Number of functions:             24
Number of loops:                 3
Size of reached set:             308
  Number of reached locations:   249 (22%)
    Avg states per location:     1
    Max states per location:     6 (at node N770)
  Number of reached functions:   13 (54%)
  Number of partitions:          308
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.494s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.544s
  Time for CFA construction:      1.310s
    Time for parsing file(s):     0.427s
    Time for AST to CFA:          0.359s
    Time for CFA sanity check:    0.094s
    Time for post-processing:     0.323s
      Time for var class.:        0.145s
Time for Analysis:                2.777s
CPU time for analysis:            2.780s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.278s
Total CPU time for CPAchecker:    5.280s
Time for statistics:              0.059s

Time for Garbage Collector:       0.105s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   7980MB (  7610 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
