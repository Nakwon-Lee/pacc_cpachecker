scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--joystick--stinger.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q3gsvonr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            621 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  558 (90%)
  Because of loop head:            55 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (1%)
  Times precision was empty:       267 (43%)
  Times precision was {false}:     42 (7%)
  Times result was cached:         277 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35 (6%)
  Times result was 'false':        8 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         284
  BDD entailment checks:           104
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          2
Number of abstraction locations:          45
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         354
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.60
Number of irrelevant predicates:          123 (35%)
Number of preds handled by boolean abs:   35 (10%)
  Total number of models for allsat:      37
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  0.536s
  Time for path formula creation:        0.511s
Time for strengthen operator:            0.026s
Time for prec operator:                  0.404s
  Time for abstraction:                  0.362s (Max:     0.018s, Count: 621)
    Boolean abstraction:                 0.050s
    Solving time:                        0.060s (Max:     0.016s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.012s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.060s

Number of path formula cache hits:   4335 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.484s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          41 (count: 796, min: 0, max: 41, avg: 0.05)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.071s
Automaton transfers with branching:                0
Automaton transfer successors:                         7060 (count: 7060, min: 1, max: 1, avg: 1.00) [1 x 7060]

CPA algorithm statistics
------------------------
Number of iterations:            2216
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   2426
Max successors for one state:    2
Number of times merged:          90
Number of times stopped:         162
Number of times breaked:         8

Total time for CPA algorithm:         1.551s (Max:     0.428s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.524s
  Time for transfer relation:         0.884s
  Time for merge operator:            0.031s
  Time for stop operator:             0.016s
  Time for adding to reached set:     0.011s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 161 (count: 8, min: 8, max: 41, avg: 20.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.136s
  Counterexample analysis:                             0.059s (Max:     0.016s, Calls: 8)
    Refinement sat check:                              0.047s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.010s
  ARG update:                                          0.020s

Length of refined path (in blocks):                     153 (count: 8, min: 7, max: 40, avg: 19.13)
Number of affected states:                              145 (count: 8, min: 6, max: 39, avg: 18.13)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       145 (count: 8, min: 6, max: 39, avg: 18.13)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             137 (count: 8, min: 5, max: 38, avg: 17.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 328
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 255.88
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.709s
Time for refinements:                 0.157s
Average time for refinement:          0.019s
Max time for refinement:              0.056s

Code Coverage
-----------------------------
  Function coverage:      0.708
  Visited lines:          789
  Total lines:            813
  Line coverage:          0.970
  Visited conditions:     36
  Total conditions:       44
  Condition coverage:     0.818

CPAchecker general statistics
-----------------------------
Number of program locations:     938
Number of CFA edges:             969
Number of relevant variables:    110
Number of functions:             24
Number of loops:                 1
Size of reached set:             234
  Number of reached locations:   176 (19%)
    Avg states per location:     1
    Max states per location:     10 (at node N18)
  Number of reached functions:   17 (71%)
  Number of partitions:          234
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.457s
  Time for loading CPAs:          0.654s
  Time for loading parser:        0.432s
  Time for CFA construction:      1.267s
    Time for parsing file(s):     0.440s
    Time for AST to CFA:          0.372s
    Time for CFA sanity check:    0.095s
    Time for post-processing:     0.250s
      Time for var class.:        0.101s
Time for Analysis:                1.709s
CPU time for analysis:            1.710s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.168s
Total CPU time for CPAchecker:    4.170s
Time for statistics:              0.050s

Time for Garbage Collector:       0.094s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     32MB (    31 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     26MB (    25 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7980MB (  7610 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
