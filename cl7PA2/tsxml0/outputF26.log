scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--touchscreen--wacom_w8001.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_21maw288/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2031: Function pointer *__cil_tmp12 with type int (*)(struct serio *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2031: Ignoring call via function pointer serio_write::__cil_tmp12 for which no suitable target was found in line: tmp = (*__cil_tmp12)(serio, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2031: Ignoring function call through function pointer *__cil_tmp12: tmp = (*__cil_tmp12)(serio, __cil_tmp14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_report_pointer_emulation to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_report_slot_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3826 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3677 (96%)
  Because of loop head:            131 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (0%)
  Times precision was empty:       686 (18%)
  Times precision was {false}:     281 (7%)
  Times result was cached:         2758 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      101 (3%)
  Times result was 'false':        36 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3720
  BDD entailment checks:           544
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       263
Number of predicates discovered:          2
Number of abstraction locations:          98
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         3140
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 8.22
Number of irrelevant predicates:          1342 (43%)
Number of preds handled by boolean abs:   101 (3%)
  Total number of models for allsat:      105
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  3.687s
  Time for path formula creation:        3.549s
Time for strengthen operator:            0.113s
Time for prec operator:                  1.877s
  Time for abstraction:                  1.765s (Max:     0.025s, Count: 3826)
    Boolean abstraction:                 0.217s
    Solving time:                        0.502s (Max:     0.022s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.005s (Max:     0.003s)
Time for merge operator:                 0.241s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.513s

Number of path formula cache hits:   40717 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.307s

Total number of created targets for pointer analysis: 54
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         201 (count: 3247, min: 0, max: 33, avg: 0.06)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.260s
Automaton transfers with branching:                0
Automaton transfer successors:                        73838 (count: 73838, min: 1, max: 1, avg: 1.00) [1 x 73838]

CPA algorithm statistics
------------------------
Number of iterations:            17575
Max size of waitlist:            19
Average size of waitlist:        6
Number of computed successors:   19700
Max successors for one state:    2
Number of times merged:          1588
Number of times stopped:         1990
Number of times breaked:         18

Total time for CPA algorithm:         8.214s (Max:     1.054s)
  Time for choose from waitlist:      0.094s
  Time for precision adjustment:      2.178s
  Time for transfer relation:         4.997s
  Time for merge operator:            0.403s
  Time for stop operator:             0.113s
  Time for adding to reached set:     0.136s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 656 (count: 18, min: 13, max: 70, avg: 36.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.461s
  Counterexample analysis:                             0.318s (Max:     0.040s, Calls: 18)
    Refinement sat check:                              0.223s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.025s
  ARG update:                                          0.071s

Length of refined path (in blocks):                     638 (count: 18, min: 12, max: 69, avg: 35.44)
Number of affected states:                              620 (count: 18, min: 11, max: 68, avg: 34.44)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       620 (count: 18, min: 11, max: 68, avg: 34.44)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             602 (count: 18, min: 10, max: 67, avg: 33.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 1315
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 939.39
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.740s
Time for refinements:                 0.524s
Average time for refinement:          0.029s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.744
  Visited lines:          2464
  Total lines:            2516
  Line coverage:          0.979
  Visited conditions:     144
  Total conditions:       152
  Condition coverage:     0.947

CPAchecker general statistics
-----------------------------
Number of program locations:     2766
Number of CFA edges:             2880
Number of relevant variables:    746
Number of functions:             39
Number of loops:                 2
Size of reached set:             820
  Number of reached locations:   513 (19%)
    Avg states per location:     1
    Max states per location:     12 (at node N51)
  Number of reached functions:   29 (74%)
  Number of partitions:          820
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.249s
  Time for loading CPAs:          0.677s
  Time for loading parser:        0.494s
  Time for CFA construction:      2.016s
    Time for parsing file(s):     0.589s
    Time for AST to CFA:          0.691s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.451s
      Time for var class.:        0.252s
Time for Analysis:                8.740s
CPU time for analysis:            8.750s
Time for analyzing result:        0.001s
Total time for CPAchecker:       11.993s
Total CPU time for CPAchecker:   11.990s
Time for statistics:              0.067s

Time for Garbage Collector:       0.347s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    75 MiB) max;     46MB (    44 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8065MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
