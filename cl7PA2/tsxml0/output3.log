scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--touchscreen--wacom_w8001.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tazhl5t6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2031: Function pointer *__cil_tmp12 with type int (*)(struct serio *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_report_pointer_emulation to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_report_slot_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2031: Ignoring call via function pointer serio_write::__cil_tmp12 for which no suitable target was found in line: tmp = (*__cil_tmp12)(serio, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2031: Ignoring function call through function pointer *__cil_tmp12: tmp = (*__cil_tmp12)(serio, __cil_tmp14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3874 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3625 (94%)
  Because of loop head:            232 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (0%)
  Times precision was empty:       1205 (31%)
  Times precision was {false}:     237 (6%)
  Times result was cached:         2334 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      98 (3%)
  Times result was 'false':        21 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3179
  BDD entailment checks:           609
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       263
Number of predicates discovered:          2
Number of abstraction locations:          98
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2669
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.97
Number of irrelevant predicates:          1352 (51%)
Number of preds handled by boolean abs:   98 (4%)
  Total number of models for allsat:      99
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.942s
  Time for path formula creation:        2.876s
Time for strengthen operator:            0.096s
Time for prec operator:                  2.033s
  Time for abstraction:                  1.918s (Max:     0.032s, Count: 3874)
    Boolean abstraction:                 0.188s
    Solving time:                        0.761s (Max:     0.029s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.010s (Max:     0.008s)
Time for merge operator:                 0.237s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.774s

Number of path formula cache hits:   36732 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.632s

Total number of created targets for pointer analysis: 272
   Number of created targets for uf: *unsigned_int is 39


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         193 (count: 3593, min: 0, max: 32, avg: 0.05)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.202s
Automaton transfers with branching:                0
Automaton transfer successors:                        64421 (count: 64421, min: 1, max: 1, avg: 1.00) [1 x 64421]

CPA algorithm statistics
------------------------
Number of iterations:            16463
Max size of waitlist:            17
Average size of waitlist:        7
Number of computed successors:   18231
Max successors for one state:    2
Number of times merged:          1285
Number of times stopped:         1692
Number of times breaked:         17

Total time for CPA algorithm:         7.507s (Max:     0.943s)
  Time for choose from waitlist:      0.047s
  Time for precision adjustment:      2.414s
  Time for transfer relation:         4.280s
  Time for merge operator:            0.305s
  Time for stop operator:             0.100s
  Time for adding to reached set:     0.108s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 531 (count: 17, min: 8, max: 65, avg: 31.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.430s
  Counterexample analysis:                             0.287s (Max:     0.047s, Calls: 17)
    Refinement sat check:                              0.193s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.016s
  ARG update:                                          0.064s

Length of refined path (in blocks):                     514 (count: 17, min: 7, max: 64, avg: 30.24)
Number of affected states:                              497 (count: 17, min: 6, max: 63, avg: 29.24)
Length (states) of path with itp 'true':                  0 (count: 17, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       497 (count: 17, min: 6, max: 63, avg: 29.24)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             480 (count: 17, min: 5, max: 62, avg: 28.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 1397
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 926.47
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.015s
Time for refinements:                 0.508s
Average time for refinement:          0.029s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.744
  Visited lines:          2464
  Total lines:            2516
  Line coverage:          0.979
  Visited conditions:     144
  Total conditions:       152
  Condition coverage:     0.947

CPAchecker general statistics
-----------------------------
Number of program locations:     2766
Number of CFA edges:             2880
Number of relevant variables:    746
Number of functions:             39
Number of loops:                 2
Size of reached set:             820
  Number of reached locations:   513 (19%)
    Avg states per location:     1
    Max states per location:     12 (at node N51)
  Number of reached functions:   29 (74%)
  Number of partitions:          820
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.116s
  Time for loading CPAs:          0.546s
  Time for loading parser:        0.477s
  Time for CFA construction:      2.020s
    Time for parsing file(s):     0.561s
    Time for AST to CFA:          0.721s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.466s
      Time for var class.:        0.250s
Time for Analysis:                8.015s
CPU time for analysis:            8.020s
Time for analyzing result:        0.001s
Total time for CPAchecker:       11.134s
Total CPU time for CPAchecker:   11.130s
Time for statistics:              0.075s

Time for Garbage Collector:       0.290s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     46MB (    43 MiB) avg;     80MB (    77 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     31MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8000MB (  7630 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
