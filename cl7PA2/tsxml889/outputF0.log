scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--frontends--dib3000mb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3h2q_qcy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4396: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4450: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4520: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4574: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4644: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4698: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6141: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 16UL, 16UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6238: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 16UL, 16UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6920: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6973: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 10UL, 10UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7026: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 28UL, 28UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7088: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 10UL, 10UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7137: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7186: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 16UL, 16UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7301: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7545: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 44UL, 44UL); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4320: Ignoring call via function pointer dib3000mb_set_frontend::__cil_tmp86 for which no suitable target was found in line: (*__cil_tmp86)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4320: Ignoring function call through function pointer *__cil_tmp86: (*__cil_tmp86)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4320: Unsupported feature (recursion): dib3000mb_set_frontend_and_tuner(fe); (line was originally pointer call(dib3000mb_set_frontend_and_tuner) (*__cil_tmp86)(fe);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2403 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2277 (95%)
  Because of loop head:            115 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (0%)
  Times precision was empty:       920 (38%)
  Times precision was {false}:     518 (22%)
  Times result was cached:         877 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      88 (4%)
  Times result was 'false':        11 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         9874
  BDD entailment checks:           384
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       433
Number of predicates discovered:          2
Number of abstraction locations:          48
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1483
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.45
Number of irrelevant predicates:          915 (62%)
Number of preds handled by boolean abs:   88 (6%)
  Total number of models for allsat:      88
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 12.645s
  Time for path formula creation:       12.529s
Time for strengthen operator:            0.166s
Time for prec operator:                 81.002s
  Time for abstraction:                 80.874s (Max:     0.634s, Count: 2403)
    Boolean abstraction:                12.853s
    Solving time:                       74.744s (Max:     0.603s)
    Model enumeration time:              0.420s
    Time for BDD construction:           0.006s (Max:     0.002s)
Time for merge operator:                 0.269s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):    75.164s

Number of path formula cache hits:   110288 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.100s

Total number of created targets for pointer analysis: 601628
   Number of created targets for uf: *unsigned_short_int is 2190
   Number of created targets for uf: *unsigned_char is 313


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         177 (count: 4427, min: 0, max: 24, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.355s
Automaton transfers with branching:                0
Automaton transfer successors:                       216789 (count: 216789, min: 1, max: 1, avg: 1.00) [1 x 216789]

CPA algorithm statistics
------------------------
Number of iterations:            38457
Max size of waitlist:            31
Average size of waitlist:        18
Number of computed successors:   43596
Max successors for one state:    2
Number of times merged:          4745
Number of times stopped:         4992
Number of times breaked:         11

Total time for CPA algorithm:        96.853s (Max:    24.339s)
  Time for choose from waitlist:      0.037s
  Time for precision adjustment:     81.342s
  Time for transfer relation:        14.616s
  Time for merge operator:            0.370s
  Time for stop operator:             0.115s
  Time for adding to reached set:     0.077s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 208 (count: 11, min: 4, max: 33, avg: 18.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.493s
  Counterexample analysis:                             6.326s (Max:     1.303s, Calls: 11)
    Refinement sat check:                              5.768s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.003s
  ARG update:                                          0.129s

Length of refined path (in blocks):                     197 (count: 11, min: 3, max: 32, avg: 17.91)
Number of affected states:                              186 (count: 11, min: 2, max: 31, avg: 16.91)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       186 (count: 11, min: 2, max: 31, avg: 16.91)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             175 (count: 11, min: 1, max: 30, avg: 15.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 4027
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 3356.91
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:     103.420s
Time for refinements:                 6.566s
Average time for refinement:          0.596s
Max time for refinement:              1.317s

Code Coverage
-----------------------------
  Function coverage:      0.485
  Visited lines:          2370
  Total lines:            4662
  Line coverage:          0.508
  Visited conditions:     186
  Total conditions:       662
  Condition coverage:     0.281

CPAchecker general statistics
-----------------------------
Number of program locations:     5295
Number of CFA edges:             5768
Number of relevant variables:    1146
Number of functions:             33
Number of loops:                 18
Size of reached set:             1701
  Number of reached locations:   645 (12%)
    Avg states per location:     2
    Max states per location:     39 (at node N14)
  Number of reached functions:   16 (48%)
  Number of partitions:          1701
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          4.142s
  Time for loading CPAs:          0.718s
  Time for loading parser:        0.485s
  Time for CFA construction:      2.873s
    Time for parsing file(s):     0.745s
    Time for AST to CFA:          0.850s
    Time for CFA sanity check:    0.338s
    Time for post-processing:     0.833s
      Time for var class.:        0.372s
Time for Analysis:              103.420s
CPU time for analysis:          103.410s
Total time for CPAchecker:      107.566s
Total CPU time for CPAchecker:  107.530s
Time for statistics:              0.132s

Time for Garbage Collector:       1.254s (in 146 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     82MB (    78 MiB) avg;    126MB (   120 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8220MB (  7839 MiB) max;   8177MB (  7798 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
