scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--frontends--dib3000mb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3_0f41df/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4396: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4450: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4520: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4574: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4644: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4698: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6141: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 16UL, 16UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6238: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 16UL, 16UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6920: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6973: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 10UL, 10UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7026: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 28UL, 28UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7088: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 10UL, 10UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7137: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7186: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 16UL, 16UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7301: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7545: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 44UL, 44UL); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            641 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  564 (88%)
  Because of loop head:            68 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (1%)
  Times precision was empty:       263 (41%)
  Times precision was {false}:     32 (5%)
  Times result was cached:         287 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      59 (9%)
  Times result was 'false':        9 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         822
  BDD entailment checks:           88
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       140
Number of predicates discovered:          2
Number of abstraction locations:          39
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         378
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.15
Number of irrelevant predicates:          99 (26%)
Number of preds handled by boolean abs:   59 (16%)
  Total number of models for allsat:      58
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                  1.747s
  Time for path formula creation:        1.711s
Time for strengthen operator:            0.032s
Time for prec operator:                 21.174s
  Time for abstraction:                 21.118s (Max:    11.809s, Count: 641)
    Boolean abstraction:                19.687s
    Solving time:                       19.506s (Max:    11.838s)
    Model enumeration time:              0.272s
    Time for BDD construction:           0.010s (Max:     0.002s)
Time for merge operator:                 0.040s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):    19.783s

Number of path formula cache hits:   18433 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.610s

Total number of created targets for pointer analysis: 24882
   Number of created targets for uf: *unsigned_short_int is 200
   Number of created targets for uf: *signed_int is 12
   Number of created targets for uf: *unsigned_char is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         117 (count: 866, min: 0, max: 28, avg: 0.14)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.082s
Automaton transfers with branching:                0
Automaton transfer successors:                        23604 (count: 23604, min: 1, max: 1, avg: 1.00) [1 x 23604]

CPA algorithm statistics
------------------------
Number of iterations:            4501
Max size of waitlist:            23
Average size of waitlist:        10
Number of computed successors:   5099
Max successors for one state:    2
Number of times merged:          367
Number of times stopped:         431
Number of times breaked:         9

Total time for CPA algorithm:        23.895s (Max:    12.267s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:     21.320s
  Time for transfer relation:         2.278s
  Time for merge operator:            0.070s
  Time for stop operator:             0.101s
  Time for adding to reached set:     0.034s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 108 (count: 9, min: 4, max: 33, avg: 12.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.439s
  Counterexample analysis:                             2.356s (Max:     1.348s, Calls: 9)
    Refinement sat check:                              2.112s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.003s
  ARG update:                                          0.043s

Length of refined path (in blocks):                      99 (count: 9, min: 3, max: 32, avg: 11.00)
Number of affected states:                               90 (count: 9, min: 2, max: 31, avg: 10.00)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        90 (count: 9, min: 2, max: 31, avg: 10.00)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              81 (count: 9, min: 1, max: 30, avg: 9.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 786
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 443.89
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.375s
Time for refinements:                 2.480s
Average time for refinement:          0.275s
Max time for refinement:              1.370s

Code Coverage
-----------------------------
  Function coverage:      0.515
  Visited lines:          1220
  Total lines:            4662
  Line coverage:          0.262
  Visited conditions:     58
  Total conditions:       662
  Condition coverage:     0.088

CPAchecker general statistics
-----------------------------
Number of program locations:     5295
Number of CFA edges:             5768
Number of relevant variables:    1146
Number of functions:             33
Number of loops:                 18
Size of reached set:             691
  Number of reached locations:   241 (5%)
    Avg states per location:     2
    Max states per location:     20 (at node N15)
  Number of reached functions:   17 (52%)
  Number of partitions:          691
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          4.050s
  Time for loading CPAs:          0.646s
  Time for loading parser:        0.494s
  Time for CFA construction:      2.797s
    Time for parsing file(s):     0.735s
    Time for AST to CFA:          0.848s
    Time for CFA sanity check:    0.326s
    Time for post-processing:     0.777s
      Time for var class.:        0.354s
Time for Analysis:               26.375s
CPU time for analysis:           26.370s
Total time for CPAchecker:       30.428s
Total CPU time for CPAchecker:   30.410s
Time for statistics:              0.089s

Time for Garbage Collector:       0.272s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     53MB (    50 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    32 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8240MB (  7858 MiB) max;   8168MB (  7790 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
