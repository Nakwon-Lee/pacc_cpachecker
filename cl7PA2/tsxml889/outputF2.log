scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--frontends--dib3000mb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_limzcthc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4396: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4450: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4520: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4574: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4644: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 4698: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6141: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 16UL, 16UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6238: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 16UL, 16UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6920: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 6973: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 10UL, 10UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7026: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 28UL, 28UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7088: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 10UL, 10UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7137: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 4UL, 4UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7186: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 16UL, 16UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7301: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 26UL, 26UL); (CFACreationUtils.addEdgeToCFA, INFO)

line 7545: Dead code detected: printk("<3>dib3000: sizeof: %zu %zu is different\n", 44UL, 44UL); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4320: Ignoring call via function pointer dib3000mb_set_frontend::__cil_tmp86 for which no suitable target was found in line: (*__cil_tmp86)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4320: Ignoring function call through function pointer *__cil_tmp86: (*__cil_tmp86)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4320: Unsupported feature (recursion): dib3000mb_set_frontend_and_tuner(fe); (line was originally pointer call(dib3000mb_set_frontend_and_tuner) (*__cil_tmp86)(fe);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1604 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1435 (89%)
  Because of loop head:            154 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (1%)
  Times precision was empty:       432 (27%)
  Times precision was {false}:     140 (9%)
  Times result was cached:         928 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      104 (6%)
  Times result was 'false':        15 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         4262
  BDD entailment checks:           278
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       433
Number of predicates discovered:          2
Number of abstraction locations:          60
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1172
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.80
Number of irrelevant predicates:          356 (30%)
Number of preds handled by boolean abs:   104 (9%)
  Total number of models for allsat:      104
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.137s
  Time for path formula creation:        3.078s
Time for strengthen operator:            0.109s
Time for prec operator:                422.434s
  Time for abstraction:                422.362s (Max:   404.420s, Count: 1604)
    Boolean abstraction:               415.503s
    Solving time:                      408.690s (Max:   394.405s)
    Model enumeration time:             10.325s
    Time for BDD construction:           0.013s (Max:     0.001s)
Time for merge operator:                 0.093s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):   419.015s

Number of path formula cache hits:   73439 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.815s

Total number of created targets for pointer analysis: 64594
   Number of created targets for uf: *unsigned_short_int is 9951
   Number of created targets for uf: *signed_int is 24
   Number of created targets for uf: *unsigned_char is 661


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         207 (count: 2039, min: 0, max: 34, avg: 0.10)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.174s
Automaton transfers with branching:                0
Automaton transfer successors:                        91523 (count: 91523, min: 1, max: 1, avg: 1.00) [1 x 91523]

CPA algorithm statistics
------------------------
Number of iterations:            18001
Max size of waitlist:            25
Average size of waitlist:        10
Number of computed successors:   20427
Max successors for one state:    2
Number of times merged:          1992
Number of times stopped:         2172
Number of times breaked:         15

Total time for CPA algorithm:       427.408s (Max:   405.005s)
  Time for choose from waitlist:      0.041s
  Time for precision adjustment:    422.637s
  Time for transfer relation:         4.248s
  Time for merge operator:            0.189s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.064s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 244 (count: 15, min: 4, max: 33, avg: 16.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.152s
  Counterexample analysis:                             7.041s (Max:     1.250s, Calls: 15)
    Refinement sat check:                              6.428s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.004s
  ARG update:                                          0.083s

Length of refined path (in blocks):                     229 (count: 15, min: 3, max: 32, avg: 15.27)
Number of affected states:                              214 (count: 15, min: 2, max: 31, avg: 14.27)
Length (states) of path with itp 'true':                  0 (count: 15, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       214 (count: 15, min: 2, max: 31, avg: 14.27)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             199 (count: 15, min: 1, max: 30, avg: 13.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 1829
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1103.53
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:     434.636s
Time for refinements:                 7.228s
Average time for refinement:          0.481s
Max time for refinement:              1.265s

Code Coverage
-----------------------------
  Function coverage:      0.515
  Visited lines:          2694
  Total lines:            4662
  Line coverage:          0.578
  Visited conditions:     188
  Total conditions:       662
  Condition coverage:     0.284

CPAchecker general statistics
-----------------------------
Number of program locations:     5295
Number of CFA edges:             5768
Number of relevant variables:    1146
Number of functions:             33
Number of loops:                 18
Size of reached set:             1733
  Number of reached locations:   668 (13%)
    Avg states per location:     2
    Max states per location:     39 (at node N14)
  Number of reached functions:   17 (52%)
  Number of partitions:          1733
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          4.077s
  Time for loading CPAs:          0.672s
  Time for loading parser:        0.472s
  Time for CFA construction:      2.837s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          0.877s
    Time for CFA sanity check:    0.334s
    Time for post-processing:     0.804s
      Time for var class.:        0.402s
Time for Analysis:              434.636s
CPU time for analysis:          434.510s
Total time for CPAchecker:      438.717s
Total CPU time for CPAchecker:  438.570s
Time for statistics:              0.107s

Time for Garbage Collector:       0.506s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     58MB (    55 MiB) avg;     78MB (    75 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8572MB (  8175 MiB) max;   8380MB (  7992 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
