scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--media--dvb--dvb-usb--dvb-usb-vp702x.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_epszm9il/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6786: Dead code detected: tmp = kmalloc(10UL, 208U); (CFACreationUtils.addEdgeToCFA, INFO)

line 6793: Dead code detected: [!(__cil_tmp10 == __cil_tmp9)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6794: Dead code detected: return (-12); (CFACreationUtils.addEdgeToCFA, INFO)

line 6800: Dead code detected: __cil_tmp11 = (u8 )180; (CFACreationUtils.addEdgeToCFA, INFO)

line 6809: Dead code detected: [!(__cil_tmp16 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6811: Dead code detected: __cil_tmp17 = key + 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6824: Dead code detected: __cil_tmp23 = key + 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6827: Dead code detected: [!(__cil_tmp25 == 68U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6829: Dead code detected: *state = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6838: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2521 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1990 (79%)
  Because of loop head:            517 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (1%)
  Times precision was empty:       387 (15%)
  Times precision was {false}:     186 (7%)
  Times result was cached:         1827 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      121 (5%)
  Times result was 'false':        39 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2472
  BDD entailment checks:           396
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       114
Number of predicates discovered:          2
Number of abstraction locations:          61
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2134
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.95
Number of irrelevant predicates:          645 (30%)
Number of preds handled by boolean abs:   121 (6%)
  Total number of models for allsat:      123
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.640s
  Time for path formula creation:        1.601s
Time for strengthen operator:            0.093s
Time for prec operator:                  1.269s
  Time for abstraction:                  1.168s (Max:     0.029s, Count: 2521)
    Boolean abstraction:                 0.172s
    Solving time:                        0.266s (Max:     0.014s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.018s (Max:     0.007s)
Time for merge operator:                 0.062s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.275s

Number of path formula cache hits:   38856 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.502s

Total number of created targets for pointer analysis: 1251
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 101


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         243 (count: 2444, min: 0, max: 76, avg: 0.10)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.184s
Automaton transfers with branching:                0
Automaton transfer successors:                        48187 (count: 48187, min: 1, max: 1, avg: 1.00) [1 x 48187]

CPA algorithm statistics
------------------------
Number of iterations:            12395
Max size of waitlist:            12
Average size of waitlist:        8
Number of computed successors:   13930
Max successors for one state:    2
Number of times merged:          1038
Number of times stopped:         1396
Number of times breaked:         14

Total time for CPA algorithm:         4.568s (Max:     0.883s)
  Time for choose from waitlist:      0.061s
  Time for precision adjustment:      1.519s
  Time for transfer relation:         2.580s
  Time for merge operator:            0.118s
  Time for stop operator:             0.080s
  Time for adding to reached set:     0.058s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 446 (count: 14, min: 6, max: 75, avg: 31.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.517s
  Counterexample analysis:                             0.394s (Max:     0.097s, Calls: 14)
    Refinement sat check:                              0.283s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.010s
  ARG update:                                          0.066s

Length of refined path (in blocks):                     432 (count: 14, min: 5, max: 74, avg: 30.86)
Number of affected states:                              418 (count: 14, min: 4, max: 73, avg: 29.86)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       418 (count: 14, min: 4, max: 73, avg: 29.86)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             404 (count: 14, min: 3, max: 72, avg: 28.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 1340
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 840.36
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.120s
Time for refinements:                 0.552s
Average time for refinement:          0.039s
Max time for refinement:              0.120s

Code Coverage
-----------------------------
  Function coverage:      0.426
  Visited lines:          2060
  Total lines:            3266
  Line coverage:          0.631
  Visited conditions:     70
  Total conditions:       186
  Condition coverage:     0.376

CPAchecker general statistics
-----------------------------
Number of program locations:     3570
Number of CFA edges:             3684
Number of relevant variables:    851
Number of functions:             54
Number of loops:                 7
Size of reached set:             773
  Number of reached locations:   299 (8%)
    Avg states per location:     2
    Max states per location:     13 (at node N20)
  Number of reached functions:   23 (43%)
  Number of partitions:          773
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.129s
  Time for loading CPAs:          0.730s
  Time for loading parser:        0.531s
  Time for CFA construction:      2.754s
    Time for parsing file(s):     0.802s
    Time for AST to CFA:          0.905s
    Time for CFA sanity check:    0.231s
    Time for post-processing:     0.651s
      Time for var class.:        0.320s
Time for Analysis:                5.120s
CPU time for analysis:            5.110s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.251s
Total CPU time for CPAchecker:    9.230s
Time for statistics:              0.072s

Time for Garbage Collector:       0.254s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     43MB (    41 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     30MB (    28 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8055MB (  7682 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
