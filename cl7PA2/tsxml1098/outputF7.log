scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--input--touchscreen--wacom_w8001.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tq9tuji2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2073: Function pointer *__cil_tmp8 with type int (*)(struct serio *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_report_pointer_emulation to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_report_slot_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2073: Ignoring call via function pointer serio_write::__cil_tmp8 for which no suitable target was found in line: tmp = (*__cil_tmp8)(serio, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2073: Ignoring function call through function pointer *__cil_tmp8: tmp = (*__cil_tmp8)(serio, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2831 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2603 (92%)
  Because of loop head:            208 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (1%)
  Times precision was empty:       610 (22%)
  Times precision was {false}:     208 (7%)
  Times result was cached:         1905 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      108 (4%)
  Times result was 'false':        39 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2417
  BDD entailment checks:           541
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       243
Number of predicates discovered:          2
Number of abstraction locations:          104
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2221
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.03
Number of irrelevant predicates:          730 (33%)
Number of preds handled by boolean abs:   108 (5%)
  Total number of models for allsat:      108
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.270s
  Time for path formula creation:        2.218s
Time for strengthen operator:            0.070s
Time for prec operator:                  1.585s
  Time for abstraction:                  1.467s (Max:     0.030s, Count: 2831)
    Boolean abstraction:                 0.218s
    Solving time:                        0.471s (Max:     0.018s)
    Model enumeration time:              0.032s
    Time for BDD construction:           0.036s (Max:     0.007s)
Time for merge operator:                 0.199s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.503s

Number of path formula cache hits:   31685 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.125s

Total number of created targets for pointer analysis: 85
   Number of created targets for uf: *unsigned_int is 41


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         203 (count: 2844, min: 0, max: 48, avg: 0.07)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.267s
Automaton transfers with branching:                0
Automaton transfer successors:                        53653 (count: 53653, min: 1, max: 1, avg: 1.00) [1 x 53653]

CPA algorithm statistics
------------------------
Number of iterations:            12862
Max size of waitlist:            21
Average size of waitlist:        7
Number of computed successors:   14409
Max successors for one state:    2
Number of times merged:          938
Number of times stopped:         1282
Number of times breaked:         20

Total time for CPA algorithm:         6.129s (Max:     0.437s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      1.920s
  Time for transfer relation:         3.559s
  Time for merge operator:            0.278s
  Time for stop operator:             0.080s
  Time for adding to reached set:     0.054s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 576 (count: 20, min: 5, max: 75, avg: 28.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.477s
  Counterexample analysis:                             0.325s (Max:     0.056s, Calls: 20)
    Refinement sat check:                              0.200s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.014s
  ARG update:                                          0.072s

Length of refined path (in blocks):                     556 (count: 20, min: 4, max: 74, avg: 27.80)
Number of affected states:                              536 (count: 20, min: 3, max: 73, avg: 26.80)
Length (states) of path with itp 'true':                  0 (count: 20, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       536 (count: 20, min: 3, max: 73, avg: 26.80)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 20, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             516 (count: 20, min: 2, max: 72, avg: 25.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 1096
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 614.40
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.670s
Time for refinements:                 0.539s
Average time for refinement:          0.026s
Max time for refinement:              0.086s

Code Coverage
-----------------------------
  Function coverage:      0.721
  Visited lines:          2378
  Total lines:            2457
  Line coverage:          0.968
  Visited conditions:     142
  Total conditions:       162
  Condition coverage:     0.877

CPAchecker general statistics
-----------------------------
Number of program locations:     2736
Number of CFA edges:             2859
Number of relevant variables:    685
Number of functions:             43
Number of loops:                 2
Size of reached set:             861
  Number of reached locations:   525 (19%)
    Avg states per location:     1
    Max states per location:     12 (at node N71)
  Number of reached functions:   31 (72%)
  Number of partitions:          861
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.436s
  Time for loading CPAs:          0.700s
  Time for loading parser:        0.541s
  Time for CFA construction:      2.107s
    Time for parsing file(s):     0.671s
    Time for AST to CFA:          0.641s
    Time for CFA sanity check:    0.127s
    Time for post-processing:     0.488s
      Time for var class.:        0.265s
Time for Analysis:                6.670s
CPU time for analysis:            6.670s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.109s
Total CPU time for CPAchecker:   10.100s
Time for statistics:              0.071s

Time for Garbage Collector:       0.270s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     43MB (    41 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8058MB (  7684 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
