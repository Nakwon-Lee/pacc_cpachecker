scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--wireless--wl12xx--wl12xx_sdio.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__ubc9ylg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5622: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5625: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5631: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5634: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_claim_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_release_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_writesb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_memcpy_toio to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_f0_writeb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_readsb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_memcpy_fromio to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_f0_readb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_disable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_power_save_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_get_host_pm_caps to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_host_pm_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_power_restore_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_enable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wl12xx_get_platform_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pm_runtime_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pm_runtime_idle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1627 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1370 (84%)
  Because of loop head:            241 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       661 (41%)
  Times precision was {false}:     110 (7%)
  Times result was cached:         795 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      61 (4%)
  Times result was 'false':        16 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1914
  BDD entailment checks:           602
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       96
Number of predicates discovered:          2
Number of abstraction locations:          50
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         966
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.65
Number of irrelevant predicates:          428 (44%)
Number of preds handled by boolean abs:   61 (6%)
  Total number of models for allsat:      63
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.771s
  Time for path formula creation:        1.735s
Time for strengthen operator:            0.040s
Time for prec operator:                  1.067s
  Time for abstraction:                  0.978s (Max:     0.029s, Count: 1627)
    Boolean abstraction:                 0.120s
    Solving time:                        0.306s (Max:     0.025s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.014s (Max:     0.007s)
Time for merge operator:                 0.140s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.320s

Number of path formula cache hits:   17983 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.660s

Total number of created targets for pointer analysis: 68
   Number of created targets for uf: *signed_int is 18


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         117 (count: 2184, min: 0, max: 34, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.133s
Automaton transfers with branching:                0
Automaton transfer successors:                        31201 (count: 31201, min: 1, max: 1, avg: 1.00) [1 x 31201]

CPA algorithm statistics
------------------------
Number of iterations:            7902
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   9031
Max successors for one state:    2
Number of times merged:          656
Number of times stopped:         1032
Number of times breaked:         16

Total time for CPA algorithm:         4.285s (Max:     0.796s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      1.304s
  Time for transfer relation:         2.446s
  Time for merge operator:            0.217s
  Time for stop operator:             0.133s
  Time for adding to reached set:     0.029s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 241 (count: 16, min: 8, max: 28, avg: 15.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.260s
  Counterexample analysis:                             0.132s (Max:     0.020s, Calls: 16)
    Refinement sat check:                              0.098s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.010s
  ARG update:                                          0.067s

Length of refined path (in blocks):                     225 (count: 16, min: 7, max: 27, avg: 14.06)
Number of affected states:                              209 (count: 16, min: 6, max: 26, avg: 13.06)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       209 (count: 16, min: 6, max: 26, avg: 13.06)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             193 (count: 16, min: 5, max: 25, avg: 12.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 586
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 480.44
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.579s
Time for refinements:                 0.293s
Average time for refinement:          0.018s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          1867
  Total lines:            1960
  Line coverage:          0.953
  Visited conditions:     92
  Total conditions:       100
  Condition coverage:     0.920

CPAchecker general statistics
-----------------------------
Number of program locations:     2187
Number of CFA edges:             2233
Number of relevant variables:    384
Number of functions:             40
Number of loops:                 2
Size of reached set:             345
  Number of reached locations:   309 (14%)
    Avg states per location:     1
    Max states per location:     8 (at node N1265)
  Number of reached functions:   25 (63%)
  Number of partitions:          345
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.271s
  Time for loading CPAs:          0.585s
  Time for loading parser:        0.429s
  Time for CFA construction:      2.172s
    Time for parsing file(s):     0.671s
    Time for AST to CFA:          0.768s
    Time for CFA sanity check:    0.124s
    Time for post-processing:     0.475s
      Time for var class.:        0.196s
Time for Analysis:                4.579s
CPU time for analysis:            4.580s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.854s
Total CPU time for CPAchecker:    7.840s
Time for statistics:              0.056s

Time for Garbage Collector:       0.174s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    64 MiB) max;     41MB (    39 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7995MB (  7624 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
