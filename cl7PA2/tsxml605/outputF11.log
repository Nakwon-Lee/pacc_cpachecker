scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--isdn--hardware--avm--avm_cs.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qplfakt3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3838: Function pointer *addcard with type int (*)(unsigned int port, unsigned int irq) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_loop_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3838: Function pointer avmcs_config::addcard points to b1pcmcia_addcard_b1, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: i = (*addcard)(__cil_tmp46, __cil_tmp49); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3838: Ignoring function call through function pointer *addcard: i = (*addcard)(__cil_tmp46, __cil_tmp49); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3838: Function pointer avmcs_config::addcard points to b1pcmcia_addcard_m2, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: i = (*addcard)(__cil_tmp46, __cil_tmp49); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3838: Function pointer avmcs_config::addcard points to b1pcmcia_addcard_m1, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: i = (*addcard)(__cil_tmp46, __cil_tmp49); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1pcmcia_delcard to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            292 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  257 (88%)
  Because of loop head:            29 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (2%)
  Times precision was empty:       119 (41%)
  Times precision was {false}:     27 (9%)
  Times result was cached:         127 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19 (7%)
  Times result was 'false':        21 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         327
  BDD entailment checks:           63
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       96
Number of predicates discovered:          2
Number of abstraction locations:          17
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         173
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.76
Number of irrelevant predicates:          69 (40%)
Number of preds handled by boolean abs:   19 (11%)
  Total number of models for allsat:      17
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.89

Time for post operator:                  0.568s
  Time for path formula creation:        0.554s
Time for strengthen operator:            0.030s
Time for prec operator:                  0.392s
  Time for abstraction:                  0.352s (Max:     0.025s, Count: 292)
    Boolean abstraction:                 0.042s
    Solving time:                        0.125s (Max:     0.015s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.029s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.127s

Number of path formula cache hits:   3147 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.532s

Total number of created targets for pointer analysis: 160
   Number of created targets for uf: *char is 161


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          33 (count: 440, min: 0, max: 33, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.087s
Automaton transfers with branching:                0
Automaton transfer successors:                         5667 (count: 5667, min: 1, max: 1, avg: 1.00) [1 x 5667]

CPA algorithm statistics
------------------------
Number of iterations:            1709
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   1942
Max successors for one state:    2
Number of times merged:          132
Number of times stopped:         174
Number of times breaked:         6

Total time for CPA algorithm:         1.574s (Max:     0.546s)
  Time for choose from waitlist:      0.004s
  Time for precision adjustment:      0.515s
  Time for transfer relation:         0.907s
  Time for merge operator:            0.049s
  Time for stop operator:             0.055s
  Time for adding to reached set:     0.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  66 (count: 6, min: 5, max: 14, avg: 11.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.076s
  Counterexample analysis:                             0.044s (Max:     0.014s, Calls: 6)
    Refinement sat check:                              0.021s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.006s
  ARG update:                                          0.015s

Length of refined path (in blocks):                      60 (count: 6, min: 4, max: 13, avg: 10.00)
Number of affected states:                               54 (count: 6, min: 3, max: 12, avg: 9.00)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        54 (count: 6, min: 3, max: 12, avg: 9.00)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              48 (count: 6, min: 2, max: 11, avg: 8.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 329
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 265.67
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.680s
Time for refinements:                 0.106s
Average time for refinement:          0.017s
Max time for refinement:              0.049s

Code Coverage
-----------------------------
  Function coverage:      0.421
  Visited lines:          830
  Total lines:            956
  Line coverage:          0.868
  Visited conditions:     40
  Total conditions:       60
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     1074
Number of CFA edges:             1103
Number of relevant variables:    115
Number of functions:             19
Number of loops:                 1
Size of reached set:             172
  Number of reached locations:   134 (12%)
    Avg states per location:     1
    Max states per location:     3 (at node N113)
  Number of reached functions:   8 (42%)
  Number of partitions:          158
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N287 (before line 3823), Function avmcs_config called from node N24, stack depth 3 [408a247c], stack [main, avmcs_probe, avmcs_config], ABS269])
  Number of target states:       0

Time for analysis setup:          2.815s
  Time for loading CPAs:          0.614s
  Time for loading parser:        0.404s
  Time for CFA construction:      1.677s
    Time for parsing file(s):     0.593s
    Time for AST to CFA:          0.567s
    Time for CFA sanity check:    0.069s
    Time for post-processing:     0.300s
      Time for var class.:        0.106s
Time for Analysis:                1.680s
CPU time for analysis:            1.690s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.497s
Total CPU time for CPAchecker:    4.500s
Time for statistics:              0.065s

Time for Garbage Collector:       0.104s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     33MB (    32 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7981MB (  7611 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
