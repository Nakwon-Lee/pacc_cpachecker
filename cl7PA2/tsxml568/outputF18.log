scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--rtc--rtc-v3020.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u3xutnkn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3966: Ignoring call via function pointer rtc_remove::__cil_tmp13 for which no suitable target was found in line: (*__cil_tmp13)(chip); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3966: Ignoring function call through function pointer *__cil_tmp13: (*__cil_tmp13)(chip); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3775: Ignoring call via function pointer rtc_probe::__cil_tmp25 for which no suitable target was found in line: retval = (*__cil_tmp25)(chip, pdev, pdata); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3775: Ignoring function call through function pointer *__cil_tmp25: retval = (*__cil_tmp25)(chip, pdev, pdata); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3798: Ignoring call via function pointer rtc_probe::__cil_tmp31 for which no suitable target was found in line: tmp___0 = (*__cil_tmp31)(chip); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2584: Ignoring call via function pointer v3020_set_reg::__cil_tmp11 for which no suitable target was found in line: (*__cil_tmp11)(chip, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2584: Ignoring function call through function pointer *__cil_tmp11: (*__cil_tmp11)(chip, __cil_tmp14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2617: Ignoring call via function pointer v3020_set_reg::__cil_tmp24 for which no suitable target was found in line: (*__cil_tmp24)(chip, __cil_tmp27); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2617: Ignoring function call through function pointer *__cil_tmp24: (*__cil_tmp24)(chip, __cil_tmp27); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2677: Ignoring call via function pointer v3020_get_reg::__cil_tmp11 for which no suitable target was found in line: (*__cil_tmp11)(chip, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2677: Ignoring function call through function pointer *__cil_tmp11: (*__cil_tmp11)(chip, __cil_tmp14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2704: Ignoring call via function pointer v3020_get_reg::__cil_tmp22 for which no suitable target was found in line: tmp = (*__cil_tmp22)(chip); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2704: Ignoring function call through function pointer *__cil_tmp22: tmp = (*__cil_tmp22)(chip); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3918: Ignoring call via function pointer rtc_probe::__cil_tmp98 for which no suitable target was found in line: (*__cil_tmp98)(chip); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3918: Ignoring function call through function pointer *__cil_tmp98: (*__cil_tmp98)(chip); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcd2bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9407 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7508 (80%)
  Because of loop head:            1864 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       1019 (11%)
  Times precision was {false}:     391 (4%)
  Times result was cached:         7663 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      334 (4%)
  Times result was 'false':        56 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3735
  BDD entailment checks:           2261
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       99
Number of predicates discovered:          2
Number of abstraction locations:          118
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         8388
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 11.57
Number of irrelevant predicates:          2292 (27%)
Number of preds handled by boolean abs:   334 (4%)
  Total number of models for allsat:      334
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.868s
  Time for path formula creation:        1.797s
Time for strengthen operator:            0.102s
Time for prec operator:                  2.866s
  Time for abstraction:                  2.566s (Max:     0.027s, Count: 9407)
    Boolean abstraction:                 0.314s
    Solving time:                        0.418s (Max:     0.013s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.058s (Max:     0.013s)
Time for merge operator:                 0.077s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.446s

Number of path formula cache hits:   84703 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.417s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         625 (count: 7244, min: 0, max: 214, avg: 0.09)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.258s
Automaton transfers with branching:                0
Automaton transfer successors:                        93899 (count: 93899, min: 1, max: 1, avg: 1.00) [1 x 93899]

CPA algorithm statistics
------------------------
Number of iterations:            32062
Max size of waitlist:            20
Average size of waitlist:        8
Number of computed successors:   35079
Max successors for one state:    2
Number of times merged:          737
Number of times stopped:         2572
Number of times breaked:         35

Total time for CPA algorithm:         7.469s (Max:     0.887s)
  Time for choose from waitlist:      0.042s
  Time for precision adjustment:      3.385s
  Time for transfer relation:         3.290s
  Time for merge operator:            0.154s
  Time for stop operator:             0.141s
  Time for adding to reached set:     0.108s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                 713 (count: 35, min: 4, max: 54, avg: 20.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.582s
  Counterexample analysis:                             0.387s (Max:     0.023s, Calls: 35)
    Refinement sat check:                              0.287s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.022s
  ARG update:                                          0.128s

Length of refined path (in blocks):                     678 (count: 35, min: 3, max: 53, avg: 19.37)
Number of affected states:                              643 (count: 35, min: 2, max: 52, avg: 18.37)
Length (states) of path with itp 'true':                  0 (count: 35, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       643 (count: 35, min: 2, max: 52, avg: 18.37)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 35, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             608 (count: 35, min: 1, max: 51, avg: 17.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 3143
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 843.09
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.170s
Time for refinements:                 0.684s
Average time for refinement:          0.019s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.718
  Visited lines:          1961
  Total lines:            2013
  Line coverage:          0.974
  Visited conditions:     144
  Total conditions:       164
  Condition coverage:     0.878

CPAchecker general statistics
-----------------------------
Number of program locations:     2341
Number of CFA edges:             2475
Number of relevant variables:    428
Number of functions:             39
Number of loops:                 9
Size of reached set:             3049
  Number of reached locations:   636 (27%)
    Avg states per location:     4
    Max states per location:     164 (at node N70)
  Number of reached functions:   28 (72%)
  Number of partitions:          3049
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.248s
  Time for loading CPAs:          0.672s
  Time for loading parser:        0.483s
  Time for CFA construction:      1.987s
    Time for parsing file(s):     0.617s
    Time for AST to CFA:          0.611s
    Time for CFA sanity check:    0.139s
    Time for post-processing:     0.461s
      Time for var class.:        0.235s
Time for Analysis:                8.170s
CPU time for analysis:            8.170s
Time for analyzing result:        0.001s
Total time for CPAchecker:       11.420s
Total CPU time for CPAchecker:   11.410s
Time for statistics:              0.097s

Time for Garbage Collector:       0.233s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     42MB (    40 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8064MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
