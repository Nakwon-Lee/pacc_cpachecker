scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--target--loopback--tcm_loop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lot8kaox/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6601: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 6604: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 6607: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 6613: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9249: Function pointer *__cil_tmp45 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9488: Function pointer *__cil_tmp83 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7910: Function pointer *__cil_tmp47 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7769: Function pointer *__cil_tmp127 with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __root_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bus_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bus_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function root_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function target_fabric_configfs_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function target_fabric_configfs_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function target_fabric_configfs_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function transport_init_se_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function core_tmr_alloc_req to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function transport_lookup_tmr_lun to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function transport_generic_handle_tmr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function transport_generic_free_cmd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_track_queue_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function target_fabric_configfs_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7910: Ignoring call via function pointer tcm_loop_queuecommand::__cil_tmp47 for which no suitable target was found in line: (*__cil_tmp47)(sc); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7910: Ignoring function call through function pointer *__cil_tmp47: (*__cil_tmp47)(sc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2541 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2324 (91%)
  Because of loop head:            192 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (1%)
  Times precision was empty:       794 (31%)
  Times precision was {false}:     78 (3%)
  Times result was cached:         1584 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      85 (3%)
  Times result was 'false':        74 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1898
  BDD entailment checks:           470
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       206
Number of predicates discovered:          2
Number of abstraction locations:          63
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1747
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 10.72
Number of irrelevant predicates:          385 (22%)
Number of preds handled by boolean abs:   85 (5%)
  Total number of models for allsat:      88
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.399s
  Time for path formula creation:        1.357s
Time for strengthen operator:            0.072s
Time for prec operator:                  1.172s
  Time for abstraction:                  1.010s (Max:     0.029s, Count: 2541)
    Boolean abstraction:                 0.139s
    Solving time:                        0.158s (Max:     0.024s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.015s (Max:     0.005s)
Time for merge operator:                 0.068s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     0.170s

Number of path formula cache hits:   36236 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.182s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         159 (count: 2170, min: 0, max: 42, avg: 0.07)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.137s
Automaton transfers with branching:                0
Automaton transfer successors:                        43515 (count: 43515, min: 1, max: 1, avg: 1.00) [1 x 43515]

CPA algorithm statistics
------------------------
Number of iterations:            11346
Max size of waitlist:            22
Average size of waitlist:        9
Number of computed successors:   12916
Max successors for one state:    2
Number of times merged:          714
Number of times stopped:         1128
Number of times breaked:         25

Total time for CPA algorithm:         4.049s (Max:     0.886s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      1.392s
  Time for transfer relation:         2.245s
  Time for merge operator:            0.120s
  Time for stop operator:             0.089s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 357 (count: 25, min: 8, max: 28, avg: 14.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.425s
  Counterexample analysis:                             0.300s (Max:     0.033s, Calls: 25)
    Refinement sat check:                              0.219s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.024s
  ARG update:                                          0.042s

Length of refined path (in blocks):                     332 (count: 25, min: 7, max: 27, avg: 13.28)
Number of affected states:                              307 (count: 25, min: 6, max: 26, avg: 12.28)
Length (states) of path with itp 'true':                  0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       307 (count: 25, min: 6, max: 26, avg: 12.28)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             282 (count: 25, min: 5, max: 25, avg: 11.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 603
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 451.08
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.531s
Time for refinements:                 0.474s
Average time for refinement:          0.018s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.286
  Visited lines:          2311
  Total lines:            4640
  Line coverage:          0.498
  Visited conditions:     100
  Total conditions:       278
  Condition coverage:     0.360

CPAchecker general statistics
-----------------------------
Number of program locations:     5197
Number of CFA edges:             5333
Number of relevant variables:    1194
Number of functions:             105
Number of loops:                 4
Size of reached set:             513
  Number of reached locations:   362 (7%)
    Avg states per location:     1
    Max states per location:     10 (at node N4218)
  Number of reached functions:   30 (29%)
  Number of partitions:          513
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.710s
  Time for loading CPAs:          0.621s
  Time for loading parser:        0.405s
  Time for CFA construction:      2.616s
    Time for parsing file(s):     0.667s
    Time for AST to CFA:          0.956s
    Time for CFA sanity check:    0.189s
    Time for post-processing:     0.654s
      Time for var class.:        0.314s
Time for Analysis:                4.531s
CPU time for analysis:            4.530s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.245s
Total CPU time for CPAchecker:    8.230s
Time for statistics:              0.077s

Time for Garbage Collector:       0.231s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     45MB (    43 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8057MB (  7684 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
