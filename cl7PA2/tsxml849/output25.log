scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--frontends--tua6100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ncccoqeu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4025: Function pointer *__cil_tmp49 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4047: Function pointer *__cil_tmp59 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3767: Function pointer *__cil_tmp155 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3794: Function pointer *__cil_tmp165 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3821: Function pointer *__cil_tmp175 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3848: Function pointer *__cil_tmp185 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3327: Function pointer *__cil_tmp27 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3356: Function pointer *__cil_tmp37 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3767: Ignoring call via function pointer tua6100_set_params::__cil_tmp155 for which no suitable target was found in line: (*__cil_tmp155)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3767: Ignoring function call through function pointer *__cil_tmp155: (*__cil_tmp155)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3794: Ignoring call via function pointer tua6100_set_params::__cil_tmp165 for which no suitable target was found in line: (*__cil_tmp165)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3794: Ignoring function call through function pointer *__cil_tmp165: (*__cil_tmp165)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3821: Ignoring call via function pointer tua6100_set_params::__cil_tmp175 for which no suitable target was found in line: (*__cil_tmp175)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3821: Ignoring function call through function pointer *__cil_tmp175: (*__cil_tmp175)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3848: Ignoring call via function pointer tua6100_set_params::__cil_tmp185 for which no suitable target was found in line: (*__cil_tmp185)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3848: Ignoring function call through function pointer *__cil_tmp185: (*__cil_tmp185)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3327: Ignoring call via function pointer tua6100_sleep::__cil_tmp27 for which no suitable target was found in line: (*__cil_tmp27)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3327: Ignoring function call through function pointer *__cil_tmp27: (*__cil_tmp27)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3356: Ignoring call via function pointer tua6100_sleep::__cil_tmp37 for which no suitable target was found in line: (*__cil_tmp37)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3356: Ignoring function call through function pointer *__cil_tmp37: (*__cil_tmp37)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            161 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  110 (68%)
  Because of loop head:            46 (29%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (3%)
  Times precision was empty:       71 (44%)
  Times precision was {false}:     19 (12%)
  Times result was cached:         58 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13 (8%)
  Times result was 'false':        5 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         436
  BDD entailment checks:           76
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       361
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         90
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.81
Number of irrelevant predicates:          45 (50%)
Number of preds handled by boolean abs:   13 (14%)
  Total number of models for allsat:      13
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.916s
  Time for path formula creation:        0.901s
Time for strengthen operator:            0.026s
Time for prec operator:                  0.833s
  Time for abstraction:                  0.804s (Max:     0.197s, Count: 161)
    Boolean abstraction:                 0.152s
    Solving time:                        0.610s (Max:     0.190s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.039s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     0.613s

Number of path formula cache hits:   3441 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.881s

Total number of created targets for pointer analysis: 1403
   Number of created targets for uf: *unsigned_char is 57


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          15 (count: 325, min: 0, max: 15, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.091s
Automaton transfers with branching:                0
Automaton transfer successors:                         7093 (count: 7093, min: 1, max: 1, avg: 1.00) [1 x 7093]

CPA algorithm statistics
------------------------
Number of iterations:            1477
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   1711
Max successors for one state:    2
Number of times merged:          180
Number of times stopped:         230
Number of times breaked:         5

Total time for CPA algorithm:         2.324s (Max:     0.706s)
  Time for choose from waitlist:      0.012s
  Time for precision adjustment:      0.939s
  Time for transfer relation:         1.242s
  Time for merge operator:            0.054s
  Time for stop operator:             0.031s
  Time for adding to reached set:     0.020s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  32 (count: 5, min: 4, max: 7, avg: 6.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.106s
  Counterexample analysis:                             0.056s (Max:     0.031s, Calls: 5)
    Refinement sat check:                              0.033s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.001s
  ARG update:                                          0.029s

Length of refined path (in blocks):                      27 (count: 5, min: 3, max: 6, avg: 5.40)
Number of affected states:                               22 (count: 5, min: 2, max: 5, avg: 4.40)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        22 (count: 5, min: 2, max: 5, avg: 4.40)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              17 (count: 5, min: 1, max: 4, avg: 3.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 300
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 267.80
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.443s
Time for refinements:                 0.118s
Average time for refinement:          0.023s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.353
  Visited lines:          1128
  Total lines:            1355
  Line coverage:          0.832
  Visited conditions:     48
  Total conditions:       78
  Condition coverage:     0.615

CPAchecker general statistics
-----------------------------
Number of program locations:     1475
Number of CFA edges:             1511
Number of relevant variables:    288
Number of functions:             17
Number of loops:                 1
Size of reached set:             153
  Number of reached locations:   144 (10%)
    Avg states per location:     1
    Max states per location:     5 (at node N805)
  Number of reached functions:   6 (35%)
  Number of partitions:          153
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.742s
  Time for loading CPAs:          0.603s
  Time for loading parser:        0.408s
  Time for CFA construction:      1.625s
    Time for parsing file(s):     0.546s
    Time for AST to CFA:          0.526s
    Time for CFA sanity check:    0.078s
    Time for post-processing:     0.338s
      Time for var class.:        0.164s
Time for Analysis:                2.443s
CPU time for analysis:            2.440s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.187s
Total CPU time for CPAchecker:    5.180s
Time for statistics:              0.053s

Time for Garbage Collector:       0.119s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     27MB (    26 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7986MB (  7616 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
