scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--f71805f.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ih9o9qqj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_check_resource_conflict to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_chmod_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5595 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5323 (95%)
  Because of loop head:            255 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (0%)
  Times precision was empty:       1080 (19%)
  Times precision was {false}:     127 (2%)
  Times result was cached:         4281 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      107 (2%)
  Times result was 'false':        17 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2010
  BDD entailment checks:           722
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       165
Number of predicates discovered:          2
Number of abstraction locations:          64
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4515
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 19.29
Number of irrelevant predicates:          984 (22%)
Number of preds handled by boolean abs:   107 (2%)
  Total number of models for allsat:      108
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.567s
  Time for path formula creation:        1.519s
Time for strengthen operator:            0.099s
Time for prec operator:                  1.279s
  Time for abstraction:                  1.116s (Max:     0.035s, Count: 5595)
    Boolean abstraction:                 0.120s
    Solving time:                        0.141s (Max:     0.014s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.015s (Max:     0.008s)
Time for merge operator:                 0.079s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.144s

Number of path formula cache hits:   41939 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.115s

Total number of created targets for pointer analysis: 345
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *(char)* is 89


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         211 (count: 3084, min: 0, max: 63, avg: 0.07)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.191s
Automaton transfers with branching:                0
Automaton transfer successors:                        47245 (count: 47245, min: 1, max: 1, avg: 1.00) [1 x 47245]

CPA algorithm statistics
------------------------
Number of iterations:            18322
Max size of waitlist:            11
Average size of waitlist:        4
Number of computed successors:   19627
Max successors for one state:    2
Number of times merged:          644
Number of times stopped:         1241
Number of times breaked:         17

Total time for CPA algorithm:         4.603s (Max:     0.947s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      1.616s
  Time for transfer relation:         2.436s
  Time for merge operator:            0.117s
  Time for stop operator:             0.092s
  Time for adding to reached set:     0.092s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 814 (count: 17, min: 30, max: 63, avg: 47.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.519s
  Counterexample analysis:                             0.383s (Max:     0.044s, Calls: 17)
    Refinement sat check:                              0.275s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.006s
  ARG update:                                          0.067s

Length of refined path (in blocks):                     797 (count: 17, min: 29, max: 62, avg: 46.88)
Number of affected states:                              780 (count: 17, min: 28, max: 61, avg: 45.88)
Length (states) of path with itp 'true':                  0 (count: 17, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       780 (count: 17, min: 28, max: 61, avg: 45.88)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             763 (count: 17, min: 27, max: 60, avg: 44.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 1329
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1030.94
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.206s
Time for refinements:                 0.601s
Average time for refinement:          0.035s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.253
  Visited lines:          1599
  Total lines:            4503
  Line coverage:          0.355
  Visited conditions:     96
  Total conditions:       230
  Condition coverage:     0.417

CPAchecker general statistics
-----------------------------
Number of program locations:     4916
Number of CFA edges:             5096
Number of relevant variables:    959
Number of functions:             83
Number of loops:                 13
Size of reached set:             895
  Number of reached locations:   351 (7%)
    Avg states per location:     2
    Max states per location:     52 (at node N32)
  Number of reached functions:   21 (25%)
  Number of partitions:          895
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.046s
  Time for loading CPAs:          0.615s
  Time for loading parser:        0.465s
  Time for CFA construction:      2.858s
    Time for parsing file(s):     0.712s
    Time for AST to CFA:          0.917s
    Time for CFA sanity check:    0.280s
    Time for post-processing:     0.835s
      Time for var class.:        0.410s
Time for Analysis:                5.206s
CPU time for analysis:            5.200s
Time for analyzing result:        0.000s
Total time for CPAchecker:        9.255s
Total CPU time for CPAchecker:    9.250s
Time for statistics:              0.085s

Time for Garbage Collector:       0.278s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     44MB (    42 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     30MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8057MB (  7684 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
