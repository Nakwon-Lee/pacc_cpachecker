scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--f71805f.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tz90yxvw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_chmod_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_check_resource_conflict to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3303 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2866 (87%)
  Because of loop head:            419 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       543 (16%)
  Times precision was {false}:     174 (5%)
  Times result was cached:         2478 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      108 (3%)
  Times result was 'false':        18 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2036
  BDD entailment checks:           646
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       165
Number of predicates discovered:          2
Number of abstraction locations:          64
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2760
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.79
Number of irrelevant predicates:          960 (35%)
Number of preds handled by boolean abs:   108 (4%)
  Total number of models for allsat:      110
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  2.090s
  Time for path formula creation:        2.064s
Time for strengthen operator:            0.053s
Time for prec operator:                  1.552s
  Time for abstraction:                  1.401s (Max:     0.034s, Count: 3303)
    Boolean abstraction:                 0.191s
    Solving time:                        0.391s (Max:     0.016s)
    Model enumeration time:              0.034s
    Time for BDD construction:           0.015s (Max:     0.007s)
Time for merge operator:                 0.235s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.425s

Number of path formula cache hits:   23713 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.644s

Total number of created targets for pointer analysis: 664
   Number of created targets for uf: *unsigned_short_int is 55
   Number of created targets for uf: *(char)* is 105


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         169 (count: 2712, min: 0, max: 55, avg: 0.06)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.209s
Automaton transfers with branching:                0
Automaton transfer successors:                        40941 (count: 40941, min: 1, max: 1, avg: 1.00) [1 x 40941]

CPA algorithm statistics
------------------------
Number of iterations:            13210
Max size of waitlist:            19
Average size of waitlist:        8
Number of computed successors:   14548
Max successors for one state:    2
Number of times merged:          695
Number of times stopped:         1199
Number of times breaked:         18

Total time for CPA algorithm:         5.653s (Max:     0.898s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      1.847s
  Time for transfer relation:         3.101s
  Time for merge operator:            0.298s
  Time for stop operator:             0.063s
  Time for adding to reached set:     0.087s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 976 (count: 18, min: 30, max: 80, avg: 54.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.599s
  Counterexample analysis:                             0.473s (Max:     0.040s, Calls: 18)
    Refinement sat check:                              0.355s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.023s
  ARG update:                                          0.061s

Length of refined path (in blocks):                     958 (count: 18, min: 29, max: 79, avg: 53.22)
Number of affected states:                              940 (count: 18, min: 28, max: 78, avg: 52.22)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       940 (count: 18, min: 28, max: 78, avg: 52.22)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             922 (count: 18, min: 27, max: 77, avg: 51.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 985
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 693.94
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.301s
Time for refinements:                 0.648s
Average time for refinement:          0.036s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.253
  Visited lines:          1599
  Total lines:            4503
  Line coverage:          0.355
  Visited conditions:     96
  Total conditions:       230
  Condition coverage:     0.417

CPAchecker general statistics
-----------------------------
Number of program locations:     4916
Number of CFA edges:             5096
Number of relevant variables:    959
Number of functions:             83
Number of loops:                 13
Size of reached set:             895
  Number of reached locations:   351 (7%)
    Avg states per location:     2
    Max states per location:     52 (at node N32)
  Number of reached functions:   21 (25%)
  Number of partitions:          895
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.993s
  Time for loading CPAs:          0.663s
  Time for loading parser:        0.448s
  Time for CFA construction:      2.792s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          0.865s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.822s
      Time for var class.:        0.439s
Time for Analysis:                6.310s
CPU time for analysis:            6.310s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.306s
Total CPU time for CPAchecker:   10.300s
Time for statistics:              0.086s

Time for Garbage Collector:       0.270s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     45MB (    42 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     31MB (    29 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8060MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
