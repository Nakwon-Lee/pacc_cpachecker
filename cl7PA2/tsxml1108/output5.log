scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--mtdblock.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_68z5jk03/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2899: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2905: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2911: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3095: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3098: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3101: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3107: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 3154: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 3160: Dead code detected: Goto: case_4___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 3166: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2987: Function pointer *__cil_tmp10 with type void (*)(struct mtd_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2987: Ignoring call via function pointer mtd_sync::__cil_tmp10 for which no suitable target was found in line: (*__cil_tmp10)(mtd); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2987: Ignoring function call through function pointer *__cil_tmp10: (*__cil_tmp10)(mtd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3039 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2617 (86%)
  Because of loop head:            406 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       1001 (33%)
  Times precision was {false}:     267 (9%)
  Times result was cached:         1683 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      88 (3%)
  Times result was 'false':        6 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4064
  BDD entailment checks:           974
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       139
Number of predicates discovered:          2
Number of abstraction locations:          46
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2038
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.74
Number of irrelevant predicates:          1087 (53%)
Number of preds handled by boolean abs:   88 (4%)
  Total number of models for allsat:      88
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.786s
  Time for path formula creation:        3.725s
Time for strengthen operator:            0.123s
Time for prec operator:                  2.202s
  Time for abstraction:                  2.082s (Max:     0.035s, Count: 3039)
    Boolean abstraction:                 0.290s
    Solving time:                        0.906s (Max:     0.020s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.018s (Max:     0.007s)
Time for merge operator:                 0.262s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.931s

Number of path formula cache hits:   24747 (35%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.520s

Total number of created targets for pointer analysis: 136
   Number of created targets for uf: *unsigned_long_int is 89


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         179 (count: 3844, min: 0, max: 28, avg: 0.05)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.226s
Automaton transfers with branching:                0
Automaton transfer successors:                        68255 (count: 68255, min: 1, max: 1, avg: 1.00) [1 x 68255]

CPA algorithm statistics
------------------------
Number of iterations:            18398
Max size of waitlist:            17
Average size of waitlist:        8
Number of computed successors:   20847
Max successors for one state:    2
Number of times merged:          1545
Number of times stopped:         2343
Number of times breaked:         16

Total time for CPA algorithm:         8.716s (Max:     1.331s)
  Time for choose from waitlist:      0.085s
  Time for precision adjustment:      2.575s
  Time for transfer relation:         5.230s
  Time for merge operator:            0.390s
  Time for stop operator:             0.093s
  Time for adding to reached set:     0.084s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 233 (count: 16, min: 8, max: 21, avg: 14.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.310s
  Counterexample analysis:                             0.187s (Max:     0.018s, Calls: 16)
    Refinement sat check:                              0.113s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.020s
  ARG update:                                          0.074s

Length of refined path (in blocks):                     217 (count: 16, min: 7, max: 20, avg: 13.56)
Number of affected states:                              201 (count: 16, min: 6, max: 19, avg: 12.56)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       201 (count: 16, min: 6, max: 19, avg: 12.56)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             185 (count: 16, min: 5, max: 18, avg: 11.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 1555
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1109.06
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       9.084s
Time for refinements:                 0.368s
Average time for refinement:          0.023s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.741
  Visited lines:          1673
  Total lines:            1707
  Line coverage:          0.980
  Visited conditions:     118
  Total conditions:       124
  Condition coverage:     0.952

CPAchecker general statistics
-----------------------------
Number of program locations:     1900
Number of CFA edges:             1964
Number of relevant variables:    406
Number of functions:             27
Number of loops:                 3
Size of reached set:             802
  Number of reached locations:   357 (19%)
    Avg states per location:     2
    Max states per location:     18 (at node N0)
  Number of reached functions:   20 (74%)
  Number of partitions:          802
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.105s
  Time for loading CPAs:          0.695s
  Time for loading parser:        0.474s
  Time for CFA construction:      1.817s
    Time for parsing file(s):     0.568s
    Time for AST to CFA:          0.601s
    Time for CFA sanity check:    0.109s
    Time for post-processing:     0.408s
      Time for var class.:        0.203s
Time for Analysis:                9.084s
CPU time for analysis:            9.080s
Time for analyzing result:        0.000s
Total time for CPAchecker:       12.209s
Total CPU time for CPAchecker:   12.200s
Time for statistics:              0.073s

Time for Garbage Collector:       0.354s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    73 MiB) max;     47MB (    44 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8002MB (  7631 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
