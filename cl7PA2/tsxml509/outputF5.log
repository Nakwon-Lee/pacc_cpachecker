scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--video--n411.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cofbrgc5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3665: Ignoring call via function pointer n411_init_board::__cil_tmp5 for which no suitable target was found in line: (*__cil_tmp5)(par, 164U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3665: Ignoring function call through function pointer *__cil_tmp5: (*__cil_tmp5)(par, 164U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3669: Ignoring call via function pointer n411_init_board::__cil_tmp8 for which no suitable target was found in line: (*__cil_tmp8)(par, 129U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3669: Ignoring function call through function pointer *__cil_tmp8: (*__cil_tmp8)(par, 129U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3680: Ignoring call via function pointer n411_init_board::__cil_tmp13 for which no suitable target was found in line: (*__cil_tmp13)(par, 163U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *__cil_tmp13: (*__cil_tmp13)(par, 163U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3687: Ignoring call via function pointer n411_init_board::__cil_tmp16 for which no suitable target was found in line: (*__cil_tmp16)(par, __cil_tmp19); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3687: Ignoring function call through function pointer *__cil_tmp16: (*__cil_tmp16)(par, __cil_tmp19); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1402 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1275 (91%)
  Because of loop head:            117 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (1%)
  Times precision was empty:       499 (36%)
  Times precision was {false}:     59 (4%)
  Times result was cached:         812 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32 (2%)
  Times result was 'false':        50 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1062
  BDD entailment checks:           340
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       25
Number of predicates discovered:          2
Number of abstraction locations:          31
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         903
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.92
Number of irrelevant predicates:          532 (59%)
Number of preds handled by boolean abs:   32 (4%)
  Total number of models for allsat:      32
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.841s
  Time for path formula creation:        0.821s
Time for strengthen operator:            0.040s
Time for prec operator:                  0.578s
  Time for abstraction:                  0.512s (Max:     0.019s, Count: 1402)
    Boolean abstraction:                 0.058s
    Solving time:                        0.095s (Max:     0.011s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.008s (Max:     0.005s)
Time for merge operator:                 0.036s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.109s

Number of path formula cache hits:   6361 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.728s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          55 (count: 1351, min: 0, max: 29, avg: 0.04)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                        10752 (count: 10752, min: 1, max: 1, avg: 1.00) [1 x 10752]

CPA algorithm statistics
------------------------
Number of iterations:            5571
Max size of waitlist:            17
Average size of waitlist:        8
Number of computed successors:   6253
Max successors for one state:    2
Number of times merged:          361
Number of times stopped:         604
Number of times breaked:         10

Total time for CPA algorithm:         2.480s (Max:     0.404s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      0.795s
  Time for transfer relation:         1.358s
  Time for merge operator:            0.078s
  Time for stop operator:             0.049s
  Time for adding to reached set:     0.083s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 188 (count: 10, min: 5, max: 33, avg: 18.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.160s
  Counterexample analysis:                             0.099s (Max:     0.013s, Calls: 10)
    Refinement sat check:                              0.056s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.005s
  ARG update:                                          0.030s

Length of refined path (in blocks):                     178 (count: 10, min: 4, max: 32, avg: 17.80)
Number of affected states:                              168 (count: 10, min: 3, max: 31, avg: 16.80)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       168 (count: 10, min: 3, max: 31, avg: 16.80)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             158 (count: 10, min: 2, max: 30, avg: 15.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 635
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 530.60
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.699s
Time for refinements:                 0.209s
Average time for refinement:          0.020s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.545
  Visited lines:          807
  Total lines:            855
  Line coverage:          0.944
  Visited conditions:     56
  Total conditions:       76
  Condition coverage:     0.737

CPAchecker general statistics
-----------------------------
Number of program locations:     986
Number of CFA edges:             1029
Number of relevant variables:    61
Number of functions:             22
Number of loops:                 2
Size of reached set:             324
  Number of reached locations:   180 (18%)
    Avg states per location:     1
    Max states per location:     10 (at node N0)
  Number of reached functions:   12 (55%)
  Number of partitions:          324
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.917s
  Time for loading CPAs:          0.627s
  Time for loading parser:        0.493s
  Time for CFA construction:      1.691s
    Time for parsing file(s):     0.583s
    Time for AST to CFA:          0.527s
    Time for CFA sanity check:    0.091s
    Time for post-processing:     0.337s
      Time for var class.:        0.129s
Time for Analysis:                2.699s
CPU time for analysis:            2.690s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.619s
Total CPU time for CPAchecker:    5.610s
Time for statistics:              0.055s

Time for Garbage Collector:       0.115s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8044MB (  7671 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
