scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--rtc--rtc-ds3232.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_deqqmibs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcd2bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bin2bcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq_nosync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2249 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1989 (88%)
  Because of loop head:            208 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         52 (2%)
  Times precision was empty:       633 (28%)
  Times precision was {false}:     128 (6%)
  Times result was cached:         1424 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      64 (3%)
  Times result was 'false':        84 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         3066
  BDD entailment checks:           492
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       184
Number of predicates discovered:          3
Number of abstraction locations:          51
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1616
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 8.42
Number of irrelevant predicates:          1072 (66%)
Number of preds handled by boolean abs:   64 (4%)
  Total number of models for allsat:      64
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.052s
  Time for path formula creation:        1.982s
Time for strengthen operator:            0.065s
Time for prec operator:                  1.424s
  Time for abstraction:                  1.335s (Max:     0.059s, Count: 2249)
    Boolean abstraction:                 0.189s
    Solving time:                        0.527s (Max:     0.041s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.019s (Max:     0.017s)
Time for merge operator:                 0.177s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     0.548s

Number of path formula cache hits:   40052 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.878s

Total number of created targets for pointer analysis: 2820
   Number of created targets for uf: *unsigned_char is 129


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         124 (count: 2156, min: 0, max: 24, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.210s
Automaton transfers with branching:                0
Automaton transfer successors:                        58827 (count: 58827, min: 1, max: 1, avg: 1.00) [1 x 58827]

CPA algorithm statistics
------------------------
Number of iterations:            12671
Max size of waitlist:            24
Average size of waitlist:        11
Number of computed successors:   14639
Max successors for one state:    2
Number of times merged:          1287
Number of times stopped:         1540
Number of times breaked:         52

Total time for CPA algorithm:         5.218s (Max:     0.878s)
  Time for choose from waitlist:      0.042s
  Time for precision adjustment:      1.634s
  Time for transfer relation:         3.034s
  Time for merge operator:            0.241s
  Time for stop operator:             0.076s
  Time for adding to reached set:     0.047s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   52
Avg. length of target path (in blocks):                 752 (count: 52, min: 4, max: 29, avg: 14.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.869s
  Counterexample analysis:                             0.724s (Max:     0.029s, Calls: 52)
    Refinement sat check:                              0.555s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.036s
  ARG update:                                          0.055s

Length of refined path (in blocks):                     700 (count: 52, min: 3, max: 28, avg: 13.46)
Number of affected states:                              379 (count: 52, min: 2, max: 27, avg: 7.29)
Length (states) of path with itp 'true':                269 (count: 52, min: 0, max: 10, avg: 5.17)
Length (states) of path with itp non-trivial itp:       379 (count: 52, min: 2, max: 27, avg: 7.29)
Length (states) of path with itp 'false':                52 (count: 52, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 52, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             327 (count: 52, min: 1, max: 26, avg: 6.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                52
Number of successful refinements:     52
Number of failed refinements:         0
Max. size of reached set before ref.: 743
Max. size of reached set after ref.:  531
Avg. size of reached set before ref.: 455.71
Avg. size of reached set after ref.:  213.63

Total time for CEGAR algorithm:       6.152s
Time for refinements:                 0.927s
Average time for refinement:          0.017s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1971
  Total lines:            2171
  Line coverage:          0.908
  Visited conditions:     106
  Total conditions:       132
  Condition coverage:     0.803

CPAchecker general statistics
-----------------------------
Number of program locations:     2399
Number of CFA edges:             2475
Number of relevant variables:    612
Number of functions:             33
Number of loops:                 1
Size of reached set:             428
  Number of reached locations:   355 (15%)
    Avg states per location:     1
    Max states per location:     8 (at node N1747)
  Number of reached functions:   22 (67%)
  Number of partitions:          428
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.353s
  Time for loading CPAs:          0.644s
  Time for loading parser:        0.504s
  Time for CFA construction:      2.117s
    Time for parsing file(s):     0.681s
    Time for AST to CFA:          0.687s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.487s
      Time for var class.:        0.238s
Time for Analysis:                6.152s
CPU time for analysis:            6.150s
Time for analyzing result:        0.000s
Total time for CPAchecker:        9.510s
Total CPU time for CPAchecker:    9.500s
Time for statistics:              0.085s

Time for Garbage Collector:       0.250s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     42MB (    40 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     30MB (    29 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   7997MB (  7626 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
