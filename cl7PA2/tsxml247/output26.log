scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--rtc--rtc-ds3232.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_inpg7rez/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcd2bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bin2bcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq_nosync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3221 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2581 (80%)
  Because of loop head:            477 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         163 (5%)
  Times precision was empty:       927 (29%)
  Times precision was {false}:     72 (2%)
  Times result was cached:         2153 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      69 (2%)
  Times result was 'false':        143 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         4105
  BDD entailment checks:           1131
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       184
Number of predicates discovered:          3
Number of abstraction locations:          51
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2294
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 16.27
Number of irrelevant predicates:          1524 (66%)
Number of preds handled by boolean abs:   69 (3%)
  Total number of models for allsat:      69
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.518s
  Time for path formula creation:        1.438s
Time for strengthen operator:            0.091s
Time for prec operator:                  1.428s
  Time for abstraction:                  1.356s (Max:     0.041s, Count: 3221)
    Boolean abstraction:                 0.207s
    Solving time:                        0.431s (Max:     0.034s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.153s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.441s

Number of path formula cache hits:   71581 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.337s

Total number of created targets for pointer analysis: 1460
   Number of created targets for uf: *unsigned_char is 129


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         140 (count: 2839, min: 0, max: 28, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.260s
Automaton transfers with branching:                0
Automaton transfer successors:                        79194 (count: 79194, min: 1, max: 1, avg: 1.00) [1 x 79194]

CPA algorithm statistics
------------------------
Number of iterations:            16431
Max size of waitlist:            19
Average size of waitlist:        9
Number of computed successors:   18943
Max successors for one state:    2
Number of times merged:          1487
Number of times stopped:         1973
Number of times breaked:         163

Total time for CPA algorithm:         4.750s (Max:     0.732s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      1.684s
  Time for transfer relation:         2.592s
  Time for merge operator:            0.196s
  Time for stop operator:             0.055s
  Time for adding to reached set:     0.045s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   163
Avg. length of target path (in blocks):                2665 (count: 163, min: 4, max: 28, avg: 16.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.707s
  Counterexample analysis:                             2.386s (Max:     0.038s, Calls: 163)
    Refinement sat check:                              1.901s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.076s
  ARG update:                                          0.057s

Length of refined path (in blocks):                    2502 (count: 163, min: 3, max: 27, avg: 15.35)
Number of affected states:                              779 (count: 163, min: 2, max: 24, avg: 4.78)
Length (states) of path with itp 'true':               1560 (count: 163, min: 0, max: 24, avg: 9.57)
Length (states) of path with itp non-trivial itp:       779 (count: 163, min: 2, max: 24, avg: 4.78)
Length (states) of path with itp 'false':               163 (count: 163, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 163, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             616 (count: 163, min: 1, max: 23, avg: 3.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                163
Number of successful refinements:     163
Number of failed refinements:         0
Max. size of reached set before ref.: 565
Max. size of reached set after ref.:  536
Avg. size of reached set before ref.: 322.67
Avg. size of reached set after ref.:  222.06

Total time for CEGAR algorithm:       7.606s
Time for refinements:                 2.817s
Average time for refinement:          0.017s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1971
  Total lines:            2171
  Line coverage:          0.908
  Visited conditions:     106
  Total conditions:       132
  Condition coverage:     0.803

CPAchecker general statistics
-----------------------------
Number of program locations:     2399
Number of CFA edges:             2475
Number of relevant variables:    612
Number of functions:             33
Number of loops:                 1
Size of reached set:             428
  Number of reached locations:   355 (15%)
    Avg states per location:     1
    Max states per location:     8 (at node N1747)
  Number of reached functions:   22 (67%)
  Number of partitions:          428
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.047s
  Time for loading CPAs:          0.679s
  Time for loading parser:        0.406s
  Time for CFA construction:      1.859s
    Time for parsing file(s):     0.555s
    Time for AST to CFA:          0.574s
    Time for CFA sanity check:    0.126s
    Time for post-processing:     0.480s
      Time for var class.:        0.295s
Time for Analysis:                7.608s
CPU time for analysis:            7.610s
Time for analyzing result:        0.000s
Total time for CPAchecker:       10.658s
Total CPU time for CPAchecker:   10.660s
Time for statistics:              0.058s

Time for Garbage Collector:       0.203s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     42MB (    40 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8002MB (  7631 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
