scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--rtc--rtc-ds3232.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__68o_s8p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcd2bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bin2bcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq_nosync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2291 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1870 (82%)
  Because of loop head:            351 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70 (3%)
  Times precision was empty:       506 (22%)
  Times precision was {false}:     83 (4%)
  Times result was cached:         1640 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      62 (3%)
  Times result was 'false':        51 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2413
  BDD entailment checks:           809
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       184
Number of predicates discovered:          3
Number of abstraction locations:          51
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1785
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 12.31
Number of irrelevant predicates:          1246 (70%)
Number of preds handled by boolean abs:   62 (3%)
  Total number of models for allsat:      62
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.527s
  Time for path formula creation:        1.479s
Time for strengthen operator:            0.118s
Time for prec operator:                  1.098s
  Time for abstraction:                  1.032s (Max:     0.043s, Count: 2291)
    Boolean abstraction:                 0.143s
    Solving time:                        0.356s (Max:     0.039s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.011s (Max:     0.008s)
Time for merge operator:                 0.074s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.371s

Number of path formula cache hits:   52077 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.365s

Total number of created targets for pointer analysis: 1318
   Number of created targets for uf: *unsigned_char is 129


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         126 (count: 2109, min: 0, max: 27, avg: 0.06)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.214s
Automaton transfers with branching:                0
Automaton transfer successors:                        62396 (count: 62396, min: 1, max: 1, avg: 1.00) [1 x 62396]

CPA algorithm statistics
------------------------
Number of iterations:            10801
Max size of waitlist:            19
Average size of waitlist:        8
Number of computed successors:   12304
Max successors for one state:    2
Number of times merged:          802
Number of times stopped:         1196
Number of times breaked:         70

Total time for CPA algorithm:         4.383s (Max:     0.609s)
  Time for choose from waitlist:      0.022s
  Time for precision adjustment:      1.377s
  Time for transfer relation:         2.560s
  Time for merge operator:            0.137s
  Time for stop operator:             0.080s
  Time for adding to reached set:     0.072s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   70
Avg. length of target path (in blocks):                 867 (count: 70, min: 4, max: 22, avg: 12.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.023s
  Counterexample analysis:                             0.814s (Max:     0.024s, Calls: 70)
    Refinement sat check:                              0.660s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.070s
  ARG update:                                          0.056s

Length of refined path (in blocks):                     797 (count: 70, min: 3, max: 21, avg: 11.39)
Number of affected states:                              329 (count: 70, min: 2, max: 20, avg: 4.70)
Length (states) of path with itp 'true':                398 (count: 70, min: 0, max: 10, avg: 5.69)
Length (states) of path with itp non-trivial itp:       329 (count: 70, min: 2, max: 20, avg: 4.70)
Length (states) of path with itp 'false':                70 (count: 70, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 70, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             259 (count: 70, min: 1, max: 19, avg: 3.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                70
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 559
Max. size of reached set after ref.:  425
Avg. size of reached set before ref.: 343.77
Avg. size of reached set after ref.:  191.91

Total time for CEGAR algorithm:       5.524s
Time for refinements:                 1.134s
Average time for refinement:          0.016s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1971
  Total lines:            2171
  Line coverage:          0.908
  Visited conditions:     106
  Total conditions:       132
  Condition coverage:     0.803

CPAchecker general statistics
-----------------------------
Number of program locations:     2399
Number of CFA edges:             2475
Number of relevant variables:    612
Number of functions:             33
Number of loops:                 1
Size of reached set:             428
  Number of reached locations:   355 (15%)
    Avg states per location:     1
    Max states per location:     8 (at node N1747)
  Number of reached functions:   22 (67%)
  Number of partitions:          428
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.230s
  Time for loading CPAs:          0.737s
  Time for loading parser:        0.427s
  Time for CFA construction:      1.973s
    Time for parsing file(s):     0.530s
    Time for AST to CFA:          0.699s
    Time for CFA sanity check:    0.146s
    Time for post-processing:     0.471s
      Time for var class.:        0.237s
Time for Analysis:                5.524s
CPU time for analysis:            5.520s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.756s
Total CPU time for CPAchecker:    8.740s
Time for statistics:              0.054s

Time for Garbage Collector:       0.187s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     42MB (    40 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7998MB (  7627 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
