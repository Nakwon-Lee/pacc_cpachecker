scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--rtc--rtc-ds3232.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cmub6xag/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq_nosync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcd2bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bin2bcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1336 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1166 (87%)
  Because of loop head:            123 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (4%)
  Times precision was empty:       456 (34%)
  Times precision was {false}:     30 (2%)
  Times result was cached:         790 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      60 (4%)
  Times result was 'false':        96 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1607
  BDD entailment checks:           263
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       184
Number of predicates discovered:          3
Number of abstraction locations:          51
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         880
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.78
Number of irrelevant predicates:          295 (34%)
Number of preds handled by boolean abs:   60 (7%)
  Total number of models for allsat:      60
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.772s
  Time for path formula creation:        0.679s
Time for strengthen operator:            0.032s
Time for prec operator:                  0.625s
  Time for abstraction:                  0.540s (Max:     0.037s, Count: 1336)
    Boolean abstraction:                 0.083s
    Solving time:                        0.114s (Max:     0.034s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.042s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.125s

Number of path formula cache hits:   25773 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.615s

Total number of created targets for pointer analysis: 135
   Number of created targets for uf: *unsigned_char is 8


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         112 (count: 1236, min: 0, max: 40, avg: 0.09)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.154s
Automaton transfers with branching:                0
Automaton transfer successors:                        27137 (count: 27137, min: 1, max: 1, avg: 1.00) [1 x 27137]

CPA algorithm statistics
------------------------
Number of iterations:            7296
Max size of waitlist:            15
Average size of waitlist:        9
Number of computed successors:   8374
Max successors for one state:    2
Number of times merged:          672
Number of times stopped:         859
Number of times breaked:         47

Total time for CPA algorithm:         2.601s (Max:     0.402s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      0.848s
  Time for transfer relation:         1.405s
  Time for merge operator:            0.074s
  Time for stop operator:             0.089s
  Time for adding to reached set:     0.049s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                 508 (count: 47, min: 4, max: 22, avg: 10.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.623s
  Counterexample analysis:                             0.517s (Max:     0.024s, Calls: 47)
    Refinement sat check:                              0.419s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.039s
  ARG update:                                          0.026s

Length of refined path (in blocks):                     461 (count: 47, min: 3, max: 21, avg: 9.81)
Number of affected states:                              204 (count: 47, min: 2, max: 20, avg: 4.34)
Length (states) of path with itp 'true':                210 (count: 47, min: 0, max: 10, avg: 4.47)
Length (states) of path with itp non-trivial itp:       204 (count: 47, min: 2, max: 20, avg: 4.34)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 47, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             157 (count: 47, min: 1, max: 19, avg: 3.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 497
Max. size of reached set after ref.:  426
Avg. size of reached set before ref.: 310.32
Avg. size of reached set after ref.:  161.55

Total time for CEGAR algorithm:       3.298s
Time for refinements:                 0.693s
Average time for refinement:          0.014s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1971
  Total lines:            2171
  Line coverage:          0.908
  Visited conditions:     106
  Total conditions:       132
  Condition coverage:     0.803

CPAchecker general statistics
-----------------------------
Number of program locations:     2399
Number of CFA edges:             2475
Number of relevant variables:    612
Number of functions:             33
Number of loops:                 1
Size of reached set:             428
  Number of reached locations:   355 (15%)
    Avg states per location:     1
    Max states per location:     8 (at node N1747)
  Number of reached functions:   22 (67%)
  Number of partitions:          428
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.114s
  Time for loading CPAs:          0.717s
  Time for loading parser:        0.475s
  Time for CFA construction:      1.824s
    Time for parsing file(s):     0.562s
    Time for AST to CFA:          0.595s
    Time for CFA sanity check:    0.126s
    Time for post-processing:     0.411s
      Time for var class.:        0.209s
Time for Analysis:                3.298s
CPU time for analysis:            3.290s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.415s
Total CPU time for CPAchecker:    6.400s
Time for statistics:              0.070s

Time for Garbage Collector:       0.138s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     37MB (    35 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7988MB (  7618 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
