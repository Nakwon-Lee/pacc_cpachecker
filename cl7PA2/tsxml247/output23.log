scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--rtc--rtc-ds3232.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cd3hvtbj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcd2bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bin2bcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq_nosync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_i2c_block_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2079 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1827 (88%)
  Because of loop head:            183 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         69 (3%)
  Times precision was empty:       639 (31%)
  Times precision was {false}:     128 (6%)
  Times result was cached:         1241 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      71 (3%)
  Times result was 'false':        100 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         3184
  BDD entailment checks:           404
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       184
Number of predicates discovered:          3
Number of abstraction locations:          51
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1440
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.24
Number of irrelevant predicates:          877 (61%)
Number of preds handled by boolean abs:   71 (5%)
  Total number of models for allsat:      71
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.137s
  Time for path formula creation:        2.066s
Time for strengthen operator:            0.058s
Time for prec operator:                  1.586s
  Time for abstraction:                  1.507s (Max:     0.074s, Count: 2079)
    Boolean abstraction:                 0.442s
    Solving time:                        0.794s (Max:     0.063s)
    Model enumeration time:              0.055s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.206s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     0.849s

Number of path formula cache hits:   36417 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.945s

Total number of created targets for pointer analysis: 2820
   Number of created targets for uf: *unsigned_char is 129


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         136 (count: 2116, min: 0, max: 24, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.226s
Automaton transfers with branching:                0
Automaton transfer successors:                        55332 (count: 55332, min: 1, max: 1, avg: 1.00) [1 x 55332]

CPA algorithm statistics
------------------------
Number of iterations:            12637
Max size of waitlist:            27
Average size of waitlist:        11
Number of computed successors:   14645
Max successors for one state:    2
Number of times merged:          1390
Number of times stopped:         1610
Number of times breaked:         69

Total time for CPA algorithm:         5.526s (Max:     0.800s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      1.840s
  Time for transfer relation:         3.104s
  Time for merge operator:            0.269s
  Time for stop operator:             0.095s
  Time for adding to reached set:     0.091s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   69
Avg. length of target path (in blocks):                1054 (count: 69, min: 4, max: 31, avg: 15.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.286s
  Counterexample analysis:                             1.105s (Max:     0.039s, Calls: 69)
    Refinement sat check:                              0.936s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.034s
  ARG update:                                          0.045s

Length of refined path (in blocks):                     985 (count: 69, min: 3, max: 30, avg: 14.28)
Number of affected states:                              368 (count: 69, min: 2, max: 27, avg: 5.33)
Length (states) of path with itp 'true':                548 (count: 69, min: 0, max: 27, avg: 7.94)
Length (states) of path with itp non-trivial itp:       368 (count: 69, min: 2, max: 27, avg: 5.33)
Length (states) of path with itp 'false':                69 (count: 69, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 69, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             299 (count: 69, min: 1, max: 26, avg: 4.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                69
Number of successful refinements:     69
Number of failed refinements:         0
Max. size of reached set before ref.: 740
Max. size of reached set after ref.:  669
Avg. size of reached set before ref.: 490.29
Avg. size of reached set after ref.:  309.01

Total time for CEGAR algorithm:       6.942s
Time for refinements:                 1.397s
Average time for refinement:          0.020s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1971
  Total lines:            2171
  Line coverage:          0.908
  Visited conditions:     106
  Total conditions:       132
  Condition coverage:     0.803

CPAchecker general statistics
-----------------------------
Number of program locations:     2399
Number of CFA edges:             2475
Number of relevant variables:    612
Number of functions:             33
Number of loops:                 1
Size of reached set:             428
  Number of reached locations:   355 (15%)
    Avg states per location:     1
    Max states per location:     8 (at node N1747)
  Number of reached functions:   22 (67%)
  Number of partitions:          428
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.037s
  Time for loading CPAs:          0.672s
  Time for loading parser:        0.427s
  Time for CFA construction:      1.874s
    Time for parsing file(s):     0.549s
    Time for AST to CFA:          0.605s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.458s
      Time for var class.:        0.238s
Time for Analysis:                6.942s
CPU time for analysis:            6.940s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.981s
Total CPU time for CPAchecker:    9.980s
Time for statistics:              0.059s

Time for Garbage Collector:       0.214s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     44MB (    42 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     31MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8001MB (  7630 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
