scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--i2c--busses--i2c-stub.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p_frv5_c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_add_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1210 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  874 (72%)
  Because of loop head:            320 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       377 (31%)
  Times precision was {false}:     110 (9%)
  Times result was cached:         668 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      55 (5%)
  Times result was 'false':        30 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         741
  BDD entailment checks:           395
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       196
Number of predicates discovered:          2
Number of abstraction locations:          30
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         833
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.05
Number of irrelevant predicates:          331 (40%)
Number of preds handled by boolean abs:   55 (7%)
  Total number of models for allsat:      55
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.309s
  Time for path formula creation:        1.274s
Time for strengthen operator:            0.065s
Time for prec operator:                  0.963s
  Time for abstraction:                  0.833s (Max:     0.023s, Count: 1210)
    Boolean abstraction:                 0.100s
    Solving time:                        0.239s (Max:     0.011s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.024s (Max:     0.009s)
Time for merge operator:                 0.035s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.251s

Number of path formula cache hits:   14982 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.168s

Total number of created targets for pointer analysis: 840
   Number of created targets for uf: *unsigned_short_int is 141


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         103 (count: 1657, min: 0, max: 38, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.140s
Automaton transfers with branching:                0
Automaton transfer successors:                        24221 (count: 24221, min: 1, max: 1, avg: 1.00) [1 x 24221]

CPA algorithm statistics
------------------------
Number of iterations:            6736
Max size of waitlist:            27
Average size of waitlist:        12
Number of computed successors:   7504
Max successors for one state:    2
Number of times merged:          173
Number of times stopped:         480
Number of times breaked:         16

Total time for CPA algorithm:         3.300s (Max:     0.635s)
  Time for choose from waitlist:      0.024s
  Time for precision adjustment:      1.089s
  Time for transfer relation:         1.948s
  Time for merge operator:            0.043s
  Time for stop operator:             0.057s
  Time for adding to reached set:     0.052s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 194 (count: 16, min: 5, max: 15, avg: 12.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.219s
  Counterexample analysis:                             0.165s (Max:     0.026s, Calls: 16)
    Refinement sat check:                              0.121s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.002s
  ARG update:                                          0.035s

Length of refined path (in blocks):                     178 (count: 16, min: 4, max: 14, avg: 11.13)
Number of affected states:                              162 (count: 16, min: 3, max: 13, avg: 10.13)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       162 (count: 16, min: 3, max: 13, avg: 10.13)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             146 (count: 16, min: 2, max: 12, avg: 9.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 556
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 416.25
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.550s
Time for refinements:                 0.249s
Average time for refinement:          0.015s
Max time for refinement:              0.031s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1249
  Total lines:            1296
  Line coverage:          0.964
  Visited conditions:     74
  Total conditions:       94
  Condition coverage:     0.787

CPAchecker general statistics
-----------------------------
Number of program locations:     1452
Number of CFA edges:             1507
Number of relevant variables:    257
Number of functions:             18
Number of loops:                 5
Size of reached set:             383
  Number of reached locations:   307 (21%)
    Avg states per location:     1
    Max states per location:     11 (at node N14)
  Number of reached functions:   9 (50%)
  Number of partitions:          383
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.659s
  Time for loading CPAs:          0.536s
  Time for loading parser:        0.402s
  Time for CFA construction:      1.622s
    Time for parsing file(s):     0.561s
    Time for AST to CFA:          0.464s
    Time for CFA sanity check:    0.103s
    Time for post-processing:     0.362s
      Time for var class.:        0.190s
Time for Analysis:                3.550s
CPU time for analysis:            3.560s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.211s
Total CPU time for CPAchecker:    6.200s
Time for statistics:              0.061s

Time for Garbage Collector:       0.113s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     38MB (    36 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7992MB (  7622 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
