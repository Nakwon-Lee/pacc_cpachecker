scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--staging--comedi--drivers--adl_pci7432.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_eh92atvv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1858: Destroying the void* pointer alloc_private::__cil_tmp4 produces garbage or the memory pointed by it is unused: tmp = alloc_private(dev, __cil_tmp24); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            573 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  454 (79%)
  Because of loop head:            109 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (2%)
  Times precision was empty:       162 (28%)
  Times precision was {false}:     35 (6%)
  Times result was cached:         337 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39 (7%)
  Times result was 'false':        19 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         436
  BDD entailment checks:           202
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       116
Number of predicates discovered:          2
Number of abstraction locations:          32
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         411
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.55
Number of irrelevant predicates:          163 (40%)
Number of preds handled by boolean abs:   39 (9%)
  Total number of models for allsat:      39
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.660s
  Time for path formula creation:        0.640s
Time for strengthen operator:            0.018s
Time for prec operator:                  0.437s
  Time for abstraction:                  0.378s (Max:     0.016s, Count: 573)
    Boolean abstraction:                 0.059s
    Solving time:                        0.077s (Max:     0.013s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.038s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.083s

Number of path formula cache hits:   5408 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.616s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          41 (count: 778, min: 0, max: 41, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.066s
Automaton transfers with branching:                0
Automaton transfer successors:                         8642 (count: 8642, min: 1, max: 1, avg: 1.00) [1 x 8642]

CPA algorithm statistics
------------------------
Number of iterations:            2326
Max size of waitlist:            10
Average size of waitlist:        4
Number of computed successors:   2619
Max successors for one state:    2
Number of times merged:          117
Number of times stopped:         246
Number of times breaked:         10

Total time for CPA algorithm:         1.841s (Max:     0.368s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:      0.571s
  Time for transfer relation:         1.097s
  Time for merge operator:            0.046s
  Time for stop operator:             0.027s
  Time for adding to reached set:     0.017s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 180 (count: 10, min: 5, max: 27, avg: 18.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.175s
  Counterexample analysis:                             0.092s (Max:     0.030s, Calls: 10)
    Refinement sat check:                              0.059s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.019s
  ARG update:                                          0.043s

Length of refined path (in blocks):                     170 (count: 10, min: 4, max: 26, avg: 17.00)
Number of affected states:                              160 (count: 10, min: 3, max: 25, avg: 16.00)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       160 (count: 10, min: 3, max: 25, avg: 16.00)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             150 (count: 10, min: 2, max: 24, avg: 15.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 344
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 218.10
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.062s
Time for refinements:                 0.217s
Average time for refinement:          0.021s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.484
  Visited lines:          815
  Total lines:            1004
  Line coverage:          0.812
  Visited conditions:     52
  Total conditions:       78
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     1180
Number of CFA edges:             1213
Number of relevant variables:    243
Number of functions:             31
Number of loops:                 3
Size of reached set:             204
  Number of reached locations:   184 (16%)
    Avg states per location:     1
    Max states per location:     4 (at node N220)
  Number of reached functions:   15 (48%)
  Number of partitions:          204
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.648s
  Time for loading CPAs:          0.643s
  Time for loading parser:        0.415s
  Time for CFA construction:      1.518s
    Time for parsing file(s):     0.451s
    Time for AST to CFA:          0.507s
    Time for CFA sanity check:    0.115s
    Time for post-processing:     0.344s
      Time for var class.:        0.180s
Time for Analysis:                2.062s
CPU time for analysis:            2.060s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.712s
Total CPU time for CPAchecker:    4.710s
Time for statistics:              0.048s

Time for Garbage Collector:       0.099s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     34MB (    32 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7984MB (  7614 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
