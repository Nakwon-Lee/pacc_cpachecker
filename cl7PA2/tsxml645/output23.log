scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--uartlite.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x4ap92en/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32be to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32be to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_write_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_update_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_add_one_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5582 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4409 (79%)
  Because of loop head:            1141 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (1%)
  Times precision was empty:       1292 (23%)
  Times precision was {false}:     156 (3%)
  Times result was cached:         4041 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      93 (2%)
  Times result was 'false':        42 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         5022
  BDD entailment checks:           2220
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       135
Number of predicates discovered:          2
Number of abstraction locations:          83
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4290
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 17.23
Number of irrelevant predicates:          2047 (48%)
Number of preds handled by boolean abs:   93 (2%)
  Total number of models for allsat:      93
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.119s
  Time for path formula creation:        1.997s
Time for strengthen operator:            0.115s
Time for prec operator:                  1.620s
  Time for abstraction:                  1.458s (Max:     0.019s, Count: 5582)
    Boolean abstraction:                 0.222s
    Solving time:                        0.283s (Max:     0.017s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.012s (Max:     0.006s)
Time for merge operator:                 0.122s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.306s

Number of path formula cache hits:   41992 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.799s

Total number of created targets for pointer analysis: 9
   Number of created targets for uf: *unsigned_char is 3
   Number of created targets for uf: *char is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         179 (count: 4855, min: 0, max: 26, avg: 0.04)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.360s
Automaton transfers with branching:                0
Automaton transfer successors:                        65782 (count: 65782, min: 1, max: 1, avg: 1.00) [1 x 65782]

CPA algorithm statistics
------------------------
Number of iterations:            25018
Max size of waitlist:            46
Average size of waitlist:        18
Number of computed successors:   28101
Max successors for one state:    2
Number of times merged:          1401
Number of times stopped:         2682
Number of times breaked:         32

Total time for CPA algorithm:         6.386s (Max:     0.421s)
  Time for choose from waitlist:      0.071s
  Time for precision adjustment:      1.982s
  Time for transfer relation:         3.543s
  Time for merge operator:            0.179s
  Time for stop operator:             0.166s
  Time for adding to reached set:     0.096s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                 471 (count: 32, min: 7, max: 20, avg: 14.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.465s
  Counterexample analysis:                             0.295s (Max:     0.029s, Calls: 32)
    Refinement sat check:                              0.200s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.011s
  ARG update:                                          0.095s

Length of refined path (in blocks):                     439 (count: 32, min: 6, max: 19, avg: 13.72)
Number of affected states:                              407 (count: 32, min: 5, max: 18, avg: 12.72)
Length (states) of path with itp 'true':                  0 (count: 32, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       407 (count: 32, min: 5, max: 18, avg: 12.72)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 32, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             375 (count: 32, min: 4, max: 17, avg: 11.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 1160
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 772.63
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.943s
Time for refinements:                 0.556s
Average time for refinement:          0.017s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.766
  Visited lines:          1803
  Total lines:            1878
  Line coverage:          0.960
  Visited conditions:     150
  Total conditions:       172
  Condition coverage:     0.872

CPAchecker general statistics
-----------------------------
Number of program locations:     2165
Number of CFA edges:             2258
Number of relevant variables:    412
Number of functions:             47
Number of loops:                 4
Size of reached set:             750
  Number of reached locations:   516 (24%)
    Avg states per location:     1
    Max states per location:     21 (at node N1442)
  Number of reached functions:   36 (77%)
  Number of partitions:          750
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.800s
  Time for loading CPAs:          0.539s
  Time for loading parser:        0.422s
  Time for CFA construction:      1.780s
    Time for parsing file(s):     0.530s
    Time for AST to CFA:          0.600s
    Time for CFA sanity check:    0.101s
    Time for post-processing:     0.411s
      Time for var class.:        0.211s
Time for Analysis:                6.943s
CPU time for analysis:            6.940s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.745s
Total CPU time for CPAchecker:    9.730s
Time for statistics:              0.084s

Time for Garbage Collector:       0.233s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     44MB (    42 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8001MB (  7630 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
