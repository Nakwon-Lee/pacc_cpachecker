scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--uartlite.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nsqw68th/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_update_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32be to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32be to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_add_one_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_write_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7896 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7070 (90%)
  Because of loop head:            794 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       3006 (38%)
  Times precision was {false}:     224 (3%)
  Times result was cached:         4573 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      93 (1%)
  Times result was 'false':        63 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         9777
  BDD entailment checks:           2415
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       135
Number of predicates discovered:          2
Number of abstraction locations:          83
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4890
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 15.43
Number of irrelevant predicates:          2392 (49%)
Number of preds handled by boolean abs:   93 (2%)
  Total number of models for allsat:      93
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.291s
  Time for path formula creation:        3.168s
Time for strengthen operator:            0.165s
Time for prec operator:                  2.592s
  Time for abstraction:                  2.430s (Max:     0.027s, Count: 7896)
    Boolean abstraction:                 0.193s
    Solving time:                        0.702s (Max:     0.017s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 0.258s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.717s

Number of path formula cache hits:   103497 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.924s

Total number of created targets for pointer analysis: 147
   Number of created targets for uf: *unsigned_char is 57
   Number of created targets for uf: *char is 82


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         189 (count: 7104, min: 0, max: 20, avg: 0.03)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.291s
Automaton transfers with branching:                0
Automaton transfer successors:                       145064 (count: 145064, min: 1, max: 1, avg: 1.00) [1 x 145064]

CPA algorithm statistics
------------------------
Number of iterations:            42168
Max size of waitlist:            48
Average size of waitlist:        28
Number of computed successors:   48416
Max successors for one state:    2
Number of times merged:          3681
Number of times stopped:         5602
Number of times breaked:         32

Total time for CPA algorithm:         9.661s (Max:     0.678s)
  Time for choose from waitlist:      0.097s
  Time for precision adjustment:      3.081s
  Time for transfer relation:         5.289s
  Time for merge operator:            0.402s
  Time for stop operator:             0.174s
  Time for adding to reached set:     0.149s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                 472 (count: 32, min: 7, max: 20, avg: 14.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.464s
  Counterexample analysis:                             0.289s (Max:     0.018s, Calls: 32)
    Refinement sat check:                              0.202s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.022s
  ARG update:                                          0.096s

Length of refined path (in blocks):                     440 (count: 32, min: 6, max: 19, avg: 13.75)
Number of affected states:                              408 (count: 32, min: 5, max: 18, avg: 12.75)
Length (states) of path with itp 'true':                  0 (count: 32, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       408 (count: 32, min: 5, max: 18, avg: 12.75)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 32, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             376 (count: 32, min: 4, max: 17, avg: 11.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 1523
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1315.56
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      10.228s
Time for refinements:                 0.559s
Average time for refinement:          0.017s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.766
  Visited lines:          1803
  Total lines:            1878
  Line coverage:          0.960
  Visited conditions:     150
  Total conditions:       172
  Condition coverage:     0.872

CPAchecker general statistics
-----------------------------
Number of program locations:     2165
Number of CFA edges:             2258
Number of relevant variables:    412
Number of functions:             47
Number of loops:                 4
Size of reached set:             750
  Number of reached locations:   516 (24%)
    Avg states per location:     1
    Max states per location:     21 (at node N1442)
  Number of reached functions:   36 (77%)
  Number of partitions:          750
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.177s
  Time for loading CPAs:          0.600s
  Time for loading parser:        0.507s
  Time for CFA construction:      1.994s
    Time for parsing file(s):     0.608s
    Time for AST to CFA:          0.661s
    Time for CFA sanity check:    0.126s
    Time for post-processing:     0.454s
      Time for var class.:        0.211s
Time for Analysis:               10.228s
CPU time for analysis:           10.230s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.407s
Total CPU time for CPAchecker:   13.400s
Time for statistics:              0.059s

Time for Garbage Collector:       0.362s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    76 MiB) max;     48MB (    46 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8003MB (  7632 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
