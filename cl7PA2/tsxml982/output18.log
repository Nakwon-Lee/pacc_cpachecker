scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--regulator--wm831x-dcdc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o9x3kyen/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2608: Dead code detected: return (4294967274U); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_notifier_call_chain to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21543 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17366 (81%)
  Because of loop head:            4118 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         59 (0%)
  Times precision was empty:       9228 (43%)
  Times precision was {false}:     621 (3%)
  Times result was cached:         11548 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      146 (1%)
  Times result was 'false':        172 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         41910
  BDD entailment checks:           9430
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       320
Number of predicates discovered:          2
Number of abstraction locations:          106
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         12315
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 16.06
Number of irrelevant predicates:          6270 (51%)
Number of preds handled by boolean abs:   146 (1%)
  Total number of models for allsat:      147
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  6.228s
  Time for path formula creation:        6.010s
Time for strengthen operator:            0.442s
Time for prec operator:                  5.584s
  Time for abstraction:                  5.173s (Max:     0.032s, Count: 21543)
    Boolean abstraction:                 0.290s
    Solving time:                        1.738s (Max:     0.027s)
    Model enumeration time:              0.040s
    Time for BDD construction:           0.031s (Max:     0.009s)
Time for merge operator:                 0.715s
Time for coverage check:                 0.064s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     1.778s

Number of path formula cache hits:   383230 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.187s

Total number of created targets for pointer analysis: 11
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         294 (count: 22659, min: 0, max: 15, avg: 0.01)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.851s
  Time for transition matches:                         0.417s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       503477 (count: 503477, min: 1, max: 1, avg: 1.00) [1 x 503477]

CPA algorithm statistics
------------------------
Number of iterations:            131388
Max size of waitlist:            94
Average size of waitlist:        51
Number of computed successors:   155537
Max successors for one state:    2
Number of times merged:          16240
Number of times stopped:         22113
Number of times breaked:         59

Total time for CPA algorithm:        20.263s (Max:     1.157s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:      6.773s
  Time for transfer relation:        10.696s
  Time for merge operator:            1.457s
  Time for stop operator:             0.290s
  Time for adding to reached set:     0.214s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   59
Avg. length of target path (in blocks):                 758 (count: 59, min: 8, max: 19, avg: 12.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.287s
  Counterexample analysis:                             0.745s (Max:     0.037s, Calls: 59)
    Refinement sat check:                              0.558s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.056s
  ARG update:                                          0.388s

Length of refined path (in blocks):                     699 (count: 59, min: 7, max: 18, avg: 11.85)
Number of affected states:                              640 (count: 59, min: 6, max: 17, avg: 10.85)
Length (states) of path with itp 'true':                  0 (count: 59, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       640 (count: 59, min: 6, max: 17, avg: 10.85)
Length (states) of path with itp 'false':                59 (count: 59, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 59, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             581 (count: 59, min: 5, max: 16, avg: 9.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                59
Number of successful refinements:     59
Number of failed refinements:         0
Max. size of reached set before ref.: 2381
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2239.97
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      21.797s
Time for refinements:                 1.524s
Average time for refinement:          0.025s
Max time for refinement:              0.064s

Code Coverage
-----------------------------
  Function coverage:      0.760
  Visited lines:          3357
  Total lines:            3508
  Line coverage:          0.957
  Visited conditions:     312
  Total conditions:       322
  Condition coverage:     0.969

CPAchecker general statistics
-----------------------------
Number of program locations:     3828
Number of CFA edges:             4019
Number of relevant variables:    884
Number of functions:             50
Number of loops:                 3
Size of reached set:             1272
  Number of reached locations:   824 (22%)
    Avg states per location:     1
    Max states per location:     39 (at node N3529)
  Number of reached functions:   38 (76%)
  Number of partitions:          1272
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.152s
  Time for loading CPAs:          0.619s
  Time for loading parser:        0.427s
  Time for CFA construction:      2.019s
    Time for parsing file(s):     0.562s
    Time for AST to CFA:          0.619s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.503s
      Time for var class.:        0.281s
Time for Analysis:               21.799s
CPU time for analysis:           21.800s
Time for analyzing result:        0.002s
Total time for CPAchecker:       24.953s
Total CPU time for CPAchecker:   24.950s
Time for statistics:              0.109s

Time for Garbage Collector:       1.489s (in 95 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                138MB (   132 MiB) max;     67MB (    63 MiB) avg;    150MB (   143 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           205MB (   195 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8010MB (  7639 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
