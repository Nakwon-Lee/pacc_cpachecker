scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--leds--leds-bd2802.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nrtma7g9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2162: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2168: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_rwsem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1128 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  858 (76%)
  Because of loop head:            257 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       403 (36%)
  Times precision was {false}:     40 (4%)
  Times result was cached:         610 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      75 (7%)
  Times result was 'false':        23 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         783
  BDD entailment checks:           327
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       177
Number of predicates discovered:          2
Number of abstraction locations:          54
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         725
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.30
Number of irrelevant predicates:          201 (28%)
Number of preds handled by boolean abs:   75 (10%)
  Total number of models for allsat:      75
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.850s
  Time for path formula creation:        0.828s
Time for strengthen operator:            0.036s
Time for prec operator:                  0.604s
  Time for abstraction:                  0.537s (Max:     0.046s, Count: 1128)
    Boolean abstraction:                 0.134s
    Solving time:                        0.088s (Max:     0.041s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.044s (Max:     0.011s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.095s

Number of path formula cache hits:   14219 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.790s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         123 (count: 1385, min: 0, max: 43, avg: 0.09)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.117s
Automaton transfers with branching:                0
Automaton transfer successors:                        17434 (count: 17434, min: 1, max: 1, avg: 1.00) [1 x 17434]

CPA algorithm statistics
------------------------
Number of iterations:            4949
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   5533
Max successors for one state:    2
Number of times merged:          228
Number of times stopped:         478
Number of times breaked:         13

Total time for CPA algorithm:         2.479s (Max:     0.474s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.802s
  Time for transfer relation:         1.423s
  Time for merge operator:            0.074s
  Time for stop operator:             0.058s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 195 (count: 13, min: 4, max: 33, avg: 15.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.217s
  Counterexample analysis:                             0.147s (Max:     0.030s, Calls: 13)
    Refinement sat check:                              0.119s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.009s
  ARG update:                                          0.032s

Length of refined path (in blocks):                     182 (count: 13, min: 3, max: 32, avg: 14.00)
Number of affected states:                              169 (count: 13, min: 2, max: 31, avg: 13.00)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       169 (count: 13, min: 2, max: 31, avg: 13.00)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             156 (count: 13, min: 1, max: 30, avg: 12.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 520
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 358.54
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.744s
Time for refinements:                 0.264s
Average time for refinement:          0.020s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.247
  Visited lines:          1643
  Total lines:            4568
  Line coverage:          0.360
  Visited conditions:     76
  Total conditions:       294
  Condition coverage:     0.259

CPAchecker general statistics
-----------------------------
Number of program locations:     5097
Number of CFA edges:             5318
Number of relevant variables:    1497
Number of functions:             85
Number of loops:                 10
Size of reached set:             411
  Number of reached locations:   318 (6%)
    Avg states per location:     1
    Max states per location:     4 (at node N195)
  Number of reached functions:   21 (25%)
  Number of partitions:          411
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.819s
  Time for loading CPAs:          0.687s
  Time for loading parser:        0.488s
  Time for CFA construction:      2.512s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.790s
    Time for CFA sanity check:    0.300s
    Time for post-processing:     0.618s
      Time for var class.:        0.317s
Time for Analysis:                2.745s
CPU time for analysis:            2.740s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.566s
Total CPU time for CPAchecker:    6.560s
Time for statistics:              0.063s

Time for Garbage Collector:       0.173s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    64 MiB) max;     38MB (    36 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8046MB (  7673 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
