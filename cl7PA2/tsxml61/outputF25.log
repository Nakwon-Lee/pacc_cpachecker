scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--leds--leds-bd2802.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ott1jghg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2162: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2168: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_rwsem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            826 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  632 (77%)
  Because of loop head:            181 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (2%)
  Times precision was empty:       160 (19%)
  Times precision was {false}:     29 (4%)
  Times result was cached:         562 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      75 (9%)
  Times result was 'false':        17 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         595
  BDD entailment checks:           227
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       177
Number of predicates discovered:          2
Number of abstraction locations:          54
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         666
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.40
Number of irrelevant predicates:          108 (16%)
Number of preds handled by boolean abs:   75 (11%)
  Total number of models for allsat:      75
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.581s
  Time for path formula creation:        0.565s
Time for strengthen operator:            0.053s
Time for prec operator:                  0.596s
  Time for abstraction:                  0.540s (Max:     0.044s, Count: 826)
    Boolean abstraction:                 0.143s
    Solving time:                        0.099s (Max:     0.027s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.016s (Max:     0.009s)
Time for merge operator:                 0.041s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.105s

Number of path formula cache hits:   8327 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.503s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         131 (count: 987, min: 0, max: 76, avg: 0.13)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.091s
Automaton transfers with branching:                0
Automaton transfer successors:                        10268 (count: 10268, min: 1, max: 1, avg: 1.00) [1 x 10268]

CPA algorithm statistics
------------------------
Number of iterations:            3588
Max size of waitlist:            9
Average size of waitlist:        3
Number of computed successors:   4024
Max successors for one state:    2
Number of times merged:          184
Number of times stopped:         368
Number of times breaked:         13

Total time for CPA algorithm:         2.002s (Max:     0.318s)
  Time for choose from waitlist:      0.029s
  Time for precision adjustment:      0.741s
  Time for transfer relation:         1.029s
  Time for merge operator:            0.092s
  Time for stop operator:             0.015s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 195 (count: 13, min: 4, max: 33, avg: 15.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.243s
  Counterexample analysis:                             0.186s (Max:     0.034s, Calls: 13)
    Refinement sat check:                              0.115s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.013s
  ARG update:                                          0.028s

Length of refined path (in blocks):                     182 (count: 13, min: 3, max: 32, avg: 14.00)
Number of affected states:                              169 (count: 13, min: 2, max: 31, avg: 13.00)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       169 (count: 13, min: 2, max: 31, avg: 13.00)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             156 (count: 13, min: 1, max: 30, avg: 12.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 432
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 251.38
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.271s
Time for refinements:                 0.268s
Average time for refinement:          0.020s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.247
  Visited lines:          1643
  Total lines:            4568
  Line coverage:          0.360
  Visited conditions:     76
  Total conditions:       294
  Condition coverage:     0.259

CPAchecker general statistics
-----------------------------
Number of program locations:     5097
Number of CFA edges:             5318
Number of relevant variables:    1497
Number of functions:             85
Number of loops:                 10
Size of reached set:             411
  Number of reached locations:   318 (6%)
    Avg states per location:     1
    Max states per location:     4 (at node N195)
  Number of reached functions:   21 (25%)
  Number of partitions:          411
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.791s
  Time for loading CPAs:          0.743s
  Time for loading parser:        0.449s
  Time for CFA construction:      2.495s
    Time for parsing file(s):     0.693s
    Time for AST to CFA:          0.771s
    Time for CFA sanity check:    0.282s
    Time for post-processing:     0.631s
      Time for var class.:        0.342s
Time for Analysis:                2.271s
CPU time for analysis:            2.260s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.065s
Total CPU time for CPAchecker:    6.050s
Time for statistics:              0.065s

Time for Garbage Collector:       0.199s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     37MB (    35 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     27MB (    26 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8044MB (  7671 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
