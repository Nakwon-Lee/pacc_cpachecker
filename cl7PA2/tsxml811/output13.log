scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--touchscreen--egalax_ts_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3kwb3n10/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_report_slot_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_report_pointer_emulation to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1083 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  967 (89%)
  Because of loop head:            106 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (1%)
  Times precision was empty:       396 (37%)
  Times precision was {false}:     79 (7%)
  Times result was cached:         568 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      40 (4%)
  Times result was 'false':        15 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         804
  BDD entailment checks:           298
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          2
Number of abstraction locations:          38
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         687
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.77
Number of irrelevant predicates:          362 (53%)
Number of preds handled by boolean abs:   40 (6%)
  Total number of models for allsat:      43
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  1.253s
  Time for path formula creation:        1.226s
Time for strengthen operator:            0.034s
Time for prec operator:                  0.789s
  Time for abstraction:                  0.692s (Max:     0.023s, Count: 1083)
    Boolean abstraction:                 0.068s
    Solving time:                        0.226s (Max:     0.019s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.098s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.230s

Number of path formula cache hits:   7176 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.172s

Total number of created targets for pointer analysis: 2210
   Number of created targets for uf: *unsigned_char is 181


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          75 (count: 1335, min: 0, max: 36, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.135s
Automaton transfers with branching:                0
Automaton transfer successors:                        14241 (count: 14241, min: 1, max: 1, avg: 1.00) [1 x 14241]

CPA algorithm statistics
------------------------
Number of iterations:            4404
Max size of waitlist:            9
Average size of waitlist:        3
Number of computed successors:   4882
Max successors for one state:    2
Number of times merged:          253
Number of times stopped:         449
Number of times breaked:         10

Total time for CPA algorithm:         3.064s (Max:     0.707s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      0.938s
  Time for transfer relation:         1.785s
  Time for merge operator:            0.134s
  Time for stop operator:             0.062s
  Time for adding to reached set:     0.076s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 202 (count: 10, min: 6, max: 35, avg: 20.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.221s
  Counterexample analysis:                             0.143s (Max:     0.025s, Calls: 10)
    Refinement sat check:                              0.090s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.003s
  ARG update:                                          0.035s

Length of refined path (in blocks):                     192 (count: 10, min: 5, max: 34, avg: 19.20)
Number of affected states:                              182 (count: 10, min: 4, max: 33, avg: 18.20)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       182 (count: 10, min: 4, max: 33, avg: 18.20)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             172 (count: 10, min: 3, max: 32, avg: 17.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 530
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 421.30
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.309s
Time for refinements:                 0.245s
Average time for refinement:          0.024s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.696
  Visited lines:          1108
  Total lines:            1132
  Line coverage:          0.979
  Visited conditions:     50
  Total conditions:       58
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     1265
Number of CFA edges:             1295
Number of relevant variables:    136
Number of functions:             23
Number of loops:                 2
Size of reached set:             236
  Number of reached locations:   187 (15%)
    Avg states per location:     1
    Max states per location:     5 (at node N424)
  Number of reached functions:   16 (70%)
  Number of partitions:          236
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.190s
  Time for loading CPAs:          0.709s
  Time for loading parser:        0.585s
  Time for CFA construction:      1.771s
    Time for parsing file(s):     0.585s
    Time for AST to CFA:          0.561s
    Time for CFA sanity check:    0.104s
    Time for post-processing:     0.321s
      Time for var class.:        0.127s
Time for Analysis:                3.309s
CPU time for analysis:            3.300s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.503s
Total CPU time for CPAchecker:    6.490s
Time for statistics:              0.077s

Time for Garbage Collector:       0.133s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7984MB (  7614 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
