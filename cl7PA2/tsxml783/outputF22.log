scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hid--hid-topseed.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5t46fkg1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            149 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  146 (98%)
  Because of loop head:            3 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       149 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         184
  BDD entailment checks:           22
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       72
Number of predicates discovered:          0

Time for post operator:                  0.705s
  Time for path formula creation:        0.688s
Time for strengthen operator:            0.041s
Time for prec operator:                  0.036s
  Time for abstraction:                  0.005s (Max:     0.001s, Count: 149)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.056s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   40 (1%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.612s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 172, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.028s
Automaton transfers with branching:                0
Automaton transfer successors:                         2673 (count: 2673, min: 1, max: 1, avg: 1.00) [1 x 2673]

CPA algorithm statistics
------------------------
Number of iterations:            825
Max size of waitlist:            24
Average size of waitlist:        19
Number of computed successors:   927
Max successors for one state:    2
Number of times merged:          81
Number of times stopped:         103
Number of times breaked:         0

Total time for CPA algorithm:         1.185s (Max:     1.185s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      0.119s
  Time for transfer relation:         0.915s
  Time for merge operator:            0.072s
  Time for stop operator:             0.008s
  Time for adding to reached set:     0.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.467
  Visited lines:          663
  Total lines:            690
  Line coverage:          0.961
  Visited conditions:     56
  Total conditions:       68
  Condition coverage:     0.824

CPAchecker general statistics
-----------------------------
Number of program locations:     759
Number of CFA edges:             807
Number of relevant variables:    101
Number of functions:             15
Number of loops:                 1
Size of reached set:             825
  Number of reached locations:   174 (23%)
    Avg states per location:     4
    Max states per location:     21 (at node N112)
  Number of reached functions:   7 (47%)
  Number of partitions:          825
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.218s
  Time for loading CPAs:          0.497s
  Time for loading parser:        0.383s
  Time for CFA construction:      1.210s
    Time for parsing file(s):     0.428s
    Time for AST to CFA:          0.340s
    Time for CFA sanity check:    0.044s
    Time for post-processing:     0.261s
      Time for var class.:        0.108s
Time for Analysis:                1.186s
CPU time for analysis:            1.180s
Time for analyzing result:        0.001s
Total time for CPAchecker:        3.407s
Total CPU time for CPAchecker:    3.390s
Time for statistics:              0.051s

Time for Garbage Collector:       0.089s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     30MB (    29 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7973MB (  7604 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
