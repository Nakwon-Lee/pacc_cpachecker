scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--common--tuners--mc44s803.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vqldguzd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4237: Function pointer *__cil_tmp26 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4326: Function pointer *__cil_tmp62 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4308: Function pointer *__cil_tmp55 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3595: Function pointer *__cil_tmp14 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3814: Function pointer *__cil_tmp121 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3796: Function pointer *__cil_tmp114 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3971: Function pointer *__cil_tmp45 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4087: Function pointer *__cil_tmp96 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4069: Function pointer *__cil_tmp89 with type int (*)(struct dvb_frontend *fe, int enable) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3595: Ignoring call via function pointer mc44s803_init::__cil_tmp14 for which no suitable target was found in line: (*__cil_tmp14)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3595: Ignoring function call through function pointer *__cil_tmp14: (*__cil_tmp14)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3814: Ignoring call via function pointer mc44s803_init::__cil_tmp121 for which no suitable target was found in line: (*__cil_tmp121)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3814: Ignoring function call through function pointer *__cil_tmp121: (*__cil_tmp121)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3796: Ignoring call via function pointer mc44s803_init::__cil_tmp114 for which no suitable target was found in line: (*__cil_tmp114)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3796: Ignoring function call through function pointer *__cil_tmp114: (*__cil_tmp114)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3971: Ignoring call via function pointer mc44s803_set_params::__cil_tmp45 for which no suitable target was found in line: (*__cil_tmp45)(fe, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3971: Ignoring function call through function pointer *__cil_tmp45: (*__cil_tmp45)(fe, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4087: Ignoring call via function pointer mc44s803_set_params::__cil_tmp96 for which no suitable target was found in line: (*__cil_tmp96)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4087: Ignoring function call through function pointer *__cil_tmp96: (*__cil_tmp96)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4069: Ignoring call via function pointer mc44s803_set_params::__cil_tmp89 for which no suitable target was found in line: (*__cil_tmp89)(fe, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4069: Ignoring function call through function pointer *__cil_tmp89: (*__cil_tmp89)(fe, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1732 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1547 (89%)
  Because of loop head:            167 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       444 (26%)
  Times precision was {false}:     386 (22%)
  Times result was cached:         846 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      56 (3%)
  Times result was 'false':        1 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2916
  BDD entailment checks:           784
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       138
Number of predicates discovered:          2
Number of abstraction locations:          27
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1288
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.91
Number of irrelevant predicates:          718 (56%)
Number of preds handled by boolean abs:   56 (4%)
  Total number of models for allsat:      56
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.477s
  Time for path formula creation:        3.417s
Time for strengthen operator:            0.094s
Time for prec operator:                  1.979s
  Time for abstraction:                  1.890s (Max:     0.024s, Count: 1732)
    Boolean abstraction:                 0.178s
    Solving time:                        0.775s (Max:     0.016s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.015s (Max:     0.008s)
Time for merge operator:                 0.146s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.794s

Number of path formula cache hits:   23497 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.271s

Total number of created targets for pointer analysis: 17280
   Number of created targets for uf: *unsigned_char is 5761


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         111 (count: 3499, min: 0, max: 18, avg: 0.03)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.183s
Automaton transfers with branching:                0
Automaton transfer successors:                        52391 (count: 52391, min: 1, max: 1, avg: 1.00) [1 x 52391]

CPA algorithm statistics
------------------------
Number of iterations:            11212
Max size of waitlist:            11
Average size of waitlist:        6
Number of computed successors:   12831
Max successors for one state:    2
Number of times merged:          1066
Number of times stopped:         1561
Number of times breaked:         18

Total time for CPA algorithm:         7.540s (Max:     1.046s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      2.236s
  Time for transfer relation:         4.595s
  Time for merge operator:            0.262s
  Time for stop operator:             0.098s
  Time for adding to reached set:     0.119s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 263 (count: 18, min: 4, max: 27, avg: 14.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.480s
  Counterexample analysis:                             0.348s (Max:     0.042s, Calls: 18)
    Refinement sat check:                              0.281s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.019s
  ARG update:                                          0.053s

Length of refined path (in blocks):                     245 (count: 18, min: 3, max: 26, avg: 13.61)
Number of affected states:                              227 (count: 18, min: 2, max: 25, avg: 12.61)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       227 (count: 18, min: 2, max: 25, avg: 12.61)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             209 (count: 18, min: 1, max: 24, avg: 11.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 777
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 607.28
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.061s
Time for refinements:                 0.521s
Average time for refinement:          0.028s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.368
  Visited lines:          1198
  Total lines:            1496
  Line coverage:          0.801
  Visited conditions:     60
  Total conditions:       98
  Condition coverage:     0.612

CPAchecker general statistics
-----------------------------
Number of program locations:     1628
Number of CFA edges:             1689
Number of relevant variables:    339
Number of functions:             19
Number of loops:                 1
Size of reached set:             393
  Number of reached locations:   169 (10%)
    Avg states per location:     2
    Max states per location:     15 (at node N14)
  Number of reached functions:   7 (37%)
  Number of partitions:          393
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.663s
  Time for loading CPAs:          0.553s
  Time for loading parser:        0.431s
  Time for CFA construction:      1.616s
    Time for parsing file(s):     0.540s
    Time for AST to CFA:          0.519s
    Time for CFA sanity check:    0.092s
    Time for post-processing:     0.342s
      Time for var class.:        0.176s
Time for Analysis:                8.062s
CPU time for analysis:            8.060s
Time for analyzing result:        0.000s
Total time for CPAchecker:       10.727s
Total CPU time for CPAchecker:   10.710s
Time for statistics:              0.059s

Time for Garbage Collector:       0.280s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     45MB (    43 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
