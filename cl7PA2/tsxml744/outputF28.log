scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--rtc--rtc-pcf2123.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hnzjj1fn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_write_then_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bcd2bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_valid_tm to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function spi_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bin2bcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3021 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2794 (92%)
  Because of loop head:            211 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       670 (22%)
  Times precision was {false}:     318 (11%)
  Times result was cached:         1962 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      71 (2%)
  Times result was 'false':        10 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1452
  BDD entailment checks:           652
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       132
Number of predicates discovered:          2
Number of abstraction locations:          45
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2351
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.04
Number of irrelevant predicates:          1287 (55%)
Number of preds handled by boolean abs:   71 (3%)
  Total number of models for allsat:      72
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.524s
  Time for path formula creation:        2.485s
Time for strengthen operator:            0.089s
Time for prec operator:                  2.283s
  Time for abstraction:                  2.180s (Max:     0.042s, Count: 3021)
    Boolean abstraction:                 0.138s
    Solving time:                        1.081s (Max:     0.039s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.008s (Max:     0.004s)
Time for merge operator:                 0.096s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     1.091s

Number of path formula cache hits:   22904 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.416s

Total number of created targets for pointer analysis: 6633
   Number of created targets for uf: *unsigned_char is 137


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         133 (count: 3343, min: 0, max: 28, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.168s
Automaton transfers with branching:                0
Automaton transfer successors:                        47304 (count: 47304, min: 1, max: 1, avg: 1.00) [1 x 47304]

CPA algorithm statistics
------------------------
Number of iterations:            10272
Max size of waitlist:            9
Average size of waitlist:        3
Number of computed successors:   11131
Max successors for one state:    2
Number of times merged:          400
Number of times stopped:         831
Number of times breaked:         16

Total time for CPA algorithm:         6.539s (Max:     0.917s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      2.533s
  Time for transfer relation:         3.524s
  Time for merge operator:            0.149s
  Time for stop operator:             0.085s
  Time for adding to reached set:     0.071s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 536 (count: 16, min: 6, max: 55, avg: 33.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.467s
  Counterexample analysis:                             0.369s (Max:     0.038s, Calls: 16)
    Refinement sat check:                              0.257s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.013s
  ARG update:                                          0.037s

Length of refined path (in blocks):                     520 (count: 16, min: 5, max: 54, avg: 32.50)
Number of affected states:                              504 (count: 16, min: 4, max: 53, avg: 31.50)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       504 (count: 16, min: 4, max: 53, avg: 31.50)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             488 (count: 16, min: 3, max: 52, avg: 30.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 785
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 621.69
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       7.042s
Time for refinements:                 0.502s
Average time for refinement:          0.031s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.577
  Visited lines:          1642
  Total lines:            1865
  Line coverage:          0.880
  Visited conditions:     66
  Total conditions:       92
  Condition coverage:     0.717

CPAchecker general statistics
-----------------------------
Number of program locations:     2027
Number of CFA edges:             2086
Number of relevant variables:    460
Number of functions:             26
Number of loops:                 4
Size of reached set:             392
  Number of reached locations:   232 (11%)
    Avg states per location:     1
    Max states per location:     9 (at node N770)
  Number of reached functions:   15 (58%)
  Number of partitions:          392
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.894s
  Time for loading CPAs:          0.508s
  Time for loading parser:        0.489s
  Time for CFA construction:      1.788s
    Time for parsing file(s):     0.600s
    Time for AST to CFA:          0.546s
    Time for CFA sanity check:    0.116s
    Time for post-processing:     0.377s
      Time for var class.:        0.181s
Time for Analysis:                7.042s
CPU time for analysis:            7.040s
Time for analyzing result:        0.000s
Total time for CPAchecker:        9.940s
Total CPU time for CPAchecker:    9.930s
Time for statistics:              0.081s

Time for Garbage Collector:       0.222s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     43MB (    41 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8062MB (  7688 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
