scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--leds--leds-bd2802.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e4i4w8c3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request_one to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_rwsem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1737 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1352 (78%)
  Because of loop head:            372 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       649 (37%)
  Times precision was {false}:     136 (8%)
  Times result was cached:         878 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      74 (4%)
  Times result was 'false':        5 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1284
  BDD entailment checks:           500
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       176
Number of predicates discovered:          2
Number of abstraction locations:          53
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1088
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.18
Number of irrelevant predicates:          534 (49%)
Number of preds handled by boolean abs:   74 (7%)
  Total number of models for allsat:      75
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.428s
  Time for path formula creation:        1.399s
Time for strengthen operator:            0.081s
Time for prec operator:                  0.853s
  Time for abstraction:                  0.781s (Max:     0.035s, Count: 1737)
    Boolean abstraction:                 0.110s
    Solving time:                        0.151s (Max:     0.022s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.020s (Max:     0.011s)
Time for merge operator:                 0.104s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.154s

Number of path formula cache hits:   11767 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.231s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         141 (count: 2278, min: 0, max: 44, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.142s
Automaton transfers with branching:                0
Automaton transfer successors:                        22687 (count: 22687, min: 1, max: 1, avg: 1.00) [1 x 22687]

CPA algorithm statistics
------------------------
Number of iterations:            6984
Max size of waitlist:            10
Average size of waitlist:        4
Number of computed successors:   7804
Max successors for one state:    2
Number of times merged:          392
Number of times stopped:         789
Number of times breaked:         13

Total time for CPA algorithm:         3.793s (Max:     0.782s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:      1.109s
  Time for transfer relation:         2.232s
  Time for merge operator:            0.137s
  Time for stop operator:             0.064s
  Time for adding to reached set:     0.042s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 225 (count: 13, min: 6, max: 35, avg: 17.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.272s
  Counterexample analysis:                             0.147s (Max:     0.024s, Calls: 13)
    Refinement sat check:                              0.102s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.021s
  ARG update:                                          0.037s

Length of refined path (in blocks):                     212 (count: 13, min: 5, max: 34, avg: 16.31)
Number of affected states:                              199 (count: 13, min: 4, max: 33, avg: 15.31)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       199 (count: 13, min: 4, max: 33, avg: 15.31)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             186 (count: 13, min: 3, max: 32, avg: 14.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 663
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 513.23
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.119s
Time for refinements:                 0.324s
Average time for refinement:          0.024s
Max time for refinement:              0.056s

Code Coverage
-----------------------------
  Function coverage:      0.270
  Visited lines:          1652
  Total lines:            3969
  Line coverage:          0.416
  Visited conditions:     78
  Total conditions:       264
  Condition coverage:     0.295

CPAchecker general statistics
-----------------------------
Number of program locations:     4357
Number of CFA edges:             4553
Number of relevant variables:    1243
Number of functions:             74
Number of loops:                 8
Size of reached set:             378
  Number of reached locations:   293 (7%)
    Avg states per location:     1
    Max states per location:     4 (at node N196)
  Number of reached functions:   20 (27%)
  Number of partitions:          378
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.719s
  Time for loading CPAs:          0.792s
  Time for loading parser:        0.388s
  Time for CFA construction:      2.406s
    Time for parsing file(s):     0.582s
    Time for AST to CFA:          0.819s
    Time for CFA sanity check:    0.245s
    Time for post-processing:     0.661s
      Time for var class.:        0.350s
Time for Analysis:                4.120s
CPU time for analysis:            4.120s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.842s
Total CPU time for CPAchecker:    7.840s
Time for statistics:              0.061s

Time for Garbage Collector:       0.230s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    65 MiB) max;     41MB (    39 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8057MB (  7684 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
