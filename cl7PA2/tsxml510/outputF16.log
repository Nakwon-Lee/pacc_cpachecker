scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--usb--serial--ssu100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dk4y0335/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3663: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3666: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3669: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3675: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_handle_sysrq_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_handle_break to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15157 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13562 (89%)
  Because of loop head:            1175 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         420 (3%)
  Times precision was empty:       2882 (19%)
  Times precision was {false}:     139 (1%)
  Times result was cached:         11876 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      260 (2%)
  Times result was 'false':        388 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         12454
  BDD entailment checks:           3138
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       165
Number of predicates discovered:          3
Number of abstraction locations:          129
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         12693
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 31.81
Number of irrelevant predicates:          4819 (38%)
Number of preds handled by boolean abs:   274 (2%)
  Total number of models for allsat:      261
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.514s
  Time for path formula creation:        1.405s
Time for strengthen operator:            0.163s
Time for prec operator:                  2.831s
  Time for abstraction:                  2.558s (Max:     0.023s, Count: 15157)
    Boolean abstraction:                 0.313s
    Solving time:                        0.318s (Max:     0.019s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.028s (Max:     0.008s)
Time for merge operator:                 0.105s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.346s

Number of path formula cache hits:   160069 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.169s

Total number of created targets for pointer analysis: 20
   Number of created targets for uf: *unsigned_char is 3
   Number of created targets for uf: *char is 2


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         530 (count: 8366, min: 0, max: 53, avg: 0.06)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.432s
Automaton transfers with branching:                0
Automaton transfer successors:                       152696 (count: 152696, min: 1, max: 1, avg: 1.00) [1 x 152696]

CPA algorithm statistics
------------------------
Number of iterations:            76354
Max size of waitlist:            28
Average size of waitlist:        12
Number of computed successors:   87523
Max successors for one state:    2
Number of times merged:          4658
Number of times stopped:         6716
Number of times breaked:         420

Total time for CPA algorithm:         7.905s (Max:     0.401s)
  Time for choose from waitlist:      0.065s
  Time for precision adjustment:      3.462s
  Time for transfer relation:         3.417s
  Time for merge operator:            0.228s
  Time for stop operator:             0.229s
  Time for adding to reached set:     0.147s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   420
Avg. length of target path (in blocks):                5584 (count: 420, min: 4, max: 49, avg: 13.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.603s
  Counterexample analysis:                             1.892s (Max:     0.030s, Calls: 420)
    Refinement sat check:                              1.219s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.235s
  ARG update:                                          0.234s

Length of refined path (in blocks):                    5080 (count: 420, min: 3, max: 48, avg: 12.10)
Number of affected states:                             2358 (count: 420, min: 0, max: 47, avg: 5.61)
Length (states) of path with itp 'true':               2302 (count: 420, min: 0, max: 11, avg: 5.48)
Length (states) of path with itp non-trivial itp:      2358 (count: 420, min: 0, max: 47, avg: 5.61)
Length (states) of path with itp 'false':               420 (count: 420, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 420, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1950 (count: 420, min: 0, max: 46, avg: 4.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                420
Number of successful refinements:     420
Number of failed refinements:         0
Max. size of reached set before ref.: 2035
Max. size of reached set after ref.:  855
Avg. size of reached set before ref.: 877.37
Avg. size of reached set after ref.:  690.75

Total time for CEGAR algorithm:      11.103s
Time for refinements:                 2.955s
Average time for refinement:          0.007s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.827
  Visited lines:          2872
  Total lines:            2930
  Line coverage:          0.980
  Visited conditions:     294
  Total conditions:       310
  Condition coverage:     0.948

CPAchecker general statistics
-----------------------------
Number of program locations:     3409
Number of CFA edges:             3604
Number of relevant variables:    777
Number of functions:             52
Number of loops:                 4
Size of reached set:             2041
  Number of reached locations:   1052 (31%)
    Avg states per location:     1
    Max states per location:     33 (at node N248)
  Number of reached functions:   43 (83%)
  Number of partitions:          2041
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.506s
  Time for loading CPAs:          0.694s
  Time for loading parser:        0.480s
  Time for CFA construction:      2.249s
    Time for parsing file(s):     0.651s
    Time for AST to CFA:          0.722s
    Time for CFA sanity check:    0.187s
    Time for post-processing:     0.553s
      Time for var class.:        0.270s
Time for Analysis:               11.103s
CPU time for analysis:           11.110s
Time for analyzing result:        0.002s
Total time for CPAchecker:       14.613s
Total CPU time for CPAchecker:   14.600s
Time for statistics:              0.072s

Time for Garbage Collector:       0.318s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     45MB (    42 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     33MB (    31 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8004MB (  7633 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
