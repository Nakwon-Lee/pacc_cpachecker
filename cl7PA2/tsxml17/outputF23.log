scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--on20.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tdfl1gou/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3609 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3415 (95%)
  Because of loop head:            179 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (0%)
  Times precision was empty:       502 (14%)
  Times precision was {false}:     222 (6%)
  Times result was cached:         2643 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      242 (7%)
  Times result was 'false':        28 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3229
  BDD entailment checks:           245
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       146
Number of predicates discovered:          2
Number of abstraction locations:          237
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         3107
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.70
Number of irrelevant predicates:          490 (16%)
Number of preds handled by boolean abs:   242 (8%)
  Total number of models for allsat:      242
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.274s
  Time for path formula creation:        1.196s
Time for strengthen operator:            0.144s
Time for prec operator:                  1.556s
  Time for abstraction:                  1.471s (Max:     0.024s, Count: 3609)
    Boolean abstraction:                 0.254s
    Solving time:                        0.280s (Max:     0.014s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.008s (Max:     0.005s)
Time for merge operator:                 0.121s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.311s

Number of path formula cache hits:   63220 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.051s

Total number of created targets for pointer analysis: 60
   Number of created targets for uf: *(char)* is 31


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         431 (count: 3314, min: 0, max: 84, avg: 0.13)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.257s
Automaton transfers with branching:                0
Automaton transfer successors:                        96756 (count: 96756, min: 1, max: 1, avg: 1.00) [1 x 96756]

CPA algorithm statistics
------------------------
Number of iterations:            17150
Max size of waitlist:            18
Average size of waitlist:        5
Number of computed successors:   18978
Max successors for one state:    2
Number of times merged:          1492
Number of times stopped:         1661
Number of times breaked:         15

Total time for CPA algorithm:         6.117s (Max:     0.636s)
  Time for choose from waitlist:      0.043s
  Time for precision adjustment:      1.844s
  Time for transfer relation:         3.600s
  Time for merge operator:            0.204s
  Time for stop operator:             0.100s
  Time for adding to reached set:     0.100s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 834 (count: 15, min: 5, max: 95, avg: 55.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.380s
  Counterexample analysis:                             0.202s (Max:     0.026s, Calls: 15)
    Refinement sat check:                              0.104s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.019s
  ARG update:                                          0.103s

Length of refined path (in blocks):                     819 (count: 15, min: 4, max: 94, avg: 54.60)
Number of affected states:                              804 (count: 15, min: 3, max: 93, avg: 53.60)
Length (states) of path with itp 'true':                  0 (count: 15, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       804 (count: 15, min: 3, max: 93, avg: 53.60)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             789 (count: 15, min: 2, max: 92, avg: 52.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 2383
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1003.47
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.612s
Time for refinements:                 0.495s
Average time for refinement:          0.033s
Max time for refinement:              0.046s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          5206
  Total lines:            5254
  Line coverage:          0.991
  Visited conditions:     462
  Total conditions:       482
  Condition coverage:     0.959

CPAchecker general statistics
-----------------------------
Number of program locations:     5792
Number of CFA edges:             6241
Number of relevant variables:    495
Number of functions:             23
Number of loops:                 3
Size of reached set:             2283
  Number of reached locations:   1624 (28%)
    Avg states per location:     1
    Max states per location:     204 (at node N0)
  Number of reached functions:   13 (57%)
  Number of partitions:          2283
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.971s
  Time for loading CPAs:          0.829s
  Time for loading parser:        0.520s
  Time for CFA construction:      2.495s
    Time for parsing file(s):     0.617s
    Time for AST to CFA:          0.702s
    Time for CFA sanity check:    0.327s
    Time for post-processing:     0.756s
      Time for var class.:        0.421s
Time for Analysis:                6.613s
CPU time for analysis:            6.620s
Time for analyzing result:        0.002s
Total time for CPAchecker:       10.587s
Total CPU time for CPAchecker:   10.580s
Time for statistics:              0.122s

Time for Garbage Collector:       0.320s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     44MB (    42 MiB) avg;     78MB (    75 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8059MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
