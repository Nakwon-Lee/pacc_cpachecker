scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--on20.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1j6snr9p/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5692 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5487 (96%)
  Because of loop head:            191 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (0%)
  Times precision was empty:       1572 (28%)
  Times precision was {false}:     252 (4%)
  Times result was cached:         3626 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      242 (4%)
  Times result was 'false':        15 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         5280
  BDD entailment checks:           272
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       146
Number of predicates discovered:          2
Number of abstraction locations:          237
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4120
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 8.34
Number of irrelevant predicates:          1498 (36%)
Number of preds handled by boolean abs:   242 (6%)
  Total number of models for allsat:      242
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.437s
  Time for path formula creation:        1.317s
Time for strengthen operator:            0.103s
Time for prec operator:                  1.944s
  Time for abstraction:                  1.751s (Max:     0.014s, Count: 5692)
    Boolean abstraction:                 0.293s
    Solving time:                        0.293s (Max:     0.013s)
    Model enumeration time:              0.038s
    Time for BDD construction:           0.034s (Max:     0.011s)
Time for merge operator:                 0.087s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.331s

Number of path formula cache hits:   83130 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.150s

Total number of created targets for pointer analysis: 60
   Number of created targets for uf: *(char)* is 31


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         459 (count: 4561, min: 0, max: 76, avg: 0.10)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.231s
Automaton transfers with branching:                0
Automaton transfer successors:                       115203 (count: 115203, min: 1, max: 1, avg: 1.00) [1 x 115203]

CPA algorithm statistics
------------------------
Number of iterations:            27484
Max size of waitlist:            21
Average size of waitlist:        8
Number of computed successors:   30326
Max successors for one state:    2
Number of times merged:          2504
Number of times stopped:         2673
Number of times breaked:         14

Total time for CPA algorithm:         7.748s (Max:     0.908s)
  Time for choose from waitlist:      0.064s
  Time for precision adjustment:      2.343s
  Time for transfer relation:         4.676s
  Time for merge operator:            0.209s
  Time for stop operator:             0.116s
  Time for adding to reached set:     0.071s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 829 (count: 14, min: 8, max: 95, avg: 59.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.399s
  Counterexample analysis:                             0.237s (Max:     0.029s, Calls: 14)
    Refinement sat check:                              0.140s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.009s
  ARG update:                                          0.089s

Length of refined path (in blocks):                     815 (count: 14, min: 7, max: 94, avg: 58.21)
Number of affected states:                              801 (count: 14, min: 6, max: 93, avg: 57.21)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       801 (count: 14, min: 6, max: 93, avg: 57.21)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             787 (count: 14, min: 5, max: 92, avg: 56.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 2433
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1814.14
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       8.249s
Time for refinements:                 0.499s
Average time for refinement:          0.035s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          5206
  Total lines:            5254
  Line coverage:          0.991
  Visited conditions:     462
  Total conditions:       482
  Condition coverage:     0.959

CPAchecker general statistics
-----------------------------
Number of program locations:     5792
Number of CFA edges:             6241
Number of relevant variables:    495
Number of functions:             23
Number of loops:                 3
Size of reached set:             2283
  Number of reached locations:   1624 (28%)
    Avg states per location:     1
    Max states per location:     204 (at node N0)
  Number of reached functions:   13 (57%)
  Number of partitions:          2283
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.815s
  Time for loading CPAs:          0.713s
  Time for loading parser:        0.455s
  Time for CFA construction:      2.550s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          0.666s
    Time for CFA sanity check:    0.311s
    Time for post-processing:     0.760s
      Time for var class.:        0.407s
Time for Analysis:                8.249s
CPU time for analysis:            8.250s
Time for analyzing result:        0.002s
Total time for CPAchecker:       12.074s
Total CPU time for CPAchecker:   12.070s
Time for statistics:              0.121s

Time for Garbage Collector:       0.315s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     46MB (    44 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8064MB (  7690 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
