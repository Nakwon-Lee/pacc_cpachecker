scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--misc--apds9802als.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l7dnq7p1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2043: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2049: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2093: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2099: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 2102: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_runtime_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            798 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  683 (86%)
  Because of loop head:            90 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (3%)
  Times precision was empty:       300 (38%)
  Times precision was {false}:     50 (6%)
  Times result was cached:         406 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42 (5%)
  Times result was 'false':        41 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         429
  BDD entailment checks:           125
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       25
Number of predicates discovered:          3
Number of abstraction locations:          37
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         498
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.41
Number of irrelevant predicates:          236 (47%)
Number of preds handled by boolean abs:   42 (8%)
  Total number of models for allsat:      42
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.496s
  Time for path formula creation:        0.463s
Time for strengthen operator:            0.016s
Time for prec operator:                  0.451s
  Time for abstraction:                  0.378s (Max:     0.022s, Count: 798)
    Boolean abstraction:                 0.039s
    Solving time:                        0.039s (Max:     0.006s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.007s (Max:     0.005s)
Time for merge operator:                 0.021s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.040s

Number of path formula cache hits:   5991 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.443s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          38 (count: 934, min: 0, max: 38, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.103s
Automaton transfers with branching:                0
Automaton transfer successors:                         7780 (count: 7780, min: 1, max: 1, avg: 1.00) [1 x 7780]

CPA algorithm statistics
------------------------
Number of iterations:            3249
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   3650
Max successors for one state:    2
Number of times merged:          152
Number of times stopped:         237
Number of times breaked:         25

Total time for CPA algorithm:         1.660s (Max:     0.311s)
  Time for choose from waitlist:      0.029s
  Time for precision adjustment:      0.539s
  Time for transfer relation:         0.868s
  Time for merge operator:            0.053s
  Time for stop operator:             0.025s
  Time for adding to reached set:     0.052s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 262 (count: 25, min: 4, max: 16, avg: 10.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.215s
  Counterexample analysis:                             0.149s (Max:     0.014s, Calls: 25)
    Refinement sat check:                              0.110s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.005s
  ARG update:                                          0.021s

Length of refined path (in blocks):                     237 (count: 25, min: 3, max: 15, avg: 9.48)
Number of affected states:                              110 (count: 25, min: 2, max: 14, avg: 4.40)
Length (states) of path with itp 'true':                102 (count: 25, min: 0, max: 8, avg: 4.08)
Length (states) of path with itp non-trivial itp:       110 (count: 25, min: 2, max: 14, avg: 4.40)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              85 (count: 25, min: 1, max: 13, avg: 3.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 392
Max. size of reached set after ref.:  302
Avg. size of reached set before ref.: 282.64
Avg. size of reached set after ref.:  160.08

Total time for CEGAR algorithm:       1.937s
Time for refinements:                 0.262s
Average time for refinement:          0.010s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.415
  Visited lines:          743
  Total lines:            1144
  Line coverage:          0.649
  Visited conditions:     42
  Total conditions:       84
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     1358
Number of CFA edges:             1415
Number of relevant variables:    206
Number of functions:             41
Number of loops:                 3
Size of reached set:             309
  Number of reached locations:   183 (13%)
    Avg states per location:     1
    Max states per location:     6 (at node N881)
  Number of reached functions:   17 (41%)
  Number of partitions:          309
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.861s
  Time for loading CPAs:          0.648s
  Time for loading parser:        0.472s
  Time for CFA construction:      1.644s
    Time for parsing file(s):     0.545s
    Time for AST to CFA:          0.515s
    Time for CFA sanity check:    0.095s
    Time for post-processing:     0.349s
      Time for var class.:        0.166s
Time for Analysis:                1.937s
CPU time for analysis:            1.940s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.800s
Total CPU time for CPAchecker:    4.800s
Time for statistics:              0.049s

Time for Garbage Collector:       0.113s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     33MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8037MB (  7665 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
