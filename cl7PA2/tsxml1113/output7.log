scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--misc--apds9802als.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cpdvr7m7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2043: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2049: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2093: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2099: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 2102: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_runtime_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1395 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1191 (85%)
  Because of loop head:            168 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (3%)
  Times precision was empty:       520 (37%)
  Times precision was {false}:     50 (4%)
  Times result was cached:         782 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43 (3%)
  Times result was 'false':        24 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         687
  BDD entailment checks:           295
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       25
Number of predicates discovered:          3
Number of abstraction locations:          37
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         875
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 9.41
Number of irrelevant predicates:          536 (61%)
Number of preds handled by boolean abs:   43 (5%)
  Total number of models for allsat:      43
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.591s
  Time for path formula creation:        0.576s
Time for strengthen operator:            0.030s
Time for prec operator:                  0.570s
  Time for abstraction:                  0.486s (Max:     0.017s, Count: 1395)
    Boolean abstraction:                 0.057s
    Solving time:                        0.068s (Max:     0.009s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.015s (Max:     0.009s)
Time for merge operator:                 0.020s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.076s

Number of path formula cache hits:   11488 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.512s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          75 (count: 1330, min: 0, max: 41, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                        13429 (count: 13429, min: 1, max: 1, avg: 1.00) [1 x 13429]

CPA algorithm statistics
------------------------
Number of iterations:            5143
Max size of waitlist:            17
Average size of waitlist:        8
Number of computed successors:   5737
Max successors for one state:    2
Number of times merged:          196
Number of times stopped:         374
Number of times breaked:         36

Total time for CPA algorithm:         2.041s (Max:     0.300s)
  Time for choose from waitlist:      0.019s
  Time for precision adjustment:      0.714s
  Time for transfer relation:         1.085s
  Time for merge operator:            0.052s
  Time for stop operator:             0.051s
  Time for adding to reached set:     0.055s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 477 (count: 36, min: 4, max: 16, avg: 13.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.345s
  Counterexample analysis:                             0.210s (Max:     0.015s, Calls: 36)
    Refinement sat check:                              0.116s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.019s
  ARG update:                                          0.066s

Length of refined path (in blocks):                     441 (count: 36, min: 3, max: 15, avg: 12.25)
Number of affected states:                              195 (count: 36, min: 2, max: 14, avg: 5.42)
Length (states) of path with itp 'true':                210 (count: 36, min: 0, max: 8, avg: 5.83)
Length (states) of path with itp non-trivial itp:       195 (count: 36, min: 2, max: 14, avg: 5.42)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             159 (count: 36, min: 1, max: 13, avg: 4.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 402
Max. size of reached set after ref.:  304
Avg. size of reached set before ref.: 311.92
Avg. size of reached set after ref.:  172.17

Total time for CEGAR algorithm:       2.464s
Time for refinements:                 0.417s
Average time for refinement:          0.011s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.415
  Visited lines:          743
  Total lines:            1144
  Line coverage:          0.649
  Visited conditions:     42
  Total conditions:       84
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     1358
Number of CFA edges:             1415
Number of relevant variables:    206
Number of functions:             41
Number of loops:                 3
Size of reached set:             309
  Number of reached locations:   183 (13%)
    Avg states per location:     1
    Max states per location:     6 (at node N881)
  Number of reached functions:   17 (41%)
  Number of partitions:          309
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.573s
  Time for loading CPAs:          0.583s
  Time for loading parser:        0.406s
  Time for CFA construction:      1.523s
    Time for parsing file(s):     0.537s
    Time for AST to CFA:          0.450s
    Time for CFA sanity check:    0.087s
    Time for post-processing:     0.322s
      Time for var class.:        0.152s
Time for Analysis:                2.464s
CPU time for analysis:            2.470s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.040s
Total CPU time for CPAchecker:    5.040s
Time for statistics:              0.069s

Time for Garbage Collector:       0.092s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    33 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7986MB (  7616 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
