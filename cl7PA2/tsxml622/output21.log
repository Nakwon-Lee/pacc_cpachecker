scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--mtd--ar7part.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vygf3rec/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_parser to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            179 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  120 (67%)
  Because of loop head:            54 (30%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (3%)
  Times precision was empty:       60 (34%)
  Times precision was {false}:     15 (8%)
  Times result was cached:         82 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22 (12%)
  Times result was 'false':        6 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         130
  BDD entailment checks:           60
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       142
Number of predicates discovered:          2
Number of abstraction locations:          14
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         119
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.22
Number of irrelevant predicates:          43 (36%)
Number of preds handled by boolean abs:   22 (18%)
  Total number of models for allsat:      22
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.489s
  Time for path formula creation:        0.484s
Time for strengthen operator:            0.012s
Time for prec operator:                  0.314s
  Time for abstraction:                  0.297s (Max:     0.026s, Count: 179)
    Boolean abstraction:                 0.106s
    Solving time:                        0.112s (Max:     0.019s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.006s (Max:     0.005s)
Time for merge operator:                 0.011s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.120s

Number of path formula cache hits:   2663 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.462s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          45 (count: 332, min: 0, max: 45, avg: 0.14)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.045s
Automaton transfers with branching:                0
Automaton transfer successors:                         4144 (count: 4144, min: 1, max: 1, avg: 1.00) [1 x 4144]

CPA algorithm statistics
------------------------
Number of iterations:            856
Max size of waitlist:            7
Average size of waitlist:        4
Number of computed successors:   953
Max successors for one state:    2
Number of times merged:          35
Number of times stopped:         81
Number of times breaked:         5

Total time for CPA algorithm:         1.201s (Max:     0.384s)
  Time for choose from waitlist:      0.001s
  Time for precision adjustment:      0.375s
  Time for transfer relation:         0.713s
  Time for merge operator:            0.016s
  Time for stop operator:             0.026s
  Time for adding to reached set:     0.042s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  63 (count: 5, min: 6, max: 15, avg: 12.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.092s
  Counterexample analysis:                             0.061s (Max:     0.023s, Calls: 5)
    Refinement sat check:                              0.049s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.014s
  ARG update:                                          0.006s

Length of refined path (in blocks):                      58 (count: 5, min: 5, max: 14, avg: 11.60)
Number of affected states:                               53 (count: 5, min: 4, max: 13, avg: 10.60)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        53 (count: 5, min: 4, max: 13, avg: 10.60)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              48 (count: 5, min: 3, max: 12, avg: 9.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 174
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 148.80
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.310s
Time for refinements:                 0.108s
Average time for refinement:          0.021s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          588
  Total lines:            634
  Line coverage:          0.927
  Visited conditions:     30
  Total conditions:       50
  Condition coverage:     0.600

CPAchecker general statistics
-----------------------------
Number of program locations:     729
Number of CFA edges:             752
Number of relevant variables:    162
Number of functions:             15
Number of loops:                 4
Size of reached set:             138
  Number of reached locations:   112 (15%)
    Avg states per location:     1
    Max states per location:     4 (at node N14)
  Number of reached functions:   6 (40%)
  Number of partitions:          138
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.289s
  Time for loading CPAs:          0.507s
  Time for loading parser:        0.392s
  Time for CFA construction:      1.287s
    Time for parsing file(s):     0.471s
    Time for AST to CFA:          0.347s
    Time for CFA sanity check:    0.063s
    Time for post-processing:     0.291s
      Time for var class.:        0.154s
Time for Analysis:                1.310s
CPU time for analysis:            1.320s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.602s
Total CPU time for CPAchecker:    3.600s
Time for statistics:              0.053s

Time for Garbage Collector:       0.093s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     30MB (    28 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7975MB (  7606 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
