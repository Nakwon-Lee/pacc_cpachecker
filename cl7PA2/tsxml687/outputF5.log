scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--staging--comedi--drivers--comedi_bond.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gz_8fx5f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2097: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

line 2100: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1632: Destroying the void* pointer alloc_private::__cil_tmp4 produces garbage or the memory pointed by it is unused: tmp = alloc_private(dev, __cil_tmp10); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_find_subdevice_by_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_get_n_channels to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            921 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  663 (72%)
  Because of loop head:            247 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (1%)
  Times precision was empty:       275 (30%)
  Times precision was {false}:     63 (7%)
  Times result was cached:         530 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (6%)
  Times result was 'false':        12 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         815
  BDD entailment checks:           339
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       218
Number of predicates discovered:          2
Number of abstraction locations:          39
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         646
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.57
Number of irrelevant predicates:          276 (43%)
Number of preds handled by boolean abs:   53 (8%)
  Total number of models for allsat:      53
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.027s
  Time for path formula creation:        0.996s
Time for strengthen operator:            0.050s
Time for prec operator:                  1.601s
  Time for abstraction:                  1.527s (Max:     0.270s, Count: 921)
    Boolean abstraction:                 0.368s
    Solving time:                        0.978s (Max:     0.252s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.007s (Max:     0.005s)
Time for merge operator:                 0.064s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.989s

Number of path formula cache hits:   13167 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.946s

Total number of created targets for pointer analysis: 2463
   Number of created targets for uf: *(struct_comedi_device)* is 41
   Number of created targets for uf: *char is 115
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         103 (count: 1252, min: 0, max: 33, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.092s
Automaton transfers with branching:                0
Automaton transfer successors:                        18291 (count: 18291, min: 1, max: 1, avg: 1.00) [1 x 18291]

CPA algorithm statistics
------------------------
Number of iterations:            3917
Max size of waitlist:            13
Average size of waitlist:        5
Number of computed successors:   4433
Max successors for one state:    2
Number of times merged:          238
Number of times stopped:         469
Number of times breaked:         11

Total time for CPA algorithm:         3.602s (Max:     0.760s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      1.758s
  Time for transfer relation:         1.611s
  Time for merge operator:            0.101s
  Time for stop operator:             0.044s
  Time for adding to reached set:     0.035s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 228 (count: 11, min: 8, max: 30, avg: 20.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.574s
  Counterexample analysis:                             0.516s (Max:     0.092s, Calls: 11)
    Refinement sat check:                              0.452s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.021s
  ARG update:                                          0.012s

Length of refined path (in blocks):                     217 (count: 11, min: 7, max: 29, avg: 19.73)
Number of affected states:                              206 (count: 11, min: 6, max: 28, avg: 18.73)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       206 (count: 11, min: 6, max: 28, avg: 18.73)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             195 (count: 11, min: 5, max: 27, avg: 17.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 469
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 337.91
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.201s
Time for refinements:                 0.599s
Average time for refinement:          0.054s
Max time for refinement:              0.099s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          1372
  Total lines:            1742
  Line coverage:          0.788
  Visited conditions:     70
  Total conditions:       116
  Condition coverage:     0.603

CPAchecker general statistics
-----------------------------
Number of program locations:     1930
Number of CFA edges:             1986
Number of relevant variables:    552
Number of functions:             28
Number of loops:                 6
Size of reached set:             269
  Number of reached locations:   244 (13%)
    Avg states per location:     1
    Max states per location:     4 (at node N748)
  Number of reached functions:   16 (57%)
  Number of partitions:          269
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.058s
  Time for loading CPAs:          0.662s
  Time for loading parser:        0.434s
  Time for CFA construction:      1.859s
    Time for parsing file(s):     0.504s
    Time for AST to CFA:          0.580s
    Time for CFA sanity check:    0.164s
    Time for post-processing:     0.484s
      Time for var class.:        0.265s
Time for Analysis:                4.201s
CPU time for analysis:            4.190s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.262s
Total CPU time for CPAchecker:    7.250s
Time for statistics:              0.058s

Time for Garbage Collector:       0.147s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     38MB (    36 MiB) avg;     67MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7994MB (  7623 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
