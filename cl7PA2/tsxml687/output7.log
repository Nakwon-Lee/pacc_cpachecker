scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--staging--comedi--drivers--comedi_bond.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__toey_0x/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2097: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

line 2100: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1632: Destroying the void* pointer alloc_private::__cil_tmp4 produces garbage or the memory pointed by it is unused: tmp = alloc_private(dev, __cil_tmp10); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_find_subdevice_by_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_get_n_channels to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            788 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  558 (71%)
  Because of loop head:            218 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (2%)
  Times precision was empty:       198 (25%)
  Times precision was {false}:     49 (6%)
  Times result was cached:         488 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (7%)
  Times result was 'false':        23 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         597
  BDD entailment checks:           265
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       218
Number of predicates discovered:          2
Number of abstraction locations:          39
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         590
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.78
Number of irrelevant predicates:          222 (38%)
Number of preds handled by boolean abs:   53 (9%)
  Total number of models for allsat:      53
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.995s
  Time for path formula creation:        0.968s
Time for strengthen operator:            0.041s
Time for prec operator:                  1.492s
  Time for abstraction:                  1.453s (Max:     0.233s, Count: 788)
    Boolean abstraction:                 0.358s
    Solving time:                        0.907s (Max:     0.226s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.008s (Max:     0.006s)
Time for merge operator:                 0.118s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.922s

Number of path formula cache hits:   10317 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.913s

Total number of created targets for pointer analysis: 2383
   Number of created targets for uf: *(struct_comedi_device)* is 21
   Number of created targets for uf: *char is 115
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          93 (count: 1031, min: 0, max: 33, avg: 0.09)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.113s
Automaton transfers with branching:                0
Automaton transfer successors:                        15266 (count: 15266, min: 1, max: 1, avg: 1.00) [1 x 15266]

CPA algorithm statistics
------------------------
Number of iterations:            3182
Max size of waitlist:            12
Average size of waitlist:        3
Number of computed successors:   3599
Max successors for one state:    2
Number of times merged:          166
Number of times stopped:         362
Number of times breaked:         12

Total time for CPA algorithm:         3.443s (Max:     0.650s)
  Time for choose from waitlist:      0.030s
  Time for precision adjustment:      1.581s
  Time for transfer relation:         1.510s
  Time for merge operator:            0.151s
  Time for stop operator:             0.052s
  Time for adding to reached set:     0.023s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 233 (count: 12, min: 5, max: 30, avg: 19.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.581s
  Counterexample analysis:                             0.531s (Max:     0.103s, Calls: 12)
    Refinement sat check:                              0.431s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.002s
  ARG update:                                          0.024s

Length of refined path (in blocks):                     221 (count: 12, min: 4, max: 29, avg: 18.42)
Number of affected states:                              209 (count: 12, min: 3, max: 28, avg: 17.42)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       209 (count: 12, min: 3, max: 28, avg: 17.42)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             197 (count: 12, min: 2, max: 27, avg: 16.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 409
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 248.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.064s
Time for refinements:                 0.621s
Average time for refinement:          0.051s
Max time for refinement:              0.105s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          1372
  Total lines:            1742
  Line coverage:          0.788
  Visited conditions:     70
  Total conditions:       116
  Condition coverage:     0.603

CPAchecker general statistics
-----------------------------
Number of program locations:     1930
Number of CFA edges:             1986
Number of relevant variables:    552
Number of functions:             28
Number of loops:                 6
Size of reached set:             269
  Number of reached locations:   244 (13%)
    Avg states per location:     1
    Max states per location:     4 (at node N748)
  Number of reached functions:   16 (57%)
  Number of partitions:          269
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.007s
  Time for loading CPAs:          0.589s
  Time for loading parser:        0.491s
  Time for CFA construction:      1.863s
    Time for parsing file(s):     0.625s
    Time for AST to CFA:          0.514s
    Time for CFA sanity check:    0.126s
    Time for post-processing:     0.451s
      Time for var class.:        0.242s
Time for Analysis:                4.065s
CPU time for analysis:            4.060s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.074s
Total CPU time for CPAchecker:    7.060s
Time for statistics:              0.048s

Time for Garbage Collector:       0.116s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     37MB (    35 MiB) avg;     67MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
