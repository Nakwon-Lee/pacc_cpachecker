scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--leds--leds-regulator.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ih27svnx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_get_exclusive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_list_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_set_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_count_voltages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_is_enabled to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            252 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  222 (88%)
  Because of loop head:            22 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (3%)
  Times precision was empty:       104 (41%)
  Times precision was {false}:     22 (9%)
  Times result was cached:         83 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43 (17%)
  Times result was 'false':        13 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         176
  BDD entailment checks:           62
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       94
Number of predicates discovered:          3
Number of abstraction locations:          34
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         150
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.31
Number of irrelevant predicates:          68 (45%)
Number of preds handled by boolean abs:   44 (29%)
  Total number of models for allsat:      43
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.370s
  Time for path formula creation:        0.363s
Time for strengthen operator:            0.010s
Time for prec operator:                  0.264s
  Time for abstraction:                  0.245s (Max:     0.017s, Count: 252)
    Boolean abstraction:                 0.037s
    Solving time:                        0.030s (Max:     0.009s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.007s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.045s

Number of path formula cache hits:   2030 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.346s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 542, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.061s
Automaton transfers with branching:                0
Automaton transfer successors:                         3684 (count: 3684, min: 1, max: 1, avg: 1.00) [1 x 3684]

CPA algorithm statistics
------------------------
Number of iterations:            1129
Max size of waitlist:            9
Average size of waitlist:        3
Number of computed successors:   1265
Max successors for one state:    2
Number of times merged:          57
Number of times stopped:         102
Number of times breaked:         8

Total time for CPA algorithm:         1.092s (Max:     0.269s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.353s
  Time for transfer relation:         0.633s
  Time for merge operator:            0.015s
  Time for stop operator:             0.022s
  Time for adding to reached set:     0.031s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 146 (count: 8, min: 4, max: 28, avg: 18.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.151s
  Counterexample analysis:                             0.118s (Max:     0.023s, Calls: 8)
    Refinement sat check:                              0.075s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.002s
  ARG update:                                          0.007s

Length of refined path (in blocks):                     138 (count: 8, min: 3, max: 27, avg: 17.25)
Number of affected states:                               54 (count: 8, min: 2, max: 18, avg: 6.75)
Length (states) of path with itp 'true':                 76 (count: 8, min: 0, max: 22, avg: 9.50)
Length (states) of path with itp non-trivial itp:        54 (count: 8, min: 2, max: 18, avg: 6.75)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              46 (count: 8, min: 1, max: 17, avg: 5.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 315
Max. size of reached set after ref.:  250
Avg. size of reached set before ref.: 205.63
Avg. size of reached set after ref.:  93.50

Total time for CEGAR algorithm:       1.258s
Time for refinements:                 0.166s
Average time for refinement:          0.020s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.567
  Visited lines:          743
  Total lines:            873
  Line coverage:          0.851
  Visited conditions:     50
  Total conditions:       66
  Condition coverage:     0.758

CPAchecker general statistics
-----------------------------
Number of program locations:     1048
Number of CFA edges:             1080
Number of relevant variables:    219
Number of functions:             30
Number of loops:                 1
Size of reached set:             254
  Number of reached locations:   210 (20%)
    Avg states per location:     1
    Max states per location:     6 (at node N368)
  Number of reached functions:   17 (57%)
  Number of partitions:          254
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.729s
  Time for loading CPAs:          0.616s
  Time for loading parser:        0.505s
  Time for CFA construction:      1.452s
    Time for parsing file(s):     0.485s
    Time for AST to CFA:          0.359s
    Time for CFA sanity check:    0.128s
    Time for post-processing:     0.356s
      Time for var class.:        0.179s
Time for Analysis:                1.258s
CPU time for analysis:            1.260s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.991s
Total CPU time for CPAchecker:    3.990s
Time for statistics:              0.045s

Time for Garbage Collector:       0.109s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     30MB (    29 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7970MB (  7601 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
