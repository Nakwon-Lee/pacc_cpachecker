scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hid--hid-chicony.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8fj73m1e/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1892 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1771 (94%)
  Because of loop head:            100 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (1%)
  Times precision was empty:       154 (8%)
  Times precision was {false}:     8 (0%)
  Times result was cached:         1699 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31 (2%)
  Times result was 'false':        41 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1705
  BDD entailment checks:           345
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          2
Number of abstraction locations:          33
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1738
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 44.56
Number of irrelevant predicates:          193 (11%)
Number of preds handled by boolean abs:   31 (2%)
  Total number of models for allsat:      31
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.855s
  Time for path formula creation:        0.824s
Time for strengthen operator:            0.036s
Time for prec operator:                  0.628s
  Time for abstraction:                  0.536s (Max:     0.021s, Count: 1892)
    Boolean abstraction:                 0.068s
    Solving time:                        0.050s (Max:     0.014s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.010s (Max:     0.006s)
Time for merge operator:                 0.075s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     0.057s

Number of path formula cache hits:   22951 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.607s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          65 (count: 730, min: 0, max: 65, avg: 0.09)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.126s
Automaton transfers with branching:                0
Automaton transfer successors:                        23895 (count: 23895, min: 1, max: 1, avg: 1.00) [1 x 23895]

CPA algorithm statistics
------------------------
Number of iterations:            9187
Max size of waitlist:            21
Average size of waitlist:        11
Number of computed successors:   10352
Max successors for one state:    2
Number of times merged:          680
Number of times stopped:         950
Number of times breaked:         21

Total time for CPA algorithm:         2.762s (Max:     0.200s)
  Time for choose from waitlist:      0.038s
  Time for precision adjustment:      0.837s
  Time for transfer relation:         1.515s
  Time for merge operator:            0.121s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.066s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 360 (count: 21, min: 5, max: 19, avg: 17.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.246s
  Counterexample analysis:                             0.170s (Max:     0.020s, Calls: 21)
    Refinement sat check:                              0.088s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.008s
  ARG update:                                          0.043s

Length of refined path (in blocks):                     339 (count: 21, min: 4, max: 18, avg: 16.14)
Number of affected states:                              318 (count: 21, min: 3, max: 17, avg: 15.14)
Length (states) of path with itp 'true':                  0 (count: 21, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       318 (count: 21, min: 3, max: 17, avg: 15.14)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             297 (count: 21, min: 2, max: 16, avg: 14.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 763
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 414.19
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.035s
Time for refinements:                 0.271s
Average time for refinement:          0.012s
Max time for refinement:              0.026s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          650
  Total lines:            698
  Line coverage:          0.931
  Visited conditions:     52
  Total conditions:       72
  Condition coverage:     0.722

CPAchecker general statistics
-----------------------------
Number of program locations:     788
Number of CFA edges:             838
Number of relevant variables:    96
Number of functions:             19
Number of loops:                 1
Size of reached set:             727
  Number of reached locations:   172 (22%)
    Avg states per location:     4
    Max states per location:     19 (at node N118)
  Number of reached functions:   9 (47%)
  Number of partitions:          727
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.588s
  Time for loading CPAs:          0.515s
  Time for loading parser:        0.494s
  Time for CFA construction:      1.466s
    Time for parsing file(s):     0.471s
    Time for AST to CFA:          0.465s
    Time for CFA sanity check:    0.060s
    Time for post-processing:     0.327s
      Time for var class.:        0.121s
Time for Analysis:                3.035s
CPU time for analysis:            3.030s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.626s
Total CPU time for CPAchecker:    5.610s
Time for statistics:              0.070s

Time for Garbage Collector:       0.113s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    33 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8045MB (  7672 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
