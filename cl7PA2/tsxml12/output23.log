scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--input--joystick--magellan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_upe05fkn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2302 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1807 (78%)
  Because of loop head:            479 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       1060 (46%)
  Times precision was {false}:     116 (5%)
  Times result was cached:         1070 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      56 (2%)
  Times result was 'false':        31 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1351
  BDD entailment checks:           747
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          2
Number of abstraction locations:          45
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1242
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.22
Number of irrelevant predicates:          649 (52%)
Number of preds handled by boolean abs:   56 (5%)
  Total number of models for allsat:      56
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.272s
  Time for path formula creation:        1.203s
Time for strengthen operator:            0.070s
Time for prec operator:                  1.008s
  Time for abstraction:                  0.915s (Max:     0.021s, Count: 2302)
    Boolean abstraction:                 0.086s
    Solving time:                        0.192s (Max:     0.014s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.018s (Max:     0.006s)
Time for merge operator:                 0.098s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.002s
Total time for SMT solver (w/o itp):     0.196s

Number of path formula cache hits:   13459 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.127s

Total number of created targets for pointer analysis: 720
   Number of created targets for uf: *unsigned_char is 241


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         109 (count: 2728, min: 0, max: 46, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.161s
Automaton transfers with branching:                0
Automaton transfer successors:                        24151 (count: 24151, min: 1, max: 1, avg: 1.00) [1 x 24151]

CPA algorithm statistics
------------------------
Number of iterations:            8610
Max size of waitlist:            13
Average size of waitlist:        8
Number of computed successors:   9542
Max successors for one state:    2
Number of times merged:          302
Number of times stopped:         885
Number of times breaked:         16

Total time for CPA algorithm:         3.694s (Max:     0.425s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      1.219s
  Time for transfer relation:         2.083s
  Time for merge operator:            0.121s
  Time for stop operator:             0.059s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 296 (count: 16, min: 5, max: 27, avg: 18.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.237s
  Counterexample analysis:                             0.162s (Max:     0.021s, Calls: 16)
    Refinement sat check:                              0.122s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.005s
  ARG update:                                          0.040s

Length of refined path (in blocks):                     280 (count: 16, min: 4, max: 26, avg: 17.50)
Number of affected states:                              264 (count: 16, min: 3, max: 25, avg: 16.50)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       264 (count: 16, min: 3, max: 25, avg: 16.50)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             248 (count: 16, min: 2, max: 24, avg: 15.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 620
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 523.63
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.961s
Time for refinements:                 0.266s
Average time for refinement:          0.016s
Max time for refinement:              0.025s

Code Coverage
-----------------------------
  Function coverage:      0.643
  Visited lines:          888
  Total lines:            936
  Line coverage:          0.949
  Visited conditions:     58
  Total conditions:       78
  Condition coverage:     0.744

CPAchecker general statistics
-----------------------------
Number of program locations:     1101
Number of CFA edges:             1143
Number of relevant variables:    147
Number of functions:             28
Number of loops:                 6
Size of reached set:             297
  Number of reached locations:   228 (21%)
    Avg states per location:     1
    Max states per location:     4 (at node N123)
  Number of reached functions:   18 (64%)
  Number of partitions:          297
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.584s
  Time for loading CPAs:          0.612s
  Time for loading parser:        0.491s
  Time for CFA construction:      1.390s
    Time for parsing file(s):     0.482s
    Time for AST to CFA:          0.413s
    Time for CFA sanity check:    0.098s
    Time for post-processing:     0.297s
      Time for var class.:        0.121s
Time for Analysis:                3.961s
CPU time for analysis:            3.960s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.548s
Total CPU time for CPAchecker:    6.540s
Time for statistics:              0.060s

Time for Garbage Collector:       0.138s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     37MB (    35 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8050MB (  7677 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
