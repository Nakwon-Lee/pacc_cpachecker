scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-gl861.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_85pasvda/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6464: Function pointer *__a with type struct dvb_frontend *(*)(const struct zl10353_config *config, struct i2c_adapter *i2c) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6565: Function pointer *__a___0 with type struct dvb_frontend *(*)(struct dvb_frontend *fe, struct i2c_adapter *i2c, struct qt1010_config *cfg) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6464: Ignoring call via function pointer gl861_frontend_attach::__a for which no suitable target was found in line: tmp___11 = (*__a)(__cil_tmp10, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6464: Ignoring function call through function pointer *__a: tmp___11 = (*__a)(__cil_tmp10, __cil_tmp14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6565: Ignoring call via function pointer gl861_tuner_attach::__a___0 for which no suitable target was found in line: tmp___17 = (*__a___0)(__cil_tmp22, __cil_tmp26, &gl861_qt1010_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6565: Ignoring function call through function pointer *__a___0: tmp___17 = (*__a___0)(__cil_tmp22, __cil_tmp26, &gl861_qt1010_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_altnum_to_altsetting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            144 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  97 (67%)
  Because of loop head:            42 (29%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (3%)
  Times precision was empty:       57 (40%)
  Times precision was {false}:     18 (13%)
  Times result was cached:         55 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (10%)
  Times result was 'false':        3 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         252
  BDD entailment checks:           60
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         87
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.72
Number of irrelevant predicates:          41 (47%)
Number of preds handled by boolean abs:   14 (16%)
  Total number of models for allsat:      14
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.577s
  Time for path formula creation:        0.563s
Time for strengthen operator:            0.017s
Time for prec operator:                  0.195s
  Time for abstraction:                  0.156s (Max:     0.021s, Count: 144)
    Boolean abstraction:                 0.038s
    Solving time:                        0.053s (Max:     0.011s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.045s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.055s

Number of path formula cache hits:   1053 (33%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.521s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          21 (count: 296, min: 0, max: 21, avg: 0.07)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.049s
Automaton transfers with branching:                0
Automaton transfer successors:                         3112 (count: 3112, min: 1, max: 1, avg: 1.00) [1 x 3112]

CPA algorithm statistics
------------------------
Number of iterations:            1024
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   1174
Max successors for one state:    2
Number of times merged:          96
Number of times stopped:         133
Number of times breaked:         5

Total time for CPA algorithm:         1.328s (Max:     0.666s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      0.323s
  Time for transfer relation:         0.854s
  Time for merge operator:            0.061s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.020s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  32 (count: 5, min: 4, max: 7, avg: 6.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.084s
  Counterexample analysis:                             0.043s (Max:     0.013s, Calls: 5)
    Refinement sat check:                              0.034s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.013s
  ARG update:                                          0.007s

Length of refined path (in blocks):                      27 (count: 5, min: 3, max: 6, avg: 5.40)
Number of affected states:                               22 (count: 5, min: 2, max: 5, avg: 4.40)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        22 (count: 5, min: 2, max: 5, avg: 4.40)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              17 (count: 5, min: 1, max: 4, avg: 3.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 248
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 181.80
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.423s
Time for refinements:                 0.095s
Average time for refinement:          0.019s
Max time for refinement:              0.037s

Code Coverage
-----------------------------
  Function coverage:      0.273
  Visited lines:          1178
  Total lines:            1474
  Line coverage:          0.799
  Visited conditions:     42
  Total conditions:       86
  Condition coverage:     0.488

CPAchecker general statistics
-----------------------------
Number of program locations:     1622
Number of CFA edges:             1663
Number of relevant variables:    214
Number of functions:             22
Number of loops:                 2
Size of reached set:             145
  Number of reached locations:   129 (8%)
    Avg states per location:     1
    Max states per location:     5 (at node N576)
  Number of reached functions:   6 (27%)
  Number of partitions:          145
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.362s
  Time for loading CPAs:          0.692s
  Time for loading parser:        0.513s
  Time for CFA construction:      2.047s
    Time for parsing file(s):     0.618s
    Time for AST to CFA:          0.697s
    Time for CFA sanity check:    0.102s
    Time for post-processing:     0.476s
      Time for var class.:        0.213s
Time for Analysis:                1.424s
CPU time for analysis:            1.420s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.789s
Total CPU time for CPAchecker:    4.780s
Time for statistics:              0.046s

Time for Garbage Collector:       0.131s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     33MB (    31 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    24 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8034MB (  7662 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
