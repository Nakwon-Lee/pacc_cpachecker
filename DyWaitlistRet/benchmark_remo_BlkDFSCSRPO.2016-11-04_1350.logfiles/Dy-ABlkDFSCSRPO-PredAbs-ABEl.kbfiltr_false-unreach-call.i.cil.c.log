scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-PredAbs-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/kbfiltr_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 2270: Dereferencing of non-pointer type PBOOLEAN  in expression *TurnTranslationOn (ASTConverter.convert, WARNING)

line 2291: Dereferencing of non-pointer type PBOOLEAN  in expression *ContinueProcessing (ASTConverter.convert, WARNING)

line 2300: Dereferencing of non-pointer type PBOOLEAN  in expression *ContinueProcessing (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KbFilter_IoCtl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            0 (0% of all post computations)
Number of strengthen sat checks:   29
  Times result was 'false':        28 (97%)
Number of coverage checks:         198
  BDD entailment checks:           0
Number of SMT sat checks:          29
  trivial:                         0
  cached:                          0

Max ABE block size:                       0
Number of predicates discovered:          0

Number of path formula cache hits:   1 (0%)

Time for post operator:                  0.377s
  Time for path formula creation:        0.375s
    Actual computation:                  0.360s
Time for strengthen operator:            1.439s
  Time for satisfiability checks:        1.426s
Time for prec operator:                  0.002s
Time for merge operator:                 0.085s
Time for coverage check:                 0.000s
Total time for SMT solver (w/o itp):     1.425s

Number of BDD nodes:                               202
Size of BDD node table:                            326251
Size of BDD node cleanup queue:                           0 (count: 2, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.058s
Automaton transfers with branching:                0
Automaton transfer successors:                         1933 (count: 1933, min: 1, max: 1, avg: 1.00) [1 x 1933]

CPA algorithm statistics
------------------------
Number of iterations:            840
Max size of waitlist:            13
Average size of waitlist:        8
Number of computed successors:   948
Max successors for one state:    2
Number of times merged:          99
Number of times stopped:         99
Number of times breaked:         1

Total time for CPA algorithm:         2.240s (Max:     2.240s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      0.040s
  Time for transfer relation:         1.986s
  Time for merge operator:            0.094s
  Time for stop operator:             0.005s
  Time for adding to reached set:     0.041s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   1 (count: 1, min: 1, max: 1, avg: 1.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.722s
  Counterexample analysis:                0.437s (Max:     0.437s, Calls: 1)
    Refinement sat check:                 0.253s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.275s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.437s
  Extracting precise counterexample:                   0.275s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     0
Number of failed refinements:         0
Max. size of reached set before ref.: 850
Max. size of reached set after ref.:  0
Avg. size of reached set before ref.: 850.00
Avg. size of reached set after ref.:  NaN

Total time for CEGAR algorithm:       2.980s
Time for refinements:                 0.740s
Average time for refinement:          0.740s
Max time for refinement:              0.740s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.266s

Code Coverage
-----------------------------
  Function coverage:      0.284
  Visited lines:          2137
  Total lines:            2370
  Line coverage:          0.902
  Visited conditions:     150
  Total conditions:       204
  Condition coverage:     0.735

CPAchecker general statistics
-----------------------------
Number of program locations:     723
Number of CFA edges:             802
Number of relevant variables:    125
Number of functions:             74
Number of loops:                 0
Size of reached set:             850
  Number of reached locations:   394 (54%)
    Avg states per location:     2
    Max states per location:     29 (at node N1)
  Number of reached functions:   21 (28%)
  Number of partitions:          850
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        10

Time for analysis setup:          2.409s
  Time for loading CPAs:          0.559s
  Time for loading parser:        0.455s
  Time for CFA construction:      1.329s
    Time for parsing file(s):     0.561s
    Time for AST to CFA:          0.365s
    Time for CFA sanity check:    0.038s
    Time for post-processing:     0.174s
      Time for var class.:        0.000s
Time for Analysis:                4.253s
CPU time for analysis:            4.260s
Total time for CPAchecker:        6.665s
Total CPU time for CPAchecker:    6.670s

Time for Garbage Collector:       0.255s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                157MB (   149 MiB) max;     62MB (    59 MiB) avg;    168MB (   160 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     29MB (    27 MiB) avg;     40MB (    38 MiB) peak
Used in PS Old Gen pool:          28MB (    27 MiB) max;     15MB (    14 MiB) avg;     28MB (    27 MiB) peak
Allocated heap memory:           229MB (   219 MiB) max;    195MB (   186 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:  10417MB (  9935 MiB) max;  10385MB (  9904 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1635) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
