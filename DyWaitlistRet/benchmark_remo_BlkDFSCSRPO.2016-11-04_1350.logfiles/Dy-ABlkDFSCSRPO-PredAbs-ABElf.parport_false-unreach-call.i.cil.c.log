scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/parport_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 6170: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6171: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6172: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6221: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6245: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6698: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6699: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6700: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6763: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6843: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8237: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8248: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8558: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8559: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8567: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8568: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8576: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9098: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9393: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9423: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        4 (count: 1, min: 4, max: 4, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoDisconnectInterrupt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:       10 (count: 2, min: 4, max: 6, avg: 5.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            96 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  86 (90%)
  Because of loop head:            10 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       20 (21%)
  Times precision was {false}:     19 (20%)
  Times result was cached:         6 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      51 (53%)
  Times result was 'false':        7 (7%)
Number of strengthen sat checks:   4
  Times result was 'false':        0 (0%)
Number of coverage checks:         134
  BDD entailment checks:           6
Number of SMT sat checks:          4
  trivial:                         1
  cached:                          0

Max ABE block size:                       13
Number of predicates discovered:          9
Number of abstraction locations:          11
Max number of predicates per location:    8
Avg number of predicates per location:    6
Total predicates per abstraction:         427
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 6.10
Number of irrelevant predicates:          148 (35%)
Number of preds handled by boolean abs:   279 (65%)
  Total number of models for allsat:      407
  Max number of models for allsat:        17
  Avg number of models for allsat:        7.98

Number of path formula cache hits:   437 (28%)

Time for post operator:                  0.392s
  Time for path formula creation:        0.378s
    Actual computation:                  0.464s
Time for strengthen operator:            0.006s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.753s
  Time for abstraction:                  0.733s (Max:     0.081s, Count: 96)
    Boolean abstraction:                 0.336s
    Solving time:                        0.067s (Max:     0.028s)
    Model enumeration time:              0.171s
    Time for BDD construction:           0.030s (Max:     0.007s)
Time for merge operator:                 0.021s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.238s

Number of BDD nodes:                               817
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                           0 (count: 337, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                         2167 (count: 2167, min: 1, max: 1, avg: 1.00) [1 x 2167]

CPA algorithm statistics
------------------------
Number of iterations:            521
Max size of waitlist:            25
Average size of waitlist:        12
Number of computed successors:   637
Max successors for one state:    2
Number of times merged:          64
Number of times stopped:         70
Number of times breaked:         4

Total time for CPA algorithm:         1.312s (Max:     0.450s)
  Time for choose from waitlist:      0.002s
  Time for precision adjustment:      0.773s
  Time for transfer relation:         0.449s
  Time for merge operator:            0.036s
  Time for stop operator:             0.003s
  Time for adding to reached set:     0.027s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  48 (count: 4, min: 9, max: 15, avg: 12.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.698s
  Counterexample analysis:                0.360s (Max:     0.125s, Calls: 4)
    Refinement sat check:                 0.185s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.316s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.360s
  Extracting precise counterexample:                   0.316s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.001s
  Precision update:                                    0.001s
  ARG update:                                          0.002s

Length of refined path (in blocks):                      22 (count: 2, min: 8, max: 14, avg: 11.00)
Number of affected states:                               10 (count: 2, min: 4, max: 6, avg: 5.00)
Length (states) of path with itp 'true':                 10 (count: 2, min: 3, max: 7, avg: 5.00)
Length (states) of path with itp non-trivial itp:        10 (count: 2, min: 4, max: 6, avg: 5.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               8 (count: 2, min: 3, max: 5, avg: 4.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 248
Max. size of reached set after ref.:  125
Avg. size of reached set before ref.: 187.50
Avg. size of reached set after ref.:  63.00

Total time for CEGAR algorithm:       2.049s
Time for refinements:                 0.736s
Average time for refinement:          0.184s
Max time for refinement:              0.454s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.875s

Code Coverage
-----------------------------
  Function coverage:      0.088
  Visited lines:          1917
  Total lines:            6405
  Line coverage:          0.299
  Visited conditions:     62
  Total conditions:       1150
  Condition coverage:     0.054

CPAchecker general statistics
-----------------------------
Number of program locations:     3326
Number of CFA edges:             4037
Number of relevant variables:    894
Number of functions:             181
Number of loops:                 37
Size of reached set:             242
  Number of reached locations:   167 (5%)
    Avg states per location:     1
    Max states per location:     6 (at node N1)
  Number of reached functions:   16 (9%)
  Number of partitions:          242
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        13

Time for analysis setup:          4.545s
  Time for loading CPAs:          0.837s
  Time for loading parser:        0.489s
  Time for CFA construction:      3.159s
    Time for parsing file(s):     0.806s
    Time for AST to CFA:          1.187s
    Time for CFA sanity check:    0.119s
    Time for post-processing:     0.715s
      Time for var class.:        0.000s
Time for Analysis:                2.924s
CPU time for analysis:            2.920s
Total time for CPAchecker:        7.473s
Total CPU time for CPAchecker:    7.470s

Time for Garbage Collector:       0.254s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                125MB (   119 MiB) max;     51MB (    48 MiB) avg;    140MB (   133 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     27MB (    26 MiB) avg;     41MB (    39 MiB) peak
Used in PS Old Gen pool:          22MB (    21 MiB) max;     12MB (    11 MiB) avg;     27MB (    26 MiB) peak
Allocated heap memory:           227MB (   217 MiB) max;    179MB (   171 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10383MB (  9902 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 2244) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
