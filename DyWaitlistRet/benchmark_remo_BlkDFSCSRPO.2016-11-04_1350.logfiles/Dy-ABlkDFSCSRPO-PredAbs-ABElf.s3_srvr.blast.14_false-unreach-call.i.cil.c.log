scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.14_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        4 (count: 2, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 3, min: 1, max: 4, avg: 2.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       13 (count: 4, min: 1, max: 5, avg: 3.25)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            38 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21 (55%)
  Because of loop head:            17 (45%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       18 (47%)
  Times precision was {false}:     1 (3%)
  Times result was cached:         2 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (45%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   17
  Times result was 'false':        11 (65%)
Number of coverage checks:         2460
  BDD entailment checks:           36
Number of SMT sat checks:          17
  trivial:                         0
  cached:                          0

Max ABE block size:                       52
Number of predicates discovered:          64
Number of abstraction locations:          3
Max number of predicates per location:    63
Avg number of predicates per location:    23
Total predicates per abstraction:         595
Max number of predicates per abstraction: 63
Avg number of predicates per abstraction: 33.06
Number of irrelevant predicates:          2 (0%)
Number of preds handled by boolean abs:   593 (100%)
  Total number of models for allsat:      123
  Max number of models for allsat:        62
  Avg number of models for allsat:        7.24

Number of path formula cache hits:   4149 (59%)

Time for post operator:                  0.893s
  Time for path formula creation:        0.858s
    Actual computation:                  0.830s
Time for strengthen operator:            0.196s
  Time for satisfiability checks:        0.175s
Time for prec operator:                  2.761s
  Time for abstraction:                  2.757s (Max:     0.532s, Count: 38)
    Boolean abstraction:                 2.024s
    Solving time:                        0.500s (Max:     0.074s)
    Model enumeration time:              1.247s
    Time for BDD construction:           0.123s (Max:     0.030s)
Time for merge operator:                 0.225s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.922s

Number of BDD nodes:                               44055
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                        2753 (count: 1857, min: 0, max: 1706, avg: 1.48)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.077s
Automaton transfers with branching:                0
Automaton transfer successors:                         8969 (count: 8969, min: 1, max: 1, avg: 1.00) [1 x 8969]

CPA algorithm statistics
------------------------
Number of iterations:            4335
Max size of waitlist:            39
Average size of waitlist:        21
Number of computed successors:   5754
Max successors for one state:    2
Number of times merged:          1212
Number of times stopped:         1223
Number of times breaked:         6

Total time for CPA algorithm:         4.858s (Max:     1.891s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      2.821s
  Time for transfer relation:         1.411s
  Time for merge operator:            0.346s
  Time for stop operator:             0.039s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  29 (count: 6, min: 3, max: 8, avg: 4.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.970s
  Counterexample analysis:                3.591s (Max:     1.136s, Calls: 6)
    Refinement sat check:                 1.871s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.305s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   3.591s
  Extracting precise counterexample:                   0.305s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.001s
  ARG update:                                          0.035s

Length of refined path (in blocks):                      18 (count: 4, min: 3, max: 6, avg: 4.50)
Number of affected states:                               13 (count: 4, min: 1, max: 5, avg: 3.25)
Length (states) of path with itp 'true':                  1 (count: 4, min: 0, max: 1, avg: 0.25)
Length (states) of path with itp non-trivial itp:        13 (count: 4, min: 1, max: 5, avg: 3.25)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           9 (count: 4, min: 0, max: 4, avg: 2.25)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1801
Max. size of reached set after ref.:  40
Avg. size of reached set before ref.: 765.67
Avg. size of reached set after ref.:  12.40

Total time for CEGAR algorithm:       8.853s
Time for refinements:                 3.994s
Average time for refinement:          0.665s
Max time for refinement:              1.447s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.216s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1654
  Total lines:            1684
  Line coverage:          0.982
  Visited conditions:     210
  Total conditions:       218
  Condition coverage:     0.963

CPAchecker general statistics
-----------------------------
Number of program locations:     399
Number of CFA edges:             505
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             1801
  Number of reached locations:   367 (92%)
    Avg states per location:     4
    Max states per location:     6 (at node N36)
  Number of reached functions:   2 (40%)
  Number of partitions:          1796
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N97 (before lines 1141-1744), Function ssl3_accept called from node N33, stack depth 2 [7bc6d27a], stack [main, ssl3_accept], Init])
  Number of target states:       1
  Size of final wait list        34

Time for analysis setup:          2.150s
  Time for loading CPAs:          0.509s
  Time for loading parser:        0.490s
  Time for CFA construction:      1.086s
    Time for parsing file(s):     0.433s
    Time for AST to CFA:          0.262s
    Time for CFA sanity check:    0.018s
    Time for post-processing:     0.167s
      Time for var class.:        0.000s
Time for Analysis:               10.087s
CPU time for analysis:           10.090s
Total time for CPAchecker:       12.240s
Total CPU time for CPAchecker:   12.230s

Time for Garbage Collector:       0.232s (in 8 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                229MB (   219 MiB) max;     98MB (    94 MiB) avg;    230MB (   219 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     33MB (    31 MiB) avg;     44MB (    42 MiB) peak
Used in PS Old Gen pool:          22MB (    21 MiB) max;     18MB (    17 MiB) avg;     22MB (    21 MiB) peak
Allocated heap memory:           304MB (   290 MiB) max;    242MB (   231 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:  10416MB (  9933 MiB) max;  10396MB (  9914 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1755) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
