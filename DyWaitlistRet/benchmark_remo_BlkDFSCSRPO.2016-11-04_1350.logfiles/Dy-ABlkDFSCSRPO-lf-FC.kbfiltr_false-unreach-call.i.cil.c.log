scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-lf-FC -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/kbfiltr_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 2270: Dereferencing of non-pointer type PBOOLEAN  in expression *TurnTranslationOn (ASTConverter.convert, WARNING)

line 2291: Dereferencing of non-pointer type PBOOLEAN  in expression *ContinueProcessing (ASTConverter.convert, WARNING)

line 2300: Dereferencing of non-pointer type PBOOLEAN  in expression *ContinueProcessing (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KbFilter_IoCtl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!number of affected states:        4 (count: 1, min: 4, max: 4, avg: 4.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        4 (count: 2, min: 0, max: 4, avg: 2.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:        4 (count: 3, min: 0, max: 4, avg: 1.33)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        4 (count: 4, min: 0, max: 4, avg: 1.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        4 (count: 5, min: 0, max: 4, avg: 0.80)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!number of affected states:       13 (count: 6, min: 0, max: 9, avg: 2.17)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       14 (count: 7, min: 0, max: 9, avg: 2.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 1
successed forced covering: 1
removed coverage count: 2
num of affected states: 3
attempting forced covering: 2
cached!attempting forced covering: 3
cached!cached!attempting forced covering: 4
successed forced covering: 2
removed coverage count: 3
num of affected states: 5
cached!attempting forced covering: 5
cached!attempting forced covering: 6
refinement st 
cached!cached!number of affected states:       17 (count: 8, min: 0, max: 9, avg: 2.13)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       20 (count: 9, min: 0, max: 9, avg: 2.22)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       25 (count: 10, min: 0, max: 9, avg: 2.50)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       26 (count: 11, min: 0, max: 9, avg: 2.36)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       30 (count: 12, min: 0, max: 9, avg: 2.50)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       31 (count: 13, min: 0, max: 9, avg: 2.38)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 7
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       50 (count: 14, min: 0, max: 19, avg: 3.57)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       55 (count: 15, min: 0, max: 19, avg: 3.67)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       56 (count: 16, min: 0, max: 19, avg: 3.50)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       58 (count: 17, min: 0, max: 19, avg: 3.41)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       59 (count: 18, min: 0, max: 19, avg: 3.28)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       63 (count: 19, min: 0, max: 19, avg: 3.32)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       67 (count: 20, min: 0, max: 19, avg: 3.35)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       68 (count: 21, min: 0, max: 19, avg: 3.24)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       70 (count: 22, min: 0, max: 19, avg: 3.18)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       71 (count: 23, min: 0, max: 19, avg: 3.09)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!number of affected states:       75 (count: 24, min: 0, max: 19, avg: 3.13)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       79 (count: 25, min: 0, max: 19, avg: 3.16)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       79 (count: 26, min: 0, max: 19, avg: 3.04)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       80 (count: 27, min: 0, max: 19, avg: 2.96)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       81 (count: 28, min: 0, max: 19, avg: 2.89)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 8
successed forced covering: 3
removed coverage count: 3
num of affected states: 8
refinement st 
cached!cached!number of affected states:       81 (count: 29, min: 0, max: 19, avg: 2.79)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       82 (count: 30, min: 0, max: 19, avg: 2.73)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       83 (count: 31, min: 0, max: 19, avg: 2.68)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!attempting forced covering: 9
successed forced covering: 4
removed coverage count: 3
num of affected states: 11
refinement st 
cached!cached!number of affected states:       83 (count: 32, min: 0, max: 19, avg: 2.59)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       83 (count: 33, min: 0, max: 19, avg: 2.52)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       89 (count: 34, min: 0, max: 19, avg: 2.62)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       90 (count: 35, min: 0, max: 19, avg: 2.57)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       90 (count: 36, min: 0, max: 19, avg: 2.50)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       90 (count: 37, min: 0, max: 19, avg: 2.43)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       95 (count: 38, min: 0, max: 19, avg: 2.50)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 10
cached!attempting forced covering: 11
successed forced covering: 5
cached!cached!removed coverage count: 6
num of affected states: 13
cached!attempting forced covering: 12
refinement st 
cached!cached!number of affected states:      101 (count: 39, min: 0, max: 19, avg: 2.59)
removed coverage count: 6
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      110 (count: 40, min: 0, max: 19, avg: 2.75)
removed coverage count: 6
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!attempting forced covering: 13
successed forced covering: 6
cached!cached!removed coverage count: 6
num of affected states: 24
cached!refinement st 
cached!cached!number of affected states:      112 (count: 41, min: 0, max: 19, avg: 2.73)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 14
successed forced covering: 7
cached!cached!cached!removed coverage count: 7
num of affected states: 27
cached!cached!attempting forced covering: 15
successed forced covering: 8
cached!removed coverage count: 9
num of affected states: 32
attempting forced covering: 16
cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      121 (count: 42, min: 0, max: 19, avg: 2.88)
removed coverage count: 9
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 17
cached!cached!attempting forced covering: 18
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            179 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  179 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       179 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   43
  Times result was 'false':        0 (0%)
Number of coverage checks:         469
  BDD entailment checks:           63
Number of SMT sat checks:          349
  trivial:                         67
  cached:                          145

Max ABE block size:                       17
Number of predicates discovered:          46
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  0.507s
  Time for path formula creation:        0.479s
Time for strengthen operator:            0.014s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.142s
  Time for abstraction:                  0.107s (Max:     0.016s, Count: 179)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.059s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.170s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.049s
Automaton transfers with branching:                0
Automaton transfer successors:                         3001 (count: 3001, min: 1, max: 1, avg: 1.00) [1 x 3001]

Predicate Forced Covering statistics
------------------------------------
Attempted forced coverings:             18
Successful forced coverings:            8 (44%)
No of times elment was already covered: 1

CPA algorithm statistics
------------------------
Number of iterations:            1403
Max size of waitlist:            22
Average size of waitlist:        11
Number of computed successors:   1676
Max successors for one state:    2
Number of times merged:          203
Number of times stopped:         203
Number of times breaked:         43

Total time for CPA algorithm:         1.393s (Max:     0.298s)
  Time for choose from waitlist:      0.025s
  Time for forced covering:           0.285s
  Time for precision adjustment:      0.176s
  Time for transfer relation:         0.700s
  Time for merge operator:            0.074s
  Time for stop operator:             0.013s
  Time for adding to reached set:     0.034s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 840 (count: 43, min: 12, max: 30, avg: 19.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.086s
  Counterexample analysis:                1.522s (Max:     0.220s, Calls: 43)
    Refinement sat check:                 0.877s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.253s
  Path-formulas extraction:                            0.003s
  Building the counterexample trace:                   1.523s
  Extracting precise counterexample:                   0.253s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.064s
  Checking whether itp is new:            0.125s
  Coverage checks:                        0.029s
  ARG update:                             0.009s

Number of abstractions during refinements:  202
Length of refined path (in blocks):                     735 (count: 42, min: 11, max: 27, avg: 17.50)
Number of affected states:                              121 (count: 42, min: 0, max: 19, avg: 2.88)
Length (states) of path with itp 'true':                461 (count: 42, min: 1, max: 21, avg: 10.98)
Length (states) of path with itp non-trivial itp:       232 (count: 42, min: 1, max: 25, avg: 5.52)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          33 (count: 42, min: 0, max: 8, avg: 0.79)
Equal non-trivial interpolants along paths:             157 (count: 42, min: 0, max: 19, avg: 3.74)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 922
Max. size of reached set after ref.:  879
Avg. size of reached set before ref.: 549.77
Avg. size of reached set after ref.:  527.76

Total time for CEGAR algorithm:       3.649s
Time for refinements:                 2.223s
Average time for refinement:          0.051s
Max time for refinement:              0.343s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.961s

Code Coverage
-----------------------------
  Function coverage:      0.284
  Visited lines:          2086
  Total lines:            2370
  Line coverage:          0.880
  Visited conditions:     144
  Total conditions:       204
  Condition coverage:     0.706

CPAchecker general statistics
-----------------------------
Number of program locations:     723
Number of CFA edges:             802
Number of relevant variables:    125
Number of functions:             74
Number of loops:                 0
Size of reached set:             922
  Number of reached locations:   370 (51%)
    Avg states per location:     2
    Max states per location:     8 (at node N575)
  Number of reached functions:   21 (28%)
  Number of partitions:          906
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N657 (before line 2445), Function main called from node N576, stack depth 1 [f478a81], stack [main], Init])
  Number of target states:       1
  Size of final wait list        10

Time for analysis setup:          2.482s
  Time for loading CPAs:          0.588s
  Time for loading parser:        0.423s
  Time for CFA construction:      1.399s
    Time for parsing file(s):     0.571s
    Time for AST to CFA:          0.422s
    Time for CFA sanity check:    0.040s
    Time for post-processing:     0.167s
      Time for var class.:        0.000s
Time for Analysis:                4.610s
CPU time for analysis:            4.610s
Total time for CPAchecker:        7.095s
Total CPU time for CPAchecker:    7.090s

Time for Garbage Collector:       0.201s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                146MB (   139 MiB) max;     50MB (    48 MiB) avg;    154MB (   147 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     29MB (    28 MiB) avg;     41MB (    40 MiB) peak
Used in PS Old Gen pool:          14MB (    14 MiB) max;     10MB (     9 MiB) avg;     14MB (    14 MiB) peak
Allocated heap memory:           213MB (   203 MiB) max;    187MB (   178 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:  10415MB (  9932 MiB) max;  10388MB (  9906 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1635) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
