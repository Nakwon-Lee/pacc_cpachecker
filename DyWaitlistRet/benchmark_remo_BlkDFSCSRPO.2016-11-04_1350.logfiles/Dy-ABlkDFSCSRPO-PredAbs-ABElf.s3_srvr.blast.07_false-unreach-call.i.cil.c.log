scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.07_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        2 (count: 1, min: 2, max: 2, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        6 (count: 2, min: 2, max: 4, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       12 (count: 3, min: 2, max: 6, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            37 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19 (51%)
  Because of loop head:            18 (49%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       18 (49%)
  Times precision was {false}:     1 (3%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (49%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   18
  Times result was 'false':        13 (72%)
Number of coverage checks:         2977
  BDD entailment checks:           45
Number of SMT sat checks:          18
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          43
Number of abstraction locations:          3
Max number of predicates per location:    42
Avg number of predicates per location:    17
Total predicates per abstraction:         405
Max number of predicates per abstraction: 42
Avg number of predicates per abstraction: 21.32
Number of irrelevant predicates:          4 (1%)
Number of preds handled by boolean abs:   401 (99%)
  Total number of models for allsat:      139
  Max number of models for allsat:        35
  Avg number of models for allsat:        7.72

Number of path formula cache hits:   5261 (64%)

Time for post operator:                  0.859s
  Time for path formula creation:        0.818s
    Actual computation:                  0.799s
Time for strengthen operator:            0.219s
  Time for satisfiability checks:        0.189s
Time for prec operator:                  2.537s
  Time for abstraction:                  2.529s (Max:     0.339s, Count: 37)
    Boolean abstraction:                 1.842s
    Solving time:                        0.471s (Max:     0.103s)
    Model enumeration time:              1.271s
    Time for BDD construction:           0.051s (Max:     0.016s)
Time for merge operator:                 0.209s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.930s

Number of BDD nodes:                               10281
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                        2247 (count: 1393, min: 0, max: 1708, avg: 1.61)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.077s
Automaton transfers with branching:                0
Automaton transfer successors:                        10274 (count: 10274, min: 1, max: 1, avg: 1.00) [1 x 10274]

CPA algorithm statistics
------------------------
Number of iterations:            5024
Max size of waitlist:            39
Average size of waitlist:        21
Number of computed successors:   6610
Max successors for one state:    2
Number of times merged:          1466
Number of times stopped:         1479
Number of times breaked:         5

Total time for CPA algorithm:         4.720s (Max:     1.512s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      2.577s
  Time for transfer relation:         1.459s
  Time for merge operator:            0.339s
  Time for stop operator:             0.065s
  Time for adding to reached set:     0.119s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  28 (count: 5, min: 3, max: 8, avg: 5.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.132s
  Counterexample analysis:                2.748s (Max:     0.942s, Calls: 5)
    Refinement sat check:                 1.298s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.303s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   2.748s
  Extracting precise counterexample:                   0.303s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.010s
  ARG update:                                          0.034s

Length of refined path (in blocks):                      17 (count: 3, min: 4, max: 7, avg: 5.67)
Number of affected states:                               12 (count: 3, min: 2, max: 6, avg: 4.00)
Length (states) of path with itp 'true':                  2 (count: 3, min: 0, max: 1, avg: 0.67)
Length (states) of path with itp non-trivial itp:        12 (count: 3, min: 2, max: 6, avg: 4.00)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           9 (count: 3, min: 1, max: 5, avg: 3.00)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1795
Max. size of reached set after ref.:  41
Avg. size of reached set before ref.: 1044.20
Avg. size of reached set after ref.:  22.25

Total time for CEGAR algorithm:       7.898s
Time for refinements:                 3.176s
Average time for refinement:          0.635s
Max time for refinement:              1.174s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         2.209s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1630
  Total lines:            1660
  Line coverage:          0.982
  Visited conditions:     200
  Total conditions:       208
  Condition coverage:     0.962

CPAchecker general statistics
-----------------------------
Number of program locations:     385
Number of CFA edges:             486
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             1795
  Number of reached locations:   353 (92%)
    Avg states per location:     5
    Max states per location:     6 (at node N36)
  Number of reached functions:   2 (40%)
  Number of partitions:          1790
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N97 (before lines 1141-1720), Function ssl3_accept called from node N33, stack depth 2 [782bf610], stack [main, ssl3_accept], Init])
  Number of target states:       1
  Size of final wait list        23

Time for analysis setup:          2.046s
  Time for loading CPAs:          0.492s
  Time for loading parser:        0.451s
  Time for CFA construction:      1.046s
    Time for parsing file(s):     0.425s
    Time for AST to CFA:          0.250s
    Time for CFA sanity check:    0.030s
    Time for post-processing:     0.138s
      Time for var class.:        0.000s
Time for Analysis:               10.118s
CPU time for analysis:           10.120s
Total time for CPAchecker:       12.168s
Total CPU time for CPAchecker:   12.160s

Time for Garbage Collector:       0.296s (in 9 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                214MB (   204 MiB) max;     91MB (    86 MiB) avg;    227MB (   217 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     33MB (    32 MiB) avg;     44MB (    42 MiB) peak
Used in PS Old Gen pool:          23MB (    22 MiB) max;     17MB (    16 MiB) avg;     23MB (    22 MiB) peak
Allocated heap memory:           359MB (   343 MiB) max;    240MB (   229 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10398MB (  9916 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1731) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
