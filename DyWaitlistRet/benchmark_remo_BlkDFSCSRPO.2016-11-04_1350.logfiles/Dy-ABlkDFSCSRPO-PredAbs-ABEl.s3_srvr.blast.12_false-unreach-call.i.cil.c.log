scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-PredAbs-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.12_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 2, min: 1, max: 2, avg: 1.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        6 (count: 3, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       10 (count: 4, min: 1, max: 4, avg: 2.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            17 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (6%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (94%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   17
  Times result was 'false':        11 (65%)
Number of coverage checks:         2353
  BDD entailment checks:           25
Number of SMT sat checks:          17
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          67
Number of abstraction locations:          2
Max number of predicates per location:    66
Avg number of predicates per location:    34
Total predicates per abstraction:         584
Max number of predicates per abstraction: 66
Avg number of predicates per abstraction: 36.50
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   584 (100%)
  Total number of models for allsat:      287
  Max number of models for allsat:        116
  Avg number of models for allsat:        17.94

Number of path formula cache hits:   3915 (58%)

Time for post operator:                  0.760s
  Time for path formula creation:        0.711s
    Actual computation:                  0.738s
Time for strengthen operator:            0.158s
  Time for satisfiability checks:        0.136s
Time for prec operator:                  3.474s
  Time for abstraction:                  3.471s (Max:     0.842s, Count: 17)
    Boolean abstraction:                 2.832s
    Solving time:                        0.629s (Max:     0.155s)
    Model enumeration time:              1.970s
    Time for BDD construction:           0.120s (Max:     0.042s)
Time for merge operator:                 0.212s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     2.734s

Number of BDD nodes:                               52873
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                        1499 (count: 1891, min: 0, max: 711, avg: 0.79)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.086s
Automaton transfers with branching:                0
Automaton transfer successors:                         8558 (count: 8558, min: 1, max: 1, avg: 1.00) [1 x 8558]

CPA algorithm statistics
------------------------
Number of iterations:            4167
Max size of waitlist:            38
Average size of waitlist:        20
Number of computed successors:   5517
Max successors for one state:    2
Number of times merged:          1164
Number of times stopped:         1164
Number of times breaked:         6

Total time for CPA algorithm:         5.535s (Max:     2.368s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:      3.560s
  Time for transfer relation:         1.224s
  Time for merge operator:            0.345s
  Time for stop operator:             0.057s
  Time for adding to reached set:     0.126s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  23 (count: 6, min: 2, max: 7, avg: 3.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.899s
  Counterexample analysis:                3.536s (Max:     1.338s, Calls: 6)
    Refinement sat check:                 1.851s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.304s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   3.536s
  Extracting precise counterexample:                   0.304s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.002s
  ARG update:                                          0.031s

Length of refined path (in blocks):                      14 (count: 4, min: 2, max: 5, avg: 3.50)
Number of affected states:                               10 (count: 4, min: 1, max: 4, avg: 2.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        10 (count: 4, min: 1, max: 4, avg: 2.50)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           6 (count: 4, min: 0, max: 3, avg: 1.50)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1776
Max. size of reached set after ref.:  41
Avg. size of reached set before ref.: 753.17
Avg. size of reached set after ref.:  33.00

Total time for CEGAR algorithm:       9.475s
Time for refinements:                 3.930s
Average time for refinement:          0.655s
Max time for refinement:              1.358s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.180s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1643
  Total lines:            1672
  Line coverage:          0.983
  Visited conditions:     204
  Total conditions:       212
  Condition coverage:     0.962

CPAchecker general statistics
-----------------------------
Number of program locations:     393
Number of CFA edges:             496
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             1776
  Number of reached locations:   362 (92%)
    Avg states per location:     4
    Max states per location:     6 (at node N25)
  Number of reached functions:   2 (40%)
  Number of partitions:          1771
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N97 (before lines 1141-1732), Function ssl3_accept called from node N33, stack depth 2 [71c27ee8], stack [main, ssl3_accept], Init])
  Number of target states:       1
  Size of final wait list        32

Time for analysis setup:          2.141s
  Time for loading CPAs:          0.539s
  Time for loading parser:        0.468s
  Time for CFA construction:      1.068s
    Time for parsing file(s):     0.419s
    Time for AST to CFA:          0.260s
    Time for CFA sanity check:    0.019s
    Time for post-processing:     0.173s
      Time for var class.:        0.000s
Time for Analysis:               10.657s
CPU time for analysis:           10.660s
Total time for CPAchecker:       12.802s
Total CPU time for CPAchecker:   12.800s

Time for Garbage Collector:       0.277s (in 9 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                209MB (   199 MiB) max;     83MB (    79 MiB) avg;    214MB (   204 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     33MB (    31 MiB) avg;     42MB (    40 MiB) peak
Used in PS Old Gen pool:          17MB (    16 MiB) max;     15MB (    14 MiB) avg;     18MB (    17 MiB) peak
Allocated heap memory:           350MB (   334 MiB) max;    241MB (   230 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10398MB (  9917 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1743) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
