scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-lf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/parport_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 6170: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6171: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6172: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6221: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6245: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6698: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6699: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6700: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6763: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6843: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8237: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8248: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8558: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8559: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8567: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8568: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8576: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9098: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9393: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9423: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!cached!number of affected states:        4 (count: 1, min: 4, max: 4, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoDisconnectInterrupt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!cached!cached!cached!number of affected states:       10 (count: 2, min: 4, max: 6, avg: 5.00)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       26 (count: 3, min: 4, max: 16, avg: 8.67)
removed coverage count: 4
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       31 (count: 4, min: 4, max: 16, avg: 7.75)
removed coverage count: 4
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       37 (count: 5, min: 4, max: 16, avg: 7.40)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            74 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  61 (82%)
  Because of loop head:            13 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       74 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   6
  Times result was 'false':        0 (0%)
Number of coverage checks:         152
  BDD entailment checks:           30
Number of SMT sat checks:          91
  trivial:                         20
  cached:                          55

Max ABE block size:                       13
Number of predicates discovered:          7
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  0.248s
  Time for path formula creation:        0.224s
Time for strengthen operator:            0.002s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.032s
  Time for abstraction:                  0.021s (Max:     0.012s, Count: 74)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.003s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.024s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                         1351 (count: 1351, min: 1, max: 1, avg: 1.00) [1 x 1351]

CPA algorithm statistics
------------------------
Number of iterations:            441
Max size of waitlist:            30
Average size of waitlist:        17
Number of computed successors:   529
Max successors for one state:    2
Number of times merged:          61
Number of times stopped:         61
Number of times breaked:         6

Total time for CPA algorithm:         0.654s (Max:     0.432s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      0.054s
  Time for transfer relation:         0.487s
  Time for merge operator:            0.025s
  Time for stop operator:             0.011s
  Time for adding to reached set:     0.034s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 102 (count: 6, min: 9, max: 23, avg: 17.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.962s
  Counterexample analysis:                0.535s (Max:     0.169s, Calls: 6)
    Refinement sat check:                 0.341s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.370s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.536s
  Extracting precise counterexample:                   0.370s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.009s
  Checking whether itp is new:            0.009s
  Coverage checks:                        0.020s
  ARG update:                             0.005s

Number of abstractions during refinements:  55
Length of refined path (in blocks):                      79 (count: 5, min: 8, max: 21, avg: 15.80)
Number of affected states:                               37 (count: 5, min: 4, max: 16, avg: 7.40)
Length (states) of path with itp 'true':                 10 (count: 5, min: 0, max: 7, avg: 2.00)
Length (states) of path with itp non-trivial itp:        64 (count: 5, min: 4, max: 20, avg: 12.80)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 5, min: 0, max: 3, avg: 1.80)
Equal non-trivial interpolants along paths:              50 (count: 5, min: 3, max: 16, avg: 10.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 372
Max. size of reached set after ref.:  330
Avg. size of reached set before ref.: 289.33
Avg. size of reached set after ref.:  253.40

Total time for CEGAR algorithm:       1.660s
Time for refinements:                 1.002s
Average time for refinement:          0.167s
Max time for refinement:              0.547s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.937s

Code Coverage
-----------------------------
  Function coverage:      0.088
  Visited lines:          1917
  Total lines:            6405
  Line coverage:          0.299
  Visited conditions:     62
  Total conditions:       1150
  Condition coverage:     0.054

CPAchecker general statistics
-----------------------------
Number of program locations:     3326
Number of CFA edges:             4037
Number of relevant variables:    894
Number of functions:             181
Number of loops:                 37
Size of reached set:             335
  Number of reached locations:   167 (5%)
    Avg states per location:     2
    Max states per location:     11 (at node N1)
  Number of reached functions:   16 (9%)
  Number of partitions:          319
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N235 (before lines 2710-2726), Function PptUnload called from node N4942, stack depth 2 [370c1968], stack [main, PptUnload], Init])
  Number of target states:       1
  Size of final wait list        19

Time for analysis setup:          4.364s
  Time for loading CPAs:          0.648s
  Time for loading parser:        0.486s
  Time for CFA construction:      3.138s
    Time for parsing file(s):     0.845s
    Time for AST to CFA:          1.289s
    Time for CFA sanity check:    0.135s
    Time for post-processing:     0.656s
      Time for var class.:        0.000s
Time for Analysis:                2.597s
CPU time for analysis:            2.590s
Total time for CPAchecker:        6.964s
Total CPU time for CPAchecker:    6.950s

Time for Garbage Collector:       0.259s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                106MB (   101 MiB) max;     47MB (    45 MiB) avg;    118MB (   113 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     26MB (    25 MiB) avg;     39MB (    37 MiB) peak
Used in PS Old Gen pool:          22MB (    21 MiB) max;     12MB (    11 MiB) avg;     23MB (    22 MiB) peak
Allocated heap memory:           227MB (   217 MiB) max;    177MB (   169 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  10413MB (  9931 MiB) max;  10381MB (  9901 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 2244) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
