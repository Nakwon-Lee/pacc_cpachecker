scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-lf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/diskperf_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 3030: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Extern function KeQueryPerformanceCounter((void *)0) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!cached!cached!cached!number of affected states:        6 (count: 1, min: 6, max: 6, avg: 6.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:        9 (count: 2, min: 3, max: 6, avg: 4.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       12 (count: 3, min: 3, max: 6, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       14 (count: 4, min: 2, max: 6, avg: 3.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       21 (count: 5, min: 2, max: 7, avg: 4.20)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       26 (count: 6, min: 2, max: 7, avg: 4.33)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       28 (count: 7, min: 2, max: 7, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       29 (count: 8, min: 1, max: 7, avg: 3.63)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       31 (count: 9, min: 1, max: 7, avg: 3.44)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       33 (count: 10, min: 1, max: 7, avg: 3.30)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       33 (count: 11, min: 0, max: 7, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       34 (count: 12, min: 0, max: 7, avg: 2.83)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       36 (count: 13, min: 0, max: 7, avg: 2.77)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       43 (count: 14, min: 0, max: 7, avg: 3.07)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       47 (count: 15, min: 0, max: 7, avg: 3.13)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       49 (count: 16, min: 0, max: 7, avg: 3.06)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       51 (count: 17, min: 0, max: 7, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       54 (count: 18, min: 0, max: 7, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       57 (count: 19, min: 0, max: 7, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       58 (count: 20, min: 0, max: 7, avg: 2.90)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       61 (count: 21, min: 0, max: 7, avg: 2.90)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!number of affected states:       67 (count: 22, min: 0, max: 7, avg: 3.05)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!number of affected states:       73 (count: 23, min: 0, max: 7, avg: 3.17)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!number of affected states:       76 (count: 24, min: 0, max: 7, avg: 3.17)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!number of affected states:       78 (count: 25, min: 0, max: 7, avg: 3.12)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       80 (count: 26, min: 0, max: 7, avg: 3.08)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       81 (count: 27, min: 0, max: 7, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       87 (count: 28, min: 0, max: 7, avg: 3.11)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       88 (count: 29, min: 0, max: 7, avg: 3.03)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       88 (count: 30, min: 0, max: 7, avg: 2.93)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!number of affected states:       88 (count: 31, min: 0, max: 7, avg: 2.84)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       97 (count: 32, min: 0, max: 9, avg: 3.03)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:      103 (count: 33, min: 0, max: 9, avg: 3.12)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:      105 (count: 34, min: 0, max: 9, avg: 3.09)
cached!removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!number of affected states:      117 (count: 35, min: 0, max: 12, avg: 3.34)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:      119 (count: 36, min: 0, max: 12, avg: 3.31)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!number of affected states:      121 (count: 37, min: 0, max: 12, avg: 3.27)
removed coverage count: 6
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      126 (count: 38, min: 0, max: 12, avg: 3.32)
removed coverage count: 6
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:      129 (count: 39, min: 0, max: 12, avg: 3.31)
removed coverage count: 6
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            134 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  134 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       134 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   40
  Times result was 'false':        0 (0%)
Number of coverage checks:         281
  BDD entailment checks:           23
Number of SMT sat checks:          278
  trivial:                         54
  cached:                          111

Max ABE block size:                       19
Number of predicates discovered:          33
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  0.367s
  Time for path formula creation:        0.352s
Time for strengthen operator:            0.023s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.102s
  Time for abstraction:                  0.088s (Max:     0.012s, Count: 134)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     0.156s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.028s
Automaton transfers with branching:                0
Automaton transfer successors:                         2367 (count: 2367, min: 1, max: 1, avg: 1.00) [1 x 2367]

CPA algorithm statistics
------------------------
Number of iterations:            973
Max size of waitlist:            18
Average size of waitlist:        11
Number of computed successors:   1163
Max successors for one state:    2
Number of times merged:          129
Number of times stopped:         129
Number of times breaked:         40

Total time for CPA algorithm:         0.941s (Max:     0.264s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.133s
  Time for transfer relation:         0.572s
  Time for merge operator:            0.098s
  Time for stop operator:             0.020s
  Time for adding to reached set:     0.040s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 489 (count: 40, min: 7, max: 22, avg: 12.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.929s
  Counterexample analysis:                1.300s (Max:     0.206s, Calls: 40)
    Refinement sat check:                 0.866s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.299s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   1.300s
  Extracting precise counterexample:                   0.299s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.026s
  Checking whether itp is new:            0.180s
  Coverage checks:                        0.012s
  ARG update:                             0.041s

Number of abstractions during refinements:  215
Length of refined path (in blocks):                     404 (count: 39, min: 6, max: 21, avg: 10.36)
Number of affected states:                              129 (count: 39, min: 0, max: 12, avg: 3.31)
Length (states) of path with itp 'true':                143 (count: 39, min: 0, max: 17, avg: 3.67)
Length (states) of path with itp non-trivial itp:       222 (count: 39, min: 1, max: 18, avg: 5.69)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          30 (count: 39, min: 0, max: 5, avg: 0.77)
Equal non-trivial interpolants along paths:             153 (count: 39, min: 0, max: 12, avg: 3.92)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 596
Max. size of reached set after ref.:  592
Avg. size of reached set before ref.: 345.40
Avg. size of reached set after ref.:  327.72

Total time for CEGAR algorithm:       2.958s
Time for refinements:                 2.011s
Average time for refinement:          0.050s
Max time for refinement:              0.419s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.069s

Code Coverage
-----------------------------
  Function coverage:      0.230
  Visited lines:          2096
  Total lines:            2833
  Line coverage:          0.740
  Visited conditions:     108
  Total conditions:       268
  Condition coverage:     0.403

CPAchecker general statistics
-----------------------------
Number of program locations:     964
Number of CFA edges:             1103
Number of relevant variables:    227
Number of functions:             87
Number of loops:                 2
Size of reached set:             595
  Number of reached locations:   280 (29%)
    Avg states per location:     2
    Max states per location:     7 (at node N5)
  Number of reached functions:   20 (23%)
  Number of partitions:          587
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N257 (before line 2352), Function DiskPerfForwardIrpSynchronous called from node N182, stack depth 4 [474fae39], stack [main, DiskPerfDispatchPnp, DiskPerfRemoveDevice, DiskPerfForwardIrpSynchronous], Init])
  Number of target states:       1
  Size of final wait list        11

Time for analysis setup:          2.934s
  Time for loading CPAs:          0.608s
  Time for loading parser:        0.454s
  Time for CFA construction:      1.808s
    Time for parsing file(s):     0.650s
    Time for AST to CFA:          0.580s
    Time for CFA sanity check:    0.080s
    Time for post-processing:     0.268s
      Time for var class.:        0.000s
Time for Analysis:                4.027s
CPU time for analysis:            4.030s
Total time for CPAchecker:        6.966s
Total CPU time for CPAchecker:    6.960s

Time for Garbage Collector:       0.221s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                148MB (   141 MiB) max;     57MB (    54 MiB) avg;    159MB (   151 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     29MB (    27 MiB) avg;     43MB (    41 MiB) peak
Used in PS Old Gen pool:          15MB (    14 MiB) max;     10MB (     9 MiB) avg;     19MB (    18 MiB) peak
Allocated heap memory:           216MB (   206 MiB) max;    185MB (   176 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:  10415MB (  9932 MiB) max;  10385MB (  9904 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1976) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
