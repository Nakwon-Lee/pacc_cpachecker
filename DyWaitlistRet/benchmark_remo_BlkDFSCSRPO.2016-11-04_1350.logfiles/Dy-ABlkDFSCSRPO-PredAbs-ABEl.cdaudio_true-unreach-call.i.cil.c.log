scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-PredAbs-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/cdaudio_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 7414: Dead code detected: return (-1073741823L); (CFACreationUtils.addEdgeToCFA, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
The void * pointer __VERIFIER_successful_alloc_*void#2 to a deferred allocation escaped form tracking! Allocating array void[904]. (in the following line(s):
 line 7550:	N3907 -{irp.AssociatedIrp.SystemBuffer = malloc(904);}-> N3908) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

The void * pointer __VERIFIER_successful_alloc_*void#20 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Assuming external function IoOpenDeviceRegistryKey to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function RtlWriteRegistryValue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

The void * pointer __VERIFIER_successful_alloc_*void#44 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#52 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#60 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#72 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#76 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#84 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#95 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#101 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#105 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#110 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#114 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function MmLockPagableDataSection to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!CEGARAlgorithme run ed
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            8 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            8 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       4 (50%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (50%)
  Times result was 'false':        2 (25%)
Number of strengthen sat checks:   178
  Times result was 'false':        177 (99%)
Number of coverage checks:         2106
  BDD entailment checks:           2
Number of SMT sat checks:          178
  trivial:                         0
  cached:                          85

Max ABE block size:                       109
Number of predicates discovered:          8
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         24
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 6.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   24 (100%)
  Total number of models for allsat:      2
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.50

Number of path formula cache hits:   4321 (53%)

Time for post operator:                  1.384s
  Time for path formula creation:        1.339s
    Actual computation:                  1.190s
Time for strengthen operator:            9.995s
  Time for satisfiability checks:        9.972s
Time for prec operator:                  0.272s
  Time for abstraction:                  0.254s (Max:     0.125s, Count: 8)
    Boolean abstraction:                 0.131s
    Solving time:                        0.068s (Max:     0.053s)
    Model enumeration time:              0.041s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.423s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):    10.075s

Number of BDD nodes:                               217
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                           0 (count: 43, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.153s
Automaton transfers with branching:                0
Automaton transfer successors:                        13331 (count: 13331, min: 1, max: 1, avg: 1.00) [1 x 13331]

CPA algorithm statistics
------------------------
Number of iterations:            6429
Max size of waitlist:            27
Average size of waitlist:        13
Number of computed successors:   7487
Max successors for one state:    2
Number of times merged:          1052
Number of times stopped:         1054
Number of times breaked:         1

Total time for CPA algorithm:        13.406s (Max:    12.523s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      0.365s
  Time for transfer relation:        11.962s
  Time for merge operator:            0.589s
  Time for stop operator:             0.106s
  Time for adding to reached set:     0.133s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.090s
  Counterexample analysis:                0.051s (Max:     0.051s, Calls: 1)
    Refinement sat check:                 0.048s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.051s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 3191
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 3191.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      13.531s
Time for refinements:                 0.124s
Average time for refinement:          0.124s
Max time for refinement:              0.124s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.345
  Visited lines:          4288
  Total lines:            6461
  Line coverage:          0.664
  Visited conditions:     450
  Total conditions:       924
  Condition coverage:     0.487

CPAchecker general statistics
-----------------------------
Number of program locations:     2222
Number of CFA edges:             2774
Number of relevant variables:    378
Number of functions:             87
Number of loops:                 19
Size of reached set:             3242
  Number of reached locations:   990 (45%)
    Avg states per location:     3
    Max states per location:     91 (at node N1)
  Number of reached functions:   30 (34%)
  Number of partitions:          3242
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.449s
  Time for loading CPAs:          0.675s
  Time for loading parser:        0.479s
  Time for CFA construction:      3.204s
    Time for parsing file(s):     0.772s
    Time for AST to CFA:          1.273s
    Time for CFA sanity check:    0.122s
    Time for post-processing:     0.740s
      Time for var class.:        0.000s
Time for Analysis:               13.553s
CPU time for analysis:           13.550s
Total time for CPAchecker:       18.005s
Total CPU time for CPAchecker:   17.990s

Time for Garbage Collector:       0.316s (in 8 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                253MB (   241 MiB) max;    108MB (   103 MiB) avg;    264MB (   252 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    30 MiB) avg;     40MB (    38 MiB) peak
Used in PS Old Gen pool:          26MB (    25 MiB) max;     20MB (    19 MiB) avg;     27MB (    26 MiB) peak
Allocated heap memory:           359MB (   342 MiB) max;    270MB (   257 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:  10416MB (  9934 MiB) max;  10401MB (  9919 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
