scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-PredAbs-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.07_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        2 (count: 1, min: 2, max: 2, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        6 (count: 2, min: 2, max: 4, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       11 (count: 3, min: 2, max: 5, avg: 3.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            18 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            18 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (6%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (94%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   18
  Times result was 'false':        13 (72%)
Number of coverage checks:         2962
  BDD entailment checks:           32
Number of SMT sat checks:          18
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          34
Number of abstraction locations:          2
Max number of predicates per location:    33
Avg number of predicates per location:    18
Total predicates per abstraction:         327
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 19.24
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   327 (100%)
  Total number of models for allsat:      95
  Max number of models for allsat:        18
  Avg number of models for allsat:        5.59

Number of path formula cache hits:   5223 (64%)

Time for post operator:                  0.791s
  Time for path formula creation:        0.752s
    Actual computation:                  0.777s
Time for strengthen operator:            0.172s
  Time for satisfiability checks:        0.165s
Time for prec operator:                  2.447s
  Time for abstraction:                  2.442s (Max:     0.328s, Count: 18)
    Boolean abstraction:                 1.721s
    Solving time:                        0.513s (Max:     0.104s)
    Model enumeration time:              1.038s
    Time for BDD construction:           0.066s (Max:     0.012s)
Time for merge operator:                 0.269s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.716s

Number of BDD nodes:                               5388
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                        1874 (count: 1054, min: 0, max: 1234, avg: 1.78)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.132s
Automaton transfers with branching:                0
Automaton transfer successors:                        10226 (count: 10226, min: 1, max: 1, avg: 1.00) [1 x 10226]

CPA algorithm statistics
------------------------
Number of iterations:            5020
Max size of waitlist:            38
Average size of waitlist:        20
Number of computed successors:   6590
Max successors for one state:    2
Number of times merged:          1465
Number of times stopped:         1465
Number of times breaked:         5

Total time for CPA algorithm:         4.727s (Max:     1.478s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      2.498s
  Time for transfer relation:         1.427s
  Time for merge operator:            0.406s
  Time for stop operator:             0.075s
  Time for adding to reached set:     0.089s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  23 (count: 5, min: 2, max: 7, avg: 4.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.435s
  Counterexample analysis:                3.099s (Max:     1.157s, Calls: 5)
    Refinement sat check:                 1.631s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.280s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   3.099s
  Extracting precise counterexample:                   0.280s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.001s
  ARG update:                                          0.017s

Length of refined path (in blocks):                      14 (count: 3, min: 3, max: 6, avg: 4.67)
Number of affected states:                               11 (count: 3, min: 2, max: 5, avg: 3.67)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        11 (count: 3, min: 2, max: 5, avg: 3.67)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           8 (count: 3, min: 1, max: 4, avg: 2.67)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1806
Max. size of reached set after ref.:  41
Avg. size of reached set before ref.: 1050.00
Avg. size of reached set after ref.:  31.00

Total time for CEGAR algorithm:       8.222s
Time for refinements:                 3.495s
Average time for refinement:          0.699s
Max time for refinement:              1.463s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.776s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1631
  Total lines:            1660
  Line coverage:          0.983
  Visited conditions:     200
  Total conditions:       208
  Condition coverage:     0.962

CPAchecker general statistics
-----------------------------
Number of program locations:     385
Number of CFA edges:             486
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             1806
  Number of reached locations:   354 (92%)
    Avg states per location:     5
    Max states per location:     6 (at node N25)
  Number of reached functions:   2 (40%)
  Number of partitions:          1801
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N97 (before lines 1141-1720), Function ssl3_accept called from node N33, stack depth 2 [3d2ee678], stack [main, ssl3_accept], Init])
  Number of target states:       1
  Size of final wait list        22

Time for analysis setup:          2.068s
  Time for loading CPAs:          0.507s
  Time for loading parser:        0.453s
  Time for CFA construction:      1.044s
    Time for parsing file(s):     0.421s
    Time for AST to CFA:          0.247s
    Time for CFA sanity check:    0.023s
    Time for post-processing:     0.164s
      Time for var class.:        0.000s
Time for Analysis:               10.000s
CPU time for analysis:           10.000s
Total time for CPAchecker:       12.071s
Total CPU time for CPAchecker:   12.070s

Time for Garbage Collector:       0.253s (in 8 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                213MB (   203 MiB) max;     92MB (    87 MiB) avg;    215MB (   205 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     33MB (    31 MiB) avg;     44MB (    42 MiB) peak
Used in PS Old Gen pool:          22MB (    21 MiB) max;     18MB (    17 MiB) avg;     22MB (    21 MiB) peak
Allocated heap memory:           293MB (   280 MiB) max;    238MB (   227 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:  10416MB (  9933 MiB) max;  10397MB (  9916 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1731) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
