scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_clnt.blast.01_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        2 (count: 1, min: 2, max: 2, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        6 (count: 2, min: 2, max: 4, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       12 (count: 3, min: 2, max: 6, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       19 (count: 4, min: 2, max: 7, avg: 4.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            48 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23 (48%)
  Because of loop head:            25 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       21 (44%)
  Times precision was {false}:     1 (2%)
  Times result was cached:         1 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      25 (52%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   25
  Times result was 'false':        19 (76%)
Number of coverage checks:         3627
  BDD entailment checks:           67
Number of SMT sat checks:          25
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          28
Number of abstraction locations:          3
Max number of predicates per location:    27
Avg number of predicates per location:    11
Total predicates per abstraction:         412
Max number of predicates per abstraction: 27
Avg number of predicates per abstraction: 15.85
Number of irrelevant predicates:          4 (1%)
Number of preds handled by boolean abs:   408 (99%)
  Total number of models for allsat:      157
  Max number of models for allsat:        18
  Avg number of models for allsat:        6.28

Number of path formula cache hits:   7145 (71%)

Time for post operator:                  0.818s
  Time for path formula creation:        0.769s
    Actual computation:                  0.722s
Time for strengthen operator:            0.191s
  Time for satisfiability checks:        0.160s
Time for prec operator:                  2.737s
  Time for abstraction:                  2.715s (Max:     0.299s, Count: 48)
    Boolean abstraction:                 1.816s
    Solving time:                        0.502s (Max:     0.092s)
    Model enumeration time:              1.178s
    Time for BDD construction:           0.057s (Max:     0.017s)
Time for merge operator:                 0.240s
Time for coverage check:                 0.006s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     1.839s

Number of BDD nodes:                               5071
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                        1320 (count: 1026, min: 0, max: 739, avg: 1.29)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                        12584 (count: 12584, min: 1, max: 1, avg: 1.00) [1 x 12584]

CPA algorithm statistics
------------------------
Number of iterations:            6353
Max size of waitlist:            36
Average size of waitlist:        20
Number of computed successors:   8242
Max successors for one state:    2
Number of times merged:          1780
Number of times stopped:         1794
Number of times breaked:         6

Total time for CPA algorithm:         5.232s (Max:     1.194s)
  Time for choose from waitlist:      0.043s
  Time for precision adjustment:      2.832s
  Time for transfer relation:         1.597s
  Time for merge operator:            0.399s
  Time for stop operator:             0.062s
  Time for adding to reached set:     0.105s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  37 (count: 6, min: 3, max: 9, avg: 6.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.649s
  Counterexample analysis:                3.320s (Max:     0.975s, Calls: 6)
    Refinement sat check:                 1.593s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.252s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   3.320s
  Extracting precise counterexample:                   0.252s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.022s
  ARG update:                                          0.021s

Length of refined path (in blocks):                      25 (count: 4, min: 4, max: 8, avg: 6.25)
Number of affected states:                               19 (count: 4, min: 2, max: 7, avg: 4.75)
Length (states) of path with itp 'true':                  2 (count: 4, min: 0, max: 1, avg: 0.50)
Length (states) of path with itp non-trivial itp:        19 (count: 4, min: 2, max: 7, avg: 4.75)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          15 (count: 4, min: 1, max: 6, avg: 3.75)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1873
Max. size of reached set after ref.:  30
Avg. size of reached set before ref.: 1088.00
Avg. size of reached set after ref.:  15.80

Total time for CEGAR algorithm:       8.938s
Time for refinements:                 3.693s
Average time for refinement:          0.615s
Max time for refinement:              1.214s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.593s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1557
  Total lines:            1573
  Line coverage:          0.990
  Visited conditions:     168
  Total conditions:       172
  Condition coverage:     0.977

CPAchecker general statistics
-----------------------------
Number of program locations:     328
Number of CFA edges:             412
Number of relevant variables:    30
Number of functions:             4
Number of loops:                 1
Size of reached set:             1873
  Number of reached locations:   309 (94%)
    Avg states per location:     6
    Max states per location:     7 (at node N92)
  Number of reached functions:   2 (50%)
  Number of partitions:          1867
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N92 (before line 1132), Function ssl3_connect called from node N34, stack depth 2 [440e3ce6], stack [main, ssl3_connect], Init])
  Number of target states:       1
  Size of final wait list        17

Time for analysis setup:          1.998s
  Time for loading CPAs:          0.527s
  Time for loading parser:        0.437s
  Time for CFA construction:      0.972s
    Time for parsing file(s):     0.401s
    Time for AST to CFA:          0.245s
    Time for CFA sanity check:    0.026s
    Time for post-processing:     0.147s
      Time for var class.:        0.000s
Time for Analysis:               10.541s
CPU time for analysis:           10.540s
Total time for CPAchecker:       12.543s
Total CPU time for CPAchecker:   12.540s

Time for Garbage Collector:       0.299s (in 9 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                218MB (   208 MiB) max;     88MB (    84 MiB) avg;    232MB (   222 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     33MB (    31 MiB) avg;     44MB (    42 MiB) peak
Used in PS Old Gen pool:          21MB (    20 MiB) max;     17MB (    17 MiB) avg;     21MB (    20 MiB) peak
Allocated heap memory:           370MB (   353 MiB) max;    242MB (   231 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10399MB (  9917 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1645) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
