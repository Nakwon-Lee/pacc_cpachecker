scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-PredAbs-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.13_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        2 (count: 1, min: 2, max: 2, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        7 (count: 2, min: 2, max: 5, avg: 3.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            14 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            14 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (7%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13 (93%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   14
  Times result was 'false':        10 (71%)
Number of coverage checks:         2294
  BDD entailment checks:           26
Number of SMT sat checks:          14
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          38
Number of abstraction locations:          2
Max number of predicates per location:    37
Avg number of predicates per location:    20
Total predicates per abstraction:         286
Max number of predicates per abstraction: 37
Avg number of predicates per abstraction: 22.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   286 (100%)
  Total number of models for allsat:      116
  Max number of models for allsat:        29
  Avg number of models for allsat:        8.92

Number of path formula cache hits:   3427 (54%)

Time for post operator:                  0.840s
  Time for path formula creation:        0.815s
    Actual computation:                  0.800s
Time for strengthen operator:            0.158s
  Time for satisfiability checks:        0.148s
Time for prec operator:                  2.298s
  Time for abstraction:                  2.287s (Max:     0.404s, Count: 14)
    Boolean abstraction:                 1.710s
    Solving time:                        0.430s (Max:     0.077s)
    Model enumeration time:              1.153s
    Time for BDD construction:           0.073s (Max:     0.016s)
Time for merge operator:                 0.251s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.731s

Number of BDD nodes:                               8164
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                         272 (count: 1082, min: 0, max: 272, avg: 0.25)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.112s
Automaton transfers with branching:                0
Automaton transfer successors:                         8054 (count: 8054, min: 1, max: 1, avg: 1.00) [1 x 8054]

CPA algorithm statistics
------------------------
Number of iterations:            3920
Max size of waitlist:            38
Average size of waitlist:        20
Number of computed successors:   5138
Max successors for one state:    2
Number of times merged:          1134
Number of times stopped:         1134
Number of times breaked:         4

Total time for CPA algorithm:         4.375s (Max:     1.718s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      2.350s
  Time for transfer relation:         1.314s
  Time for merge operator:            0.386s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.100s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  18 (count: 4, min: 2, max: 7, avg: 4.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.087s
  Counterexample analysis:                2.727s (Max:     1.157s, Calls: 4)
    Refinement sat check:                 1.531s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.307s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   2.728s
  Extracting precise counterexample:                   0.307s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.002s
  ARG update:                                          0.028s

Length of refined path (in blocks):                       9 (count: 2, min: 3, max: 6, avg: 4.50)
Number of affected states:                                7 (count: 2, min: 2, max: 5, avg: 3.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 2, min: 2, max: 5, avg: 3.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           5 (count: 2, min: 1, max: 4, avg: 2.50)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 1812
Max. size of reached set after ref.:  41
Avg. size of reached set before ref.: 1022.00
Avg. size of reached set after ref.:  27.67

Total time for CEGAR algorithm:       7.503s
Time for refinements:                 3.119s
Average time for refinement:          0.779s
Max time for refinement:              1.478s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.788s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1632
  Total lines:            1661
  Line coverage:          0.983
  Visited conditions:     200
  Total conditions:       208
  Condition coverage:     0.962

CPAchecker general statistics
-----------------------------
Number of program locations:     386
Number of CFA edges:             487
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             1812
  Number of reached locations:   355 (92%)
    Avg states per location:     5
    Max states per location:     6 (at node N25)
  Number of reached functions:   2 (40%)
  Number of partitions:          1807
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N97 (before lines 1141-1721), Function ssl3_accept called from node N33, stack depth 2 [2d6764b2], stack [main, ssl3_accept], Init])
  Number of target states:       1
  Size of final wait list        22

Time for analysis setup:          2.114s
  Time for loading CPAs:          0.546s
  Time for loading parser:        0.460s
  Time for CFA construction:      1.040s
    Time for parsing file(s):     0.394s
    Time for AST to CFA:          0.261s
    Time for CFA sanity check:    0.020s
    Time for post-processing:     0.148s
      Time for var class.:        0.000s
Time for Analysis:                9.296s
CPU time for analysis:            9.310s
Total time for CPAchecker:       11.413s
Total CPU time for CPAchecker:   11.420s

Time for Garbage Collector:       0.277s (in 8 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                224MB (   214 MiB) max;     88MB (    84 MiB) avg;    230MB (   219 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     33MB (    31 MiB) avg;     43MB (    41 MiB) peak
Used in PS Old Gen pool:          23MB (    22 MiB) max;     19MB (    18 MiB) avg;     23MB (    22 MiB) peak
Allocated heap memory:           301MB (   287 MiB) max;    242MB (   231 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:  10418MB (  9935 MiB) max;  10397MB (  9915 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1732) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
