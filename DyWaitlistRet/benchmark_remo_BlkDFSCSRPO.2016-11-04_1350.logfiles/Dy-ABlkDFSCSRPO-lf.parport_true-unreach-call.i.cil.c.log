scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-lf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/parport_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 6170: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6171: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6172: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6221: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6245: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6698: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6699: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6700: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6763: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6843: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8237: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8248: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8558: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8559: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8567: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8568: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8576: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9098: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9393: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9423: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!cached!number of affected states:        4 (count: 1, min: 4, max: 4, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoDisconnectInterrupt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!cached!cached!cached!number of affected states:       10 (count: 2, min: 4, max: 6, avg: 5.00)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       26 (count: 3, min: 4, max: 16, avg: 8.67)
removed coverage count: 4
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       31 (count: 4, min: 4, max: 16, avg: 7.75)
removed coverage count: 4
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       37 (count: 5, min: 4, max: 16, avg: 7.40)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!number of affected states:       41 (count: 6, min: 4, max: 16, avg: 6.83)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!number of affected states:       51 (count: 7, min: 4, max: 16, avg: 7.29)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       51 (count: 8, min: 0, max: 16, avg: 6.38)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       55 (count: 9, min: 0, max: 16, avg: 6.11)
removed coverage count: 11
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       61 (count: 10, min: 0, max: 16, avg: 6.10)
removed coverage count: 14
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       61 (count: 11, min: 0, max: 16, avg: 5.55)
removed coverage count: 14
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       61 (count: 12, min: 0, max: 16, avg: 5.08)
removed coverage count: 14
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       61 (count: 13, min: 0, max: 16, avg: 4.69)
removed coverage count: 14
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       61 (count: 14, min: 0, max: 16, avg: 4.36)
removed coverage count: 14
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       65 (count: 15, min: 0, max: 16, avg: 4.33)
removed coverage count: 14
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!number of affected states:       72 (count: 16, min: 0, max: 16, avg: 4.50)
removed coverage count: 15
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       86 (count: 17, min: 0, max: 16, avg: 5.06)
cached!removed coverage count: 18
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       91 (count: 18, min: 0, max: 16, avg: 5.06)
cached!removed coverage count: 18
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       97 (count: 19, min: 0, max: 16, avg: 5.11)
removed coverage count: 22
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!cached!cached!cached!number of affected states:      107 (count: 20, min: 0, max: 16, avg: 5.35)
removed coverage count: 22
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!number of affected states:      118 (count: 21, min: 0, max: 16, avg: 5.62)
removed coverage count: 22
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:      118 (count: 22, min: 0, max: 16, avg: 5.36)
removed coverage count: 22
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      122 (count: 23, min: 0, max: 16, avg: 5.30)
removed coverage count: 25
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      128 (count: 24, min: 0, max: 16, avg: 5.33)
removed coverage count: 28
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:      128 (count: 25, min: 0, max: 16, avg: 5.12)
removed coverage count: 28
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:      128 (count: 26, min: 0, max: 16, avg: 4.92)
removed coverage count: 28
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!number of affected states:      128 (count: 27, min: 0, max: 16, avg: 4.74)
removed coverage count: 28
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:      128 (count: 28, min: 0, max: 16, avg: 4.57)
removed coverage count: 28
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      134 (count: 29, min: 0, max: 16, avg: 4.62)
removed coverage count: 28
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function KeSynchronizeExecution to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function WRITE_PORT_UCHAR to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function READ_PORT_UCHAR to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeStallExecutionProcessor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeQueryTimeIncrement to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeQueryTickCount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

cached!Assuming external function IoReleaseRemoveLockEx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      141 (count: 30, min: 0, max: 16, avg: 4.70)
removed coverage count: 34
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      152 (count: 31, min: 0, max: 16, avg: 4.90)
removed coverage count: 35
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      163 (count: 32, min: 0, max: 16, avg: 5.09)
removed coverage count: 36
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!refinement st 
cached!cached!cached!cached!number of affected states:      170 (count: 33, min: 0, max: 16, avg: 5.15)
removed coverage count: 100
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!refinement st 
cached!cached!number of affected states:      170 (count: 34, min: 0, max: 16, avg: 5.00)
removed coverage count: 119
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
lines 5482-5483: Ignoring function call through function pointer *(Extension->ChipInfo.ParChipClearMode): Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context, ChipMode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

CEGARAlgorithme run ed
Error: lines 5482-5483: Unsupported feature (recursion): Status = PptClearChipMode(Extension->ChipInfo.Context, ChipMode); (line was originally pointer call(PptClearChipMode) Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context,
                                                       ChipMode);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            676 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  535 (79%)
  Because of loop head:            141 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       676 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   34
  Times result was 'false':        0 (0%)
Number of coverage checks:         1213
  BDD entailment checks:           299
Number of SMT sat checks:          650
  trivial:                         243
  cached:                          326

Max ABE block size:                       27
Number of predicates discovered:          15
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  1.417s
  Time for path formula creation:        1.382s
Time for strengthen operator:            0.008s
  Time for satisfiability checks:        0.001s
Time for prec operator:                  0.284s
  Time for abstraction:                  0.243s (Max:     0.030s, Count: 676)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.164s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.059s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                         8125 (count: 8125, min: 1, max: 1, avg: 1.00) [1 x 8125]

CPA algorithm statistics
------------------------
Number of iterations:            4927
Max size of waitlist:            62
Average size of waitlist:        41
Number of computed successors:   5485
Max successors for one state:    2
Number of times merged:          457
Number of times stopped:         457
Number of times breaked:         34

Total time for CPA algorithm:         3.189s (Max:     0.972s)
  Time for choose from waitlist:      0.058s
  Time for precision adjustment:      0.390s
  Time for transfer relation:         2.210s
  Time for merge operator:            0.254s
  Time for stop operator:             0.027s
  Time for adding to reached set:     0.097s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 602 (count: 34, min: 9, max: 28, avg: 17.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.441s
  Counterexample analysis:                1.223s (Max:     0.119s, Calls: 34)
    Refinement sat check:                 0.825s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   1.223s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.074s
  Checking whether itp is new:            0.056s
  Coverage checks:                        0.009s
  ARG update:                             0.022s

Number of abstractions during refinements:  317
Length of refined path (in blocks):                     543 (count: 34, min: 8, max: 25, avg: 15.97)
Number of affected states:                              170 (count: 34, min: 0, max: 16, avg: 5.00)
Length (states) of path with itp 'true':                134 (count: 34, min: 0, max: 9, avg: 3.94)
Length (states) of path with itp non-trivial itp:       375 (count: 34, min: 1, max: 24, avg: 11.03)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          36 (count: 34, min: 0, max: 3, avg: 1.06)
Equal non-trivial interpolants along paths:             305 (count: 34, min: 0, max: 20, avg: 8.97)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 3852
Max. size of reached set after ref.:  2385
Avg. size of reached set before ref.: 771.50
Avg. size of reached set after ref.:  694.09

Total time for CEGAR algorithm:       4.825s
Time for refinements:                 1.557s
Average time for refinement:          0.045s
Max time for refinement:              0.141s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.199
  Visited lines:          2448
  Total lines:            6409
  Line coverage:          0.382
  Visited conditions:     218
  Total conditions:       1152
  Condition coverage:     0.189

CPAchecker general statistics
-----------------------------
Number of program locations:     3329
Number of CFA edges:             4041
Number of relevant variables:    894
Number of functions:             181
Number of loops:                 37
Size of reached set:             2397
  Number of reached locations:   565 (17%)
    Avg states per location:     4
    Max states per location:     26 (at node N235)
  Number of reached functions:   36 (20%)
  Number of partitions:          2264
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N824 (after line 3549), Function PptDispatchInternalDeviceControl called from node N4929, stack depth 2 [58f437b0], stack [main, PptDispatchInternalDeviceControl], Init])
  Number of target states:       0
  Size of final wait list        47

Time for analysis setup:          4.428s
  Time for loading CPAs:          0.775s
  Time for loading parser:        0.444s
  Time for CFA construction:      3.103s
    Time for parsing file(s):     0.821s
    Time for AST to CFA:          1.287s
    Time for CFA sanity check:    0.121s
    Time for post-processing:     0.644s
      Time for var class.:        0.000s
Time for Analysis:                4.825s
CPU time for analysis:            4.830s
Total time for CPAchecker:        9.261s
Total CPU time for CPAchecker:    9.260s

Time for Garbage Collector:       0.464s (in 7 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                155MB (   147 MiB) max;     59MB (    56 MiB) avg;    164MB (   157 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     32MB (    30 MiB) avg;     45MB (    43 MiB) peak
Used in PS Old Gen pool:          24MB (    23 MiB) max;     15MB (    14 MiB) avg;     24MB (    23 MiB) peak
Allocated heap memory:           274MB (   262 MiB) max;    194MB (   185 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10391MB (  9910 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
