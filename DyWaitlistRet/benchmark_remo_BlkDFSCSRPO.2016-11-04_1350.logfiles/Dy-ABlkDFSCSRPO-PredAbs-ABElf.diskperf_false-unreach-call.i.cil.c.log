scripts/cpa.sh -heap 7000M -Dy-ABlkDFSCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/diskperf_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 3030: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Extern function KeQueryPerformanceCounter((void *)0) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        6 (count: 1, min: 6, max: 6, avg: 6.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       11 (count: 2, min: 5, max: 6, avg: 5.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       18 (count: 3, min: 5, max: 7, avg: 6.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       23 (count: 4, min: 5, max: 7, avg: 5.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       25 (count: 5, min: 2, max: 7, avg: 5.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       32 (count: 6, min: 2, max: 7, avg: 5.33)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       39 (count: 7, min: 2, max: 7, avg: 5.57)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       42 (count: 8, min: 2, max: 7, avg: 5.25)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       51 (count: 9, min: 2, max: 9, avg: 5.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       60 (count: 10, min: 2, max: 9, avg: 6.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:       61 (count: 11, min: 1, max: 9, avg: 5.55)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       67 (count: 12, min: 1, max: 9, avg: 5.58)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       83 (count: 13, min: 1, max: 16, avg: 6.38)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            446 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  446 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       20 (4%)
  Times precision was {false}:     6 (1%)
  Times result was cached:         145 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      275 (62%)
  Times result was 'false':        175 (39%)
Number of strengthen sat checks:   15
  Times result was 'false':        0 (0%)
Number of coverage checks:         965
  BDD entailment checks:           7
Number of SMT sat checks:          15
  trivial:                         1
  cached:                          2

Max ABE block size:                       19
Number of predicates discovered:          30
Number of abstraction locations:          31
Max number of predicates per location:    15
Avg number of predicates per location:    9
Total predicates per abstraction:         2032
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 7.23
Number of irrelevant predicates:          215 (11%)
Number of preds handled by boolean abs:   1817 (89%)
  Total number of models for allsat:      1527
  Max number of models for allsat:        128
  Avg number of models for allsat:        5.55

Number of path formula cache hits:   3561 (70%)

Time for post operator:                  0.504s
  Time for path formula creation:        0.468s
    Actual computation:                  0.465s
Time for strengthen operator:            0.044s
  Time for satisfiability checks:        0.012s
Time for prec operator:                  2.282s
  Time for abstraction:                  2.248s (Max:     0.057s, Count: 446)
    Boolean abstraction:                 1.213s
    Solving time:                        0.273s (Max:     0.024s)
    Model enumeration time:              0.471s
    Time for BDD construction:           0.139s (Max:     0.018s)
Time for merge operator:                 0.061s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.755s

Number of BDD nodes:                               6450
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                        1154 (count: 1835, min: 0, max: 1154, avg: 0.63)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.039s
Automaton transfers with branching:                0
Automaton transfer successors:                         6584 (count: 6584, min: 1, max: 1, avg: 1.00) [1 x 6584]

CPA algorithm statistics
------------------------
Number of iterations:            2920
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   3665
Max successors for one state:    2
Number of times merged:          479
Number of times stopped:         481
Number of times breaked:         15

Total time for CPA algorithm:         3.598s (Max:     0.471s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:      2.369s
  Time for transfer relation:         0.785s
  Time for merge operator:            0.160s
  Time for stop operator:             0.048s
  Time for adding to reached set:     0.045s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 189 (count: 15, min: 9, max: 22, avg: 12.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.819s
  Counterexample analysis:                0.462s (Max:     0.085s, Calls: 15)
    Refinement sat check:                 0.249s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.262s
  Path-formulas extraction:                            0.003s
  Building the counterexample trace:                   0.462s
  Extracting precise counterexample:                   0.262s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.047s
  ARG update:                                          0.005s

Length of refined path (in blocks):                     144 (count: 13, min: 7, max: 18, avg: 11.08)
Number of affected states:                               83 (count: 13, min: 1, max: 16, avg: 6.38)
Length (states) of path with itp 'true':                 48 (count: 13, min: 0, max: 13, avg: 3.69)
Length (states) of path with itp non-trivial itp:        83 (count: 13, min: 1, max: 16, avg: 6.38)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          19 (count: 13, min: 0, max: 3, avg: 1.46)
Equal non-trivial interpolants along paths:              51 (count: 13, min: 0, max: 12, avg: 3.92)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 530
Max. size of reached set after ref.:  428
Avg. size of reached set before ref.: 304.47
Avg. size of reached set after ref.:  111.21

Total time for CEGAR algorithm:       4.467s
Time for refinements:                 0.857s
Average time for refinement:          0.057s
Max time for refinement:              0.350s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.028s

Code Coverage
-----------------------------
  Function coverage:      0.230
  Visited lines:          2096
  Total lines:            2833
  Line coverage:          0.740
  Visited conditions:     108
  Total conditions:       268
  Condition coverage:     0.403

CPAchecker general statistics
-----------------------------
Number of program locations:     964
Number of CFA edges:             1103
Number of relevant variables:    227
Number of functions:             87
Number of loops:                 2
Size of reached set:             530
  Number of reached locations:   280 (29%)
    Avg states per location:     1
    Max states per location:     6 (at node N830)
  Number of reached functions:   20 (23%)
  Number of partitions:          528
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N903 (before line 3230), Function main called from node N831, stack depth 1 [693e4d19], stack [main], Init])
  Number of target states:       1
  Size of final wait list        7

Time for analysis setup:          3.001s
  Time for loading CPAs:          0.588s
  Time for loading parser:        0.482s
  Time for CFA construction:      1.829s
    Time for parsing file(s):     0.691s
    Time for AST to CFA:          0.534s
    Time for CFA sanity check:    0.074s
    Time for post-processing:     0.303s
      Time for var class.:        0.000s
Time for Analysis:                5.507s
CPU time for analysis:            5.500s
Total time for CPAchecker:        8.511s
Total CPU time for CPAchecker:    8.500s

Time for Garbage Collector:       0.196s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                154MB (   147 MiB) max;     63MB (    60 MiB) avg;    161MB (   153 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     30MB (    29 MiB) avg;     43MB (    41 MiB) peak
Used in PS Old Gen pool:          21MB (    20 MiB) max;     15MB (    14 MiB) avg;     21MB (    20 MiB) peak
Allocated heap memory:           225MB (   215 MiB) max;    196MB (   187 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10388MB (  9906 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1976) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
