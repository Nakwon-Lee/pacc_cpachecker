scripts/cpa.sh -heap 7000M -Dy-CSRPO-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/cdaudio_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

line 7414: Dead code detected: return (-1073741823L); (CFACreationUtils.addEdgeToCFA, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
The void * pointer __VERIFIER_successful_alloc_*void#2 to a deferred allocation escaped form tracking! Allocating array void[904]. (in the following line(s):
 line 7550:	N3907 -{irp.AssociatedIrp.SystemBuffer = malloc(904);}-> N3908) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

The void * pointer __VERIFIER_successful_alloc_*void#20 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function MmLockPagableDataSection to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoOpenDeviceRegistryKey to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function RtlWriteRegistryValue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:        2 (count: 2, min: 1, max: 1, avg: 1.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!refinement st 
cached!number of affected states:        4 (count: 3, min: 1, max: 2, avg: 1.33)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!refinement st 
cached!number of affected states:        6 (count: 4, min: 1, max: 2, avg: 1.50)
removed coverage count: 4
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!refinement st 
number of affected states:       11 (count: 5, min: 1, max: 5, avg: 2.20)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
The void * pointer __VERIFIER_successful_alloc_*void#209 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#217 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#225 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#237 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#241 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

refinement st 
number of affected states:       12 (count: 6, min: 1, max: 5, avg: 2.00)
removed coverage count: 6
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!number of affected states:       13 (count: 7, min: 1, max: 5, avg: 1.86)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
The void * pointer __VERIFIER_successful_alloc_*void#249 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#260 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#266 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#270 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#275 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#279 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7709:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

refinement st 
cached!number of affected states:       14 (count: 8, min: 1, max: 5, avg: 1.75)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!number of affected states:       15 (count: 9, min: 1, max: 5, avg: 1.67)
removed coverage count: 9
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       16 (count: 10, min: 1, max: 5, avg: 1.60)
removed coverage count: 10
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!number of affected states:       17 (count: 11, min: 1, max: 5, avg: 1.55)
removed coverage count: 11
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       18 (count: 12, min: 1, max: 5, avg: 1.50)
removed coverage count: 12
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!number of affected states:       19 (count: 13, min: 1, max: 5, avg: 1.46)
removed coverage count: 13
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       20 (count: 14, min: 1, max: 5, avg: 1.43)
removed coverage count: 14
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       21 (count: 15, min: 1, max: 5, avg: 1.40)
removed coverage count: 15
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       21 (count: 16, min: 0, max: 5, avg: 1.31)
removed coverage count: 15
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       22 (count: 17, min: 0, max: 5, avg: 1.29)
removed coverage count: 15
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       23 (count: 18, min: 0, max: 5, avg: 1.28)
removed coverage count: 15
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       27 (count: 19, min: 0, max: 5, avg: 1.42)
removed coverage count: 16
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       32 (count: 20, min: 0, max: 5, avg: 1.60)
removed coverage count: 17
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       32 (count: 21, min: 0, max: 5, avg: 1.52)
removed coverage count: 18
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       32 (count: 22, min: 0, max: 5, avg: 1.45)
removed coverage count: 19
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       33 (count: 23, min: 0, max: 5, avg: 1.43)
removed coverage count: 20
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       37 (count: 24, min: 0, max: 5, avg: 1.54)
removed coverage count: 21
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       40 (count: 25, min: 0, max: 5, avg: 1.60)
removed coverage count: 22
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
CEGARAlgorithme run ed
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            16 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       16 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   138
  Times result was 'false':        113 (82%)
Number of coverage checks:         2089
  BDD entailment checks:           109
Number of SMT sat checks:          309
  trivial:                         19
  cached:                          24

Max ABE block size:                       109
Number of predicates discovered:          33
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  1.844s
  Time for path formula creation:        1.767s
Time for strengthen operator:           10.364s
  Time for satisfiability checks:       10.351s
Time for prec operator:                  0.045s
  Time for abstraction:                  0.043s (Max:     0.020s, Count: 16)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.455s
Time for coverage check:                 0.117s
  Time for BDD entailment checks:        0.117s
Total time for SMT solver (w/o itp):    10.499s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.147s
Automaton transfers with branching:                0
Automaton transfer successors:                        10407 (count: 10407, min: 1, max: 1, avg: 1.00) [1 x 10407]

CPA algorithm statistics
------------------------
Number of iterations:            5413
Max size of waitlist:            76
Average size of waitlist:        22
Number of computed successors:   6457
Max successors for one state:    2
Number of times merged:          990
Number of times stopped:         990
Number of times breaked:         25

Total time for CPA algorithm:        13.778s (Max:     2.981s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      0.098s
  Time for transfer relation:        12.693s
  Time for merge operator:            0.551s
  Time for stop operator:             0.072s
  Time for adding to reached set:     0.130s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                  94 (count: 25, min: 2, max: 8, avg: 3.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.626s
  Counterexample analysis:                8.299s (Max:     1.373s, Calls: 25)
    Refinement sat check:                 1.863s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   8.299s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.034s
  Checking whether itp is new:            0.052s
  Coverage checks:                        0.105s
  ARG update:                             0.035s

Number of abstractions during refinements:  62
Length of refined path (in blocks):                      91 (count: 25, min: 1, max: 8, avg: 3.64)
Number of affected states:                               40 (count: 25, min: 0, max: 5, avg: 1.60)
Length (states) of path with itp 'true':                  0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        66 (count: 25, min: 0, max: 7, avg: 2.64)
Length (states) of path with itp 'false':                 3 (count: 25, min: 0, max: 1, avg: 0.12)
Different non-trivial interpolants along paths:          30 (count: 25, min: 0, max: 6, avg: 1.20)
Equal non-trivial interpolants along paths:              13 (count: 25, min: 0, max: 3, avg: 0.52)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 5096
Max. size of reached set after ref.:  5048
Avg. size of reached set before ref.: 4025.04
Avg. size of reached set after ref.:  3987.20

Total time for CEGAR algorithm:      22.711s
Time for refinements:                 8.861s
Average time for refinement:          0.354s
Max time for refinement:              1.395s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.345
  Visited lines:          4288
  Total lines:            6461
  Line coverage:          0.664
  Visited conditions:     450
  Total conditions:       924
  Condition coverage:     0.487

CPAchecker general statistics
-----------------------------
Number of program locations:     2222
Number of CFA edges:             2774
Number of relevant variables:    378
Number of functions:             87
Number of loops:                 19
Size of reached set:             4522
  Number of reached locations:   990 (45%)
    Avg states per location:     4
    Max states per location:     115 (at node N1)
  Number of reached functions:   30 (34%)
  Number of partitions:          4518
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N274 (before lines 3214-3236), Function CdAudioStartDevice called from node N558, stack depth 3 [27be17c8], stack [main, CdAudioPnp, CdAudioStartDevice], Init])
  Number of target states:       0

Time for analysis setup:          4.507s
  Time for loading CPAs:          0.815s
  Time for loading parser:        0.437s
  Time for CFA construction:      3.149s
    Time for parsing file(s):     0.753s
    Time for AST to CFA:          1.253s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.732s
      Time for var class.:        0.000s
Time for Analysis:               22.713s
CPU time for analysis:           22.710s
Total time for CPAchecker:       27.224s
Total CPU time for CPAchecker:   27.220s

Time for Garbage Collector:       0.542s (in 13 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                535MB (   510 MiB) max;    163MB (   156 MiB) avg;    548MB (   522 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     40MB (    39 MiB) avg;     49MB (    46 MiB) peak
Used in PS Old Gen pool:          31MB (    30 MiB) max;     22MB (    21 MiB) avg;     31MB (    30 MiB) peak
Allocated heap memory:           719MB (   686 MiB) max;    417MB (   398 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  10419MB (  9936 MiB) max;  10406MB (  9924 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
