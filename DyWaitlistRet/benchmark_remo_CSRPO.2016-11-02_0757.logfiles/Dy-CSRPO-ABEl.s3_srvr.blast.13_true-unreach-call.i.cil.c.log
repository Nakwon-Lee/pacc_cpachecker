scripts/cpa.sh -heap 7000M -Dy-CSRPO-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.13_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:        3 (count: 2, min: 1, max: 2, avg: 1.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:        5 (count: 3, min: 1, max: 2, avg: 1.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!refinement st 
cached!number of affected states:        7 (count: 4, min: 1, max: 2, avg: 1.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!refinement st 
cached!number of affected states:        9 (count: 5, min: 1, max: 2, avg: 1.80)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!refinement st 
number of affected states:       15 (count: 6, min: 1, max: 6, avg: 2.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       22 (count: 7, min: 1, max: 7, avg: 3.14)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       30 (count: 8, min: 1, max: 8, avg: 3.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       35 (count: 9, min: 1, max: 8, avg: 3.89)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
number of affected states:       42 (count: 10, min: 1, max: 8, avg: 4.20)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!refinement st 
number of affected states:       51 (count: 11, min: 1, max: 9, avg: 4.64)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!refinement st 
number of affected states:       59 (count: 12, min: 1, max: 9, avg: 4.92)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
number of affected states:       66 (count: 13, min: 1, max: 9, avg: 5.08)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!refinement st 
number of affected states:       77 (count: 14, min: 1, max: 11, avg: 5.50)
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

refinement ed 
CEGARAlgorithme run ed
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            14 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       14 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   14
  Times result was 'false':        0 (0%)
Number of coverage checks:         2852
  BDD entailment checks:           425
Number of SMT sat checks:          543
  trivial:                         0
  cached:                          40

Max ABE block size:                       51
Number of predicates discovered:          834
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  1.140s
  Time for path formula creation:        1.108s
Time for strengthen operator:            0.179s
  Time for satisfiability checks:        0.153s
Time for prec operator:                  0.208s
  Time for abstraction:                  0.197s (Max:     0.134s, Count: 14)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.399s
Time for coverage check:               577.242s
  Time for BDD entailment checks:      577.255s
Total time for SMT solver (w/o itp):   786.138s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.081s
Automaton transfers with branching:                0
Automaton transfer successors:                         8348 (count: 8348, min: 1, max: 1, avg: 1.00) [1 x 8348]

CPA algorithm statistics
------------------------
Number of iterations:            4145
Max size of waitlist:            117
Average size of waitlist:        59
Number of computed successors:   5472
Max successors for one state:    2
Number of times merged:          1214
Number of times stopped:         1214
Number of times breaked:         14

Total time for CPA algorithm:         3.905s (Max:     0.513s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.280s
  Time for transfer relation:         1.648s
  Time for merge operator:            0.548s
  Time for stop operator:             1.168s
  Time for adding to reached set:     0.055s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 119 (count: 14, min: 2, max: 15, avg: 8.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 894.144s
  Counterexample analysis:              108.598s (Max:    36.299s, Calls: 14)
    Refinement sat check:                35.168s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                 108.598s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.336s
  Checking whether itp is new:          208.774s
  Coverage checks:                      576.132s
  ARG update:                             0.009s

Number of abstractions during refinements:  105
Length of refined path (in blocks):                     104 (count: 13, min: 2, max: 14, avg: 8.00)
Number of affected states:                               77 (count: 14, min: 1, max: 11, avg: 5.50)
Length (states) of path with itp 'true':                  0 (count: 13, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        91 (count: 13, min: 1, max: 13, avg: 7.00)
Length (states) of path with itp 'false':                 0 (count: 13, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          78 (count: 13, min: 0, max: 12, avg: 6.00)
Equal non-trivial interpolants along paths:               0 (count: 13, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 4246
Max. size of reached set after ref.:  3936
Avg. size of reached set before ref.: 2237.50
Avg. size of reached set after ref.:  2082.00

Total time for CEGAR algorithm:     898.248s
Time for refinements:               894.332s
Average time for refinement:         63.880s
Max time for refinement:            426.276s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1628
  Total lines:            1661
  Line coverage:          0.980
  Visited conditions:     198
  Total conditions:       208
  Condition coverage:     0.952

CPAchecker general statistics
-----------------------------
Number of program locations:     386
Number of CFA edges:             487
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             4245
  Number of reached locations:   347 (90%)
    Avg states per location:     12
    Max states per location:     14 (at node N97)
  Number of reached functions:   2 (40%)
  Number of partitions:          4232
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N97 (before lines 1141-1721), Function ssl3_accept called from node N33, stack depth 2 [40317ba2], stack [main, ssl3_accept], Init])
  Number of target states:       0
  Size of final wait list        100

Time for analysis setup:          2.043s
  Time for loading CPAs:          0.498s
  Time for loading parser:        0.459s
  Time for CFA construction:      1.000s
    Time for parsing file(s):     0.408s
    Time for AST to CFA:          0.258s
    Time for CFA sanity check:    0.019s
    Time for post-processing:     0.147s
      Time for var class.:        0.000s
Time for Analysis:              898.248s
CPU time for analysis:          898.280s
Total time for CPAchecker:      900.294s
Total CPU time for CPAchecker:  900.310s

Time for Garbage Collector:       7.003s (in 1739 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2535MB (  2418 MiB) max;    808MB (   770 MiB) avg;   2572MB (  2453 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Used in PS Old Gen pool:          99MB (    94 MiB) max;     60MB (    57 MiB) avg;    102MB (    97 MiB) peak
Allocated heap memory:          2584MB (  2465 MiB) max;   1570MB (  1497 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:  10418MB (  9935 MiB) max;  10413MB (  9930 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
