scripts/cpa.sh -heap 7000M -Dy-CSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/parport_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

line 6170: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6171: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6172: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6221: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6245: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6698: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6699: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6700: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6763: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6843: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8237: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8248: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8558: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8559: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8567: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8568: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8576: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9098: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9393: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9423: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        4 (count: 1, min: 4, max: 4, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function WRITE_PORT_UCHAR to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeSynchronizeExecution to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function READ_PORT_UCHAR to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeStallExecutionProcessor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeQueryTimeIncrement to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeQueryTickCount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5482-5483: Ignoring function call through function pointer *(Extension->ChipInfo.ParChipClearMode): Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context, ChipMode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 5394-5395: Ignoring function call through function pointer *(Extension->ChipInfo.ParChipSetMode): Status = (*(Extension->ChipInfo.ParChipSetMode))(Extension->ChipInfo.Context, ChipMode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

CEGARAlgorithme run ed
Error: lines 5394-5395: Unsupported feature (recursion): Status = PptSetChipMode(Extension->ChipInfo.Context, ChipMode); (line was originally pointer call(PptSetChipMode) Status = (*(Extension->ChipInfo.ParChipSetMode))(Extension->ChipInfo.Context,
                                                     ChipMode);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            612 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  494 (81%)
  Because of loop head:            118 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       8 (1%)
  Times precision was {false}:     3 (0%)
  Times result was cached:         319 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      282 (46%)
  Times result was 'false':        21 (3%)
Number of strengthen sat checks:   2
  Times result was 'false':        0 (0%)
Number of coverage checks:         835
  BDD entailment checks:           189
Number of SMT sat checks:          2
  trivial:                         1
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          9
Number of abstraction locations:          5
Max number of predicates per location:    8
Avg number of predicates per location:    6
Total predicates per abstraction:         1703
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 5.98
Number of irrelevant predicates:          26 (2%)
Number of preds handled by boolean abs:   1677 (98%)
  Total number of models for allsat:      2137
  Max number of models for allsat:        16
  Avg number of models for allsat:        7.58

Number of path formula cache hits:   437 (9%)

Time for post operator:                  1.726s
  Time for path formula creation:        1.689s
    Actual computation:                  1.579s
Time for strengthen operator:            0.007s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  2.929s
  Time for abstraction:                  2.878s (Max:     0.108s, Count: 612)
    Boolean abstraction:                 1.385s
    Solving time:                        0.294s (Max:     0.038s)
    Model enumeration time:              0.618s
    Time for BDD construction:           0.123s (Max:     0.014s)
Time for merge operator:                 0.148s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.912s

Number of BDD nodes:                               536
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                         221 (count: 1370, min: 0, max: 221, avg: 0.16)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.132s
Automaton transfers with branching:                0
Automaton transfer successors:                         8040 (count: 8040, min: 1, max: 1, avg: 1.00) [1 x 8040]

CPA algorithm statistics
------------------------
Number of iterations:            4279
Max size of waitlist:            79
Average size of waitlist:        56
Number of computed successors:   4870
Max successors for one state:    2
Number of times merged:          323
Number of times stopped:         497
Number of times breaked:         2

Total time for CPA algorithm:         5.727s (Max:     5.147s)
  Time for choose from waitlist:      0.027s
  Time for precision adjustment:      3.051s
  Time for transfer relation:         2.103s
  Time for merge operator:            0.234s
  Time for stop operator:             0.074s
  Time for adding to reached set:     0.062s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  18 (count: 2, min: 9, max: 9, avg: 9.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.152s
  Counterexample analysis:                0.132s (Max:     0.072s, Calls: 2)
    Refinement sat check:                 0.106s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.132s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.002s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       8 (count: 1, min: 8, max: 8, avg: 8.00)
Number of affected states:                                4 (count: 1, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp 'true':                  3 (count: 1, min: 3, max: 3, avg: 3.00)
Length (states) of path with itp non-trivial itp:         4 (count: 1, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               3 (count: 1, min: 3, max: 3, avg: 3.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 70
Max. size of reached set after ref.:  27
Avg. size of reached set before ref.: 70.00
Avg. size of reached set after ref.:  14.00

Total time for CEGAR algorithm:       5.896s
Time for refinements:                 0.169s
Average time for refinement:          0.084s
Max time for refinement:              0.097s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.171
  Visited lines:          2486
  Total lines:            6405
  Line coverage:          0.388
  Visited conditions:     222
  Total conditions:       1150
  Condition coverage:     0.193

CPAchecker general statistics
-----------------------------
Number of program locations:     3326
Number of CFA edges:             4037
Number of relevant variables:    894
Number of functions:             181
Number of loops:                 37
Size of reached set:             4241
  Number of reached locations:   613 (18%)
    Avg states per location:     6
    Max states per location:     60 (at node N4459)
  Number of reached functions:   31 (17%)
  Number of partitions:          4236
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N493 (before line 3118), Function PptDispatchInternalDeviceControl called from node N4929, stack depth 2 [37d28f02], stack [main, PptDispatchInternalDeviceControl], Init])
  Number of target states:       0
  Size of final wait list        55

Time for analysis setup:          4.160s
  Time for loading CPAs:          0.707s
  Time for loading parser:        0.475s
  Time for CFA construction:      2.889s
    Time for parsing file(s):     0.819s
    Time for AST to CFA:          1.046s
    Time for CFA sanity check:    0.128s
    Time for post-processing:     0.653s
      Time for var class.:        0.000s
Time for Analysis:                5.896s
CPU time for analysis:            5.890s
Total time for CPAchecker:       10.059s
Total CPU time for CPAchecker:   10.050s

Time for Garbage Collector:       0.289s (in 7 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                159MB (   152 MiB) max;     67MB (    64 MiB) avg;    167MB (   159 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     30MB (    29 MiB) avg;     39MB (    37 MiB) peak
Used in PS Old Gen pool:          25MB (    24 MiB) max;     17MB (    16 MiB) avg;     27MB (    26 MiB) peak
Allocated heap memory:           301MB (   287 MiB) max;    210MB (   200 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:  10416MB (  9933 MiB) max;  10393MB (  9911 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
