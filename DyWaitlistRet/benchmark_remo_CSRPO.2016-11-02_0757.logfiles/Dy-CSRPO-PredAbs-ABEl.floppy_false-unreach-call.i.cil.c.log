scripts/cpa.sh -heap 7000M -Dy-CSRPO-PredAbs-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/floppy_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

line 4850: Dead code detected: DisketteExtension->IoBufferSize = BufferSize; (CFACreationUtils.addEdgeToCFA, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        2 (count: 2, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            33 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            33 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       5 (15%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28 (85%)
  Times result was 'false':        15 (45%)
Number of strengthen sat checks:   198
  Times result was 'false':        194 (98%)
Number of coverage checks:         1922
  BDD entailment checks:           6
Number of SMT sat checks:          198
  trivial:                         0
  cached:                          11

Max ABE block size:                       151
Number of predicates discovered:          14
Number of abstraction locations:          3
Max number of predicates per location:    10
Avg number of predicates per location:    8
Total predicates per abstraction:         180
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 6.43
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   180 (100%)
  Total number of models for allsat:      15
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.54

Number of path formula cache hits:   2151 (23%)

Time for post operator:                  3.028s
  Time for path formula creation:        3.003s
    Actual computation:                  3.004s
Time for strengthen operator:            7.928s
  Time for satisfiability checks:        7.897s
Time for prec operator:                  9.311s
  Time for abstraction:                  9.293s (Max:     4.717s, Count: 33)
    Boolean abstraction:                 7.902s
    Solving time:                        5.578s (Max:     3.723s)
    Model enumeration time:              2.271s
    Time for BDD construction:           0.009s (Max:     0.008s)
Time for merge operator:                 1.160s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):    15.741s

Number of BDD nodes:                               304
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                          61 (count: 197, min: 0, max: 29, avg: 0.31)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.140s
Automaton transfers with branching:                0
Automaton transfer successors:                        13511 (count: 13511, min: 1, max: 1, avg: 1.00) [1 x 13511]

CPA algorithm statistics
------------------------
Number of iterations:            6931
Max size of waitlist:            85
Average size of waitlist:        30
Number of computed successors:   8024
Max successors for one state:    2
Number of times merged:          958
Number of times stopped:         964
Number of times breaked:         4

Total time for CPA algorithm:        22.769s (Max:    15.806s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      9.401s
  Time for transfer relation:        11.589s
  Time for merge operator:            1.297s
  Time for stop operator:             0.094s
  Time for adding to reached set:     0.153s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   9 (count: 4, min: 2, max: 3, avg: 2.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.272s
  Counterexample analysis:                1.266s (Max:     0.553s, Calls: 4)
    Refinement sat check:                 0.762s
    Interpolant computation:              0.000s
  Error path post-processing:                          1.945s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   1.266s
  Extracting precise counterexample:                   1.945s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.001s
  Precision update:                                    0.001s
  ARG update:                                          0.001s

Length of refined path (in blocks):                       4 (count: 2, min: 2, max: 2, avg: 2.00)
Number of affected states:                                2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 5249
Max. size of reached set after ref.:  5154
Avg. size of reached set before ref.: 4147.25
Avg. size of reached set after ref.:  3181.00

Total time for CEGAR algorithm:      26.148s
Time for refinements:                 3.351s
Average time for refinement:          0.837s
Max time for refinement:              2.374s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.997s

Code Coverage
-----------------------------
  Function coverage:      0.412
  Visited lines:          3239
  Total lines:            5847
  Line coverage:          0.554
  Visited conditions:     410
  Total conditions:       1098
  Condition coverage:     0.373

CPAchecker general statistics
-----------------------------
Number of program locations:     2483
Number of CFA edges:             3143
Number of relevant variables:    498
Number of functions:             97
Number of loops:                 19
Size of reached set:             5249
  Number of reached locations:   961 (39%)
    Avg states per location:     5
    Max states per location:     151 (at node N1)
  Number of reached functions:   40 (41%)
  Number of partitions:          5249
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        65

Time for analysis setup:          3.982s
  Time for loading CPAs:          0.660s
  Time for loading parser:        0.453s
  Time for CFA construction:      2.805s
    Time for parsing file(s):     0.725s
    Time for AST to CFA:          1.039s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.640s
      Time for var class.:        0.000s
Time for Analysis:               27.147s
CPU time for analysis:           27.140s
Total time for CPAchecker:       31.132s
Total CPU time for CPAchecker:   31.130s

Time for Garbage Collector:       0.813s (in 15 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                510MB (   487 MiB) max;    164MB (   156 MiB) avg;    559MB (   533 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     36MB (    34 MiB) avg;     46MB (    44 MiB) peak
Used in PS Old Gen pool:          53MB (    50 MiB) max;     27MB (    26 MiB) avg;     53MB (    50 MiB) peak
Allocated heap memory:           758MB (   723 MiB) max;    389MB (   371 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10406MB (  9924 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 2090) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
