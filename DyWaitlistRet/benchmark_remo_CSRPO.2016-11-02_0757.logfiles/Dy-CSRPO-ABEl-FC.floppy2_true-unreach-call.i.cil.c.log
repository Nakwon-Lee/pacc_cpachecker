scripts/cpa.sh -heap 7000M -Dy-CSRPO-ABEl-FC -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/floppy2_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

line 2010: Dereferencing of non-pointer type PULONG  in expression *Remainder (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!number of affected states:        2 (count: 1, min: 2, max: 2, avg: 2.00)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 1
successed forced covering: 1
cached!removed coverage count: 1
num of affected states: 1
refinement st 
number of affected states:        4 (count: 2, min: 2, max: 2, avg: 2.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 2
successed forced covering: 2
cached!removed coverage count: 2
num of affected states: 2
refinement st 
cached!number of affected states:        5 (count: 3, min: 1, max: 2, avg: 1.67)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 3
successed forced covering: 3
removed coverage count: 3
num of affected states: 3
cached!attempting forced covering: 4
successed forced covering: 4
removed coverage count: 4
num of affected states: 5
cached!attempting forced covering: 5
successed forced covering: 5
cached!removed coverage count: 4
num of affected states: 6
cached!cached!attempting forced covering: 6
successed forced covering: 6
removed coverage count: 5
num of affected states: 8
attempting forced covering: 7
successed forced covering: 7
cached!removed coverage count: 5
num of affected states: 9
cached!cached!attempting forced covering: 8
successed forced covering: 8
removed coverage count: 5
num of affected states: 10
refinement st 
cached!number of affected states:        5 (count: 4, min: 0, max: 2, avg: 1.25)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        6 (count: 5, min: 0, max: 2, avg: 1.20)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 9
successed forced covering: 9
removed coverage count: 8
num of affected states: 11
refinement st 
cached!cached!number of affected states:        8 (count: 6, min: 0, max: 2, avg: 1.33)
removed coverage count: 9
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 10
successed forced covering: 10
cached!removed coverage count: 9
num of affected states: 12
refinement st 
number of affected states:        8 (count: 7, min: 0, max: 2, avg: 1.14)
removed coverage count: 10
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 8, min: 0, max: 2, avg: 1.00)
removed coverage count: 11
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!attempting forced covering: 11
successed forced covering: 11
removed coverage count: 11
num of affected states: 13
refinement st 
number of affected states:        8 (count: 9, min: 0, max: 2, avg: 0.89)
removed coverage count: 13
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        9 (count: 10, min: 0, max: 2, avg: 0.90)
removed coverage count: 14
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 12
successed forced covering: 12
removed coverage count: 14
num of affected states: 14
refinement st 
cached!cached!number of affected states:       11 (count: 11, min: 0, max: 2, avg: 1.00)
removed coverage count: 15
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 13
successed forced covering: 13
cached!removed coverage count: 15
num of affected states: 15
refinement st 
number of affected states:       11 (count: 12, min: 0, max: 2, avg: 0.92)
removed coverage count: 16
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       11 (count: 13, min: 0, max: 2, avg: 0.85)
removed coverage count: 17
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!attempting forced covering: 14
successed forced covering: 14
cached!removed coverage count: 17
num of affected states: 16
cached!refinement st 
number of affected states:       11 (count: 14, min: 0, max: 2, avg: 0.79)
removed coverage count: 19
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       14 (count: 15, min: 0, max: 3, avg: 0.93)
removed coverage count: 21
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 15
successed forced covering: 15
cached!removed coverage count: 21
num of affected states: 17
cached!refinement st 
number of affected states:       14 (count: 16, min: 0, max: 3, avg: 0.88)
removed coverage count: 22
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       17 (count: 17, min: 0, max: 3, avg: 1.00)
removed coverage count: 23
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 16
successed forced covering: 16
cached!removed coverage count: 23
num of affected states: 18
cached!attempting forced covering: 17
successed forced covering: 17
removed coverage count: 24
num of affected states: 20
cached!attempting forced covering: 18
successed forced covering: 18
cached!removed coverage count: 24
num of affected states: 21
cached!cached!attempting forced covering: 19
successed forced covering: 19
cached!removed coverage count: 24
num of affected states: 22
cached!attempting forced covering: 20
successed forced covering: 20
removed coverage count: 24
num of affected states: 23
refinement st 
number of affected states:       17 (count: 18, min: 0, max: 3, avg: 0.94)
removed coverage count: 27
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       18 (count: 19, min: 0, max: 3, avg: 0.95)
removed coverage count: 28
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 21
cached!cached!attempting forced covering: 22
cached!attempting forced covering: 23
successed forced covering: 21
cached!removed coverage count: 28
num of affected states: 24
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!refinement st 
cached!cached!number of affected states:       20 (count: 20, min: 0, max: 3, avg: 1.00)
removed coverage count: 29
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 24
successed forced covering: 22
cached!removed coverage count: 29
num of affected states: 25
cached!refinement st 
number of affected states:       20 (count: 21, min: 0, max: 3, avg: 0.95)
removed coverage count: 30
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       20 (count: 22, min: 0, max: 3, avg: 0.91)
removed coverage count: 31
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!attempting forced covering: 25
successed forced covering: 23
cached!removed coverage count: 31
num of affected states: 26
cached!refinement st 
number of affected states:       21 (count: 23, min: 0, max: 3, avg: 0.91)
removed coverage count: 32
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 26
successed forced covering: 24
cached!removed coverage count: 32
num of affected states: 27
cached!refinement st 
number of affected states:       21 (count: 24, min: 0, max: 3, avg: 0.88)
removed coverage count: 32
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       22 (count: 25, min: 0, max: 3, avg: 0.88)
removed coverage count: 33
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 27
successed forced covering: 25
cached!removed coverage count: 33
num of affected states: 28
refinement st 
cached!number of affected states:       23 (count: 26, min: 0, max: 3, avg: 0.88)
removed coverage count: 34
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 28
successed forced covering: 26
cached!removed coverage count: 34
num of affected states: 29
cached!refinement st 
cached!number of affected states:       24 (count: 27, min: 0, max: 3, avg: 0.89)
removed coverage count: 35
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 29
successed forced covering: 27
cached!removed coverage count: 35
num of affected states: 30
refinement st 
cached!number of affected states:       25 (count: 28, min: 0, max: 3, avg: 0.89)
removed coverage count: 36
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 30
successed forced covering: 28
cached!removed coverage count: 36
num of affected states: 31
cached!cached!refinement st 
number of affected states:       26 (count: 29, min: 0, max: 3, avg: 0.90)
removed coverage count: 37
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 31
successed forced covering: 29
removed coverage count: 37
num of affected states: 32
cached!refinement st 
number of affected states:       26 (count: 30, min: 0, max: 3, avg: 0.87)
removed coverage count: 37
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       27 (count: 31, min: 0, max: 3, avg: 0.87)
removed coverage count: 38
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 32
successed forced covering: 30
removed coverage count: 38
num of affected states: 33
refinement st 
number of affected states:       28 (count: 32, min: 0, max: 3, avg: 0.88)
removed coverage count: 39
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 33
successed forced covering: 31
removed coverage count: 39
num of affected states: 34
cached!refinement st 
number of affected states:       29 (count: 33, min: 0, max: 3, avg: 0.88)
removed coverage count: 41
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 34
successed forced covering: 32
removed coverage count: 41
num of affected states: 35
refinement st 
number of affected states:       31 (count: 34, min: 0, max: 3, avg: 0.91)
removed coverage count: 43
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 35
successed forced covering: 33
removed coverage count: 43
num of affected states: 36
cached!attempting forced covering: 36
attempting forced covering: 37
successed forced covering: 34
removed coverage count: 43
num of affected states: 37
refinement st 
number of affected states:       31 (count: 35, min: 0, max: 3, avg: 0.89)
removed coverage count: 43
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       31 (count: 36, min: 0, max: 3, avg: 0.86)
removed coverage count: 43
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       31 (count: 37, min: 0, max: 3, avg: 0.84)
removed coverage count: 43
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!number of affected states:       31 (count: 38, min: 0, max: 3, avg: 0.82)
removed coverage count: 43
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       31 (count: 39, min: 0, max: 3, avg: 0.79)
removed coverage count: 43
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       31 (count: 40, min: 0, max: 3, avg: 0.77)
removed coverage count: 43
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
CEGARAlgorithme run ed
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            57 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            57 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       57 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   286
  Times result was 'false':        246 (86%)
Number of coverage checks:         4175
  BDD entailment checks:           105
Number of SMT sat checks:          477
  trivial:                         42
  cached:                          100

Max ABE block size:                       191
Number of predicates discovered:          28
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  2.882s
  Time for path formula creation:        2.732s
Time for strengthen operator:           13.371s
  Time for satisfiability checks:       13.319s
Time for prec operator:                  0.390s
  Time for abstraction:                  0.354s (Max:     0.052s, Count: 57)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 4.035s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):    13.339s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.388s
Automaton transfers with branching:                0
Automaton transfer successors:                        54241 (count: 54241, min: 1, max: 1, avg: 1.00) [1 x 54241]

Predicate Forced Covering statistics
------------------------------------
Attempted forced coverings:             37
Successful forced coverings:            34 (92%)
No of times elment was already covered: 3

CPA algorithm statistics
------------------------
Number of iterations:            17121
Max size of waitlist:            175
Average size of waitlist:        36
Number of computed successors:   19257
Max successors for one state:    2
Number of times merged:          2035
Number of times stopped:         2035
Number of times breaked:         40

Total time for CPA algorithm:        36.217s (Max:     4.014s)
  Time for choose from waitlist:      0.429s
  Time for forced covering:          12.786s
  Time for precision adjustment:      0.522s
  Time for transfer relation:        17.472s
  Time for merge operator:            4.233s
  Time for stop operator:             0.117s
  Time for adding to reached set:     0.191s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 117 (count: 40, min: 2, max: 5, avg: 2.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.196s
  Counterexample analysis:                5.081s (Max:     0.571s, Calls: 40)
    Refinement sat check:                 2.366s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   5.081s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.005s
  Checking whether itp is new:            0.012s
  Coverage checks:                        0.000s
  ARG update:                             0.019s

Number of abstractions during refinements:  49
Length of refined path (in blocks):                     103 (count: 40, min: 1, max: 5, avg: 2.58)
Number of affected states:                               31 (count: 40, min: 0, max: 3, avg: 0.77)
Length (states) of path with itp 'true':                 14 (count: 40, min: 0, max: 3, avg: 0.35)
Length (states) of path with itp non-trivial itp:        49 (count: 40, min: 0, max: 4, avg: 1.23)
Length (states) of path with itp 'false':                10 (count: 40, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           4 (count: 40, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:              15 (count: 40, min: 0, max: 3, avg: 0.38)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 13049
Max. size of reached set after ref.:  13048
Avg. size of reached set before ref.: 8843.05
Avg. size of reached set after ref.:  8740.95

Total time for CEGAR algorithm:      42.095s
Time for refinements:                 5.677s
Average time for refinement:          0.141s
Max time for refinement:              0.582s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.446
  Visited lines:          7701
  Total lines:            19153
  Line coverage:          0.402
  Visited conditions:     470
  Total conditions:       1246
  Condition coverage:     0.377

CPAchecker general statistics
-----------------------------
Number of program locations:     3695
Number of CFA edges:             4594
Number of relevant variables:    5774
Number of functions:             121
Number of loops:                 19
Size of reached set:             13139
  Number of reached locations:   1430 (39%)
    Avg states per location:     9
    Max states per location:     240 (at node N2043)
  Number of reached functions:   54 (45%)
  Number of partitions:          12068
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N17018, Function main called from node N16902, stack depth 1 [34065642], stack [main], ABS0: true, Init])
  Number of target states:       0

Time for analysis setup:          6.254s
  Time for loading CPAs:          1.014s
  Time for loading parser:        0.475s
  Time for CFA construction:      4.702s
    Time for parsing file(s):     1.300s
    Time for AST to CFA:          1.573s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     1.276s
      Time for var class.:        0.000s
Time for Analysis:               42.101s
CPU time for analysis:           42.100s
Total time for CPAchecker:       48.358s
Total CPU time for CPAchecker:   48.340s

Time for Garbage Collector:       1.364s (in 25 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                806MB (   769 MiB) max;    225MB (   215 MiB) avg;    806MB (   769 MiB) peak
Used non-heap memory:             50MB (    47 MiB) max;     43MB (    41 MiB) avg;     50MB (    47 MiB) peak
Used in PS Old Gen pool:          51MB (    49 MiB) max;     41MB (    39 MiB) avg;     51MB (    49 MiB) peak
Allocated heap memory:          1002MB (   956 MiB) max;    508MB (   484 MiB) avg
Allocated non-heap memory:        51MB (    48 MiB) max;     45MB (    43 MiB) avg
Total process virtual memory:  10418MB (  9936 MiB) max;  10410MB (  9928 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
