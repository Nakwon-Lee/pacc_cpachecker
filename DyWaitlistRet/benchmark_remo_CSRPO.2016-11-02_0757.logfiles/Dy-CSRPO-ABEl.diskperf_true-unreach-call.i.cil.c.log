scripts/cpa.sh -heap 7000M -Dy-CSRPO-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/diskperf_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

line 3030: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Extern function KeQueryPerformanceCounter((void *)0) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoAllocateErrorLogEntry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function IoWriteErrorLogEntry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter(&frequency) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function KeQuerySystemTime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!number of affected states:        2 (count: 2, min: 1, max: 1, avg: 1.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 3, min: 1, max: 1, avg: 1.00)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!number of affected states:        4 (count: 4, min: 1, max: 1, avg: 1.00)
removed coverage count: 4
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:        5 (count: 5, min: 1, max: 1, avg: 1.00)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
CEGARAlgorithme run ed
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            4 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            4 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       4 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   61
  Times result was 'false':        56 (92%)
Number of coverage checks:         506
  BDD entailment checks:           10
Number of SMT sat checks:          78
  trivial:                         6
  cached:                          5

Max ABE block size:                       27
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  0.784s
  Time for path formula creation:        0.771s
Time for strengthen operator:            5.364s
  Time for satisfiability checks:        5.341s
Time for prec operator:                  0.026s
  Time for abstraction:                  0.017s (Max:     0.014s, Count: 4)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.160s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     5.341s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.070s
Automaton transfers with branching:                0
Automaton transfer successors:                         3936 (count: 3936, min: 1, max: 1, avg: 1.00) [1 x 3936]

CPA algorithm statistics
------------------------
Number of iterations:            1858
Max size of waitlist:            25
Average size of waitlist:        11
Number of computed successors:   2116
Max successors for one state:    2
Number of times merged:          248
Number of times stopped:         248
Number of times breaked:         5

Total time for CPA algorithm:         6.802s (Max:     4.105s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      0.092s
  Time for transfer relation:         6.339s
  Time for merge operator:            0.199s
  Time for stop operator:             0.027s
  Time for adding to reached set:     0.043s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                  14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.135s
  Counterexample analysis:                0.109s (Max:     0.037s, Calls: 5)
    Refinement sat check:                 0.054s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.109s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.017s
  Checking whether itp is new:            0.000s
  Coverage checks:                        0.001s
  ARG update:                             0.001s

Number of abstractions during refinements:  7
Length of refined path (in blocks):                      14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of affected states:                                5 (count: 5, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 5, min: 1, max: 3, avg: 1.80)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               4 (count: 5, min: 0, max: 2, avg: 0.80)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1858
Max. size of reached set after ref.:  1857
Avg. size of reached set before ref.: 1745.20
Avg. size of reached set after ref.:  1744.20

Total time for CEGAR algorithm:       7.036s
Time for refinements:                 0.223s
Average time for refinement:          0.044s
Max time for refinement:              0.082s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.322
  Visited lines:          2372
  Total lines:            2837
  Line coverage:          0.836
  Visited conditions:     178
  Total conditions:       270
  Condition coverage:     0.659

CPAchecker general statistics
-----------------------------
Number of program locations:     967
Number of CFA edges:             1107
Number of relevant variables:    227
Number of functions:             87
Number of loops:                 2
Size of reached set:             1864
  Number of reached locations:   505 (52%)
    Avg states per location:     3
    Max states per location:     61 (at node N5)
  Number of reached functions:   28 (32%)
  Number of partitions:          1861
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N435 (before lines 2571-2583), Function DiskPerfDeviceControl called from node N898, stack depth 2 [2d82408], stack [main, DiskPerfDeviceControl], Init])
  Number of target states:       0

Time for analysis setup:          2.906s
  Time for loading CPAs:          0.591s
  Time for loading parser:        0.455s
  Time for CFA construction:      1.760s
    Time for parsing file(s):     0.612s
    Time for AST to CFA:          0.560s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.311s
      Time for var class.:        0.000s
Time for Analysis:                7.039s
CPU time for analysis:            7.040s
Total time for CPAchecker:        9.948s
Total CPU time for CPAchecker:    9.950s

Time for Garbage Collector:       0.239s (in 7 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                156MB (   148 MiB) max;     65MB (    62 MiB) avg;    159MB (   151 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     30MB (    29 MiB) avg;     38MB (    37 MiB) peak
Used in PS Old Gen pool:          17MB (    16 MiB) max;     13MB (    13 MiB) avg;     18MB (    17 MiB) peak
Allocated heap memory:           275MB (   263 MiB) max;    197MB (   188 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10393MB (  9912 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
