scripts/cpa.sh -heap 7000M -Dy-CSRPO-ABEl-FC -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_clnt.blast.02_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!attempting forced covering: 1
refinement st 
number of affected states:        3 (count: 2, min: 1, max: 2, avg: 1.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!attempting forced covering: 2
cached!attempting forced covering: 3
refinement st 
number of affected states:        5 (count: 3, min: 1, max: 2, avg: 1.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!attempting forced covering: 4
cached!attempting forced covering: 5
cached!attempting forced covering: 6
refinement st 
number of affected states:        8 (count: 4, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!attempting forced covering: 7
cached!attempting forced covering: 8
cached!attempting forced covering: 9
cached!attempting forced covering: 10
refinement st 
cached!number of affected states:       10 (count: 5, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!attempting forced covering: 11
cached!attempting forced covering: 12
cached!attempting forced covering: 13
cached!attempting forced covering: 14
cached!attempting forced covering: 15
refinement st 
number of affected states:       16 (count: 6, min: 1, max: 6, avg: 2.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!attempting forced covering: 16
cached!attempting forced covering: 17
cached!attempting forced covering: 18
cached!attempting forced covering: 19
cached!attempting forced covering: 20
cached!attempting forced covering: 21
refinement st 
number of affected states:       19 (count: 7, min: 1, max: 6, avg: 2.71)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!attempting forced covering: 22
cached!attempting forced covering: 23
cached!attempting forced covering: 24
cached!attempting forced covering: 25
cached!attempting forced covering: 26
cached!attempting forced covering: 27
cached!attempting forced covering: 28
refinement st 
number of affected states:       27 (count: 8, min: 1, max: 8, avg: 3.38)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!attempting forced covering: 29
cached!attempting forced covering: 30
cached!attempting forced covering: 31
cached!attempting forced covering: 32
cached!attempting forced covering: 33
cached!attempting forced covering: 34
cached!attempting forced covering: 35
cached!attempting forced covering: 36
refinement st 
number of affected states:       32 (count: 9, min: 1, max: 8, avg: 3.56)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!attempting forced covering: 37
cached!attempting forced covering: 38
cached!attempting forced covering: 39
cached!attempting forced covering: 40
cached!attempting forced covering: 41
cached!attempting forced covering: 42
cached!attempting forced covering: 43
cached!attempting forced covering: 44
cached!attempting forced covering: 45
refinement st 
number of affected states:       39 (count: 10, min: 1, max: 8, avg: 3.90)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!attempting forced covering: 46
cached!attempting forced covering: 47
cached!attempting forced covering: 48
cached!attempting forced covering: 49
cached!attempting forced covering: 50
cached!attempting forced covering: 51
cached!attempting forced covering: 52
cached!attempting forced covering: 53
cached!attempting forced covering: 54
cached!attempting forced covering: 55
refinement st 
number of affected states:       42 (count: 11, min: 1, max: 8, avg: 3.82)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!attempting forced covering: 56
cached!attempting forced covering: 57
cached!attempting forced covering: 58
cached!attempting forced covering: 59
cached!attempting forced covering: 60
cached!attempting forced covering: 61
cached!attempting forced covering: 62
cached!attempting forced covering: 63
cached!attempting forced covering: 64
cached!attempting forced covering: 65
cached!attempting forced covering: 66
refinement st 
number of affected states:       50 (count: 12, min: 1, max: 8, avg: 4.17)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!attempting forced covering: 67
cached!attempting forced covering: 68
cached!attempting forced covering: 69
cached!attempting forced covering: 70
cached!attempting forced covering: 71
cached!attempting forced covering: 72
cached!attempting forced covering: 73
cached!attempting forced covering: 74
cached!attempting forced covering: 75
cached!attempting forced covering: 76
cached!attempting forced covering: 77
cached!attempting forced covering: 78
refinement st 
number of affected states:       57 (count: 13, min: 1, max: 8, avg: 4.38)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!attempting forced covering: 79
cached!attempting forced covering: 80
cached!attempting forced covering: 81
cached!attempting forced covering: 82
cached!attempting forced covering: 83
cached!attempting forced covering: 84
cached!attempting forced covering: 85
cached!attempting forced covering: 86
cached!attempting forced covering: 87
cached!attempting forced covering: 88
cached!attempting forced covering: 89
cached!attempting forced covering: 90
cached!attempting forced covering: 91
refinement st 
number of affected states:       63 (count: 14, min: 1, max: 8, avg: 4.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
CEGARAlgorithme run ed
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            14 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            14 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       14 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   14
  Times result was 'false':        0 (0%)
Number of coverage checks:         2604
  BDD entailment checks:           472
Number of SMT sat checks:          591
  trivial:                         0
  cached:                          139

Max ABE block size:                       46
Number of predicates discovered:          318
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  0.952s
  Time for path formula creation:        0.931s
Time for strengthen operator:            0.090s
  Time for satisfiability checks:        0.057s
Time for prec operator:                  0.054s
  Time for abstraction:                  0.051s (Max:     0.013s, Count: 14)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.353s
Time for coverage check:                 3.686s
  Time for BDD entailment checks:        3.678s
Total time for SMT solver (w/o itp):     4.219s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.100s
Automaton transfers with branching:                0
Automaton transfer successors:                         7367 (count: 7367, min: 1, max: 1, avg: 1.00) [1 x 7367]

Predicate Forced Covering statistics
------------------------------------
Attempted forced coverings:             91
Successful forced coverings:            0 (0%)
No of times elment was already covered: 0

CPA algorithm statistics
------------------------
Number of iterations:            3682
Max size of waitlist:            113
Average size of waitlist:        55
Number of computed successors:   4806
Max successors for one state:    2
Number of times merged:          1066
Number of times stopped:         1066
Number of times breaked:         14

Total time for CPA algorithm:        39.039s (Max:     8.354s)
  Time for choose from waitlist:      0.018s
  Time for forced covering:          36.210s
  Time for precision adjustment:      0.298s
  Time for transfer relation:         1.343s
  Time for merge operator:            0.484s
  Time for stop operator:             0.431s
  Time for adding to reached set:     0.098s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 119 (count: 14, min: 2, max: 15, avg: 8.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.316s
  Counterexample analysis:               30.292s (Max:     5.845s, Calls: 14)
    Refinement sat check:                 8.046s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                  30.292s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.108s
  Checking whether itp is new:            0.503s
  Coverage checks:                        3.277s
  ARG update:                             0.001s

Number of abstractions during refinements:  105
Length of refined path (in blocks):                     119 (count: 14, min: 2, max: 15, avg: 8.50)
Number of affected states:                               63 (count: 14, min: 1, max: 8, avg: 4.50)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       105 (count: 14, min: 1, max: 14, avg: 7.50)
Length (states) of path with itp 'false':                 0 (count: 14, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          84 (count: 14, min: 0, max: 11, avg: 6.00)
Equal non-trivial interpolants along paths:               7 (count: 14, min: 0, max: 4, avg: 0.50)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 3672
Max. size of reached set after ref.:  3671
Avg. size of reached set before ref.: 1943.00
Avg. size of reached set after ref.:  1942.00

Total time for CEGAR algorithm:      73.500s
Time for refinements:                34.402s
Average time for refinement:          2.457s
Max time for refinement:              6.614s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1556
  Total lines:            1571
  Line coverage:          0.990
  Visited conditions:     170
  Total conditions:       174
  Condition coverage:     0.977

CPAchecker general statistics
-----------------------------
Number of program locations:     334
Number of CFA edges:             419
Number of relevant variables:    30
Number of functions:             4
Number of loops:                 1
Size of reached set:             3727
  Number of reached locations:   315 (94%)
    Avg states per location:     11
    Max states per location:     14 (at node N98)
  Number of reached functions:   2 (50%)
  Number of partitions:          3714
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N98 (before line 1132), Function ssl3_connect called from node N34, stack depth 2 [f14a7d4], stack [main, ssl3_connect], Init])
  Number of target states:       0

Time for analysis setup:          2.067s
  Time for loading CPAs:          0.449s
  Time for loading parser:        0.480s
  Time for CFA construction:      1.061s
    Time for parsing file(s):     0.435s
    Time for AST to CFA:          0.220s
    Time for CFA sanity check:    0.024s
    Time for post-processing:     0.156s
      Time for var class.:        0.000s
Time for Analysis:               73.501s
CPU time for analysis:           73.500s
Total time for CPAchecker:       75.571s
Total CPU time for CPAchecker:   75.580s

Time for Garbage Collector:       1.228s (in 33 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1320MB (  1259 MiB) max;    422MB (   402 MiB) avg;   1320MB (  1259 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     37MB (    36 MiB) avg;     42MB (    40 MiB) peak
Used in PS Old Gen pool:          25MB (    24 MiB) max;     18MB (    17 MiB) avg;     25MB (    24 MiB) peak
Allocated heap memory:          1463MB (  1396 MiB) max;    853MB (   813 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10410MB (  9928 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
