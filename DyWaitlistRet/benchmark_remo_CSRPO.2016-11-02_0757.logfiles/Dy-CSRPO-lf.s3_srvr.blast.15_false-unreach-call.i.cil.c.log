scripts/cpa.sh -heap 7000M -Dy-CSRPO-lf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.15_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:        4 (count: 2, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:        7 (count: 3, min: 1, max: 3, avg: 2.33)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       11 (count: 4, min: 1, max: 4, avg: 2.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       14 (count: 5, min: 1, max: 4, avg: 2.80)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!refinement st 
number of affected states:       21 (count: 6, min: 1, max: 7, avg: 3.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       26 (count: 7, min: 1, max: 7, avg: 3.71)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!refinement st 
number of affected states:       30 (count: 8, min: 1, max: 7, avg: 3.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
number of affected states:       35 (count: 9, min: 1, max: 7, avg: 3.89)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            11 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1 (9%)
  Because of loop head:            10 (91%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       11 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   10
  Times result was 'false':        0 (0%)
Number of coverage checks:         1867
  BDD entailment checks:           151
Number of SMT sat checks:          208
  trivial:                         0
  cached:                          21

Max ABE block size:                       54
Number of predicates discovered:          386
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  1.112s
  Time for path formula creation:        1.092s
Time for strengthen operator:            0.102s
  Time for satisfiability checks:        0.075s
Time for prec operator:                  0.046s
  Time for abstraction:                  0.045s (Max:     0.013s, Count: 11)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.285s
Time for coverage check:                 3.170s
  Time for BDD entailment checks:        3.162s
Total time for SMT solver (w/o itp):     4.246s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                         5970 (count: 5970, min: 1, max: 1, avg: 1.00) [1 x 5970]

CPA algorithm statistics
------------------------
Number of iterations:            2884
Max size of waitlist:            93
Average size of waitlist:        46
Number of computed successors:   3839
Max successors for one state:    2
Number of times merged:          858
Number of times stopped:         858
Number of times breaked:         10

Total time for CPA algorithm:         2.504s (Max:     0.503s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      0.085s
  Time for transfer relation:         1.503s
  Time for merge operator:            0.370s
  Time for stop operator:             0.360s
  Time for adding to reached set:     0.060s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                  75 (count: 10, min: 3, max: 12, avg: 7.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.114s
  Counterexample analysis:               24.552s (Max:     5.158s, Calls: 10)
    Refinement sat check:                11.565s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.407s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                  24.552s
  Extracting precise counterexample:                   0.407s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.124s
  Checking whether itp is new:            1.011s
  Coverage checks:                        2.861s
  ARG update:                             0.013s

Number of abstractions during refinements:  47
Length of refined path (in blocks):                      63 (count: 9, min: 3, max: 11, avg: 7.00)
Number of affected states:                               35 (count: 9, min: 1, max: 7, avg: 3.89)
Length (states) of path with itp 'true':                  1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp non-trivial itp:        53 (count: 9, min: 1, max: 10, avg: 5.89)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          44 (count: 9, min: 0, max: 9, avg: 4.89)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 2973
Max. size of reached set after ref.:  2661
Avg. size of reached set before ref.: 1573.50
Avg. size of reached set after ref.:  1417.00

Total time for CEGAR algorithm:      31.714s
Time for refinements:                29.203s
Average time for refinement:          2.920s
Max time for refinement:              6.955s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.332s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1636
  Total lines:            1669
  Line coverage:          0.980
  Visited conditions:     204
  Total conditions:       214
  Condition coverage:     0.953

CPAchecker general statistics
-----------------------------
Number of program locations:     388
Number of CFA edges:             492
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             2973
  Number of reached locations:   350 (90%)
    Avg states per location:     8
    Max states per location:     10 (at node N97)
  Number of reached functions:   2 (40%)
  Number of partitions:          2964
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N97 (before lines 1141-1729), Function ssl3_accept called from node N33, stack depth 2 [1672fe87], stack [main, ssl3_accept], Init])
  Number of target states:       1
  Size of final wait list        89

Time for analysis setup:          1.973s
  Time for loading CPAs:          0.448s
  Time for loading parser:        0.424s
  Time for CFA construction:      1.037s
    Time for parsing file(s):     0.443s
    Time for AST to CFA:          0.252s
    Time for CFA sanity check:    0.023s
    Time for post-processing:     0.142s
      Time for var class.:        0.000s
Time for Analysis:               33.047s
CPU time for analysis:           33.050s
Total time for CPAchecker:       35.022s
Total CPU time for CPAchecker:   35.010s

Time for Garbage Collector:       0.605s (in 21 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                937MB (   894 MiB) max;    260MB (   248 MiB) avg;    939MB (   895 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     35MB (    34 MiB) avg;     44MB (    42 MiB) peak
Used in PS Old Gen pool:          17MB (    16 MiB) max;     15MB (    14 MiB) avg;     17MB (    16 MiB) peak
Allocated heap memory:          1148MB (  1095 MiB) max;    647MB (   617 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  10348MB (  9869 MiB) max;  10342MB (  9863 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1740) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
