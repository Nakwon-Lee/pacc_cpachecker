scripts/cpa.sh -heap 7000M -Dy-ABlkBFSCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/parport_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 6170: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6171: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6172: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6221: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6245: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6698: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6699: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6700: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6763: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6843: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8237: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8248: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8558: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8559: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8567: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8568: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8576: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9098: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9393: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9423: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:        5 (count: 2, min: 1, max: 4, avg: 2.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function KeSynchronizeExecution to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:        6 (count: 3, min: 1, max: 4, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function PoRequestPowerIrp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function PoSetPowerState(Extension->DeviceObject, powerType, powerState) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            202 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  200 (99%)
  Because of loop head:            2 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       8 (4%)
  Times precision was {false}:     30 (15%)
  Times result was cached:         52 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      112 (55%)
  Times result was 'false':        27 (13%)
Number of strengthen sat checks:   5
  Times result was 'false':        0 (0%)
Number of coverage checks:         235
  BDD entailment checks:           5
Number of SMT sat checks:          5
  trivial:                         1
  cached:                          0

Max ABE block size:                       27
Number of predicates discovered:          10
Number of abstraction locations:          7
Max number of predicates per location:    9
Avg number of predicates per location:    7
Total predicates per abstraction:         846
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 5.96
Number of irrelevant predicates:          229 (27%)
Number of preds handled by boolean abs:   617 (73%)
  Total number of models for allsat:      772
  Max number of models for allsat:        32
  Avg number of models for allsat:        6.89

Number of path formula cache hits:   617 (28%)

Time for post operator:                  0.998s
  Time for path formula creation:        0.993s
    Actual computation:                  1.015s
Time for strengthen operator:            0.012s
  Time for satisfiability checks:        0.001s
Time for prec operator:                  1.535s
  Time for abstraction:                  1.511s (Max:     0.103s, Count: 202)
    Boolean abstraction:                 0.710s
    Solving time:                        0.249s (Max:     0.039s)
    Model enumeration time:              0.327s
    Time for BDD construction:           0.059s (Max:     0.014s)
Time for merge operator:                 0.048s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.577s

Number of BDD nodes:                               1075
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                           0 (count: 617, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.039s
Automaton transfers with branching:                0
Automaton transfer successors:                         3217 (count: 3217, min: 1, max: 1, avg: 1.00) [1 x 3217]

CPA algorithm statistics
------------------------
Number of iterations:            1048
Max size of waitlist:            40
Average size of waitlist:        18
Number of computed successors:   1256
Max successors for one state:    2
Number of times merged:          115
Number of times stopped:         118
Number of times breaked:         5

Total time for CPA algorithm:         2.890s (Max:     1.163s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      1.545s
  Time for transfer relation:         1.135s
  Time for merge operator:            0.084s
  Time for stop operator:             0.013s
  Time for adding to reached set:     0.062s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  37 (count: 5, min: 4, max: 10, avg: 7.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.534s
  Counterexample analysis:                0.256s (Max:     0.088s, Calls: 5)
    Refinement sat check:                 0.157s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.241s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.256s
  Extracting precise counterexample:                   0.241s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.002s
  ARG update:                                          0.002s

Length of refined path (in blocks):                      20 (count: 3, min: 3, max: 9, avg: 6.67)
Number of affected states:                                6 (count: 3, min: 1, max: 4, avg: 2.00)
Length (states) of path with itp 'true':                 11 (count: 3, min: 1, max: 7, avg: 3.67)
Length (states) of path with itp non-trivial itp:         6 (count: 3, min: 1, max: 4, avg: 2.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               3 (count: 3, min: 0, max: 3, avg: 1.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 721
Max. size of reached set after ref.:  574
Avg. size of reached set before ref.: 352.40
Avg. size of reached set after ref.:  162.50

Total time for CEGAR algorithm:       3.460s
Time for refinements:                 0.569s
Average time for refinement:          0.113s
Max time for refinement:              0.323s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.460s

Code Coverage
-----------------------------
  Function coverage:      0.188
  Visited lines:          2410
  Total lines:            6405
  Line coverage:          0.376
  Visited conditions:     216
  Total conditions:       1150
  Condition coverage:     0.188

CPAchecker general statistics
-----------------------------
Number of program locations:     3326
Number of CFA edges:             4037
Number of relevant variables:    894
Number of functions:             181
Number of loops:                 37
Size of reached set:             721
  Number of reached locations:   517 (16%)
    Avg states per location:     1
    Max states per location:     12 (at node N2706)
  Number of reached functions:   34 (19%)
  Number of partitions:          720
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4926 (before line 9594), Function main called from node N4830, stack depth 1 [2b960a7], stack [main], Init])
  Number of target states:       1
  Size of final wait list        36

Time for analysis setup:          4.636s
  Time for loading CPAs:          0.957s
  Time for loading parser:        0.468s
  Time for CFA construction:      3.082s
    Time for parsing file(s):     0.782s
    Time for AST to CFA:          1.052s
    Time for CFA sanity check:    0.186s
    Time for post-processing:     0.805s
      Time for var class.:        0.000s
Time for Analysis:                3.933s
CPU time for analysis:            3.940s
Total time for CPAchecker:        8.577s
Total CPU time for CPAchecker:    8.570s

Time for Garbage Collector:       0.586s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                158MB (   151 MiB) max;     62MB (    59 MiB) avg;    170MB (   162 MiB) peak
Used non-heap memory:             45MB (    42 MiB) max;     31MB (    29 MiB) avg;     45MB (    43 MiB) peak
Used in PS Old Gen pool:          30MB (    29 MiB) max;     16MB (    16 MiB) avg;     30MB (    29 MiB) peak
Allocated heap memory:           237MB (   226 MiB) max;    191MB (   182 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10386MB (  9905 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 2244) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
