scripts/cpa.sh -heap 7000M -Dy-ABlkBFSCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_clnt.blast.03_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        2 (count: 1, min: 2, max: 2, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 2, min: 2, max: 6, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            27 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13 (48%)
  Because of loop head:            14 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       12 (44%)
  Times precision was {false}:     1 (4%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (52%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   14
  Times result was 'false':        10 (71%)
Number of coverage checks:         1993
  BDD entailment checks:           33
Number of SMT sat checks:          14
  trivial:                         0
  cached:                          0

Max ABE block size:                       46
Number of predicates discovered:          19
Number of abstraction locations:          3
Max number of predicates per location:    17
Avg number of predicates per location:    7
Total predicates per abstraction:         142
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 9.47
Number of irrelevant predicates:          2 (1%)
Number of preds handled by boolean abs:   140 (99%)
  Total number of models for allsat:      112
  Max number of models for allsat:        28
  Avg number of models for allsat:        8.00

Number of path formula cache hits:   3036 (55%)

Time for post operator:                  0.668s
  Time for path formula creation:        0.645s
    Actual computation:                  0.619s
Time for strengthen operator:            0.069s
  Time for satisfiability checks:        0.049s
Time for prec operator:                  1.868s
  Time for abstraction:                  1.866s (Max:     0.261s, Count: 27)
    Boolean abstraction:                 1.215s
    Solving time:                        0.323s (Max:     0.072s)
    Model enumeration time:              0.806s
    Time for BDD construction:           0.036s (Max:     0.014s)
Time for merge operator:                 0.238s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.178s

Number of BDD nodes:                               2462
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                         145 (count: 334, min: 0, max: 145, avg: 0.43)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.066s
Automaton transfers with branching:                0
Automaton transfer successors:                         7126 (count: 7126, min: 1, max: 1, avg: 1.00) [1 x 7126]

CPA algorithm statistics
------------------------
Number of iterations:            3457
Max size of waitlist:            36
Average size of waitlist:        19
Number of computed successors:   4505
Max successors for one state:    2
Number of times merged:          980
Number of times stopped:         987
Number of times breaked:         4

Total time for CPA algorithm:         3.572s (Max:     1.290s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      1.920s
  Time for transfer relation:         1.025s
  Time for merge operator:            0.333s
  Time for stop operator:             0.034s
  Time for adding to reached set:     0.090s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  22 (count: 4, min: 3, max: 8, avg: 5.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.114s
  Counterexample analysis:                1.800s (Max:     0.813s, Calls: 4)
    Refinement sat check:                 0.978s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.257s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   1.800s
  Extracting precise counterexample:                   0.257s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.002s
  ARG update:                                          0.026s

Length of refined path (in blocks):                      11 (count: 2, min: 4, max: 7, avg: 5.50)
Number of affected states:                                8 (count: 2, min: 2, max: 6, avg: 4.00)
Length (states) of path with itp 'true':                  1 (count: 2, min: 0, max: 1, avg: 0.50)
Length (states) of path with itp non-trivial itp:         8 (count: 2, min: 2, max: 6, avg: 4.00)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           6 (count: 2, min: 1, max: 5, avg: 3.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 1571
Max. size of reached set after ref.:  42
Avg. size of reached set before ref.: 892.75
Avg. size of reached set after ref.:  17.33

Total time for CEGAR algorithm:       5.734s
Time for refinements:                 2.162s
Average time for refinement:          0.540s
Max time for refinement:              1.084s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.693s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1556
  Total lines:            1571
  Line coverage:          0.990
  Visited conditions:     170
  Total conditions:       174
  Condition coverage:     0.977

CPAchecker general statistics
-----------------------------
Number of program locations:     334
Number of CFA edges:             419
Number of relevant variables:    30
Number of functions:             4
Number of loops:                 1
Size of reached set:             1571
  Number of reached locations:   316 (95%)
    Avg states per location:     4
    Max states per location:     6 (at node N98)
  Number of reached functions:   2 (50%)
  Number of partitions:          1566
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N98 (before line 1131), Function ssl3_connect called from node N34, stack depth 2 [55b5e331], stack [main, ssl3_connect], Init])
  Number of target states:       1
  Size of final wait list        16

Time for analysis setup:          2.099s
  Time for loading CPAs:          0.540s
  Time for loading parser:        0.470s
  Time for CFA construction:      1.042s
    Time for parsing file(s):     0.452s
    Time for AST to CFA:          0.231s
    Time for CFA sanity check:    0.020s
    Time for post-processing:     0.156s
      Time for var class.:        0.000s
Time for Analysis:                7.429s
CPU time for analysis:            7.430s
Total time for CPAchecker:        9.531s
Total CPU time for CPAchecker:    9.530s

Time for Garbage Collector:       0.198s (in 7 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                160MB (   152 MiB) max;     67MB (    64 MiB) avg;    162MB (   155 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     31MB (    30 MiB) avg;     43MB (    41 MiB) peak
Used in PS Old Gen pool:          20MB (    19 MiB) max;     16MB (    15 MiB) avg;     20MB (    19 MiB) peak
Allocated heap memory:           287MB (   274 MiB) max;    216MB (   206 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10394MB (  9913 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1642) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
