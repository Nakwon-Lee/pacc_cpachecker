scripts/cpa.sh -heap 7000M -Dy-ABlkBFSCSRPO-lf-FC -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/parport_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 6170: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6171: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6172: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6221: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6245: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6698: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6699: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6700: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6763: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6843: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8237: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8248: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8558: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8559: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8567: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8568: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8576: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9098: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9393: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9423: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        2 (count: 2, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 3, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 4, min: 0, max: 1, avg: 0.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!cached!number of affected states:        7 (count: 5, min: 0, max: 4, avg: 1.40)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       10 (count: 6, min: 0, max: 4, avg: 1.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       10 (count: 7, min: 0, max: 4, avg: 1.43)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       13 (count: 8, min: 0, max: 4, avg: 1.63)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       16 (count: 9, min: 0, max: 4, avg: 1.78)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       20 (count: 10, min: 0, max: 4, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function KeSynchronizeExecution to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function PoRequestPowerIrp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function PoSetPowerState(Extension->DeviceObject, powerType, powerState) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

refinement st 
number of affected states:       21 (count: 11, min: 0, max: 4, avg: 1.91)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       22 (count: 12, min: 0, max: 4, avg: 1.83)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       23 (count: 13, min: 0, max: 4, avg: 1.77)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       25 (count: 14, min: 0, max: 4, avg: 1.79)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       30 (count: 15, min: 0, max: 5, avg: 2.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       30 (count: 16, min: 0, max: 5, avg: 1.88)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Extern function PoSetPowerState(Extension->DeviceObject, powerType, powerState) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!cached!cached!number of affected states:       34 (count: 17, min: 0, max: 5, avg: 2.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
lines 5482-5483: Ignoring function call through function pointer *(Extension->ChipInfo.ParChipClearMode): Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context, ChipMode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

CEGARAlgorithme run ed
Error: lines 5482-5483: Unsupported feature (recursion): Status = PptClearChipMode(Extension->ChipInfo.Context, ChipMode); (line was originally pointer call(PptClearChipMode) Status = (*(Extension->ChipInfo.ParChipClearMode))(Extension->ChipInfo.Context,
                                                       ChipMode);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            156 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  151 (97%)
  Because of loop head:            5 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       156 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   17
  Times result was 'false':        0 (0%)
Number of coverage checks:         232
  BDD entailment checks:           2
Number of SMT sat checks:          56
  trivial:                         19
  cached:                          23

Max ABE block size:                       27
Number of predicates discovered:          10
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  0.546s
  Time for path formula creation:        0.539s
Time for strengthen operator:            0.003s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.256s
  Time for abstraction:                  0.245s (Max:     0.177s, Count: 156)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.072s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.005s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.043s
Automaton transfers with branching:                0
Automaton transfer successors:                         2357 (count: 2357, min: 1, max: 1, avg: 1.00) [1 x 2357]

Predicate Forced Covering statistics
------------------------------------
Attempted forced coverings:             0
No of times elment was already covered: 0

CPA algorithm statistics
------------------------
Number of iterations:            957
Max size of waitlist:            66
Average size of waitlist:        33
Number of computed successors:   1153
Max successors for one state:    2
Number of times merged:          115
Number of times stopped:         115
Number of times breaked:         17

Total time for CPA algorithm:         1.251s (Max:     0.352s)
  Time for choose from waitlist:      0.035s
  Time for forced covering:           0.003s
  Time for precision adjustment:      0.282s
  Time for transfer relation:         0.685s
  Time for merge operator:            0.110s
  Time for stop operator:             0.026s
  Time for adding to reached set:     0.074s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 141 (count: 17, min: 4, max: 10, avg: 8.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.654s
  Counterexample analysis:                0.597s (Max:     0.079s, Calls: 17)
    Refinement sat check:                 0.459s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.598s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.008s
  Checking whether itp is new:            0.005s
  Coverage checks:                        0.000s
  ARG update:                             0.012s

Number of abstractions during refinements:  37
Length of refined path (in blocks):                     124 (count: 17, min: 3, max: 9, avg: 7.29)
Number of affected states:                               34 (count: 17, min: 0, max: 5, avg: 2.00)
Length (states) of path with itp 'true':                 62 (count: 17, min: 1, max: 7, avg: 3.65)
Length (states) of path with itp non-trivial itp:        45 (count: 17, min: 1, max: 5, avg: 2.65)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 17, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:              27 (count: 17, min: 0, max: 4, avg: 1.59)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 827
Max. size of reached set after ref.:  823
Avg. size of reached set before ref.: 454.47
Avg. size of reached set after ref.:  450.47

Total time for CEGAR algorithm:       2.015s
Time for refinements:                 0.718s
Average time for refinement:          0.042s
Max time for refinement:              0.097s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.232
  Visited lines:          2754
  Total lines:            6409
  Line coverage:          0.430
  Visited conditions:     282
  Total conditions:       1152
  Condition coverage:     0.245

CPAchecker general statistics
-----------------------------
Number of program locations:     3329
Number of CFA edges:             4041
Number of relevant variables:    894
Number of functions:             181
Number of loops:                 37
Size of reached set:             971
  Number of reached locations:   654 (20%)
    Avg states per location:     1
    Max states per location:     12 (at node N2706)
  Number of reached functions:   42 (23%)
  Number of partitions:          969
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4926 (before line 9594), Function main called from node N4830, stack depth 1 [5f69e2b], stack [main], Init])
  Number of target states:       0
  Size of final wait list        65

Time for analysis setup:          4.540s
  Time for loading CPAs:          0.621s
  Time for loading parser:        0.499s
  Time for CFA construction:      3.312s
    Time for parsing file(s):     0.841s
    Time for AST to CFA:          1.324s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.737s
      Time for var class.:        0.000s
Time for Analysis:                2.015s
CPU time for analysis:            2.010s
Total time for CPAchecker:        6.558s
Total CPU time for CPAchecker:    6.550s

Time for Garbage Collector:       0.268s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                 83MB (    79 MiB) max;     40MB (    39 MiB) avg;     93MB (    89 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     25MB (    24 MiB) avg;     36MB (    34 MiB) peak
Used in PS Old Gen pool:          20MB (    19 MiB) max;     10MB (     9 MiB) avg;     21MB (    20 MiB) peak
Allocated heap memory:           227MB (   217 MiB) max;    173MB (   165 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  10413MB (  9931 MiB) max;  10378MB (  9897 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
