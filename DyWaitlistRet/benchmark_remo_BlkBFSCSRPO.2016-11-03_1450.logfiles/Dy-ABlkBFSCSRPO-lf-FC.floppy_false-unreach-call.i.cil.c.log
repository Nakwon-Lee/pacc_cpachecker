scripts/cpa.sh -heap 7000M -Dy-ABlkBFSCSRPO-lf-FC -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/floppy_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 4850: Dead code detected: DisketteExtension->IoBufferSize = BufferSize; (CFACreationUtils.addEdgeToCFA, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:        5 (count: 1, min: 5, max: 5, avg: 5.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       10 (count: 2, min: 5, max: 5, avg: 5.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       10 (count: 3, min: 0, max: 5, avg: 3.33)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!number of affected states:       12 (count: 4, min: 0, max: 5, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       13 (count: 5, min: 0, max: 5, avg: 2.60)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       13 (count: 6, min: 0, max: 5, avg: 2.17)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       15 (count: 7, min: 0, max: 5, avg: 2.14)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       15 (count: 8, min: 0, max: 5, avg: 1.88)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       15 (count: 9, min: 0, max: 5, avg: 1.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       15 (count: 10, min: 0, max: 5, avg: 1.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!number of affected states:       16 (count: 11, min: 0, max: 5, avg: 1.45)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       16 (count: 12, min: 0, max: 5, avg: 1.33)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       25 (count: 13, min: 0, max: 9, avg: 1.92)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       26 (count: 14, min: 0, max: 9, avg: 1.86)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       27 (count: 15, min: 0, max: 9, avg: 1.80)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       28 (count: 16, min: 0, max: 9, avg: 1.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       29 (count: 17, min: 0, max: 9, avg: 1.71)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       30 (count: 18, min: 0, max: 9, avg: 1.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       31 (count: 19, min: 0, max: 9, avg: 1.63)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       32 (count: 20, min: 0, max: 9, avg: 1.60)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       35 (count: 21, min: 0, max: 9, avg: 1.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       36 (count: 22, min: 0, max: 9, avg: 1.64)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       37 (count: 23, min: 0, max: 9, avg: 1.61)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       38 (count: 24, min: 0, max: 9, avg: 1.58)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       40 (count: 25, min: 0, max: 9, avg: 1.60)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       41 (count: 26, min: 0, max: 9, avg: 1.58)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       42 (count: 27, min: 0, max: 9, avg: 1.56)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       43 (count: 28, min: 0, max: 9, avg: 1.54)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!cached!number of affected states:       44 (count: 29, min: 0, max: 9, avg: 1.52)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       45 (count: 30, min: 0, max: 9, avg: 1.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       46 (count: 31, min: 0, max: 9, avg: 1.48)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       55 (count: 32, min: 0, max: 9, avg: 1.72)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       55 (count: 33, min: 0, max: 9, avg: 1.67)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       55 (count: 34, min: 0, max: 9, avg: 1.62)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       57 (count: 35, min: 0, max: 9, avg: 1.63)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       59 (count: 36, min: 0, max: 9, avg: 1.64)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       61 (count: 37, min: 0, max: 9, avg: 1.65)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       62 (count: 38, min: 0, max: 9, avg: 1.63)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       64 (count: 39, min: 0, max: 9, avg: 1.64)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       66 (count: 40, min: 0, max: 9, avg: 1.65)
removed coverage count: 9
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 1
successed forced covering: 1
cached!removed coverage count: 9
num of affected states: 1
refinement st 
cached!cached!cached!cached!cached!number of affected states:       68 (count: 41, min: 0, max: 9, avg: 1.66)
removed coverage count: 18
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 2
successed forced covering: 2
removed coverage count: 18
num of affected states: 2
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       68 (count: 42, min: 0, max: 9, avg: 1.62)
removed coverage count: 18
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       69 (count: 43, min: 0, max: 9, avg: 1.60)
removed coverage count: 19
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
attempting forced covering: 3
successed forced covering: 3
removed coverage count: 19
num of affected states: 3
refinement st 
cached!number of affected states:       70 (count: 44, min: 0, max: 9, avg: 1.59)
removed coverage count: 19
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       72 (count: 45, min: 0, max: 9, avg: 1.60)
removed coverage count: 20
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!attempting forced covering: 4
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            242 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  236 (98%)
  Because of loop head:            6 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       242 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   46
  Times result was 'false':        0 (0%)
Number of coverage checks:         571
  BDD entailment checks:           45
Number of SMT sat checks:          236
  trivial:                         85
  cached:                          93

Max ABE block size:                       34
Number of predicates discovered:          23
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  1.675s
  Time for path formula creation:        1.646s
Time for strengthen operator:            0.004s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.283s
  Time for abstraction:                  0.224s (Max:     0.049s, Count: 242)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.299s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.026s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.069s
Automaton transfers with branching:                0
Automaton transfer successors:                         3747 (count: 3747, min: 1, max: 1, avg: 1.00) [1 x 3747]

Predicate Forced Covering statistics
------------------------------------
Attempted forced coverings:             4
Successful forced coverings:            3 (75%)
No of times elment was already covered: 13

CPA algorithm statistics
------------------------
Number of iterations:            1761
Max size of waitlist:            76
Average size of waitlist:        49
Number of computed successors:   2122
Max successors for one state:    2
Number of times merged:          263
Number of times stopped:         263
Number of times breaked:         46

Total time for CPA algorithm:         3.197s (Max:     1.011s)
  Time for choose from waitlist:      0.028s
  Time for forced covering:           0.501s
  Time for precision adjustment:      0.305s
  Time for transfer relation:         1.885s
  Time for merge operator:            0.335s
  Time for stop operator:             0.011s
  Time for adding to reached set:     0.040s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 544 (count: 46, min: 8, max: 14, avg: 11.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.403s
  Counterexample analysis:                4.426s (Max:     0.470s, Calls: 46)
    Refinement sat check:                 3.390s
    Interpolant computation:              0.000s
  Error path post-processing:                          1.807s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   4.426s
  Extracting precise counterexample:                   1.807s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.022s
  Checking whether itp is new:            0.022s
  Coverage checks:                        0.000s
  ARG update:                             0.019s

Number of abstractions during refinements:  142
Length of refined path (in blocks):                     483 (count: 45, min: 7, max: 13, avg: 10.73)
Number of affected states:                               72 (count: 45, min: 0, max: 9, avg: 1.60)
Length (states) of path with itp 'true':                292 (count: 45, min: 1, max: 11, avg: 6.49)
Length (states) of path with itp non-trivial itp:       146 (count: 45, min: 0, max: 10, avg: 3.24)
Length (states) of path with itp 'false':                45 (count: 45, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 45, min: 0, max: 2, avg: 0.22)
Equal non-trivial interpolants along paths:              92 (count: 45, min: 0, max: 7, avg: 2.04)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                46
Number of successful refinements:     45
Number of failed refinements:         0
Max. size of reached set before ref.: 1594
Max. size of reached set after ref.:  1549
Avg. size of reached set before ref.: 941.20
Avg. size of reached set after ref.:  920.78

Total time for CEGAR algorithm:       9.822s
Time for refinements:                 6.586s
Average time for refinement:          0.143s
Max time for refinement:              2.194s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.929s

Code Coverage
-----------------------------
  Function coverage:      0.299
  Visited lines:          2918
  Total lines:            5847
  Line coverage:          0.499
  Visited conditions:     296
  Total conditions:       1098
  Condition coverage:     0.270

CPAchecker general statistics
-----------------------------
Number of program locations:     2483
Number of CFA edges:             3143
Number of relevant variables:    498
Number of functions:             97
Number of loops:                 19
Size of reached set:             1594
  Number of reached locations:   656 (26%)
    Avg states per location:     2
    Max states per location:     23 (at node N1)
  Number of reached functions:   29 (30%)
  Number of partitions:          1571
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N3769 (before line 7098), Function main called from node N3696, stack depth 1 [48840594], stack [main], Init])
  Number of target states:       1
  Size of final wait list        64

Time for analysis setup:          3.811s
  Time for loading CPAs:          0.572s
  Time for loading parser:        0.490s
  Time for CFA construction:      2.624s
    Time for parsing file(s):     0.730s
    Time for AST to CFA:          0.834s
    Time for CFA sanity check:    0.124s
    Time for post-processing:     0.658s
      Time for var class.:        0.000s
Time for Analysis:               10.751s
CPU time for analysis:           10.750s
Total time for CPAchecker:       14.571s
Total CPU time for CPAchecker:   14.570s

Time for Garbage Collector:       0.365s (in 10 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                382MB (   364 MiB) max;    114MB (   108 MiB) avg;    428MB (   408 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     32MB (    30 MiB) avg;     44MB (    42 MiB) peak
Used in PS Old Gen pool:          20MB (    19 MiB) max;     14MB (    13 MiB) avg;     20MB (    19 MiB) peak
Allocated heap memory:           488MB (   465 MiB) max;    282MB (   269 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10397MB (  9916 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 2090) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
