scripts/cpa.sh -heap 7000M -Dy-ABlkBFSCSRPO-lf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/diskperf_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

line 3030: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        2 (count: 2, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 3, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 4, min: 0, max: 1, avg: 0.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter(&frequency) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function KeQuerySystemTime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!number of affected states:        5 (count: 5, min: 0, max: 2, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoWMIRegistrationControl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Extern function KeQueryPerformanceCounter((void *)0) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Assuming external function InterlockedDecrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function InterlockedIncrement to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!number of affected states:        7 (count: 6, min: 0, max: 2, avg: 1.17)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 7, min: 0, max: 2, avg: 1.14)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       10 (count: 8, min: 0, max: 2, avg: 1.25)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       12 (count: 9, min: 0, max: 2, avg: 1.33)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       13 (count: 10, min: 0, max: 2, avg: 1.30)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       14 (count: 11, min: 0, max: 2, avg: 1.27)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       16 (count: 12, min: 0, max: 2, avg: 1.33)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       22 (count: 13, min: 0, max: 6, avg: 1.69)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       24 (count: 14, min: 0, max: 6, avg: 1.71)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       24 (count: 15, min: 0, max: 6, avg: 1.60)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       25 (count: 16, min: 0, max: 6, avg: 1.56)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       29 (count: 17, min: 0, max: 6, avg: 1.71)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       31 (count: 18, min: 0, max: 6, avg: 1.72)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       33 (count: 19, min: 0, max: 6, avg: 1.74)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       35 (count: 20, min: 0, max: 6, avg: 1.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       37 (count: 21, min: 0, max: 6, avg: 1.76)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       39 (count: 22, min: 0, max: 6, avg: 1.77)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       41 (count: 23, min: 0, max: 6, avg: 1.78)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       48 (count: 24, min: 0, max: 7, avg: 2.00)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       53 (count: 25, min: 0, max: 7, avg: 2.12)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       55 (count: 26, min: 0, max: 7, avg: 2.12)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       57 (count: 27, min: 0, max: 7, avg: 2.11)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       64 (count: 28, min: 0, max: 7, avg: 2.29)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       68 (count: 29, min: 0, max: 7, avg: 2.34)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       70 (count: 30, min: 0, max: 7, avg: 2.33)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       73 (count: 31, min: 0, max: 7, avg: 2.35)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       74 (count: 32, min: 0, max: 7, avg: 2.31)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!number of affected states:       75 (count: 33, min: 0, max: 7, avg: 2.27)
removed coverage count: 1
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       77 (count: 34, min: 0, max: 7, avg: 2.26)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       81 (count: 35, min: 0, max: 7, avg: 2.31)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       85 (count: 36, min: 0, max: 7, avg: 2.36)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       87 (count: 37, min: 0, max: 7, avg: 2.35)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       89 (count: 38, min: 0, max: 7, avg: 2.34)
removed coverage count: 3
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            136 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  134 (99%)
  Because of loop head:            2 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       136 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   39
  Times result was 'false':        0 (0%)
Number of coverage checks:         278
  BDD entailment checks:           4
Number of SMT sat checks:          182
  trivial:                         43
  cached:                          62

Max ABE block size:                       19
Number of predicates discovered:          26
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  0.445s
  Time for path formula creation:        0.435s
Time for strengthen operator:            0.004s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.111s
  Time for abstraction:                  0.062s (Max:     0.012s, Count: 136)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.046s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.065s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.041s
Automaton transfers with branching:                0
Automaton transfer successors:                         2483 (count: 2483, min: 1, max: 1, avg: 1.00) [1 x 2483]

CPA algorithm statistics
------------------------
Number of iterations:            1020
Max size of waitlist:            39
Average size of waitlist:        24
Number of computed successors:   1225
Max successors for one state:    2
Number of times merged:          137
Number of times stopped:         137
Number of times breaked:         39

Total time for CPA algorithm:         0.968s (Max:     0.150s)
  Time for choose from waitlist:      0.059s
  Time for precision adjustment:      0.160s
  Time for transfer relation:         0.574s
  Time for merge operator:            0.110s
  Time for stop operator:             0.004s
  Time for adding to reached set:     0.033s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 339 (count: 39, min: 4, max: 10, avg: 8.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.521s
  Counterexample analysis:                1.083s (Max:     0.195s, Calls: 39)
    Refinement sat check:                 0.749s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.183s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   1.084s
  Extracting precise counterexample:                   0.183s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.034s
  Checking whether itp is new:            0.077s
  Coverage checks:                        0.001s
  ARG update:                             0.004s

Number of abstractions during refinements:  139
Length of refined path (in blocks):                     286 (count: 38, min: 3, max: 9, avg: 7.53)
Number of affected states:                               89 (count: 38, min: 0, max: 7, avg: 2.34)
Length (states) of path with itp 'true':                 94 (count: 38, min: 0, max: 6, avg: 2.47)
Length (states) of path with itp non-trivial itp:       154 (count: 38, min: 1, max: 7, avg: 4.05)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 38, min: 0, max: 2, avg: 0.39)
Equal non-trivial interpolants along paths:             101 (count: 38, min: 0, max: 6, avg: 2.66)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 807
Max. size of reached set after ref.:  803
Avg. size of reached set before ref.: 542.38
Avg. size of reached set after ref.:  528.00

Total time for CEGAR algorithm:       2.670s
Time for refinements:                 1.661s
Average time for refinement:          0.042s
Max time for refinement:              0.252s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.882s

Code Coverage
-----------------------------
  Function coverage:      0.241
  Visited lines:          2177
  Total lines:            2833
  Line coverage:          0.768
  Visited conditions:     122
  Total conditions:       268
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     964
Number of CFA edges:             1103
Number of relevant variables:    227
Number of functions:             87
Number of loops:                 2
Size of reached set:             806
  Number of reached locations:   331 (34%)
    Avg states per location:     2
    Max states per location:     13 (at node N5)
  Number of reached functions:   21 (24%)
  Number of partitions:          802
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N899 (before line 3225), Function main called from node N831, stack depth 1 [6f012914], stack [main], Init])
  Number of target states:       1
  Size of final wait list        28

Time for analysis setup:          2.922s
  Time for loading CPAs:          0.620s
  Time for loading parser:        0.441s
  Time for CFA construction:      1.803s
    Time for parsing file(s):     0.662s
    Time for AST to CFA:          0.578s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.286s
      Time for var class.:        0.000s
Time for Analysis:                3.552s
CPU time for analysis:            3.560s
Total time for CPAchecker:        6.477s
Total CPU time for CPAchecker:    6.470s

Time for Garbage Collector:       0.199s (in 5 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                132MB (   126 MiB) max;     51MB (    49 MiB) avg;    140MB (   134 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     28MB (    27 MiB) avg;     41MB (    39 MiB) peak
Used in PS Old Gen pool:          15MB (    14 MiB) max;     10MB (    10 MiB) avg;     17MB (    16 MiB) peak
Allocated heap memory:           215MB (   205 MiB) max;    184MB (   175 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10384MB (  9903 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1976) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
