scripts/cpa.sh -heap 7000M -Dy-ABlkBFSCSRPO-PredAbs-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.10_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9f6dc66+ (OpenJDK 64-Bit Server VM 1.8.0_111) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 2, min: 1, max: 2, avg: 1.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        6 (count: 3, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       10 (count: 4, min: 1, max: 4, avg: 2.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       16 (count: 5, min: 1, max: 6, avg: 3.20)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       23 (count: 6, min: 1, max: 7, avg: 3.83)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            34 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            34 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (3%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      33 (97%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   34
  Times result was 'false':        26 (76%)
Number of coverage checks:         5187
  BDD entailment checks:           91
Number of SMT sat checks:          34
  trivial:                         0
  cached:                          0

Max ABE block size:                       52
Number of predicates discovered:          204
Number of abstraction locations:          2
Max number of predicates per location:    203
Avg number of predicates per location:    102
Total predicates per abstraction:         3402
Max number of predicates per abstraction: 203
Avg number of predicates per abstraction: 103.09
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   3402 (100%)
  Total number of models for allsat:      562
  Max number of models for allsat:        107
  Avg number of models for allsat:        17.03

Number of path formula cache hits:   9541 (68%)

Time for post operator:                  1.055s
  Time for path formula creation:        1.022s
    Actual computation:                  0.962s
Time for strengthen operator:            0.371s
  Time for satisfiability checks:        0.347s
Time for prec operator:                 11.188s
  Time for abstraction:                 11.176s (Max:     1.799s, Count: 34)
    Boolean abstraction:                 9.734s
    Solving time:                        1.248s (Max:     0.129s)
    Model enumeration time:              6.804s
    Time for BDD construction:           1.339s (Max:     0.250s)
Time for merge operator:                 0.365s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     8.399s

Number of BDD nodes:                               18880
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                       48912 (count: 23449, min: 0, max: 21499, avg: 2.09)
Time for BDD node cleanup:                             0.042s
Time for BDD garbage collection:                       0.078s (in 6 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.147s
Automaton transfers with branching:                0
Automaton transfer successors:                        17668 (count: 17668, min: 1, max: 1, avg: 1.00) [1 x 17668]

CPA algorithm statistics
------------------------
Number of iterations:            8780
Max size of waitlist:            38
Average size of waitlist:        20
Number of computed successors:   11576
Max successors for one state:    2
Number of times merged:          2548
Number of times stopped:         2548
Number of times breaked:         8

Total time for CPA algorithm:        14.746s (Max:     5.555s)
  Time for choose from waitlist:      0.079s
  Time for precision adjustment:     11.323s
  Time for transfer relation:         2.052s
  Time for merge operator:            0.697s
  Time for stop operator:             0.117s
  Time for adding to reached set:     0.174s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  42 (count: 8, min: 2, max: 11, avg: 5.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.764s
  Counterexample analysis:               11.302s (Max:     3.794s, Calls: 8)
    Refinement sat check:                 5.255s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.329s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                  11.302s
  Extracting precise counterexample:                   0.329s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.004s
  ARG update:                                          0.063s

Length of refined path (in blocks):                      29 (count: 6, min: 2, max: 8, avg: 4.83)
Number of affected states:                               23 (count: 6, min: 1, max: 7, avg: 3.83)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        23 (count: 6, min: 1, max: 7, avg: 3.83)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          17 (count: 6, min: 0, max: 6, avg: 2.83)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 2919
Max. size of reached set after ref.:  41
Avg. size of reached set before ref.: 1159.50
Avg. size of reached set after ref.:  35.29

Total time for CEGAR algorithm:      26.603s
Time for refinements:                11.829s
Average time for refinement:          1.478s
Max time for refinement:              3.825s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.303s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1616
  Total lines:            1645
  Line coverage:          0.982
  Visited conditions:     194
  Total conditions:       202
  Condition coverage:     0.960

CPAchecker general statistics
-----------------------------
Number of program locations:     376
Number of CFA edges:             474
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             2919
  Number of reached locations:   345 (92%)
    Avg states per location:     8
    Max states per location:     10 (at node N25)
  Number of reached functions:   2 (40%)
  Number of partitions:          2910
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N97 (before lines 1141-1705), Function ssl3_accept called from node N33, stack depth 2 [1afdd473], stack [main, ssl3_accept], Init])
  Number of target states:       1
  Size of final wait list        32

Time for analysis setup:          2.151s
  Time for loading CPAs:          0.527s
  Time for loading parser:        0.474s
  Time for CFA construction:      1.085s
    Time for parsing file(s):     0.426s
    Time for AST to CFA:          0.243s
    Time for CFA sanity check:    0.023s
    Time for post-processing:     0.168s
      Time for var class.:        0.000s
Time for Analysis:               27.909s
CPU time for analysis:           27.900s
Total time for CPAchecker:       30.067s
Total CPU time for CPAchecker:   30.060s

Time for Garbage Collector:       0.483s (in 15 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                492MB (   469 MiB) max;    186MB (   177 MiB) avg;    494MB (   471 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     37MB (    35 MiB) avg;     48MB (    46 MiB) peak
Used in PS Old Gen pool:          22MB (    21 MiB) max;     19MB (    18 MiB) avg;     22MB (    21 MiB) peak
Allocated heap memory:           687MB (   656 MiB) max;    423MB (   403 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10406MB (  9924 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1716) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
