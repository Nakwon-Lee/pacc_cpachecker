scripts/cpa.sh -heap 7000M -Dy-ABlkCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/floppy_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

line 4850: Dead code detected: DisketteExtension->IoBufferSize = BufferSize; (CFACreationUtils.addEdgeToCFA, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        5 (count: 1, min: 5, max: 5, avg: 5.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:        8 (count: 2, min: 3, max: 5, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function InterlockedExchange to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:        9 (count: 3, min: 1, max: 5, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       25 (count: 4, min: 1, max: 16, avg: 6.25)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       26 (count: 5, min: 1, max: 16, avg: 5.20)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       35 (count: 6, min: 1, max: 16, avg: 5.83)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       36 (count: 7, min: 1, max: 16, avg: 5.14)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       42 (count: 8, min: 1, max: 16, avg: 5.25)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       68 (count: 9, min: 1, max: 26, avg: 7.56)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       74 (count: 10, min: 1, max: 26, avg: 7.40)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       80 (count: 11, min: 1, max: 26, avg: 7.27)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      110 (count: 12, min: 1, max: 30, avg: 9.17)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      142 (count: 13, min: 1, max: 32, avg: 10.92)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      143 (count: 14, min: 1, max: 32, avg: 10.21)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      144 (count: 15, min: 1, max: 32, avg: 9.60)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      145 (count: 16, min: 1, max: 32, avg: 9.06)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:      146 (count: 17, min: 1, max: 32, avg: 8.59)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:      147 (count: 18, min: 1, max: 32, avg: 8.17)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:      153 (count: 19, min: 1, max: 32, avg: 8.05)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:      154 (count: 20, min: 1, max: 32, avg: 7.70)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      155 (count: 21, min: 1, max: 32, avg: 7.38)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      177 (count: 22, min: 1, max: 32, avg: 8.05)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      186 (count: 23, min: 1, max: 32, avg: 8.09)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      188 (count: 24, min: 1, max: 32, avg: 7.83)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      190 (count: 25, min: 1, max: 32, avg: 7.60)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            2742 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2630 (96%)
  Because of loop head:            112 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       10 (0%)
  Times precision was {false}:     20 (1%)
  Times result was cached:         1700 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1012 (37%)
  Times result was 'false':        719 (26%)
Number of strengthen sat checks:   27
  Times result was 'false':        0 (0%)
Number of coverage checks:         5672
  BDD entailment checks:           428
Number of SMT sat checks:          27
  trivial:                         1
  cached:                          6

Max ABE block size:                       34
Number of predicates discovered:          24
Number of abstraction locations:          37
Max number of predicates per location:    11
Avg number of predicates per location:    8
Total predicates per abstraction:         6731
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 6.52
Number of irrelevant predicates:          588 (9%)
Number of preds handled by boolean abs:   6143 (91%)
  Total number of models for allsat:      6692
  Max number of models for allsat:        96
  Avg number of models for allsat:        6.61

Number of path formula cache hits:   16839 (67%)

Time for post operator:                  4.050s
  Time for path formula creation:        3.956s
    Actual computation:                  3.807s
Time for strengthen operator:            0.055s
  Time for satisfiability checks:        0.001s
Time for prec operator:                 30.658s
  Time for abstraction:                 30.529s (Max:    10.335s, Count: 2742)
    Boolean abstraction:                25.435s
    Solving time:                        2.555s (Max:     0.496s)
    Model enumeration time:             22.279s
    Time for BDD construction:           0.213s (Max:     0.018s)
Time for merge operator:                 0.627s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):    24.834s

Number of BDD nodes:                               8776
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                        2152 (count: 5308, min: 0, max: 514, avg: 0.41)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.255s
Automaton transfers with branching:                0
Automaton transfer successors:                        35077 (count: 35077, min: 1, max: 1, avg: 1.00) [1 x 35077]

CPA algorithm statistics
------------------------
Number of iterations:            17367
Max size of waitlist:            61
Average size of waitlist:        22
Number of computed successors:   21341
Max successors for one state:    2
Number of times merged:          2622
Number of times stopped:         2948
Number of times breaked:         27

Total time for CPA algorithm:        37.600s (Max:    12.006s)
  Time for choose from waitlist:      0.101s
  Time for precision adjustment:     30.834s
  Time for transfer relation:         4.988s
  Time for merge operator:            0.831s
  Time for stop operator:             0.107s
  Time for adding to reached set:     0.261s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 669 (count: 27, min: 8, max: 49, avg: 24.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.971s
  Counterexample analysis:                2.697s (Max:     0.466s, Calls: 27)
    Refinement sat check:                 2.010s
    Interpolant computation:              0.000s
  Error path post-processing:                          1.047s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   2.697s
  Extracting precise counterexample:                   1.047s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.028s
  ARG update:                                          0.088s

Length of refined path (in blocks):                     550 (count: 25, min: 7, max: 41, avg: 22.00)
Number of affected states:                              190 (count: 25, min: 1, max: 32, avg: 7.60)
Length (states) of path with itp 'true':                335 (count: 25, min: 1, max: 39, avg: 13.40)
Length (states) of path with itp non-trivial itp:       190 (count: 25, min: 1, max: 32, avg: 7.60)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          18 (count: 25, min: 0, max: 3, avg: 0.72)
Equal non-trivial interpolants along paths:             147 (count: 25, min: 0, max: 28, avg: 5.88)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 2999
Max. size of reached set after ref.:  2618
Avg. size of reached set before ref.: 1632.44
Avg. size of reached set after ref.:  1015.42

Total time for CEGAR algorithm:      41.716s
Time for refinements:                 4.083s
Average time for refinement:          0.151s
Max time for refinement:              1.212s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.747s

Code Coverage
-----------------------------
  Function coverage:      0.402
  Visited lines:          3173
  Total lines:            5847
  Line coverage:          0.543
  Visited conditions:     392
  Total conditions:       1098
  Condition coverage:     0.357

CPAchecker general statistics
-----------------------------
Number of program locations:     2483
Number of CFA edges:             3143
Number of relevant variables:    498
Number of functions:             97
Number of loops:                 19
Size of reached set:             2665
  Number of reached locations:   911 (37%)
    Avg states per location:     2
    Max states per location:     23 (at node N4205)
  Number of reached functions:   39 (40%)
  Number of partitions:          2656
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N762 (before line 3077), Function FloppyDeviceControl called from node N3768, stack depth 2 [3299ee2c], stack [main, FloppyDeviceControl], Init])
  Number of target states:       1
  Size of final wait list        7

Time for analysis setup:          3.820s
  Time for loading CPAs:          0.653s
  Time for loading parser:        0.485s
  Time for CFA construction:      2.599s
    Time for parsing file(s):     0.717s
    Time for AST to CFA:          0.831s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.699s
      Time for var class.:        0.000s
Time for Analysis:               42.464s
CPU time for analysis:           42.460s
Total time for CPAchecker:       46.286s
Total CPU time for CPAchecker:   46.270s

Time for Garbage Collector:       0.671s (in 17 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                719MB (   686 MiB) max;    228MB (   218 MiB) avg;    729MB (   695 MiB) peak
Used non-heap memory:             49MB (    47 MiB) max;     38MB (    37 MiB) avg;     49MB (    47 MiB) peak
Used in PS Old Gen pool:          28MB (    27 MiB) max;     25MB (    23 MiB) avg;     28MB (    27 MiB) peak
Allocated heap memory:           917MB (   875 MiB) max;    509MB (   486 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  10416MB (  9933 MiB) max;  10408MB (  9926 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 2090) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
