scripts/cpa.sh -heap 7000M -Dy-ABlkCSRPO-lf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/kbfiltr_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

line 2270: Dereferencing of non-pointer type PBOOLEAN  in expression *TurnTranslationOn (ASTConverter.convert, WARNING)

line 2291: Dereferencing of non-pointer type PBOOLEAN  in expression *ContinueProcessing (ASTConverter.convert, WARNING)

line 2300: Dereferencing of non-pointer type PBOOLEAN  in expression *ContinueProcessing (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:        4 (count: 2, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function KbFilter_IoCtl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
cached!cached!number of affected states:        8 (count: 3, min: 1, max: 4, avg: 2.67)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 4, min: 0, max: 4, avg: 2.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 5, min: 0, max: 4, avg: 1.60)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 6, min: 0, max: 4, avg: 1.33)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 7, min: 0, max: 4, avg: 1.14)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
cached!cached!cached!number of affected states:       17 (count: 8, min: 0, max: 9, avg: 2.13)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       18 (count: 9, min: 0, max: 9, avg: 2.00)
removed coverage count: 2
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       18 (count: 10, min: 0, max: 9, avg: 1.80)
removed coverage count: 4
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       19 (count: 11, min: 0, max: 9, avg: 1.73)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       20 (count: 12, min: 0, max: 9, avg: 1.67)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       21 (count: 13, min: 0, max: 9, avg: 1.62)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       22 (count: 14, min: 0, max: 9, avg: 1.57)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       25 (count: 15, min: 0, max: 9, avg: 1.67)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       28 (count: 16, min: 0, max: 9, avg: 1.75)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       29 (count: 17, min: 0, max: 9, avg: 1.71)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       30 (count: 18, min: 0, max: 9, avg: 1.67)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!number of affected states:       35 (count: 19, min: 0, max: 9, avg: 1.84)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       35 (count: 20, min: 0, max: 9, avg: 1.75)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       36 (count: 21, min: 0, max: 9, avg: 1.71)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       36 (count: 22, min: 0, max: 9, avg: 1.64)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       36 (count: 23, min: 0, max: 9, avg: 1.57)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       36 (count: 24, min: 0, max: 9, avg: 1.50)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       36 (count: 25, min: 0, max: 9, avg: 1.44)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       36 (count: 26, min: 0, max: 9, avg: 1.38)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       37 (count: 27, min: 0, max: 9, avg: 1.37)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       40 (count: 28, min: 0, max: 9, avg: 1.43)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       42 (count: 29, min: 0, max: 9, avg: 1.45)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       43 (count: 30, min: 0, max: 9, avg: 1.43)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       44 (count: 31, min: 0, max: 9, avg: 1.42)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       46 (count: 32, min: 0, max: 9, avg: 1.44)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       47 (count: 33, min: 0, max: 9, avg: 1.42)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       48 (count: 34, min: 0, max: 9, avg: 1.41)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       51 (count: 35, min: 0, max: 9, avg: 1.46)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       53 (count: 36, min: 0, max: 9, avg: 1.47)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       54 (count: 37, min: 0, max: 9, avg: 1.46)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:       57 (count: 38, min: 0, max: 9, avg: 1.50)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       59 (count: 39, min: 0, max: 9, avg: 1.51)
removed coverage count: 5
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       64 (count: 40, min: 0, max: 9, avg: 1.60)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:       64 (count: 41, min: 0, max: 9, avg: 1.56)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:       68 (count: 42, min: 0, max: 9, avg: 1.62)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       69 (count: 43, min: 0, max: 9, avg: 1.60)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       73 (count: 44, min: 0, max: 9, avg: 1.66)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:       96 (count: 45, min: 0, max: 23, avg: 2.13)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!number of affected states:      106 (count: 46, min: 0, max: 23, avg: 2.30)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!number of affected states:      114 (count: 47, min: 0, max: 23, avg: 2.43)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      115 (count: 48, min: 0, max: 23, avg: 2.40)
removed coverage count: 7
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      118 (count: 49, min: 0, max: 23, avg: 2.41)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      122 (count: 50, min: 0, max: 23, avg: 2.44)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!number of affected states:      141 (count: 51, min: 0, max: 23, avg: 2.76)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      146 (count: 52, min: 0, max: 23, avg: 2.81)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      150 (count: 53, min: 0, max: 23, avg: 2.83)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!number of affected states:      154 (count: 54, min: 0, max: 23, avg: 2.85)
removed coverage count: 8
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      158 (count: 55, min: 0, max: 23, avg: 2.87)
removed coverage count: 11
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:      162 (count: 56, min: 0, max: 23, avg: 2.89)
removed coverage count: 11
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:      163 (count: 57, min: 0, max: 23, avg: 2.86)
removed coverage count: 11
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!number of affected states:      166 (count: 58, min: 0, max: 23, avg: 2.86)
removed coverage count: 11
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!number of affected states:      169 (count: 59, min: 0, max: 23, avg: 2.86)
removed coverage count: 11
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!number of affected states:      172 (count: 60, min: 0, max: 23, avg: 2.87)
removed coverage count: 11
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      175 (count: 61, min: 0, max: 23, avg: 2.87)
removed coverage count: 12
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!number of affected states:      186 (count: 62, min: 0, max: 23, avg: 3.00)
removed coverage count: 12
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            293 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  293 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       293 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   63
  Times result was 'false':        0 (0%)
Number of coverage checks:         702
  BDD entailment checks:           48
Number of SMT sat checks:          402
  trivial:                         83
  cached:                          158

Max ABE block size:                       17
Number of predicates discovered:          42
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  0.713s
  Time for path formula creation:        0.681s
Time for strengthen operator:            0.018s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.225s
  Time for abstraction:                  0.162s (Max:     0.016s, Count: 293)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.103s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.087s
Automaton transfers with branching:                0
Automaton transfer successors:                         4623 (count: 4623, min: 1, max: 1, avg: 1.00) [1 x 4623]

CPA algorithm statistics
------------------------
Number of iterations:            2268
Max size of waitlist:            24
Average size of waitlist:        12
Number of computed successors:   2734
Max successors for one state:    2
Number of times merged:          327
Number of times stopped:         327
Number of times breaked:         63

Total time for CPA algorithm:         1.608s (Max:     0.281s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:      0.268s
  Time for transfer relation:         0.958s
  Time for merge operator:            0.177s
  Time for stop operator:             0.034s
  Time for adding to reached set:     0.048s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                1225 (count: 63, min: 6, max: 30, avg: 19.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.328s
  Counterexample analysis:                1.734s (Max:     0.092s, Calls: 63)
    Refinement sat check:                 1.003s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.242s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   1.750s
  Extracting precise counterexample:                   0.242s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.052s
  Checking whether itp is new:            0.133s
  Coverage checks:                        0.035s
  ARG update:                             0.025s

Number of abstractions during refinements:  291
Length of refined path (in blocks):                    1069 (count: 62, min: 5, max: 27, avg: 17.24)
Number of affected states:                              186 (count: 62, min: 0, max: 23, avg: 3.00)
Length (states) of path with itp 'true':                688 (count: 62, min: 1, max: 23, avg: 11.10)
Length (states) of path with itp non-trivial itp:       319 (count: 62, min: 1, max: 25, avg: 5.15)
Length (states) of path with itp 'false':                62 (count: 62, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          39 (count: 62, min: 0, max: 8, avg: 0.63)
Equal non-trivial interpolants along paths:             218 (count: 62, min: 0, max: 19, avg: 3.52)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 1080
Max. size of reached set after ref.:  1038
Avg. size of reached set before ref.: 621.44
Avg. size of reached set after ref.:  592.63

Total time for CEGAR algorithm:       4.185s
Time for refinements:                 2.527s
Average time for refinement:          0.040s
Max time for refinement:              0.337s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.874s

Code Coverage
-----------------------------
  Function coverage:      0.284
  Visited lines:          2134
  Total lines:            2370
  Line coverage:          0.900
  Visited conditions:     150
  Total conditions:       204
  Condition coverage:     0.735

CPAchecker general statistics
-----------------------------
Number of program locations:     723
Number of CFA edges:             802
Number of relevant variables:    125
Number of functions:             74
Number of loops:                 0
Size of reached set:             1080
  Number of reached locations:   391 (54%)
    Avg states per location:     2
    Max states per location:     11 (at node N575)
  Number of reached functions:   21 (28%)
  Number of partitions:          1071
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N657 (before line 2445), Function main called from node N576, stack depth 1 [56c698e3], stack [main], Init])
  Number of target states:       1
  Size of final wait list        4

Time for analysis setup:          2.439s
  Time for loading CPAs:          0.630s
  Time for loading parser:        0.439s
  Time for CFA construction:      1.312s
    Time for parsing file(s):     0.507s
    Time for AST to CFA:          0.382s
    Time for CFA sanity check:    0.032s
    Time for post-processing:     0.177s
      Time for var class.:        0.000s
Time for Analysis:                5.059s
CPU time for analysis:            5.060s
Total time for CPAchecker:        7.500s
Total CPU time for CPAchecker:    7.500s

Time for Garbage Collector:       0.187s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                148MB (   141 MiB) max;     53MB (    50 MiB) avg;    156MB (   149 MiB) peak
Used non-heap memory:             42MB (    41 MiB) max;     30MB (    29 MiB) avg;     43MB (    41 MiB) peak
Used in PS Old Gen pool:          15MB (    14 MiB) max;     11MB (    10 MiB) avg;     16MB (    16 MiB) peak
Allocated heap memory:           214MB (   204 MiB) max;    189MB (   181 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10387MB (  9906 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1635) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
