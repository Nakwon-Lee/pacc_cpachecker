scripts/cpa.sh -heap 7000M -Dy-ABlkCSRPO-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.16_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:        3 (count: 2, min: 1, max: 2, avg: 1.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:        5 (count: 3, min: 1, max: 2, avg: 1.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!refinement st 
cached!number of affected states:        6 (count: 4, min: 1, max: 2, avg: 1.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!refinement st 
number of affected states:        9 (count: 5, min: 1, max: 3, avg: 1.80)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!refinement st 
number of affected states:       12 (count: 6, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!refinement st 
cached!number of affected states:       15 (count: 7, min: 1, max: 3, avg: 2.14)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
cached!number of affected states:       22 (count: 8, min: 1, max: 7, avg: 2.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!refinement st 
cached!number of affected states:       28 (count: 9, min: 1, max: 7, avg: 3.11)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!refinement st 
cached!number of affected states:       35 (count: 10, min: 1, max: 7, avg: 3.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!refinement st 
cached!number of affected states:       41 (count: 11, min: 1, max: 7, avg: 3.73)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!refinement st 
number of affected states:       49 (count: 12, min: 1, max: 8, avg: 4.08)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
number of affected states:       56 (count: 13, min: 1, max: 8, avg: 4.31)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!refinement st 
number of affected states:       65 (count: 14, min: 1, max: 9, avg: 4.64)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!refinement st 
number of affected states:       74 (count: 15, min: 1, max: 9, avg: 4.93)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!refinement st 
cached!number of affected states:       83 (count: 16, min: 1, max: 9, avg: 5.19)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!refinement st 
number of affected states:       93 (count: 17, min: 1, max: 10, avg: 5.47)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!refinement st 
number of affected states:      111 (count: 18, min: 1, max: 18, avg: 6.17)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:      126 (count: 19, min: 1, max: 18, avg: 6.63)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!refinement st 
number of affected states:      146 (count: 20, min: 1, max: 20, avg: 7.30)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:      160 (count: 21, min: 1, max: 20, avg: 7.62)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!refinement st 
number of affected states:      171 (count: 22, min: 1, max: 20, avg: 7.77)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!cached!refinement st 
number of affected states:      184 (count: 23, min: 1, max: 20, avg: 8.00)
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

refinement ed 
CEGARAlgorithme run ed
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            23 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       23 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   23
  Times result was 'false':        0 (0%)
Number of coverage checks:         6466
  BDD entailment checks:           1809
Number of SMT sat checks:          2107
  trivial:                         0
  cached:                          111

Max ABE block size:                       53
Number of predicates discovered:          701
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  1.384s
  Time for path formula creation:        1.313s
Time for strengthen operator:            0.152s
  Time for satisfiability checks:        0.103s
Time for prec operator:                  0.119s
  Time for abstraction:                  0.081s (Max:     0.013s, Count: 23)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.523s
Time for coverage check:               438.985s
  Time for BDD entailment checks:      438.984s
Total time for SMT solver (w/o itp):   450.550s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.094s
Automaton transfers with branching:                0
Automaton transfer successors:                        15141 (count: 15141, min: 1, max: 1, avg: 1.00) [1 x 15141]

CPA algorithm statistics
------------------------
Number of iterations:            7555
Max size of waitlist:            38
Average size of waitlist:        20
Number of computed successors:   9940
Max successors for one state:    2
Number of times merged:          2329
Number of times stopped:         2329
Number of times breaked:         23

Total time for CPA algorithm:         7.400s (Max:     0.715s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      0.246s
  Time for transfer relation:         1.900s
  Time for merge operator:            0.708s
  Time for stop operator:             4.172s
  Time for adding to reached set:     0.094s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                 299 (count: 23, min: 2, max: 24, avg: 13.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 890.658s
  Counterexample analysis:              443.273s (Max:   124.453s, Calls: 23)
    Refinement sat check:               171.243s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                 443.273s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.623s
  Checking whether itp is new:           11.542s
  Coverage checks:                      434.913s
  ARG update:                             0.022s

Number of abstractions during refinements:  276
Length of refined path (in blocks):                     275 (count: 22, min: 2, max: 23, avg: 12.50)
Number of affected states:                              184 (count: 23, min: 1, max: 20, avg: 8.00)
Length (states) of path with itp 'true':                  0 (count: 22, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       253 (count: 22, min: 1, max: 22, avg: 11.50)
Length (states) of path with itp 'false':                 0 (count: 22, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:         231 (count: 22, min: 0, max: 21, avg: 10.50)
Equal non-trivial interpolants along paths:               0 (count: 22, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 7590
Max. size of reached set after ref.:  7252
Avg. size of reached set before ref.: 3883.00
Avg. size of reached set after ref.:  3713.50

Total time for CEGAR algorithm:     898.253s
Time for refinements:               890.805s
Average time for refinement:         38.730s
Max time for refinement:            470.055s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1671
  Total lines:            1700
  Line coverage:          0.983
  Visited conditions:     218
  Total conditions:       226
  Condition coverage:     0.965

CPAchecker general statistics
-----------------------------
Number of program locations:     407
Number of CFA edges:             517
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             7589
  Number of reached locations:   375 (92%)
    Avg states per location:     20
    Max states per location:     23 (at node N25)
  Number of reached functions:   2 (40%)
  Number of partitions:          7567
    Avg size of partitions:      1
    Max size of partitions:      23 (with key [N97 (before lines 1141-1760), Function ssl3_accept called from node N33, stack depth 2 [6c0d7c83], stack [main, ssl3_accept], Init])
  Number of target states:       0
  Size of final wait list        34

Time for analysis setup:          2.057s
  Time for loading CPAs:          0.468s
  Time for loading parser:        0.462s
  Time for CFA construction:      1.076s
    Time for parsing file(s):     0.450s
    Time for AST to CFA:          0.265s
    Time for CFA sanity check:    0.027s
    Time for post-processing:     0.155s
      Time for var class.:        0.000s
Time for Analysis:              898.253s
CPU time for analysis:          898.260s
Total time for CPAchecker:      900.312s
Total CPU time for CPAchecker:  900.320s

Time for Garbage Collector:      10.805s (in 296 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2576MB (  2457 MiB) max;   1287MB (  1228 MiB) avg;   2661MB (  2538 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Used in PS Old Gen pool:         144MB (   137 MiB) max;     99MB (    95 MiB) avg;    175MB (   167 MiB) peak
Allocated heap memory:          2677MB (  2553 MiB) max;   2492MB (  2376 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  10415MB (  9932 MiB) max;  10413MB (  9930 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
