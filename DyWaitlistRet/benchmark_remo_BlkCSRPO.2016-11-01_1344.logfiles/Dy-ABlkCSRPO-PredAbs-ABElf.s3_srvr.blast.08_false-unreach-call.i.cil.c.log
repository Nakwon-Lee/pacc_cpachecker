scripts/cpa.sh -heap 7000M -Dy-ABlkCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.08_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        4 (count: 2, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 3, min: 1, max: 4, avg: 2.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       13 (count: 4, min: 1, max: 5, avg: 3.25)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       20 (count: 5, min: 1, max: 7, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       28 (count: 6, min: 1, max: 8, avg: 4.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            74 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  40 (54%)
  Because of loop head:            34 (46%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       35 (47%)
  Times precision was {false}:     1 (1%)
  Times result was cached:         3 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35 (47%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   34
  Times result was 'false':        26 (76%)
Number of coverage checks:         5411
  BDD entailment checks:           117
Number of SMT sat checks:          34
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          225
Number of abstraction locations:          3
Max number of predicates per location:    224
Avg number of predicates per location:    77
Total predicates per abstraction:         3651
Max number of predicates per abstraction: 224
Avg number of predicates per abstraction: 101.42
Number of irrelevant predicates:          4 (0%)
Number of preds handled by boolean abs:   3647 (100%)
  Total number of models for allsat:      509
  Max number of models for allsat:        60
  Avg number of models for allsat:        14.54

Number of path formula cache hits:   10001 (69%)

Time for post operator:                  1.085s
  Time for path formula creation:        1.031s
    Actual computation:                  0.992s
Time for strengthen operator:            0.388s
  Time for satisfiability checks:        0.292s
Time for prec operator:                  9.194s
  Time for abstraction:                  9.186s (Max:     0.989s, Count: 74)
    Boolean abstraction:                 7.738s
    Solving time:                        0.962s (Max:     0.122s)
    Model enumeration time:              4.917s
    Time for BDD construction:           1.457s (Max:     0.320s)
Time for merge operator:                 0.368s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     6.171s

Number of BDD nodes:                               68798
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                       20194 (count: 18192, min: 0, max: 17797, avg: 1.11)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.079s (in 5 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.196s
Automaton transfers with branching:                0
Automaton transfer successors:                        18436 (count: 18436, min: 1, max: 1, avg: 1.00) [1 x 18436]

CPA algorithm statistics
------------------------
Number of iterations:            9080
Max size of waitlist:            39
Average size of waitlist:        21
Number of computed successors:   12016
Max successors for one state:    2
Number of times merged:          2647
Number of times stopped:         2673
Number of times breaked:         8

Total time for CPA algorithm:        12.636s (Max:     5.376s)
  Time for choose from waitlist:      0.083s
  Time for precision adjustment:      9.346s
  Time for transfer relation:         2.089s
  Time for merge operator:            0.571s
  Time for stop operator:             0.107s
  Time for adding to reached set:     0.130s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  50 (count: 8, min: 3, max: 12, avg: 6.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  16.863s
  Counterexample analysis:               16.230s (Max:     4.918s, Calls: 8)
    Refinement sat check:                 8.047s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.356s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                  16.230s
  Extracting precise counterexample:                   0.356s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.015s
  ARG update:                                          0.053s

Length of refined path (in blocks):                      35 (count: 6, min: 3, max: 9, avg: 5.83)
Number of affected states:                               28 (count: 6, min: 1, max: 8, avg: 4.67)
Length (states) of path with itp 'true':                  1 (count: 6, min: 0, max: 1, avg: 0.17)
Length (states) of path with itp non-trivial itp:        28 (count: 6, min: 1, max: 8, avg: 4.67)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          22 (count: 6, min: 0, max: 7, avg: 3.67)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 2960
Max. size of reached set after ref.:  40
Avg. size of reached set before ref.: 1177.50
Avg. size of reached set after ref.:  10.86

Total time for CEGAR algorithm:      29.538s
Time for refinements:                16.900s
Average time for refinement:          2.112s
Max time for refinement:              4.958s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.320s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1627
  Total lines:            1657
  Line coverage:          0.982
  Visited conditions:     200
  Total conditions:       208
  Condition coverage:     0.962

CPAchecker general statistics
-----------------------------
Number of program locations:     382
Number of CFA edges:             483
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             2960
  Number of reached locations:   350 (92%)
    Avg states per location:     8
    Max states per location:     10 (at node N36)
  Number of reached functions:   2 (40%)
  Number of partitions:          2951
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N97 (before lines 1141-1717), Function ssl3_accept called from node N33, stack depth 2 [3a7be6e6], stack [main, ssl3_accept], Init])
  Number of target states:       1
  Size of final wait list        34

Time for analysis setup:          2.112s
  Time for loading CPAs:          0.510s
  Time for loading parser:        0.469s
  Time for CFA construction:      1.053s
    Time for parsing file(s):     0.442s
    Time for AST to CFA:          0.261s
    Time for CFA sanity check:    0.019s
    Time for post-processing:     0.142s
      Time for var class.:        0.000s
Time for Analysis:               30.873s
CPU time for analysis:           30.870s
Total time for CPAchecker:       32.990s
Total CPU time for CPAchecker:   32.990s

Time for Garbage Collector:       0.530s (in 16 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                632MB (   603 MiB) max;    215MB (   205 MiB) avg;    641MB (   611 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     37MB (    35 MiB) avg;     46MB (    44 MiB) peak
Used in PS Old Gen pool:          22MB (    21 MiB) max;     18MB (    17 MiB) avg;     22MB (    21 MiB) peak
Allocated heap memory:           700MB (   668 MiB) max;    473MB (   451 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10407MB (  9925 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1728) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
