scripts/cpa.sh -heap 7000M -Dy-ABlkCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.15_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        4 (count: 2, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 3, min: 1, max: 4, avg: 2.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       13 (count: 4, min: 1, max: 5, avg: 3.25)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       20 (count: 5, min: 1, max: 7, avg: 4.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       28 (count: 6, min: 1, max: 8, avg: 4.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            74 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  40 (54%)
  Because of loop head:            34 (46%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       35 (47%)
  Times precision was {false}:     1 (1%)
  Times result was cached:         3 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35 (47%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   34
  Times result was 'false':        26 (76%)
Number of coverage checks:         5599
  BDD entailment checks:           117
Number of SMT sat checks:          34
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          239
Number of abstraction locations:          3
Max number of predicates per location:    238
Avg number of predicates per location:    82
Total predicates per abstraction:         3985
Max number of predicates per abstraction: 238
Avg number of predicates per abstraction: 110.69
Number of irrelevant predicates:          3 (0%)
Number of preds handled by boolean abs:   3982 (100%)
  Total number of models for allsat:      485
  Max number of models for allsat:        85
  Avg number of models for allsat:        13.86

Number of path formula cache hits:   10275 (69%)

Time for post operator:                  1.302s
  Time for path formula creation:        1.175s
    Actual computation:                  1.099s
Time for strengthen operator:            0.411s
  Time for satisfiability checks:        0.374s
Time for prec operator:                 14.021s
  Time for abstraction:                 14.003s (Max:     1.967s, Count: 74)
    Boolean abstraction:                12.149s
    Solving time:                        0.941s (Max:     0.084s)
    Model enumeration time:              8.607s
    Time for BDD construction:           2.065s (Max:     0.329s)
Time for merge operator:                 0.328s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     9.922s

Number of BDD nodes:                               302643
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                       64115 (count: 33926, min: 0, max: 39407, avg: 1.89)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.123s (in 14 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.192s
Automaton transfers with branching:                0
Automaton transfer successors:                        18922 (count: 18922, min: 1, max: 1, avg: 1.00) [1 x 18922]

CPA algorithm statistics
------------------------
Number of iterations:            9276
Max size of waitlist:            39
Average size of waitlist:        21
Number of computed successors:   12314
Max successors for one state:    2
Number of times merged:          2741
Number of times stopped:         2767
Number of times breaked:         8

Total time for CPA algorithm:        17.657s (Max:    10.196s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:     14.216s
  Time for transfer relation:         2.314s
  Time for merge operator:            0.500s
  Time for stop operator:             0.117s
  Time for adding to reached set:     0.133s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  50 (count: 8, min: 3, max: 12, avg: 6.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.849s
  Counterexample analysis:               13.274s (Max:     5.641s, Calls: 8)
    Refinement sat check:                 6.211s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.402s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                  13.274s
  Extracting precise counterexample:                   0.402s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.004s
  ARG update:                                          0.065s

Length of refined path (in blocks):                      35 (count: 6, min: 3, max: 9, avg: 5.83)
Number of affected states:                               28 (count: 6, min: 1, max: 8, avg: 4.67)
Length (states) of path with itp 'true':                  1 (count: 6, min: 0, max: 1, avg: 0.17)
Length (states) of path with itp non-trivial itp:        28 (count: 6, min: 1, max: 8, avg: 4.67)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          22 (count: 6, min: 0, max: 7, avg: 3.67)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 3020
Max. size of reached set after ref.:  40
Avg. size of reached set before ref.: 1203.00
Avg. size of reached set after ref.:  10.86

Total time for CEGAR algorithm:      31.571s
Time for refinements:                13.914s
Average time for refinement:          1.739s
Max time for refinement:              5.705s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.247s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1639
  Total lines:            1669
  Line coverage:          0.982
  Visited conditions:     206
  Total conditions:       214
  Condition coverage:     0.963

CPAchecker general statistics
-----------------------------
Number of program locations:     388
Number of CFA edges:             492
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             3020
  Number of reached locations:   356 (92%)
    Avg states per location:     8
    Max states per location:     10 (at node N36)
  Number of reached functions:   2 (40%)
  Number of partitions:          3011
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N97 (before lines 1141-1729), Function ssl3_accept called from node N33, stack depth 2 [539a50ea], stack [main, ssl3_accept], Init])
  Number of target states:       1
  Size of final wait list        35

Time for analysis setup:          2.189s
  Time for loading CPAs:          0.485s
  Time for loading parser:        0.477s
  Time for CFA construction:      1.157s
    Time for parsing file(s):     0.459s
    Time for AST to CFA:          0.260s
    Time for CFA sanity check:    0.025s
    Time for post-processing:     0.163s
      Time for var class.:        0.000s
Time for Analysis:               32.829s
CPU time for analysis:           32.840s
Total time for CPAchecker:       35.022s
Total CPU time for CPAchecker:   35.020s

Time for Garbage Collector:       0.570s (in 17 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                534MB (   509 MiB) max;    214MB (   204 MiB) avg;    540MB (   515 MiB) peak
Used non-heap memory:             46MB (    43 MiB) max;     37MB (    36 MiB) avg;     47MB (    44 MiB) peak
Used in PS Old Gen pool:          20MB (    19 MiB) max;     18MB (    18 MiB) avg;     20MB (    19 MiB) peak
Allocated heap memory:           745MB (   710 MiB) max;    475MB (   453 MiB) avg
Allocated non-heap memory:        48MB (    45 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10407MB (  9925 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1740) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
