scripts/cpa.sh -heap 7000M -Dy-ABlkCSRPO-PredAbs-ABEl -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ssh/s3_srvr.blast.16_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 2, min: 1, max: 2, avg: 1.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        6 (count: 3, min: 1, max: 3, avg: 2.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       10 (count: 4, min: 1, max: 4, avg: 2.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            17 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (6%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (94%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   17
  Times result was 'false':        11 (65%)
Number of coverage checks:         2533
  BDD entailment checks:           25
Number of SMT sat checks:          17
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          55
Number of abstraction locations:          2
Max number of predicates per location:    54
Avg number of predicates per location:    28
Total predicates per abstraction:         399
Max number of predicates per abstraction: 54
Avg number of predicates per abstraction: 24.94
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   399 (100%)
  Total number of models for allsat:      136
  Max number of models for allsat:        66
  Avg number of models for allsat:        8.50

Number of path formula cache hits:   4159 (59%)

Time for post operator:                  0.868s
  Time for path formula creation:        0.827s
    Actual computation:                  0.819s
Time for strengthen operator:            0.153s
  Time for satisfiability checks:        0.141s
Time for prec operator:                  2.831s
  Time for abstraction:                  2.830s (Max:     0.640s, Count: 17)
    Boolean abstraction:                 2.127s
    Solving time:                        0.669s (Max:     0.153s)
    Model enumeration time:              1.325s
    Time for BDD construction:           0.048s (Max:     0.013s)
Time for merge operator:                 0.272s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     2.135s

Number of BDD nodes:                               42365
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                         773 (count: 1445, min: 0, max: 477, avg: 0.53)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.062s
Automaton transfers with branching:                0
Automaton transfer successors:                         9032 (count: 9032, min: 1, max: 1, avg: 1.00) [1 x 9032]

CPA algorithm statistics
------------------------
Number of iterations:            4359
Max size of waitlist:            38
Average size of waitlist:        21
Number of computed successors:   5811
Max successors for one state:    2
Number of times merged:          1254
Number of times stopped:         1254
Number of times breaked:         6

Total time for CPA algorithm:         5.057s (Max:     2.293s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      2.911s
  Time for transfer relation:         1.382s
  Time for merge operator:            0.386s
  Time for stop operator:             0.091s
  Time for adding to reached set:     0.089s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  23 (count: 6, min: 2, max: 7, avg: 3.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.005s
  Counterexample analysis:                3.663s (Max:     1.714s, Calls: 6)
    Refinement sat check:                 1.831s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.265s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   3.663s
  Extracting precise counterexample:                   0.265s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.001s
  ARG update:                                          0.024s

Length of refined path (in blocks):                      14 (count: 4, min: 2, max: 5, avg: 3.50)
Number of affected states:                               10 (count: 4, min: 1, max: 4, avg: 2.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        10 (count: 4, min: 1, max: 4, avg: 2.50)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           6 (count: 4, min: 0, max: 3, avg: 1.50)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1848
Max. size of reached set after ref.:  41
Avg. size of reached set before ref.: 787.17
Avg. size of reached set after ref.:  33.00

Total time for CEGAR algorithm:       9.100s
Time for refinements:                 4.043s
Average time for refinement:          0.673s
Max time for refinement:              1.747s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         1.196s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1667
  Total lines:            1696
  Line coverage:          0.983
  Visited conditions:     216
  Total conditions:       224
  Condition coverage:     0.964

CPAchecker general statistics
-----------------------------
Number of program locations:     405
Number of CFA edges:             514
Number of relevant variables:    31
Number of functions:             5
Number of loops:                 1
Size of reached set:             1848
  Number of reached locations:   374 (92%)
    Avg states per location:     4
    Max states per location:     6 (at node N25)
  Number of reached functions:   2 (40%)
  Number of partitions:          1843
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N97 (before lines 1141-1756), Function ssl3_accept called from node N33, stack depth 2 [5adb0db3], stack [main, ssl3_accept], Init])
  Number of target states:       1
  Size of final wait list        34

Time for analysis setup:          2.208s
  Time for loading CPAs:          0.517s
  Time for loading parser:        0.492s
  Time for CFA construction:      1.144s
    Time for parsing file(s):     0.474s
    Time for AST to CFA:          0.244s
    Time for CFA sanity check:    0.044s
    Time for post-processing:     0.157s
      Time for var class.:        0.000s
Time for Analysis:               10.303s
CPU time for analysis:           10.300s
Total time for CPAchecker:       12.515s
Total CPU time for CPAchecker:   12.510s

Time for Garbage Collector:       0.287s (in 9 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                218MB (   208 MiB) max;     83MB (    79 MiB) avg;    222MB (   212 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     32MB (    31 MiB) avg;     42MB (    40 MiB) peak
Used in PS Old Gen pool:          21MB (    20 MiB) max;     18MB (    17 MiB) avg;     21MB (    20 MiB) peak
Allocated heap memory:           361MB (   345 MiB) max;    244MB (   233 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:  10416MB (  9933 MiB) max;  10396MB (  9915 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1767) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
