scripts/cpa.sh -heap 7000M -Dy-ABlkCSRPO-PredAbs-ABElf -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/kbfiltr_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

line 2270: Dereferencing of non-pointer type PBOOLEAN  in expression *TurnTranslationOn (ASTConverter.convert, WARNING)

line 2291: Dereferencing of non-pointer type PBOOLEAN  in expression *ContinueProcessing (ASTConverter.convert, WARNING)

line 2300: Dereferencing of non-pointer type PBOOLEAN  in expression *ContinueProcessing (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 1, min: 3, max: 3, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function KbFilter_IoCtl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

refinement st 
number of affected states:        7 (count: 2, min: 3, max: 4, avg: 3.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        8 (count: 3, min: 1, max: 4, avg: 2.67)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:        9 (count: 4, min: 1, max: 4, avg: 2.25)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       13 (count: 5, min: 1, max: 4, avg: 2.60)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       14 (count: 6, min: 1, max: 4, avg: 2.33)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       21 (count: 7, min: 1, max: 7, avg: 3.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:       22 (count: 8, min: 1, max: 7, avg: 2.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       28 (count: 9, min: 1, max: 7, avg: 3.11)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       51 (count: 10, min: 1, max: 23, avg: 5.10)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       64 (count: 11, min: 1, max: 23, avg: 5.82)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       67 (count: 12, min: 1, max: 23, avg: 5.58)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       86 (count: 13, min: 1, max: 23, avg: 6.62)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       91 (count: 14, min: 1, max: 23, avg: 6.50)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:       98 (count: 15, min: 1, max: 23, avg: 6.53)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      115 (count: 16, min: 1, max: 23, avg: 7.19)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:      120 (count: 17, min: 1, max: 23, avg: 7.06)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      137 (count: 18, min: 1, max: 23, avg: 7.61)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:      142 (count: 19, min: 1, max: 23, avg: 7.47)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:      147 (count: 20, min: 1, max: 23, avg: 7.35)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      164 (count: 21, min: 1, max: 23, avg: 7.81)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
number of affected states:      169 (count: 22, min: 1, max: 23, avg: 7.68)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:      172 (count: 23, min: 1, max: 23, avg: 7.48)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
cached!refinement st 
refinement ed 
CEGARAlgorithme run ed
CCA.checkCounterexample checkerName?   CPACHECKER
Error path found, starting counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

CounterexampleCPAChecker cpa?  org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Using the following resource limits: CPU-time limit of 900s (CounterexampleCheck:ResourceLimitChecker.fromConfiguration, INFO)

Repeated loading of Eclipse source parser (CounterexampleCheck:EclipseParsers.getClassLoader, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.value.ValueAnalysisCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
CounterexampleCPAChecker.checkCounterexample lAlgorithm?   org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Error path found and confirmed by counterexample check with CPACHECKER. (CounterexampleCheckAlgorithm.checkCounterexample, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

CPAchecker runAlgorithm ed
PredicateCPA statistics
-----------------------
Number of abstractions:            1632 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1632 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       15 (1%)
  Times precision was {false}:     9 (1%)
  Times result was cached:         1116 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      492 (30%)
  Times result was 'false':        657 (40%)
Number of strengthen sat checks:   25
  Times result was 'false':        0 (0%)
Number of coverage checks:         4193
  BDD entailment checks:           125
Number of SMT sat checks:          25
  trivial:                         4
  cached:                          8

Max ABE block size:                       17
Number of predicates discovered:          36
Number of abstraction locations:          40
Max number of predicates per location:    13
Avg number of predicates per location:    8
Total predicates per abstraction:         2773
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 5.53
Number of irrelevant predicates:          295 (11%)
Number of preds handled by boolean abs:   2478 (89%)
  Total number of models for allsat:      1507
  Max number of models for allsat:        25
  Avg number of models for allsat:        3.06

Number of path formula cache hits:   16102 (87%)

Time for post operator:                  0.605s
  Time for path formula creation:        0.543s
    Actual computation:                  0.493s
Time for strengthen operator:            0.034s
  Time for satisfiability checks:        0.014s
Time for prec operator:                  3.580s
  Time for abstraction:                  3.459s (Max:     0.061s, Count: 1632)
    Boolean abstraction:                 1.421s
    Solving time:                        0.342s (Max:     0.017s)
    Model enumeration time:              0.624s
    Time for BDD construction:           0.126s (Max:     0.016s)
Time for merge operator:                 0.029s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.980s

Number of BDD nodes:                               4266
Size of BDD node table:                            326251
Size of BDD cache:                                 32633
Size of BDD node cleanup queue:                        1935 (count: 2984, min: 0, max: 1130, avg: 0.65)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.158s
Automaton transfers with branching:                0
Automaton transfer successors:                        24706 (count: 24706, min: 1, max: 1, avg: 1.00) [1 x 24706]

CPA algorithm statistics
------------------------
Number of iterations:            12271
Max size of waitlist:            22
Average size of waitlist:        8
Number of computed successors:   15117
Max successors for one state:    2
Number of times merged:          2034
Number of times stopped:         2082
Number of times breaked:         25

Total time for CPA algorithm:         6.350s (Max:     0.631s)
  Time for choose from waitlist:      0.106s
  Time for precision adjustment:      3.753s
  Time for transfer relation:         1.433s
  Time for merge operator:            0.217s
  Time for stop operator:             0.110s
  Time for adding to reached set:     0.237s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 523 (count: 25, min: 6, max: 30, avg: 20.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.336s
  Counterexample analysis:                0.871s (Max:     0.167s, Calls: 25)
    Refinement sat check:                 0.483s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.274s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   0.872s
  Extracting precise counterexample:                   0.274s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.032s
  ARG update:                                          0.092s

Length of refined path (in blocks):                     444 (count: 23, min: 5, max: 27, avg: 19.30)
Number of affected states:                              172 (count: 23, min: 1, max: 23, avg: 7.48)
Length (states) of path with itp 'true':                249 (count: 23, min: 1, max: 23, avg: 10.83)
Length (states) of path with itp non-trivial itp:       172 (count: 23, min: 1, max: 23, avg: 7.48)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          21 (count: 23, min: 0, max: 4, avg: 0.91)
Equal non-trivial interpolants along paths:             128 (count: 23, min: 0, max: 19, avg: 5.57)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 1006
Max. size of reached set after ref.:  955
Avg. size of reached set before ref.: 745.56
Avg. size of reached set after ref.:  260.83

Total time for CEGAR algorithm:       7.811s
Time for refinements:                 1.454s
Average time for refinement:          0.058s
Max time for refinement:              0.341s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.934s

Code Coverage
-----------------------------
  Function coverage:      0.284
  Visited lines:          2134
  Total lines:            2370
  Line coverage:          0.900
  Visited conditions:     150
  Total conditions:       204
  Condition coverage:     0.735

CPAchecker general statistics
-----------------------------
Number of program locations:     723
Number of CFA edges:             802
Number of relevant variables:    125
Number of functions:             74
Number of loops:                 0
Size of reached set:             1005
  Number of reached locations:   391 (54%)
    Avg states per location:     2
    Max states per location:     9 (at node N575)
  Number of reached functions:   21 (28%)
  Number of partitions:          999
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N657 (before line 2445), Function main called from node N576, stack depth 1 [bff34c6], stack [main], Init])
  Number of target states:       1
  Size of final wait list        4

Time for analysis setup:          2.568s
  Time for loading CPAs:          0.652s
  Time for loading parser:        0.456s
  Time for CFA construction:      1.375s
    Time for parsing file(s):     0.569s
    Time for AST to CFA:          0.373s
    Time for CFA sanity check:    0.045s
    Time for post-processing:     0.216s
      Time for var class.:        0.000s
Time for Analysis:                8.746s
CPU time for analysis:            8.740s
Total time for CPAchecker:       11.317s
Total CPU time for CPAchecker:   11.300s

Time for Garbage Collector:       0.269s (in 8 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                212MB (   202 MiB) max;     74MB (    71 MiB) avg;    217MB (   207 MiB) peak
Used non-heap memory:             44MB (    41 MiB) max;     33MB (    31 MiB) avg;     44MB (    42 MiB) peak
Used in PS Old Gen pool:          22MB (    21 MiB) max;     17MB (    16 MiB) avg;     22MB (    21 MiB) peak
Allocated heap memory:           295MB (   281 MiB) max;    224MB (   214 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:  10415MB (  9933 MiB) max;  10396MB (  9914 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1635) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
