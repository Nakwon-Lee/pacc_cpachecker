scripts/cpa.sh -heap 7000M -Dy-ABlkCSRPO-lf-FC -preprocess -noout -timelimit 900s -stats -spec /home/spiral/pacc_cpachecker_trunk/sv-comp/PropertyERROR.prp /home/spiral/pacc_cpachecker_trunk/sv-comp/ntdrivers/parport_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 7000M.
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 1.4-svn 9b7d282+ (OpenJDK 64-Bit Server VM 1.8.0_91) started (CPAchecker.run, INFO)

line 6170: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6171: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6172: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6221: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6245: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6257: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6698: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6699: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6700: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6763: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6843: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6855: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8237: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8248: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8558: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8559: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8567: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8568: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8576: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9098: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9393: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9423: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

Using predicate analysis with SMTInterpol 2.1-183-g4d3bb9f-comp. (PredicateCPA:PredicateCPA.<init>, INFO)

CompositeCPA cpas?   org.sosy_lab.cpachecker.cpa.location.LocationCPA  org.sosy_lab.cpachecker.cpa.callstack.CallstackCPA  org.sosy_lab.cpachecker.cpa.functionpointer.FunctionPointerCPA  org.sosy_lab.cpachecker.cpa.predicate.PredicateCPA  org.sosy_lab.cpachecker.cpa.automaton.ControlAutomatonCPA   
ARGCPA cpa?   org.sosy_lab.cpachecker.cpa.composite.CompositeCPA
Using refinement for predicate analysis with ImpactRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

CPAchecker runAlgorithm st
Starting analysis ... (CPAchecker.runAlgorithm, INFO)

CCA.run algorithm?   org.sosy_lab.cpachecker.core.algorithm.CEGARAlgorithm
CCA.run checker?   org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker
CEGARAlgorithme run st
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        1 (count: 1, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        2 (count: 2, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 3, min: 1, max: 1, avg: 1.00)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
number of affected states:        3 (count: 4, min: 0, max: 1, avg: 0.75)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!cached!cached!cached!cached!number of affected states:       11 (count: 5, min: 0, max: 8, avg: 2.20)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
refinement st 
cached!cached!cached!number of affected states:       14 (count: 6, min: 0, max: 8, avg: 2.33)
removed coverage count: 0
refinement ed 
CPAAlgorithm.run0 cpa?   org.sosy_lab.cpachecker.cpa.arg.ARGCPA
Assuming external function IoAcquireCancelSpinLock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeSynchronizeExecution to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function WRITE_PORT_UCHAR to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function READ_PORT_UCHAR to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeStallExecutionProcessor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeQueryTimeIncrement to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function KeQueryTickCount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5394-5395: Ignoring function call through function pointer *(Extension->ChipInfo.ParChipSetMode): Status = (*(Extension->ChipInfo.ParChipSetMode))(Extension->ChipInfo.Context, ChipMode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

CEGARAlgorithme run ed
Error: lines 5394-5395: Unsupported feature (recursion): Status = PptSetChipMode(Extension->ChipInfo.Context, ChipMode); (line was originally pointer call(PptSetChipMode) Status = (*(Extension->ChipInfo.ParChipSetMode))(Extension->ChipInfo.Context,
                                                     ChipMode);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            244 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  214 (88%)
  Because of loop head:            30 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       244 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   6
  Times result was 'false':        0 (0%)
Number of coverage checks:         286
  BDD entailment checks:           50
Number of SMT sat checks:          71
  trivial:                         56
  cached:                          10

Max ABE block size:                       27
Number of predicates discovered:          4
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0


Time for post operator:                  0.850s
  Time for path formula creation:        0.817s
Time for strengthen operator:            0.002s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.211s
  Time for abstraction:                  0.159s (Max:     0.013s, Count: 244)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.218s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.010s


PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                         3011 (count: 3011, min: 1, max: 1, avg: 1.00) [1 x 3011]

Predicate Forced Covering statistics
------------------------------------
Attempted forced coverings:             0
No of times elment was already covered: 0

CPA algorithm statistics
------------------------
Number of iterations:            1539
Max size of waitlist:            51
Average size of waitlist:        36
Number of computed successors:   1710
Max successors for one state:    2
Number of times merged:          118
Number of times stopped:         118
Number of times breaked:         6

Total time for CPA algorithm:         1.690s (Max:     1.233s)
  Time for choose from waitlist:      0.031s
  Time for forced covering:           0.025s
  Time for precision adjustment:      0.225s
  Time for transfer relation:         1.040s
  Time for merge operator:            0.252s
  Time for stop operator:             0.038s
  Time for adding to reached set:     0.049s

Impact Refiner statistics
-------------------------
Avg. length of target path (in blocks):                  39 (count: 6, min: 4, max: 13, avg: 6.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.353s
  Counterexample analysis:                0.322s (Max:     0.084s, Calls: 6)
    Refinement sat check:                 0.263s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.322s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Computing abstraction of itp:           0.002s
  Checking whether itp is new:            0.011s
  Coverage checks:                        0.012s
  ARG update:                             0.000s

Number of abstractions during refinements:  15
Length of refined path (in blocks):                      33 (count: 6, min: 3, max: 12, avg: 5.50)
Number of affected states:                               14 (count: 6, min: 0, max: 8, avg: 2.33)
Length (states) of path with itp 'true':                 10 (count: 6, min: 1, max: 3, avg: 1.67)
Length (states) of path with itp non-trivial itp:        17 (count: 6, min: 1, max: 8, avg: 2.83)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              11 (count: 6, min: 0, max: 7, avg: 1.83)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 162
Max. size of reached set after ref.:  158
Avg. size of reached set before ref.: 95.17
Avg. size of reached set after ref.:  91.17

Total time for CEGAR algorithm:       2.061s
Time for refinements:                 0.367s
Average time for refinement:          0.061s
Max time for refinement:              0.098s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.221
  Visited lines:          2619
  Total lines:            6409
  Line coverage:          0.409
  Visited conditions:     252
  Total conditions:       1152
  Condition coverage:     0.219

CPAchecker general statistics
-----------------------------
Number of program locations:     3329
Number of CFA edges:             4041
Number of relevant variables:    894
Number of functions:             181
Number of loops:                 37
Size of reached set:             1569
  Number of reached locations:   655 (20%)
    Avg states per location:     2
    Max states per location:     16 (at node N3856)
  Number of reached functions:   40 (22%)
  Number of partitions:          1519
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1591 (before line 4663), Function PptSend1284_3Command called from node N1029, stack depth 4 [7a3269f5], stack [main, PptDispatchInternalDeviceControl, PptTrySelectDevice, PptSend1284_3Command], Init])
  Number of target states:       0
  Size of final wait list        48

Time for analysis setup:          4.209s
  Time for loading CPAs:          0.750s
  Time for loading parser:        0.446s
  Time for CFA construction:      2.946s
    Time for parsing file(s):     0.725s
    Time for AST to CFA:          1.012s
    Time for CFA sanity check:    0.157s
    Time for post-processing:     0.790s
      Time for var class.:        0.000s
Time for Analysis:                2.061s
CPU time for analysis:            2.060s
Total time for CPAchecker:        6.273s
Total CPU time for CPAchecker:    6.260s

Time for Garbage Collector:       0.266s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                 83MB (    79 MiB) max;     40MB (    38 MiB) avg;     93MB (    89 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     26MB (    25 MiB) avg;     36MB (    34 MiB) peak
Used in PS Old Gen pool:          20MB (    19 MiB) max;     10MB (    10 MiB) avg;     21MB (    20 MiB) peak
Allocated heap memory:           227MB (   217 MiB) max;    176MB (   168 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:  10413MB (  9931 MiB) max;  10381MB (  9900 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
