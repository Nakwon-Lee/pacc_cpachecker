scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product62_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sc0vc5dt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1005: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 693: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            29 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            15 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (48%)
  Times precision was empty:       3 (10%)
  Times precision was {false}:     18 (62%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (28%)
  Times result was 'false':        16 (55%)
Number of strengthen sat checks:   0
Number of coverage checks:         970
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       80
Number of predicates discovered:          8
Number of abstraction locations:          3
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         60
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 2.31
Number of irrelevant predicates:          18 (30%)
Number of preds handled by boolean abs:   42 (70%)
  Total number of models for allsat:      29
  Max number of models for allsat:        7
  Avg number of models for allsat:        3.63

Time for post operator:                  0.679s
  Time for path formula creation:        0.645s
Time for strengthen operator:            0.054s
Time for prec operator:                  0.416s
  Time for abstraction:                  0.392s (Max:     0.039s, Count: 29)
    Boolean abstraction:                 0.089s
    Solving time:                        0.138s (Max:     0.014s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.019s (Max:     0.006s)
Time for merge operator:                 0.094s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.150s

Number of path formula cache hits:   3461 (51%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.615s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               321
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          55 (count: 241, min: 0, max: 55, avg: 0.23)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.102s
Automaton transfers with branching:                0
Automaton transfer successors:                         6531 (count: 6531, min: 1, max: 1, avg: 1.00) [1 x 6531]

CPA algorithm statistics
------------------------
Number of iterations:            5022
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   5528
Max successors for one state:    2
Number of times merged:          481
Number of times stopped:         482
Number of times breaked:         3

Total time for CPA algorithm:         2.602s (Max:     0.787s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      0.660s
  Time for transfer relation:         1.368s
  Time for merge operator:            0.182s
  Time for stop operator:             0.057s
  Time for adding to reached set:     0.092s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   8 (count: 3, min: 2, max: 3, avg: 2.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.147s
  Counterexample analysis:                             0.078s (Max:     0.035s, Calls: 3)
    Refinement sat check:                              0.052s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.011s
  ARG update:                                          0.031s

Length of refined path (in blocks):                       7 (count: 3, min: 2, max: 3, avg: 2.33)
Number of affected states:                                4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'false':                 1 (count: 3, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:           1 (count: 3, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 1464
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 975.67
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       2.778s
Time for refinements:                 0.173s
Average time for refinement:          0.057s
Max time for refinement:              0.088s

Code Coverage
-----------------------------
  Function coverage:      0.750
  Visited lines:          156
  Total lines:            454
  Line coverage:          0.344
  Visited conditions:     46
  Total conditions:       78
  Condition coverage:     0.590

CPAchecker general statistics
-----------------------------
Number of program locations:     657
Number of CFA edges:             711
Number of relevant variables:    122
Number of functions:             40
Number of loops:                 5
Size of reached set:             2188
  Number of reached locations:   208 (32%)
    Avg states per location:     10
    Max states per location:     48 (at node N60)
  Number of reached functions:   30 (75%)
  Number of partitions:          2186
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N15 (before lines 64-111), Function test called from node N282, stack depth 3 [418c5a9c], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.332s
  Time for loading CPAs:          0.711s
  Time for loading parser:        0.795s
  Time for CFA construction:      1.631s
    Time for parsing file(s):     0.595s
    Time for AST to CFA:          0.399s
    Time for CFA sanity check:    0.119s
    Time for post-processing:     0.359s
      Time for var class.:        0.180s
Time for Analysis:                2.779s
CPU time for analysis:            2.780s
Time for analyzing result:        0.002s
Total time for CPAchecker:        6.117s
Total CPU time for CPAchecker:    6.110s
Time for statistics:              0.197s

Time for Garbage Collector:       0.148s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     33MB (    31 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8079MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
