scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product45_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7tenfd_w/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 665: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 834: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 892: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            51 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            26 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (49%)
  Times precision was empty:       3 (6%)
  Times precision was {false}:     17 (33%)
  Times result was cached:         13 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (35%)
  Times result was 'false':        20 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         929
  BDD entailment checks:           15
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         88
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.51
Number of irrelevant predicates:          24 (27%)
Number of preds handled by boolean abs:   46 (52%)
  Total number of models for allsat:      35
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.94

Time for post operator:                  0.592s
  Time for path formula creation:        0.520s
Time for strengthen operator:            0.040s
Time for prec operator:                  0.567s
  Time for abstraction:                  0.520s (Max:     0.028s, Count: 51)
    Boolean abstraction:                 0.158s
    Solving time:                        0.138s (Max:     0.015s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.021s (Max:     0.008s)
Time for merge operator:                 0.095s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.152s

Number of path formula cache hits:   4509 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.487s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          35 (count: 252, min: 0, max: 35, avg: 0.14)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.129s
Automaton transfers with branching:                0
Automaton transfer successors:                         6221 (count: 6221, min: 1, max: 1, avg: 1.00) [1 x 6221]

CPA algorithm statistics
------------------------
Number of iterations:            4851
Max size of waitlist:            9
Average size of waitlist:        5
Number of computed successors:   5355
Max successors for one state:    2
Number of times merged:          457
Number of times stopped:         463
Number of times breaked:         5

Total time for CPA algorithm:         2.468s (Max:     0.570s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      0.773s
  Time for transfer relation:         1.181s
  Time for merge operator:            0.190s
  Time for stop operator:             0.048s
  Time for adding to reached set:     0.085s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  17 (count: 5, min: 2, max: 5, avg: 3.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.176s
  Counterexample analysis:                             0.080s (Max:     0.021s, Calls: 5)
    Refinement sat check:                              0.048s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.004s
  ARG update:                                          0.065s

Length of refined path (in blocks):                      17 (count: 5, min: 2, max: 5, avg: 3.40)
Number of affected states:                               12 (count: 5, min: 1, max: 4, avg: 2.40)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        12 (count: 5, min: 1, max: 4, avg: 2.40)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 5, min: 0, max: 1, avg: 0.80)
Equal non-trivial interpolants along paths:               3 (count: 5, min: 0, max: 2, avg: 0.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1395
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 763.40
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       2.690s
Time for refinements:                 0.213s
Average time for refinement:          0.042s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.703
  Visited lines:          149
  Total lines:            439
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    114
Number of functions:             37
Number of loops:                 5
Size of reached set:             1216
  Number of reached locations:   202 (32%)
    Avg states per location:     6
    Max states per location:     24 (at node N385)
  Number of reached functions:   26 (70%)
  Number of partitions:          1215
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N496 (before lines 734-779), Function test called from node N353, stack depth 3 [727eb8cb], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.473s
  Time for loading CPAs:          0.870s
  Time for loading parser:        0.769s
  Time for CFA construction:      1.596s
    Time for parsing file(s):     0.527s
    Time for AST to CFA:          0.438s
    Time for CFA sanity check:    0.121s
    Time for post-processing:     0.322s
      Time for var class.:        0.131s
Time for Analysis:                2.690s
CPU time for analysis:            2.700s
Time for analyzing result:        0.010s
Total time for CPAchecker:        6.168s
Total CPU time for CPAchecker:    6.170s
Time for statistics:              0.141s

Time for Garbage Collector:       0.128s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     32MB (    30 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
