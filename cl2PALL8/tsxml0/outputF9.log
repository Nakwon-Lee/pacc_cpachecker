scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-mtd-sm_ftl.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xn48bf4m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5288: Dead code detected: tmp___9 = -22; (CFACreationUtils.addEdgeToCFA, INFO)

line 6642: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6705: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4737: Function pointer *(mtd->erase) with type int (*)(struct mtd_info *mtd, struct erase_info *instr) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4250: Function pointer *(mtd->read_oob) with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4461: Function pointer *(mtd->write_oob) with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4737: Ignoring function call through function pointer *(mtd->erase): tmp___9 = (*(mtd->erase))(mtd, &erase); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_in_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_in to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4461: Ignoring function call through function pointer *(mtd->write_oob): ret = (*(mtd->write_oob))(mtd, tmp___8, &ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __nand_calculate_ecc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strnlen to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4237: Unsupported feature (recursion): tmp___7 = sm_recheck_media(ftl); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2961 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2911 (98%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50 (2%)
  Times precision was empty:       1960 (66%)
  Times precision was {false}:     151 (5%)
  Times result was cached:         728 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      122 (4%)
  Times result was 'false':        296 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         28353
  BDD entailment checks:           1329
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       385
Number of predicates discovered:          3
Number of abstraction locations:          12
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1719
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 6.30
Number of irrelevant predicates:          775 (45%)
Number of preds handled by boolean abs:   160 (9%)
  Total number of models for allsat:      115
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Time for post operator:                  8.646s
  Time for path formula creation:        8.364s
Time for strengthen operator:            0.386s
Time for prec operator:                 12.397s
  Time for abstraction:                 11.961s (Max:     0.389s, Count: 2961)
    Boolean abstraction:                 3.646s
    Solving time:                        8.265s (Max:     0.364s)
    Model enumeration time:              0.316s
    Time for BDD construction:           0.011s (Max:     0.001s)
Time for merge operator:                 2.148s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     8.581s

Number of path formula cache hits:   147475 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.280s

Total number of created targets for pointer analysis: 14390
   Number of created targets for uf: *(void)* is 25
   Number of created targets for uf: *((struct_attribute)*)* is 5
   Number of created targets for uf: *(struct_mtd_info)* is 13
   Number of created targets for uf: *(unsigned_char)* is 13
   Number of created targets for uf: *(signed_short_int)* is 7
   Number of created targets for uf: *signed_short_int is 25
   Number of created targets for uf: *(struct_ftl_zone)* is 13
   Number of created targets for uf: *unsigned_long_int is 52
   Number of created targets for uf: *(struct_attribute_group)* is 5
   Number of created targets for uf: *(struct_mtd_blktrans_dev)* is 4
   Number of created targets for uf: *signed_int is 74
   Number of created targets for uf: *unsigned_char is 171
   Number of created targets for uf: *_Bool is 18
   Number of created targets for uf: *char is 5
   Number of created targets for uf: *unsigned_int is 73


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         242 (count: 4955, min: 0, max: 22, avg: 0.05)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.610s
  Time for transition matches:                         0.331s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       177389 (count: 177389, min: 1, max: 1, avg: 1.00) [1 x 177389]

CPA algorithm statistics
------------------------
Number of iterations:            103221
Max size of waitlist:            155
Average size of waitlist:        52
Number of computed successors:   118997
Max successors for one state:    2
Number of times merged:          13512
Number of times stopped:         14512
Number of times breaked:         16

Total time for CPA algorithm:        32.027s (Max:     7.224s)
  Time for choose from waitlist:      0.214s
  Time for precision adjustment:     13.981s
  Time for transfer relation:        12.919s
  Time for merge operator:            2.753s
  Time for stop operator:             0.379s
  Time for adding to reached set:     0.568s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                  73 (count: 16, min: 1, max: 7, avg: 4.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.917s
  Counterexample analysis:                             0.414s (Max:     0.072s, Calls: 16)
    Refinement sat check:                              0.348s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.004s
  ARG update:                                          0.448s

Length of refined path (in blocks):                      73 (count: 16, min: 1, max: 7, avg: 4.56)
Number of affected states:                               57 (count: 16, min: 0, max: 6, avg: 3.56)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        57 (count: 16, min: 0, max: 6, avg: 3.56)
Length (states) of path with itp 'false':                 0 (count: 16, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              43 (count: 16, min: 0, max: 5, avg: 2.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 16180
Max. size of reached set after ref.:  46
Avg. size of reached set before ref.: 6304.50
Avg. size of reached set after ref.:  45.25

Total time for CEGAR algorithm:      33.160s
Time for refinements:                 1.132s
Average time for refinement:          0.070s
Max time for refinement:              0.155s

Code Coverage
-----------------------------
  Function coverage:      0.738
  Visited lines:          1672
  Total lines:            1968
  Line coverage:          0.850
  Visited conditions:     310
  Total conditions:       438
  Condition coverage:     0.708

CPAchecker general statistics
-----------------------------
Number of program locations:     2614
Number of CFA edges:             2876
Number of relevant variables:    390
Number of functions:             65
Number of loops:                 20
Size of reached set:             4042
  Number of reached locations:   963 (37%)
    Avg states per location:     4
    Max states per location:     39 (at node N11)
  Number of reached functions:   48 (74%)
  Number of partitions:          4042
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:          5.384s
  Time for loading CPAs:          0.991s
  Time for loading parser:        0.774s
  Time for CFA construction:      3.506s
    Time for parsing file(s):     1.045s
    Time for AST to CFA:          1.174s
    Time for CFA sanity check:    0.224s
    Time for post-processing:     0.845s
      Time for var class.:        0.420s
Time for Analysis:               33.160s
CPU time for analysis:           33.150s
Total time for CPAchecker:       38.549s
Total CPU time for CPAchecker:   38.530s
Time for statistics:              0.154s

Time for Garbage Collector:       1.139s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                105MB (   100 MiB) max;     62MB (    59 MiB) avg;    108MB (   103 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8135MB (  7758 MiB) max;   8123MB (  7746 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
