scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-mtd-sm_ftl.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hirc03wr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5288: Dead code detected: tmp___9 = -22; (CFACreationUtils.addEdgeToCFA, INFO)

line 6642: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6705: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4737: Function pointer *(mtd->erase) with type int (*)(struct mtd_info *mtd, struct erase_info *instr) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4250: Function pointer *(mtd->read_oob) with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4461: Function pointer *(mtd->write_oob) with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strnlen to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: lines 5020-5021: Unsupported feature (recursion): tmp___7 = sm_read_sector(ftl, 0, ftl->cis_block, ftl->cis_boffset, __CPAchecker_TMP_0, &oob); (line was originally tmp___7 = sm_read_sector(ftl, 0, ftl->cis_block, ftl->cis_boffset, (uint8_t *)ftl->cis_buffer,
                           & oob);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            571 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            534 (94%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (6%)
  Times precision was empty:       334 (58%)
  Times precision was {false}:     31 (5%)
  Times result was cached:         140 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66 (12%)
  Times result was 'false':        39 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         3123
  BDD entailment checks:           153
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       241
Number of predicates discovered:          3
Number of abstraction locations:          9
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         416
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.29
Number of irrelevant predicates:          98 (24%)
Number of preds handled by boolean abs:   91 (22%)
  Total number of models for allsat:      64
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                  3.022s
  Time for path formula creation:        2.894s
Time for strengthen operator:            0.129s
Time for prec operator:                  5.297s
  Time for abstraction:                  5.141s (Max:     0.485s, Count: 571)
    Boolean abstraction:                 2.573s
    Solving time:                        3.811s (Max:     0.441s)
    Model enumeration time:              0.175s
    Time for BDD construction:           0.059s (Max:     0.013s)
Time for merge operator:                 0.644s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     3.986s

Number of path formula cache hits:   23031 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.605s

Total number of created targets for pointer analysis: 2701
   Number of created targets for uf: *((struct_attribute)*)* is 3
   Number of created targets for uf: *(void)* is 11
   Number of created targets for uf: *(struct_mtd_info)* is 9
   Number of created targets for uf: *(unsigned_char)* is 9
   Number of created targets for uf: *(signed_short_int)* is 5
   Number of created targets for uf: *unsigned_long_int is 48
   Number of created targets for uf: *(struct_ftl_zone)* is 9
   Number of created targets for uf: *(struct_attribute_group)* is 3
   Number of created targets for uf: *(struct_mtd_blktrans_dev)* is 3
   Number of created targets for uf: *signed_int is 50
   Number of created targets for uf: *unsigned_char is 45
   Number of created targets for uf: *_Bool is 15
   Number of created targets for uf: *unsigned_int is 25
   Number of created targets for uf: *char is 3


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         135 (count: 1063, min: 0, max: 28, avg: 0.13)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.305s
Automaton transfers with branching:                0
Automaton transfer successors:                        29382 (count: 29382, min: 1, max: 1, avg: 1.00) [1 x 29382]

CPA algorithm statistics
------------------------
Number of iterations:            15316
Max size of waitlist:            36
Average size of waitlist:        19
Number of computed successors:   17243
Max successors for one state:    2
Number of times merged:          1485
Number of times stopped:         1622
Number of times breaked:         12

Total time for CPA algorithm:        11.822s (Max:     1.636s)
  Time for choose from waitlist:      0.073s
  Time for precision adjustment:      5.785s
  Time for transfer relation:         4.445s
  Time for merge operator:            0.785s
  Time for stop operator:             0.151s
  Time for adding to reached set:     0.166s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  48 (count: 12, min: 1, max: 6, avg: 4.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.476s
  Counterexample analysis:                             0.348s (Max:     0.079s, Calls: 12)
    Refinement sat check:                              0.266s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.010s
  ARG update:                                          0.091s

Length of refined path (in blocks):                      48 (count: 12, min: 1, max: 6, avg: 4.00)
Number of affected states:                               36 (count: 12, min: 0, max: 5, avg: 3.00)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        36 (count: 12, min: 0, max: 5, avg: 3.00)
Length (states) of path with itp 'false':                 0 (count: 12, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              26 (count: 12, min: 0, max: 4, avg: 2.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 2100
Max. size of reached set after ref.:  46
Avg. size of reached set before ref.: 1216.67
Avg. size of reached set after ref.:  45.00

Total time for CEGAR algorithm:      12.373s
Time for refinements:                 0.551s
Average time for refinement:          0.045s
Max time for refinement:              0.113s

Code Coverage
-----------------------------
  Function coverage:      0.677
  Visited lines:          1460
  Total lines:            1968
  Line coverage:          0.742
  Visited conditions:     224
  Total conditions:       438
  Condition coverage:     0.511

CPAchecker general statistics
-----------------------------
Number of program locations:     2614
Number of CFA edges:             2876
Number of relevant variables:    390
Number of functions:             65
Number of loops:                 20
Size of reached set:             1523
  Number of reached locations:   745 (29%)
    Avg states per location:     2
    Max states per location:     19 (at node N79)
  Number of reached functions:   44 (68%)
  Number of partitions:          1523
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          5.235s
  Time for loading CPAs:          0.932s
  Time for loading parser:        0.753s
  Time for CFA construction:      3.447s
    Time for parsing file(s):     1.076s
    Time for AST to CFA:          1.131s
    Time for CFA sanity check:    0.230s
    Time for post-processing:     0.820s
      Time for var class.:        0.404s
Time for Analysis:               12.373s
CPU time for analysis:           12.380s
Total time for CPAchecker:       17.613s
Total CPU time for CPAchecker:   17.610s
Time for statistics:              0.173s

Time for Garbage Collector:       0.287s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8111MB (  7736 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
