scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-media-video-c-qcam.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lke6nbmi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4581: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4584: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4590: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4592: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4766: Dead code detected: [((int)size) == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4766: Dead code detected: [!(((int)size) == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4769: Dead code detected: [!(((int)size) == 2)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4772: Dead code detected: [!(((int)size) == 4)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4775: Dead code detected: [!(((int)size) == 8)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4778: Dead code detected: [!(((int)size) == 10)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4781: Dead code detected: [!(((int)size) == 16)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4773: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 4776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4779: Dead code detected: Goto: case_10 (CFACreationUtils.addEdgeToCFA, INFO)

line 4782: Dead code detected: Goto: case_16 (CFACreationUtils.addEdgeToCFA, INFO)

line 4784: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_10 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7260: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7323: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5544: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5545: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5580: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5581: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5583: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5586: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5601: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5560: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5628: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5629: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5631: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5324: Function pointer *(qcam->pport->ops->read_control) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5325: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5396: Function pointer *(qcam->pport->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5397: Function pointer *(qcam->pport->ops->read_control) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5398: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5716: Function pointer *(qcam->pport->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5729: Function pointer *(qcam->pport->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5731: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5783: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5794: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5423: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5434: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5235: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5251: Function pointer *(qcam->pport->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5224: Function pointer *(qcam->pport->ops->frob_control) with type unsigned char (*)(struct parport *, unsigned char mask, unsigned char val) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5448: Function pointer *(qcam->pport->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim_or_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5628: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 12U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5629: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 8U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5631: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 12U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5544: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 12U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5545: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___8 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function parport_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5448: Ignoring function call through function pointer *(qcam->pport->ops->write_data): (*(qcam->pport->ops->write_data))(qcam->pport, (unsigned char)data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5224: Ignoring function call through function pointer *(qcam->pport->ops->frob_control): (*(qcam->pport->ops->frob_control))(qcam->pport, 8U, (unsigned char)tmp___7); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5580: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 12U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5581: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 8U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5583: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 12U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5586: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___13 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5560: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___10 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5235: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___9 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5423: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___8 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function parport_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5601: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___15 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5434: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___10 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5947: Ignoring function call through function pointer *(qcam->pport->ops->data_reverse): (*(qcam->pport->ops->data_reverse))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6036: Ignoring function call through function pointer *(qcam->pport->ops->data_forward): (*(qcam->pport->ops->data_forward))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5251: Ignoring function call through function pointer *(qcam->pport->ops->read_data): tmp___9 = (*(qcam->pport->ops->read_data))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5716: Ignoring function call through function pointer *(qcam->pport->ops->read_data): tmp___8 = (*(qcam->pport->ops->read_data))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5718: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___9 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5783: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___20 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5729: Ignoring function call through function pointer *(qcam->pport->ops->read_data): tmp___11 = (*(qcam->pport->ops->read_data))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5731: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___12 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5794: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___22 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6121: Ignoring function call through function pointer *(qcam->pport->ops->data_forward): (*(qcam->pport->ops->data_forward))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6129: Ignoring function call through function pointer *(qcam->pport->ops->data_forward): (*(qcam->pport->ops->data_forward))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            356093 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            356063 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       12393 (3%)
  Times precision was {false}:     468 (0%)
  Times result was cached:         334756 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8476 (2%)
  Times result was 'false':        60627 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         1065571
  BDD entailment checks:           91327
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       155
Number of predicates discovered:          3
Number of abstraction locations:          9
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         663044
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 74.13
Number of irrelevant predicates:          3458 (1%)
Number of preds handled by boolean abs:   14769 (2%)
  Total number of models for allsat:      5763
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.68

Time for post operator:                160.635s
  Time for path formula creation:      150.083s
Time for strengthen operator:           11.968s
Time for prec operator:                272.393s
  Time for abstraction:                260.978s (Max:    26.737s, Count: 356093)
    Boolean abstraction:                28.859s
    Solving time:                       30.254s (Max:     0.141s)
    Model enumeration time:              1.951s
    Time for BDD construction:           0.225s (Max:     0.013s)
Time for merge operator:                 7.701s
Time for coverage check:                 0.317s
  Time for BDD entailment checks:        0.216s
Total time for SMT solver (w/o itp):    32.205s

Number of path formula cache hits:   12033637 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    65.050s

Total number of created targets for pointer analysis: 21297
   Number of created targets for uf: *(struct_v4l2_file_operations)* is 194
   Number of created targets for uf: *signed_int is 41
   Number of created targets for uf: *unsigned_char is 91
   Number of created targets for uf: *(struct_parport)* is 194
   Number of created targets for uf: *unsigned_int is 8
   Number of created targets for uf: *(struct_pardevice)* is 194


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14250 (count: 157154, min: 0, max: 435, avg: 0.09)
Time for BDD node cleanup:                             0.056s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.076s
  Time for transition matches:                        10.233s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     12337315 (count: 12337315, min: 1, max: 1, avg: 1.00) [1 x 12337315]

CPA algorithm statistics
------------------------
Number of iterations:            7392454
Max size of waitlist:            100703
Average size of waitlist:        45466
Number of computed successors:   8145763
Max successors for one state:    2
Number of times merged:          487122
Number of times stopped:         578340
Number of times breaked:         10

Total time for CPA algorithm:       895.190s (Max:   803.992s)
  Time for choose from waitlist:      4.350s
  Time for precision adjustment:    433.606s
  Time for transfer relation:       306.819s
  Time for merge operator:           14.661s
  Time for stop operator:             9.187s
  Time for adding to reached set:    55.286s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                  49 (count: 10, min: 1, max: 11, avg: 4.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.310s
  Counterexample analysis:                             0.129s (Max:     0.032s, Calls: 10)
    Refinement sat check:                              0.093s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.005s
  ARG update:                                          3.140s

Length of refined path (in blocks):                      49 (count: 10, min: 1, max: 11, avg: 4.90)
Number of affected states:                               39 (count: 10, min: 0, max: 10, avg: 3.90)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        39 (count: 10, min: 0, max: 10, avg: 3.90)
Length (states) of path with itp 'false':                 0 (count: 10, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              31 (count: 10, min: 0, max: 9, avg: 3.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 518145
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 77073.20
Avg. size of reached set after ref.:  26.80

Total time for CEGAR algorithm:     899.183s
Time for refinements:                 3.993s
Average time for refinement:          0.399s
Max time for refinement:              2.102s

Code Coverage
-----------------------------
  Function coverage:      0.800
  Visited lines:          1685
  Total lines:            1772
  Line coverage:          0.951
  Visited conditions:     278
  Total conditions:       298
  Condition coverage:     0.933

CPAchecker general statistics
-----------------------------
Number of program locations:     2230
Number of CFA edges:             2433
Number of relevant variables:    289
Number of functions:             55
Number of loops:                 16
Size of reached set:             6736333
  Size of final wait list        100702

Time for analysis setup:          5.713s
  Time for loading CPAs:          1.014s
  Time for loading parser:        0.802s
  Time for CFA construction:      3.737s
    Time for parsing file(s):     1.097s
    Time for AST to CFA:          1.288s
    Time for CFA sanity check:    0.255s
    Time for post-processing:     0.889s
      Time for var class.:        0.377s
Time for Analysis:              899.183s
CPU time for analysis:          899.150s
Total time for CPAchecker:      904.910s
Total CPU time for CPAchecker:  904.860s
Time for statistics:            177.228s

Time for Garbage Collector:     547.880s (in 260 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5414MB (  5163 MiB) max;   2382MB (  2271 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3056MB (  2915 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8337MB (  7950 MiB) max;   8219MB (  7838 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
