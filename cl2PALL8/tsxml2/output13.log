scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-media-video-c-qcam.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2v9_4bu0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4581: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4584: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4590: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4592: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4766: Dead code detected: [((int)size) == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 4766: Dead code detected: [!(((int)size) == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4769: Dead code detected: [!(((int)size) == 2)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4772: Dead code detected: [!(((int)size) == 4)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4775: Dead code detected: [!(((int)size) == 8)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4778: Dead code detected: [!(((int)size) == 10)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4781: Dead code detected: [!(((int)size) == 16)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 4770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 4773: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 4776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 4779: Dead code detected: Goto: case_10 (CFACreationUtils.addEdgeToCFA, INFO)

line 4782: Dead code detected: Goto: case_16 (CFACreationUtils.addEdgeToCFA, INFO)

line 4784: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_16 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_10 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7260: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7323: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5544: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5545: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5580: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5581: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5583: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5586: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5601: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5560: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5628: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5629: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5631: Function pointer *(qcam->pport->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5324: Function pointer *(qcam->pport->ops->read_control) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5325: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5396: Function pointer *(qcam->pport->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5397: Function pointer *(qcam->pport->ops->read_control) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5398: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5716: Function pointer *(qcam->pport->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5718: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5729: Function pointer *(qcam->pport->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5731: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5783: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5794: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5423: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5434: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5235: Function pointer *(qcam->pport->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5251: Function pointer *(qcam->pport->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5224: Function pointer *(qcam->pport->ops->frob_control) with type unsigned char (*)(struct parport *, unsigned char mask, unsigned char val) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5448: Function pointer *(qcam->pport->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim_or_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5628: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 12U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5629: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 8U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5631: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 12U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5544: Ignoring function call through function pointer *(qcam->pport->ops->write_control): (*(qcam->pport->ops->write_control))(qcam->pport, 12U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5545: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___8 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function parport_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5448: Ignoring function call through function pointer *(qcam->pport->ops->write_data): (*(qcam->pport->ops->write_data))(qcam->pport, (unsigned char)data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5224: Ignoring function call through function pointer *(qcam->pport->ops->frob_control): (*(qcam->pport->ops->frob_control))(qcam->pport, 8U, (unsigned char)tmp___7); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5235: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___9 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5423: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___8 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5434: Ignoring function call through function pointer *(qcam->pport->ops->read_status): tmp___10 = (*(qcam->pport->ops->read_status))(qcam->pport); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4721 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            4698 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (0%)
  Times precision was empty:       136 (3%)
  Times precision was {false}:     19 (0%)
  Times result was cached:         3796 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      770 (16%)
  Times result was 'false':        378 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         17264
  BDD entailment checks:           2638
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       126
Number of predicates discovered:          3
Number of abstraction locations:          6
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         9051
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 11.47
Number of irrelevant predicates:          61 (1%)
Number of preds handled by boolean abs:   1432 (16%)
  Total number of models for allsat:      651
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.85

Time for post operator:                  6.154s
  Time for path formula creation:        5.897s
Time for strengthen operator:            0.229s
Time for prec operator:                  7.949s
  Time for abstraction:                  7.425s (Max:     0.158s, Count: 4721)
    Boolean abstraction:                 3.046s
    Solving time:                        2.852s (Max:     0.120s)
    Model enumeration time:              0.175s
    Time for BDD construction:           0.159s (Max:     0.013s)
Time for merge operator:                 0.606s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     3.027s

Number of path formula cache hits:   111316 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.897s

Total number of created targets for pointer analysis: 696
   Number of created targets for uf: *(struct_v4l2_file_operations)* is 5
   Number of created targets for uf: *signed_int is 17
   Number of created targets for uf: *(struct_parport)* is 5
   Number of created targets for uf: *unsigned_int is 5
   Number of created targets for uf: *(struct_pardevice)* is 5


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1431 (count: 7504, min: 0, max: 131, avg: 0.19)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.441s
Automaton transfers with branching:                0
Automaton transfer successors:                       135797 (count: 135797, min: 1, max: 1, avg: 1.00) [1 x 135797]

CPA algorithm statistics
------------------------
Number of iterations:            96766
Max size of waitlist:            56
Average size of waitlist:        30
Number of computed successors:   107291
Max successors for one state:    2
Number of times merged:          7313
Number of times stopped:         9943
Number of times breaked:         8

Total time for CPA algorithm:        23.799s (Max:    15.338s)
  Time for choose from waitlist:      0.305s
  Time for precision adjustment:     10.032s
  Time for transfer relation:        10.007s
  Time for merge operator:            1.057s
  Time for stop operator:             0.441s
  Time for adding to reached set:     0.721s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  99 (count: 8, min: 1, max: 26, avg: 12.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.407s
  Counterexample analysis:                             0.253s (Max:     0.065s, Calls: 8)
    Refinement sat check:                              0.166s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.004s
  ARG update:                                          0.109s

Length of refined path (in blocks):                      99 (count: 8, min: 1, max: 26, avg: 12.38)
Number of affected states:                               91 (count: 8, min: 0, max: 25, avg: 11.38)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        91 (count: 8, min: 0, max: 25, avg: 11.38)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              85 (count: 8, min: 0, max: 24, avg: 10.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 2930
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 1489.63
Avg. size of reached set after ref.:  26.50

Total time for CEGAR algorithm:      24.317s
Time for refinements:                 0.518s
Average time for refinement:          0.064s
Max time for refinement:              0.108s

Code Coverage
-----------------------------
  Function coverage:      0.709
  Visited lines:          1342
  Total lines:            1772
  Line coverage:          0.757
  Visited conditions:     138
  Total conditions:       298
  Condition coverage:     0.463

CPAchecker general statistics
-----------------------------
Number of program locations:     2230
Number of CFA edges:             2433
Number of relevant variables:    289
Number of functions:             55
Number of loops:                 16
Size of reached set:             85265
  Number of reached locations:   529 (24%)
    Avg states per location:     161
    Max states per location:     1411 (at node N220)
  Number of reached functions:   39 (71%)
  Number of partitions:          85265
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          5.797s
  Time for loading CPAs:          1.112s
  Time for loading parser:        0.790s
  Time for CFA construction:      3.772s
    Time for parsing file(s):     1.101s
    Time for AST to CFA:          1.331s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.914s
      Time for var class.:        0.452s
Time for Analysis:               24.317s
CPU time for analysis:           24.310s
Total time for CPAchecker:       30.120s
Total CPU time for CPAchecker:   30.110s
Time for statistics:              1.189s

Time for Garbage Collector:       1.613s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   116 MiB) max;     57MB (    54 MiB) avg;    153MB (   146 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           213MB (   204 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8118MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
