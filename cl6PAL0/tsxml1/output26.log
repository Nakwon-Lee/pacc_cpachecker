scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product22_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tzndjw4d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1966: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3447: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 303: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (100%)
  Times precision was empty:       8 (50%)
  Times precision was {false}:     8 (50%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        7 (44%)
Number of strengthen sat checks:   0
Number of coverage checks:         24016
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3605
Number of predicates discovered:          1
Number of abstraction locations:          1
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         8
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          8 (100%)

Time for post operator:                  5.360s
  Time for path formula creation:        5.204s
Time for strengthen operator:            0.182s
Time for prec operator:                  5.538s
  Time for abstraction:                  5.321s (Max:     1.022s, Count: 16)
    Solving time:                        4.003s (Max:     0.806s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.316s
Time for coverage check:                 0.004s
Total time for SMT solver (w/o itp):     4.003s

Number of path formula cache hits:   8 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.057s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 54, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.468s
Automaton transfers with branching:                0
Automaton transfer successors:                        57276 (count: 57276, min: 1, max: 1, avg: 1.00) [1 x 57276]

CPA algorithm statistics
------------------------
Number of iterations:            42327
Max size of waitlist:            17
Average size of waitlist:        9
Number of computed successors:   54344
Max successors for one state:    2
Number of times merged:          12008
Number of times stopped:         12008
Number of times breaked:         8

Total time for CPA algorithm:        19.120s (Max:     5.361s)
  Time for choose from waitlist:      0.245s
  Time for precision adjustment:      6.620s
  Time for transfer relation:         8.356s
  Time for merge operator:            2.184s
  Time for stop operator:             0.463s
  Time for adding to reached set:     0.334s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                   8 (count: 8, min: 1, max: 1, avg: 1.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.647s
  Counterexample analysis:                             5.381s (Max:     1.044s, Calls: 8)
    Refinement sat check:                              4.919s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.003s
  ARG update:                                          0.002s

Length of refined path (in blocks):                       8 (count: 8, min: 1, max: 1, avg: 1.00)
Number of affected states:                                0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 8, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 42322
Max. size of reached set after ref.:  42321
Avg. size of reached set before ref.: 26460.25
Avg. size of reached set after ref.:  26459.25

Total time for CEGAR algorithm:      26.003s
Time for refinements:                 6.670s
Average time for refinement:          0.833s
Max time for refinement:              1.526s

Code Coverage
-----------------------------
  Function coverage:      0.616
  Visited lines:          1048
  Total lines:            1745
  Line coverage:          0.601
  Visited conditions:     586
  Total conditions:       760
  Condition coverage:     0.771

CPAchecker general statistics
-----------------------------
Number of program locations:     2285
Number of CFA edges:             2792
Number of relevant variables:    313
Number of functions:             73
Number of loops:                 9
Size of reached set:             42321
  Number of reached locations:   1134 (50%)
    Avg states per location:     37
    Max states per location:     488 (at node N827)
  Number of reached functions:   45 (62%)
  Number of partitions:          42321
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          4.258s
  Time for loading CPAs:          0.904s
  Time for loading parser:        0.779s
  Time for CFA construction:      2.470s
    Time for parsing file(s):     0.696s
    Time for AST to CFA:          0.728s
    Time for CFA sanity check:    0.248s
    Time for post-processing:     0.614s
      Time for var class.:        0.349s
Time for Analysis:               26.003s
CPU time for analysis:           26.000s
Total time for CPAchecker:       30.269s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.646s

Time for Garbage Collector:       1.245s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                133MB (   127 MiB) max;     64MB (    61 MiB) avg;    150MB (   143 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           199MB (   190 MiB) max;    137MB (   130 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8267MB (  7884 MiB) max;   8155MB (  7778 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
