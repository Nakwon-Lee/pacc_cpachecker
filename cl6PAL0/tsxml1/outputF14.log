scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product22_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_huj3j51p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1966: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3447: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 303: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            28 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (82%)
  Times precision was empty:       10 (36%)
  Times precision was {false}:     14 (50%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (14%)
  Times result was 'false':        14 (50%)
Number of strengthen sat checks:   0
Number of coverage checks:         48148
  BDD entailment checks:           6
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3606
Number of predicates discovered:          9
Number of abstraction locations:          2
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         46
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 2.56
Number of irrelevant predicates:          14 (30%)
Number of preds handled by boolean abs:   32 (70%)
  Total number of models for allsat:      24
  Max number of models for allsat:        8
  Avg number of models for allsat:        6.00

Time for post operator:                  7.516s
  Time for path formula creation:        7.216s
Time for strengthen operator:            0.372s
Time for prec operator:                 19.784s
  Time for abstraction:                 19.472s (Max:     8.680s, Count: 28)
    Boolean abstraction:                10.483s
    Solving time:                       12.409s (Max:     4.661s)
    Model enumeration time:              4.849s
    Time for BDD construction:           0.008s (Max:     0.003s)
Time for merge operator:                 2.062s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):    17.258s

Number of path formula cache hits:   17390 (15%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.984s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               433
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         131 (count: 184, min: 0, max: 67, avg: 0.71)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.552s
  Time for transition matches:                         0.231s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       114803 (count: 114803, min: 1, max: 1, avg: 1.00) [1 x 114803]

CPA algorithm statistics
------------------------
Number of iterations:            84959
Max size of waitlist:            17
Average size of waitlist:        9
Number of computed successors:   109048
Max successors for one state:    2
Number of times merged:          24071
Number of times stopped:         24072
Number of times breaked:         9

Total time for CPA algorithm:        39.434s (Max:    17.511s)
  Time for choose from waitlist:      0.187s
  Time for precision adjustment:     21.642s
  Time for transfer relation:        11.584s
  Time for merge operator:            3.263s
  Time for stop operator:             0.551s
  Time for adding to reached set:     0.622s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.367s
  Counterexample analysis:                            12.932s (Max:     7.073s, Calls: 9)
    Refinement sat check:                             12.245s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.003s
  ARG update:                                          0.088s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 52975
Max. size of reached set after ref.:  42329
Avg. size of reached set before ref.: 29406.33
Avg. size of reached set after ref.:  28222.56

Total time for CEGAR algorithm:      54.722s
Time for refinements:                14.994s
Average time for refinement:          1.666s
Max time for refinement:              8.065s

Code Coverage
-----------------------------
  Function coverage:      0.658
  Visited lines:          1119
  Total lines:            1745
  Line coverage:          0.641
  Visited conditions:     612
  Total conditions:       760
  Condition coverage:     0.805

CPAchecker general statistics
-----------------------------
Number of program locations:     2285
Number of CFA edges:             2792
Number of relevant variables:    313
Number of functions:             73
Number of loops:                 9
Size of reached set:             74309
  Number of reached locations:   1209 (53%)
    Avg states per location:     61
    Max states per location:     869 (at node N827)
  Number of reached functions:   48 (66%)
  Number of partitions:          74307
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N652 (before lines 887-915), Function cleanup called from node N1372, stack depth 4 [6a56a99a], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.406s
  Time for loading CPAs:          0.850s
  Time for loading parser:        0.882s
  Time for CFA construction:      2.555s
    Time for parsing file(s):     0.738s
    Time for AST to CFA:          0.757s
    Time for CFA sanity check:    0.268s
    Time for post-processing:     0.615s
      Time for var class.:        0.340s
Time for Analysis:               54.722s
CPU time for analysis:           54.720s
Time for analyzing result:        0.114s
Total time for CPAchecker:       59.134s
Total CPU time for CPAchecker:   59.110s
Time for statistics:              0.993s

Time for Garbage Collector:       2.068s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                200MB (   190 MiB) max;    101MB (    97 MiB) avg;    218MB (   208 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           263MB (   251 MiB) max;    185MB (   176 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8346MB (  7959 MiB) max;   8231MB (  7850 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
