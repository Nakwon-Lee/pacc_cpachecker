scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product03_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3r_l0njf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1653: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1734: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1990: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2030: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2110: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1490: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            7 (33%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (67%)
  Times precision was empty:       6 (29%)
  Times precision was {false}:     9 (43%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6 (29%)
  Times result was 'false':        9 (43%)
Number of strengthen sat checks:   0
Number of coverage checks:         19559
  BDD entailment checks:           15
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2643
Number of predicates discovered:          12
Number of abstraction locations:          2
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         75
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 5.00
Number of irrelevant predicates:          9 (12%)
Number of preds handled by boolean abs:   66 (88%)
  Total number of models for allsat:      22
  Max number of models for allsat:        6
  Avg number of models for allsat:        3.67

Time for post operator:                  4.085s
  Time for path formula creation:        3.941s
Time for strengthen operator:            0.160s
Time for prec operator:                  6.682s
  Time for abstraction:                  6.529s (Max:     1.889s, Count: 21)
    Boolean abstraction:                 3.097s
    Solving time:                        4.730s (Max:     1.431s)
    Model enumeration time:              0.580s
    Time for BDD construction:           0.007s (Max:     0.003s)
Time for merge operator:                 1.281s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     5.310s

Number of path formula cache hits:   5665 (12%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.803s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               414
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         120 (count: 167, min: 0, max: 55, avg: 0.72)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.433s
Automaton transfers with branching:                0
Automaton transfer successors:                        46617 (count: 46617, min: 1, max: 1, avg: 1.00) [1 x 46617]

CPA algorithm statistics
------------------------
Number of iterations:            34749
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   44534
Max successors for one state:    2
Number of times merged:          9772
Number of times stopped:         9773
Number of times breaked:         5

Total time for CPA algorithm:        17.195s (Max:     8.351s)
  Time for choose from waitlist:      0.099s
  Time for precision adjustment:      7.516s
  Time for transfer relation:         6.308s
  Time for merge operator:            1.926s
  Time for stop operator:             0.259s
  Time for adding to reached set:     0.296s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                   6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.848s
  Counterexample analysis:                             4.653s (Max:     1.993s, Calls: 5)
    Refinement sat check:                              4.440s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.003s
  ARG update:                                          0.033s

Length of refined path (in blocks):                       6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of affected states:                                1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 17209
Max. size of reached set after ref.:  13713
Avg. size of reached set before ref.: 10300.00
Avg. size of reached set after ref.:  9600.00

Total time for CEGAR algorithm:      22.605s
Time for refinements:                 5.334s
Average time for refinement:          1.066s
Max time for refinement:              2.241s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          930
  Total lines:            1637
  Line coverage:          0.568
  Visited conditions:     542
  Total conditions:       710
  Condition coverage:     0.763

CPAchecker general statistics
-----------------------------
Number of program locations:     2136
Number of CFA edges:             2600
Number of relevant variables:    289
Number of functions:             70
Number of loops:                 9
Size of reached set:             31253
  Number of reached locations:   1060 (50%)
    Avg states per location:     29
    Max states per location:     259 (at node N222)
  Number of reached functions:   42 (60%)
  Number of partitions:          31249
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N897 (before lines 1129-1157), Function cleanup called from node N788, stack depth 4 [73dbe25], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.421s
  Time for loading CPAs:          0.908s
  Time for loading parser:        0.724s
  Time for CFA construction:      2.538s
    Time for parsing file(s):     0.692s
    Time for AST to CFA:          0.776s
    Time for CFA sanity check:    0.233s
    Time for post-processing:     0.629s
      Time for var class.:        0.365s
Time for Analysis:               22.606s
CPU time for analysis:           22.610s
Time for analyzing result:        0.037s
Total time for CPAchecker:       27.032s
Total CPU time for CPAchecker:   27.020s
Time for statistics:              0.558s

Time for Garbage Collector:       0.653s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 93MB (    89 MiB) max;     53MB (    50 MiB) avg;    101MB (    97 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    30 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8205MB (  7825 MiB) max;   8152MB (  7774 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
