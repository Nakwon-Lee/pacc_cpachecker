scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--cpufreq--pcc-cpufreq.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hreyn_4c/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpufreq_notify_transition to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cpufreq_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_percpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            51 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            44 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (14%)
  Times precision was empty:       13 (25%)
  Times precision was {false}:     14 (27%)
  Times result was cached:         8 (16%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (31%)
  Times result was 'false':        8 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         413
  BDD entailment checks:           25
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       310
Number of predicates discovered:          3
Number of abstraction locations:          3
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         59
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.97
Number of irrelevant predicates:          30 (51%)
Number of preds handled by boolean abs:   21 (36%)
  Total number of models for allsat:      20
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.25

Time for post operator:                  1.294s
  Time for path formula creation:        1.235s
Time for strengthen operator:            0.046s
Time for prec operator:                  0.683s
  Time for abstraction:                  0.633s (Max:     0.100s, Count: 51)
    Boolean abstraction:                 0.271s
    Solving time:                        0.314s (Max:     0.049s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.015s (Max:     0.012s)
Time for merge operator:                 0.152s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.345s

Number of path formula cache hits:   4404 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.116s

Total number of created targets for pointer analysis: 2
   Number of created targets for uf: *unsigned_long_long_int is 3


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          33 (count: 219, min: 0, max: 26, avg: 0.15)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.156s
Automaton transfers with branching:                0
Automaton transfer successors:                         8808 (count: 8808, min: 1, max: 1, avg: 1.00) [1 x 8808]

CPA algorithm statistics
------------------------
Number of iterations:            2264
Max size of waitlist:            18
Average size of waitlist:        6
Number of computed successors:   2495
Max successors for one state:    2
Number of times merged:          194
Number of times stopped:         210
Number of times breaked:         3

Total time for CPA algorithm:         3.285s (Max:     1.318s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      0.903s
  Time for transfer relation:         2.006s
  Time for merge operator:            0.189s
  Time for stop operator:             0.043s
  Time for adding to reached set:     0.050s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  10 (count: 3, min: 2, max: 4, avg: 3.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.105s
  Counterexample analysis:                             0.044s (Max:     0.020s, Calls: 3)
    Refinement sat check:                              0.031s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.002s
  ARG update:                                          0.028s

Length of refined path (in blocks):                       8 (count: 3, min: 2, max: 4, avg: 2.67)
Number of affected states:                                5 (count: 3, min: 1, max: 3, avg: 1.67)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         5 (count: 3, min: 1, max: 3, avg: 1.67)
Length (states) of path with itp 'false':                 1 (count: 3, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               2 (count: 3, min: 0, max: 2, avg: 0.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 636
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 495.33
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.426s
Time for refinements:                 0.141s
Average time for refinement:          0.047s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.607
  Visited lines:          1489
  Total lines:            2510
  Line coverage:          0.593
  Visited conditions:     74
  Total conditions:       168
  Condition coverage:     0.440

CPAchecker general statistics
-----------------------------
Number of program locations:     2760
Number of CFA edges:             2871
Number of relevant variables:    549
Number of functions:             28
Number of loops:                 2
Size of reached set:             801
  Number of reached locations:   314 (11%)
    Avg states per location:     2
    Max states per location:     20 (at node N2283)
  Number of reached functions:   17 (61%)
  Number of partitions:          800
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2128 (before lines 5759-5822), Function main called from node N2118, stack depth 1 [435ce306], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.396s
  Time for loading CPAs:          0.979s
  Time for loading parser:        0.750s
  Time for CFA construction:      3.520s
    Time for parsing file(s):     0.996s
    Time for AST to CFA:          1.186s
    Time for CFA sanity check:    0.290s
    Time for post-processing:     0.852s
      Time for var class.:        0.435s
Time for Analysis:                3.426s
CPU time for analysis:            3.420s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.827s
Total CPU time for CPAchecker:    8.810s
Time for statistics:              0.122s

Time for Garbage Collector:       0.228s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     34MB (    33 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8090MB (  7715 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
