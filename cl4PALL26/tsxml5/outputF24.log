scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--mos7840_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4ajmm0wu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3624: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3627: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3630: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3636: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            857 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            550 (64%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         307 (36%)
  Times precision was empty:       251 (29%)
  Times precision was {false}:     64 (7%)
  Times result was cached:         499 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43 (5%)
  Times result was 'false':        333 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         17875
  BDD entailment checks:           337
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3114
Number of predicates discovered:          2
Number of abstraction locations:          13
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         606
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.66
Number of irrelevant predicates:          346 (57%)
Number of preds handled by boolean abs:   43 (7%)
  Total number of models for allsat:      40
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.93

Time for post operator:                  6.168s
  Time for path formula creation:        5.910s
Time for strengthen operator:            0.347s
Time for prec operator:                 44.492s
  Time for abstraction:                 44.286s (Max:    37.254s, Count: 857)
    Boolean abstraction:                38.932s
    Solving time:                       37.060s (Max:    34.788s)
    Model enumeration time:              2.326s
    Time for BDD construction:           0.028s (Max:     0.014s)
Time for merge operator:                 1.857s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):    39.386s

Number of path formula cache hits:   208228 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.346s

Total number of created targets for pointer analysis: 362
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 4
   Number of created targets for uf: *_Bool is 11
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          79 (count: 1219, min: 0, max: 8, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.847s
  Time for transition matches:                         0.315s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                       239363 (count: 239363, min: 1, max: 1, avg: 1.00) [1 x 239363]

CPA algorithm statistics
------------------------
Number of iterations:            58806
Max size of waitlist:            37
Average size of waitlist:        18
Number of computed successors:   68401
Max successors for one state:    2
Number of times merged:          8769
Number of times stopped:         9072
Number of times breaked:         10

Total time for CPA algorithm:        59.914s (Max:    43.460s)
  Time for choose from waitlist:      0.093s
  Time for precision adjustment:     45.525s
  Time for transfer relation:        10.669s
  Time for merge operator:            2.268s
  Time for stop operator:             0.280s
  Time for adding to reached set:     0.288s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                  39 (count: 10, min: 2, max: 5, avg: 3.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.694s
  Counterexample analysis:                             0.399s (Max:     0.171s, Calls: 10)
    Refinement sat check:                              0.318s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.022s
  ARG update:                                          0.235s

Length of refined path (in blocks):                      39 (count: 10, min: 2, max: 5, avg: 3.90)
Number of affected states:                               29 (count: 10, min: 1, max: 4, avg: 2.90)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        29 (count: 10, min: 1, max: 4, avg: 2.90)
Length (states) of path with itp 'false':                 0 (count: 10, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 10, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:              18 (count: 10, min: 0, max: 3, avg: 1.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 6348
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 5316.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      60.816s
Time for refinements:                 0.901s
Average time for refinement:          0.090s
Max time for refinement:              0.215s

Code Coverage
-----------------------------
  Function coverage:      0.892
  Visited lines:          8657
  Total lines:            9166
  Line coverage:          0.944
  Visited conditions:     912
  Total conditions:       986
  Condition coverage:     0.925

CPAchecker general statistics
-----------------------------
Number of program locations:     10169
Number of CFA edges:             10807
Number of relevant variables:    2829
Number of functions:             83
Number of loops:                 16
Size of reached set:             5862
  Number of reached locations:   2528 (25%)
    Avg states per location:     2
    Max states per location:     77 (at node N292)
  Number of reached functions:   74 (89%)
  Number of partitions:          5862
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          8.242s
  Time for loading CPAs:          1.330s
  Time for loading parser:        0.694s
  Time for CFA construction:      6.043s
    Time for parsing file(s):     1.434s
    Time for AST to CFA:          1.934s
    Time for CFA sanity check:    0.830s
    Time for post-processing:     1.650s
      Time for var class.:        0.826s
Time for Analysis:               60.816s
CPU time for analysis:           60.820s
Time for analyzing result:        0.007s
Total time for CPAchecker:       69.063s
Total CPU time for CPAchecker:   69.040s
Time for statistics:              0.256s

Time for Garbage Collector:       1.389s (in 81 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   114 MiB) max;     67MB (    64 MiB) avg;    126MB (   120 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8210MB (  7830 MiB) max;   8183MB (  7804 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
