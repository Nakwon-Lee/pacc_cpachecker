scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--arcnet--rfc1051_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ndzo5x0n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5152: Function pointer *__cil_tmp36 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5161: Function pointer *__cil_tmp41 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4896: Function pointer *__cil_tmp43 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function arcnet_unregister_proto to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5152: Ignoring call via function pointer prepare_tx::__cil_tmp36 for which no suitable target was found in line: (*__cil_tmp36)(dev, bufnum, 0, __cil_tmp37, 4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5152: Ignoring function call through function pointer *__cil_tmp36: (*__cil_tmp36)(dev, bufnum, 0, __cil_tmp37, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5161: Ignoring call via function pointer prepare_tx::__cil_tmp41 for which no suitable target was found in line: (*__cil_tmp41)(dev, bufnum, ofs, __cil_tmp45, length); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5161: Ignoring function call through function pointer *__cil_tmp41: (*__cil_tmp41)(dev, bufnum, ofs, __cil_tmp45, length); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4896: Ignoring call via function pointer rx::__cil_tmp43 for which no suitable target was found in line: (*__cil_tmp43)(dev, bufnum, __cil_tmp46, __cil_tmp51, __cil_tmp54); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4896: Ignoring function call through function pointer *__cil_tmp43: (*__cil_tmp43)(dev, bufnum, __cil_tmp46, __cil_tmp51, __cil_tmp54); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            184 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  162 (88%)
  Because of loop head:            18 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (2%)
  Times precision was empty:       79 (43%)
  Times precision was {false}:     25 (14%)
  Times result was cached:         55 (30%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      25 (14%)
  Times result was 'false':        4 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         252
  BDD entailment checks:           26
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          2
Number of abstraction locations:          23
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         105
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.10
Number of irrelevant predicates:          37 (35%)
Number of preds handled by boolean abs:   25 (24%)
  Total number of models for allsat:      25
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.052s
  Time for path formula creation:        1.025s
Time for strengthen operator:            0.026s
Time for prec operator:                  0.451s
  Time for abstraction:                  0.408s (Max:     0.031s, Count: 184)
    Boolean abstraction:                 0.057s
    Solving time:                        0.084s (Max:     0.016s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.006s (Max:     0.006s)
Time for merge operator:                 0.056s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.090s

Number of path formula cache hits:   2458 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.940s

Total number of created targets for pointer analysis: 40
   Number of created targets for uf: *(struct_ArcProto)* is 21


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          35 (count: 385, min: 0, max: 35, avg: 0.09)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.091s
Automaton transfers with branching:                0
Automaton transfer successors:                         4805 (count: 4805, min: 1, max: 1, avg: 1.00) [1 x 4805]

CPA algorithm statistics
------------------------
Number of iterations:            1171
Max size of waitlist:            10
Average size of waitlist:        6
Number of computed successors:   1335
Max successors for one state:    2
Number of times merged:          113
Number of times stopped:         133
Number of times breaked:         4

Total time for CPA algorithm:         2.357s (Max:     0.939s)
  Time for choose from waitlist:      0.003s
  Time for precision adjustment:      0.604s
  Time for transfer relation:         1.492s
  Time for merge operator:            0.095s
  Time for stop operator:             0.027s
  Time for adding to reached set:     0.071s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  63 (count: 4, min: 10, max: 25, avg: 15.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.160s
  Counterexample analysis:                             0.102s (Max:     0.030s, Calls: 4)
    Refinement sat check:                              0.082s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.005s
  ARG update:                                          0.031s

Length of refined path (in blocks):                      59 (count: 4, min: 9, max: 24, avg: 14.75)
Number of affected states:                               55 (count: 4, min: 8, max: 23, avg: 13.75)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        55 (count: 4, min: 8, max: 23, avg: 13.75)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              51 (count: 4, min: 7, max: 22, avg: 12.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 299
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 254.25
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.555s
Time for refinements:                 0.197s
Average time for refinement:          0.049s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1301
  Total lines:            1345
  Line coverage:          0.967
  Visited conditions:     52
  Total conditions:       60
  Condition coverage:     0.867

CPAchecker general statistics
-----------------------------
Number of program locations:     1475
Number of CFA edges:             1502
Number of relevant variables:    207
Number of functions:             24
Number of loops:                 1
Size of reached set:             194
  Number of reached locations:   184 (12%)
    Avg states per location:     1
    Max states per location:     4 (at node N655)
  Number of reached functions:   12 (50%)
  Number of partitions:          194
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.829s
  Time for loading CPAs:          0.991s
  Time for loading parser:        0.787s
  Time for CFA construction:      2.944s
    Time for parsing file(s):     1.028s
    Time for AST to CFA:          0.939s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     0.605s
      Time for var class.:        0.207s
Time for Analysis:                2.555s
CPU time for analysis:            2.560s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.391s
Total CPU time for CPAchecker:    7.380s
Time for statistics:              0.110s

Time for Garbage Collector:       0.176s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     32MB (    31 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8080MB (  7706 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
