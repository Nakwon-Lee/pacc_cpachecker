scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--maps--intel_vr_nor.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cmjcxzcj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_map_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_map_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_parse_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function map_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            232 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  211 (91%)
  Because of loop head:            17 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (2%)
  Times precision was empty:       124 (53%)
  Times precision was {false}:     5 (2%)
  Times result was cached:         67 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36 (16%)
  Times result was 'false':        7 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         213
  BDD entailment checks:           51
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       310
Number of predicates discovered:          2
Number of abstraction locations:          28
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         108
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.63
Number of irrelevant predicates:          19 (18%)
Number of preds handled by boolean abs:   36 (33%)
  Total number of models for allsat:      36
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.746s
  Time for path formula creation:        0.717s
Time for strengthen operator:            0.031s
Time for prec operator:                  0.463s
  Time for abstraction:                  0.435s (Max:     0.094s, Count: 232)
    Boolean abstraction:                 0.164s
    Solving time:                        0.146s (Max:     0.064s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.035s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.154s

Number of path formula cache hits:   3613 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.671s

Total number of created targets for pointer analysis: 3
   Number of created targets for uf: *(char)* is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          67 (count: 421, min: 0, max: 67, avg: 0.16)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.083s
Automaton transfers with branching:                0
Automaton transfer successors:                         4755 (count: 4755, min: 1, max: 1, avg: 1.00) [1 x 4755]

CPA algorithm statistics
------------------------
Number of iterations:            1148
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   1304
Max successors for one state:    2
Number of times merged:          81
Number of times stopped:         129
Number of times breaked:         4

Total time for CPA algorithm:         2.064s (Max:     1.137s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.610s
  Time for transfer relation:         1.234s
  Time for merge operator:            0.053s
  Time for stop operator:             0.051s
  Time for adding to reached set:     0.040s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  67 (count: 4, min: 5, max: 27, avg: 16.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.109s
  Counterexample analysis:                             0.070s (Max:     0.029s, Calls: 4)
    Refinement sat check:                              0.052s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.002s
  ARG update:                                          0.019s

Length of refined path (in blocks):                      63 (count: 4, min: 4, max: 26, avg: 15.75)
Number of affected states:                               59 (count: 4, min: 3, max: 25, avg: 14.75)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        59 (count: 4, min: 3, max: 25, avg: 14.75)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              55 (count: 4, min: 2, max: 24, avg: 13.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 248
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 236.25
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       2.210s
Time for refinements:                 0.146s
Average time for refinement:          0.036s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.464
  Visited lines:          1133
  Total lines:            1263
  Line coverage:          0.897
  Visited conditions:     60
  Total conditions:       80
  Condition coverage:     0.750

CPAchecker general statistics
-----------------------------
Number of program locations:     1430
Number of CFA edges:             1472
Number of relevant variables:    270
Number of functions:             28
Number of loops:                 2
Size of reached set:             236
  Number of reached locations:   192 (13%)
    Avg states per location:     1
    Max states per location:     5 (at node N725)
  Number of reached functions:   13 (46%)
  Number of partitions:          236
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.483s
  Time for loading CPAs:          0.988s
  Time for loading parser:        0.701s
  Time for CFA construction:      2.662s
    Time for parsing file(s):     0.886s
    Time for AST to CFA:          0.813s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.592s
      Time for var class.:        0.304s
Time for Analysis:                2.211s
CPU time for analysis:            2.210s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.699s
Total CPU time for CPAchecker:    6.690s
Time for statistics:              0.103s

Time for Garbage Collector:       0.168s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     33MB (    31 MiB) avg;     63MB (    61 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8081MB (  7707 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
