scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--f71805f.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jvrlnzfo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_check_resource_conflict to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_chmod_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2567 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2439 (95%)
  Because of loop head:            120 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (0%)
  Times precision was empty:       517 (20%)
  Times precision was {false}:     73 (3%)
  Times result was cached:         1865 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      112 (4%)
  Times result was 'false':        8 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         936
  BDD entailment checks:           324
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       165
Number of predicates discovered:          2
Number of abstraction locations:          64
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2050
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 11.08
Number of irrelevant predicates:          285 (14%)
Number of preds handled by boolean abs:   112 (5%)
  Total number of models for allsat:      112
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.015s
  Time for path formula creation:        1.951s
Time for strengthen operator:            0.046s
Time for prec operator:                  1.641s
  Time for abstraction:                  1.361s (Max:     0.073s, Count: 2567)
    Boolean abstraction:                 0.218s
    Solving time:                        0.214s (Max:     0.018s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.023s (Max:     0.007s)
Time for merge operator:                 0.128s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.225s

Number of path formula cache hits:   19084 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.568s

Total number of created targets for pointer analysis: 168
   Number of created targets for uf: *unsigned_short_int is 7
   Number of created targets for uf: *(char)* is 45


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         209 (count: 1883, min: 0, max: 84, avg: 0.11)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.226s
Automaton transfers with branching:                0
Automaton transfer successors:                        22786 (count: 22786, min: 1, max: 1, avg: 1.00) [1 x 22786]

CPA algorithm statistics
------------------------
Number of iterations:            8543
Max size of waitlist:            27
Average size of waitlist:        7
Number of computed successors:   9203
Max successors for one state:    2
Number of times merged:          306
Number of times stopped:         581
Number of times breaked:         8

Total time for CPA algorithm:         6.011s (Max:     1.680s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      2.029s
  Time for transfer relation:         3.202s
  Time for merge operator:            0.187s
  Time for stop operator:             0.140s
  Time for adding to reached set:     0.115s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 528 (count: 8, min: 42, max: 76, avg: 66.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.658s
  Counterexample analysis:                             0.474s (Max:     0.083s, Calls: 8)
    Refinement sat check:                              0.313s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.017s
  ARG update:                                          0.102s

Length of refined path (in blocks):                     520 (count: 8, min: 41, max: 75, avg: 65.00)
Number of affected states:                              512 (count: 8, min: 40, max: 74, avg: 64.00)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       512 (count: 8, min: 40, max: 74, avg: 64.00)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             504 (count: 8, min: 39, max: 73, avg: 63.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 1224
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 968.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       6.742s
Time for refinements:                 0.720s
Average time for refinement:          0.090s
Max time for refinement:              0.134s

Code Coverage
-----------------------------
  Function coverage:      0.253
  Visited lines:          1599
  Total lines:            4503
  Line coverage:          0.355
  Visited conditions:     96
  Total conditions:       230
  Condition coverage:     0.417

CPAchecker general statistics
-----------------------------
Number of program locations:     4916
Number of CFA edges:             5096
Number of relevant variables:    959
Number of functions:             83
Number of loops:                 13
Size of reached set:             895
  Number of reached locations:   351 (7%)
    Avg states per location:     2
    Max states per location:     52 (at node N32)
  Number of reached functions:   21 (25%)
  Number of partitions:          895
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.724s
  Time for loading CPAs:          1.013s
  Time for loading parser:        0.757s
  Time for CFA construction:      4.765s
    Time for parsing file(s):     1.197s
    Time for AST to CFA:          1.572s
    Time for CFA sanity check:    0.469s
    Time for post-processing:     1.350s
      Time for var class.:        0.710s
Time for Analysis:                6.742s
CPU time for analysis:            6.740s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.471s
Total CPU time for CPAchecker:   13.450s
Time for statistics:              0.114s

Time for Garbage Collector:       0.379s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     41MB (    39 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     29MB (    28 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8131MB (  7754 MiB) max;   8101MB (  7726 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
