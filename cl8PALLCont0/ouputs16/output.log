scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product05_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o4ziwar0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 90: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 747: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 279: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            8 (53%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (47%)
  Times precision was empty:       3 (20%)
  Times precision was {false}:     8 (53%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (27%)
  Times result was 'false':        7 (47%)
Number of strengthen sat checks:   0
Number of coverage checks:         107
  BDD entailment checks:           3
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         23
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1.92
Number of irrelevant predicates:          8 (35%)
Number of preds handled by boolean abs:   15 (65%)
  Total number of models for allsat:      6
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.50

Time for post operator:                  0.288s
  Time for path formula creation:        0.274s
Time for strengthen operator:            0.025s
Time for prec operator:                  0.144s
  Time for abstraction:                  0.134s (Max:     0.028s, Count: 15)
    Boolean abstraction:                 0.026s
    Solving time:                        0.022s (Max:     0.006s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.007s (Max:     0.006s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.024s

Number of path formula cache hits:   205 (25%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.256s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 95, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.061s
Automaton transfers with branching:                0
Automaton transfer successors:                          822 (count: 822, min: 1, max: 1, avg: 1.00) [1 x 822]

CPA algorithm statistics
------------------------
Number of iterations:            610
Max size of waitlist:            7
Average size of waitlist:        3
Number of computed successors:   676
Max successors for one state:    2
Number of times merged:          52
Number of times stopped:         53
Number of times breaked:         2

Total time for CPA algorithm:         0.852s (Max:     0.406s)
  Time for choose from waitlist:      0.004s
  Time for precision adjustment:      0.241s
  Time for transfer relation:         0.524s
  Time for merge operator:            0.023s
  Time for stop operator:             0.013s
  Time for adding to reached set:     0.027s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.059s
  Counterexample analysis:                             0.031s (Max:     0.017s, Calls: 2)
    Refinement sat check:                              0.021s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.003s
  ARG update:                                          0.004s

Length of refined path (in blocks):                       4 (count: 2, min: 2, max: 2, avg: 2.00)
Number of affected states:                                2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 1 (count: 2, min: 0, max: 1, avg: 0.50)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 180
Max. size of reached set after ref.:  25
Avg. size of reached set before ref.: 139.50
Avg. size of reached set after ref.:  25.00

Total time for CEGAR algorithm:       0.934s
Time for refinements:                 0.077s
Average time for refinement:          0.038s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.656
  Visited lines:          103
  Total lines:            403
  Line coverage:          0.256
  Visited conditions:     30
  Total conditions:       62
  Condition coverage:     0.484

CPAchecker general statistics
-----------------------------
Number of program locations:     568
Number of CFA edges:             609
Number of relevant variables:    107
Number of functions:             32
Number of loops:                 5
Size of reached set:             388
  Number of reached locations:   137 (24%)
    Avg states per location:     2
    Max states per location:     8 (at node N469)
  Number of reached functions:   21 (66%)
  Number of partitions:          387
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N425 (before lines 604-649), Function test called from node N397, stack depth 3 [275bf9b3], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.477s
  Time for loading CPAs:          1.005s
  Time for loading parser:        0.723s
  Time for CFA construction:      1.522s
    Time for parsing file(s):     0.555s
    Time for AST to CFA:          0.334s
    Time for CFA sanity check:    0.104s
    Time for post-processing:     0.339s
      Time for var class.:        0.144s
Time for Analysis:                0.934s
CPU time for analysis:            0.930s
Time for analyzing result:        0.001s
Total time for CPAchecker:        4.417s
Total CPU time for CPAchecker:    4.400s
Time for statistics:              0.123s

Time for Garbage Collector:       0.130s (in 4 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 48MB (    46 MiB) max;     28MB (    27 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             31MB (    29 MiB) max;     23MB (    22 MiB) avg;     32MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    32 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:   8134MB (  7758 MiB) max;   8060MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
