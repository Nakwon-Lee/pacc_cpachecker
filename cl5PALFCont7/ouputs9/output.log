scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--platform--x86--samsung-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jpq21d8j/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5813: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_dmi_promote_vendor to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_unregister to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3839: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_blob to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            615606 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  609692 (99%)
  Because of loop head:            3299 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2615 (0%)
  Times precision was empty:       9217 (1%)
  Times precision was {false}:     1015 (0%)
  Times result was cached:         594163 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11211 (2%)
  Times result was 'false':        39684 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         321748
  BDD entailment checks:           39840
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          14
Number of abstraction locations:          200
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         4104577
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 335.73
Number of irrelevant predicates:          2166522 (53%)
Number of preds handled by boolean abs:   36875 (1%)
  Total number of models for allsat:      11917
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.06

Time for post operator:                 30.975s
  Time for path formula creation:       29.574s
Time for strengthen operator:            2.695s
Time for prec operator:                187.924s
  Time for abstraction:                177.373s (Max:     0.371s, Count: 615606)
    Boolean abstraction:                22.212s
    Solving time:                       19.288s (Max:     0.066s)
    Model enumeration time:              2.449s
    Time for BDD construction:           0.346s (Max:     0.016s)
Time for merge operator:                 1.947s
Time for coverage check:                 0.146s
  Time for BDD entailment checks:        0.117s
Total time for SMT solver (w/o itp):    21.737s

Number of path formula cache hits:   3336190 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.976s

Total number of created targets for pointer analysis: 260437
   Number of created targets for uf: *(void)* is 1425
   Number of created targets for uf: *(struct_samsung_quirks)* is 2
   Number of created targets for uf: *(struct_dentry)* is 28
   Number of created targets for uf: *(struct_sabi_config)* is 111
   Number of created targets for uf: *enum_rfkill_type is 79
   Number of created targets for uf: *(struct_platform_device)* is 34
   Number of created targets for uf: *(struct_rfkill)* is 280
   Number of created targets for uf: *unsigned_short_int is 2404
   Number of created targets for uf: *(struct_backlight_device)* is 17
   Number of created targets for uf: *signed_int is 76
   Number of created targets for uf: *unsigned_char is 2226
   Number of created targets for uf: *_Bool is 77
   Number of created targets for uf: *(struct_workqueue_struct)* is 32
   Number of created targets for uf: *unsigned_int is 283
   Number of created targets for uf: *char is 41


Number of BDD nodes:                               1319
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       24666 (count: 123708, min: 0, max: 434, avg: 0.20)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.550s
  Time for transition matches:                         2.504s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.030s
Automaton transfers with branching:                0
Automaton transfer successors:                      2842353 (count: 2842353, min: 1, max: 1, avg: 1.00) [1 x 2842353]

CPA algorithm statistics
------------------------
Number of iterations:            2012286
Max size of waitlist:            46
Average size of waitlist:        19
Number of computed successors:   2229796
Max successors for one state:    2
Number of times merged:          140954
Number of times stopped:         167330
Number of times breaked:         2615

Total time for CPA algorithm:       288.542s (Max:     3.811s)
  Time for choose from waitlist:      0.842s
  Time for precision adjustment:    205.273s
  Time for transfer relation:        64.435s
  Time for merge operator:            4.003s
  Time for stop operator:             3.206s
  Time for adding to reached set:     4.404s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2615
Avg. length of target path (in blocks):              912475 (count: 2615, min: 29, max: 551, avg: 348.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 529.641s
  Counterexample analysis:                           520.000s (Max:     0.505s, Calls: 2615)
    Refinement sat check:                            211.020s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.493s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.738s
  Precision update:                                    1.717s
  ARG update:                                          3.268s

Length of refined path (in blocks):                  907309 (count: 2614, min: 28, max: 550, avg: 347.10)
Number of affected states:                            86290 (count: 2614, min: 1, max: 452, avg: 33.01)
Length (states) of path with itp 'true':             818405 (count: 2614, min: 0, max: 519, avg: 313.09)
Length (states) of path with itp non-trivial itp:     86290 (count: 2614, min: 1, max: 452, avg: 33.01)
Length (states) of path with itp 'false':              2614 (count: 2614, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2614, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           83676 (count: 2614, min: 0, max: 451, avg: 32.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2615
Number of successful refinements:     2614
Number of failed refinements:         0
Max. size of reached set before ref.: 35383
Max. size of reached set after ref.:  35240
Avg. size of reached set before ref.: 18155.64
Avg. size of reached set after ref.:  17388.76

Total time for CEGAR algorithm:     894.741s
Time for refinements:               578.339s
Average time for refinement:          0.221s
Max time for refinement:              0.825s

Code Coverage
-----------------------------
  Function coverage:      0.548
  Visited lines:          1456
  Total lines:            1928
  Line coverage:          0.755
  Visited conditions:     282
  Total conditions:       440
  Condition coverage:     0.641

CPAchecker general statistics
-----------------------------
Number of program locations:     2715
Number of CFA edges:             3001
Number of relevant variables:    377
Number of functions:             124
Number of loops:                 7
Size of reached set:             30981
  Number of reached locations:   870 (32%)
    Avg states per location:     35
    Max states per location:     972 (at node N32)
  Number of reached functions:   68 (55%)
  Number of partitions:          30908
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1581 (before line 5757), Function main called from node N1498, stack depth 1 [7051777c], stack [main]])
  Number of target states:       1
  Size of final wait list        20

Time for analysis setup:          5.533s
  Time for loading CPAs:          1.065s
  Time for loading parser:        0.750s
  Time for CFA construction:      3.560s
    Time for parsing file(s):     1.048s
    Time for AST to CFA:          1.177s
    Time for CFA sanity check:    0.232s
    Time for post-processing:     0.907s
      Time for var class.:        0.493s
Time for Analysis:              894.741s
CPU time for analysis:          894.710s
Total time for CPAchecker:      900.278s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.476s

Time for Garbage Collector:      23.608s (in 1560 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                203MB (   193 MiB) max;    119MB (   114 MiB) avg;    214MB (   204 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           224MB (   213 MiB) max;    178MB (   170 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8472MB (  8080 MiB) max;   8321MB (  7936 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
