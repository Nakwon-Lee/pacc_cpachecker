scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec3_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5b_fejqb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 89: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21406 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21101 (99%)
  Because of loop head:            179 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         126 (1%)
  Times precision was empty:       554 (3%)
  Times precision was {false}:     184 (1%)
  Times result was cached:         16580 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4088 (19%)
  Times result was 'false':        3347 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         10280
  BDD entailment checks:           7628
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          56
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         103024
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 24.12
Number of irrelevant predicates:          34006 (33%)
Number of preds handled by boolean abs:   15433 (15%)
  Total number of models for allsat:      4355
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.07

Time for post operator:                  2.249s
  Time for path formula creation:        2.139s
Time for strengthen operator:            0.139s
Time for prec operator:                 15.085s
  Time for abstraction:                 14.566s (Max:     0.025s, Count: 21406)
    Boolean abstraction:                 3.945s
    Solving time:                        2.732s (Max:     0.014s)
    Model enumeration time:              0.361s
    Time for BDD construction:           0.267s (Max:     0.012s)
Time for merge operator:                 0.055s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     3.093s

Number of path formula cache hits:   58703 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.888s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1232
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9384 (count: 34954, min: 0, max: 623, avg: 0.27)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.475s
Automaton transfers with branching:                0
Automaton transfer successors:                        79649 (count: 79649, min: 1, max: 1, avg: 1.00) [1 x 79649]

CPA algorithm statistics
------------------------
Number of iterations:            60558
Max size of waitlist:            25
Average size of waitlist:        10
Number of computed successors:   67450
Max successors for one state:    2
Number of times merged:          1326
Number of times stopped:         2920
Number of times breaked:         126

Total time for CPA algorithm:        22.266s (Max:     0.627s)
  Time for choose from waitlist:      0.131s
  Time for precision adjustment:     15.947s
  Time for transfer relation:         4.573s
  Time for merge operator:            0.236s
  Time for stop operator:             0.317s
  Time for adding to reached set:     0.326s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   126
Avg. length of target path (in blocks):                6507 (count: 126, min: 23, max: 100, avg: 51.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.318s
  Counterexample analysis:                             1.733s (Max:     0.039s, Calls: 126)
    Refinement sat check:                              0.702s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.130s
  Precision update:                                    0.109s
  ARG update:                                          0.228s

Length of refined path (in blocks):                    5169 (count: 126, min: 14, max: 73, avg: 41.02)
Number of affected states:                             2018 (count: 126, min: 2, max: 68, avg: 16.02)
Length (states) of path with itp 'true':               3025 (count: 126, min: 0, max: 68, avg: 24.01)
Length (states) of path with itp non-trivial itp:      2018 (count: 126, min: 2, max: 68, avg: 16.02)
Length (states) of path with itp 'false':               126 (count: 126, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          62 (count: 126, min: 0, max: 3, avg: 0.49)
Equal non-trivial interpolants along paths:            1830 (count: 126, min: 1, max: 65, avg: 14.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                126
Number of successful refinements:     126
Number of failed refinements:         0
Max. size of reached set before ref.: 4955
Max. size of reached set after ref.:  4300
Avg. size of reached set before ref.: 1463.56
Avg. size of reached set after ref.:  1012.16

Total time for CEGAR algorithm:      25.077s
Time for refinements:                 2.674s
Average time for refinement:          0.021s
Max time for refinement:              0.065s

Code Coverage
-----------------------------
  Function coverage:      0.703
  Visited lines:          148
  Total lines:            437
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       74
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     626
Number of CFA edges:             677
Number of relevant variables:    116
Number of functions:             37
Number of loops:                 5
Size of reached set:             4308
  Number of reached locations:   199 (32%)
    Avg states per location:     21
    Max states per location:     129 (at node N0)
  Number of reached functions:   26 (70%)
  Number of partitions:          4212
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N601 (before lines 896-943), Function test called from node N390, stack depth 3 [5407cc39], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.287s
  Time for loading CPAs:          0.863s
  Time for loading parser:        0.759s
  Time for CFA construction:      1.487s
    Time for parsing file(s):     0.522s
    Time for AST to CFA:          0.360s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.316s
      Time for var class.:        0.131s
Time for Analysis:               25.077s
CPU time for analysis:           25.070s
Time for analyzing result:        0.002s
Total time for CPAchecker:       28.369s
Total CPU time for CPAchecker:   28.350s
Time for statistics:              0.161s

Time for Garbage Collector:       0.547s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     43MB (    41 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8120MB (  7744 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
