scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product47_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y1gb35ns/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 60: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 449: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 592: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 644: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 690: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 240: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12057 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11875 (98%)
  Because of loop head:            123 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         59 (0%)
  Times precision was empty:       506 (4%)
  Times precision was {false}:     131 (1%)
  Times result was cached:         8934 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2486 (21%)
  Times result was 'false':        1230 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         4954
  BDD entailment checks:           2920
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          11
Number of abstraction locations:          57
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         48354
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 18.48
Number of irrelevant predicates:          16475 (34%)
Number of preds handled by boolean abs:   7558 (16%)
  Total number of models for allsat:      2575
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.776s
  Time for path formula creation:        1.716s
Time for strengthen operator:            0.127s
Time for prec operator:                  9.211s
  Time for abstraction:                  8.810s (Max:     0.026s, Count: 12057)
    Boolean abstraction:                 2.273s
    Solving time:                        1.571s (Max:     0.018s)
    Model enumeration time:              0.285s
    Time for BDD construction:           0.208s (Max:     0.010s)
Time for merge operator:                 0.089s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     1.856s

Number of path formula cache hits:   26361 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.553s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               720
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5769 (count: 19620, min: 0, max: 482, avg: 0.29)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.285s
Automaton transfers with branching:                0
Automaton transfer successors:                        46412 (count: 46412, min: 1, max: 1, avg: 1.00) [1 x 46412]

CPA algorithm statistics
------------------------
Number of iterations:            36610
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   40380
Max successors for one state:    2
Number of times merged:          1017
Number of times stopped:         2286
Number of times breaked:         59

Total time for CPA algorithm:        14.898s (Max:     1.398s)
  Time for choose from waitlist:      0.154s
  Time for precision adjustment:      9.861s
  Time for transfer relation:         3.631s
  Time for merge operator:            0.178s
  Time for stop operator:             0.282s
  Time for adding to reached set:     0.240s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   59
Avg. length of target path (in blocks):                3326 (count: 59, min: 27, max: 95, avg: 56.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.318s
  Counterexample analysis:                             0.827s (Max:     0.041s, Calls: 59)
    Refinement sat check:                              0.432s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.114s
  ARG update:                                          0.216s

Length of refined path (in blocks):                    2505 (count: 59, min: 16, max: 73, avg: 42.46)
Number of affected states:                             1077 (count: 59, min: 2, max: 62, avg: 18.25)
Length (states) of path with itp 'true':               1369 (count: 59, min: 0, max: 67, avg: 23.20)
Length (states) of path with itp non-trivial itp:      1077 (count: 59, min: 2, max: 62, avg: 18.25)
Length (states) of path with itp 'false':                59 (count: 59, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 59, min: 0, max: 2, avg: 0.19)
Equal non-trivial interpolants along paths:            1007 (count: 59, min: 1, max: 59, avg: 17.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                59
Number of successful refinements:     59
Number of failed refinements:         0
Max. size of reached set before ref.: 4336
Max. size of reached set after ref.:  4111
Avg. size of reached set before ref.: 1426.44
Avg. size of reached set after ref.:  845.76

Total time for CEGAR algorithm:      16.508s
Time for refinements:                 1.562s
Average time for refinement:          0.026s
Max time for refinement:              0.068s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          152
  Total lines:            444
  Line coverage:          0.342
  Visited conditions:     46
  Total conditions:       76
  Condition coverage:     0.605

CPAchecker general statistics
-----------------------------
Number of program locations:     639
Number of CFA edges:             691
Number of relevant variables:    114
Number of functions:             38
Number of loops:                 5
Size of reached set:             2605
  Number of reached locations:   208 (33%)
    Avg states per location:     12
    Max states per location:     76 (at node N335)
  Number of reached functions:   26 (68%)
  Number of partitions:          2522
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N618 (before lines 917-964), Function test called from node N403, stack depth 3 [457547a1], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.333s
  Time for loading CPAs:          0.889s
  Time for loading parser:        0.739s
  Time for CFA construction:      1.526s
    Time for parsing file(s):     0.527s
    Time for AST to CFA:          0.404s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.313s
      Time for var class.:        0.125s
Time for Analysis:               16.508s
CPU time for analysis:           16.510s
Time for analyzing result:        0.002s
Total time for CPAchecker:       19.848s
Total CPU time for CPAchecker:   19.840s
Time for statistics:              0.126s

Time for Garbage Collector:       0.346s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8115MB (  7739 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
