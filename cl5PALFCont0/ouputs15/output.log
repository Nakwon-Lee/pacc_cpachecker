scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product17_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mrekgtxe/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 529: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 552: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 299: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1180 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1143 (97%)
  Because of loop head:            26 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (1%)
  Times precision was empty:       179 (15%)
  Times precision was {false}:     37 (3%)
  Times result was cached:         866 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      98 (8%)
  Times result was 'false':        101 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         384
  BDD entailment checks:           158
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          4
Number of abstraction locations:          39
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1358
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 10.06
Number of irrelevant predicates:          392 (29%)
Number of preds handled by boolean abs:   139 (10%)
  Total number of models for allsat:      107
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                  0.517s
  Time for path formula creation:        0.507s
Time for strengthen operator:            0.035s
Time for prec operator:                  0.861s
  Time for abstraction:                  0.776s (Max:     0.014s, Count: 1180)
    Boolean abstraction:                 0.115s
    Solving time:                        0.078s (Max:     0.010s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.034s (Max:     0.010s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.082s

Number of path formula cache hits:   2816 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.436s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         105 (count: 1132, min: 0, max: 105, avg: 0.09)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.094s
Automaton transfers with branching:                0
Automaton transfer successors:                         4542 (count: 4542, min: 1, max: 1, avg: 1.00) [1 x 4542]

CPA algorithm statistics
------------------------
Number of iterations:            3466
Max size of waitlist:            12
Average size of waitlist:        5
Number of computed successors:   3872
Max successors for one state:    2
Number of times merged:          113
Number of times stopped:         235
Number of times breaked:         11

Total time for CPA algorithm:         2.479s (Max:     0.356s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      1.104s
  Time for transfer relation:         1.075s
  Time for merge operator:            0.037s
  Time for stop operator:             0.049s
  Time for adding to reached set:     0.057s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 524 (count: 11, min: 30, max: 66, avg: 47.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.259s
  Counterexample analysis:                             0.145s (Max:     0.027s, Calls: 11)
    Refinement sat check:                              0.063s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.016s
  ARG update:                                          0.037s

Length of refined path (in blocks):                     348 (count: 11, min: 20, max: 50, avg: 31.64)
Number of affected states:                              298 (count: 11, min: 15, max: 49, avg: 27.09)
Length (states) of path with itp 'true':                 39 (count: 11, min: 0, max: 13, avg: 3.55)
Length (states) of path with itp non-trivial itp:       298 (count: 11, min: 15, max: 49, avg: 27.09)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 11, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:             286 (count: 11, min: 14, max: 48, avg: 26.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 662
Max. size of reached set after ref.:  413
Avg. size of reached set before ref.: 368.91
Avg. size of reached set after ref.:  103.18

Total time for CEGAR algorithm:       2.794s
Time for refinements:                 0.314s
Average time for refinement:          0.028s
Max time for refinement:              0.068s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          104
  Total lines:            423
  Line coverage:          0.246
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    110
Number of functions:             36
Number of loops:                 5
Size of reached set:             614
  Number of reached locations:   139 (23%)
    Avg states per location:     4
    Max states per location:     24 (at node N406)
  Number of reached functions:   18 (50%)
  Number of partitions:          608
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N582 (before lines 867-912), Function test called from node N47, stack depth 3 [66e8997c], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.289s
  Time for loading CPAs:          0.764s
  Time for loading parser:        0.777s
  Time for CFA construction:      1.454s
    Time for parsing file(s):     0.485s
    Time for AST to CFA:          0.402s
    Time for CFA sanity check:    0.086s
    Time for post-processing:     0.301s
      Time for var class.:        0.114s
Time for Analysis:                2.794s
CPU time for analysis:            2.790s
Time for analyzing result:        0.003s
Total time for CPAchecker:        6.090s
Total CPU time for CPAchecker:    6.080s
Time for statistics:              0.103s

Time for Garbage Collector:       0.170s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     33MB (    31 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     26MB (    25 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8079MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
