scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/apache-escape-absolute_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_31gfg05w/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            648 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  399 (62%)
  Because of loop head:            45 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         204 (31%)
  Times precision was empty:       29 (4%)
  Times precision was {false}:     110 (17%)
  Times result was cached:         234 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      275 (42%)
  Times result was 'false':        180 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         159
  BDD entailment checks:           45
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       21
Number of predicates discovered:          15
Number of abstraction locations:          22
Max number of predicates per location:    14
Avg number of predicates per location:    4
Total predicates per abstraction:         3106
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 8.07
Number of irrelevant predicates:          345 (11%)
Number of preds handled by boolean abs:   1806 (58%)
  Total number of models for allsat:      953
  Max number of models for allsat:        24
  Avg number of models for allsat:        3.47

Time for post operator:                  0.225s
  Time for path formula creation:        0.208s
Time for strengthen operator:            0.023s
Time for prec operator:                  2.200s
  Time for abstraction:                  2.127s (Max:     0.036s, Count: 648)
    Boolean abstraction:                 0.768s
    Solving time:                        0.427s (Max:     0.014s)
    Model enumeration time:              0.078s
    Time for BDD construction:           0.101s (Max:     0.016s)
Time for merge operator:                 0.013s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.505s

Number of path formula cache hits:   2339 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.196s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3110
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2835 (count: 3522, min: 0, max: 1750, avg: 0.80)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.112s
Automaton transfers with branching:                0
Automaton transfer successors:                         2224 (count: 2224, min: 1, max: 1, avg: 1.00) [1 x 2224]

CPA algorithm statistics
------------------------
Number of iterations:            1864
Max size of waitlist:            5
Average size of waitlist:        1
Number of computed successors:   2151
Max successors for one state:    2
Number of times merged:          57
Number of times stopped:         69
Number of times breaked:         24

Total time for CPA algorithm:         3.127s (Max:     0.238s)
  Time for choose from waitlist:      0.019s
  Time for precision adjustment:      2.335s
  Time for transfer relation:         0.569s
  Time for merge operator:            0.028s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.049s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 516 (count: 24, min: 2, max: 43, avg: 21.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.495s
  Counterexample analysis:                             0.335s (Max:     0.029s, Calls: 24)
    Refinement sat check:                              0.152s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.054s
  ARG update:                                          0.031s

Length of refined path (in blocks):                     516 (count: 24, min: 2, max: 43, avg: 21.50)
Number of affected states:                              309 (count: 24, min: 1, max: 38, avg: 12.88)
Length (states) of path with itp 'true':                183 (count: 24, min: 0, max: 22, avg: 7.63)
Length (states) of path with itp non-trivial itp:       309 (count: 24, min: 1, max: 38, avg: 12.88)
Length (states) of path with itp 'false':                 0 (count: 24, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          48 (count: 24, min: 0, max: 4, avg: 2.00)
Equal non-trivial interpolants along paths:             237 (count: 24, min: 0, max: 34, avg: 9.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 241
Max. size of reached set after ref.:  142
Avg. size of reached set before ref.: 138.92
Avg. size of reached set after ref.:  68.08

Total time for CEGAR algorithm:       3.660s
Time for refinements:                 0.529s
Average time for refinement:          0.022s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          53
  Total lines:            53
  Line coverage:          1.000
  Visited conditions:     42
  Total conditions:       42
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     98
Number of CFA edges:             135
Number of relevant variables:    11
Number of functions:             2
Number of loops:                 2
Size of reached set:             203
  Number of reached locations:   78 (80%)
    Avg states per location:     2
    Max states per location:     19 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          202
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N86 (before line 51), Function main called from node N9, stack depth 1 [54c5a2ff], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.446s
  Time for loading CPAs:          0.694s
  Time for loading parser:        0.745s
  Time for CFA construction:      0.891s
    Time for parsing file(s):     0.355s
    Time for AST to CFA:          0.171s
    Time for CFA sanity check:    0.034s
    Time for post-processing:     0.172s
      Time for var class.:        0.074s
Time for Analysis:                3.661s
CPU time for analysis:            3.660s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.111s
Total CPU time for CPAchecker:    6.110s
Time for statistics:              0.066s

Time for Garbage Collector:       0.090s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     33MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8035MB (  7663 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
