scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/SpamAssassin-loop_true-unreach-call_false-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b51hmg7l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1494 (31% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  903 (60%)
  Because of loop head:            132 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         459 (31%)
  Times precision was empty:       41 (3%)
  Times precision was {false}:     254 (17%)
  Times result was cached:         558 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      641 (43%)
  Times result was 'false':        441 (30%)
Number of strengthen sat checks:   0
Number of coverage checks:         612
  BDD entailment checks:           502
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          20
Max number of predicates per location:    17
Avg number of predicates per location:    5
Total predicates per abstraction:         8451
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 9.44
Number of irrelevant predicates:          1083 (13%)
Number of preds handled by boolean abs:   4948 (59%)
  Total number of models for allsat:      4745
  Max number of models for allsat:        216
  Avg number of models for allsat:        7.40

Time for post operator:                  0.246s
  Time for path formula creation:        0.222s
Time for strengthen operator:            0.030s
Time for prec operator:                  4.489s
  Time for abstraction:                  4.367s (Max:     0.049s, Count: 1494)
    Boolean abstraction:                 1.912s
    Solving time:                        0.884s (Max:     0.016s)
    Model enumeration time:              0.332s
    Time for BDD construction:           0.317s (Max:     0.015s)
Time for merge operator:                 0.003s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     1.216s

Number of path formula cache hits:   5302 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.175s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               16424
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6391 (count: 8664, min: 0, max: 1912, avg: 0.74)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.143s
Automaton transfers with branching:                0
Automaton transfer successors:                         4767 (count: 4767, min: 1, max: 1, avg: 1.00) [1 x 4767]

CPA algorithm statistics
------------------------
Number of iterations:            3796
Max size of waitlist:            6
Average size of waitlist:        2
Number of computed successors:   4456
Max successors for one state:    2
Number of times merged:          55
Number of times stopped:         140
Number of times breaked:         38

Total time for CPA algorithm:         5.844s (Max:     0.392s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      4.727s
  Time for transfer relation:         0.794s
  Time for merge operator:            0.028s
  Time for stop operator:             0.068s
  Time for adding to reached set:     0.076s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                 680 (count: 38, min: 4, max: 35, avg: 17.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.612s
  Counterexample analysis:                             0.434s (Max:     0.020s, Calls: 38)
    Refinement sat check:                              0.176s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.036s
  ARG update:                                          0.042s

Length of refined path (in blocks):                     671 (count: 38, min: 4, max: 35, avg: 17.66)
Number of affected states:                              451 (count: 38, min: 1, max: 33, avg: 11.87)
Length (states) of path with itp 'true':                182 (count: 38, min: 0, max: 12, avg: 4.79)
Length (states) of path with itp non-trivial itp:       451 (count: 38, min: 1, max: 33, avg: 11.87)
Length (states) of path with itp 'false':                 2 (count: 38, min: 0, max: 1, avg: 0.05)
Different non-trivial interpolants along paths:          83 (count: 38, min: 0, max: 4, avg: 2.18)
Equal non-trivial interpolants along paths:             330 (count: 38, min: 0, max: 29, avg: 8.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 275
Max. size of reached set after ref.:  125
Avg. size of reached set before ref.: 144.39
Avg. size of reached set after ref.:  49.18

Total time for CEGAR algorithm:       6.551s
Time for refinements:                 0.698s
Average time for refinement:          0.018s
Max time for refinement:              0.097s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          40
  Total lines:            40
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     79
Number of CFA edges:             100
Number of relevant variables:    8
Number of functions:             2
Number of loops:                 2
Size of reached set:             258
  Number of reached locations:   48 (61%)
    Avg states per location:     5
    Max states per location:     30 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          245
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N26 (before line 21), Function main called from node N9, stack depth 1 [5677323c], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.321s
  Time for loading CPAs:          0.761s
  Time for loading parser:        0.648s
  Time for CFA construction:      0.766s
    Time for parsing file(s):     0.327s
    Time for AST to CFA:          0.124s
    Time for CFA sanity check:    0.025s
    Time for post-processing:     0.137s
      Time for var class.:        0.057s
Time for Analysis:                6.552s
CPU time for analysis:            6.560s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.879s
Total CPU time for CPAchecker:    8.880s
Time for statistics:              0.087s

Time for Garbage Collector:       0.104s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     36MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     28MB (    27 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8054MB (  7681 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
