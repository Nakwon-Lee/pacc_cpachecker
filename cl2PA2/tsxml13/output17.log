scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/SpamAssassin-loop_true-unreach-call_false-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wi_qw8pk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            961 (31% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  577 (60%)
  Because of loop head:            90 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         294 (31%)
  Times precision was empty:       34 (4%)
  Times precision was {false}:     189 (20%)
  Times result was cached:         251 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      487 (51%)
  Times result was 'false':        280 (29%)
Number of strengthen sat checks:   0
Number of coverage checks:         256
  BDD entailment checks:           190
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          17
Number of abstraction locations:          20
Max number of predicates per location:    17
Avg number of predicates per location:    5
Total predicates per abstraction:         5253
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 7.77
Number of irrelevant predicates:          667 (13%)
Number of preds handled by boolean abs:   3661 (70%)
  Total number of models for allsat:      4353
  Max number of models for allsat:        240
  Avg number of models for allsat:        8.94

Time for post operator:                  0.173s
  Time for path formula creation:        0.167s
Time for strengthen operator:            0.024s
Time for prec operator:                  3.801s
  Time for abstraction:                  3.692s (Max:     0.038s, Count: 961)
    Boolean abstraction:                 1.569s
    Solving time:                        0.813s (Max:     0.014s)
    Model enumeration time:              0.239s
    Time for BDD construction:           0.353s (Max:     0.017s)
Time for merge operator:                 0.002s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     1.052s

Number of path formula cache hits:   3437 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.142s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               17901
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7325 (count: 6954, min: 0, max: 2893, avg: 1.05)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.155s
Automaton transfers with branching:                0
Automaton transfer successors:                         3077 (count: 3077, min: 1, max: 1, avg: 1.00) [1 x 3077]

CPA algorithm statistics
------------------------
Number of iterations:            2417
Max size of waitlist:            5
Average size of waitlist:        2
Number of computed successors:   2824
Max successors for one state:    2
Number of times merged:          33
Number of times stopped:         76
Number of times breaked:         24

Total time for CPA algorithm:         4.906s (Max:     0.628s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      3.972s
  Time for transfer relation:         0.724s
  Time for merge operator:            0.018s
  Time for stop operator:             0.048s
  Time for adding to reached set:     0.051s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 411 (count: 24, min: 4, max: 35, avg: 17.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.448s
  Counterexample analysis:                             0.312s (Max:     0.025s, Calls: 24)
    Refinement sat check:                              0.115s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.051s
  ARG update:                                          0.026s

Length of refined path (in blocks):                     408 (count: 24, min: 4, max: 35, avg: 17.00)
Number of affected states:                              321 (count: 24, min: 1, max: 33, avg: 13.38)
Length (states) of path with itp 'true':                 63 (count: 24, min: 0, max: 12, avg: 2.63)
Length (states) of path with itp non-trivial itp:       321 (count: 24, min: 1, max: 33, avg: 13.38)
Length (states) of path with itp 'false':                 1 (count: 24, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:          49 (count: 24, min: 0, max: 4, avg: 2.04)
Equal non-trivial interpolants along paths:             248 (count: 24, min: 0, max: 29, avg: 10.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 259
Max. size of reached set after ref.:  209
Avg. size of reached set before ref.: 128.63
Avg. size of reached set after ref.:  36.50

Total time for CEGAR algorithm:       5.445s
Time for refinements:                 0.537s
Average time for refinement:          0.022s
Max time for refinement:              0.100s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          40
  Total lines:            40
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     79
Number of CFA edges:             100
Number of relevant variables:    8
Number of functions:             2
Number of loops:                 2
Size of reached set:             258
  Number of reached locations:   48 (61%)
    Avg states per location:     5
    Max states per location:     30 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          245
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N26 (before line 21), Function main called from node N9, stack depth 1 [5677323c], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.496s
  Time for loading CPAs:          0.761s
  Time for loading parser:        0.753s
  Time for CFA construction:      0.853s
    Time for parsing file(s):     0.367s
    Time for AST to CFA:          0.189s
    Time for CFA sanity check:    0.028s
    Time for post-processing:     0.128s
      Time for var class.:        0.045s
Time for Analysis:                5.445s
CPU time for analysis:            5.450s
Time for analyzing result:        0.008s
Total time for CPAchecker:        7.946s
Total CPU time for CPAchecker:    7.950s
Time for statistics:              0.081s

Time for Garbage Collector:       0.101s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    33 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     27MB (    26 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8046MB (  7674 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
