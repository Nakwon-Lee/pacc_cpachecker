scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/nested6_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1a3jnx61/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            735 (30% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  298 (41%)
  Because of loop head:            295 (40%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         142 (19%)
  Times precision was empty:       22 (3%)
  Times precision was {false}:     113 (15%)
  Times result was cached:         132 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      468 (64%)
  Times result was 'false':        193 (26%)
Number of strengthen sat checks:   0
Number of coverage checks:         1336
  BDD entailment checks:           1334
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          24
Number of abstraction locations:          8
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         4435
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 7.63
Number of irrelevant predicates:          497 (11%)
Number of preds handled by boolean abs:   3011 (68%)
  Total number of models for allsat:      1342
  Max number of models for allsat:        45
  Avg number of models for allsat:        2.87

Time for post operator:                  0.249s
  Time for path formula creation:        0.229s
Time for strengthen operator:            0.015s
Time for prec operator:                  3.045s
  Time for abstraction:                  2.982s (Max:     0.030s, Count: 735)
    Boolean abstraction:                 1.362s
    Solving time:                        0.801s (Max:     0.021s)
    Model enumeration time:              0.209s
    Time for BDD construction:           0.151s (Max:     0.013s)
Time for merge operator:                 0.004s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     1.010s

Number of path formula cache hits:   2180 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.204s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6737
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5963 (count: 6977, min: 0, max: 2651, avg: 0.85)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.112s
Automaton transfers with branching:                0
Automaton transfer successors:                         2426 (count: 2426, min: 1, max: 1, avg: 1.00) [1 x 2426]

CPA algorithm statistics
------------------------
Number of iterations:            1992
Max size of waitlist:            7
Average size of waitlist:        3
Number of computed successors:   2348
Max successors for one state:    2
Number of times merged:          1
Number of times stopped:         147
Number of times breaked:         15

Total time for CPA algorithm:         3.979s (Max:     0.649s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      3.162s
  Time for transfer relation:         0.611s
  Time for merge operator:            0.030s
  Time for stop operator:             0.054s
  Time for adding to reached set:     0.037s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 166 (count: 15, min: 4, max: 21, avg: 11.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.258s
  Counterexample analysis:                             0.124s (Max:     0.015s, Calls: 15)
    Refinement sat check:                              0.055s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.083s
  Precision update:                                    0.019s
  ARG update:                                          0.021s

Length of refined path (in blocks):                     153 (count: 15, min: 4, max: 18, avg: 10.20)
Number of affected states:                              109 (count: 15, min: 1, max: 16, avg: 7.27)
Length (states) of path with itp 'true':                 29 (count: 15, min: 0, max: 9, avg: 1.93)
Length (states) of path with itp non-trivial itp:       109 (count: 15, min: 1, max: 16, avg: 7.27)
Length (states) of path with itp 'false':                 5 (count: 15, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:          38 (count: 15, min: 0, max: 5, avg: 2.53)
Equal non-trivial interpolants along paths:              56 (count: 15, min: 0, max: 11, avg: 3.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 389
Max. size of reached set after ref.:  289
Avg. size of reached set before ref.: 178.33
Avg. size of reached set after ref.:  68.53

Total time for CEGAR algorithm:       4.288s
Time for refinements:                 0.299s
Average time for refinement:          0.019s
Max time for refinement:              0.103s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          18
  Total lines:            18
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     51
Number of CFA edges:             59
Number of relevant variables:    7
Number of functions:             2
Number of loops:                 3
Size of reached set:             362
  Number of reached locations:   37 (73%)
    Avg states per location:     9
    Max states per location:     25 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          326
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N40 (before line 22), Function main called from node N9, stack depth 1 [506ae4d4], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.469s
  Time for loading CPAs:          0.756s
  Time for loading parser:        0.692s
  Time for CFA construction:      0.888s
    Time for parsing file(s):     0.384s
    Time for AST to CFA:          0.191s
    Time for CFA sanity check:    0.025s
    Time for post-processing:     0.129s
      Time for var class.:        0.041s
Time for Analysis:                4.288s
CPU time for analysis:            4.280s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.762s
Total CPU time for CPAchecker:    6.750s
Time for statistics:              0.081s

Time for Garbage Collector:       0.097s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     33MB (    32 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     27MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8044MB (  7672 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
