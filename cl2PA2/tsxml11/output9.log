scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/nested6_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f4e5zpqx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            272 (31% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  108 (40%)
  Because of loop head:            105 (39%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         59 (22%)
  Times precision was empty:       13 (5%)
  Times precision was {false}:     56 (21%)
  Times result was cached:         11 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      192 (71%)
  Times result was 'false':        60 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         182
  BDD entailment checks:           180
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          16
Number of abstraction locations:          8
Max number of predicates per location:    12
Avg number of predicates per location:    5
Total predicates per abstraction:         1150
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 4.64
Number of irrelevant predicates:          110 (10%)
Number of preds handled by boolean abs:   1018 (89%)
  Total number of models for allsat:      465
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.42

Time for post operator:                  0.151s
  Time for path formula creation:        0.145s
Time for strengthen operator:            0.011s
Time for prec operator:                  1.307s
  Time for abstraction:                  1.274s (Max:     0.021s, Count: 272)
    Boolean abstraction:                 0.602s
    Solving time:                        0.333s (Max:     0.013s)
    Model enumeration time:              0.077s
    Time for BDD construction:           0.077s (Max:     0.008s)
Time for merge operator:                 0.004s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.410s

Number of path formula cache hits:   748 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.130s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1756
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 2442, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.039s
Automaton transfers with branching:                0
Automaton transfer successors:                          882 (count: 882, min: 1, max: 1, avg: 1.00) [1 x 882]

CPA algorithm statistics
------------------------
Number of iterations:            725
Max size of waitlist:            5
Average size of waitlist:        2
Number of computed successors:   850
Max successors for one state:    2
Number of times merged:          1
Number of times stopped:         40
Number of times breaked:         12

Total time for CPA algorithm:         1.856s (Max:     0.305s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      1.386s
  Time for transfer relation:         0.358s
  Time for merge operator:            0.011s
  Time for stop operator:             0.022s
  Time for adding to reached set:     0.021s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 119 (count: 12, min: 4, max: 17, avg: 9.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.241s
  Counterexample analysis:                             0.114s (Max:     0.021s, Calls: 12)
    Refinement sat check:                              0.038s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.087s
  Precision update:                                    0.019s
  ARG update:                                          0.009s

Length of refined path (in blocks):                     113 (count: 12, min: 4, max: 17, avg: 9.42)
Number of affected states:                               76 (count: 12, min: 2, max: 14, avg: 6.33)
Length (states) of path with itp 'true':                 25 (count: 12, min: 0, max: 9, avg: 2.08)
Length (states) of path with itp non-trivial itp:        76 (count: 12, min: 2, max: 14, avg: 6.33)
Length (states) of path with itp 'false':                 2 (count: 12, min: 0, max: 1, avg: 0.17)
Different non-trivial interpolants along paths:          27 (count: 12, min: 1, max: 5, avg: 2.25)
Equal non-trivial interpolants along paths:              37 (count: 12, min: 0, max: 10, avg: 3.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 185
Max. size of reached set after ref.:  130
Avg. size of reached set before ref.: 90.58
Avg. size of reached set after ref.:  36.67

Total time for CEGAR algorithm:       2.127s
Time for refinements:                 0.267s
Average time for refinement:          0.022s
Max time for refinement:              0.112s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          18
  Total lines:            18
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     51
Number of CFA edges:             59
Number of relevant variables:    7
Number of functions:             2
Number of loops:                 3
Size of reached set:             104
  Number of reached locations:   37 (73%)
    Avg states per location:     2
    Max states per location:     7 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          98
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N40 (before line 22), Function main called from node N9, stack depth 1 [506ae4d4], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.352s
  Time for loading CPAs:          0.757s
  Time for loading parser:        0.658s
  Time for CFA construction:      0.808s
    Time for parsing file(s):     0.363s
    Time for AST to CFA:          0.127s
    Time for CFA sanity check:    0.026s
    Time for post-processing:     0.139s
      Time for var class.:        0.038s
Time for Analysis:                2.127s
CPU time for analysis:            2.130s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.483s
Total CPU time for CPAchecker:    4.480s
Time for statistics:              0.082s

Time for Garbage Collector:       0.097s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     31MB (    30 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             30MB (    29 MiB) max;     24MB (    23 MiB) avg;     32MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        33MB (    32 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8025MB (  7653 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
