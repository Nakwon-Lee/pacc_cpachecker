scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/nested6_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_taqmk7cr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            917 (30% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  359 (39%)
  Because of loop head:            386 (42%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         172 (19%)
  Times precision was empty:       17 (2%)
  Times precision was {false}:     155 (17%)
  Times result was cached:         51 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      694 (76%)
  Times result was 'false':        232 (25%)
Number of strengthen sat checks:   0
Number of coverage checks:         1863
  BDD entailment checks:           1861
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          30
Number of abstraction locations:          8
Max number of predicates per location:    17
Avg number of predicates per location:    9
Total predicates per abstraction:         6359
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 7.49
Number of irrelevant predicates:          593 (9%)
Number of preds handled by boolean abs:   5583 (88%)
  Total number of models for allsat:      1585
  Max number of models for allsat:        15
  Avg number of models for allsat:        2.28

Time for post operator:                  0.418s
  Time for path formula creation:        0.407s
Time for strengthen operator:            0.025s
Time for prec operator:                  4.129s
  Time for abstraction:                  4.019s (Max:     0.029s, Count: 917)
    Boolean abstraction:                 1.926s
    Solving time:                        1.183s (Max:     0.014s)
    Model enumeration time:              0.280s
    Time for BDD construction:           0.158s (Max:     0.012s)
Time for merge operator:                 0.003s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     1.463s

Number of path formula cache hits:   2588 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.368s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8813
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9791 (count: 11341, min: 0, max: 2927, avg: 0.86)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.102s
Automaton transfers with branching:                0
Automaton transfer successors:                         3040 (count: 3040, min: 1, max: 1, avg: 1.00) [1 x 3040]

CPA algorithm statistics
------------------------
Number of iterations:            2512
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   2943
Max successors for one state:    2
Number of times merged:          1
Number of times stopped:         150
Number of times breaked:         27

Total time for CPA algorithm:         5.386s (Max:     0.488s)
  Time for choose from waitlist:      0.028s
  Time for precision adjustment:      4.292s
  Time for transfer relation:         0.869s
  Time for merge operator:            0.038s
  Time for stop operator:             0.051s
  Time for adding to reached set:     0.025s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 400 (count: 27, min: 4, max: 28, avg: 14.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.432s
  Counterexample analysis:                             0.306s (Max:     0.068s, Calls: 27)
    Refinement sat check:                              0.128s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.039s
  ARG update:                                          0.040s

Length of refined path (in blocks):                     382 (count: 27, min: 4, max: 28, avg: 14.15)
Number of affected states:                              217 (count: 27, min: 1, max: 21, avg: 8.04)
Length (states) of path with itp 'true':                138 (count: 27, min: 0, max: 19, avg: 5.11)
Length (states) of path with itp non-trivial itp:       217 (count: 27, min: 1, max: 21, avg: 8.04)
Length (states) of path with itp 'false':                 6 (count: 27, min: 0, max: 1, avg: 0.22)
Different non-trivial interpolants along paths:          78 (count: 27, min: 0, max: 8, avg: 2.89)
Equal non-trivial interpolants along paths:             112 (count: 27, min: 0, max: 12, avg: 4.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 440
Max. size of reached set after ref.:  361
Avg. size of reached set before ref.: 198.41
Avg. size of reached set after ref.:  117.93

Total time for CEGAR algorithm:       5.861s
Time for refinements:                 0.468s
Average time for refinement:          0.017s
Max time for refinement:              0.118s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          18
  Total lines:            18
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     51
Number of CFA edges:             59
Number of relevant variables:    7
Number of functions:             2
Number of loops:                 3
Size of reached set:             389
  Number of reached locations:   37 (73%)
    Avg states per location:     10
    Max states per location:     25 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          347
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N40 (before line 22), Function main called from node N9, stack depth 1 [506ae4d4], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.334s
  Time for loading CPAs:          0.689s
  Time for loading parser:        0.706s
  Time for CFA construction:      0.822s
    Time for parsing file(s):     0.312s
    Time for AST to CFA:          0.191s
    Time for CFA sanity check:    0.035s
    Time for post-processing:     0.129s
      Time for var class.:        0.038s
Time for Analysis:                5.861s
CPU time for analysis:            5.850s
Time for analyzing result:        0.000s
Total time for CPAchecker:        8.199s
Total CPU time for CPAchecker:    8.190s
Time for statistics:              0.056s

Time for Garbage Collector:       0.104s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    34 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     28MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
