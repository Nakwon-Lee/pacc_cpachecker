scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/nested6_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tkhwpbur/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1122 (31% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  456 (41%)
  Because of loop head:            441 (39%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         225 (20%)
  Times precision was empty:       15 (1%)
  Times precision was {false}:     211 (19%)
  Times result was cached:         122 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      774 (69%)
  Times result was 'false':        277 (25%)
Number of strengthen sat checks:   0
Number of coverage checks:         2008
  BDD entailment checks:           2006
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          35
Number of abstraction locations:          8
Max number of predicates per location:    22
Avg number of predicates per location:    11
Total predicates per abstraction:         10201
Max number of predicates per abstraction: 22
Avg number of predicates per abstraction: 10.36
Number of irrelevant predicates:          511 (5%)
Number of preds handled by boolean abs:   8545 (84%)
  Total number of models for allsat:      2137
  Max number of models for allsat:        40
  Avg number of models for allsat:        2.76

Time for post operator:                  0.345s
  Time for path formula creation:        0.323s
Time for strengthen operator:            0.021s
Time for prec operator:                  5.316s
  Time for abstraction:                  5.256s (Max:     0.021s, Count: 1122)
    Boolean abstraction:                 2.606s
    Solving time:                        1.589s (Max:     0.014s)
    Model enumeration time:              0.360s
    Time for BDD construction:           0.175s (Max:     0.009s)
Time for merge operator:                 0.003s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     1.949s

Number of path formula cache hits:   3278 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.279s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               19777
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20178 (count: 15840, min: 0, max: 4047, avg: 1.27)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.098s
Automaton transfers with branching:                0
Automaton transfer successors:                         3646 (count: 3646, min: 1, max: 1, avg: 1.00) [1 x 3646]

CPA algorithm statistics
------------------------
Number of iterations:            3022
Max size of waitlist:            7
Average size of waitlist:        3
Number of computed successors:   3543
Max successors for one state:    2
Number of times merged:          1
Number of times stopped:         158
Number of times breaked:         30

Total time for CPA algorithm:         6.529s (Max:     0.700s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      5.499s
  Time for transfer relation:         0.797s
  Time for merge operator:            0.019s
  Time for stop operator:             0.075s
  Time for adding to reached set:     0.044s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 558 (count: 30, min: 4, max: 29, avg: 18.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.542s
  Counterexample analysis:                             0.339s (Max:     0.023s, Calls: 30)
    Refinement sat check:                              0.146s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.103s
  Precision update:                                    0.034s
  ARG update:                                          0.034s

Length of refined path (in blocks):                     532 (count: 30, min: 4, max: 29, avg: 17.73)
Number of affected states:                              297 (count: 30, min: 2, max: 27, avg: 9.90)
Length (states) of path with itp 'true':                205 (count: 30, min: 0, max: 19, avg: 6.83)
Length (states) of path with itp non-trivial itp:       297 (count: 30, min: 2, max: 27, avg: 9.90)
Length (states) of path with itp 'false':                 7 (count: 30, min: 0, max: 1, avg: 0.23)
Different non-trivial interpolants along paths:          95 (count: 30, min: 1, max: 8, avg: 3.17)
Equal non-trivial interpolants along paths:             172 (count: 30, min: 0, max: 21, avg: 5.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 383
Max. size of reached set after ref.:  259
Avg. size of reached set before ref.: 179.80
Avg. size of reached set after ref.:  86.67

Total time for CEGAR algorithm:       7.123s
Time for refinements:                 0.582s
Average time for refinement:          0.019s
Max time for refinement:              0.108s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          18
  Total lines:            18
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     51
Number of CFA edges:             59
Number of relevant variables:    7
Number of functions:             2
Number of loops:                 3
Size of reached set:             315
  Number of reached locations:   37 (73%)
    Avg states per location:     8
    Max states per location:     24 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          280
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N40 (before line 22), Function main called from node N9, stack depth 1 [506ae4d4], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.296s
  Time for loading CPAs:          0.721s
  Time for loading parser:        0.665s
  Time for CFA construction:      0.793s
    Time for parsing file(s):     0.367s
    Time for AST to CFA:          0.120s
    Time for CFA sanity check:    0.023s
    Time for post-processing:     0.138s
      Time for var class.:        0.057s
Time for Analysis:                7.123s
CPU time for analysis:            7.130s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.423s
Total CPU time for CPAchecker:    9.420s
Time for statistics:              0.080s

Time for Garbage Collector:       0.115s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    56 MiB) max;     36MB (    34 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     28MB (    27 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8056MB (  7683 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
