scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zp6gth7b/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            489 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  304 (62%)
  Because of loop head:            26 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         159 (33%)
  Times precision was empty:       24 (5%)
  Times precision was {false}:     101 (21%)
  Times result was cached:         119 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      245 (50%)
  Times result was 'false':        142 (29%)
Number of strengthen sat checks:   0
Number of coverage checks:         126
  BDD entailment checks:           70
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       13
Number of predicates discovered:          18
Number of abstraction locations:          10
Max number of predicates per location:    16
Avg number of predicates per location:    7
Total predicates per abstraction:         2231
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 6.45
Number of irrelevant predicates:          396 (18%)
Number of preds handled by boolean abs:   1626 (73%)
  Total number of models for allsat:      926
  Max number of models for allsat:        54
  Avg number of models for allsat:        3.78

Time for post operator:                  0.168s
  Time for path formula creation:        0.162s
Time for strengthen operator:            0.020s
Time for prec operator:                  1.818s
  Time for abstraction:                  1.774s (Max:     0.023s, Count: 489)
    Boolean abstraction:                 0.716s
    Solving time:                        0.422s (Max:     0.013s)
    Model enumeration time:              0.061s
    Time for BDD construction:           0.091s (Max:     0.009s)
Time for merge operator:                 0.003s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     0.483s

Number of path formula cache hits:   1780 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.143s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4282
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1499 (count: 3375, min: 0, max: 1499, avg: 0.44)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.083s
Automaton transfers with branching:                0
Automaton transfer successors:                         1704 (count: 1704, min: 1, max: 1, avg: 1.00) [1 x 1704]

CPA algorithm statistics
------------------------
Number of iterations:            1332
Max size of waitlist:            4
Average size of waitlist:        2
Number of computed successors:   1537
Max successors for one state:    2
Number of times merged:          28
Number of times stopped:         32
Number of times breaked:         17

Total time for CPA algorithm:         2.509s (Max:     0.341s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      1.926s
  Time for transfer relation:         0.463s
  Time for merge operator:            0.014s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.025s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 210 (count: 17, min: 3, max: 27, avg: 12.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.345s
  Counterexample analysis:                             0.207s (Max:     0.024s, Calls: 17)
    Refinement sat check:                              0.079s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.018s
  ARG update:                                          0.028s

Length of refined path (in blocks):                     210 (count: 17, min: 3, max: 27, avg: 12.35)
Number of affected states:                              189 (count: 17, min: 2, max: 26, avg: 11.12)
Length (states) of path with itp 'true':                  4 (count: 17, min: 0, max: 1, avg: 0.24)
Length (states) of path with itp non-trivial itp:       189 (count: 17, min: 2, max: 26, avg: 11.12)
Length (states) of path with itp 'false':                 0 (count: 17, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          43 (count: 17, min: 1, max: 6, avg: 2.53)
Equal non-trivial interpolants along paths:             129 (count: 17, min: 0, max: 19, avg: 7.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 191
Max. size of reached set after ref.:  52
Avg. size of reached set before ref.: 94.71
Avg. size of reached set after ref.:  21.41

Total time for CEGAR algorithm:       2.877s
Time for refinements:                 0.367s
Average time for refinement:          0.021s
Max time for refinement:              0.095s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          31
  Total lines:            31
  Line coverage:          1.000
  Visited conditions:     12
  Total conditions:       12
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     64
Number of CFA edges:             76
Number of relevant variables:    8
Number of functions:             2
Number of loops:                 1
Size of reached set:             118
  Number of reached locations:   39 (61%)
    Avg states per location:     3
    Max states per location:     12 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          115
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N33 (before lines 23-34), Function main called from node N9, stack depth 1 [576d5deb], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.467s
  Time for loading CPAs:          0.736s
  Time for loading parser:        0.713s
  Time for CFA construction:      0.903s
    Time for parsing file(s):     0.413s
    Time for AST to CFA:          0.180s
    Time for CFA sanity check:    0.023s
    Time for post-processing:     0.145s
      Time for var class.:        0.037s
Time for Analysis:                2.877s
CPU time for analysis:            2.870s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.350s
Total CPU time for CPAchecker:    5.330s
Time for statistics:              0.057s

Time for Garbage Collector:       0.097s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    53 MiB) max;     31MB (    29 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             31MB (    30 MiB) max;     25MB (    24 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    33 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8032MB (  7660 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
