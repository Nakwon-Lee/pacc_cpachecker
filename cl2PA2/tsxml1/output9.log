scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gt427hrb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            406 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  253 (62%)
  Because of loop head:            23 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         130 (32%)
  Times precision was empty:       21 (5%)
  Times precision was {false}:     98 (24%)
  Times result was cached:         68 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      219 (54%)
  Times result was 'false':        116 (29%)
Number of strengthen sat checks:   0
Number of coverage checks:         97
  BDD entailment checks:           47
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       13
Number of predicates discovered:          18
Number of abstraction locations:          10
Max number of predicates per location:    16
Avg number of predicates per location:    7
Total predicates per abstraction:         1954
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 6.16
Number of irrelevant predicates:          290 (15%)
Number of preds handled by boolean abs:   1545 (79%)
  Total number of models for allsat:      788
  Max number of models for allsat:        54
  Avg number of models for allsat:        3.60

Time for post operator:                  0.170s
  Time for path formula creation:        0.163s
Time for strengthen operator:            0.013s
Time for prec operator:                  2.082s
  Time for abstraction:                  2.024s (Max:     0.031s, Count: 406)
    Boolean abstraction:                 0.706s
    Solving time:                        0.346s (Max:     0.014s)
    Model enumeration time:              0.057s
    Time for BDD construction:           0.135s (Max:     0.011s)
Time for merge operator:                 0.003s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     0.403s

Number of path formula cache hits:   1411 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.140s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4068
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2055 (count: 3171, min: 0, max: 2055, avg: 0.65)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.108s
Automaton transfers with branching:                0
Automaton transfer successors:                         1392 (count: 1392, min: 1, max: 1, avg: 1.00) [1 x 1392]

CPA algorithm statistics
------------------------
Number of iterations:            1083
Max size of waitlist:            4
Average size of waitlist:        2
Number of computed successors:   1260
Max successors for one state:    2
Number of times merged:          25
Number of times stopped:         32
Number of times breaked:         14

Total time for CPA algorithm:         2.894s (Max:     0.448s)
  Time for choose from waitlist:      0.019s
  Time for precision adjustment:      2.206s
  Time for transfer relation:         0.532s
  Time for merge operator:            0.015s
  Time for stop operator:             0.012s
  Time for adding to reached set:     0.039s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 177 (count: 14, min: 3, max: 27, avg: 12.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.335s
  Counterexample analysis:                             0.185s (Max:     0.022s, Calls: 14)
    Refinement sat check:                              0.071s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.026s
  ARG update:                                          0.018s

Length of refined path (in blocks):                     177 (count: 14, min: 3, max: 27, avg: 12.64)
Number of affected states:                              161 (count: 14, min: 2, max: 26, avg: 11.50)
Length (states) of path with itp 'true':                  2 (count: 14, min: 0, max: 1, avg: 0.14)
Length (states) of path with itp non-trivial itp:       161 (count: 14, min: 2, max: 26, avg: 11.50)
Length (states) of path with itp 'false':                 0 (count: 14, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          36 (count: 14, min: 1, max: 6, avg: 2.57)
Equal non-trivial interpolants along paths:             111 (count: 14, min: 0, max: 19, avg: 7.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 165
Max. size of reached set after ref.:  49
Avg. size of reached set before ref.: 88.07
Avg. size of reached set after ref.:  17.00

Total time for CEGAR algorithm:       3.264s
Time for refinements:                 0.365s
Average time for refinement:          0.026s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          31
  Total lines:            31
  Line coverage:          1.000
  Visited conditions:     12
  Total conditions:       12
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     64
Number of CFA edges:             76
Number of relevant variables:    8
Number of functions:             2
Number of loops:                 1
Size of reached set:             118
  Number of reached locations:   39 (61%)
    Avg states per location:     3
    Max states per location:     12 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          115
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N33 (before lines 23-34), Function main called from node N9, stack depth 1 [576d5deb], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.462s
  Time for loading CPAs:          0.756s
  Time for loading parser:        0.723s
  Time for CFA construction:      0.866s
    Time for parsing file(s):     0.362s
    Time for AST to CFA:          0.165s
    Time for CFA sanity check:    0.045s
    Time for post-processing:     0.147s
      Time for var class.:        0.037s
Time for Analysis:                3.264s
CPU time for analysis:            3.260s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.731s
Total CPU time for CPAchecker:    5.730s
Time for statistics:              0.078s

Time for Garbage Collector:       0.085s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     32MB (    30 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             31MB (    30 MiB) max;     25MB (    24 MiB) avg;     33MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    32 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8034MB (  7661 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
