scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e42ijz_a/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2491 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2085 (84%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         406 (16%)
  Times precision was empty:       751 (30%)
  Times precision was {false}:     188 (8%)
  Times result was cached:         1142 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      410 (16%)
  Times result was 'false':        801 (32%)
Number of strengthen sat checks:   0
Number of coverage checks:         26342
  BDD entailment checks:           394
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       189
Number of predicates discovered:          8
Number of abstraction locations:          8
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         4992
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 8.35
Number of irrelevant predicates:          1336 (27%)
Number of preds handled by boolean abs:   1383 (28%)
  Total number of models for allsat:      384
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.94

Time for post operator:                  5.285s
  Time for path formula creation:        5.026s
Time for strengthen operator:            0.186s
Time for prec operator:                  8.083s
  Time for abstraction:                  7.664s (Max:     0.242s, Count: 2491)
    Boolean abstraction:                 3.149s
    Solving time:                        3.390s (Max:     0.175s)
    Model enumeration time:              0.390s
    Time for BDD construction:           0.074s (Max:     0.012s)
Time for merge operator:                 1.939s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     3.780s

Number of path formula cache hits:   135439 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.797s

Total number of created targets for pointer analysis: 7702
   Number of created targets for uf: *(struct_backlight_device)* is 14
   Number of created targets for uf: *(struct_dentry)* is 10
   Number of created targets for uf: *signed_int is 307
   Number of created targets for uf: *unsigned_long_long_int is 158
   Number of created targets for uf: *(struct_platform_device)* is 6
   Number of created targets for uf: *(struct_rfkill)* is 40
   Number of created targets for uf: *unsigned_long_int is 159


Number of BDD nodes:                               436
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1094 (count: 4986, min: 0, max: 75, avg: 0.22)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.544s
  Time for transition matches:                         0.204s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                       137115 (count: 137115, min: 1, max: 1, avg: 1.00) [1 x 137115]

CPA algorithm statistics
------------------------
Number of iterations:            80141
Max size of waitlist:            98
Average size of waitlist:        40
Number of computed successors:   95692
Max successors for one state:    2
Number of times merged:          12974
Number of times stopped:         13150
Number of times breaked:         28

Total time for CPA algorithm:        22.008s (Max:     2.504s)
  Time for choose from waitlist:      0.196s
  Time for precision adjustment:      9.191s
  Time for transfer relation:         8.477s
  Time for merge operator:            2.464s
  Time for stop operator:             0.326s
  Time for adding to reached set:     0.350s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 144 (count: 28, min: 2, max: 9, avg: 5.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.508s
  Counterexample analysis:                             1.998s (Max:     0.163s, Calls: 28)
    Refinement sat check:                              1.775s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.040s
  ARG update:                                          0.356s

Length of refined path (in blocks):                     129 (count: 28, min: 2, max: 7, avg: 4.61)
Number of affected states:                              101 (count: 28, min: 1, max: 6, avg: 3.61)
Length (states) of path with itp 'true':                  0 (count: 28, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       101 (count: 28, min: 1, max: 6, avg: 3.61)
Length (states) of path with itp 'false':                 6 (count: 28, min: 0, max: 1, avg: 0.21)
Different non-trivial interpolants along paths:           2 (count: 28, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:              71 (count: 28, min: 0, max: 5, avg: 2.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 4923
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 2903.86
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      24.831s
Time for refinements:                 2.823s
Average time for refinement:          0.100s
Max time for refinement:              0.218s

Code Coverage
-----------------------------
  Function coverage:      0.290
  Visited lines:          1248
  Total lines:            2094
  Line coverage:          0.596
  Visited conditions:     256
  Total conditions:       632
  Condition coverage:     0.405

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             657
  Number of reached locations:   563 (20%)
    Avg states per location:     1
    Max states per location:     7 (at node N88)
  Number of reached functions:   29 (29%)
  Number of partitions:          657
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          5.379s
  Time for loading CPAs:          1.064s
  Time for loading parser:        0.701s
  Time for CFA construction:      3.491s
    Time for parsing file(s):     0.964s
    Time for AST to CFA:          1.244s
    Time for CFA sanity check:    0.232s
    Time for post-processing:     0.866s
      Time for var class.:        0.374s
Time for Analysis:               24.832s
CPU time for analysis:           24.820s
Total time for CPAchecker:       30.219s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.086s

Time for Garbage Collector:       0.655s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     47MB (    45 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8120MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
