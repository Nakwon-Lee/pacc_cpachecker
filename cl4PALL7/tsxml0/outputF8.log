scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ivjtf3jq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            129662 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            111101 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18561 (14%)
  Times precision was empty:       12854 (10%)
  Times precision was {false}:     3500 (3%)
  Times result was cached:         103748 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9560 (7%)
  Times result was 'false':        43386 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         926293
  BDD entailment checks:           204013
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          15
Number of abstraction locations:          9
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         713310
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 54.62
Number of irrelevant predicates:          406633 (57%)
Number of preds handled by boolean abs:   32466 (5%)
  Total number of models for allsat:      7077
  Max number of models for allsat:        64
  Avg number of models for allsat:        0.74

Time for post operator:                 49.586s
  Time for path formula creation:       46.836s
Time for strengthen operator:            4.085s
Time for prec operator:                222.067s
  Time for abstraction:                217.266s (Max:     1.572s, Count: 129662)
    Boolean abstraction:                78.302s
    Solving time:                       73.263s (Max:     0.189s)
    Model enumeration time:             17.407s
    Time for BDD construction:           0.361s (Max:     0.012s)
Time for merge operator:                15.633s
Time for coverage check:                 0.320s
  Time for BDD entailment checks:        0.237s
Total time for SMT solver (w/o itp):    90.670s

Number of path formula cache hits:   5079806 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.279s

Total number of created targets for pointer analysis: 236285
   Number of created targets for uf: *(struct_backlight_device)* is 532
   Number of created targets for uf: *(struct_dentry)* is 62
   Number of created targets for uf: *signed_int is 26644
   Number of created targets for uf: *unsigned_long_long_int is 21
   Number of created targets for uf: *(struct_platform_device)* is 26
   Number of created targets for uf: *(struct_rfkill)* is 94
   Number of created targets for uf: *unsigned_long_int is 159


Number of BDD nodes:                               8984
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17576 (count: 299738, min: 0, max: 241, avg: 0.06)
Time for BDD node cleanup:                             0.064s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.946s
  Time for transition matches:                         3.968s
  Time for transition assertions:                      0.011s
  Time for transition actions:                         0.045s
Automaton transfers with branching:                0
Automaton transfer successors:                      4902507 (count: 4902507, min: 1, max: 1, avg: 1.00) [1 x 4902507]

CPA algorithm statistics
------------------------
Number of iterations:            2958844
Max size of waitlist:            48
Average size of waitlist:        19
Number of computed successors:   3423583
Max successors for one state:    2
Number of times merged:          361140
Number of times stopped:         416768
Number of times breaked:         2648

Total time for CPA algorithm:       386.764s (Max:     6.250s)
  Time for choose from waitlist:      1.201s
  Time for precision adjustment:    246.291s
  Time for transfer relation:        98.713s
  Time for merge operator:           21.003s
  Time for stop operator:             4.370s
  Time for adding to reached set:     6.439s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2648
Avg. length of target path (in blocks):               29904 (count: 2648, min: 2, max: 14, avg: 11.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 239.298s
  Counterexample analysis:                           228.461s (Max:     0.202s, Calls: 2648)
    Refinement sat check:                            189.349s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.045s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.219s
  Precision update:                                    0.351s
  ARG update:                                          7.604s

Length of refined path (in blocks):                   29864 (count: 2647, min: 2, max: 14, avg: 11.28)
Number of affected states:                             2761 (count: 2647, min: 1, max: 7, avg: 1.04)
Length (states) of path with itp 'true':              24456 (count: 2647, min: 0, max: 12, avg: 9.24)
Length (states) of path with itp non-trivial itp:      2761 (count: 2647, min: 1, max: 7, avg: 1.04)
Length (states) of path with itp 'false':                11 (count: 2647, min: 0, max: 1, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2647, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             114 (count: 2647, min: 0, max: 6, avg: 0.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2648
Number of successful refinements:     2647
Number of failed refinements:         0
Max. size of reached set before ref.: 140011
Max. size of reached set after ref.:  137370
Avg. size of reached set before ref.: 56171.18
Avg. size of reached set after ref.:  55072.85

Total time for CEGAR algorithm:     894.394s
Time for refinements:               382.351s
Average time for refinement:          0.144s
Max time for refinement:              1.109s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1730
  Total lines:            2094
  Line coverage:          0.826
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             68016
  Number of reached locations:   1102 (39%)
    Avg states per location:     61
    Max states per location:     1320 (at node N88)
  Number of reached functions:   56 (56%)
  Number of partitions:          67992
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [7004e3d], stack [main]])
  Number of target states:       1
  Size of final wait list        14

Time for analysis setup:          5.852s
  Time for loading CPAs:          1.061s
  Time for loading parser:        0.864s
  Time for CFA construction:      3.803s
    Time for parsing file(s):     1.153s
    Time for AST to CFA:          1.277s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.913s
      Time for var class.:        0.428s
Time for Analysis:              894.394s
CPU time for analysis:          894.330s
Total time for CPAchecker:      900.253s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.894s

Time for Garbage Collector:      39.228s (in 1200 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                484MB (   462 MiB) max;    240MB (   229 MiB) avg;    491MB (   468 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           492MB (   469 MiB) max;    356MB (   340 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8540MB (  8145 MiB) max;   8341MB (  7955 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
