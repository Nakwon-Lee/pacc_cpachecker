scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0sn0kg8a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            110690 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            95399 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15291 (14%)
  Times precision was empty:       12462 (11%)
  Times precision was {false}:     2893 (3%)
  Times result was cached:         86164 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9171 (8%)
  Times result was 'false':        36158 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         727074
  BDD entailment checks:           109386
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          15
Number of abstraction locations:          10
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         608003
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 50.40
Number of irrelevant predicates:          322936 (53%)
Number of preds handled by boolean abs:   31245 (5%)
  Total number of models for allsat:      7178
  Max number of models for allsat:        128
  Avg number of models for allsat:        0.78

Time for post operator:                 46.532s
  Time for path formula creation:       44.283s
Time for strengthen operator:            3.426s
Time for prec operator:                211.421s
  Time for abstraction:                207.030s (Max:     3.485s, Count: 110690)
    Boolean abstraction:                81.780s
    Solving time:                       75.337s (Max:     0.134s)
    Model enumeration time:             16.979s
    Time for BDD construction:           0.358s (Max:     0.016s)
Time for merge operator:                13.935s
Time for coverage check:                 0.293s
  Time for BDD entailment checks:        0.224s
Total time for SMT solver (w/o itp):    92.316s

Number of path formula cache hits:   4311459 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.485s

Total number of created targets for pointer analysis: 222250
   Number of created targets for uf: *(struct_backlight_device)* is 486
   Number of created targets for uf: *(struct_dentry)* is 55
   Number of created targets for uf: *signed_int is 15
   Number of created targets for uf: *unsigned_long_long_int is 15
   Number of created targets for uf: *(struct_platform_device)* is 23
   Number of created targets for uf: *(struct_rfkill)* is 85
   Number of created targets for uf: *unsigned_long_int is 511


Number of BDD nodes:                               6778
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17450 (count: 199181, min: 0, max: 224, avg: 0.09)
Time for BDD node cleanup:                             0.046s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.212s
  Time for transition matches:                         3.245s
  Time for transition assertions:                      0.011s
  Time for transition actions:                         0.049s
Automaton transfers with branching:                0
Automaton transfer successors:                      4177329 (count: 4177329, min: 1, max: 1, avg: 1.00) [1 x 4177329]

CPA algorithm statistics
------------------------
Number of iterations:            2521512
Max size of waitlist:            47
Average size of waitlist:        16
Number of computed successors:   2918460
Max successors for one state:    2
Number of times merged:          308844
Number of times stopped:         356800
Number of times breaked:         2160

Total time for CPA algorithm:       358.738s (Max:     7.442s)
  Time for choose from waitlist:      1.134s
  Time for precision adjustment:    231.928s
  Time for transfer relation:        88.908s
  Time for merge operator:           18.792s
  Time for stop operator:             3.712s
  Time for adding to reached set:     6.553s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2160
Avg. length of target path (in blocks):               24259 (count: 2160, min: 2, max: 14, avg: 11.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 201.579s
  Counterexample analysis:                           191.798s (Max:     0.211s, Calls: 2160)
    Refinement sat check:                            158.299s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.040s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.218s
  Precision update:                                    0.407s
  ARG update:                                          6.804s

Length of refined path (in blocks):                   24227 (count: 2160, min: 2, max: 14, avg: 11.22)
Number of affected states:                             2338 (count: 2160, min: 1, max: 8, avg: 1.08)
Length (states) of path with itp 'true':              19729 (count: 2160, min: 0, max: 12, avg: 9.13)
Length (states) of path with itp non-trivial itp:      2338 (count: 2160, min: 1, max: 8, avg: 1.08)
Length (states) of path with itp 'false':                11 (count: 2160, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           1 (count: 2160, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:             177 (count: 2160, min: 0, max: 7, avg: 0.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2160
Number of successful refinements:     2160
Number of failed refinements:         0
Max. size of reached set before ref.: 105652
Max. size of reached set after ref.:  105601
Avg. size of reached set before ref.: 43132.32
Avg. size of reached set after ref.:  42012.05

Total time for CEGAR algorithm:     736.821s
Time for refinements:               294.091s
Average time for refinement:          0.136s
Max time for refinement:              0.565s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1730
  Total lines:            2094
  Line coverage:          0.826
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             105723
  Number of reached locations:   1101 (39%)
    Avg states per location:     96
    Max states per location:     2094 (at node N88)
  Number of reached functions:   56 (56%)
  Number of partitions:          105713
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.912s
  Time for loading CPAs:          0.988s
  Time for loading parser:        0.791s
  Time for CFA construction:      3.946s
    Time for parsing file(s):     1.165s
    Time for AST to CFA:          1.257s
    Time for CFA sanity check:    0.247s
    Time for post-processing:     1.096s
      Time for var class.:        0.432s
Time for Analysis:              736.821s
CPU time for analysis:          736.770s
Time for analyzing result:        0.090s
Total time for CPAchecker:      742.742s
Total CPU time for CPAchecker:  742.680s
Time for statistics:              1.155s

Time for Garbage Collector:      31.537s (in 1045 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                376MB (   358 MiB) max;    205MB (   196 MiB) avg;    385MB (   367 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           385MB (   367 MiB) max;    307MB (   293 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8480MB (  8088 MiB) max;   8305MB (  7920 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
