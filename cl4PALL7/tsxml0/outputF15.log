scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o_n65mgj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14540 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            12585 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1955 (13%)
  Times precision was empty:       1516 (10%)
  Times precision was {false}:     344 (2%)
  Times result was cached:         11137 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1543 (11%)
  Times result was 'false':        4573 (31%)
Number of strengthen sat checks:   0
Number of coverage checks:         105574
  BDD entailment checks:           8136
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          9
Number of abstraction locations:          10
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         61330
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 32.50
Number of irrelevant predicates:          6302 (10%)
Number of preds handled by boolean abs:   6708 (11%)
  Total number of models for allsat:      1186
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.77

Time for post operator:                 10.565s
  Time for path formula creation:       10.033s
Time for strengthen operator:            0.616s
Time for prec operator:                 29.801s
  Time for abstraction:                 29.004s (Max:     0.252s, Count: 14540)
    Boolean abstraction:                10.282s
    Solving time:                       10.385s (Max:     0.118s)
    Model enumeration time:              0.696s
    Time for BDD construction:           0.143s (Max:     0.012s)
Time for merge operator:                 4.038s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):    11.081s

Number of path formula cache hits:   605775 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.281s

Total number of created targets for pointer analysis: 51053
   Number of created targets for uf: *(struct_backlight_device)* is 191
   Number of created targets for uf: *(struct_dentry)* is 26
   Number of created targets for uf: *signed_int is 4802
   Number of created targets for uf: *unsigned_long_long_int is 3529
   Number of created targets for uf: *(struct_platform_device)* is 11
   Number of created targets for uf: *(struct_rfkill)* is 31
   Number of created targets for uf: *unsigned_long_int is 1027


Number of BDD nodes:                               456
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3031 (count: 21986, min: 0, max: 111, avg: 0.14)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.267s
  Time for transition matches:                         0.547s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.028s
Automaton transfers with branching:                0
Automaton transfer successors:                       609489 (count: 609489, min: 1, max: 1, avg: 1.00) [1 x 609489]

CPA algorithm statistics
------------------------
Number of iterations:            363847
Max size of waitlist:            107
Average size of waitlist:        46
Number of computed successors:   424850
Max successors for one state:    2
Number of times merged:          48719
Number of times stopped:         53960
Number of times breaked:         221

Total time for CPA algorithm:        61.130s (Max:     9.773s)
  Time for choose from waitlist:      0.322s
  Time for precision adjustment:     33.382s
  Time for transfer relation:        18.701s
  Time for merge operator:            5.038s
  Time for stop operator:             0.665s
  Time for adding to reached set:     1.075s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   221
Avg. length of target path (in blocks):                2136 (count: 221, min: 2, max: 16, avg: 9.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.628s
  Counterexample analysis:                            18.486s (Max:     0.221s, Calls: 221)
    Refinement sat check:                             16.201s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.080s
  ARG update:                                          0.786s

Length of refined path (in blocks):                    2131 (count: 221, min: 2, max: 16, avg: 9.64)
Number of affected states:                              382 (count: 221, min: 1, max: 8, avg: 1.73)
Length (states) of path with itp 'true':               1528 (count: 221, min: 0, max: 14, avg: 6.91)
Length (states) of path with itp non-trivial itp:       382 (count: 221, min: 1, max: 8, avg: 1.73)
Length (states) of path with itp 'false':                 2 (count: 221, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           2 (count: 221, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:             159 (count: 221, min: 0, max: 7, avg: 0.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                221
Number of successful refinements:     221
Number of failed refinements:         0
Max. size of reached set before ref.: 32745
Max. size of reached set after ref.:  32677
Avg. size of reached set before ref.: 15239.40
Avg. size of reached set after ref.:  13730.90

Total time for CEGAR algorithm:      86.023s
Time for refinements:                22.819s
Average time for refinement:          0.103s
Max time for refinement:              0.252s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1730
  Total lines:            2094
  Line coverage:          0.826
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             32938
  Number of reached locations:   1101 (39%)
    Avg states per location:     29
    Max states per location:     647 (at node N88)
  Number of reached functions:   56 (56%)
  Number of partitions:          32935
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [7004e3d], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.458s
  Time for loading CPAs:          0.970s
  Time for loading parser:        0.846s
  Time for CFA construction:      3.454s
    Time for parsing file(s):     0.937s
    Time for AST to CFA:          1.193s
    Time for CFA sanity check:    0.238s
    Time for post-processing:     0.913s
      Time for var class.:        0.375s
Time for Analysis:               86.023s
CPU time for analysis:           86.020s
Time for analyzing result:        0.034s
Total time for CPAchecker:       91.486s
Total CPU time for CPAchecker:   91.460s
Time for statistics:              0.492s

Time for Garbage Collector:       3.600s (in 283 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     72MB (    68 MiB) avg;    133MB (   127 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           144MB (   138 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:   8135MB (  7758 MiB) max;   8064MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
