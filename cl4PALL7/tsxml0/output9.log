scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1npypcyk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2763 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2298 (83%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         465 (17%)
  Times precision was empty:       507 (18%)
  Times precision was {false}:     253 (9%)
  Times result was cached:         1459 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      544 (20%)
  Times result was 'false':        985 (36%)
Number of strengthen sat checks:   0
Number of coverage checks:         26727
  BDD entailment checks:           485
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       189
Number of predicates discovered:          9
Number of abstraction locations:          7
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         8206
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 10.30
Number of irrelevant predicates:          1394 (17%)
Number of preds handled by boolean abs:   1943 (24%)
  Total number of models for allsat:      485
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.89

Time for post operator:                  4.657s
  Time for path formula creation:        4.462s
Time for strengthen operator:            0.227s
Time for prec operator:                  9.133s
  Time for abstraction:                  8.752s (Max:     0.211s, Count: 2763)
    Boolean abstraction:                 3.711s
    Solving time:                        3.995s (Max:     0.147s)
    Model enumeration time:              0.415s
    Time for BDD construction:           0.057s (Max:     0.012s)
Time for merge operator:                 1.844s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     4.410s

Number of path formula cache hits:   137336 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.530s

Total number of created targets for pointer analysis: 15142
   Number of created targets for uf: *(struct_backlight_device)* is 6
   Number of created targets for uf: *(struct_dentry)* is 12
   Number of created targets for uf: *signed_int is 42
   Number of created targets for uf: *unsigned_long_long_int is 434
   Number of created targets for uf: *(struct_platform_device)* is 10
   Number of created targets for uf: *(struct_rfkill)* is 64
   Number of created targets for uf: *unsigned_long_int is 228


Number of BDD nodes:                               518
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1447 (count: 6197, min: 0, max: 106, avg: 0.23)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.596s
  Time for transition matches:                         0.215s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                       144256 (count: 144256, min: 1, max: 1, avg: 1.00) [1 x 144256]

CPA algorithm statistics
------------------------
Number of iterations:            84130
Max size of waitlist:            88
Average size of waitlist:        37
Number of computed successors:   100062
Max successors for one state:    2
Number of times merged:          13121
Number of times stopped:         13399
Number of times breaked:         36

Total time for CPA algorithm:        21.617s (Max:     2.334s)
  Time for choose from waitlist:      0.129s
  Time for precision adjustment:     10.219s
  Time for transfer relation:         7.601s
  Time for merge operator:            2.291s
  Time for stop operator:             0.264s
  Time for adding to reached set:     0.348s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 243 (count: 36, min: 2, max: 14, avg: 6.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.795s
  Counterexample analysis:                             2.406s (Max:     0.116s, Calls: 36)
    Refinement sat check:                              2.120s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.016s
  ARG update:                                          0.286s

Length of refined path (in blocks):                     229 (count: 36, min: 2, max: 11, avg: 6.36)
Number of affected states:                              151 (count: 36, min: 1, max: 10, avg: 4.19)
Length (states) of path with itp 'true':                 42 (count: 36, min: 0, max: 7, avg: 1.17)
Length (states) of path with itp non-trivial itp:       151 (count: 36, min: 1, max: 10, avg: 4.19)
Length (states) of path with itp 'false':                 5 (count: 36, min: 0, max: 1, avg: 0.14)
Different non-trivial interpolants along paths:           3 (count: 36, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             112 (count: 36, min: 0, max: 9, avg: 3.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 6086
Max. size of reached set after ref.:  3811
Avg. size of reached set before ref.: 3010.61
Avg. size of reached set after ref.:  630.86

Total time for CEGAR algorithm:      24.696s
Time for refinements:                 3.059s
Average time for refinement:          0.084s
Max time for refinement:              0.156s

Code Coverage
-----------------------------
  Function coverage:      0.020
  Visited lines:          774
  Total lines:            2094
  Line coverage:          0.370
  Visited conditions:     0
  Total conditions:       632
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             8
  Number of reached locations:   8 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N1108)
  Number of reached functions:   2 (2%)
  Number of partitions:          8
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          5.545s
  Time for loading CPAs:          1.047s
  Time for loading parser:        0.863s
  Time for CFA construction:      3.509s
    Time for parsing file(s):     1.033s
    Time for AST to CFA:          1.174s
    Time for CFA sanity check:    0.248s
    Time for post-processing:     0.919s
      Time for var class.:        0.435s
Time for Analysis:               24.696s
CPU time for analysis:           24.700s
Total time for CPAchecker:       30.249s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.073s

Time for Garbage Collector:       0.670s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     48MB (    45 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
