scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s6bi_1kk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            43835 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            38875 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4960 (11%)
  Times precision was empty:       1001 (2%)
  Times precision was {false}:     2813 (6%)
  Times result was cached:         30875 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9146 (21%)
  Times result was 'false':        17015 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         323203
  BDD entailment checks:           51893
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       192
Number of predicates discovered:          51
Number of abstraction locations:          10
Max number of predicates per location:    21
Avg number of predicates per location:    11
Total predicates per abstraction:         361856
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 30.26
Number of irrelevant predicates:          146744 (41%)
Number of preds handled by boolean abs:   62776 (17%)
  Total number of models for allsat:      30972
  Max number of models for allsat:        1920
  Avg number of models for allsat:        3.39

Time for post operator:                 44.929s
  Time for path formula creation:       43.930s
Time for strengthen operator:            1.694s
Time for prec operator:                698.159s
  Time for abstraction:                696.109s (Max:    86.368s, Count: 43835)
    Boolean abstraction:               621.477s
    Solving time:                       64.527s (Max:     0.209s)
    Model enumeration time:            562.675s
    Time for BDD construction:           1.936s (Max:     0.177s)
Time for merge operator:                23.305s
Time for coverage check:                 0.133s
  Time for BDD entailment checks:        0.103s
Total time for SMT solver (w/o itp):   627.211s

Number of path formula cache hits:   1391207 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.065s

Total number of created targets for pointer analysis: 516407
   Number of created targets for uf: *(struct_backlight_device)* is 559
   Number of created targets for uf: *(struct_dentry)* is 186
   Number of created targets for uf: *signed_int is 200
   Number of created targets for uf: *unsigned_long_long_int is 103
   Number of created targets for uf: *(struct_platform_device)* is 114
   Number of created targets for uf: *(struct_rfkill)* is 289
   Number of created targets for uf: *unsigned_long_int is 624


Number of BDD nodes:                               131277
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       32253 (count: 134077, min: 0, max: 2112, avg: 0.24)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.888s
  Time for transition matches:                         1.477s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                      1714153 (count: 1714153, min: 1, max: 1, avg: 1.00) [1 x 1714153]

CPA algorithm statistics
------------------------
Number of iterations:            1038036
Max size of waitlist:            116
Average size of waitlist:        49
Number of computed successors:   1209004
Max successors for one state:    2
Number of times merged:          135655
Number of times stopped:         149895
Number of times breaked:         553

Total time for CPA algorithm:       807.755s (Max:   100.121s)
  Time for choose from waitlist:      0.505s
  Time for precision adjustment:    708.057s
  Time for transfer relation:        65.370s
  Time for merge operator:           25.591s
  Time for stop operator:             1.733s
  Time for adding to reached set:     2.563s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   553
Avg. length of target path (in blocks):                9349 (count: 553, min: 2, max: 40, avg: 16.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  69.998s
  Counterexample analysis:                            66.845s (Max:     0.238s, Calls: 553)
    Refinement sat check:                             55.969s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.096s
  Precision update:                                    0.132s
  ARG update:                                          2.201s

Length of refined path (in blocks):                    9197 (count: 553, min: 2, max: 39, avg: 16.63)
Number of affected states:                             1396 (count: 553, min: 1, max: 28, avg: 2.52)
Length (states) of path with itp 'true':               7248 (count: 553, min: 0, max: 26, avg: 13.11)
Length (states) of path with itp non-trivial itp:      1396 (count: 553, min: 1, max: 28, avg: 2.52)
Length (states) of path with itp 'false':                52 (count: 553, min: 0, max: 1, avg: 0.09)
Different non-trivial interpolants along paths:         224 (count: 553, min: 0, max: 15, avg: 0.41)
Equal non-trivial interpolants along paths:             619 (count: 553, min: 0, max: 19, avg: 1.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                553
Number of successful refinements:     553
Number of failed refinements:         0
Max. size of reached set before ref.: 32627
Max. size of reached set after ref.:  32199
Avg. size of reached set before ref.: 17054.93
Avg. size of reached set after ref.:  15207.72

Total time for CEGAR algorithm:     894.624s
Time for refinements:                80.588s
Average time for refinement:          0.145s
Max time for refinement:              1.097s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1730
  Total lines:            2094
  Line coverage:          0.826
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             20591
  Number of reached locations:   1101 (39%)
    Avg states per location:     18
    Max states per location:     454 (at node N88)
  Number of reached functions:   56 (56%)
  Number of partitions:          20548
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N721 (before line 4818), Function ideapad_check_special_buttons called from node N1071, stack depth 3 [2043221], stack [main, ideapad_acpi_notify, ideapad_check_special_buttons]])
  Number of target states:       0
  Size of final wait list        49

Time for analysis setup:          5.614s
  Time for loading CPAs:          0.859s
  Time for loading parser:        0.839s
  Time for CFA construction:      3.781s
    Time for parsing file(s):     1.067s
    Time for AST to CFA:          1.314s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     0.929s
      Time for var class.:        0.380s
Time for Analysis:              894.624s
CPU time for analysis:          894.570s
Total time for CPAchecker:      900.243s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.455s

Time for Garbage Collector:      13.666s (in 540 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                356MB (   339 MiB) max;    188MB (   179 MiB) avg;    372MB (   355 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           391MB (   373 MiB) max;    282MB (   269 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8969MB (  8554 MiB) max;   8347MB (  7961 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
