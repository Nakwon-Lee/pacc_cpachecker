scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--v4l2-core--videobuf-dma-contig.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ewa46sk3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2994: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2997: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3000: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3324: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3357: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3161-3162: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3248: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3228: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3195: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_pages_exact to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3161-3162: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3248: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages_exact to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3324: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3357: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3228: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_vma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_queue_cancel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vm_insert_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3195: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function follow_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11329 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            9677 (85%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1652 (15%)
  Times precision was empty:       5464 (48%)
  Times precision was {false}:     794 (7%)
  Times result was cached:         1803 (16%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3268 (29%)
  Times result was 'false':        3412 (30%)
Number of strengthen sat checks:   0
Number of coverage checks:         90091
  BDD entailment checks:           24633
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          71
Number of abstraction locations:          6
Max number of predicates per location:    38
Avg number of predicates per location:    14
Total predicates per abstraction:         59201
Max number of predicates per abstraction: 38
Avg number of predicates per abstraction: 14.57
Number of irrelevant predicates:          6970 (12%)
Number of preds handled by boolean abs:   45338 (77%)
  Total number of models for allsat:      25781
  Max number of models for allsat:        66
  Avg number of models for allsat:        7.89

Time for post operator:                 22.170s
  Time for path formula creation:       21.751s
Time for strengthen operator:            0.495s
Time for prec operator:                312.480s
  Time for abstraction:                311.637s (Max:     1.195s, Count: 11329)
    Boolean abstraction:               294.189s
    Solving time:                       67.245s (Max:     0.300s)
    Model enumeration time:            225.006s
    Time for BDD construction:           2.175s (Max:     0.022s)
Time for merge operator:                 6.416s
Time for coverage check:                 0.175s
  Time for BDD entailment checks:        0.157s
Total time for SMT solver (w/o itp):   292.251s

Number of path formula cache hits:   261484 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.095s

Total number of created targets for pointer analysis: 67319
   Number of created targets for uf: *(void)* is 13127
   Number of created targets for uf: *(struct_videobuf_mapping)* is 1057
   Number of created targets for uf: *(struct_videobuf_buffer)* is 661
   Number of created targets for uf: *(struct_videobuf_queue)* is 2
   Number of created targets for uf: *unsigned_int is 232
   Number of created targets for uf: *unsigned_long_int is 2113


Number of BDD nodes:                               203181
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       72254 (count: 81032, min: 0, max: 3598, avg: 0.89)
Time for BDD node cleanup:                             0.054s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.336s
  Time for transition matches:                         0.577s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                       446481 (count: 446481, min: 1, max: 1, avg: 1.00) [1 x 446481]

CPA algorithm statistics
------------------------
Number of iterations:            308389
Max size of waitlist:            107
Average size of waitlist:        51
Number of computed successors:   350391
Max successors for one state:    2
Number of times merged:          32729
Number of times stopped:         34351
Number of times breaked:         81

Total time for CPA algorithm:       357.004s (Max:    22.407s)
  Time for choose from waitlist:      0.219s
  Time for precision adjustment:    315.755s
  Time for transfer relation:        29.972s
  Time for merge operator:            7.336s
  Time for stop operator:             0.795s
  Time for adding to reached set:     0.994s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   81
Avg. length of target path (in blocks):                2796 (count: 81, min: 3, max: 69, avg: 34.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.757s
  Counterexample analysis:                            28.760s (Max:     1.147s, Calls: 81)
    Refinement sat check:                             25.398s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.030s
  ARG update:                                          0.755s

Length of refined path (in blocks):                    2235 (count: 81, min: 2, max: 69, avg: 27.59)
Number of affected states:                             1257 (count: 81, min: 1, max: 35, avg: 15.52)
Length (states) of path with itp 'true':                897 (count: 81, min: 0, max: 34, avg: 11.07)
Length (states) of path with itp non-trivial itp:      1257 (count: 81, min: 1, max: 35, avg: 15.52)
Length (states) of path with itp 'false':                32 (count: 81, min: 0, max: 1, avg: 0.40)
Different non-trivial interpolants along paths:         994 (count: 81, min: 0, max: 31, avg: 12.27)
Equal non-trivial interpolants along paths:             182 (count: 81, min: 0, max: 34, avg: 2.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                81
Number of successful refinements:     81
Number of failed refinements:         0
Max. size of reached set before ref.: 7767
Max. size of reached set after ref.:  2158
Avg. size of reached set before ref.: 4619.69
Avg. size of reached set after ref.:  855.96

Total time for CEGAR algorithm:     387.274s
Time for refinements:                30.213s
Average time for refinement:          0.373s
Max time for refinement:              1.183s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          1208
  Total lines:            1456
  Line coverage:          0.830
  Visited conditions:     204
  Total conditions:       310
  Condition coverage:     0.658

CPAchecker general statistics
-----------------------------
Number of program locations:     1967
Number of CFA edges:             2165
Number of relevant variables:    261
Number of functions:             78
Number of loops:                 21
Size of reached set:             7767
  Number of reached locations:   623 (32%)
    Avg states per location:     12
    Max states per location:     351 (at node N1123)
  Number of reached functions:   40 (51%)
  Number of partitions:          7703
    Avg size of partitions:      1
    Max size of partitions:      33 (with key [N968 (before line 4206), Function main called from node N949, stack depth 1 [56e07a08], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.998s
  Time for loading CPAs:          0.992s
  Time for loading parser:        0.782s
  Time for CFA construction:      3.110s
    Time for parsing file(s):     1.009s
    Time for AST to CFA:          1.014s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.709s
      Time for var class.:        0.327s
Time for Analysis:              387.275s
CPU time for analysis:          387.260s
Time for analyzing result:        0.007s
Total time for CPAchecker:      392.278s
Total CPU time for CPAchecker:  392.250s
Time for statistics:              0.267s

Time for Garbage Collector:       3.499s (in 171 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                188MB (   179 MiB) max;    123MB (   117 MiB) avg;    190MB (   181 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           246MB (   234 MiB) max;    194MB (   185 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8468MB (  8076 MiB) max;   8310MB (  7925 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
