scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--v4l2-core--videobuf-dma-contig.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_byuul53d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2994: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2997: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3000: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3324: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3357: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3161-3162: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3248: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3228: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3195: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_pages_exact to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3161-3162: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3248: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages_exact to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3324: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3357: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3228: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_vma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_queue_cancel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function follow_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3195: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1277 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1112 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         165 (13%)
  Times precision was empty:       758 (59%)
  Times precision was {false}:     79 (6%)
  Times result was cached:         142 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      298 (23%)
  Times result was 'false':        279 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         7275
  BDD entailment checks:           933
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          24
Number of abstraction locations:          4
Max number of predicates per location:    10
Avg number of predicates per location:    6
Total predicates per abstraction:         2127
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 5.64
Number of irrelevant predicates:          664 (31%)
Number of preds handled by boolean abs:   1426 (67%)
  Total number of models for allsat:      761
  Max number of models for allsat:        11
  Avg number of models for allsat:        2.55

Time for post operator:                  6.874s
  Time for path formula creation:        6.792s
Time for strengthen operator:            0.147s
Time for prec operator:                  9.336s
  Time for abstraction:                  9.001s (Max:     0.329s, Count: 1277)
    Boolean abstraction:                 7.068s
    Solving time:                        5.135s (Max:     0.281s)
    Model enumeration time:              1.733s
    Time for BDD construction:           0.163s (Max:     0.012s)
Time for merge operator:                 1.575s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     6.868s

Number of path formula cache hits:   11075 (25%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.446s

Total number of created targets for pointer analysis: 3245
   Number of created targets for uf: *(void)* is 334
   Number of created targets for uf: *(struct_videobuf_mapping)* is 288
   Number of created targets for uf: *(struct_videobuf_buffer)* is 221
   Number of created targets for uf: *(struct_videobuf_queue)* is 2
   Number of created targets for uf: *unsigned_int is 11
   Number of created targets for uf: *unsigned_long_int is 381


Number of BDD nodes:                               2676
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1734 (count: 4650, min: 0, max: 345, avg: 0.37)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.466s
Automaton transfers with branching:                0
Automaton transfer successors:                        43551 (count: 43551, min: 1, max: 1, avg: 1.00) [1 x 43551]

CPA algorithm statistics
------------------------
Number of iterations:            28879
Max size of waitlist:            38
Average size of waitlist:        24
Number of computed successors:   32945
Max successors for one state:    2
Number of times merged:          3171
Number of times stopped:         3521
Number of times breaked:         23

Total time for CPA algorithm:        22.456s (Max:     2.178s)
  Time for choose from waitlist:      0.093s
  Time for precision adjustment:     10.065s
  Time for transfer relation:         9.188s
  Time for merge operator:            1.895s
  Time for stop operator:             0.232s
  Time for adding to reached set:     0.297s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 259 (count: 23, min: 3, max: 22, avg: 11.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.017s
  Counterexample analysis:                             1.779s (Max:     0.211s, Calls: 23)
    Refinement sat check:                              1.508s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.019s
  ARG update:                                          0.148s

Length of refined path (in blocks):                     193 (count: 23, min: 2, max: 21, avg: 8.39)
Number of affected states:                              104 (count: 23, min: 1, max: 10, avg: 4.52)
Length (states) of path with itp 'true':                 66 (count: 23, min: 0, max: 11, avg: 2.87)
Length (states) of path with itp non-trivial itp:       104 (count: 23, min: 1, max: 10, avg: 4.52)
Length (states) of path with itp 'false':                10 (count: 23, min: 0, max: 1, avg: 0.43)
Different non-trivial interpolants along paths:          81 (count: 23, min: 0, max: 9, avg: 3.52)
Equal non-trivial interpolants along paths:               0 (count: 23, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 3044
Max. size of reached set after ref.:  1512
Avg. size of reached set before ref.: 1838.43
Avg. size of reached set after ref.:  580.57

Total time for CEGAR algorithm:      24.628s
Time for refinements:                 2.165s
Average time for refinement:          0.094s
Max time for refinement:              0.230s

Code Coverage
-----------------------------
  Function coverage:      0.115
  Visited lines:          666
  Total lines:            1456
  Line coverage:          0.457
  Visited conditions:     46
  Total conditions:       310
  Condition coverage:     0.148

CPAchecker general statistics
-----------------------------
Number of program locations:     1967
Number of CFA edges:             2165
Number of relevant variables:    261
Number of functions:             78
Number of loops:                 21
Size of reached set:             213
  Number of reached locations:   105 (5%)
    Avg states per location:     2
    Max states per location:     11 (at node N968)
  Number of reached functions:   9 (12%)
  Number of partitions:          203
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N968 (before line 4206), Function main called from node N949, stack depth 1 [f415a95], stack [main]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          5.052s
  Time for loading CPAs:          0.969s
  Time for loading parser:        0.815s
  Time for CFA construction:      3.140s
    Time for parsing file(s):     1.008s
    Time for AST to CFA:          1.000s
    Time for CFA sanity check:    0.183s
    Time for post-processing:     0.718s
      Time for var class.:        0.331s
Time for Analysis:               24.628s
CPU time for analysis:           24.630s
Total time for CPAchecker:       29.688s
Total CPU time for CPAchecker:   29.670s
Time for statistics:              0.071s

Time for Garbage Collector:       0.515s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     48MB (    46 MiB) avg;     81MB (    78 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
