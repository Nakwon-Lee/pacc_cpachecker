scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--v4l2-core--videobuf-dma-contig.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_23fnwuvd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2994: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2997: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3000: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3324: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3357: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3161-3162: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3248: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3228: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3195: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_pages_exact to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3161-3162: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3248: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages_exact to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3324: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3357: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3228: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_vma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_queue_cancel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vm_insert_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3195: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1417 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1228 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         189 (13%)
  Times precision was empty:       839 (59%)
  Times precision was {false}:     87 (6%)
  Times result was cached:         176 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      315 (22%)
  Times result was 'false':        288 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         9676
  BDD entailment checks:           782
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       190
Number of predicates discovered:          23
Number of abstraction locations:          5
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         2183
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 5.43
Number of irrelevant predicates:          599 (27%)
Number of preds handled by boolean abs:   1399 (64%)
  Total number of models for allsat:      707
  Max number of models for allsat:        10
  Avg number of models for allsat:        2.24

Time for post operator:                  6.345s
  Time for path formula creation:        6.207s
Time for strengthen operator:            0.179s
Time for prec operator:                  9.617s
  Time for abstraction:                  9.319s (Max:     0.303s, Count: 1417)
    Boolean abstraction:                 7.361s
    Solving time:                        5.689s (Max:     0.271s)
    Model enumeration time:              1.550s
    Time for BDD construction:           0.141s (Max:     0.016s)
Time for merge operator:                 1.504s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     7.245s

Number of path formula cache hits:   25267 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.840s

Total number of created targets for pointer analysis: 3349
   Number of created targets for uf: *(void)* is 324
   Number of created targets for uf: *(struct_videobuf_mapping)* is 279
   Number of created targets for uf: *(struct_videobuf_buffer)* is 201
   Number of created targets for uf: *(struct_videobuf_queue)* is 2
   Number of created targets for uf: *unsigned_int is 11
   Number of created targets for uf: *unsigned_long_int is 381


Number of BDD nodes:                               2128
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1867 (count: 4594, min: 0, max: 432, avg: 0.41)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.431s
Automaton transfers with branching:                0
Automaton transfer successors:                        59414 (count: 59414, min: 1, max: 1, avg: 1.00) [1 x 59414]

CPA algorithm statistics
------------------------
Number of iterations:            39142
Max size of waitlist:            42
Average size of waitlist:        26
Number of computed successors:   44685
Max successors for one state:    2
Number of times merged:          4447
Number of times stopped:         4744
Number of times breaked:         26

Total time for CPA algorithm:        22.812s (Max:     2.275s)
  Time for choose from waitlist:      0.122s
  Time for precision adjustment:     10.731s
  Time for transfer relation:         8.828s
  Time for merge operator:            1.795s
  Time for stop operator:             0.225s
  Time for adding to reached set:     0.327s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 257 (count: 26, min: 3, max: 21, avg: 9.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.827s
  Counterexample analysis:                             1.570s (Max:     0.211s, Calls: 26)
    Refinement sat check:                              1.339s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.014s
  ARG update:                                          0.179s

Length of refined path (in blocks):                     202 (count: 26, min: 2, max: 21, avg: 7.77)
Number of affected states:                              106 (count: 26, min: 1, max: 9, avg: 4.08)
Length (states) of path with itp 'true':                 70 (count: 26, min: 0, max: 11, avg: 2.69)
Length (states) of path with itp non-trivial itp:       106 (count: 26, min: 1, max: 9, avg: 4.08)
Length (states) of path with itp 'false':                 9 (count: 26, min: 0, max: 1, avg: 0.35)
Different non-trivial interpolants along paths:          72 (count: 26, min: 0, max: 8, avg: 2.77)
Equal non-trivial interpolants along paths:               8 (count: 26, min: 0, max: 2, avg: 0.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 3315
Max. size of reached set after ref.:  1951
Avg. size of reached set before ref.: 2065.77
Avg. size of reached set after ref.:  667.27

Total time for CEGAR algorithm:      24.881s
Time for refinements:                 2.044s
Average time for refinement:          0.078s
Max time for refinement:              0.228s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          1186
  Total lines:            1456
  Line coverage:          0.815
  Visited conditions:     194
  Total conditions:       310
  Condition coverage:     0.626

CPAchecker general statistics
-----------------------------
Number of program locations:     1967
Number of CFA edges:             2165
Number of relevant variables:    261
Number of functions:             78
Number of loops:                 21
Size of reached set:             3292
  Number of reached locations:   604 (31%)
    Avg states per location:     5
    Max states per location:     151 (at node N1123)
  Number of reached functions:   40 (51%)
  Number of partitions:          3276
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N968 (before line 4206), Function main called from node N949, stack depth 1 [f415a95], stack [main]])
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          4.856s
  Time for loading CPAs:          0.996s
  Time for loading parser:        0.737s
  Time for CFA construction:      3.007s
    Time for parsing file(s):     0.913s
    Time for AST to CFA:          0.988s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.706s
      Time for var class.:        0.342s
Time for Analysis:               24.881s
CPU time for analysis:           24.880s
Total time for CPAchecker:       29.742s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.150s

Time for Garbage Collector:       0.559s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     48MB (    46 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8120MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
