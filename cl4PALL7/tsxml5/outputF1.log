scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gxds2o5u/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            117671 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            86245 (73%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31426 (27%)
  Times precision was empty:       2184 (2%)
  Times precision was {false}:     4549 (4%)
  Times result was cached:         101242 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9696 (8%)
  Times result was 'false':        51073 (43%)
Number of strengthen sat checks:   0
Number of coverage checks:         169590
  BDD entailment checks:           39080
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       112
Number of predicates discovered:          15
Number of abstraction locations:          15
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         165270
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 11.60
Number of irrelevant predicates:          58985 (36%)
Number of preds handled by boolean abs:   16055 (10%)
  Total number of models for allsat:      7381
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.76

Time for post operator:                 55.193s
  Time for path formula creation:       53.673s
Time for strengthen operator:            2.578s
Time for prec operator:                128.836s
  Time for abstraction:                125.041s (Max:     1.198s, Count: 117671)
    Boolean abstraction:                65.197s
    Solving time:                       68.351s (Max:     1.167s)
    Model enumeration time:              3.225s
    Time for BDD construction:           0.284s (Max:     0.012s)
Time for merge operator:                 5.749s
Time for coverage check:                 0.134s
  Time for BDD entailment checks:        0.109s
Total time for SMT solver (w/o itp):    71.576s

Number of path formula cache hits:   1834706 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.238s

Total number of created targets for pointer analysis: 213842
   Number of created targets for uf: *(char)* is 1044
   Number of created targets for uf: *signed_int is 1091
   Number of created targets for uf: *unsigned_char is 2546
   Number of created targets for uf: *_Bool is 683
   Number of created targets for uf: *unsigned_int is 3595
   Number of created targets for uf: *signed_short_int is 3
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 14161


Number of BDD nodes:                               404
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15800 (count: 130038, min: 0, max: 186, avg: 0.12)
Time for BDD node cleanup:                             0.047s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.249s
  Time for transition matches:                         1.957s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.035s
Automaton transfers with branching:                0
Automaton transfer successors:                      2304116 (count: 2304116, min: 1, max: 1, avg: 1.00) [1 x 2304116]

CPA algorithm statistics
------------------------
Number of iterations:            1792740
Max size of waitlist:            29
Average size of waitlist:        17
Number of computed successors:   1950646
Max successors for one state:    2
Number of times merged:          65255
Number of times stopped:         103260
Number of times breaked:         1583

Total time for CPA algorithm:       248.744s (Max:    17.130s)
  Time for choose from waitlist:      0.769s
  Time for precision adjustment:    144.161s
  Time for transfer relation:        84.128s
  Time for merge operator:            6.936s
  Time for stop operator:             2.727s
  Time for adding to reached set:     4.433s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1583
Avg. length of target path (in blocks):               44745 (count: 1583, min: 1, max: 42, avg: 28.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 119.162s
  Counterexample analysis:                           113.857s (Max:     0.167s, Calls: 1583)
    Refinement sat check:                             95.675s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.044s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.161s
  Precision update:                                    0.267s
  ARG update:                                          3.436s

Length of refined path (in blocks):                   44601 (count: 1582, min: 1, max: 42, avg: 28.19)
Number of affected states:                             6250 (count: 1582, min: 0, max: 20, avg: 3.95)
Length (states) of path with itp 'true':              36769 (count: 1582, min: 0, max: 37, avg: 23.24)
Length (states) of path with itp non-trivial itp:      6250 (count: 1582, min: 0, max: 20, avg: 3.95)
Length (states) of path with itp 'false':                27 (count: 1582, min: 0, max: 1, avg: 0.02)
Different non-trivial interpolants along paths:          26 (count: 1582, min: 0, max: 2, avg: 0.02)
Equal non-trivial interpolants along paths:            4644 (count: 1582, min: 0, max: 19, avg: 2.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1583
Number of successful refinements:     1582
Number of failed refinements:         0
Max. size of reached set before ref.: 543642
Max. size of reached set after ref.:  542928
Avg. size of reached set before ref.: 180381.77
Avg. size of reached set after ref.:  179360.32

Total time for CEGAR algorithm:     895.005s
Time for refinements:               398.632s
Average time for refinement:          0.251s
Max time for refinement:              2.065s

Code Coverage
-----------------------------
  Function coverage:      0.519
  Visited lines:          967
  Total lines:            1535
  Line coverage:          0.630
  Visited conditions:     162
  Total conditions:       334
  Condition coverage:     0.485

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             543642
  Number of reached locations:   585 (28%)
    Avg states per location:     929
    Max states per location:     10202 (at node N57)
  Number of reached functions:   54 (52%)
  Number of partitions:          543636
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1251 (before line 3486), Function applesmc_create_nodes called from node N1413, stack depth 3 [5cc8cf70], stack [main, applesmc_init, applesmc_create_nodes]])
  Number of target states:       1
  Size of final wait list        19

Time for analysis setup:          5.396s
  Time for loading CPAs:          0.975s
  Time for loading parser:        0.827s
  Time for CFA construction:      3.418s
    Time for parsing file(s):     0.995s
    Time for AST to CFA:          1.189s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.799s
      Time for var class.:        0.436s
Time for Analysis:              895.005s
CPU time for analysis:          894.950s
Total time for CPAchecker:      900.418s
Total CPU time for CPAchecker:  900.350s
Time for statistics:              3.894s

Time for Garbage Collector:      33.306s (in 763 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                741MB (   707 MiB) max;    370MB (   353 MiB) avg;    751MB (   716 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           806MB (   769 MiB) max;    548MB (   523 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8341MB (  7954 MiB) max;   8245MB (  7863 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
