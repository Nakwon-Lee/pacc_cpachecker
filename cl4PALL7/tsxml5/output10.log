scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l5c4umo2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6391 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5180 (81%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1211 (19%)
  Times precision was empty:       212 (3%)
  Times precision was {false}:     281 (4%)
  Times result was cached:         5175 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      723 (11%)
  Times result was 'false':        2441 (38%)
Number of strengthen sat checks:   0
Number of coverage checks:         8302
  BDD entailment checks:           1168
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          9
Number of abstraction locations:          13
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         10987
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 10.94
Number of irrelevant predicates:          1855 (17%)
Number of preds handled by boolean abs:   1330 (12%)
  Total number of models for allsat:      645
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.89

Time for post operator:                  4.871s
  Time for path formula creation:        4.701s
Time for strengthen operator:            0.268s
Time for prec operator:                 11.278s
  Time for abstraction:                 10.818s (Max:     0.163s, Count: 6391)
    Boolean abstraction:                 4.487s
    Solving time:                        4.605s (Max:     0.142s)
    Model enumeration time:              0.283s
    Time for BDD construction:           0.089s (Max:     0.012s)
Time for merge operator:                 0.369s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     4.889s

Number of path formula cache hits:   105598 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.702s

Total number of created targets for pointer analysis: 3889
   Number of created targets for uf: *(char)* is 489
   Number of created targets for uf: *signed_int is 508
   Number of created targets for uf: *unsigned_char is 85
   Number of created targets for uf: *(struct_applesmc_entry)* is 14
   Number of created targets for uf: *_Bool is 57
   Number of created targets for uf: *unsigned_int is 14
   Number of created targets for uf: *signed_short_int is 4
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 625


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1339 (count: 7774, min: 0, max: 127, avg: 0.17)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.639s
  Time for transition matches:                         0.214s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                       118130 (count: 118130, min: 1, max: 1, avg: 1.00) [1 x 118130]

CPA algorithm statistics
------------------------
Number of iterations:            77948
Max size of waitlist:            432
Average size of waitlist:        119
Number of computed successors:   86717
Max successors for one state:    2
Number of times merged:          3567
Number of times stopped:         4603
Number of times breaked:         33

Total time for CPA algorithm:        23.054s (Max:     2.379s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:     12.498s
  Time for transfer relation:         8.130s
  Time for merge operator:            0.610s
  Time for stop operator:             0.233s
  Time for adding to reached set:     0.516s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                 201 (count: 33, min: 1, max: 9, avg: 6.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.418s
  Counterexample analysis:                             0.988s (Max:     0.067s, Calls: 33)
    Refinement sat check:                              0.844s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.031s
  ARG update:                                          0.301s

Length of refined path (in blocks):                     194 (count: 33, min: 1, max: 9, avg: 5.88)
Number of affected states:                              104 (count: 33, min: 0, max: 8, avg: 3.15)
Length (states) of path with itp 'true':                 57 (count: 33, min: 0, max: 7, avg: 1.73)
Length (states) of path with itp non-trivial itp:       104 (count: 33, min: 0, max: 8, avg: 3.15)
Length (states) of path with itp 'false':                 3 (count: 33, min: 0, max: 1, avg: 0.09)
Different non-trivial interpolants along paths:           2 (count: 33, min: 0, max: 2, avg: 0.06)
Equal non-trivial interpolants along paths:              71 (count: 33, min: 0, max: 7, avg: 2.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 17302
Max. size of reached set after ref.:  16557
Avg. size of reached set before ref.: 5278.27
Avg. size of reached set after ref.:  3361.12

Total time for CEGAR algorithm:      25.020s
Time for refinements:                 1.793s
Average time for refinement:          0.054s
Max time for refinement:              0.159s

Code Coverage
-----------------------------
  Function coverage:      0.548
  Visited lines:          1013
  Total lines:            1535
  Line coverage:          0.660
  Visited conditions:     176
  Total conditions:       334
  Condition coverage:     0.527

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             16407
  Number of reached locations:   632 (30%)
    Avg states per location:     25
    Max states per location:     424 (at node N1171)
  Number of reached functions:   57 (55%)
  Number of partitions:          16400
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N729 (before line 2803), Function applesmc_init_smcreg called from node N1406, stack depth 3 [61f2c3f0], stack [main, applesmc_init, applesmc_init_smcreg]])
  Number of target states:       0
  Size of final wait list        370

Time for analysis setup:          5.210s
  Time for loading CPAs:          0.982s
  Time for loading parser:        0.800s
  Time for CFA construction:      3.299s
    Time for parsing file(s):     1.037s
    Time for AST to CFA:          1.094s
    Time for CFA sanity check:    0.186s
    Time for post-processing:     0.758s
      Time for var class.:        0.408s
Time for Analysis:               25.021s
CPU time for analysis:           25.010s
Total time for CPAchecker:       30.241s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.385s

Time for Garbage Collector:       0.789s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 96MB (    92 MiB) max;     51MB (    49 MiB) avg;    100MB (    95 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
