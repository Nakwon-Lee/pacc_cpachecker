scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_li9y5py_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1536 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1297 (84%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         239 (16%)
  Times precision was empty:       78 (5%)
  Times precision was {false}:     158 (10%)
  Times result was cached:         694 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      606 (39%)
  Times result was 'false':        352 (23%)
Number of strengthen sat checks:   0
Number of coverage checks:         1183
  BDD entailment checks:           575
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       94
Number of predicates discovered:          7
Number of abstraction locations:          9
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         3030
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 3.97
Number of irrelevant predicates:          303 (10%)
Number of preds handled by boolean abs:   1415 (47%)
  Total number of models for allsat:      673
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  3.471s
  Time for path formula creation:        3.412s
Time for strengthen operator:            0.059s
Time for prec operator:                 17.744s
  Time for abstraction:                 17.577s (Max:     1.372s, Count: 1536)
    Boolean abstraction:                15.251s
    Solving time:                       14.590s (Max:     1.313s)
    Model enumeration time:              0.521s
    Time for BDD construction:           0.101s (Max:     0.012s)
Time for merge operator:                 0.195s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):    15.112s

Number of path formula cache hits:   6072 (30%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.117s

Total number of created targets for pointer analysis: 4583
   Number of created targets for uf: *signed_int is 463
   Number of created targets for uf: *(char)* is 447
   Number of created targets for uf: *unsigned_char is 78
   Number of created targets for uf: *_Bool is 99
   Number of created targets for uf: *signed_short_int is 3
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 385
   Number of created targets for uf: *unsigned_int is 13


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1183 (count: 5288, min: 0, max: 228, avg: 0.22)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.288s
Automaton transfers with branching:                0
Automaton transfer successors:                        19922 (count: 19922, min: 1, max: 1, avg: 1.00) [1 x 19922]

CPA algorithm statistics
------------------------
Number of iterations:            12813
Max size of waitlist:            35
Average size of waitlist:        20
Number of computed successors:   14151
Max successors for one state:    2
Number of times merged:          304
Number of times stopped:         849
Number of times breaked:         12

Total time for CPA algorithm:        23.685s (Max:    10.035s)
  Time for choose from waitlist:      0.085s
  Time for precision adjustment:     18.094s
  Time for transfer relation:         4.763s
  Time for merge operator:            0.247s
  Time for stop operator:             0.098s
  Time for adding to reached set:     0.102s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  81 (count: 12, min: 1, max: 24, avg: 6.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.595s
  Counterexample analysis:                             0.462s (Max:     0.119s, Calls: 12)
    Refinement sat check:                              0.405s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.005s
  ARG update:                                          0.099s

Length of refined path (in blocks):                      53 (count: 12, min: 1, max: 7, avg: 4.42)
Number of affected states:                               37 (count: 12, min: 0, max: 6, avg: 3.08)
Length (states) of path with itp 'true':                  4 (count: 12, min: 0, max: 3, avg: 0.33)
Length (states) of path with itp non-trivial itp:        37 (count: 12, min: 0, max: 6, avg: 3.08)
Length (states) of path with itp 'false':                 2 (count: 12, min: 0, max: 1, avg: 0.17)
Different non-trivial interpolants along paths:           2 (count: 12, min: 0, max: 2, avg: 0.17)
Equal non-trivial interpolants along paths:              25 (count: 12, min: 0, max: 5, avg: 2.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 5387
Max. size of reached set after ref.:  244
Avg. size of reached set before ref.: 938.42
Avg. size of reached set after ref.:  95.58

Total time for CEGAR algorithm:      24.343s
Time for refinements:                 0.656s
Average time for refinement:          0.054s
Max time for refinement:              0.161s

Code Coverage
-----------------------------
  Function coverage:      0.317
  Visited lines:          701
  Total lines:            1535
  Line coverage:          0.457
  Visited conditions:     74
  Total conditions:       334
  Condition coverage:     0.222

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             2836
  Number of reached locations:   289 (14%)
    Avg states per location:     9
    Max states per location:     75 (at node N1171)
  Number of reached functions:   33 (32%)
  Number of partitions:          2824
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1257 (before lines 3493-3497), Function applesmc_create_nodes called from node N1413, stack depth 3 [4743a322], stack [main, applesmc_init, applesmc_create_nodes]])
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          5.401s
  Time for loading CPAs:          1.076s
  Time for loading parser:        0.817s
  Time for CFA construction:      3.320s
    Time for parsing file(s):     1.050s
    Time for AST to CFA:          1.115s
    Time for CFA sanity check:    0.171s
    Time for post-processing:     0.746s
      Time for var class.:        0.398s
Time for Analysis:               24.343s
CPU time for analysis:           24.330s
Total time for CPAchecker:       29.749s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.124s

Time for Garbage Collector:       0.283s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     46MB (    44 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8131MB (  7754 MiB) max;   8117MB (  7741 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
