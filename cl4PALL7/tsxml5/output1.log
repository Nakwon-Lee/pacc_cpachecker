scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oqqq4shi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2379 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1881 (79%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         498 (21%)
  Times precision was empty:       128 (5%)
  Times precision was {false}:     192 (8%)
  Times result was cached:         1364 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      695 (29%)
  Times result was 'false':        705 (30%)
Number of strengthen sat checks:   0
Number of coverage checks:         1691
  BDD entailment checks:           841
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       74
Number of predicates discovered:          10
Number of abstraction locations:          8
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         7721
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 8.70
Number of irrelevant predicates:          2987 (39%)
Number of preds handled by boolean abs:   2068 (27%)
  Total number of models for allsat:      807
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.16

Time for post operator:                  4.464s
  Time for path formula creation:        4.386s
Time for strengthen operator:            0.099s
Time for prec operator:                 14.757s
  Time for abstraction:                 14.447s (Max:     1.156s, Count: 2379)
    Boolean abstraction:                11.377s
    Solving time:                       10.793s (Max:     1.124s)
    Model enumeration time:              0.512s
    Time for BDD construction:           0.141s (Max:     0.012s)
Time for merge operator:                 0.280s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):    11.306s

Number of path formula cache hits:   13166 (40%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.947s

Total number of created targets for pointer analysis: 5031
   Number of created targets for uf: *(char)* is 277
   Number of created targets for uf: *signed_int is 287
   Number of created targets for uf: *unsigned_char is 255
   Number of created targets for uf: *_Bool is 159
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 361
   Number of created targets for uf: *unsigned_int is 61


Number of BDD nodes:                               264
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1350 (count: 6369, min: 0, max: 154, avg: 0.21)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.384s
Automaton transfers with branching:                0
Automaton transfer successors:                        31811 (count: 31811, min: 1, max: 1, avg: 1.00) [1 x 31811]

CPA algorithm statistics
------------------------
Number of iterations:            21509
Max size of waitlist:            21
Average size of waitlist:        12
Number of computed successors:   23578
Max successors for one state:    2
Number of times merged:          425
Number of times stopped:         1126
Number of times breaked:         36

Total time for CPA algorithm:        22.653s (Max:    10.831s)
  Time for choose from waitlist:      0.065s
  Time for precision adjustment:     15.269s
  Time for transfer relation:         6.145s
  Time for merge operator:            0.380s
  Time for stop operator:             0.142s
  Time for adding to reached set:     0.167s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 369 (count: 36, min: 1, max: 16, avg: 10.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.874s
  Counterexample analysis:                             1.646s (Max:     0.084s, Calls: 36)
    Refinement sat check:                              1.433s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.042s
  ARG update:                                          0.085s

Length of refined path (in blocks):                     313 (count: 36, min: 1, max: 16, avg: 8.69)
Number of affected states:                               82 (count: 36, min: 0, max: 6, avg: 2.28)
Length (states) of path with itp 'true':                195 (count: 36, min: 0, max: 14, avg: 5.42)
Length (states) of path with itp non-trivial itp:        82 (count: 36, min: 0, max: 6, avg: 2.28)
Length (states) of path with itp 'false':                13 (count: 36, min: 0, max: 1, avg: 0.36)
Different non-trivial interpolants along paths:          10 (count: 36, min: 0, max: 2, avg: 0.28)
Equal non-trivial interpolants along paths:              38 (count: 36, min: 0, max: 4, avg: 1.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 1287
Max. size of reached set after ref.:  1238
Avg. size of reached set before ref.: 745.67
Avg. size of reached set after ref.:  513.11

Total time for CEGAR algorithm:      24.808s
Time for refinements:                 2.094s
Average time for refinement:          0.058s
Max time for refinement:              0.090s

Code Coverage
-----------------------------
  Function coverage:      0.317
  Visited lines:          701
  Total lines:            1535
  Line coverage:          0.457
  Visited conditions:     74
  Total conditions:       334
  Condition coverage:     0.222

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             13375
  Number of reached locations:   289 (14%)
    Avg states per location:     46
    Max states per location:     347 (at node N1194)
  Number of reached functions:   33 (32%)
  Number of partitions:          13266
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1257 (before lines 3493-3497), Function applesmc_create_nodes called from node N1413, stack depth 3 [bbd4791], stack [main, applesmc_init, applesmc_create_nodes]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          5.430s
  Time for loading CPAs:          1.000s
  Time for loading parser:        0.841s
  Time for CFA construction:      3.395s
    Time for parsing file(s):     1.031s
    Time for AST to CFA:          1.101s
    Time for CFA sanity check:    0.181s
    Time for post-processing:     0.873s
      Time for var class.:        0.472s
Time for Analysis:               24.808s
CPU time for analysis:           24.810s
Total time for CPAchecker:       30.243s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.348s

Time for Garbage Collector:       0.410s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     44MB (    42 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
