scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_43v21jq0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3181 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2296 (72%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         885 (28%)
  Times precision was empty:       193 (6%)
  Times precision was {false}:     341 (11%)
  Times result was cached:         2090 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      557 (18%)
  Times result was 'false':        1425 (45%)
Number of strengthen sat checks:   0
Number of coverage checks:         5156
  BDD entailment checks:           1140
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       99
Number of predicates discovered:          8
Number of abstraction locations:          8
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         3607
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 4.02
Number of irrelevant predicates:          1411 (39%)
Number of preds handled by boolean abs:   680 (19%)
  Total number of models for allsat:      383
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.69

Time for post operator:                  5.175s
  Time for path formula creation:        5.029s
Time for strengthen operator:            0.159s
Time for prec operator:                  7.331s
  Time for abstraction:                  7.031s (Max:     0.088s, Count: 3181)
    Boolean abstraction:                 2.771s
    Solving time:                        3.197s (Max:     0.066s)
    Model enumeration time:              0.137s
    Time for BDD construction:           0.061s (Max:     0.008s)
Time for merge operator:                 0.623s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     3.334s

Number of path formula cache hits:   42265 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.150s

Total number of created targets for pointer analysis: 8650
   Number of created targets for uf: *signed_int is 157
   Number of created targets for uf: *unsigned_char is 3
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *unsigned_int is 163
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 73


Number of BDD nodes:                               218
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         898 (count: 6946, min: 0, max: 117, avg: 0.13)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.435s
Automaton transfers with branching:                0
Automaton transfer successors:                        69144 (count: 69144, min: 1, max: 1, avg: 1.00) [1 x 69144]

CPA algorithm statistics
------------------------
Number of iterations:            53787
Max size of waitlist:            38
Average size of waitlist:        30
Number of computed successors:   58387
Max successors for one state:    2
Number of times merged:          2008
Number of times stopped:         2834
Number of times breaked:         80

Total time for CPA algorithm:        18.014s (Max:     0.911s)
  Time for choose from waitlist:      0.116s
  Time for precision adjustment:      8.168s
  Time for transfer relation:         7.526s
  Time for merge operator:            0.834s
  Time for stop operator:             0.237s
  Time for adding to reached set:     0.353s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   80
Avg. length of target path (in blocks):                1223 (count: 80, min: 1, max: 24, avg: 15.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.531s
  Counterexample analysis:                             5.031s (Max:     0.120s, Calls: 80)
    Refinement sat check:                              4.359s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.051s
  ARG update:                                          0.273s

Length of refined path (in blocks):                    1219 (count: 80, min: 1, max: 24, avg: 15.24)
Number of affected states:                              297 (count: 80, min: 0, max: 9, avg: 3.71)
Length (states) of path with itp 'true':                842 (count: 80, min: 0, max: 19, avg: 10.52)
Length (states) of path with itp non-trivial itp:       297 (count: 80, min: 0, max: 9, avg: 3.71)
Length (states) of path with itp 'false':                 2 (count: 80, min: 0, max: 1, avg: 0.03)
Different non-trivial interpolants along paths:           3 (count: 80, min: 0, max: 2, avg: 0.04)
Equal non-trivial interpolants along paths:             216 (count: 80, min: 0, max: 8, avg: 2.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                80
Number of successful refinements:     80
Number of failed refinements:         0
Max. size of reached set before ref.: 21853
Max. size of reached set after ref.:  19729
Avg. size of reached set before ref.: 8510.74
Avg. size of reached set after ref.:  7842.51

Total time for CEGAR algorithm:      24.921s
Time for refinements:                 6.436s
Average time for refinement:          0.080s
Max time for refinement:              0.144s

Code Coverage
-----------------------------
  Function coverage:      0.471
  Visited lines:          788
  Total lines:            1535
  Line coverage:          0.513
  Visited conditions:     104
  Total conditions:       334
  Condition coverage:     0.311

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             670
  Number of reached locations:   398 (19%)
    Avg states per location:     1
    Max states per location:     11 (at node N1171)
  Number of reached functions:   49 (47%)
  Number of partitions:          670
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          5.314s
  Time for loading CPAs:          1.005s
  Time for loading parser:        0.753s
  Time for CFA construction:      3.349s
    Time for parsing file(s):     1.034s
    Time for AST to CFA:          1.107s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.805s
      Time for var class.:        0.442s
Time for Analysis:               24.921s
CPU time for analysis:           24.920s
Total time for CPAchecker:       30.240s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.087s

Time for Garbage Collector:       0.589s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     48MB (    46 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8120MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
