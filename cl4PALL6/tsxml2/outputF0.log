scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-usb-gadget-g_printer-ko--106_1a--2b9ec6c.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kjj4_z6e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2790: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2793: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2796: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3226: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3232: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 3234: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 3235: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 3239: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3333: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3035-3037: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3376: Function pointer *(ep->ops->alloc_request) with type struct usb_request *(*)(struct usb_ep *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3367: Function pointer *(ep->ops->disable) with type int (*)(struct usb_ep *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3358: Function pointer *(ep->ops->enable) with type int (*)(struct usb_ep *, const struct usb_endpoint_descriptor *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3394: Function pointer *(ep->ops->queue) with type int (*)(struct usb_ep *, struct usb_request *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3427: Function pointer *(gadget->ops->set_selfpowered) with type int (*)(struct usb_gadget *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3442: Function pointer *(gadget->ops->vbus_draw) with type int (*)(struct usb_gadget *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undef_ptr to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_chrdev_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3367: Ignoring function call through function pointer *(ep->ops->disable): tmp = (*(ep->ops->disable))(ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3358: Ignoring function call through function pointer *(ep->ops->enable): tmp = (*(ep->ops->enable))(ep, desc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3394: Ignoring function call through function pointer *(ep->ops->queue): tmp = (*(ep->ops->queue))(ep, req, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3265: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3333: Ignoring function call through function pointer *(p->qproc): (*(p->qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3385: Ignoring function call through function pointer *(ep->ops->free_request): (*(ep->ops->free_request))(ep, req); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3953: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(ep->ep_list.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3928: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(ep->ep_list.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3376: Ignoring function call through function pointer *(ep->ops->alloc_request): tmp = (*(ep->ops->alloc_request))(ep, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9295 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6099 (66%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3196 (34%)
  Times precision was empty:       798 (9%)
  Times precision was {false}:     670 (7%)
  Times result was cached:         6408 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1419 (15%)
  Times result was 'false':        3586 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         91823
  BDD entailment checks:           4965
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       187
Number of predicates discovered:          16
Number of abstraction locations:          23
Max number of predicates per location:    14
Avg number of predicates per location:    4
Total predicates per abstraction:         27139
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 12.99
Number of irrelevant predicates:          6875 (25%)
Number of preds handled by boolean abs:   4593 (17%)
  Total number of models for allsat:      1845
  Max number of models for allsat:        22
  Avg number of models for allsat:        1.30

Time for post operator:                 20.293s
  Time for path formula creation:       19.822s
Time for strengthen operator:            0.666s
Time for prec operator:                 57.531s
  Time for abstraction:                 56.759s (Max:     0.498s, Count: 9295)
    Boolean abstraction:                37.082s
    Solving time:                       34.450s (Max:     0.329s)
    Model enumeration time:              6.381s
    Time for BDD construction:           0.133s (Max:     0.006s)
Time for merge operator:                 5.388s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):    40.831s

Number of path formula cache hits:   562336 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.403s

Total number of created targets for pointer analysis: 60944
   Number of created targets for uf: *unsigned_short_int is 16
   Number of created targets for uf: *signed_char is 11
   Number of created targets for uf: *unsigned_char is 361
   Number of created targets for uf: *(struct_list_head)* is 29
   Number of created targets for uf: *(struct_usb_gadget)* is 23
   Number of created targets for uf: *(unsigned_char)* is 33
   Number of created targets for uf: *(struct_usb_ep)* is 21
   Number of created targets for uf: *(struct_usb_request)* is 21
   Number of created targets for uf: *(struct_usb_endpoint_descriptor)* is 65
   Number of created targets for uf: *char is 3265
   Number of created targets for uf: *(struct_device)* is 33
   Number of created targets for uf: *unsigned_long_int is 11


Number of BDD nodes:                               3871
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5052 (count: 19385, min: 0, max: 461, avg: 0.26)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.483s
  Time for transition matches:                         0.781s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.023s
Automaton transfers with branching:                0
Automaton transfer successors:                       629077 (count: 629077, min: 1, max: 1, avg: 1.00) [1 x 629077]

CPA algorithm statistics
------------------------
Number of iterations:            427979
Max size of waitlist:            53
Average size of waitlist:        24
Number of computed successors:   478992
Max successors for one state:    2
Number of times merged:          43429
Number of times stopped:         45856
Number of times breaked:         78

Total time for CPA algorithm:       102.644s (Max:     5.818s)
  Time for choose from waitlist:      0.321s
  Time for precision adjustment:     61.967s
  Time for transfer relation:        29.970s
  Time for merge operator:            6.328s
  Time for stop operator:             0.761s
  Time for adding to reached set:     1.326s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   78
Avg. length of target path (in blocks):                 736 (count: 78, min: 1, max: 24, avg: 9.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.683s
  Counterexample analysis:                            18.575s (Max:     0.625s, Calls: 78)
    Refinement sat check:                             17.051s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.046s
  ARG update:                                          0.868s

Length of refined path (in blocks):                     698 (count: 78, min: 1, max: 24, avg: 8.95)
Number of affected states:                              620 (count: 78, min: 0, max: 23, avg: 7.95)
Length (states) of path with itp 'true':                  0 (count: 78, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       620 (count: 78, min: 0, max: 23, avg: 7.95)
Length (states) of path with itp 'false':                17 (count: 78, min: 0, max: 1, avg: 0.22)
Different non-trivial interpolants along paths:          63 (count: 78, min: 0, max: 10, avg: 0.81)
Equal non-trivial interpolants along paths:             493 (count: 78, min: 0, max: 22, avg: 6.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                78
Number of successful refinements:     78
Number of failed refinements:         0
Max. size of reached set before ref.: 13477
Max. size of reached set after ref.:  208
Avg. size of reached set before ref.: 5451.97
Avg. size of reached set after ref.:  192.29

Total time for CEGAR algorithm:     122.774s
Time for refinements:                20.098s
Average time for refinement:          0.257s
Max time for refinement:              0.649s

Code Coverage
-----------------------------
  Function coverage:      0.870
  Visited lines:          2174
  Total lines:            2347
  Line coverage:          0.926
  Visited conditions:     528
  Total conditions:       614
  Condition coverage:     0.860

CPAchecker general statistics
-----------------------------
Number of program locations:     3194
Number of CFA edges:             3667
Number of relevant variables:    520
Number of functions:             100
Number of loops:                 28
Size of reached set:             19296
  Number of reached locations:   1558 (49%)
    Avg states per location:     12
    Max states per location:     474 (at node N53)
  Number of reached functions:   87 (87%)
  Number of partitions:          19272
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N2392 (before line 5524), Function printer_bind called from node N2602, stack depth 2 [46e434a9], stack [main, printer_bind]])
  Number of target states:       0

Time for analysis setup:          5.984s
  Time for loading CPAs:          1.072s
  Time for loading parser:        0.769s
  Time for CFA construction:      3.955s
    Time for parsing file(s):     1.076s
    Time for AST to CFA:          1.410s
    Time for CFA sanity check:    0.279s
    Time for post-processing:     1.030s
      Time for var class.:        0.514s
Time for Analysis:              122.774s
CPU time for analysis:          122.750s
Time for analyzing result:        0.035s
Total time for CPAchecker:      128.765s
Total CPU time for CPAchecker:  128.720s
Time for statistics:              0.417s

Time for Garbage Collector:       3.961s (in 256 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                149MB (   142 MiB) max;     76MB (    72 MiB) avg;    154MB (   147 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           155MB (   147 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8208MB (  7828 MiB) max;   8158MB (  7780 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
