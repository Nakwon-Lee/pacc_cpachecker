scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-s3c-hwmon-ko--130_7a--af3071a.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wfx0oj24/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function s3c_adc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function s3c_adc_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1144 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            857 (75%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         287 (25%)
  Times precision was empty:       150 (13%)
  Times precision was {false}:     289 (25%)
  Times result was cached:         115 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      590 (52%)
  Times result was 'false':        541 (47%)
Number of strengthen sat checks:   0
Number of coverage checks:         4212
  BDD entailment checks:           1250
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       69
Number of predicates discovered:          24
Number of abstraction locations:          5
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         3800
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 4.32
Number of irrelevant predicates:          927 (24%)
Number of preds handled by boolean abs:   2579 (68%)
  Total number of models for allsat:      1816
  Max number of models for allsat:        36
  Avg number of models for allsat:        3.08

Time for post operator:                  3.110s
  Time for path formula creation:        3.027s
Time for strengthen operator:            0.099s
Time for prec operator:                 16.954s
  Time for abstraction:                 16.789s (Max:     1.173s, Count: 1144)
    Boolean abstraction:                 6.809s
    Solving time:                       11.168s (Max:     1.164s)
    Model enumeration time:              2.488s
    Time for BDD construction:           0.169s (Max:     0.009s)
Time for merge operator:                 0.753s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):    13.656s

Number of path formula cache hits:   15167 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.843s

Total number of created targets for pointer analysis: 4058
   Number of created targets for uf: *signed_int is 1409
   Number of created targets for uf: *(struct_s3c_adc_client)* is 94
   Number of created targets for uf: *(struct_device)* is 94


Number of BDD nodes:                               5143
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2886 (count: 7449, min: 0, max: 427, avg: 0.39)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.380s
Automaton transfers with branching:                0
Automaton transfer successors:                        31159 (count: 31159, min: 1, max: 1, avg: 1.00) [1 x 31159]

CPA algorithm statistics
------------------------
Number of iterations:            22821
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   25186
Max successors for one state:    2
Number of times merged:          1481
Number of times stopped:         1703
Number of times breaked:         33

Total time for CPA algorithm:        23.833s (Max:     2.525s)
  Time for choose from waitlist:      0.065s
  Time for precision adjustment:     17.489s
  Time for transfer relation:         4.578s
  Time for merge operator:            0.910s
  Time for stop operator:             0.162s
  Time for adding to reached set:     0.236s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                 461 (count: 33, min: 3, max: 36, avg: 13.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.153s
  Counterexample analysis:                             1.924s (Max:     0.173s, Calls: 33)
    Refinement sat check:                              1.549s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.013s
  ARG update:                                          0.119s

Length of refined path (in blocks):                     353 (count: 33, min: 2, max: 34, avg: 10.70)
Number of affected states:                              111 (count: 33, min: 1, max: 22, avg: 3.36)
Length (states) of path with itp 'true':                209 (count: 33, min: 0, max: 32, avg: 6.33)
Length (states) of path with itp non-trivial itp:       111 (count: 33, min: 1, max: 22, avg: 3.36)
Length (states) of path with itp 'false':                31 (count: 33, min: 0, max: 1, avg: 0.94)
Different non-trivial interpolants along paths:          64 (count: 33, min: 0, max: 8, avg: 1.94)
Equal non-trivial interpolants along paths:              14 (count: 33, min: 0, max: 13, avg: 0.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 4767
Max. size of reached set after ref.:  4557
Avg. size of reached set before ref.: 1771.36
Avg. size of reached set after ref.:  1214.18

Total time for CEGAR algorithm:      26.287s
Time for refinements:                 2.409s
Average time for refinement:          0.073s
Max time for refinement:              0.186s

Code Coverage
-----------------------------
  Function coverage:      0.793
  Visited lines:          385
  Total lines:            451
  Line coverage:          0.854
  Visited conditions:     48
  Total conditions:       58
  Condition coverage:     0.828

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             640
Number of relevant variables:    90
Number of functions:             29
Number of loops:                 4
Size of reached set:             4556
  Number of reached locations:   212 (35%)
    Avg states per location:     21
    Max states per location:     72 (at node N366)
  Number of reached functions:   23 (79%)
  Number of partitions:          4505
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N226 (before line 1118), Function s3c_hwmon_probe called from node N304, stack depth 2 [72b6fa98], stack [main, s3c_hwmon_probe]])
  Number of target states:       0

Time for analysis setup:          3.522s
  Time for loading CPAs:          0.823s
  Time for loading parser:        0.752s
  Time for CFA construction:      1.766s
    Time for parsing file(s):     0.593s
    Time for AST to CFA:          0.549s
    Time for CFA sanity check:    0.086s
    Time for post-processing:     0.360s
      Time for var class.:        0.144s
Time for Analysis:               26.287s
CPU time for analysis:           26.290s
Time for analyzing result:        0.012s
Total time for CPAchecker:       29.814s
Total CPU time for CPAchecker:   29.810s
Time for statistics:              0.187s

Time for Garbage Collector:       0.290s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     44MB (    42 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8121MB (  7745 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
