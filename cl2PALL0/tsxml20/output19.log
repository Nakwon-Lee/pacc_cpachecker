scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r0r7r_72/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 734: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 892: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 193: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            8 (53%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (47%)
  Times precision was empty:       6 (40%)
  Times precision was {false}:     6 (40%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3 (20%)
  Times result was 'false':        6 (40%)
Number of strengthen sat checks:   0
Number of coverage checks:         211
  BDD entailment checks:           5
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          3
Number of abstraction locations:          2
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         12
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.33
Number of irrelevant predicates:          6 (50%)
Number of preds handled by boolean abs:   6 (50%)
  Total number of models for allsat:      5
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.67

Time for post operator:                  0.425s
  Time for path formula creation:        0.389s
Time for strengthen operator:            0.029s
Time for prec operator:                  0.181s
  Time for abstraction:                  0.136s (Max:     0.024s, Count: 15)
    Boolean abstraction:                 0.021s
    Solving time:                        0.043s (Max:     0.011s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.009s (Max:     0.007s)
Time for merge operator:                 0.074s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.043s

Number of path formula cache hits:   201 (13%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.372s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 72, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.064s
Automaton transfers with branching:                0
Automaton transfer successors:                         1568 (count: 1568, min: 1, max: 1, avg: 1.00) [1 x 1568]

CPA algorithm statistics
------------------------
Number of iterations:            1187
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   1302
Max successors for one state:    2
Number of times merged:          103
Number of times stopped:         106
Number of times breaked:         1

Total time for CPA algorithm:         1.283s (Max:     0.941s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      0.333s
  Time for transfer relation:         0.681s
  Time for merge operator:            0.116s
  Time for stop operator:             0.042s
  Time for adding to reached set:     0.046s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.050s
  Counterexample analysis:                             0.023s (Max:     0.023s, Calls: 1)
    Refinement sat check:                              0.006s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.001s
  ARG update:                                          0.006s

Length of refined path (in blocks):                       2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of affected states:                                1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 1, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 1, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 181
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 181.00
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       1.350s
Time for refinements:                 0.066s
Average time for refinement:          0.066s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.711
  Visited lines:          147
  Total lines:            436
  Line coverage:          0.337
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             1042
  Number of reached locations:   201 (32%)
    Avg states per location:     5
    Max states per location:     24 (at node N444)
  Number of reached functions:   27 (71%)
  Number of partitions:          1041
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N554 (before lines 827-874), Function test called from node N411, stack depth 3 [3c01cfa1], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.441s
  Time for loading CPAs:          0.814s
  Time for loading parser:        0.806s
  Time for CFA construction:      1.621s
    Time for parsing file(s):     0.592s
    Time for AST to CFA:          0.376s
    Time for CFA sanity check:    0.116s
    Time for post-processing:     0.380s
      Time for var class.:        0.177s
Time for Analysis:                1.354s
CPU time for analysis:            1.350s
Time for analyzing result:        0.002s
Total time for CPAchecker:        4.802s
Total CPU time for CPAchecker:    4.790s
Time for statistics:              0.135s

Time for Garbage Collector:       0.114s (in 4 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 48MB (    46 MiB) max;     29MB (    27 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             32MB (    30 MiB) max;     24MB (    22 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    33 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8059MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
