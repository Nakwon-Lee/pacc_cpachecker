scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product03_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_15_bq1j8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 108: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 821: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            8 (53%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (47%)
  Times precision was empty:       3 (20%)
  Times precision was {false}:     6 (40%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6 (40%)
  Times result was 'false':        5 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         93
  BDD entailment checks:           3
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          3
Number of abstraction locations:          3
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         16
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.33
Number of irrelevant predicates:          6 (38%)
Number of preds handled by boolean abs:   10 (63%)
  Total number of models for allsat:      7
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.17

Time for post operator:                  0.157s
  Time for path formula creation:        0.136s
Time for strengthen operator:            0.009s
Time for prec operator:                  0.139s
  Time for abstraction:                  0.125s (Max:     0.022s, Count: 15)
    Boolean abstraction:                 0.044s
    Solving time:                        0.022s (Max:     0.009s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.009s (Max:     0.007s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.022s

Number of path formula cache hits:   335 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.131s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 85, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.027s
Automaton transfers with branching:                0
Automaton transfer successors:                          670 (count: 670, min: 1, max: 1, avg: 1.00) [1 x 670]

CPA algorithm statistics
------------------------
Number of iterations:            496
Max size of waitlist:            6
Average size of waitlist:        2
Number of computed successors:   556
Max successors for one state:    2
Number of times merged:          45
Number of times stopped:         47
Number of times breaked:         2

Total time for CPA algorithm:         0.615s (Max:     0.233s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      0.232s
  Time for transfer relation:         0.303s
  Time for merge operator:            0.028s
  Time for stop operator:             0.002s
  Time for adding to reached set:     0.022s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.051s
  Counterexample analysis:                             0.019s (Max:     0.013s, Calls: 2)
    Refinement sat check:                              0.007s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.001s
  ARG update:                                          0.007s

Length of refined path (in blocks):                       5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of affected states:                                3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 2, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 236
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 158.50
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       0.679s
Time for refinements:                 0.064s
Average time for refinement:          0.032s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.606
  Visited lines:          113
  Total lines:            408
  Line coverage:          0.277
  Visited conditions:     32
  Total conditions:       62
  Condition coverage:     0.516

CPAchecker general statistics
-----------------------------
Number of program locations:     576
Number of CFA edges:             615
Number of relevant variables:    103
Number of functions:             33
Number of loops:                 5
Size of reached set:             252
  Number of reached locations:   153 (27%)
    Avg states per location:     1
    Max states per location:     3 (at node N0)
  Number of reached functions:   20 (61%)
  Number of partitions:          252
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.220s
  Time for loading CPAs:          0.857s
  Time for loading parser:        0.730s
  Time for CFA construction:      1.468s
    Time for parsing file(s):     0.540s
    Time for AST to CFA:          0.362s
    Time for CFA sanity check:    0.103s
    Time for post-processing:     0.308s
      Time for var class.:        0.119s
Time for Analysis:                0.679s
CPU time for analysis:            0.680s
Time for analyzing result:        0.002s
Total time for CPAchecker:        3.905s
Total CPU time for CPAchecker:    3.900s
Time for statistics:              0.097s

Time for Garbage Collector:       0.112s (in 4 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 48MB (    45 MiB) max;     27MB (    26 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             30MB (    29 MiB) max;     23MB (    22 MiB) avg;     32MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        33MB (    31 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
