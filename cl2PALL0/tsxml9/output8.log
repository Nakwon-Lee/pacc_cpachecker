scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product60_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hl0av8pj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 989: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 332: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            29 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            15 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (48%)
  Times precision was empty:       3 (10%)
  Times precision was {false}:     18 (62%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (28%)
  Times result was 'false':        16 (55%)
Number of strengthen sat checks:   0
Number of coverage checks:         562
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       73
Number of predicates discovered:          8
Number of abstraction locations:          3
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         60
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 2.31
Number of irrelevant predicates:          18 (30%)
Number of preds handled by boolean abs:   42 (70%)
  Total number of models for allsat:      51
  Max number of models for allsat:        13
  Avg number of models for allsat:        6.38

Time for post operator:                  0.470s
  Time for path formula creation:        0.446s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.425s
  Time for abstraction:                  0.394s (Max:     0.036s, Count: 29)
    Boolean abstraction:                 0.111s
    Solving time:                        0.130s (Max:     0.013s)
    Model enumeration time:              0.046s
    Time for BDD construction:           0.021s (Max:     0.014s)
Time for merge operator:                 0.073s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.176s

Number of path formula cache hits:   1952 (51%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.422s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               359
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         166 (count: 240, min: 0, max: 166, avg: 0.69)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.081s
Automaton transfers with branching:                0
Automaton transfer successors:                         3717 (count: 3717, min: 1, max: 1, avg: 1.00) [1 x 3717]

CPA algorithm statistics
------------------------
Number of iterations:            2854
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   3156
Max successors for one state:    2
Number of times merged:          277
Number of times stopped:         278
Number of times breaked:         3

Total time for CPA algorithm:         1.942s (Max:     0.610s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      0.587s
  Time for transfer relation:         0.949s
  Time for merge operator:            0.160s
  Time for stop operator:             0.034s
  Time for adding to reached set:     0.059s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   8 (count: 3, min: 2, max: 3, avg: 2.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.126s
  Counterexample analysis:                             0.071s (Max:     0.034s, Calls: 3)
    Refinement sat check:                              0.059s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.001s
  ARG update:                                          0.025s

Length of refined path (in blocks):                       7 (count: 3, min: 2, max: 3, avg: 2.33)
Number of affected states:                                4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'false':                 1 (count: 3, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:           1 (count: 3, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 848
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 561.00
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       2.098s
Time for refinements:                 0.156s
Average time for refinement:          0.052s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.750
  Visited lines:          153
  Total lines:            451
  Line coverage:          0.339
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     652
Number of CFA edges:             703
Number of relevant variables:    121
Number of functions:             40
Number of loops:                 5
Size of reached set:             1264
  Number of reached locations:   204 (31%)
    Avg states per location:     6
    Max states per location:     24 (at node N423)
  Number of reached functions:   30 (75%)
  Number of partitions:          1262
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N563 (before lines 840-889), Function test called from node N70, stack depth 3 [732d0d24], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.519s
  Time for loading CPAs:          0.899s
  Time for loading parser:        0.786s
  Time for CFA construction:      1.615s
    Time for parsing file(s):     0.547s
    Time for AST to CFA:          0.417s
    Time for CFA sanity check:    0.109s
    Time for post-processing:     0.329s
      Time for var class.:        0.140s
Time for Analysis:                2.098s
CPU time for analysis:            2.100s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.624s
Total CPU time for CPAchecker:    5.610s
Time for statistics:              0.153s

Time for Garbage Collector:       0.126s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     31MB (    29 MiB) avg;     61MB (    58 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
