scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product49_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lk1klsf6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 165: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 174: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 397: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 931: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (48%)
  Times precision was empty:       4 (12%)
  Times precision was {false}:     18 (55%)
  Times result was cached:         4 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7 (21%)
  Times result was 'false':        17 (52%)
Number of strengthen sat checks:   0
Number of coverage checks:         587
  BDD entailment checks:           7
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          12
Number of abstraction locations:          3
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         81
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 3.24
Number of irrelevant predicates:          20 (25%)
Number of preds handled by boolean abs:   51 (63%)
  Total number of models for allsat:      21
  Max number of models for allsat:        6
  Avg number of models for allsat:        3.00

Time for post operator:                  0.453s
  Time for path formula creation:        0.414s
Time for strengthen operator:            0.020s
Time for prec operator:                  0.463s
  Time for abstraction:                  0.418s (Max:     0.032s, Count: 33)
    Boolean abstraction:                 0.075s
    Solving time:                        0.120s (Max:     0.015s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.022s (Max:     0.011s)
Time for merge operator:                 0.057s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.128s

Number of path formula cache hits:   2197 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.386s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               431
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         132 (count: 237, min: 0, max: 132, avg: 0.56)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.098s
Automaton transfers with branching:                0
Automaton transfer successors:                         3690 (count: 3690, min: 1, max: 1, avg: 1.00) [1 x 3690]

CPA algorithm statistics
------------------------
Number of iterations:            2844
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   3167
Max successors for one state:    2
Number of times merged:          290
Number of times stopped:         291
Number of times breaked:         4

Total time for CPA algorithm:         1.949s (Max:     0.600s)
  Time for choose from waitlist:      0.022s
  Time for precision adjustment:      0.669s
  Time for transfer relation:         0.910s
  Time for merge operator:            0.094s
  Time for stop operator:             0.031s
  Time for adding to reached set:     0.086s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  11 (count: 4, min: 2, max: 4, avg: 2.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.159s
  Counterexample analysis:                             0.080s (Max:     0.051s, Calls: 4)
    Refinement sat check:                              0.048s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.005s
  ARG update:                                          0.027s

Length of refined path (in blocks):                      10 (count: 4, min: 2, max: 4, avg: 2.50)
Number of affected states:                                6 (count: 4, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         6 (count: 4, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           2 (count: 4, min: 0, max: 2, avg: 0.50)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1102
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 560.00
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       2.131s
Time for refinements:                 0.182s
Average time for refinement:          0.045s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          142
  Total lines:            446
  Line coverage:          0.318
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     642
Number of CFA edges:             691
Number of relevant variables:    117
Number of functions:             39
Number of loops:                 5
Size of reached set:             748
  Number of reached locations:   188 (29%)
    Avg states per location:     3
    Max states per location:     16 (at node N14)
  Number of reached functions:   27 (69%)
  Number of partitions:          747
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N130 (before lines 265-310), Function test called from node N284, stack depth 3 [50dfbc58], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.618s
  Time for loading CPAs:          0.764s
  Time for loading parser:        0.928s
  Time for CFA construction:      1.725s
    Time for parsing file(s):     0.598s
    Time for AST to CFA:          0.422s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.393s
      Time for var class.:        0.180s
Time for Analysis:                2.132s
CPU time for analysis:            2.130s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.755s
Total CPU time for CPAchecker:    5.740s
Time for statistics:              0.110s

Time for Garbage Collector:       0.131s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     31MB (    29 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     24MB (    23 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8065MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
