scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main3_true-unreach-call_drivers-staging-usbip-vhci-hcd-ko--132_1a--927c3fa-1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zs2jlgn7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4714: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4717: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4720: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4741: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4744: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4747: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5344: Dead code detected: priv = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 5496: Dead code detected: unlink = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6491: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6497: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 6499: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6500: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 6504: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 7845: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6300-6305: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_poll_rh_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_event_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_stop_eh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_task_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_start_eh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1212 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1132 (93%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         80 (7%)
  Times precision was empty:       135 (11%)
  Times precision was {false}:     207 (17%)
  Times result was cached:         472 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      398 (33%)
  Times result was 'false':        312 (26%)
Number of strengthen sat checks:   0
Number of coverage checks:         9951
  BDD entailment checks:           1657
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       137
Number of predicates discovered:          20
Number of abstraction locations:          9
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         4110
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 6.79
Number of irrelevant predicates:          1713 (42%)
Number of preds handled by boolean abs:   1564 (38%)
  Total number of models for allsat:      1034
  Max number of models for allsat:        9
  Avg number of models for allsat:        2.60

Time for post operator:                  5.268s
  Time for path formula creation:        5.096s
Time for strengthen operator:            0.165s
Time for prec operator:                  7.130s
  Time for abstraction:                  6.751s (Max:     0.461s, Count: 1212)
    Boolean abstraction:                 3.104s
    Solving time:                        3.580s (Max:     0.267s)
    Model enumeration time:              0.519s
    Time for BDD construction:           0.107s (Max:     0.008s)
Time for merge operator:                 1.098s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     4.108s

Number of path formula cache hits:   44472 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.385s

Total number of created targets for pointer analysis: 2066
   Number of created targets for uf: *(struct_urb)* is 9
   Number of created targets for uf: *(struct_list_head)* is 73
   Number of created targets for uf: *unsigned_int is 145
   Number of created targets for uf: *unsigned_long_int is 4
   Number of created targets for uf: *(struct_vhci_device)* is 9


Number of BDD nodes:                               1226
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1443 (count: 5681, min: 0, max: 227, avg: 0.25)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.447s
Automaton transfers with branching:                0
Automaton transfer successors:                        68860 (count: 68860, min: 1, max: 1, avg: 1.00) [1 x 68860]

CPA algorithm statistics
------------------------
Number of iterations:            44042
Max size of waitlist:            32
Average size of waitlist:        15
Number of computed successors:   49489
Max successors for one state:    2
Number of times merged:          4147
Number of times stopped:         4434
Number of times breaked:         49

Total time for CPA algorithm:        19.122s (Max:     2.949s)
  Time for choose from waitlist:      0.126s
  Time for precision adjustment:      8.141s
  Time for transfer relation:         8.041s
  Time for merge operator:            1.374s
  Time for stop operator:             0.226s
  Time for adding to reached set:     0.405s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                 460 (count: 49, min: 1, max: 19, avg: 9.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.051s
  Counterexample analysis:                             2.589s (Max:     0.146s, Calls: 49)
    Refinement sat check:                              2.150s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.042s
  ARG update:                                          0.288s

Length of refined path (in blocks):                     344 (count: 49, min: 1, max: 12, avg: 7.02)
Number of affected states:                              200 (count: 49, min: 0, max: 11, avg: 4.08)
Length (states) of path with itp 'true':                 95 (count: 49, min: 0, max: 4, avg: 1.94)
Length (states) of path with itp non-trivial itp:       200 (count: 49, min: 0, max: 11, avg: 4.08)
Length (states) of path with itp 'false':                42 (count: 49, min: 0, max: 1, avg: 0.86)
Different non-trivial interpolants along paths:         135 (count: 49, min: 0, max: 7, avg: 2.76)
Equal non-trivial interpolants along paths:              18 (count: 49, min: 0, max: 10, avg: 0.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 7162
Max. size of reached set after ref.:  6545
Avg. size of reached set before ref.: 5592.02
Avg. size of reached set after ref.:  4807.10

Total time for CEGAR algorithm:      23.134s
Time for refinements:                 3.761s
Average time for refinement:          0.076s
Max time for refinement:              0.202s

Code Coverage
-----------------------------
  Function coverage:      0.505
  Visited lines:          1816
  Total lines:            2864
  Line coverage:          0.634
  Visited conditions:     328
  Total conditions:       626
  Condition coverage:     0.524

CPAchecker general statistics
-----------------------------
Number of program locations:     3777
Number of CFA edges:             4313
Number of relevant variables:    466
Number of functions:             95
Number of loops:                 23
Size of reached set:             6282
  Number of reached locations:   1060 (28%)
    Avg states per location:     5
    Max states per location:     145 (at node N0)
  Number of reached functions:   48 (51%)
  Number of partitions:          6249
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N2620 (before line 7781), Function vhci_stop called from node N2981, stack depth 2 [63c4f778], stack [main, vhci_stop]])
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          7.112s
  Time for loading CPAs:          1.067s
  Time for loading parser:        0.855s
  Time for CFA construction:      5.022s
    Time for parsing file(s):     1.342s
    Time for AST to CFA:          1.846s
    Time for CFA sanity check:    0.398s
    Time for post-processing:     1.207s
      Time for var class.:        0.539s
Time for Analysis:               23.134s
CPU time for analysis:           23.140s
Total time for CPAchecker:       30.254s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.290s

Time for Garbage Collector:       0.582s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    75 MiB) max;     49MB (    47 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8117MB (  7741 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
