scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_fib_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hah8j6o0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 825: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 904: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 910: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            50 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            43 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (14%)
  Times precision was empty:       21 (42%)
  Times precision was {false}:     16 (32%)
  Times result was cached:         6 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7 (14%)
  Times result was 'false':        10 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         1036
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       332
Number of predicates discovered:          3
Number of abstraction locations:          5
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         31
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.35
Number of irrelevant predicates:          22 (71%)
Number of preds handled by boolean abs:   7 (23%)
  Total number of models for allsat:      10
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.43

Time for post operator:                  2.012s
  Time for path formula creation:        1.982s
Time for strengthen operator:            0.030s
Time for prec operator:                 21.741s
  Time for abstraction:                 21.677s (Max:    10.469s, Count: 50)
    Boolean abstraction:                 0.072s
    Solving time:                       20.649s (Max:    10.391s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.005s (Max:     0.005s)
Time for merge operator:                 0.309s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):    20.666s

Number of path formula cache hits:   2613 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.898s

Total number of created targets for pointer analysis: 11685
   Number of created targets for uf: *signed_int is 70
   Number of created targets for uf: *unsigned_char is 127
   Number of created targets for uf: *(unsigned_char)* is 109
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 61


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          19 (count: 159, min: 0, max: 12, avg: 0.12)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.136s
Automaton transfers with branching:                0
Automaton transfer successors:                         5565 (count: 5565, min: 1, max: 1, avg: 1.00) [1 x 5565]

CPA algorithm statistics
------------------------
Number of iterations:            3138
Max size of waitlist:            48
Average size of waitlist:        10
Number of computed successors:   3858
Max successors for one state:    2
Number of times merged:          514
Number of times stopped:         518
Number of times breaked:         4

Total time for CPA algorithm:        25.152s (Max:    15.514s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:     21.917s
  Time for transfer relation:         2.579s
  Time for merge operator:            0.409s
  Time for stop operator:             0.032s
  Time for adding to reached set:     0.056s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  12 (count: 4, min: 2, max: 4, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.911s
  Counterexample analysis:                             0.844s (Max:     0.282s, Calls: 4)
    Refinement sat check:                              0.780s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.003s
  ARG update:                                          0.039s

Length of refined path (in blocks):                       9 (count: 4, min: 2, max: 3, avg: 2.25)
Number of affected states:                                4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  1 (count: 4, min: 0, max: 1, avg: 0.25)
Length (states) of path with itp non-trivial itp:         4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 3 (count: 4, min: 0, max: 1, avg: 0.75)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 985
Max. size of reached set after ref.:  491
Avg. size of reached set before ref.: 761.75
Avg. size of reached set after ref.:  125.00

Total time for CEGAR algorithm:      26.112s
Time for refinements:                 0.959s
Average time for refinement:          0.239s
Max time for refinement:              0.355s

Code Coverage
-----------------------------
  Function coverage:      0.389
  Visited lines:          298
  Total lines:            363
  Line coverage:          0.821
  Visited conditions:     137
  Total conditions:       198
  Condition coverage:     0.692

CPAchecker general statistics
-----------------------------
Number of program locations:     721
Number of CFA edges:             785
Number of relevant variables:    51
Number of functions:             18
Number of loops:                 6
Size of reached set:             783
  Number of reached locations:   201 (28%)
    Avg states per location:     3
    Max states per location:     32 (at node N8)
  Number of reached functions:   7 (39%)
  Number of partitions:          781
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N281 (before line 841), Function main called from node N272, stack depth 1 [ab7395e], stack [main]])
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          3.651s
  Time for loading CPAs:          0.742s
  Time for loading parser:        0.798s
  Time for CFA construction:      1.885s
    Time for parsing file(s):     0.570s
    Time for AST to CFA:          0.599s
    Time for CFA sanity check:    0.094s
    Time for post-processing:     0.473s
      Time for var class.:        0.190s
Time for Analysis:               26.112s
CPU time for analysis:           26.120s
Total time for CPAchecker:       29.776s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.092s

Time for Garbage Collector:       0.164s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     39MB (    37 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     32MB (    30 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8199MB (  7819 MiB) max;   8146MB (  7768 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
