scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y6ni0d22/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1760: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2323: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3058: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3113: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3279: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            126 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            70 (56%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         56 (44%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     55 (44%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      68 (54%)
  Times result was 'false':        47 (37%)
Number of strengthen sat checks:   0
Number of coverage checks:         197137
  BDD entailment checks:           333
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1091
Number of predicates discovered:          76
Number of abstraction locations:          2
Max number of predicates per location:    75
Avg number of predicates per location:    38
Total predicates per abstraction:         2805
Max number of predicates per abstraction: 75
Avg number of predicates per abstraction: 22.80
Number of irrelevant predicates:          55 (2%)
Number of preds handled by boolean abs:   2750 (98%)
  Total number of models for allsat:      27684
  Max number of models for allsat:        4100
  Avg number of models for allsat:        407.12

Time for post operator:                  6.875s
  Time for path formula creation:        6.451s
Time for strengthen operator:            0.657s
Time for prec operator:                864.049s
  Time for abstraction:                863.531s (Max:   142.268s, Count: 126)
    Boolean abstraction:               859.077s
    Solving time:                       18.594s (Max:     0.523s)
    Model enumeration time:            832.027s
    Time for BDD construction:           8.723s (Max:     1.447s)
Time for merge operator:                 1.700s
Time for coverage check:                 0.106s
  Time for BDD entailment checks:        0.080s
Total time for SMT solver (w/o itp):   850.622s

Number of path formula cache hits:   437785 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.815s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               24865
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       93295 (count: 38669, min: 0, max: 9571, avg: 2.41)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.258s (in 44 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.986s
  Time for transition matches:                         0.544s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       482261 (count: 482261, min: 1, max: 1, avg: 1.00) [1 x 482261]

CPA algorithm statistics
------------------------
Number of iterations:            354870
Max size of waitlist:            30
Average size of waitlist:        14
Number of computed successors:   453389
Max successors for one state:    2
Number of times merged:          98402
Number of times stopped:         98411
Number of times breaked:         9

Total time for CPA algorithm:       888.532s (Max:   521.375s)
  Time for choose from waitlist:      0.268s
  Time for precision adjustment:    867.870s
  Time for transfer relation:        13.654s
  Time for merge operator:            3.313s
  Time for stop operator:             0.646s
  Time for adding to reached set:     0.950s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  24 (count: 9, min: 2, max: 4, avg: 2.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.111s
  Counterexample analysis:                             6.080s (Max:     1.929s, Calls: 9)
    Refinement sat check:                              5.511s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.004s
  ARG update:                                          0.840s

Length of refined path (in blocks):                      24 (count: 9, min: 2, max: 4, avg: 2.67)
Number of affected states:                               15 (count: 9, min: 1, max: 3, avg: 1.67)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        15 (count: 9, min: 1, max: 3, avg: 1.67)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           6 (count: 9, min: 0, max: 2, avg: 0.67)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 87295
Max. size of reached set after ref.:  5840
Avg. size of reached set before ref.: 36234.22
Avg. size of reached set after ref.:  5840.00

Total time for CEGAR algorithm:     896.201s
Time for refinements:                 7.609s
Average time for refinement:          0.845s
Max time for refinement:              2.187s

Code Coverage
-----------------------------
  Function coverage:      0.615
  Visited lines:          1087
  Total lines:            1762
  Line coverage:          0.617
  Visited conditions:     618
  Total conditions:       762
  Condition coverage:     0.811

CPAchecker general statistics
-----------------------------
Number of program locations:     2312
Number of CFA edges:             2814
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             81383
  Number of reached locations:   1200 (52%)
    Avg states per location:     67
    Max states per location:     975 (at node N39)
  Number of reached functions:   48 (62%)
  Number of partitions:          81371
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N1004 (before lines 1256-1284), Function cleanup called from node N2753, stack depth 4 [6831d8fd], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          4.114s
  Time for loading CPAs:          0.887s
  Time for loading parser:        0.703s
  Time for CFA construction:      2.349s
    Time for parsing file(s):     0.669s
    Time for AST to CFA:          0.663s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     0.560s
      Time for var class.:        0.325s
Time for Analysis:              896.201s
CPU time for analysis:          896.170s
Total time for CPAchecker:      900.320s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              1.035s

Time for Garbage Collector:       3.979s (in 115 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                237MB (   226 MiB) max;    145MB (   139 MiB) avg;    241MB (   230 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    33 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           239MB (   228 MiB) max;    226MB (   216 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8240MB (  7858 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
