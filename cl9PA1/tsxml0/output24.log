scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-acceleration/diamond_true-unreach-call1_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sw8ob26l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1020 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  497 (49%)
  Because of loop head:            510 (50%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (1%)
  Times precision was empty:       16 (2%)
  Times precision was {false}:     496 (49%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      508 (50%)
  Times result was 'false':        419 (41%)
Number of strengthen sat checks:   0
Number of coverage checks:         20189
  BDD entailment checks:           19195
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3
Number of predicates discovered:          159
Number of abstraction locations:          2
Max number of predicates per location:    158
Avg number of predicates per location:    79
Total predicates per abstraction:         56323
Max number of predicates per abstraction: 158
Avg number of predicates per abstraction: 56.10
Number of irrelevant predicates:          496 (1%)
Number of preds handled by boolean abs:   55827 (99%)
  Total number of models for allsat:      40440
  Max number of models for allsat:        497
  Avg number of models for allsat:        79.61

Time for post operator:                  0.343s
  Time for path formula creation:        0.320s
Time for strengthen operator:            0.008s
Time for prec operator:                 25.315s
  Time for abstraction:                 25.219s (Max:     0.295s, Count: 1020)
    Boolean abstraction:                18.774s
    Solving time:                        6.302s (Max:     0.029s)
    Model enumeration time:              7.948s
    Time for BDD construction:           5.658s (Max:     0.193s)
Time for merge operator:                 0.008s
Time for coverage check:                 0.216s
  Time for BDD entailment checks:        0.214s
Total time for SMT solver (w/o itp):    14.250s

Number of path formula cache hits:   5597 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.342s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               120275
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      167445 (count: 93135, min: 0, max: 8390, avg: 1.80)
Time for BDD node cleanup:                             0.044s
Time for BDD garbage collection:                       0.199s (in 18 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.083s
Automaton transfers with branching:                0
Automaton transfer successors:                         6051 (count: 6051, min: 1, max: 1, avg: 1.00) [1 x 6051]

CPA algorithm statistics
------------------------
Number of iterations:            4043
Max size of waitlist:            26
Average size of waitlist:        3
Number of computed successors:   5050
Max successors for one state:    2
Number of times merged:          497
Number of times stopped:         509
Number of times breaked:         13

Total time for CPA algorithm:        26.530s (Max:     9.701s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:     25.452s
  Time for transfer relation:         0.623s
  Time for merge operator:            0.057s
  Time for stop operator:             0.266s
  Time for adding to reached set:     0.038s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 523 (count: 13, min: 3, max: 102, avg: 40.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.600s
  Counterexample analysis:                             1.170s (Max:     0.506s, Calls: 13)
    Refinement sat check:                              0.159s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.284s
  Predicate creation:                                  0.109s
  Precision update:                                    0.005s
  ARG update:                                          0.025s

Length of refined path (in blocks):                     409 (count: 12, min: 2, max: 100, avg: 34.08)
Number of affected states:                              397 (count: 12, min: 1, max: 99, avg: 33.08)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       397 (count: 12, min: 1, max: 99, avg: 33.08)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         385 (count: 12, min: 0, max: 98, avg: 32.08)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 810
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 319.92
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      28.165s
Time for refinements:                 1.634s
Average time for refinement:          0.125s
Max time for refinement:              0.534s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          9
  Total lines:            10
  Line coverage:          0.900
  Visited conditions:     6
  Total conditions:       6
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     29
Number of CFA edges:             31
Number of relevant variables:    4
Number of functions:             2
Number of loops:                 1
Size of reached set:             810
  Number of reached locations:   17 (59%)
    Avg states per location:     47
    Max states per location:     100 (at node N14)
  Number of reached functions:   2 (100%)
  Number of partitions:          711
    Avg size of partitions:      1
    Max size of partitions:      100 (with key [N14 (before line 12), Function main called from node N9, stack depth 1 [4b0d79fc], stack [main]])
  Number of target states:       1
  Size of final wait list        3

Time for analysis setup:          1.534s
  Time for loading CPAs:          0.486s
  Time for loading parser:        0.471s
  Time for CFA construction:      0.494s
    Time for parsing file(s):     0.189s
    Time for AST to CFA:          0.116s
    Time for CFA sanity check:    0.018s
    Time for post-processing:     0.062s
      Time for var class.:        0.021s
Time for Analysis:               28.166s
CPU time for analysis:           28.160s
Time for analyzing result:        0.000s
Total time for CPAchecker:       29.703s
Total CPU time for CPAchecker:   29.690s
Time for statistics:              0.087s

Time for Garbage Collector:       0.327s (in 68 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     43MB (    41 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     31MB (    30 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8105MB (  7729 MiB) max;   8014MB (  7642 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 5) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
