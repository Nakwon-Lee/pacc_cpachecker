scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-lit/gsv2008_true-unreach-call_true-termination.c.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ewyyhuyx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            287 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  132 (46%)
  Because of loop head:            89 (31%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (23%)
  Times precision was empty:       60 (21%)
  Times precision was {false}:     4 (1%)
  Times result was cached:         63 (22%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      160 (56%)
  Times result was 'false':        66 (23%)
Number of strengthen sat checks:   0
Number of coverage checks:         399
  BDD entailment checks:           397
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       6
Number of predicates discovered:          14
Number of abstraction locations:          3
Max number of predicates per location:    12
Avg number of predicates per location:    5
Total predicates per abstraction:         921
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 5.62
Number of irrelevant predicates:          140 (15%)
Number of preds handled by boolean abs:   780 (85%)
  Total number of models for allsat:      849
  Max number of models for allsat:        19
  Avg number of models for allsat:        5.31

Time for post operator:                  0.130s
  Time for path formula creation:        0.119s
Time for strengthen operator:            0.016s
Time for prec operator:                  1.773s
  Time for abstraction:                  1.721s (Max:     0.036s, Count: 287)
    Boolean abstraction:                 0.940s
    Solving time:                        0.353s (Max:     0.014s)
    Model enumeration time:              0.293s
    Time for BDD construction:           0.141s (Max:     0.010s)
Time for merge operator:                 0.003s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.646s

Number of path formula cache hits:   1090 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.102s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5346
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3489 (count: 3014, min: 0, max: 3489, avg: 1.16)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.063s
Automaton transfers with branching:                0
Automaton transfer successors:                         1094 (count: 1094, min: 1, max: 1, avg: 1.00) [1 x 1094]

CPA algorithm statistics
------------------------
Number of iterations:            720
Max size of waitlist:            3
Average size of waitlist:        2
Number of computed successors:   854
Max successors for one state:    2
Number of times merged:          1
Number of times stopped:         49
Number of times breaked:         11

Total time for CPA algorithm:         2.366s (Max:     0.387s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      1.893s
  Time for transfer relation:         0.324s
  Time for merge operator:            0.010s
  Time for stop operator:             0.057s
  Time for adding to reached set:     0.019s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  88 (count: 11, min: 3, max: 13, avg: 8.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.203s
  Counterexample analysis:                             0.125s (Max:     0.020s, Calls: 11)
    Refinement sat check:                              0.049s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.011s
  ARG update:                                          0.016s

Length of refined path (in blocks):                      87 (count: 11, min: 2, max: 13, avg: 7.91)
Number of affected states:                               76 (count: 11, min: 1, max: 12, avg: 6.91)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        76 (count: 11, min: 1, max: 12, avg: 6.91)
Length (states) of path with itp 'false':                 1 (count: 11, min: 0, max: 1, avg: 0.09)
Different non-trivial interpolants along paths:          65 (count: 11, min: 0, max: 11, avg: 5.91)
Equal non-trivial interpolants along paths:               0 (count: 11, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 114
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 64.00
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:       2.646s
Time for refinements:                 0.280s
Average time for refinement:          0.025s
Max time for refinement:              0.097s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          12
  Total lines:            12
  Line coverage:          1.000
  Visited conditions:     8
  Total conditions:       8
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     31
Number of CFA edges:             34
Number of relevant variables:    4
Number of functions:             2
Number of loops:                 1
Size of reached set:             113
  Number of reached locations:   18 (58%)
    Avg states per location:     6
    Max states per location:     11 (at node N19)
  Number of reached functions:   2 (100%)
  Number of partitions:          103
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N19 (before line 15), Function main called from node N9, stack depth 1 [d9345cd], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.407s
  Time for loading CPAs:          0.807s
  Time for loading parser:        0.645s
  Time for CFA construction:      0.824s
    Time for parsing file(s):     0.326s
    Time for AST to CFA:          0.202s
    Time for CFA sanity check:    0.011s
    Time for post-processing:     0.123s
      Time for var class.:        0.041s
Time for Analysis:                2.646s
CPU time for analysis:            2.650s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.060s
Total CPU time for CPAchecker:    5.060s
Time for statistics:              0.060s

Time for Garbage Collector:       0.092s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     31MB (    30 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             30MB (    29 MiB) max;     25MB (    23 MiB) avg;     32MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        33MB (    32 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8032MB (  7660 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
