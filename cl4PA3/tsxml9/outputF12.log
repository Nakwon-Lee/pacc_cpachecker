scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-lit/gsv2008_true-unreach-call_true-termination.c.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vuyaffhs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            377 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  177 (47%)
  Because of loop head:            134 (36%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (18%)
  Times precision was empty:       60 (16%)
  Times precision was {false}:     4 (1%)
  Times result was cached:         63 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      250 (66%)
  Times result was 'false':        66 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         939
  BDD entailment checks:           937
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       6
Number of predicates discovered:          14
Number of abstraction locations:          3
Max number of predicates per location:    12
Avg number of predicates per location:    5
Total predicates per abstraction:         1385
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 5.45
Number of irrelevant predicates:          185 (13%)
Number of preds handled by boolean abs:   1199 (87%)
  Total number of models for allsat:      1695
  Max number of models for allsat:        36
  Avg number of models for allsat:        6.78

Time for post operator:                  0.151s
  Time for path formula creation:        0.139s
Time for strengthen operator:            0.023s
Time for prec operator:                  2.416s
  Time for abstraction:                  2.337s (Max:     0.031s, Count: 377)
    Boolean abstraction:                 1.402s
    Solving time:                        0.579s (Max:     0.016s)
    Model enumeration time:              0.561s
    Time for BDD construction:           0.114s (Max:     0.008s)
Time for merge operator:                 0.001s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     1.140s

Number of path formula cache hits:   1441 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.108s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8479
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2940 (count: 4627, min: 0, max: 2940, avg: 0.64)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.064s
Automaton transfers with branching:                0
Automaton transfer successors:                         1445 (count: 1445, min: 1, max: 1, avg: 1.00) [1 x 1445]

CPA algorithm statistics
------------------------
Number of iterations:            882
Max size of waitlist:            20
Average size of waitlist:        8
Number of computed successors:   1070
Max successors for one state:    2
Number of times merged:          1
Number of times stopped:         58
Number of times breaked:         11

Total time for CPA algorithm:         3.065s (Max:     0.505s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      2.487s
  Time for transfer relation:         0.407s
  Time for merge operator:            0.032s
  Time for stop operator:             0.047s
  Time for adding to reached set:     0.040s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  88 (count: 11, min: 3, max: 13, avg: 8.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.181s
  Counterexample analysis:                             0.113s (Max:     0.015s, Calls: 11)
    Refinement sat check:                              0.049s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.003s
  ARG update:                                          0.013s

Length of refined path (in blocks):                      87 (count: 11, min: 2, max: 13, avg: 7.91)
Number of affected states:                               76 (count: 11, min: 1, max: 12, avg: 6.91)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        76 (count: 11, min: 1, max: 12, avg: 6.91)
Length (states) of path with itp 'false':                 1 (count: 11, min: 0, max: 1, avg: 0.09)
Different non-trivial interpolants along paths:          65 (count: 11, min: 0, max: 11, avg: 5.91)
Equal non-trivial interpolants along paths:               0 (count: 11, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 157
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 82.82
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:       3.318s
Time for refinements:                 0.252s
Average time for refinement:          0.022s
Max time for refinement:              0.087s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          12
  Total lines:            12
  Line coverage:          1.000
  Visited conditions:     8
  Total conditions:       8
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     31
Number of CFA edges:             34
Number of relevant variables:    4
Number of functions:             2
Number of loops:                 1
Size of reached set:             113
  Number of reached locations:   18 (58%)
    Avg states per location:     6
    Max states per location:     11 (at node N19)
  Number of reached functions:   2 (100%)
  Number of partitions:          103
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N19 (before line 15), Function main called from node N9, stack depth 1 [d9345cd], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.237s
  Time for loading CPAs:          0.711s
  Time for loading parser:        0.689s
  Time for CFA construction:      0.724s
    Time for parsing file(s):     0.355s
    Time for AST to CFA:          0.115s
    Time for CFA sanity check:    0.012s
    Time for post-processing:     0.097s
      Time for var class.:        0.035s
Time for Analysis:                3.318s
CPU time for analysis:            3.320s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.560s
Total CPU time for CPAchecker:    5.560s
Time for statistics:              0.058s

Time for Garbage Collector:       0.084s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     33MB (    31 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             31MB (    30 MiB) max;     25MB (    24 MiB) avg;     33MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    32 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8036MB (  7664 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
