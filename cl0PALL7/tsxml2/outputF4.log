scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83792d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_le55_a3e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2326: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            201507 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            176933 (88%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24574 (12%)
  Times precision was empty:       158079 (78%)
  Times precision was {false}:     31157 (15%)
  Times result was cached:         12079 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      192 (0%)
  Times result was 'false':        26926 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         690323
  BDD entailment checks:           263017
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       782
Number of predicates discovered:          68
Number of abstraction locations:          4
Max number of predicates per location:    67
Avg number of predicates per location:    17
Total predicates per abstraction:         295248
Max number of predicates per abstraction: 67
Avg number of predicates per abstraction: 9.42
Number of irrelevant predicates:          288783 (98%)
Number of preds handled by boolean abs:   4545 (2%)
  Total number of models for allsat:      254
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.32

Time for post operator:                 98.256s
  Time for path formula creation:       96.839s
Time for strengthen operator:            3.269s
Time for prec operator:                702.081s
  Time for abstraction:                695.380s (Max:     1.959s, Count: 201507)
    Boolean abstraction:                80.608s
    Solving time:                      561.514s (Max:     0.681s)
    Model enumeration time:             40.639s
    Time for BDD construction:           0.064s (Max:     0.008s)
Time for merge operator:                 6.270s
Time for coverage check:                 0.241s
  Time for BDD entailment checks:        0.178s
Total time for SMT solver (w/o itp):   602.153s

Number of path formula cache hits:   5692332 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.333s

Total number of created targets for pointer analysis: 300116
   Number of created targets for uf: *unsigned_char is 18355


Number of BDD nodes:                               58240
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22501 (count: 613464, min: 0, max: 335, avg: 0.04)
Time for BDD node cleanup:                             0.067s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.649s
  Time for transition matches:                         3.081s
  Time for transition assertions:                      0.018s
  Time for transition actions:                         0.065s
Automaton transfers with branching:                0
Automaton transfer successors:                      5407186 (count: 5407186, min: 1, max: 1, avg: 1.00) [1 x 5407186]

CPA algorithm statistics
------------------------
Number of iterations:            3201063
Max size of waitlist:            354
Average size of waitlist:        175
Number of computed successors:   3535991
Max successors for one state:    2
Number of times merged:          213653
Number of times stopped:         295264
Number of times breaked:         68

Total time for CPA algorithm:       878.468s (Max:    19.929s)
  Time for choose from waitlist:      0.815s
  Time for precision adjustment:    717.790s
  Time for transfer relation:       138.873s
  Time for merge operator:            8.704s
  Time for stop operator:             2.667s
  Time for adding to reached set:     3.560s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   68
Avg. length of target path (in blocks):                 599 (count: 68, min: 2, max: 10, avg: 8.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.627s
  Counterexample analysis:                             6.330s (Max:     0.198s, Calls: 68)
    Refinement sat check:                              5.614s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.017s
  ARG update:                                          7.211s

Length of refined path (in blocks):                     136 (count: 68, min: 2, max: 2, avg: 2.00)
Number of affected states:                               68 (count: 68, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 68, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        68 (count: 68, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                64 (count: 68, min: 0, max: 1, avg: 0.94)
Different non-trivial interpolants along paths:           0 (count: 68, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 68, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                68
Number of successful refinements:     68
Number of failed refinements:         0
Max. size of reached set before ref.: 56110
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 47099.71
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     893.663s
Time for refinements:                15.193s
Average time for refinement:          0.223s
Max time for refinement:              0.633s

Code Coverage
-----------------------------
  Function coverage:      0.630
  Visited lines:          3642
  Total lines:            5131
  Line coverage:          0.710
  Visited conditions:     1044
  Total conditions:       1634
  Condition coverage:     0.639

CPAchecker general statistics
-----------------------------
Number of program locations:     6541
Number of CFA edges:             7688
Number of relevant variables:    1065
Number of functions:             127
Number of loops:                 22
Size of reached set:             11565
  Number of reached locations:   2197 (34%)
    Avg states per location:     5
    Max states per location:     263 (at node N5784)
  Number of reached functions:   80 (63%)
  Number of partitions:          11565
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        137

Time for analysis setup:          6.649s
  Time for loading CPAs:          0.794s
  Time for loading parser:        0.638s
  Time for CFA construction:      5.130s
    Time for parsing file(s):     0.961s
    Time for AST to CFA:          1.342s
    Time for CFA sanity check:    0.401s
    Time for post-processing:     2.211s
      Time for var class.:        0.606s
Time for Analysis:              893.663s
CPU time for analysis:          893.620s
Total time for CPAchecker:      900.316s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              0.355s

Time for Garbage Collector:      23.868s (in 854 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                256MB (   244 MiB) max;    171MB (   163 MiB) avg;    264MB (   252 MiB) peak
Used non-heap memory:             49MB (    46 MiB) max;     39MB (    37 MiB) avg;     49MB (    46 MiB) peak
Allocated heap memory:           261MB (   249 MiB) max;    255MB (   243 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     50MB (    47 MiB) avg
Total process virtual memory:   8673MB (  8271 MiB) max;   8372MB (  7984 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
