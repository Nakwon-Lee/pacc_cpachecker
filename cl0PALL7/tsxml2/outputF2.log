scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83792d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e83sf1_r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2326: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            70620 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            52349 (74%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18271 (26%)
  Times precision was empty:       41924 (59%)
  Times precision was {false}:     23632 (33%)
  Times result was cached:         4988 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      76 (0%)
  Times result was 'false':        18543 (26%)
Number of strengthen sat checks:   0
Number of coverage checks:         269047
  BDD entailment checks:           15387
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       782
Number of predicates discovered:          29
Number of abstraction locations:          3
Max number of predicates per location:    28
Avg number of predicates per location:    10
Total predicates per abstraction:         30142
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 1.27
Number of irrelevant predicates:          28968 (96%)
Number of preds handled by boolean abs:   1174 (4%)
  Total number of models for allsat:      121
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.59

Time for post operator:                 38.215s
  Time for path formula creation:       37.489s
Time for strengthen operator:            1.598s
Time for prec operator:                802.174s
  Time for abstraction:                799.717s (Max:     6.410s, Count: 70620)
    Boolean abstraction:                89.011s
    Solving time:                      655.102s (Max:     1.891s)
    Model enumeration time:             52.990s
    Time for BDD construction:           0.072s (Max:     0.018s)
Time for merge operator:                 8.861s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):   708.096s

Number of path formula cache hits:   2691332 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.562s

Total number of created targets for pointer analysis: 129605
   Number of created targets for uf: *unsigned_char is 39565
   Number of created targets for uf: *signed_long_int is 185
   Number of created targets for uf: *unsigned_long_int is 7379


Number of BDD nodes:                               1380
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3895 (count: 195984, min: 0, max: 140, avg: 0.02)
Time for BDD node cleanup:                             0.038s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.688s
  Time for transition matches:                         1.795s
  Time for transition assertions:                      0.014s
  Time for transition actions:                         0.041s
Automaton transfers with branching:                0
Automaton transfer successors:                      2643353 (count: 2643353, min: 1, max: 1, avg: 1.00) [1 x 2643353]

CPA algorithm statistics
------------------------
Number of iterations:            1453804
Max size of waitlist:            823
Average size of waitlist:        364
Number of computed successors:   1634107
Max successors for one state:    2
Number of times merged:          126830
Number of times stopped:         142124
Number of times breaked:         28

Total time for CPA algorithm:       886.932s (Max:    43.665s)
  Time for choose from waitlist:      0.479s
  Time for precision adjustment:    810.081s
  Time for transfer relation:        59.478s
  Time for merge operator:           10.498s
  Time for stop operator:             1.231s
  Time for adding to reached set:     2.075s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 200 (count: 28, min: 2, max: 8, avg: 7.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.487s
  Counterexample analysis:                             1.581s (Max:     0.110s, Calls: 28)
    Refinement sat check:                              1.381s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.008s
  ARG update:                                          3.849s

Length of refined path (in blocks):                      56 (count: 28, min: 2, max: 2, avg: 2.00)
Number of affected states:                               28 (count: 28, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 28, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        28 (count: 28, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                24 (count: 28, min: 0, max: 1, avg: 0.86)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 28, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 62875
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 52033.25
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     893.598s
Time for refinements:                 6.664s
Average time for refinement:          0.238s
Max time for refinement:              0.596s

Code Coverage
-----------------------------
  Function coverage:      0.701
  Visited lines:          4251
  Total lines:            5131
  Line coverage:          0.828
  Visited conditions:     1394
  Total conditions:       1634
  Condition coverage:     0.853

CPAchecker general statistics
-----------------------------
Number of program locations:     6541
Number of CFA edges:             7688
Number of relevant variables:    1065
Number of functions:             127
Number of loops:                 22
Size of reached set:             16733
  Number of reached locations:   2915 (45%)
    Avg states per location:     5
    Max states per location:     375 (at node N5784)
  Number of reached functions:   89 (70%)
  Number of partitions:          16733
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        215

Time for analysis setup:          6.823s
  Time for loading CPAs:          0.757s
  Time for loading parser:        0.542s
  Time for CFA construction:      5.387s
    Time for parsing file(s):     0.873s
    Time for AST to CFA:          1.288s
    Time for CFA sanity check:    0.358s
    Time for post-processing:     2.687s
      Time for var class.:        0.747s
Time for Analysis:              893.598s
CPU time for analysis:          893.600s
Total time for CPAchecker:      900.425s
Total CPU time for CPAchecker:  900.410s
Time for statistics:              0.397s

Time for Garbage Collector:      14.477s (in 534 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                250MB (   238 MiB) max;    168MB (   160 MiB) avg;    256MB (   245 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     39MB (    37 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           254MB (   242 MiB) max;    248MB (   237 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8505MB (  8111 MiB) max;   8343MB (  7956 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
