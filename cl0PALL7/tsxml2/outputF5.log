scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83792d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_96oxwss4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2326: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            143154 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            115878 (81%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27276 (19%)
  Times precision was empty:       99727 (70%)
  Times precision was {false}:     34720 (24%)
  Times result was cached:         8494 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      213 (0%)
  Times result was 'false':        30139 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         749646
  BDD entailment checks:           275448
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       782
Number of predicates discovered:          75
Number of abstraction locations:          4
Max number of predicates per location:    74
Avg number of predicates per location:    19
Total predicates per abstraction:         351756
Max number of predicates per abstraction: 74
Avg number of predicates per abstraction: 10.07
Number of irrelevant predicates:          343842 (98%)
Number of preds handled by boolean abs:   5539 (2%)
  Total number of models for allsat:      282
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.32

Time for post operator:                 78.881s
  Time for path formula creation:       77.193s
Time for strengthen operator:            2.880s
Time for prec operator:                733.453s
  Time for abstraction:                728.796s (Max:     2.049s, Count: 143154)
    Boolean abstraction:                87.405s
    Solving time:                      588.520s (Max:     0.713s)
    Model enumeration time:             44.893s
    Time for BDD construction:           0.073s (Max:     0.019s)
Time for merge operator:                 6.964s
Time for coverage check:                 0.216s
  Time for BDD entailment checks:        0.166s
Total time for SMT solver (w/o itp):   633.413s

Number of path formula cache hits:   5136668 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.469s

Total number of created targets for pointer analysis: 179366
   Number of created targets for uf: *unsigned_char is 10305


Number of BDD nodes:                               77511
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27450 (count: 590664, min: 0, max: 370, avg: 0.05)
Time for BDD node cleanup:                             0.068s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.669s
  Time for transition matches:                         2.965s
  Time for transition assertions:                      0.019s
  Time for transition actions:                         0.039s
Automaton transfers with branching:                0
Automaton transfer successors:                      4879084 (count: 4879084, min: 1, max: 1, avg: 1.00) [1 x 4879084]

CPA algorithm statistics
------------------------
Number of iterations:            2804378
Max size of waitlist:            246
Average size of waitlist:        160
Number of computed successors:   3135763
Max successors for one state:    2
Number of times merged:          237099
Number of times stopped:         292231
Number of times breaked:         75

Total time for CPA algorithm:       881.037s (Max:    17.633s)
  Time for choose from waitlist:      0.778s
  Time for precision adjustment:    746.817s
  Time for transfer relation:       112.564s
  Time for merge operator:           10.152s
  Time for stop operator:             2.421s
  Time for adding to reached set:     3.150s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   75
Avg. length of target path (in blocks):                 669 (count: 75, min: 2, max: 10, avg: 8.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.240s
  Counterexample analysis:                             6.935s (Max:     0.182s, Calls: 75)
    Refinement sat check:                              6.197s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.029s
  ARG update:                                          5.214s

Length of refined path (in blocks):                     150 (count: 75, min: 2, max: 2, avg: 2.00)
Number of affected states:                               75 (count: 75, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 75, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        75 (count: 75, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                71 (count: 75, min: 0, max: 1, avg: 0.95)
Different non-trivial interpolants along paths:           0 (count: 75, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 75, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                75
Number of successful refinements:     75
Number of failed refinements:         0
Max. size of reached set before ref.: 39284
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 37322.01
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     894.582s
Time for refinements:                13.532s
Average time for refinement:          0.180s
Max time for refinement:              0.442s

Code Coverage
-----------------------------
  Function coverage:      0.701
  Visited lines:          4075
  Total lines:            5131
  Line coverage:          0.794
  Visited conditions:     1284
  Total conditions:       1634
  Condition coverage:     0.786

CPAchecker general statistics
-----------------------------
Number of program locations:     6541
Number of CFA edges:             7688
Number of relevant variables:    1065
Number of functions:             127
Number of loops:                 22
Size of reached set:             14842
  Number of reached locations:   2700 (41%)
    Avg states per location:     5
    Max states per location:     333 (at node N5784)
  Number of reached functions:   89 (70%)
  Number of partitions:          14842
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        153

Time for analysis setup:          5.809s
  Time for loading CPAs:          0.699s
  Time for loading parser:        0.527s
  Time for CFA construction:      4.463s
    Time for parsing file(s):     0.715s
    Time for AST to CFA:          1.121s
    Time for CFA sanity check:    0.338s
    Time for post-processing:     2.146s
      Time for var class.:        0.656s
Time for Analysis:              894.582s
CPU time for analysis:          894.550s
Total time for CPAchecker:      900.394s
Total CPU time for CPAchecker:  900.350s
Time for statistics:              0.255s

Time for Garbage Collector:      19.085s (in 933 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                216MB (   206 MiB) max;    148MB (   141 MiB) avg;    226MB (   215 MiB) peak
Used non-heap memory:             48MB (    45 MiB) max;     39MB (    37 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           231MB (   221 MiB) max;    218MB (   208 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8678MB (  8276 MiB) max;   8399MB (  8010 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
