scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83792d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qpr6ie9l/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2326: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            121718 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            106243 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15475 (13%)
  Times precision was empty:       50956 (42%)
  Times precision was {false}:     8831 (7%)
  Times result was cached:         58875 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3056 (3%)
  Times result was 'false':        15530 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         306153
  BDD entailment checks:           52905
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       782
Number of predicates discovered:          13
Number of abstraction locations:          9
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         234121
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 19.70
Number of irrelevant predicates:          42920 (18%)
Number of preds handled by boolean abs:   11317 (5%)
  Total number of models for allsat:      3402
  Max number of models for allsat:        128
  Avg number of models for allsat:        1.11

Time for post operator:                 75.034s
  Time for path formula creation:       74.165s
Time for strengthen operator:            2.584s
Time for prec operator:                741.413s
  Time for abstraction:                737.561s (Max:    42.617s, Count: 121718)
    Boolean abstraction:               456.435s
    Solving time:                      486.260s (Max:     2.632s)
    Model enumeration time:            178.996s
    Time for BDD construction:           0.235s (Max:     0.018s)
Time for merge operator:                16.509s
Time for coverage check:                 0.089s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):   665.256s

Number of path formula cache hits:   3151815 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    36.187s

Total number of created targets for pointer analysis: 1404928
   Number of created targets for uf: *unsigned_char is 1921
   Number of created targets for uf: *signed_long_int is 553
   Number of created targets for uf: *unsigned_long_int is 3343


Number of BDD nodes:                               2200
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6826 (count: 173665, min: 0, max: 292, avg: 0.04)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.010s
  Time for transition matches:                         2.044s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                      3318462 (count: 3318462, min: 1, max: 1, avg: 1.00) [1 x 3318462]

CPA algorithm statistics
------------------------
Number of iterations:            1955134
Max size of waitlist:            1404
Average size of waitlist:        732
Number of computed successors:   2156636
Max successors for one state:    2
Number of times merged:          126624
Number of times stopped:         170426
Number of times breaked:         20

Total time for CPA algorithm:       884.460s (Max:   142.530s)
  Time for choose from waitlist:      0.687s
  Time for precision adjustment:    752.570s
  Time for transfer relation:       104.022s
  Time for merge operator:           18.177s
  Time for stop operator:             1.947s
  Time for adding to reached set:     3.058s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                 166 (count: 20, min: 2, max: 11, avg: 8.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.760s
  Counterexample analysis:                             3.177s (Max:     0.316s, Calls: 20)
    Refinement sat check:                              2.827s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.006s
  ARG update:                                          5.480s

Length of refined path (in blocks):                     104 (count: 20, min: 2, max: 11, avg: 5.20)
Number of affected states:                               80 (count: 20, min: 1, max: 10, avg: 4.00)
Length (states) of path with itp 'true':                  4 (count: 20, min: 0, max: 2, avg: 0.20)
Length (states) of path with itp non-trivial itp:        80 (count: 20, min: 1, max: 10, avg: 4.00)
Length (states) of path with itp 'false':                 8 (count: 20, min: 0, max: 1, avg: 0.40)
Different non-trivial interpolants along paths:           0 (count: 20, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              60 (count: 20, min: 0, max: 9, avg: 3.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 218297
Max. size of reached set after ref.:  98864
Avg. size of reached set before ref.: 106379.25
Avg. size of reached set after ref.:  8072.00

Total time for CEGAR algorithm:     895.001s
Time for refinements:                10.425s
Average time for refinement:          0.521s
Max time for refinement:              0.990s

Code Coverage
-----------------------------
  Function coverage:      0.512
  Visited lines:          2818
  Total lines:            5131
  Line coverage:          0.549
  Visited conditions:     602
  Total conditions:       1634
  Condition coverage:     0.368

CPAchecker general statistics
-----------------------------
Number of program locations:     6541
Number of CFA edges:             7688
Number of relevant variables:    1065
Number of functions:             127
Number of loops:                 22
Size of reached set:             4535
  Number of reached locations:   1268 (19%)
    Avg states per location:     3
    Max states per location:     101 (at node N5784)
  Number of reached functions:   65 (51%)
  Number of partitions:          4535
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        137

Time for analysis setup:          5.383s
  Time for loading CPAs:          0.678s
  Time for loading parser:        0.544s
  Time for CFA construction:      4.065s
    Time for parsing file(s):     0.692s
    Time for AST to CFA:          1.015s
    Time for CFA sanity check:    0.301s
    Time for post-processing:     1.907s
      Time for var class.:        0.551s
Time for Analysis:              895.001s
CPU time for analysis:          894.990s
Total time for CPAchecker:      900.388s
Total CPU time for CPAchecker:  900.360s
Time for statistics:              0.227s

Time for Garbage Collector:      23.547s (in 483 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                633MB (   604 MiB) max;    322MB (   307 MiB) avg;    637MB (   607 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     39MB (    37 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           724MB (   690 MiB) max;    469MB (   447 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8548MB (  8152 MiB) max;   8350MB (  7963 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
