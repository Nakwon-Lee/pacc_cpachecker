scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83792d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hc68kl4m/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2326: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1635 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            634 (39%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1001 (61%)
  Times precision was empty:       626 (38%)
  Times precision was {false}:     1002 (61%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7 (0%)
  Times result was 'false':        997 (61%)
Number of strengthen sat checks:   0
Number of coverage checks:         7764
  BDD entailment checks:           4
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       782
Number of predicates discovered:          7
Number of abstraction locations:          3
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         1031
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 1.02
Number of irrelevant predicates:          1005 (97%)
Number of preds handled by boolean abs:   26 (3%)
  Total number of models for allsat:      8
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  5.729s
  Time for path formula creation:        5.659s
Time for strengthen operator:            0.132s
Time for prec operator:                 12.795s
  Time for abstraction:                 12.658s (Max:     5.024s, Count: 1635)
    Boolean abstraction:                 6.359s
    Solving time:                        5.715s (Max:     1.799s)
    Model enumeration time:              3.286s
    Time for BDD construction:           0.007s (Max:     0.005s)
Time for merge operator:                 2.164s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     9.001s

Number of path formula cache hits:   56842 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.706s

Total number of created targets for pointer analysis: 24133
   Number of created targets for uf: *unsigned_char is 472
   Number of created targets for uf: *unsigned_long_int is 1055


Number of BDD nodes:                               235
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         102 (count: 6721, min: 0, max: 32, avg: 0.02)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.464s
Automaton transfers with branching:                0
Automaton transfer successors:                        89052 (count: 89052, min: 1, max: 1, avg: 1.00) [1 x 89052]

CPA algorithm statistics
------------------------
Number of iterations:            44617
Max size of waitlist:            362
Average size of waitlist:        169
Number of computed successors:   50763
Max successors for one state:    2
Number of times merged:          3880
Number of times stopped:         3882
Number of times breaked:         5

Total time for CPA algorithm:        24.254s (Max:     9.145s)
  Time for choose from waitlist:      0.074s
  Time for precision adjustment:     13.378s
  Time for transfer relation:         7.731s
  Time for merge operator:            2.260s
  Time for stop operator:             0.155s
  Time for adding to reached set:     0.143s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  12 (count: 5, min: 2, max: 4, avg: 2.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.452s
  Counterexample analysis:                             0.264s (Max:     0.076s, Calls: 5)
    Refinement sat check:                              0.233s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.002s
  ARG update:                                          0.157s

Length of refined path (in blocks):                      10 (count: 5, min: 2, max: 2, avg: 2.00)
Number of affected states:                                5 (count: 5, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         5 (count: 5, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 1 (count: 5, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 17117
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 5756.20
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      24.828s
Time for refinements:                 0.573s
Average time for refinement:          0.114s
Max time for refinement:              0.201s

Code Coverage
-----------------------------
  Function coverage:      0.701
  Visited lines:          4250
  Total lines:            5131
  Line coverage:          0.828
  Visited conditions:     1394
  Total conditions:       1634
  Condition coverage:     0.853

CPAchecker general statistics
-----------------------------
Number of program locations:     6541
Number of CFA edges:             7688
Number of relevant variables:    1065
Number of functions:             127
Number of loops:                 22
Size of reached set:             17143
  Number of reached locations:   2914 (45%)
    Avg states per location:     5
    Max states per location:     378 (at node N5784)
  Number of reached functions:   89 (70%)
  Number of partitions:          17142
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2231 (before line 5575), Function main called from node N1994, stack depth 1 [741741d0], stack [main]])
  Number of target states:       0
  Size of final wait list        359

Time for analysis setup:          5.505s
  Time for loading CPAs:          0.691s
  Time for loading parser:        0.448s
  Time for CFA construction:      4.212s
    Time for parsing file(s):     0.695s
    Time for AST to CFA:          1.039s
    Time for CFA sanity check:    0.310s
    Time for post-processing:     2.012s
      Time for var class.:        0.620s
Time for Analysis:               24.828s
CPU time for analysis:           24.830s
Total time for CPAchecker:       30.336s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.335s

Time for Garbage Collector:       1.047s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                206MB (   196 MiB) max;    148MB (   141 MiB) avg;    214MB (   204 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     41MB (    39 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           218MB (   208 MiB) max;    207MB (   198 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8201MB (  7821 MiB) max;   8144MB (  7766 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
