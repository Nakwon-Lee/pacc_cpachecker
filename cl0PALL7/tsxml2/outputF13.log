scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83792d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ahmep386/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2326: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            124984 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            101168 (81%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23816 (19%)
  Times precision was empty:       87191 (70%)
  Times precision was {false}:     30157 (24%)
  Times result was cached:         7450 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      186 (0%)
  Times result was 'false':        26031 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         633184
  BDD entailment checks:           219174
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       782
Number of predicates discovered:          66
Number of abstraction locations:          4
Max number of predicates per location:    65
Avg number of predicates per location:    17
Total predicates per abstraction:         274509
Max number of predicates per abstraction: 65
Avg number of predicates per abstraction: 9.05
Number of irrelevant predicates:          268431 (98%)
Number of preds handled by boolean abs:   4279 (2%)
  Total number of models for allsat:      246
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.32

Time for post operator:                 73.282s
  Time for path formula creation:       71.871s
Time for strengthen operator:            3.045s
Time for prec operator:                746.524s
  Time for abstraction:                742.097s (Max:     3.002s, Count: 124984)
    Boolean abstraction:                84.114s
    Solving time:                      600.749s (Max:     0.821s)
    Model enumeration time:             42.529s
    Time for BDD construction:           0.034s (Max:     0.006s)
Time for merge operator:                 6.145s
Time for coverage check:                 0.206s
  Time for BDD entailment checks:        0.163s
Total time for SMT solver (w/o itp):   643.278s

Number of path formula cache hits:   4476011 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.809s

Total number of created targets for pointer analysis: 157631
   Number of created targets for uf: *unsigned_char is 8856


Number of BDD nodes:                               53388
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21177 (count: 492276, min: 0, max: 325, avg: 0.04)
Time for BDD node cleanup:                             0.076s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.870s
  Time for transition matches:                         2.723s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                      4260108 (count: 4260108, min: 1, max: 1, avg: 1.00) [1 x 4260108]

CPA algorithm statistics
------------------------
Number of iterations:            2448451
Max size of waitlist:            246
Average size of waitlist:        162
Number of computed successors:   2737852
Max successors for one state:    2
Number of times merged:          207005
Number of times stopped:         255432
Number of times breaked:         66

Total time for CPA algorithm:       881.541s (Max:    17.504s)
  Time for choose from waitlist:      0.731s
  Time for precision adjustment:    758.152s
  Time for transfer relation:       104.507s
  Time for merge operator:            8.686s
  Time for stop operator:             2.204s
  Time for adding to reached set:     2.988s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   66
Avg. length of target path (in blocks):                 579 (count: 66, min: 2, max: 10, avg: 8.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.390s
  Counterexample analysis:                             6.579s (Max:     0.200s, Calls: 66)
    Refinement sat check:                              5.866s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.022s
  ARG update:                                          4.734s

Length of refined path (in blocks):                     132 (count: 66, min: 2, max: 2, avg: 2.00)
Number of affected states:                               66 (count: 66, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 66, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        66 (count: 66, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                62 (count: 66, min: 0, max: 1, avg: 0.94)
Different non-trivial interpolants along paths:           0 (count: 66, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 66, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                66
Number of successful refinements:     66
Number of failed refinements:         0
Max. size of reached set before ref.: 39284
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 37054.74
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     894.152s
Time for refinements:                12.598s
Average time for refinement:          0.190s
Max time for refinement:              0.362s

Code Coverage
-----------------------------
  Function coverage:      0.622
  Visited lines:          3614
  Total lines:            5131
  Line coverage:          0.704
  Visited conditions:     1030
  Total conditions:       1634
  Condition coverage:     0.630

CPAchecker general statistics
-----------------------------
Number of program locations:     6541
Number of CFA edges:             7688
Number of relevant variables:    1065
Number of functions:             127
Number of loops:                 22
Size of reached set:             11304
  Number of reached locations:   2166 (33%)
    Avg states per location:     5
    Max states per location:     257 (at node N5784)
  Number of reached functions:   79 (62%)
  Number of partitions:          11304
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        138

Time for analysis setup:          6.188s
  Time for loading CPAs:          0.689s
  Time for loading parser:        0.494s
  Time for CFA construction:      4.849s
    Time for parsing file(s):     0.734s
    Time for AST to CFA:          1.113s
    Time for CFA sanity check:    0.365s
    Time for post-processing:     2.481s
      Time for var class.:        0.729s
Time for Analysis:              894.152s
CPU time for analysis:          894.140s
Total time for CPAchecker:      900.345s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              0.264s

Time for Garbage Collector:      18.406s (in 811 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                217MB (   207 MiB) max;    148MB (   141 MiB) avg;    227MB (   217 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     39MB (    37 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           224MB (   214 MiB) max;    219MB (   209 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8607MB (  8208 MiB) max;   8376MB (  7988 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
