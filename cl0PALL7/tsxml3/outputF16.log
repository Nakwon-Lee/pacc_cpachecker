scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--vfio--pci--vfio-pci.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l62njfh7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 2245-2246: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2249-2250: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2257-2258: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 2:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 4:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 8:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 2769: Dead code detected: info___0.offset = (unsigned long long )info___0.index << 40; (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: [!((((pdev->resource)[info___0.index]).start) != 0ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: [!((((pdev->resource)[info___0.index]).end) != (((pdev->resource)[info___0.index]).start))] (CFACreationUtils.addEdgeToCFA, INFO)

line 2771: Dead code detected: info___0.size = (pdev->resource[info___0.index].end - pdev->resource[info___0.index].start) + 1ULL; (CFACreationUtils.addEdgeToCFA, INFO)

line 2773: Dead code detected: info___0.size = 0ULL; (CFACreationUtils.addEdgeToCFA, INFO)

line 2775: Dead code detected: [(info___0.size) == 0ULL] (CFACreationUtils.addEdgeToCFA, INFO)

line 2775: Dead code detected: [!((info___0.size) == 0ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2776: Dead code detected: info___0.flags = 0U; (CFACreationUtils.addEdgeToCFA, INFO)

line 2781: Dead code detected: info___0.flags = 3U; (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [!(((((pdev->resource)[info___0.index]).flags) & 512UL) != 0UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [(info___0.size) > 4095ULL] (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [!((info___0.size) > 4095ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2783: Dead code detected: info___0.flags = info___0.flags | 4U; (CFACreationUtils.addEdgeToCFA, INFO)

line 3417: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4662: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5003: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5006: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5009: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
      case 1:
      __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 2:
      __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 4:
      __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 8:
      __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      default:
      __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 5097: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3782: Function pointer *(file->f_op->poll) with type unsigned int (*)(struct file *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_reset_function to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_store_saved_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_intx_mask_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_load_and_free_saved_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_selected_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_selected_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2331: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4621: Ignoring call via function pointer vfio_pci_set_irqs_ioctl::func for which no suitable target was found in line: tmp = (*func)(vdev, index, start, count, flags, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function pci_intx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq_nosync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_check_and_unmask_intx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_signal to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_fget to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_ctx_fileget to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3782: Ignoring function call through function pointer *(file->f_op->poll): events = (*(file->f_op->poll))(file, &(virqfd->pt)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fput to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_ctx_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msi_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kasprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_ctx_fdget to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfio_del_group_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iommu_group_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iommu_group_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfio_add_group_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6863: Ignoring function call through function pointer *(perm->writefn): tmp___5 = (*(perm->writefn))(vdev, (int)(*ppos), (int)count, perm, offset, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_user_read_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_user_read_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_user_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_user_write_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_user_write_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_user_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6869: Ignoring function call through function pointer *(perm->readfn): tmp___6 = (*(perm->readfn))(vdev, (int)(*ppos), (int)count, perm, offset, &val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __pci_reset_function to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20931 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            19834 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1097 (5%)
  Times precision was empty:       4146 (20%)
  Times precision was {false}:     1509 (7%)
  Times result was cached:         14097 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1179 (6%)
  Times result was 'false':        4550 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         703696
  BDD entailment checks:           40126
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       577
Number of predicates discovered:          14
Number of abstraction locations:          14
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         71637
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 26.65
Number of irrelevant predicates:          50831 (71%)
Number of preds handled by boolean abs:   2591 (4%)
  Total number of models for allsat:      1184
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.00

Time for post operator:                 45.499s
  Time for path formula creation:       44.829s
Time for strengthen operator:            1.770s
Time for prec operator:                449.851s
  Time for abstraction:                448.082s (Max:    49.725s, Count: 20931)
    Boolean abstraction:               311.313s
    Solving time:                      253.851s (Max:    31.521s)
    Model enumeration time:            121.276s
    Time for BDD construction:           0.076s (Max:     0.007s)
Time for merge operator:                22.965s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):   375.127s

Number of path formula cache hits:   2735543 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    27.366s

Total number of created targets for pointer analysis: 804484
   Number of created targets for uf: *(void)* is 37
   Number of created targets for uf: *signed_long_long_int is 20
   Number of created targets for uf: *(struct_pci_dev)* is 17
   Number of created targets for uf: *(unsigned_char)* is 1201
   Number of created targets for uf: *unsigned_long_int is 433
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_2,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 261
   Number of created targets for uf: *unsigned_short_int is 21
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_6,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[signed_int],_Parameter_3_type:_[signed_int],_Parameter_4_type:_[(struct_perm_bits)*],_Parameter_5_type:_[signed_int],_Parameter_6_type:_[unsigned_int],_VarArgs:_false)* is 281
   Number of created targets for uf: *(struct_eventfd_ctx)* is 1017
   Number of created targets for uf: *(char)* is 1017
   Number of created targets for uf: *signed_int is 179
   Number of created targets for uf: *(struct_virqfd)* is 3055
   Number of created targets for uf: *unsigned_char is 50
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_6,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[signed_int],_Parameter_3_type:_[signed_int],_Parameter_4_type:_[(struct_perm_bits)*],_Parameter_5_type:_[signed_int],_Parameter_6_type:_[(unsigned_int)*],_VarArgs:_false)* is 281
   Number of created targets for uf: *_Bool is 37
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 261
   Number of created targets for uf: *(struct_vfio_pci_irq_ctx)* is 37
   Number of created targets for uf: *((struct_virqfd)*)* is 261
   Number of created targets for uf: *(struct_vfio_pci_device)* is 261
   Number of created targets for uf: *unsigned_int is 15080


Number of BDD nodes:                               811
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2663 (count: 60747, min: 0, max: 60, avg: 0.04)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.296s
  Time for transition matches:                         1.325s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      2769598 (count: 2769598, min: 1, max: 1, avg: 1.00) [1 x 2769598]

CPA algorithm statistics
------------------------
Number of iterations:            1798038
Max size of waitlist:            191
Average size of waitlist:        40
Number of computed successors:   2145958
Max successors for one state:    2
Number of times merged:          331785
Number of times stopped:         343402
Number of times breaked:         143

Total time for CPA algorithm:       553.602s (Max:    75.842s)
  Time for choose from waitlist:      0.483s
  Time for precision adjustment:    458.466s
  Time for transfer relation:        62.758s
  Time for merge operator:           25.409s
  Time for stop operator:             1.453s
  Time for adding to reached set:     1.957s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   143
Avg. length of target path (in blocks):                1051 (count: 143, min: 2, max: 13, avg: 7.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 324.739s
  Counterexample analysis:                           320.627s (Max:     6.944s, Calls: 143)
    Refinement sat check:                            307.432s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.032s
  ARG update:                                          3.620s

Length of refined path (in blocks):                     961 (count: 142, min: 2, max: 13, avg: 6.77)
Number of affected states:                              308 (count: 142, min: 1, max: 9, avg: 2.17)
Length (states) of path with itp 'true':                511 (count: 142, min: 0, max: 8, avg: 3.60)
Length (states) of path with itp non-trivial itp:       308 (count: 142, min: 1, max: 9, avg: 2.17)
Length (states) of path with itp 'false':                55 (count: 142, min: 0, max: 1, avg: 0.39)
Different non-trivial interpolants along paths:          11 (count: 142, min: 0, max: 3, avg: 0.08)
Equal non-trivial interpolants along paths:             155 (count: 142, min: 0, max: 8, avg: 1.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                143
Number of successful refinements:     142
Number of failed refinements:         0
Max. size of reached set before ref.: 199904
Max. size of reached set after ref.:  193090
Avg. size of reached set before ref.: 92216.36
Avg. size of reached set after ref.:  80203.75

Total time for CEGAR algorithm:     896.157s
Time for refinements:               334.323s
Average time for refinement:          2.337s
Max time for refinement:              7.542s

Code Coverage
-----------------------------
  Function coverage:      0.662
  Visited lines:          2478
  Total lines:            3214
  Line coverage:          0.771
  Visited conditions:     893
  Total conditions:       1174
  Condition coverage:     0.761

CPAchecker general statistics
-----------------------------
Number of program locations:     4606
Number of CFA edges:             5420
Number of relevant variables:    873
Number of functions:             157
Number of loops:                 18
Size of reached set:             169254
  Number of reached locations:   2102 (46%)
    Avg states per location:     80
    Max states per location:     2258 (at node N4182)
  Number of reached functions:   104 (66%)
  Number of partitions:          169225
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N820 (before line 3215), Function main called from node N809, stack depth 1 [48840594], stack [main]])
  Number of target states:       1
  Size of final wait list        21

Time for analysis setup:          4.247s
  Time for loading CPAs:          0.698s
  Time for loading parser:        0.558s
  Time for CFA construction:      2.895s
    Time for parsing file(s):     0.696s
    Time for AST to CFA:          1.028s
    Time for CFA sanity check:    0.263s
    Time for post-processing:     0.780s
      Time for var class.:        0.398s
Time for Analysis:              896.157s
CPU time for analysis:          896.060s
Total time for CPAchecker:      900.408s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              1.298s

Time for Garbage Collector:      20.200s (in 669 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                625MB (   596 MiB) max;    285MB (   271 MiB) avg;    639MB (   609 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           641MB (   611 MiB) max;    412MB (   392 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8773MB (  8366 MiB) max;   8475MB (  8082 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
