scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hiscto48/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            847 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            482 (57%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         365 (43%)
  Times precision was empty:       248 (29%)
  Times precision was {false}:     202 (24%)
  Times result was cached:         265 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      132 (16%)
  Times result was 'false':        368 (43%)
Number of strengthen sat checks:   0
Number of coverage checks:         3422
  BDD entailment checks:           128
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1717
Number of predicates discovered:          7
Number of abstraction locations:          8
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         1359
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 4.07
Number of irrelevant predicates:          562 (41%)
Number of preds handled by boolean abs:   328 (24%)
  Total number of models for allsat:      106
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.80

Time for post operator:                  2.153s
  Time for path formula creation:        2.115s
Time for strengthen operator:            0.038s
Time for prec operator:                 18.832s
  Time for abstraction:                 18.681s (Max:     1.313s, Count: 847)
    Boolean abstraction:                10.669s
    Solving time:                       15.304s (Max:     1.129s)
    Model enumeration time:              0.237s
    Time for BDD construction:           0.038s (Max:     0.009s)
Time for merge operator:                 0.790s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):    15.541s

Number of path formula cache hits:   15914 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.958s

Total number of created targets for pointer analysis: 17986
   Number of created targets for uf: *unsigned_short_int is 14
   Number of created targets for uf: *unsigned_char is 658
   Number of created targets for uf: *(unsigned_char)* is 6
   Number of created targets for uf: *unsigned_int is 159


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         309 (count: 2399, min: 0, max: 75, avg: 0.13)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.182s
Automaton transfers with branching:                0
Automaton transfer successors:                        24972 (count: 24972, min: 1, max: 1, avg: 1.00) [1 x 24972]

CPA algorithm statistics
------------------------
Number of iterations:            14860
Max size of waitlist:            140
Average size of waitlist:        31
Number of computed successors:   17289
Max successors for one state:    2
Number of times merged:          1647
Number of times stopped:         1744
Number of times breaked:         28

Total time for CPA algorithm:        23.417s (Max:    16.233s)
  Time for choose from waitlist:      0.027s
  Time for precision adjustment:     19.121s
  Time for transfer relation:         3.042s
  Time for merge operator:            0.906s
  Time for stop operator:             0.069s
  Time for adding to reached set:     0.098s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 114 (count: 28, min: 2, max: 6, avg: 4.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.699s
  Counterexample analysis:                             1.580s (Max:     0.773s, Calls: 28)
    Refinement sat check:                              1.440s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.028s
  ARG update:                                          0.038s

Length of refined path (in blocks):                     108 (count: 27, min: 2, max: 6, avg: 4.00)
Number of affected states:                               73 (count: 27, min: 0, max: 5, avg: 2.70)
Length (states) of path with itp 'true':                  8 (count: 27, min: 0, max: 2, avg: 0.30)
Length (states) of path with itp non-trivial itp:        73 (count: 27, min: 0, max: 5, avg: 2.70)
Length (states) of path with itp 'false':                 1 (count: 27, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:           2 (count: 27, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:              45 (count: 27, min: 0, max: 4, avg: 1.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 5308
Max. size of reached set after ref.:  5169
Avg. size of reached set before ref.: 841.50
Avg. size of reached set after ref.:  310.52

Total time for CEGAR algorithm:      25.217s
Time for refinements:                 1.777s
Average time for refinement:          0.063s
Max time for refinement:              0.788s

Code Coverage
-----------------------------
  Function coverage:      0.182
  Visited lines:          1905
  Total lines:            5886
  Line coverage:          0.324
  Visited conditions:     402
  Total conditions:       1648
  Condition coverage:     0.244

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             5308
  Number of reached locations:   991 (12%)
    Avg states per location:     5
    Max states per location:     61 (at node N7344)
  Number of reached functions:   59 (18%)
  Number of partitions:          5307
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6724 (before line 13160), Function main called from node N6685, stack depth 1 [7871d261], stack [main]])
  Number of target states:       1
  Size of final wait list        113

Time for analysis setup:          5.168s
  Time for loading CPAs:          0.806s
  Time for loading parser:        0.497s
  Time for CFA construction:      3.739s
    Time for parsing file(s):     0.701s
    Time for AST to CFA:          1.396s
    Time for CFA sanity check:    0.410s
    Time for post-processing:     1.100s
      Time for var class.:        0.533s
Time for Analysis:               25.217s
CPU time for analysis:           25.220s
Total time for CPAchecker:       30.388s
Total CPU time for CPAchecker:   30.380s
Time for statistics:              0.156s

Time for Garbage Collector:       0.515s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     56MB (    53 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8198MB (  7818 MiB) max;   8149MB (  7772 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
