scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5cv_bth_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32348 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16024 (50%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16324 (50%)
  Times precision was empty:       6526 (20%)
  Times precision was {false}:     5884 (18%)
  Times result was cached:         15432 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4506 (14%)
  Times result was 'false':        20667 (64%)
Number of strengthen sat checks:   0
Number of coverage checks:         147318
  BDD entailment checks:           3986
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1814
Number of predicates discovered:          16
Number of abstraction locations:          9
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         74640
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 7.18
Number of irrelevant predicates:          18885 (25%)
Number of preds handled by boolean abs:   23221 (31%)
  Total number of models for allsat:      22575
  Max number of models for allsat:        120
  Avg number of models for allsat:        5.01

Time for post operator:                 24.693s
  Time for path formula creation:       24.360s
Time for strengthen operator:            0.844s
Time for prec operator:                798.796s
  Time for abstraction:                797.727s (Max:     3.546s, Count: 32348)
    Boolean abstraction:               562.740s
    Solving time:                      400.707s (Max:     2.365s)
    Model enumeration time:            284.287s
    Time for BDD construction:           0.713s (Max:     0.041s)
Time for merge operator:                11.915s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):   684.996s

Number of path formula cache hits:   783565 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.691s

Total number of created targets for pointer analysis: 403560
   Number of created targets for uf: *unsigned_short_int is 53
   Number of created targets for uf: *unsigned_char is 20708
   Number of created targets for uf: *(unsigned_char)* is 19
   Number of created targets for uf: *unsigned_int is 361
   Number of created targets for uf: *char is 481


Number of BDD nodes:                               9315
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8306 (count: 75161, min: 0, max: 119, avg: 0.11)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.624s
  Time for transition matches:                         0.595s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.027s
Automaton transfers with branching:                0
Automaton transfer successors:                      1011528 (count: 1011528, min: 1, max: 1, avg: 1.00) [1 x 1011528]

CPA algorithm statistics
------------------------
Number of iterations:            676779
Max size of waitlist:            2036
Average size of waitlist:        642
Number of computed successors:   779521
Max successors for one state:    2
Number of times merged:          71666
Number of times stopped:         74061
Number of times breaked:         50

Total time for CPA algorithm:       853.809s (Max:   418.315s)
  Time for choose from waitlist:      0.313s
  Time for precision adjustment:    802.216s
  Time for transfer relation:        34.954s
  Time for merge operator:           12.756s
  Time for stop operator:             0.776s
  Time for adding to reached set:     1.207s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                 336 (count: 50, min: 2, max: 13, avg: 6.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.513s
  Counterexample analysis:                            37.277s (Max:     1.789s, Calls: 50)
    Refinement sat check:                             35.000s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.022s
  ARG update:                                          1.052s

Length of refined path (in blocks):                     330 (count: 50, min: 2, max: 13, avg: 6.60)
Number of affected states:                              167 (count: 50, min: 0, max: 12, avg: 3.34)
Length (states) of path with itp 'true':                113 (count: 50, min: 0, max: 11, avg: 2.26)
Length (states) of path with itp non-trivial itp:       167 (count: 50, min: 0, max: 12, avg: 3.34)
Length (states) of path with itp 'false':                 6 (count: 50, min: 0, max: 1, avg: 0.12)
Different non-trivial interpolants along paths:           5 (count: 50, min: 0, max: 2, avg: 0.10)
Equal non-trivial interpolants along paths:             117 (count: 50, min: 0, max: 11, avg: 2.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 72719
Max. size of reached set after ref.:  71878
Avg. size of reached set before ref.: 23473.38
Avg. size of reached set after ref.:  15122.48

Total time for CEGAR algorithm:     893.909s
Time for refinements:                39.482s
Average time for refinement:          0.789s
Max time for refinement:              2.068s

Code Coverage
-----------------------------
  Function coverage:      0.207
  Visited lines:          2055
  Total lines:            5886
  Line coverage:          0.349
  Visited conditions:     478
  Total conditions:       1648
  Condition coverage:     0.290

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             267248
  Number of reached locations:   1172 (14%)
    Avg states per location:     228
    Max states per location:     6494 (at node N7344)
  Number of reached functions:   67 (21%)
  Number of partitions:          267099
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N5184 (before line 11523), Function pccard_get_next_tuple called from node N6463, stack depth 4 [52b5adde], stack [main, pccard_show_cis, pccard_validate_cis, pccard_get_next_tuple]])
  Number of target states:       0
  Size of final wait list        2029

Time for analysis setup:          6.418s
  Time for loading CPAs:          1.121s
  Time for loading parser:        0.600s
  Time for CFA construction:      4.564s
    Time for parsing file(s):     1.049s
    Time for AST to CFA:          1.595s
    Time for CFA sanity check:    0.421s
    Time for post-processing:     1.274s
      Time for var class.:        0.626s
Time for Analysis:              893.909s
CPU time for analysis:          893.830s
Total time for CPAchecker:      900.339s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              1.680s

Time for Garbage Collector:      15.450s (in 1044 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                429MB (   410 MiB) max;    178MB (   169 MiB) avg;    437MB (   417 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           527MB (   502 MiB) max;    269MB (   257 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9046MB (  8627 MiB) max;   8563MB (  8166 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
