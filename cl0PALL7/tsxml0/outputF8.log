scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_etae7u37/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            385938 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            257181 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         128757 (33%)
  Times precision was empty:       337 (0%)
  Times precision was {false}:     5078 (1%)
  Times result was cached:         374705 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5818 (2%)
  Times result was 'false':        141320 (37%)
Number of strengthen sat checks:   0
Number of coverage checks:         2470363
  BDD entailment checks:           174137
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       232
Number of predicates discovered:          7
Number of abstraction locations:          11
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         1412479
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 129.63
Number of irrelevant predicates:          129136 (9%)
Number of preds handled by boolean abs:   28413 (2%)
  Total number of models for allsat:      5256
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.90

Time for post operator:                 73.133s
  Time for path formula creation:       69.467s
Time for strengthen operator:            9.462s
Time for prec operator:                553.757s
  Time for abstraction:                543.839s (Max:     4.014s, Count: 385938)
    Boolean abstraction:               132.940s
    Solving time:                      152.120s (Max:     0.219s)
    Model enumeration time:              8.590s
    Time for BDD construction:           0.230s (Max:     0.019s)
Time for merge operator:                17.114s
Time for coverage check:                 0.400s
  Time for BDD entailment checks:        0.265s
Total time for SMT solver (w/o itp):   160.710s

Number of path formula cache hits:   15431795 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    30.018s

Total number of created targets for pointer analysis: 434144
   Number of created targets for uf: *unsigned_char is 32
   Number of created targets for uf: *unsigned_int is 14


Number of BDD nodes:                               251
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11195 (count: 240154, min: 0, max: 200, avg: 0.05)
Time for BDD node cleanup:                             0.060s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.031s
  Time for transition matches:                         6.934s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.057s
Automaton transfers with branching:                0
Automaton transfer successors:                     14660050 (count: 14660050, min: 1, max: 1, avg: 1.00) [1 x 14660050]

CPA algorithm statistics
------------------------
Number of iterations:            10124911
Max size of waitlist:            28
Average size of waitlist:        17
Number of computed successors:   11589062
Max successors for one state:    2
Number of times merged:          1148113
Number of times stopped:         1322143
Number of times breaked:         73

Total time for CPA algorithm:       856.455s (Max:   341.113s)
  Time for choose from waitlist:      2.256s
  Time for precision adjustment:    605.535s
  Time for transfer relation:       184.629s
  Time for merge operator:           28.609s
  Time for stop operator:             7.747s
  Time for adding to reached set:    11.187s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   73
Avg. length of target path (in blocks):                 459 (count: 73, min: 2, max: 12, avg: 6.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.478s
  Counterexample analysis:                             4.071s (Max:     0.150s, Calls: 73)
    Refinement sat check:                              3.557s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.035s
  ARG update:                                         29.269s

Length of refined path (in blocks):                     459 (count: 73, min: 2, max: 12, avg: 6.29)
Number of affected states:                              273 (count: 73, min: 1, max: 11, avg: 3.74)
Length (states) of path with itp 'true':                113 (count: 73, min: 0, max: 5, avg: 1.55)
Length (states) of path with itp non-trivial itp:       273 (count: 73, min: 1, max: 11, avg: 3.74)
Length (states) of path with itp 'false':                 0 (count: 73, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           2 (count: 73, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:             198 (count: 73, min: 0, max: 10, avg: 2.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                73
Number of successful refinements:     73
Number of failed refinements:         0
Max. size of reached set before ref.: 1784436
Max. size of reached set after ref.:  2112
Avg. size of reached set before ref.: 123612.16
Avg. size of reached set after ref.:  568.82

Total time for CEGAR algorithm:     894.457s
Time for refinements:                37.934s
Average time for refinement:          0.519s
Max time for refinement:              7.484s

Code Coverage
-----------------------------
  Function coverage:      0.123
  Visited lines:          1578
  Total lines:            5886
  Line coverage:          0.268
  Visited conditions:     254
  Total conditions:       1648
  Condition coverage:     0.154

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             1143434
  Size of final wait list        11

Time for analysis setup:          5.853s
  Time for loading CPAs:          0.907s
  Time for loading parser:        0.580s
  Time for CFA construction:      4.228s
    Time for parsing file(s):     0.910s
    Time for AST to CFA:          1.499s
    Time for CFA sanity check:    0.445s
    Time for post-processing:     1.185s
      Time for var class.:        0.566s
Time for Analysis:              894.457s
CPU time for analysis:          894.380s
Total time for CPAchecker:      900.314s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              4.493s

Time for Garbage Collector:     123.122s (in 648 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2618MB (  2497 MiB) max;   1284MB (  1224 MiB) avg;   2700MB (  2575 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2686MB (  2561 MiB) max;   1950MB (  1860 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8350MB (  7963 MiB) max;   8302MB (  7918 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
