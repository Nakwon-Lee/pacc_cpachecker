scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4wznmesk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            208686 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            136928 (66%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71758 (34%)
  Times precision was empty:       14114 (7%)
  Times precision was {false}:     9348 (4%)
  Times result was cached:         176970 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8254 (4%)
  Times result was 'false':        76994 (37%)
Number of strengthen sat checks:   0
Number of coverage checks:         1427735
  BDD entailment checks:           82227
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       234
Number of predicates discovered:          7
Number of abstraction locations:          7
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         194626
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.06
Number of irrelevant predicates:          71787 (37%)
Number of preds handled by boolean abs:   8268 (4%)
  Total number of models for allsat:      6545
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.79

Time for post operator:                 83.739s
  Time for path formula creation:       81.804s
Time for strengthen operator:            4.578s
Time for prec operator:                610.072s
  Time for abstraction:                604.490s (Max:    15.798s, Count: 208686)
    Boolean abstraction:               220.289s
    Solving time:                      291.297s (Max:     0.267s)
    Model enumeration time:             15.320s
    Time for BDD construction:           0.231s (Max:     0.010s)
Time for merge operator:                27.342s
Time for coverage check:                 0.216s
  Time for BDD entailment checks:        0.128s
Total time for SMT solver (w/o itp):   306.617s

Number of path formula cache hits:   7945847 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    59.434s

Total number of created targets for pointer analysis: 915612
   Number of created targets for uf: *unsigned_char is 1660
   Number of created targets for uf: *unsigned_int is 14


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14697 (count: 201950, min: 0, max: 278, avg: 0.07)
Time for BDD node cleanup:                             0.044s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.636s
  Time for transition matches:                         3.812s
  Time for transition assertions:                      0.016s
  Time for transition actions:                         0.048s
Automaton transfers with branching:                0
Automaton transfer successors:                      8403000 (count: 8403000, min: 1, max: 1, avg: 1.00) [1 x 8403000]

CPA algorithm statistics
------------------------
Number of iterations:            5768349
Max size of waitlist:            13930
Average size of waitlist:        6961
Number of computed successors:   6614539
Max successors for one state:    2
Number of times merged:          672754
Number of times stopped:         754969
Number of times breaked:         43

Total time for CPA algorithm:       883.864s (Max:   765.748s)
  Time for choose from waitlist:      2.566s
  Time for precision adjustment:    670.288s
  Time for transfer relation:       147.956s
  Time for merge operator:           34.120s
  Time for stop operator:             4.523s
  Time for adding to reached set:    12.626s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                 229 (count: 43, min: 2, max: 9, avg: 5.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.270s
  Counterexample analysis:                             2.097s (Max:     0.081s, Calls: 43)
    Refinement sat check:                              1.808s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.025s
  ARG update:                                          0.082s

Length of refined path (in blocks):                     229 (count: 43, min: 2, max: 9, avg: 5.33)
Number of affected states:                               69 (count: 43, min: 1, max: 4, avg: 1.60)
Length (states) of path with itp 'true':                117 (count: 43, min: 0, max: 4, avg: 2.72)
Length (states) of path with itp non-trivial itp:        69 (count: 43, min: 1, max: 4, avg: 1.60)
Length (states) of path with itp 'false':                 0 (count: 43, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 43, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              26 (count: 43, min: 0, max: 3, avg: 0.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 458746
Max. size of reached set after ref.:  456200
Avg. size of reached set before ref.: 206011.65
Avg. size of reached set after ref.:  205475.77

Total time for CEGAR algorithm:     898.942s
Time for refinements:                 8.755s
Average time for refinement:          0.203s
Max time for refinement:              0.402s

Code Coverage
-----------------------------
  Function coverage:      0.120
  Visited lines:          1553
  Total lines:            5886
  Line coverage:          0.264
  Visited conditions:     244
  Total conditions:       1648
  Condition coverage:     0.148

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             5759534
  Size of final wait list        13922

Time for analysis setup:          5.619s
  Time for loading CPAs:          0.923s
  Time for loading parser:        0.488s
  Time for CFA construction:      4.093s
    Time for parsing file(s):     0.827s
    Time for AST to CFA:          1.520s
    Time for CFA sanity check:    0.392s
    Time for post-processing:     1.167s
      Time for var class.:        0.572s
Time for Analysis:              898.942s
CPU time for analysis:          898.930s
Total time for CPAchecker:      904.573s
Total CPU time for CPAchecker:  904.540s
Time for statistics:             72.143s

Time for Garbage Collector:     206.892s (in 446 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5413MB (  5162 MiB) max;   2028MB (  1934 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   2795MB (  2665 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8649MB (  8249 MiB) max;   8418MB (  8028 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
