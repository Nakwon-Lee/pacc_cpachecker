scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e3vv4032/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            192295 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            130940 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61355 (32%)
  Times precision was empty:       30239 (16%)
  Times precision was {false}:     2039 (1%)
  Times result was cached:         158517 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1500 (1%)
  Times result was 'false':        64267 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         1250979
  BDD entailment checks:           88919
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       234
Number of predicates discovered:          7
Number of abstraction locations:          8
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         162078
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 45.80
Number of irrelevant predicates:          61533 (38%)
Number of preds handled by boolean abs:   1514 (1%)
  Total number of models for allsat:      1292
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.86

Time for post operator:                 32.439s
  Time for path formula creation:       30.625s
Time for strengthen operator:            4.419s
Time for prec operator:                172.402s
  Time for abstraction:                167.494s (Max:     1.133s, Count: 192295)
    Boolean abstraction:                27.132s
    Solving time:                       37.370s (Max:     0.119s)
    Model enumeration time:              1.715s
    Time for BDD construction:           0.116s (Max:     0.021s)
Time for merge operator:                 8.323s
Time for coverage check:                 0.221s
  Time for BDD entailment checks:        0.118s
Total time for SMT solver (w/o itp):    39.085s

Number of path formula cache hits:   7921021 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.453s

Total number of created targets for pointer analysis: 199689
   Number of created targets for uf: *unsigned_char is 119
   Number of created targets for uf: *unsigned_int is 14


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2860 (count: 140279, min: 0, max: 75, avg: 0.02)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.407s
  Time for transition matches:                         3.801s
  Time for transition assertions:                      0.014s
  Time for transition actions:                         0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                      7452739 (count: 7452739, min: 1, max: 1, avg: 1.00) [1 x 7452739]

CPA algorithm statistics
------------------------
Number of iterations:            5158621
Max size of waitlist:            63
Average size of waitlist:        50
Number of computed successors:   5894916
Max successors for one state:    2
Number of times merged:          581030
Number of times stopped:         669770
Number of times breaked:         1774

Total time for CPA algorithm:       320.937s (Max:    10.840s)
  Time for choose from waitlist:      1.226s
  Time for precision adjustment:    197.799s
  Time for transfer relation:        90.752s
  Time for merge operator:           12.881s
  Time for stop operator:             4.054s
  Time for adding to reached set:     5.733s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1774
Avg. length of target path (in blocks):               21554 (count: 1774, min: 2, max: 17, avg: 12.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 241.751s
  Counterexample analysis:                           227.994s (Max:     0.231s, Calls: 1774)
    Refinement sat check:                            199.810s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.047s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.146s
  Precision update:                                    0.216s
  ARG update:                                         11.398s

Length of refined path (in blocks):                   21542 (count: 1773, min: 2, max: 17, avg: 12.15)
Number of affected states:                             3700 (count: 1773, min: 1, max: 4, avg: 2.09)
Length (states) of path with itp 'true':              16069 (count: 1773, min: 0, max: 14, avg: 9.06)
Length (states) of path with itp non-trivial itp:      3700 (count: 1773, min: 1, max: 4, avg: 2.09)
Length (states) of path with itp 'false':                 0 (count: 1773, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 1773, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1927 (count: 1773, min: 0, max: 3, avg: 1.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1774
Number of successful refinements:     1773
Number of failed refinements:         0
Max. size of reached set before ref.: 453987
Max. size of reached set after ref.:  392032
Avg. size of reached set before ref.: 111815.75
Avg. size of reached set after ref.:  108968.00

Total time for CEGAR algorithm:     894.713s
Time for refinements:               415.318s
Average time for refinement:          0.234s
Max time for refinement:              1.780s

Code Coverage
-----------------------------
  Function coverage:      0.120
  Visited lines:          1535
  Total lines:            5886
  Line coverage:          0.261
  Visited conditions:     234
  Total conditions:       1648
  Condition coverage:     0.142

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             386289
  Number of reached locations:   637 (8%)
    Avg states per location:     606
    Max states per location:     5861 (at node N7348)
  Number of reached functions:   39 (12%)
  Number of partitions:          386289
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        46

Time for analysis setup:          5.588s
  Time for loading CPAs:          0.827s
  Time for loading parser:        0.574s
  Time for CFA construction:      4.072s
    Time for parsing file(s):     0.839s
    Time for AST to CFA:          1.496s
    Time for CFA sanity check:    0.347s
    Time for post-processing:     1.172s
      Time for var class.:        0.580s
Time for Analysis:              894.713s
CPU time for analysis:          894.700s
Total time for CPAchecker:      900.306s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              2.932s

Time for Garbage Collector:      47.081s (in 1326 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                819MB (   781 MiB) max;    357MB (   341 MiB) avg;    843MB (   804 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:           842MB (   803 MiB) max;    571MB (   544 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8268MB (  7885 MiB) max;   8224MB (  7843 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
