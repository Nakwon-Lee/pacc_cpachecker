scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j1iei0ek/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30404 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            25416 (84%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4988 (16%)
  Times precision was empty:       20663 (68%)
  Times precision was {false}:     1817 (6%)
  Times result was cached:         6981 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      943 (3%)
  Times result was 'false':        6406 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         245888
  BDD entailment checks:           1502
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1814
Number of predicates discovered:          11
Number of abstraction locations:          20
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         18441
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 6.68
Number of irrelevant predicates:          14736 (80%)
Number of preds handled by boolean abs:   1201 (7%)
  Total number of models for allsat:      745
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.79

Time for post operator:                 23.391s
  Time for path formula creation:       23.057s
Time for strengthen operator:            0.915s
Time for prec operator:                510.182s
  Time for abstraction:                509.238s (Max:    15.774s, Count: 30404)
    Boolean abstraction:               252.475s
    Solving time:                      322.496s (Max:    12.689s)
    Model enumeration time:             57.880s
    Time for BDD construction:           0.063s (Max:     0.013s)
Time for merge operator:                14.190s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.003s
Total time for SMT solver (w/o itp):   380.376s

Number of path formula cache hits:   1253430 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.165s

Total number of created targets for pointer analysis: 576826
   Number of created targets for uf: *unsigned_short_int is 496
   Number of created targets for uf: *unsigned_char is 515
   Number of created targets for uf: *(unsigned_char)* is 175
   Number of created targets for uf: *unsigned_int is 95


Number of BDD nodes:                               233
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1605 (count: 38510, min: 0, max: 75, avg: 0.04)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.392s
  Time for transition matches:                         0.633s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      1386147 (count: 1386147, min: 1, max: 1, avg: 1.00) [1 x 1386147]

CPA algorithm statistics
------------------------
Number of iterations:            830617
Max size of waitlist:            595
Average size of waitlist:        311
Number of computed successors:   982917
Max successors for one state:    2
Number of times merged:          122193
Number of times stopped:         123512
Number of times breaked:         871

Total time for CPA algorithm:       565.452s (Max:    46.470s)
  Time for choose from waitlist:      0.333s
  Time for precision adjustment:    513.594s
  Time for transfer relation:        32.879s
  Time for merge operator:           15.254s
  Time for stop operator:             0.751s
  Time for adding to reached set:     1.033s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   871
Avg. length of target path (in blocks):                3635 (count: 871, min: 2, max: 6, avg: 4.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 315.774s
  Counterexample analysis:                           313.744s (Max:     0.918s, Calls: 871)
    Refinement sat check:                            294.544s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.129s
  ARG update:                                          1.176s

Length of refined path (in blocks):                    3198 (count: 870, min: 2, max: 6, avg: 3.68)
Number of affected states:                              470 (count: 870, min: 0, max: 5, avg: 0.54)
Length (states) of path with itp 'true':               1858 (count: 870, min: 0, max: 4, avg: 2.14)
Length (states) of path with itp non-trivial itp:       470 (count: 870, min: 0, max: 5, avg: 0.54)
Length (states) of path with itp 'false':               433 (count: 870, min: 0, max: 1, avg: 0.50)
Different non-trivial interpolants along paths:           3 (count: 870, min: 0, max: 2, avg: 0.00)
Equal non-trivial interpolants along paths:              29 (count: 870, min: 0, max: 3, avg: 0.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                871
Number of successful refinements:     870
Number of failed refinements:         0
Max. size of reached set before ref.: 30986
Max. size of reached set after ref.:  28287
Avg. size of reached set before ref.: 13582.84
Avg. size of reached set after ref.:  12617.99

Total time for CEGAR algorithm:     895.001s
Time for refinements:               324.085s
Average time for refinement:          0.372s
Max time for refinement:              0.931s

Code Coverage
-----------------------------
  Function coverage:      0.179
  Visited lines:          1914
  Total lines:            5886
  Line coverage:          0.325
  Visited conditions:     404
  Total conditions:       1648
  Condition coverage:     0.245

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             15217
  Number of reached locations:   992 (12%)
    Avg states per location:     15
    Max states per location:     172 (at node N7344)
  Number of reached functions:   58 (18%)
  Number of partitions:          15216
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6724 (before line 13160), Function main called from node N6685, stack depth 1 [a457c2b], stack [main]])
  Number of target states:       1
  Size of final wait list        272

Time for analysis setup:          5.362s
  Time for loading CPAs:          0.883s
  Time for loading parser:        0.492s
  Time for CFA construction:      3.886s
    Time for parsing file(s):     0.781s
    Time for AST to CFA:          1.376s
    Time for CFA sanity check:    0.414s
    Time for post-processing:     1.150s
      Time for var class.:        0.500s
Time for Analysis:              895.001s
CPU time for analysis:          894.990s
Total time for CPAchecker:      900.372s
Total CPU time for CPAchecker:  900.340s
Time for statistics:              0.293s

Time for Garbage Collector:      10.734s (in 1330 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                278MB (   265 MiB) max;    158MB (   151 MiB) avg;    283MB (   270 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     41MB (    39 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           308MB (   294 MiB) max;    234MB (   223 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8904MB (  8491 MiB) max;   8540MB (  8145 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
