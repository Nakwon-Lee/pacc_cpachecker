scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tqli7zv6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            128398 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            87960 (69%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40438 (31%)
  Times precision was empty:       21366 (17%)
  Times precision was {false}:     3002 (2%)
  Times result was cached:         101695 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2335 (2%)
  Times result was 'false':        41610 (32%)
Number of strengthen sat checks:   0
Number of coverage checks:         842767
  BDD entailment checks:           59501
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       234
Number of predicates discovered:          7
Number of abstraction locations:          9
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         107054
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 20.06
Number of irrelevant predicates:          40699 (38%)
Number of preds handled by boolean abs:   2349 (2%)
  Total number of models for allsat:      2011
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.86

Time for post operator:                 29.840s
  Time for path formula creation:       28.449s
Time for strengthen operator:            4.115s
Time for prec operator:                133.238s
  Time for abstraction:                130.129s (Max:     0.696s, Count: 128398)
    Boolean abstraction:                34.338s
    Solving time:                       47.643s (Max:     0.125s)
    Model enumeration time:              2.072s
    Time for BDD construction:           0.075s (Max:     0.009s)
Time for merge operator:                 9.315s
Time for coverage check:                 0.118s
  Time for BDD entailment checks:        0.067s
Total time for SMT solver (w/o itp):    49.715s

Number of path formula cache hits:   5111627 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.671s

Total number of created targets for pointer analysis: 315526
   Number of created targets for uf: *unsigned_char is 119
   Number of created targets for uf: *unsigned_int is 14


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4414 (count: 112686, min: 0, max: 75, avg: 0.04)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.599s
  Time for transition matches:                         2.298s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.030s
Automaton transfers with branching:                0
Automaton transfer successors:                      5015143 (count: 5015143, min: 1, max: 1, avg: 1.00) [1 x 5015143]

CPA algorithm statistics
------------------------
Number of iterations:            3468443
Max size of waitlist:            55
Average size of waitlist:        37
Number of computed successors:   3963355
Max successors for one state:    2
Number of times merged:          391633
Number of times stopped:         450872
Number of times breaked:         1652

Total time for CPA algorithm:       241.229s (Max:     5.726s)
  Time for choose from waitlist:      0.750s
  Time for precision adjustment:    148.238s
  Time for transfer relation:        67.647s
  Time for merge operator:           12.300s
  Time for stop operator:             2.908s
  Time for adding to reached set:     3.654s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1652
Avg. length of target path (in blocks):               19290 (count: 1652, min: 2, max: 17, avg: 11.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 194.051s
  Counterexample analysis:                           185.647s (Max:     0.346s, Calls: 1652)
    Refinement sat check:                            163.251s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.125s
  Precision update:                                    0.198s
  ARG update:                                          6.312s

Length of refined path (in blocks):                   19279 (count: 1651, min: 2, max: 17, avg: 11.68)
Number of affected states:                             3674 (count: 1651, min: 1, max: 4, avg: 2.23)
Length (states) of path with itp 'true':              13954 (count: 1651, min: 0, max: 14, avg: 8.45)
Length (states) of path with itp non-trivial itp:      3674 (count: 1651, min: 1, max: 4, avg: 2.23)
Length (states) of path with itp 'false':                 0 (count: 1651, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 1651, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2023 (count: 1651, min: 0, max: 3, avg: 1.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1652
Number of successful refinements:     1651
Number of failed refinements:         0
Max. size of reached set before ref.: 619750
Max. size of reached set after ref.:  619587
Avg. size of reached set before ref.: 193338.61
Avg. size of reached set after ref.:  191353.43

Total time for CEGAR algorithm:     894.944s
Time for refinements:               434.295s
Average time for refinement:          0.262s
Max time for refinement:              1.589s

Code Coverage
-----------------------------
  Function coverage:      0.120
  Visited lines:          1535
  Total lines:            5886
  Line coverage:          0.261
  Visited conditions:     234
  Total conditions:       1648
  Condition coverage:     0.142

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             85956
  Number of reached locations:   637 (8%)
    Avg states per location:     134
    Max states per location:     1255 (at node N7348)
  Number of reached functions:   39 (12%)
  Number of partitions:          85956
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        36

Time for analysis setup:          5.407s
  Time for loading CPAs:          0.841s
  Time for loading parser:        0.559s
  Time for CFA construction:      3.900s
    Time for parsing file(s):     0.757s
    Time for AST to CFA:          1.459s
    Time for CFA sanity check:    0.373s
    Time for post-processing:     1.149s
      Time for var class.:        0.499s
Time for Analysis:              894.944s
CPU time for analysis:          894.940s
Total time for CPAchecker:      900.354s
Total CPU time for CPAchecker:  900.340s
Time for statistics:              0.876s

Time for Garbage Collector:      34.378s (in 1211 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                877MB (   836 MiB) max;    432MB (   412 MiB) avg;    900MB (   858 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           936MB (   893 MiB) max;    642MB (   612 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8269MB (  7886 MiB) max;   8230MB (  7848 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
