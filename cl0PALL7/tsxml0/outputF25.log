scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k8ue41k8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            109233 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            75647 (69%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33586 (31%)
  Times precision was empty:       11165 (10%)
  Times precision was {false}:     5533 (5%)
  Times result was cached:         84648 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7887 (7%)
  Times result was 'false':        40192 (37%)
Number of strengthen sat checks:   0
Number of coverage checks:         651826
  BDD entailment checks:           34022
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       269
Number of predicates discovered:          7
Number of abstraction locations:          8
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         98090
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 7.31
Number of irrelevant predicates:          33601 (34%)
Number of preds handled by boolean abs:   7901 (8%)
  Total number of models for allsat:      7070
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.90

Time for post operator:                 62.361s
  Time for path formula creation:       60.903s
Time for strengthen operator:            2.625s
Time for prec operator:                419.100s
  Time for abstraction:                415.902s (Max:     1.527s, Count: 109233)
    Boolean abstraction:               237.942s
    Solving time:                      264.302s (Max:     2.995s)
    Model enumeration time:             15.616s
    Time for BDD construction:           0.326s (Max:     0.010s)
Time for merge operator:                20.314s
Time for coverage check:                 0.131s
  Time for BDD entailment checks:        0.078s
Total time for SMT solver (w/o itp):   279.919s

Number of path formula cache hits:   3443860 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    49.200s

Total number of created targets for pointer analysis: 1002006
   Number of created targets for uf: *unsigned_char is 66249
   Number of created targets for uf: *unsigned_int is 14


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14800 (count: 125688, min: 0, max: 383, avg: 0.12)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.757s
  Time for transition matches:                         2.306s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.030s
Automaton transfers with branching:                0
Automaton transfer successors:                      3918416 (count: 3918416, min: 1, max: 1, avg: 1.00) [1 x 3918416]

CPA algorithm statistics
------------------------
Number of iterations:            2553908
Max size of waitlist:            18627
Average size of waitlist:        8584
Number of computed successors:   2958148
Max successors for one state:    2
Number of times merged:          308902
Number of times stopped:         342908
Number of times breaked:         319

Total time for CPA algorithm:       576.103s (Max:   320.569s)
  Time for choose from waitlist:      0.780s
  Time for precision adjustment:    436.203s
  Time for transfer relation:       103.874s
  Time for merge operator:           23.347s
  Time for stop operator:             2.411s
  Time for adding to reached set:     4.230s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   319
Avg. length of target path (in blocks):                2454 (count: 319, min: 2, max: 10, avg: 7.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  15.426s
  Counterexample analysis:                            13.786s (Max:     0.119s, Calls: 319)
    Refinement sat check:                             11.538s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.068s
  ARG update:                                          1.254s

Length of refined path (in blocks):                    2454 (count: 319, min: 2, max: 10, avg: 7.69)
Number of affected states:                              384 (count: 319, min: 1, max: 4, avg: 1.20)
Length (states) of path with itp 'true':               1751 (count: 319, min: 0, max: 8, avg: 5.49)
Length (states) of path with itp non-trivial itp:       384 (count: 319, min: 1, max: 4, avg: 1.20)
Length (states) of path with itp 'false':                 0 (count: 319, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 319, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              65 (count: 319, min: 0, max: 3, avg: 0.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                319
Number of successful refinements:     319
Number of failed refinements:         0
Max. size of reached set before ref.: 699953
Max. size of reached set after ref.:  699490
Avg. size of reached set before ref.: 510831.49
Avg. size of reached set after ref.:  509604.68

Total time for CEGAR algorithm:     894.809s
Time for refinements:               179.213s
Average time for refinement:          0.561s
Max time for refinement:              2.508s

Code Coverage
-----------------------------
  Function coverage:      0.120
  Visited lines:          1535
  Total lines:            5886
  Line coverage:          0.261
  Visited conditions:     234
  Total conditions:       1648
  Condition coverage:     0.142

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             2183696
  Size of final wait list        18626

Time for analysis setup:          5.495s
  Time for loading CPAs:          0.904s
  Time for loading parser:        0.452s
  Time for CFA construction:      4.024s
    Time for parsing file(s):     0.803s
    Time for AST to CFA:          1.280s
    Time for CFA sanity check:    0.462s
    Time for post-processing:     1.320s
      Time for var class.:        0.718s
Time for Analysis:              894.809s
CPU time for analysis:          894.780s
Total time for CPAchecker:      900.318s
Total CPU time for CPAchecker:  900.270s
Time for statistics:             10.662s

Time for Garbage Collector:      60.078s (in 536 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2576MB (  2456 MiB) max;    878MB (   838 MiB) avg;   2626MB (  2505 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          3553MB (  3388 MiB) max;   1315MB (  1254 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8588MB (  8190 MiB) max;   8304MB (  7920 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
