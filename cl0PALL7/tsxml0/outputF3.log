scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__3dw7zys/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25468 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            21271 (84%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4197 (16%)
  Times precision was empty:       17301 (68%)
  Times precision was {false}:     1598 (6%)
  Times result was cached:         5751 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      818 (3%)
  Times result was 'false':        5382 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         205583
  BDD entailment checks:           1261
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1814
Number of predicates discovered:          7
Number of abstraction locations:          19
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         14439
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 5.98
Number of irrelevant predicates:          11364 (79%)
Number of preds handled by boolean abs:   1072 (7%)
  Total number of models for allsat:      660
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.81

Time for post operator:                 24.163s
  Time for path formula creation:       23.871s
Time for strengthen operator:            0.832s
Time for prec operator:                519.363s
  Time for abstraction:                518.481s (Max:    17.732s, Count: 25468)
    Boolean abstraction:               257.367s
    Solving time:                      332.345s (Max:    14.323s)
    Model enumeration time:             60.182s
    Time for BDD construction:           0.082s (Max:     0.009s)
Time for merge operator:                14.802s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):   392.528s

Number of path formula cache hits:   1024857 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.124s

Total number of created targets for pointer analysis: 551490
   Number of created targets for uf: *unsigned_short_int is 483
   Number of created targets for uf: *unsigned_char is 396
   Number of created targets for uf: *(unsigned_char)* is 171
   Number of created targets for uf: *unsigned_int is 95


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1384 (count: 32855, min: 0, max: 75, avg: 0.04)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.560s
  Time for transition matches:                         0.782s
  Time for transition assertions:                      0.013s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      1159473 (count: 1159473, min: 1, max: 1, avg: 1.00) [1 x 1159473]

CPA algorithm statistics
------------------------
Number of iterations:            694761
Max size of waitlist:            501
Average size of waitlist:        310
Number of computed successors:   822154
Max successors for one state:    2
Number of times merged:          102161
Number of times stopped:         103276
Number of times breaked:         744

Total time for CPA algorithm:       575.766s (Max:    51.442s)
  Time for choose from waitlist:      0.324s
  Time for precision adjustment:    522.571s
  Time for transfer relation:        33.682s
  Time for merge operator:           15.924s
  Time for stop operator:             0.761s
  Time for adding to reached set:     1.005s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   744
Avg. length of target path (in blocks):                3081 (count: 744, min: 2, max: 5, avg: 4.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 304.187s
  Counterexample analysis:                           302.038s (Max:     1.105s, Calls: 744)
    Refinement sat check:                            281.877s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.108s
  ARG update:                                          1.223s

Length of refined path (in blocks):                    2711 (count: 744, min: 2, max: 5, avg: 3.64)
Number of affected states:                              396 (count: 744, min: 0, max: 4, avg: 0.53)
Length (states) of path with itp 'true':               1571 (count: 744, min: 0, max: 3, avg: 2.11)
Length (states) of path with itp non-trivial itp:       396 (count: 744, min: 0, max: 4, avg: 0.53)
Length (states) of path with itp 'false':               370 (count: 744, min: 0, max: 1, avg: 0.50)
Different non-trivial interpolants along paths:           0 (count: 744, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              22 (count: 744, min: 0, max: 3, avg: 0.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                744
Number of successful refinements:     744
Number of failed refinements:         0
Max. size of reached set before ref.: 20404
Max. size of reached set after ref.:  20241
Avg. size of reached set before ref.: 13626.48
Avg. size of reached set after ref.:  12704.48

Total time for CEGAR algorithm:     894.516s
Time for refinements:               312.911s
Average time for refinement:          0.420s
Max time for refinement:              1.122s

Code Coverage
-----------------------------
  Function coverage:      0.210
  Visited lines:          2067
  Total lines:            5886
  Line coverage:          0.351
  Visited conditions:     462
  Total conditions:       1648
  Condition coverage:     0.280

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             27532
  Number of reached locations:   1166 (14%)
    Avg states per location:     23
    Max states per location:     357 (at node N7344)
  Number of reached functions:   68 (21%)
  Number of partitions:          27526
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6724 (before line 13160), Function main called from node N6685, stack depth 1 [a457c2b], stack [main]])
  Number of target states:       0
  Size of final wait list        484

Time for analysis setup:          5.855s
  Time for loading CPAs:          0.895s
  Time for loading parser:        0.531s
  Time for CFA construction:      4.302s
    Time for parsing file(s):     0.861s
    Time for AST to CFA:          1.502s
    Time for CFA sanity check:    0.439s
    Time for post-processing:     1.328s
      Time for var class.:        0.587s
Time for Analysis:              894.516s
CPU time for analysis:          894.510s
Total time for CPAchecker:      900.376s
Total CPU time for CPAchecker:  900.360s
Time for statistics:              0.379s

Time for Garbage Collector:      11.202s (in 1189 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                251MB (   240 MiB) max;    150MB (   143 MiB) avg;    262MB (   250 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           321MB (   306 MiB) max;    225MB (   215 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8859MB (  8449 MiB) max;   8499MB (  8105 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
