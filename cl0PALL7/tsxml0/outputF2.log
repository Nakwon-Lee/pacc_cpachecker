scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2eu020ea/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30374 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16519 (54%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13855 (46%)
  Times precision was empty:       6042 (20%)
  Times precision was {false}:     7083 (23%)
  Times result was cached:         12221 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5028 (17%)
  Times result was 'false':        17377 (57%)
Number of strengthen sat checks:   0
Number of coverage checks:         165309
  BDD entailment checks:           7659
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1814
Number of predicates discovered:          16
Number of abstraction locations:          9
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         80514
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 6.65
Number of irrelevant predicates:          20239 (25%)
Number of preds handled by boolean abs:   28707 (36%)
  Total number of models for allsat:      12510
  Max number of models for allsat:        60
  Avg number of models for allsat:        2.49

Time for post operator:                 39.313s
  Time for path formula creation:       38.964s
Time for strengthen operator:            0.818s
Time for prec operator:                789.526s
  Time for abstraction:                788.349s (Max:     3.514s, Count: 30374)
    Boolean abstraction:               510.999s
    Solving time:                      487.336s (Max:     2.565s)
    Model enumeration time:            181.185s
    Time for BDD construction:           0.526s (Max:     0.014s)
Time for merge operator:                17.760s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):   668.526s

Number of path formula cache hits:   678019 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.184s

Total number of created targets for pointer analysis: 564806
   Number of created targets for uf: *unsigned_short_int is 40
   Number of created targets for uf: *unsigned_char is 6839
   Number of created targets for uf: *(unsigned_char)* is 29
   Number of created targets for uf: *unsigned_int is 1380
   Number of created targets for uf: *char is 841


Number of BDD nodes:                               4847
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9022 (count: 86945, min: 0, max: 127, avg: 0.10)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.777s
  Time for transition matches:                         0.750s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.043s
Automaton transfers with branching:                0
Automaton transfer successors:                      1064964 (count: 1064964, min: 1, max: 1, avg: 1.00) [1 x 1064964]

CPA algorithm statistics
------------------------
Number of iterations:            711696
Max size of waitlist:            3806
Average size of waitlist:        1483
Number of computed successors:   819215
Max successors for one state:    2
Number of times merged:          78825
Number of times stopped:         83044
Number of times breaked:         60

Total time for CPA algorithm:       867.537s (Max:   610.684s)
  Time for choose from waitlist:      0.337s
  Time for precision adjustment:    793.554s
  Time for transfer relation:        50.850s
  Time for merge operator:           18.850s
  Time for stop operator:             0.823s
  Time for adding to reached set:     1.214s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                 284 (count: 60, min: 2, max: 7, avg: 4.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  25.379s
  Counterexample analysis:                            24.765s (Max:     1.397s, Calls: 60)
    Refinement sat check:                             23.095s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.030s
  ARG update:                                          0.440s

Length of refined path (in blocks):                     269 (count: 60, min: 2, max: 7, avg: 4.48)
Number of affected states:                              136 (count: 60, min: 0, max: 5, avg: 2.27)
Length (states) of path with itp 'true':                 73 (count: 60, min: 0, max: 5, avg: 1.22)
Length (states) of path with itp non-trivial itp:       136 (count: 60, min: 0, max: 5, avg: 2.27)
Length (states) of path with itp 'false':                15 (count: 60, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           5 (count: 60, min: 0, max: 2, avg: 0.08)
Equal non-trivial interpolants along paths:              85 (count: 60, min: 0, max: 4, avg: 1.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 33600
Max. size of reached set after ref.:  9036
Avg. size of reached set before ref.: 5588.13
Avg. size of reached set after ref.:  2204.50

Total time for CEGAR algorithm:     893.459s
Time for refinements:                25.821s
Average time for refinement:          0.430s
Max time for refinement:              1.424s

Code Coverage
-----------------------------
  Function coverage:      0.207
  Visited lines:          2055
  Total lines:            5886
  Line coverage:          0.349
  Visited conditions:     478
  Total conditions:       1648
  Condition coverage:     0.290

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             515776
  Number of reached locations:   1172 (14%)
    Avg states per location:     440
    Max states per location:     10944 (at node N7344)
  Number of reached functions:   67 (21%)
  Number of partitions:          515574
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N5184 (before line 11523), Function pccard_get_next_tuple called from node N6597, stack depth 4 [5afa04d1], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_next_tuple]])
  Number of target states:       0
  Size of final wait list        3800

Time for analysis setup:          6.854s
  Time for loading CPAs:          1.199s
  Time for loading parser:        0.510s
  Time for CFA construction:      4.992s
    Time for parsing file(s):     0.896s
    Time for AST to CFA:          1.622s
    Time for CFA sanity check:    0.533s
    Time for post-processing:     1.765s
      Time for var class.:        0.733s
Time for Analysis:              893.459s
CPU time for analysis:          893.440s
Total time for CPAchecker:      900.322s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              3.366s

Time for Garbage Collector:      19.169s (in 912 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                720MB (   687 MiB) max;    255MB (   243 MiB) avg;    737MB (   703 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           822MB (   784 MiB) max;    383MB (   365 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9240MB (  8812 MiB) max;   8630MB (  8230 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
