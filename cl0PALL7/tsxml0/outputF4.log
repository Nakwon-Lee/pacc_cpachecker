scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ijcf5x90/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            97277 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            70016 (72%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27261 (28%)
  Times precision was empty:       10752 (11%)
  Times precision was {false}:     6369 (7%)
  Times result was cached:         71820 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8336 (9%)
  Times result was 'false':        30280 (31%)
Number of strengthen sat checks:   0
Number of coverage checks:         606675
  BDD entailment checks:           33717
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       269
Number of predicates discovered:          7
Number of abstraction locations:          8
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         86547
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 5.89
Number of irrelevant predicates:          27266 (32%)
Number of preds handled by boolean abs:   8350 (10%)
  Total number of models for allsat:      7533
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.90

Time for post operator:                 63.311s
  Time for path formula creation:       62.068s
Time for strengthen operator:            2.410s
Time for prec operator:                436.335s
  Time for abstraction:                433.525s (Max:     2.564s, Count: 97277)
    Boolean abstraction:               253.175s
    Solving time:                      282.632s (Max:     0.208s)
    Model enumeration time:             16.205s
    Time for BDD construction:           0.354s (Max:     0.012s)
Time for merge operator:                20.467s
Time for coverage check:                 0.145s
  Time for BDD entailment checks:        0.090s
Total time for SMT solver (w/o itp):   298.837s

Number of path formula cache hits:   3008121 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    51.433s

Total number of created targets for pointer analysis: 1038577
   Number of created targets for uf: *unsigned_char is 48
   Number of created targets for uf: *unsigned_int is 14


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15937 (count: 132671, min: 0, max: 316, avg: 0.12)
Time for BDD node cleanup:                             0.035s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.922s
  Time for transition matches:                         1.866s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.034s
Automaton transfers with branching:                0
Automaton transfer successors:                      3611413 (count: 3611413, min: 1, max: 1, avg: 1.00) [1 x 3611413]

CPA algorithm statistics
------------------------
Number of iterations:            2352876
Max size of waitlist:            19097
Average size of waitlist:        9992
Number of computed successors:   2723002
Max successors for one state:    2
Number of times merged:          286479
Number of times stopped:         320190
Number of times breaked:         199

Total time for CPA algorithm:       586.498s (Max:   321.084s)
  Time for choose from waitlist:      0.617s
  Time for precision adjustment:    451.146s
  Time for transfer relation:        98.826s
  Time for merge operator:           23.422s
  Time for stop operator:             2.179s
  Time for adding to reached set:     4.795s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   199
Avg. length of target path (in blocks):                1344 (count: 199, min: 2, max: 10, avg: 6.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.655s
  Counterexample analysis:                             8.200s (Max:     0.086s, Calls: 199)
    Refinement sat check:                              6.846s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.047s
  ARG update:                                          0.195s

Length of refined path (in blocks):                    1344 (count: 199, min: 2, max: 10, avg: 6.75)
Number of affected states:                              233 (count: 199, min: 1, max: 4, avg: 1.17)
Length (states) of path with itp 'true':                912 (count: 199, min: 0, max: 8, avg: 4.58)
Length (states) of path with itp non-trivial itp:       233 (count: 199, min: 1, max: 4, avg: 1.17)
Length (states) of path with itp 'false':                 0 (count: 199, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 199, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              34 (count: 199, min: 0, max: 3, avg: 0.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                199
Number of successful refinements:     199
Number of failed refinements:         0
Max. size of reached set before ref.: 2249639
Max. size of reached set after ref.:  2248812
Avg. size of reached set before ref.: 829647.64
Avg. size of reached set after ref.:  829379.63

Total time for CEGAR algorithm:     894.268s
Time for refinements:               168.547s
Average time for refinement:          0.846s
Max time for refinement:              2.737s

Code Coverage
-----------------------------
  Function coverage:      0.120
  Visited lines:          1535
  Total lines:            5886
  Line coverage:          0.261
  Visited conditions:     234
  Total conditions:       1648
  Condition coverage:     0.142

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             2319197
  Size of final wait list        18939

Time for analysis setup:          6.041s
  Time for loading CPAs:          0.958s
  Time for loading parser:        0.636s
  Time for CFA construction:      4.302s
    Time for parsing file(s):     0.910s
    Time for AST to CFA:          1.486s
    Time for CFA sanity check:    0.491s
    Time for post-processing:     1.223s
      Time for var class.:        0.535s
Time for Analysis:              894.268s
CPU time for analysis:          894.250s
Total time for CPAchecker:      900.314s
Total CPU time for CPAchecker:  900.280s
Time for statistics:             10.416s

Time for Garbage Collector:      49.604s (in 452 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2509MB (  2393 MiB) max;   1150MB (  1097 MiB) avg;   2591MB (  2471 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2773MB (  2644 MiB) max;   1643MB (  1567 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8569MB (  8172 MiB) max;   8381MB (  7992 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
