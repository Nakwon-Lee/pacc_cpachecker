scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e2m0kvu8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3606 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2403 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1203 (33%)
  Times precision was empty:       704 (20%)
  Times precision was {false}:     360 (10%)
  Times result was cached:         2265 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      277 (8%)
  Times result was 'false':        1203 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         23675
  BDD entailment checks:           1543
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       205
Number of predicates discovered:          7
Number of abstraction locations:          8
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         2924
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 4.59
Number of irrelevant predicates:          1235 (42%)
Number of preds handled by boolean abs:   291 (10%)
  Total number of models for allsat:      231
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.83

Time for post operator:                  4.020s
  Time for path formula creation:        3.951s
Time for strengthen operator:            0.141s
Time for prec operator:                  9.305s
  Time for abstraction:                  9.085s (Max:     0.076s, Count: 3606)
    Boolean abstraction:                 3.602s
    Solving time:                        5.224s (Max:     0.057s)
    Model enumeration time:              0.237s
    Time for BDD construction:           0.041s (Max:     0.016s)
Time for merge operator:                 1.021s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):     5.461s

Number of path formula cache hits:   120171 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.458s

Total number of created targets for pointer analysis: 19757
   Number of created targets for uf: *unsigned_char is 26
   Number of created targets for uf: *unsigned_int is 14


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         572 (count: 6057, min: 0, max: 75, avg: 0.09)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.386s
Automaton transfers with branching:                0
Automaton transfer successors:                       143210 (count: 143210, min: 1, max: 1, avg: 1.00) [1 x 143210]

CPA algorithm statistics
------------------------
Number of iterations:            97922
Max size of waitlist:            32
Average size of waitlist:        21
Number of computed successors:   111938
Max successors for one state:    2
Number of times merged:          11066
Number of times stopped:         12576
Number of times breaked:         89

Total time for CPA algorithm:        18.326s (Max:     3.155s)
  Time for choose from waitlist:      0.077s
  Time for precision adjustment:     10.122s
  Time for transfer relation:         6.076s
  Time for merge operator:            1.261s
  Time for stop operator:             0.151s
  Time for adding to reached set:     0.197s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   89
Avg. length of target path (in blocks):                 647 (count: 89, min: 2, max: 10, avg: 7.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.628s
  Counterexample analysis:                             4.310s (Max:     0.114s, Calls: 89)
    Refinement sat check:                              3.779s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.010s
  ARG update:                                          0.174s

Length of refined path (in blocks):                     647 (count: 89, min: 2, max: 10, avg: 7.27)
Number of affected states:                              219 (count: 89, min: 1, max: 4, avg: 2.46)
Length (states) of path with itp 'true':                339 (count: 89, min: 0, max: 5, avg: 3.81)
Length (states) of path with itp non-trivial itp:       219 (count: 89, min: 1, max: 4, avg: 2.46)
Length (states) of path with itp 'false':                 0 (count: 89, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 89, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             130 (count: 89, min: 0, max: 3, avg: 1.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                89
Number of successful refinements:     89
Number of failed refinements:         0
Max. size of reached set before ref.: 28681
Max. size of reached set after ref.:  28086
Avg. size of reached set before ref.: 10515.70
Avg. size of reached set after ref.:  9728.35

Total time for CEGAR algorithm:      24.772s
Time for refinements:                 5.744s
Average time for refinement:          0.064s
Max time for refinement:              0.126s

Code Coverage
-----------------------------
  Function coverage:      0.120
  Visited lines:          1535
  Total lines:            5886
  Line coverage:          0.261
  Visited conditions:     234
  Total conditions:       1648
  Condition coverage:     0.142

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             28086
  Number of reached locations:   636 (8%)
    Avg states per location:     44
    Max states per location:     400 (at node N7344)
  Number of reached functions:   39 (12%)
  Number of partitions:          28086
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          5.594s
  Time for loading CPAs:          1.118s
  Time for loading parser:        0.452s
  Time for CFA construction:      3.909s
    Time for parsing file(s):     0.781s
    Time for AST to CFA:          1.388s
    Time for CFA sanity check:    0.504s
    Time for post-processing:     1.088s
      Time for var class.:        0.491s
Time for Analysis:               24.772s
CPU time for analysis:           24.770s
Total time for CPAchecker:       30.369s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.350s

Time for Garbage Collector:       1.077s (in 85 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                105MB (   100 MiB) max;     63MB (    60 MiB) avg;    109MB (   104 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8122MB (  7746 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
