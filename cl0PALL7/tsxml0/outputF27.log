scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_92ir0670/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25324 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            21155 (84%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4169 (16%)
  Times precision was empty:       17205 (68%)
  Times precision was {false}:     1570 (6%)
  Times result was cached:         5751 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      798 (3%)
  Times result was 'false':        5345 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         204461
  BDD entailment checks:           1257
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1814
Number of predicates discovered:          7
Number of abstraction locations:          19
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         14315
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 6.05
Number of irrelevant predicates:          11260 (79%)
Number of preds handled by boolean abs:   1052 (7%)
  Total number of models for allsat:      649
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.81

Time for post operator:                 24.709s
  Time for path formula creation:       24.274s
Time for strengthen operator:            0.893s
Time for prec operator:                509.715s
  Time for abstraction:                508.724s (Max:    17.036s, Count: 25324)
    Boolean abstraction:               246.011s
    Solving time:                      321.457s (Max:    13.570s)
    Model enumeration time:             59.230s
    Time for BDD construction:           0.127s (Max:     0.011s)
Time for merge operator:                14.312s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):   380.687s

Number of path formula cache hits:   1024857 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.572s

Total number of created targets for pointer analysis: 532754
   Number of created targets for uf: *unsigned_short_int is 470
   Number of created targets for uf: *unsigned_char is 353
   Number of created targets for uf: *(unsigned_char)* is 167
   Number of created targets for uf: *unsigned_int is 95


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1354 (count: 32467, min: 0, max: 75, avg: 0.04)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.390s
  Time for transition matches:                         0.702s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.034s
Automaton transfers with branching:                0
Automaton transfer successors:                      1153041 (count: 1153041, min: 1, max: 1, avg: 1.00) [1 x 1153041]

CPA algorithm statistics
------------------------
Number of iterations:            690906
Max size of waitlist:            439
Average size of waitlist:        310
Number of computed successors:   817598
Max successors for one state:    2
Number of times merged:          101602
Number of times stopped:         102714
Number of times breaked:         744

Total time for CPA algorithm:       566.530s (Max:    56.361s)
  Time for choose from waitlist:      0.303s
  Time for precision adjustment:    513.097s
  Time for transfer relation:        34.367s
  Time for merge operator:           15.556s
  Time for stop operator:             0.630s
  Time for adding to reached set:     1.023s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   744
Avg. length of target path (in blocks):                3081 (count: 744, min: 2, max: 5, avg: 4.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 312.353s
  Counterexample analysis:                           309.928s (Max:     1.145s, Calls: 744)
    Refinement sat check:                            288.738s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.036s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.195s
  ARG update:                                          1.333s

Length of refined path (in blocks):                    2711 (count: 744, min: 2, max: 5, avg: 3.64)
Number of affected states:                              396 (count: 744, min: 0, max: 4, avg: 0.53)
Length (states) of path with itp 'true':               1571 (count: 744, min: 0, max: 3, avg: 2.11)
Length (states) of path with itp non-trivial itp:       396 (count: 744, min: 0, max: 4, avg: 0.53)
Length (states) of path with itp 'false':               370 (count: 744, min: 0, max: 1, avg: 0.50)
Different non-trivial interpolants along paths:           0 (count: 744, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              22 (count: 744, min: 0, max: 3, avg: 0.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                744
Number of successful refinements:     744
Number of failed refinements:         0
Max. size of reached set before ref.: 20404
Max. size of reached set after ref.:  20241
Avg. size of reached set before ref.: 13626.48
Avg. size of reached set after ref.:  12704.48

Total time for CEGAR algorithm:     894.145s
Time for refinements:               321.726s
Average time for refinement:          0.432s
Max time for refinement:              1.167s

Code Coverage
-----------------------------
  Function coverage:      0.210
  Visited lines:          2067
  Total lines:            5886
  Line coverage:          0.351
  Visited conditions:     462
  Total conditions:       1648
  Condition coverage:     0.280

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             23575
  Number of reached locations:   1166 (14%)
    Avg states per location:     20
    Max states per location:     329 (at node N7344)
  Number of reached functions:   68 (21%)
  Number of partitions:          23569
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6724 (before line 13160), Function main called from node N6685, stack depth 1 [a457c2b], stack [main]])
  Number of target states:       0
  Size of final wait list        382

Time for analysis setup:          6.160s
  Time for loading CPAs:          0.980s
  Time for loading parser:        0.670s
  Time for CFA construction:      4.406s
    Time for parsing file(s):     1.096s
    Time for AST to CFA:          1.644s
    Time for CFA sanity check:    0.344s
    Time for post-processing:     1.039s
      Time for var class.:        0.516s
Time for Analysis:              894.145s
CPU time for analysis:          894.120s
Total time for CPAchecker:      900.309s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              0.338s

Time for Garbage Collector:      12.221s (in 1163 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                246MB (   235 MiB) max;    149MB (   142 MiB) avg;    270MB (   257 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           328MB (   313 MiB) max;    225MB (   215 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8859MB (  8449 MiB) max;   8489MB (  8096 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
