scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kjs1lv0q/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            153272 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            90587 (59%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62685 (41%)
  Times precision was empty:       11685 (8%)
  Times precision was {false}:     10068 (7%)
  Times result was cached:         121869 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9650 (6%)
  Times result was 'false':        72832 (48%)
Number of strengthen sat checks:   0
Number of coverage checks:         898974
  BDD entailment checks:           46196
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       269
Number of predicates discovered:          7
Number of abstraction locations:          7
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         141641
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 7.18
Number of irrelevant predicates:          62716 (44%)
Number of preds handled by boolean abs:   9664 (7%)
  Total number of models for allsat:      7984
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.83

Time for post operator:                 69.528s
  Time for path formula creation:       68.220s
Time for strengthen operator:            3.209s
Time for prec operator:                659.374s
  Time for abstraction:                655.088s (Max:     3.662s, Count: 153272)
    Boolean abstraction:               319.380s
    Solving time:                      406.020s (Max:     0.379s)
    Model enumeration time:             24.063s
    Time for BDD construction:           0.300s (Max:     0.010s)
Time for merge operator:                32.224s
Time for coverage check:                 0.129s
  Time for BDD entailment checks:        0.080s
Total time for SMT solver (w/o itp):   430.083s

Number of path formula cache hits:   5068627 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    49.676s

Total number of created targets for pointer analysis: 663384
   Number of created targets for uf: *unsigned_char is 1483
   Number of created targets for uf: *unsigned_int is 14


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17591 (count: 176159, min: 0, max: 398, avg: 0.10)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.360s
  Time for transition matches:                         3.157s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.046s
Automaton transfers with branching:                0
Automaton transfer successors:                      5641210 (count: 5641210, min: 1, max: 1, avg: 1.00) [1 x 5641210]

CPA algorithm statistics
------------------------
Number of iterations:            3885155
Max size of waitlist:            13855
Average size of waitlist:        7628
Number of computed successors:   4444904
Max successors for one state:    2
Number of times merged:          426389
Number of times stopped:         472571
Number of times breaked:         72

Total time for CPA algorithm:       855.669s (Max:   521.833s)
  Time for choose from waitlist:      1.594s
  Time for precision adjustment:    680.586s
  Time for transfer relation:       116.876s
  Time for merge operator:           37.132s
  Time for stop operator:             4.522s
  Time for adding to reached set:     7.661s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   72
Avg. length of target path (in blocks):                 360 (count: 72, min: 2, max: 9, avg: 5.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.175s
  Counterexample analysis:                             2.950s (Max:     0.085s, Calls: 72)
    Refinement sat check:                              2.576s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.008s
  ARG update:                                          0.136s

Length of refined path (in blocks):                     360 (count: 72, min: 2, max: 9, avg: 5.00)
Number of affected states:                              106 (count: 72, min: 1, max: 4, avg: 1.47)
Length (states) of path with itp 'true':                182 (count: 72, min: 0, max: 4, avg: 2.53)
Length (states) of path with itp non-trivial itp:       106 (count: 72, min: 1, max: 4, avg: 1.47)
Length (states) of path with itp 'false':                 0 (count: 72, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 72, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              34 (count: 72, min: 0, max: 3, avg: 0.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                72
Number of successful refinements:     72
Number of failed refinements:         0
Max. size of reached set before ref.: 1458432
Max. size of reached set after ref.:  1458269
Avg. size of reached set before ref.: 343320.31
Avg. size of reached set after ref.:  342798.88

Total time for CEGAR algorithm:     895.125s
Time for refinements:                22.236s
Average time for refinement:          0.308s
Max time for refinement:              1.339s

Code Coverage
-----------------------------
  Function coverage:      0.120
  Visited lines:          1553
  Total lines:            5886
  Line coverage:          0.264
  Visited conditions:     244
  Total conditions:       1648
  Condition coverage:     0.148

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             3861958
  Size of final wait list        13853

Time for analysis setup:          5.211s
  Time for loading CPAs:          0.814s
  Time for loading parser:        0.455s
  Time for CFA construction:      3.832s
    Time for parsing file(s):     0.797s
    Time for AST to CFA:          1.321s
    Time for CFA sanity check:    0.419s
    Time for post-processing:     1.141s
      Time for var class.:        0.520s
Time for Analysis:              895.125s
CPU time for analysis:          895.060s
Total time for CPAchecker:      900.339s
Total CPU time for CPAchecker:  900.270s
Time for statistics:             19.881s

Time for Garbage Collector:      75.074s (in 448 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3938MB (  3756 MiB) max;   1474MB (  1405 MiB) avg;   4060MB (  3872 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          4474MB (  4267 MiB) max;   2171MB (  2070 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8772MB (  8365 MiB) max;   8459MB (  8067 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
