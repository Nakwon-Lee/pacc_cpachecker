scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__kmv2rwu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            210763 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            140302 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70461 (33%)
  Times precision was empty:       331 (0%)
  Times precision was {false}:     12326 (6%)
  Times result was cached:         183764 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14342 (7%)
  Times result was 'false':        77288 (37%)
Number of strengthen sat checks:   0
Number of coverage checks:         1346311
  BDD entailment checks:           94755
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       232
Number of predicates discovered:          7
Number of abstraction locations:          11
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         769808
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 28.87
Number of irrelevant predicates:          70955 (9%)
Number of preds handled by boolean abs:   70800 (9%)
  Total number of models for allsat:      12828
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.89

Time for post operator:                103.710s
  Time for path formula creation:      101.355s
Time for strengthen operator:            4.838s
Time for prec operator:                618.339s
  Time for abstraction:                612.486s (Max:     4.395s, Count: 210763)
    Boolean abstraction:               308.627s
    Solving time:                      359.901s (Max:     0.511s)
    Model enumeration time:             19.619s
    Time for BDD construction:           0.355s (Max:     0.012s)
Time for merge operator:                34.273s
Time for coverage check:                 0.234s
  Time for BDD entailment checks:        0.116s
Total time for SMT solver (w/o itp):   379.520s

Number of path formula cache hits:   7102112 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    77.921s

Total number of created targets for pointer analysis: 1178632
   Number of created targets for uf: *unsigned_char is 196055
   Number of created targets for uf: *unsigned_int is 974


Number of BDD nodes:                               251
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27254 (count: 255238, min: 0, max: 653, avg: 0.11)
Time for BDD node cleanup:                             0.057s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.993s
  Time for transition matches:                         3.968s
  Time for transition assertions:                      0.011s
  Time for transition actions:                         0.053s
Automaton transfers with branching:                0
Automaton transfer successors:                      7996722 (count: 7996722, min: 1, max: 1, avg: 1.00) [1 x 7996722]

CPA algorithm statistics
------------------------
Number of iterations:            5521315
Max size of waitlist:            42
Average size of waitlist:        24
Number of computed successors:   6319799
Max successors for one state:    2
Number of times merged:          625778
Number of times stopped:         720396
Number of times breaked:         55

Total time for CPA algorithm:       894.484s (Max:   865.549s)
  Time for choose from waitlist:      1.408s
  Time for precision adjustment:    664.013s
  Time for transfer relation:       167.455s
  Time for merge operator:           39.495s
  Time for stop operator:             4.381s
  Time for adding to reached set:     7.516s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   55
Avg. length of target path (in blocks):                 387 (count: 55, min: 2, max: 11, avg: 7.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.318s
  Counterexample analysis:                             2.936s (Max:     0.121s, Calls: 55)
    Refinement sat check:                              2.623s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.022s
  ARG update:                                          0.266s

Length of refined path (in blocks):                     387 (count: 55, min: 2, max: 11, avg: 7.04)
Number of affected states:                              269 (count: 55, min: 1, max: 10, avg: 4.89)
Length (states) of path with itp 'true':                 63 (count: 55, min: 0, max: 6, avg: 1.15)
Length (states) of path with itp non-trivial itp:       269 (count: 55, min: 1, max: 10, avg: 4.89)
Length (states) of path with itp 'false':                 0 (count: 55, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           2 (count: 55, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:             212 (count: 55, min: 0, max: 9, avg: 3.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 13683
Max. size of reached set after ref.:  13140
Avg. size of reached set before ref.: 3045.45
Avg. size of reached set after ref.:  853.58

Total time for CEGAR algorithm:     898.030s
Time for refinements:                 3.511s
Average time for refinement:          0.063s
Max time for refinement:              0.139s

Code Coverage
-----------------------------
  Function coverage:      0.123
  Visited lines:          1594
  Total lines:            5886
  Line coverage:          0.271
  Visited conditions:     262
  Total conditions:       1648
  Condition coverage:     0.159

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             5401563
  Size of final wait list        28

Time for analysis setup:          5.014s
  Time for loading CPAs:          0.779s
  Time for loading parser:        0.437s
  Time for CFA construction:      3.689s
    Time for parsing file(s):     0.756s
    Time for AST to CFA:          1.326s
    Time for CFA sanity check:    0.415s
    Time for post-processing:     1.058s
      Time for var class.:        0.502s
Time for Analysis:              898.030s
CPU time for analysis:          897.960s
Total time for CPAchecker:      903.046s
Total CPU time for CPAchecker:  902.960s
Time for statistics:             52.590s

Time for Garbage Collector:     136.383s (in 510 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5256MB (  5012 MiB) max;   2096MB (  1999 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     40MB (    38 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   2917MB (  2782 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    46 MiB) avg
Total process virtual memory:   8764MB (  8358 MiB) max;   8464MB (  8072 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
