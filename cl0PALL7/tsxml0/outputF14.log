scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5exlb00g/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            49780 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            44653 (90%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5127 (10%)
  Times precision was empty:       42050 (84%)
  Times precision was {false}:     847 (2%)
  Times result was cached:         6715 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      168 (0%)
  Times result was 'false':        5409 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         417623
  BDD entailment checks:           3413
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1717
Number of predicates discovered:          11
Number of abstraction locations:          12
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         9760
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 9.62
Number of irrelevant predicates:          6736 (69%)
Number of preds handled by boolean abs:   450 (5%)
  Total number of models for allsat:      304
  Max number of models for allsat:        5
  Avg number of models for allsat:        1.81

Time for post operator:                 23.409s
  Time for path formula creation:       22.933s
Time for strengthen operator:            1.299s
Time for prec operator:                249.939s
  Time for abstraction:                248.697s (Max:     1.626s, Count: 49780)
    Boolean abstraction:                13.750s
    Solving time:                      143.989s (Max:     1.364s)
    Model enumeration time:              0.679s
    Time for BDD construction:           0.035s (Max:     0.012s)
Time for merge operator:                13.310s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):   144.668s

Number of path formula cache hits:   2308516 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.920s

Total number of created targets for pointer analysis: 558749
   Number of created targets for uf: *unsigned_short_int is 518
   Number of created targets for uf: *unsigned_char is 15514
   Number of created targets for uf: *(unsigned_char)* is 186
   Number of created targets for uf: *unsigned_int is 3596


Number of BDD nodes:                               310
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         523 (count: 51502, min: 0, max: 75, avg: 0.01)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.898s
  Time for transition matches:                         1.081s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.023s
Automaton transfers with branching:                0
Automaton transfer successors:                      2300086 (count: 2300086, min: 1, max: 1, avg: 1.00) [1 x 2300086]

CPA algorithm statistics
------------------------
Number of iterations:            1355322
Max size of waitlist:            219
Average size of waitlist:        127
Number of computed successors:   1611430
Max successors for one state:    2
Number of times merged:          207105
Number of times stopped:         209152
Number of times breaked:         1005

Total time for CPA algorithm:       310.958s (Max:    13.812s)
  Time for choose from waitlist:      0.335s
  Time for precision adjustment:    254.983s
  Time for transfer relation:        36.444s
  Time for merge operator:           14.834s
  Time for stop operator:             0.977s
  Time for adding to reached set:     1.249s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1005
Avg. length of target path (in blocks):                4922 (count: 1005, min: 2, max: 10, avg: 4.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 578.083s
  Counterexample analysis:                           575.403s (Max:     1.065s, Calls: 1005)
    Refinement sat check:                            541.775s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.083s
  ARG update:                                          1.598s

Length of refined path (in blocks):                    3724 (count: 1004, min: 2, max: 8, avg: 3.71)
Number of affected states:                              569 (count: 1004, min: 0, max: 5, avg: 0.57)
Length (states) of path with itp 'true':               2151 (count: 1004, min: 0, max: 3, avg: 2.14)
Length (states) of path with itp non-trivial itp:       569 (count: 1004, min: 0, max: 5, avg: 0.57)
Length (states) of path with itp 'false':               922 (count: 1004, min: 0, max: 1, avg: 0.92)
Different non-trivial interpolants along paths:         271 (count: 1004, min: 0, max: 3, avg: 0.27)
Equal non-trivial interpolants along paths:              36 (count: 1004, min: 0, max: 4, avg: 0.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1005
Number of successful refinements:     1004
Number of failed refinements:         0
Max. size of reached set before ref.: 6856
Max. size of reached set after ref.:  3984
Avg. size of reached set before ref.: 5257.59
Avg. size of reached set after ref.:  3871.52

Total time for CEGAR algorithm:     895.615s
Time for refinements:               582.794s
Average time for refinement:          0.579s
Max time for refinement:              1.078s

Code Coverage
-----------------------------
  Function coverage:      0.173
  Visited lines:          1765
  Total lines:            5886
  Line coverage:          0.300
  Visited conditions:     310
  Total conditions:       1648
  Condition coverage:     0.188

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             6665
  Number of reached locations:   817 (10%)
    Avg states per location:     8
    Max states per location:     72 (at node N4316)
  Number of reached functions:   56 (17%)
  Number of partitions:          6665
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        166

Time for analysis setup:          4.742s
  Time for loading CPAs:          0.665s
  Time for loading parser:        0.485s
  Time for CFA construction:      3.469s
    Time for parsing file(s):     0.744s
    Time for AST to CFA:          1.263s
    Time for CFA sanity check:    0.371s
    Time for post-processing:     0.943s
      Time for var class.:        0.429s
Time for Analysis:              895.615s
CPU time for analysis:          895.600s
Total time for CPAchecker:      900.360s
Total CPU time for CPAchecker:  900.340s
Time for statistics:              0.161s

Time for Garbage Collector:       8.772s (in 1457 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                232MB (   221 MiB) max;    160MB (   153 MiB) avg;    239MB (   228 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           241MB (   230 MiB) max;    214MB (   204 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8894MB (  8482 MiB) max;   8583MB (  8186 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
