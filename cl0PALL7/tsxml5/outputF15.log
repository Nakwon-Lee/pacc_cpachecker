scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--aic7xxx_old.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_codluno2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6297: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7137: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4763: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4621-4622: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4654: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 16086: Ignoring function call through function pointer *(sht->detect): (*(sht->detect))(sht); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_driver_template_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4654: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_bios_ptable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_partsize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4763: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7137: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4731: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16167: Ignoring function call through function pointer *(sht->release): (*(sht->release))(shost); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6727 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6682 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         45 (1%)
  Times precision was empty:       6536 (97%)
  Times precision was {false}:     57 (1%)
  Times result was cached:         93 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      41 (1%)
  Times result was 'false':        50 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         323716
  BDD entailment checks:           1264
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       919
Number of predicates discovered:          5
Number of abstraction locations:          8
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         454
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 4.63
Number of irrelevant predicates:          332 (73%)
Number of preds handled by boolean abs:   66 (15%)
  Total number of models for allsat:      39
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.95

Time for post operator:                110.227s
  Time for path formula creation:      109.537s
Time for strengthen operator:            1.526s
Time for prec operator:                651.930s
  Time for abstraction:                650.615s (Max:   493.702s, Count: 6727)
    Boolean abstraction:                 4.749s
    Solving time:                      647.186s (Max:   493.230s)
    Model enumeration time:              0.248s
    Time for BDD construction:           0.013s (Max:     0.006s)
Time for merge operator:                22.588s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):   647.434s

Number of path formula cache hits:   2055572 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   100.629s

Total number of created targets for pointer analysis: 6196745
   Number of created targets for uf: *(struct_aic7xxx_host)* is 7
   Number of created targets for uf: *(struct_scsi_device)* is 4
   Number of created targets for uf: *enum_ldv_24945 is 141
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 6
   Number of created targets for uf: *enum_ldv_24943 is 141
   Number of created targets for uf: *(struct_pci_dev)* is 3
   Number of created targets for uf: *(struct_scsi_cmnd)* is 4
   Number of created targets for uf: *(unsigned_int)* is 76
   Number of created targets for uf: *enum_ldv_24939 is 4
   Number of created targets for uf: *unsigned_long_int is 3
   Number of created targets for uf: *unsigned_short_int is 561
   Number of created targets for uf: *signed_int is 9136
   Number of created targets for uf: *(char)* is 251
   Number of created targets for uf: *unsigned_char is 15348
   Number of created targets for uf: *(struct_list_head)* is 9
   Number of created targets for uf: *signed_long_int is 3
   Number of created targets for uf: *enum_ldv_24941 is 141
   Number of created targets for uf: *char is 9
   Number of created targets for uf: *unsigned_int is 6


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         125 (count: 8376, min: 0, max: 23, avg: 0.01)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.117s
  Time for transition matches:                         1.240s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2591803 (count: 2591803, min: 1, max: 1, avg: 1.00) [1 x 2591803]

CPA algorithm statistics
------------------------
Number of iterations:            1721781
Max size of waitlist:            1192
Average size of waitlist:        393
Number of computed successors:   1888737
Max successors for one state:    2
Number of times merged:          161226
Number of times stopped:         162401
Number of times breaked:         9

Total time for CPA algorithm:       882.986s (Max:   646.309s)
  Time for choose from waitlist:      0.414s
  Time for precision adjustment:    661.567s
  Time for transfer relation:       190.732s
  Time for merge operator:           24.080s
  Time for stop operator:             1.276s
  Time for adding to reached set:     2.088s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  30 (count: 9, min: 2, max: 4, avg: 3.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.952s
  Counterexample analysis:                             6.584s (Max:     4.999s, Calls: 9)
    Refinement sat check:                              6.378s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.004s
  ARG update:                                          4.349s

Length of refined path (in blocks):                      26 (count: 9, min: 2, max: 4, avg: 2.89)
Number of affected states:                               17 (count: 9, min: 1, max: 3, avg: 1.89)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        17 (count: 9, min: 1, max: 3, avg: 1.89)
Length (states) of path with itp 'false':                 2 (count: 9, min: 0, max: 1, avg: 0.22)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               8 (count: 9, min: 0, max: 2, avg: 0.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 462038
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 182905.22
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     894.846s
Time for refinements:                11.859s
Average time for refinement:          1.317s
Max time for refinement:              6.250s

Code Coverage
-----------------------------
  Function coverage:      0.487
  Visited lines:          4442
  Total lines:            8518
  Line coverage:          0.521
  Visited conditions:     1078
  Total conditions:       2660
  Condition coverage:     0.405

CPAchecker general statistics
-----------------------------
Number of program locations:     12050
Number of CFA edges:             14324
Number of relevant variables:    1915
Number of functions:             191
Number of loops:                 140
Size of reached set:             80211
  Number of reached locations:   2760 (23%)
    Avg states per location:     29
    Max states per location:     2971 (at node N64)
  Number of reached functions:   93 (49%)
  Number of partitions:          80211
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        221

Time for analysis setup:          5.932s
  Time for loading CPAs:          0.796s
  Time for loading parser:        0.540s
  Time for CFA construction:      4.483s
    Time for parsing file(s):     0.828s
    Time for AST to CFA:          1.456s
    Time for CFA sanity check:    0.526s
    Time for post-processing:     1.541s
      Time for var class.:        0.677s
Time for Analysis:              894.846s
CPU time for analysis:          894.840s
Total time for CPAchecker:      900.782s
Total CPU time for CPAchecker:  900.750s
Time for statistics:              1.274s

Time for Garbage Collector:      20.189s (in 446 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                838MB (   800 MiB) max;    614MB (   586 MiB) avg;    866MB (   826 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:          1128MB (  1076 MiB) max;    966MB (   921 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8751MB (  8346 MiB) max;   8488MB (  8095 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
