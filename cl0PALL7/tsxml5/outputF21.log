scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--aic7xxx_old.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_egxl526j/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6297: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7137: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4763: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4621-4622: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4654: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 16086: Ignoring function call through function pointer *(sht->detect): (*(sht->detect))(sht); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_driver_template_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4654: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_bios_ptable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_partsize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7137: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4763: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16167: Ignoring function call through function pointer *(sht->release): (*(sht->release))(shost); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scsi_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            76826 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            76699 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         127 (0%)
  Times precision was empty:       70476 (92%)
  Times precision was {false}:     173 (0%)
  Times result was cached:         6121 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      56 (0%)
  Times result was 'false':        124 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1285072
  BDD entailment checks:           45566
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1073
Number of predicates discovered:          4
Number of abstraction locations:          9
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         18724
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 81.76
Number of irrelevant predicates:          18300 (98%)
Number of preds handled by boolean abs:   109 (1%)
  Total number of models for allsat:      55
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                460.675s
  Time for path formula creation:      457.569s
Time for strengthen operator:            6.704s
Time for prec operator:                 19.939s
  Time for abstraction:                 14.528s (Max:     0.983s, Count: 76826)
    Boolean abstraction:                 1.836s
    Solving time:                        9.682s (Max:     0.764s)
    Model enumeration time:              0.212s
    Time for BDD construction:           0.010s (Max:     0.004s)
Time for merge operator:                41.710s
Time for coverage check:                 0.113s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     9.894s

Number of path formula cache hits:   9847853 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   408.877s

Total number of created targets for pointer analysis: 26716317
   Number of created targets for uf: *unsigned_short_int is 241
   Number of created targets for uf: *(struct_scsi_device)* is 4
   Number of created targets for uf: *signed_int is 66295
   Number of created targets for uf: *enum_ldv_24945 is 61
   Number of created targets for uf: *(char)* is 151
   Number of created targets for uf: *unsigned_char is 14421
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 6
   Number of created targets for uf: *enum_ldv_24943 is 61
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *enum_ldv_24941 is 61
   Number of created targets for uf: *(unsigned_int)* is 46
   Number of created targets for uf: *unsigned_int is 11


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         135 (count: 117281, min: 0, max: 15, avg: 0.00)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.800s
  Time for transition matches:                         5.560s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     10308593 (count: 10308593, min: 1, max: 1, avg: 1.00) [1 x 10308593]

CPA algorithm statistics
------------------------
Number of iterations:            6461323
Max size of waitlist:            995
Average size of waitlist:        420
Number of computed successors:   7129226
Max successors for one state:    2
Number of times merged:          619753
Number of times stopped:         659253
Number of times breaked:         16

Total time for CPA algorithm:       870.433s (Max:   296.636s)
  Time for choose from waitlist:      1.400s
  Time for precision adjustment:     54.297s
  Time for transfer relation:       742.525s
  Time for merge operator:           46.881s
  Time for stop operator:             5.042s
  Time for adding to reached set:     8.273s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                  76 (count: 16, min: 2, max: 7, avg: 4.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.384s
  Counterexample analysis:                             3.561s (Max:     0.378s, Calls: 16)
    Refinement sat check:                              3.360s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.004s
  ARG update:                                         16.795s

Length of refined path (in blocks):                      76 (count: 16, min: 2, max: 7, avg: 4.75)
Number of affected states:                               60 (count: 16, min: 1, max: 6, avg: 3.75)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        60 (count: 16, min: 1, max: 6, avg: 3.75)
Length (states) of path with itp 'false':                 0 (count: 16, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              44 (count: 16, min: 0, max: 5, avg: 2.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 444907
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 341002.44
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     893.617s
Time for refinements:                23.184s
Average time for refinement:          1.449s
Max time for refinement:              2.016s

Code Coverage
-----------------------------
  Function coverage:      0.508
  Visited lines:          4654
  Total lines:            8518
  Line coverage:          0.546
  Visited conditions:     1122
  Total conditions:       2660
  Condition coverage:     0.422

CPAchecker general statistics
-----------------------------
Number of program locations:     12050
Number of CFA edges:             14324
Number of relevant variables:    1915
Number of functions:             191
Number of loops:                 140
Size of reached set:             1013939
  Size of final wait list        988

Time for analysis setup:          6.666s
  Time for loading CPAs:          0.977s
  Time for loading parser:        0.630s
  Time for CFA construction:      4.930s
    Time for parsing file(s):     1.029s
    Time for AST to CFA:          1.568s
    Time for CFA sanity check:    0.578s
    Time for post-processing:     1.593s
      Time for var class.:        0.715s
Time for Analysis:              893.617s
CPU time for analysis:          893.600s
Total time for CPAchecker:      900.289s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              5.517s

Time for Garbage Collector:      85.393s (in 958 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1653MB (  1577 MiB) max;    658MB (   628 MiB) avg;   1689MB (  1611 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     38MB (    37 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:          2323MB (  2215 MiB) max;    975MB (   930 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     47MB (    45 MiB) avg
Total process virtual memory:   8271MB (  7888 MiB) max;   8235MB (  7854 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
