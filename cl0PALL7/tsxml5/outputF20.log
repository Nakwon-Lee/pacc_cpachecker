scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--aic7xxx_old.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_il_jx8tf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6297: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7137: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4763: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4621-4622: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4654: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 16086: Ignoring function call through function pointer *(sht->detect): (*(sht->detect))(sht); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_driver_template_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4654: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_bios_ptable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_partsize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4763: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7137: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            88915 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            88899 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       85551 (96%)
  Times precision was {false}:     552 (1%)
  Times result was cached:         2807 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (0%)
  Times result was 'false':        13 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         688801
  BDD entailment checks:           53467
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       919
Number of predicates discovered:          4
Number of abstraction locations:          4
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         10057
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 18.06
Number of irrelevant predicates:          10041 (100%)
Number of preds handled by boolean abs:   10 (0%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.80

Time for post operator:                584.554s
  Time for path formula creation:      582.889s
Time for strengthen operator:            2.974s
Time for prec operator:                 29.897s
  Time for abstraction:                 26.203s (Max:     0.693s, Count: 88915)
    Boolean abstraction:                 1.498s
    Solving time:                       22.022s (Max:     0.508s)
    Model enumeration time:              0.166s
    Time for BDD construction:           0.006s (Max:     0.005s)
Time for merge operator:                95.184s
Time for coverage check:                 0.114s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):    22.188s

Number of path formula cache hits:   2453485 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   555.988s

Total number of created targets for pointer analysis: 29985130
   Number of created targets for uf: *enum_ldv_24948 is 11
   Number of created targets for uf: *(struct_aic7xxx_host)* is 7
   Number of created targets for uf: *(struct_scsi_device)* is 4
   Number of created targets for uf: *enum_ldv_24945 is 101
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 6
   Number of created targets for uf: *enum_ldv_24943 is 101
   Number of created targets for uf: *(struct_pci_dev)* is 3
   Number of created targets for uf: *(unsigned_char)* is 3
   Number of created targets for uf: *(unsigned_int)* is 46
   Number of created targets for uf: *unsigned_long_int is 3
   Number of created targets for uf: *unsigned_short_int is 401
   Number of created targets for uf: *signed_int is 50677
   Number of created targets for uf: *(char)* is 151
   Number of created targets for uf: *unsigned_char is 5969
   Number of created targets for uf: *signed_long_int is 577
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *enum_ldv_24941 is 101
   Number of created targets for uf: *unsigned_int is 13
   Number of created targets for uf: *char is 9


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          33 (count: 141831, min: 0, max: 15, avg: 0.00)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.010s
  Time for transition matches:                         3.073s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      5091999 (count: 5091999, min: 1, max: 1, avg: 1.00) [1 x 5091999]

CPA algorithm statistics
------------------------
Number of iterations:            3479477
Max size of waitlist:            536
Average size of waitlist:        316
Number of computed successors:   3847947
Max successors for one state:    2
Number of times merged:          317667
Number of times stopped:         367792
Number of times breaked:         4

Total time for CPA algorithm:       890.189s (Max:   811.681s)
  Time for choose from waitlist:      0.842s
  Time for precision adjustment:     53.443s
  Time for transfer relation:       721.185s
  Time for merge operator:           99.050s
  Time for stop operator:             3.005s
  Time for adding to reached set:     5.279s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  10 (count: 4, min: 2, max: 4, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.182s
  Counterexample analysis:                             0.855s (Max:     0.267s, Calls: 4)
    Refinement sat check:                              0.795s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.002s
  ARG update:                                          2.310s

Length of refined path (in blocks):                      10 (count: 4, min: 2, max: 4, avg: 2.50)
Number of affected states:                                6 (count: 4, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         6 (count: 4, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               2 (count: 4, min: 0, max: 2, avg: 0.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 443203
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 110871.25
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     893.632s
Time for refinements:                 3.442s
Average time for refinement:          0.860s
Max time for refinement:              2.723s

Code Coverage
-----------------------------
  Function coverage:      0.613
  Visited lines:          6395
  Total lines:            8518
  Line coverage:          0.751
  Visited conditions:     1866
  Total conditions:       2660
  Condition coverage:     0.702

CPAchecker general statistics
-----------------------------
Number of program locations:     12050
Number of CFA edges:             14324
Number of relevant variables:    1915
Number of functions:             191
Number of loops:                 140
Size of reached set:             3036690
  Size of final wait list        513

Time for analysis setup:          6.422s
  Time for loading CPAs:          0.998s
  Time for loading parser:        0.462s
  Time for CFA construction:      4.855s
    Time for parsing file(s):     0.807s
    Time for AST to CFA:          1.505s
    Time for CFA sanity check:    0.601s
    Time for post-processing:     1.808s
      Time for var class.:        0.888s
Time for Analysis:              893.632s
CPU time for analysis:          893.590s
Total time for CPAchecker:      900.057s
Total CPU time for CPAchecker:  900.000s
Time for statistics:             12.718s

Time for Garbage Collector:      75.528s (in 420 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3925MB (  3743 MiB) max;   1964MB (  1873 MiB) avg;   3983MB (  3799 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     38MB (    37 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:          4124MB (  3933 MiB) max;   2816MB (  2686 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     47MB (    45 MiB) avg
Total process virtual memory:   8266MB (  7883 MiB) max;   8219MB (  7839 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
