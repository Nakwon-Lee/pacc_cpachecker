scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--aic7xxx_old.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_25_yisb7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6297: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7137: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4763: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4621-4622: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4654: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 16086: Ignoring function call through function pointer *(sht->detect): (*(sht->detect))(sht); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_driver_template_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4654: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_bios_ptable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_partsize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7137: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            48535 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            48526 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       44431 (92%)
  Times precision was {false}:     727 (1%)
  Times result was cached:         3373 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (0%)
  Times result was 'false':        6 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         572482
  BDD entailment checks:           33802
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       919
Number of predicates discovered:          4
Number of abstraction locations:          2
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         12293
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 16.82
Number of irrelevant predicates:          12284 (100%)
Number of preds handled by boolean abs:   9 (0%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                635.778s
  Time for path formula creation:      634.253s
Time for strengthen operator:            2.611s
Time for prec operator:                 32.780s
  Time for abstraction:                 30.180s (Max:     0.644s, Count: 48535)
    Boolean abstraction:                 1.367s
    Solving time:                       25.863s (Max:     0.458s)
    Model enumeration time:              0.149s
    Time for BDD construction:           0.005s (Max:     0.005s)
Time for merge operator:               117.933s
Time for coverage check:                 0.088s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):    26.012s

Number of path formula cache hits:   1154573 (30%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   613.456s

Total number of created targets for pointer analysis: 34657793
   Number of created targets for uf: *unsigned_short_int is 241
   Number of created targets for uf: *(struct_scsi_device)* is 4
   Number of created targets for uf: *signed_int is 58726
   Number of created targets for uf: *enum_ldv_24945 is 61
   Number of created targets for uf: *(char)* is 151
   Number of created targets for uf: *unsigned_char is 3766
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 6
   Number of created targets for uf: *enum_ldv_24943 is 61
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *enum_ldv_24941 is 61
   Number of created targets for uf: *(unsigned_int)* is 46
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          32 (count: 81912, min: 0, max: 15, avg: 0.00)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.573s
  Time for transition matches:                         2.643s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3774495 (count: 3774495, min: 1, max: 1, avg: 1.00) [1 x 3774495]

CPA algorithm statistics
------------------------
Number of iterations:            2489287
Max size of waitlist:            602
Average size of waitlist:        312
Number of computed successors:   2788931
Max successors for one state:    2
Number of times merged:          269340
Number of times stopped:         299050
Number of times breaked:         3

Total time for CPA algorithm:       893.766s (Max:   891.141s)
  Time for choose from waitlist:      0.662s
  Time for precision adjustment:     45.958s
  Time for transfer relation:       713.986s
  Time for merge operator:          120.970s
  Time for stop operator:             2.469s
  Time for adding to reached set:     4.268s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   6 (count: 3, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.588s
  Counterexample analysis:                             0.575s (Max:     0.204s, Calls: 3)
    Refinement sat check:                              0.539s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.001s
  ARG update:                                          0.005s

Length of refined path (in blocks):                       6 (count: 3, min: 2, max: 2, avg: 2.00)
Number of affected states:                                3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 100
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 94.00
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     894.363s
Time for refinements:                 0.597s
Average time for refinement:          0.199s
Max time for refinement:              0.222s

Code Coverage
-----------------------------
  Function coverage:      0.503
  Visited lines:          4927
  Total lines:            8518
  Line coverage:          0.578
  Visited conditions:     1260
  Total conditions:       2660
  Condition coverage:     0.474

CPAchecker general statistics
-----------------------------
Number of program locations:     12050
Number of CFA edges:             14324
Number of relevant variables:    1915
Number of functions:             191
Number of loops:                 140
Size of reached set:             2489618
  Size of final wait list        569

Time for analysis setup:          5.993s
  Time for loading CPAs:          0.860s
  Time for loading parser:        0.474s
  Time for CFA construction:      4.584s
    Time for parsing file(s):     0.804s
    Time for AST to CFA:          1.471s
    Time for CFA sanity check:    0.609s
    Time for post-processing:     1.573s
      Time for var class.:        0.741s
Time for Analysis:              894.363s
CPU time for analysis:          894.340s
Total time for CPAchecker:      900.359s
Total CPU time for CPAchecker:  900.320s
Time for statistics:             11.196s

Time for Garbage Collector:      71.102s (in 614 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3700MB (  3528 MiB) max;   1510MB (  1440 MiB) avg;   3782MB (  3607 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          4575MB (  4363 MiB) max;   2269MB (  2163 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8272MB (  7889 MiB) max;   8227MB (  7846 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
