scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--r8a66597-hcd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_83djjnxh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7792: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3855: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3855: Ignoring function call through function pointer *(r8a66597->pdata->port_power): (*(r8a66597->pdata->port_power))(port, power); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_root_hub_lost_power to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            140996 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            140515 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         481 (0%)
  Times precision was empty:       84361 (60%)
  Times precision was {false}:     138 (0%)
  Times result was cached:         48453 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8044 (6%)
  Times result was 'false':        814 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         911438
  BDD entailment checks:           28900
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1016
Number of predicates discovered:          4
Number of abstraction locations:          19
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         151457
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 18.51
Number of irrelevant predicates:          811 (1%)
Number of preds handled by boolean abs:   14989 (10%)
  Total number of models for allsat:      7994
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                 52.973s
  Time for path formula creation:       50.262s
Time for strengthen operator:            6.156s
Time for prec operator:                637.176s
  Time for abstraction:                630.808s (Max:     1.940s, Count: 140996)
    Boolean abstraction:               527.779s
    Solving time:                      487.928s (Max:     0.866s)
    Model enumeration time:             41.519s
    Time for BDD construction:           0.303s (Max:     0.017s)
Time for merge operator:                 5.266s
Time for coverage check:                 0.124s
  Time for BDD entailment checks:        0.079s
Total time for SMT solver (w/o itp):   529.448s

Number of path formula cache hits:   10225697 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.881s

Total number of created targets for pointer analysis: 31174
   Number of created targets for uf: *unsigned_short_int is 33
   Number of created targets for uf: *(struct_r8a66597_pipe)* is 5
   Number of created targets for uf: *enum_usb_device_state is 580
   Number of created targets for uf: *signed_int is 580
   Number of created targets for uf: *(struct_usb_device)* is 580
   Number of created targets for uf: *(struct_urb)* is 5
   Number of created targets for uf: *(struct_list_head)* is 587
   Number of created targets for uf: *char is 14
   Number of created targets for uf: *unsigned_long_int is 80


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15875 (count: 162515, min: 0, max: 366, avg: 0.10)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.904s
  Time for transition matches:                         5.917s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                     10234618 (count: 10234618, min: 1, max: 1, avg: 1.00) [1 x 10234618]

CPA algorithm statistics
------------------------
Number of iterations:            6932014
Max size of waitlist:            8370
Average size of waitlist:        2851
Number of computed successors:   7500366
Max successors for one state:    2
Number of times merged:          441269
Number of times stopped:         470123
Number of times breaked:         52

Total time for CPA algorithm:       870.715s (Max:   208.956s)
  Time for choose from waitlist:      1.420s
  Time for precision adjustment:    673.333s
  Time for transfer relation:       158.057s
  Time for merge operator:            9.583s
  Time for stop operator:             7.698s
  Time for adding to reached set:     8.796s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   52
Avg. length of target path (in blocks):                 204 (count: 52, min: 2, max: 6, avg: 3.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.158s
  Counterexample analysis:                             1.610s (Max:     0.120s, Calls: 52)
    Refinement sat check:                              1.363s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.048s
  ARG update:                                         19.422s

Length of refined path (in blocks):                     204 (count: 52, min: 2, max: 6, avg: 3.92)
Number of affected states:                              152 (count: 52, min: 1, max: 5, avg: 2.92)
Length (states) of path with itp 'true':                  0 (count: 52, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       152 (count: 52, min: 1, max: 5, avg: 2.92)
Length (states) of path with itp 'false':                 0 (count: 52, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 52, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             100 (count: 52, min: 0, max: 4, avg: 1.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                52
Number of successful refinements:     52
Number of failed refinements:         0
Max. size of reached set before ref.: 632101
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 132360.73
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:     895.564s
Time for refinements:                24.848s
Average time for refinement:          0.477s
Max time for refinement:              2.685s

Code Coverage
-----------------------------
  Function coverage:      0.705
  Visited lines:          2456
  Total lines:            3293
  Line coverage:          0.746
  Visited conditions:     600
  Total conditions:       888
  Condition coverage:     0.676

CPAchecker general statistics
-----------------------------
Number of program locations:     4629
Number of CFA edges:             5481
Number of relevant variables:    801
Number of functions:             173
Number of loops:                 38
Size of reached set:             147035
  Number of reached locations:   1821 (39%)
    Avg states per location:     80
    Max states per location:     5314 (at node N171)
  Number of reached functions:   122 (71%)
  Number of partitions:          147035
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1829

Time for analysis setup:          4.778s
  Time for loading CPAs:          0.778s
  Time for loading parser:        0.625s
  Time for CFA construction:      3.264s
    Time for parsing file(s):     0.847s
    Time for AST to CFA:          1.031s
    Time for CFA sanity check:    0.337s
    Time for post-processing:     0.909s
      Time for var class.:        0.456s
Time for Analysis:              895.564s
CPU time for analysis:          895.430s
Total time for CPAchecker:      900.348s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              1.576s

Time for Garbage Collector:      66.503s (in 765 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1396MB (  1331 MiB) max;    714MB (   681 MiB) avg;   1425MB (  1359 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1415MB (  1350 MiB) max;   1087MB (  1037 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8344MB (  7958 MiB) max;   8223MB (  7842 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
