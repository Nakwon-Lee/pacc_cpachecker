scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--r8a66597-hcd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qaan19r8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7792: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3855: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3855: Ignoring function call through function pointer *(r8a66597->pdata->port_power): (*(r8a66597->pdata->port_power))(port, power); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_poll_rh_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6854: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            9537 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            8946 (94%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         591 (6%)
  Times precision was empty:       5588 (59%)
  Times precision was {false}:     158 (2%)
  Times result was cached:         3248 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      543 (6%)
  Times result was 'false':        842 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         64642
  BDD entailment checks:           1294
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1016
Number of predicates discovered:          4
Number of abstraction locations:          23
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         10067
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 14.36
Number of irrelevant predicates:          986 (10%)
Number of preds handled by boolean abs:   1049 (10%)
  Total number of models for allsat:      526
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                  4.161s
  Time for path formula creation:        3.877s
Time for strengthen operator:            0.496s
Time for prec operator:                 42.255s
  Time for abstraction:                 41.720s (Max:     0.702s, Count: 9537)
    Boolean abstraction:                34.317s
    Solving time:                       32.443s (Max:     0.634s)
    Model enumeration time:              2.282s
    Time for BDD construction:           0.048s (Max:     0.013s)
Time for merge operator:                 0.543s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):    34.725s

Number of path formula cache hits:   702346 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.672s

Total number of created targets for pointer analysis: 907
   Number of created targets for uf: *unsigned_short_int is 42
   Number of created targets for uf: *(struct_r8a66597_pipe)* is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *char is 14
   Number of created targets for uf: *unsigned_long_int is 22


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1079 (count: 11155, min: 0, max: 36, avg: 0.10)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.930s
  Time for transition matches:                         0.484s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       685946 (count: 685946, min: 1, max: 1, avg: 1.00) [1 x 685946]

CPA algorithm statistics
------------------------
Number of iterations:            461182
Max size of waitlist:            170
Average size of waitlist:        73
Number of computed successors:   502119
Max successors for one state:    2
Number of times merged:          31674
Number of times stopped:         32911
Number of times breaked:         57

Total time for CPA algorithm:        60.255s (Max:    11.929s)
  Time for choose from waitlist:      0.168s
  Time for precision adjustment:     44.763s
  Time for transfer relation:        12.337s
  Time for merge operator:            0.990s
  Time for stop operator:             0.491s
  Time for adding to reached set:     0.521s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                 248 (count: 57, min: 2, max: 7, avg: 4.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.978s
  Counterexample analysis:                             1.074s (Max:     0.090s, Calls: 57)
    Refinement sat check:                              0.887s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.034s
  ARG update:                                          0.817s

Length of refined path (in blocks):                     248 (count: 57, min: 2, max: 7, avg: 4.35)
Number of affected states:                              191 (count: 57, min: 1, max: 6, avg: 3.35)
Length (states) of path with itp 'true':                  0 (count: 57, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       191 (count: 57, min: 1, max: 6, avg: 3.35)
Length (states) of path with itp 'false':                 0 (count: 57, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 57, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             134 (count: 57, min: 0, max: 5, avg: 2.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 11860
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 8019.58
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:      62.652s
Time for refinements:                 2.378s
Average time for refinement:          0.041s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.740
  Visited lines:          2595
  Total lines:            3293
  Line coverage:          0.788
  Visited conditions:     642
  Total conditions:       888
  Condition coverage:     0.723

CPAchecker general statistics
-----------------------------
Number of program locations:     4629
Number of CFA edges:             5481
Number of relevant variables:    801
Number of functions:             173
Number of loops:                 38
Size of reached set:             11650
  Number of reached locations:   1977 (43%)
    Avg states per location:     5
    Max states per location:     425 (at node N203)
  Number of reached functions:   128 (74%)
  Number of partitions:          11650
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        132

Time for analysis setup:          4.426s
  Time for loading CPAs:          0.788s
  Time for loading parser:        0.578s
  Time for CFA construction:      2.950s
    Time for parsing file(s):     0.755s
    Time for AST to CFA:          0.986s
    Time for CFA sanity check:    0.294s
    Time for post-processing:     0.808s
      Time for var class.:        0.400s
Time for Analysis:               62.652s
CPU time for analysis:           62.650s
Total time for CPAchecker:       67.081s
Total CPU time for CPAchecker:   67.070s
Time for statistics:              0.251s

Time for Garbage Collector:       2.137s (in 213 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     74MB (    71 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8065MB (  7692 MiB) max;   8060MB (  7686 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
