scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--r8a66597-hcd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7nj9tx51/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7792: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3855: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3855: Ignoring function call through function pointer *(r8a66597->pdata->port_power): (*(r8a66597->pdata->port_power))(port, power); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5743: Unsupported feature (recursion): start_transfer(r8a66597, td); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2401 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2317 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (3%)
  Times precision was empty:       1138 (47%)
  Times precision was {false}:     38 (2%)
  Times result was cached:         931 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      294 (12%)
  Times result was 'false':        201 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         17912
  BDD entailment checks:           202
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1016
Number of predicates discovered:          4
Number of abstraction locations:          8
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         3353
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 10.10
Number of irrelevant predicates:          137 (4%)
Number of preds handled by boolean abs:   606 (18%)
  Total number of models for allsat:      282
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.96

Time for post operator:                  3.184s
  Time for path formula creation:        3.065s
Time for strengthen operator:            0.203s
Time for prec operator:                 46.619s
  Time for abstraction:                 46.301s (Max:     0.706s, Count: 2401)
    Boolean abstraction:                39.316s
    Solving time:                       36.774s (Max:     0.639s)
    Model enumeration time:              2.594s
    Time for BDD construction:           0.138s (Max:     0.047s)
Time for merge operator:                 0.414s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.002s
Total time for SMT solver (w/o itp):    39.368s

Number of path formula cache hits:   179677 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.473s

Total number of created targets for pointer analysis: 917
   Number of created targets for uf: *unsigned_short_int is 43
   Number of created targets for uf: *(struct_r8a66597_pipe)* is 2
   Number of created targets for uf: *enum_usb_device_state is 2
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *char is 14
   Number of created targets for uf: *unsigned_long_int is 22


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         596 (count: 3449, min: 0, max: 54, avg: 0.17)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.506s
  Time for transition matches:                         0.161s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       186687 (count: 186687, min: 1, max: 1, avg: 1.00) [1 x 186687]

CPA algorithm statistics
------------------------
Number of iterations:            124225
Max size of waitlist:            147
Average size of waitlist:        67
Number of computed successors:   135576
Max successors for one state:    2
Number of times merged:          8855
Number of times stopped:         9042
Number of times breaked:         18

Total time for CPA algorithm:        56.127s (Max:    12.551s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:     47.565s
  Time for transfer relation:         6.734s
  Time for merge operator:            0.640s
  Time for stop operator:             0.174s
  Time for adding to reached set:     0.291s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 114 (count: 18, min: 2, max: 11, avg: 6.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.881s
  Counterexample analysis:                             0.432s (Max:     0.049s, Calls: 18)
    Refinement sat check:                              0.344s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.014s
  ARG update:                                          0.396s

Length of refined path (in blocks):                     114 (count: 18, min: 2, max: 11, avg: 6.33)
Number of affected states:                               96 (count: 18, min: 1, max: 10, avg: 5.33)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        96 (count: 18, min: 1, max: 10, avg: 5.33)
Length (states) of path with itp 'false':                 0 (count: 18, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              78 (count: 18, min: 0, max: 9, avg: 4.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 10166
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 6456.83
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:      57.205s
Time for refinements:                 1.078s
Average time for refinement:          0.059s
Max time for refinement:              0.103s

Code Coverage
-----------------------------
  Function coverage:      0.723
  Visited lines:          2376
  Total lines:            3293
  Line coverage:          0.722
  Visited conditions:     578
  Total conditions:       888
  Condition coverage:     0.651

CPAchecker general statistics
-----------------------------
Number of program locations:     4629
Number of CFA edges:             5481
Number of relevant variables:    801
Number of functions:             173
Number of loops:                 38
Size of reached set:             10237
  Number of reached locations:   1780 (38%)
    Avg states per location:     5
    Max states per location:     396 (at node N171)
  Number of reached functions:   125 (72%)
  Number of partitions:          10237
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        115

Time for analysis setup:          4.628s
  Time for loading CPAs:          0.832s
  Time for loading parser:        0.558s
  Time for CFA construction:      3.124s
    Time for parsing file(s):     0.793s
    Time for AST to CFA:          1.057s
    Time for CFA sanity check:    0.291s
    Time for post-processing:     0.852s
      Time for var class.:        0.440s
Time for Analysis:               57.205s
CPU time for analysis:           57.200s
Total time for CPAchecker:       61.837s
Total CPU time for CPAchecker:   61.820s
Time for statistics:              0.265s

Time for Garbage Collector:       1.230s (in 103 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                107MB (   102 MiB) max;     62MB (    59 MiB) avg;    110MB (   105 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8126MB (  7749 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
