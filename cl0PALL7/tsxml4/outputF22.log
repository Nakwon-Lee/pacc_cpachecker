scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--r8a66597-hcd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r5_nk5qr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7792: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3855: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3855: Ignoring function call through function pointer *(r8a66597->pdata->port_power): (*(r8a66597->pdata->port_power))(port, power); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_poll_rh_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_root_hub_lost_power to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6854: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            32092 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            31797 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         295 (1%)
  Times precision was empty:       30182 (94%)
  Times precision was {false}:     121 (0%)
  Times result was cached:         1638 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      151 (0%)
  Times result was 'false':        325 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         220639
  BDD entailment checks:           4741
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1016
Number of predicates discovered:          4
Number of abstraction locations:          11
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         5027
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 18.48
Number of irrelevant predicates:          2888 (57%)
Number of preds handled by boolean abs:   291 (6%)
  Total number of models for allsat:      144
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.95

Time for post operator:                 13.489s
  Time for path formula creation:       12.617s
Time for strengthen operator:            1.877s
Time for prec operator:                  9.801s
  Time for abstraction:                  8.298s (Max:     0.643s, Count: 32092)
    Boolean abstraction:                 2.046s
    Solving time:                        4.834s (Max:     0.519s)
    Model enumeration time:              0.162s
    Time for BDD construction:           0.040s (Max:     0.012s)
Time for merge operator:                 1.261s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     4.996s

Number of path formula cache hits:   2551737 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.159s

Total number of created targets for pointer analysis: 3791
   Number of created targets for uf: *unsigned_short_int is 65
   Number of created targets for uf: *(struct_r8a66597_pipe)* is 6
   Number of created targets for uf: *enum_usb_device_state is 8
   Number of created targets for uf: *signed_int is 8
   Number of created targets for uf: *(struct_usb_device)* is 8
   Number of created targets for uf: *(struct_urb)* is 6
   Number of created targets for uf: *(struct_list_head)* is 14
   Number of created targets for uf: *char is 14
   Number of created targets for uf: *unsigned_long_int is 91


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         315 (count: 36484, min: 0, max: 30, avg: 0.01)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.045s
  Time for transition matches:                         1.419s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      2545310 (count: 2545310, min: 1, max: 1, avg: 1.00) [1 x 2545310]

CPA algorithm statistics
------------------------
Number of iterations:            1735576
Max size of waitlist:            1294
Average size of waitlist:        634
Number of computed successors:   1873534
Max successors for one state:    2
Number of times merged:          107949
Number of times stopped:         111456
Number of times breaked:         28

Total time for CPA algorithm:        72.349s (Max:    14.942s)
  Time for choose from waitlist:      0.532s
  Time for precision adjustment:     19.295s
  Time for transfer relation:        43.745s
  Time for merge operator:            2.188s
  Time for stop operator:             1.324s
  Time for adding to reached set:     2.201s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 100 (count: 28, min: 2, max: 4, avg: 3.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.193s
  Counterexample analysis:                             0.248s (Max:     0.024s, Calls: 28)
    Refinement sat check:                              0.191s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.020s
  ARG update:                                          3.889s

Length of refined path (in blocks):                     100 (count: 28, min: 2, max: 4, avg: 3.57)
Number of affected states:                               72 (count: 28, min: 1, max: 3, avg: 2.57)
Length (states) of path with itp 'true':                  0 (count: 28, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        72 (count: 28, min: 1, max: 3, avg: 2.57)
Length (states) of path with itp 'false':                 0 (count: 28, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              44 (count: 28, min: 0, max: 2, avg: 1.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 86904
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 60130.46
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:      77.445s
Time for refinements:                 5.095s
Average time for refinement:          0.181s
Max time for refinement:              0.429s

Code Coverage
-----------------------------
  Function coverage:      0.792
  Visited lines:          2810
  Total lines:            3293
  Line coverage:          0.853
  Visited conditions:     708
  Total conditions:       888
  Condition coverage:     0.797

CPAchecker general statistics
-----------------------------
Number of program locations:     4629
Number of CFA edges:             5481
Number of relevant variables:    801
Number of functions:             173
Number of loops:                 38
Size of reached set:             78297
  Number of reached locations:   2248 (49%)
    Avg states per location:     34
    Max states per location:     3133 (at node N171)
  Number of reached functions:   137 (79%)
  Number of partitions:          78295
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3926 (before line 7719), Function main called from node N3793, stack depth 1 [2a2ef072], stack [main]])
  Number of target states:       0
  Size of final wait list        1119

Time for analysis setup:          4.640s
  Time for loading CPAs:          0.873s
  Time for loading parser:        0.568s
  Time for CFA construction:      3.088s
    Time for parsing file(s):     0.765s
    Time for AST to CFA:          1.005s
    Time for CFA sanity check:    0.286s
    Time for post-processing:     0.878s
      Time for var class.:        0.450s
Time for Analysis:               77.445s
CPU time for analysis:           77.440s
Total time for CPAchecker:       82.089s
Total CPU time for CPAchecker:   82.070s
Time for statistics:              0.890s

Time for Garbage Collector:      12.819s (in 337 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                241MB (   230 MiB) max;    130MB (   124 MiB) avg;    249MB (   237 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           245MB (   234 MiB) max;    206MB (   197 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8127MB (  7751 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
