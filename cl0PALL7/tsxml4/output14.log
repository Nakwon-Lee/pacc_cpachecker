scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--r8a66597-hcd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9l39sez1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7792: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3855: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3855: Ignoring function call through function pointer *(r8a66597->pdata->port_power): (*(r8a66597->pdata->port_power))(port, power); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            751 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            718 (96%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (4%)
  Times precision was empty:       583 (78%)
  Times precision was {false}:     21 (3%)
  Times result was cached:         37 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      110 (15%)
  Times result was 'false':        45 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         5803
  BDD entailment checks:           25
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1016
Number of predicates discovered:          4
Number of abstraction locations:          4
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         263
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 2.01
Number of irrelevant predicates:          53 (20%)
Number of preds handled by boolean abs:   154 (59%)
  Total number of models for allsat:      99
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.90

Time for post operator:                  2.490s
  Time for path formula creation:        2.437s
Time for strengthen operator:            0.064s
Time for prec operator:                 18.716s
  Time for abstraction:                 18.544s (Max:     0.678s, Count: 751)
    Boolean abstraction:                16.950s
    Solving time:                       16.057s (Max:     0.601s)
    Model enumeration time:              1.005s
    Time for BDD construction:           0.025s (Max:     0.013s)
Time for merge operator:                 0.269s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):    17.062s

Number of path formula cache hits:   51660 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.182s

Total number of created targets for pointer analysis: 877
   Number of created targets for uf: *unsigned_short_int is 42
   Number of created targets for uf: *(struct_r8a66597_pipe)* is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *char is 14
   Number of created targets for uf: *unsigned_long_int is 22


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         224 (count: 1403, min: 0, max: 30, avg: 0.16)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.260s
Automaton transfers with branching:                0
Automaton transfer successors:                        60858 (count: 60858, min: 1, max: 1, avg: 1.00) [1 x 60858]

CPA algorithm statistics
------------------------
Number of iterations:            39867
Max size of waitlist:            148
Average size of waitlist:        63
Number of computed successors:   43608
Max successors for one state:    2
Number of times merged:          2889
Number of times stopped:         2905
Number of times breaked:         8

Total time for CPA algorithm:        24.841s (Max:    11.559s)
  Time for choose from waitlist:      0.097s
  Time for precision adjustment:     19.339s
  Time for transfer relation:         4.378s
  Time for merge operator:            0.397s
  Time for stop operator:             0.131s
  Time for adding to reached set:     0.161s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  30 (count: 8, min: 2, max: 6, avg: 3.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.683s
  Counterexample analysis:                             0.465s (Max:     0.132s, Calls: 8)
    Refinement sat check:                              0.396s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.003s
  ARG update:                                          0.171s

Length of refined path (in blocks):                      30 (count: 8, min: 2, max: 6, avg: 3.75)
Number of affected states:                               22 (count: 8, min: 1, max: 5, avg: 2.75)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        22 (count: 8, min: 1, max: 5, avg: 2.75)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              14 (count: 8, min: 0, max: 4, avg: 1.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 7538
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 4452.00
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:      25.634s
Time for refinements:                 0.793s
Average time for refinement:          0.099s
Max time for refinement:              0.185s

Code Coverage
-----------------------------
  Function coverage:      0.642
  Visited lines:          2021
  Total lines:            3293
  Line coverage:          0.614
  Visited conditions:     462
  Total conditions:       888
  Condition coverage:     0.520

CPAchecker general statistics
-----------------------------
Number of program locations:     4629
Number of CFA edges:             5481
Number of relevant variables:    801
Number of functions:             173
Number of loops:                 38
Size of reached set:             5098
  Number of reached locations:   1382 (30%)
    Avg states per location:     3
    Max states per location:     168 (at node N203)
  Number of reached functions:   111 (64%)
  Number of partitions:          5098
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        86

Time for analysis setup:          4.677s
  Time for loading CPAs:          0.908s
  Time for loading parser:        0.549s
  Time for CFA construction:      3.103s
    Time for parsing file(s):     0.768s
    Time for AST to CFA:          1.034s
    Time for CFA sanity check:    0.295s
    Time for post-processing:     0.865s
      Time for var class.:        0.441s
Time for Analysis:               25.634s
CPU time for analysis:           25.630s
Total time for CPAchecker:       30.314s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.156s

Time for Garbage Collector:       0.515s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     53MB (    51 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8065MB (  7691 MiB) max;   8055MB (  7682 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
