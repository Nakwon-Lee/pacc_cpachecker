scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--mtdblock.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ysw8z2bm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2899: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2905: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2911: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3095: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3098: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3101: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3107: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 3154: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 3160: Dead code detected: Goto: case_4___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 3166: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2987: Function pointer *__cil_tmp10 with type void (*)(struct mtd_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2987: Ignoring call via function pointer mtd_sync::__cil_tmp10 for which no suitable target was found in line: (*__cil_tmp10)(mtd); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2987: Ignoring function call through function pointer *__cil_tmp10: (*__cil_tmp10)(mtd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            34 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            25 (74%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (26%)
  Times precision was empty:       8 (24%)
  Times precision was {false}:     5 (15%)
  Times result was cached:         13 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (24%)
  Times result was 'false':        6 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         430
  BDD entailment checks:           16
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       269
Number of predicates discovered:          2
Number of abstraction locations:          4
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         26
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.00
Number of irrelevant predicates:          11 (42%)
Number of preds handled by boolean abs:   8 (31%)
  Total number of models for allsat:      8
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.105s
  Time for path formula creation:        1.059s
Time for strengthen operator:            0.055s
Time for prec operator:                  0.599s
  Time for abstraction:                  0.582s (Max:     0.163s, Count: 34)
    Boolean abstraction:                 0.251s
    Solving time:                        0.298s (Max:     0.096s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.018s (Max:     0.018s)
Time for merge operator:                 0.234s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.314s

Number of path formula cache hits:   4306 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.979s

Total number of created targets for pointer analysis: 6
   Number of created targets for uf: *unsigned_long_int is 7


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           7 (count: 103, min: 0, max: 7, avg: 0.07)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.112s
Automaton transfers with branching:                0
Automaton transfer successors:                         6954 (count: 6954, min: 1, max: 1, avg: 1.00) [1 x 6954]

CPA algorithm statistics
------------------------
Number of iterations:            1786
Max size of waitlist:            11
Average size of waitlist:        6
Number of computed successors:   2038
Max successors for one state:    2
Number of times merged:          207
Number of times stopped:         220
Number of times breaked:         3

Total time for CPA algorithm:         2.930s (Max:     1.624s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      0.734s
  Time for transfer relation:         1.725s
  Time for merge operator:            0.282s
  Time for stop operator:             0.043s
  Time for adding to reached set:     0.030s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  10 (count: 3, min: 2, max: 4, avg: 3.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.095s
  Counterexample analysis:                             0.059s (Max:     0.041s, Calls: 3)
    Refinement sat check:                              0.048s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.001s
  ARG update:                                          0.021s

Length of refined path (in blocks):                      10 (count: 3, min: 2, max: 4, avg: 3.33)
Number of affected states:                                7 (count: 3, min: 1, max: 3, avg: 2.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 3, min: 1, max: 3, avg: 2.33)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               4 (count: 3, min: 0, max: 2, avg: 1.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 613
Max. size of reached set after ref.:  13
Avg. size of reached set before ref.: 430.33
Avg. size of reached set after ref.:  13.00

Total time for CEGAR algorithm:       3.049s
Time for refinements:                 0.119s
Average time for refinement:          0.039s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.778
  Visited lines:          1676
  Total lines:            1707
  Line coverage:          0.982
  Visited conditions:     118
  Total conditions:       124
  Condition coverage:     0.952

CPAchecker general statistics
-----------------------------
Number of program locations:     1900
Number of CFA edges:             1964
Number of relevant variables:    406
Number of functions:             27
Number of loops:                 3
Size of reached set:             561
  Number of reached locations:   360 (19%)
    Avg states per location:     1
    Max states per location:     12 (at node N0)
  Number of reached functions:   21 (78%)
  Number of partitions:          561
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.284s
  Time for loading CPAs:          1.044s
  Time for loading parser:        0.795s
  Time for CFA construction:      3.265s
    Time for parsing file(s):     1.050s
    Time for AST to CFA:          1.088s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.724s
      Time for var class.:        0.352s
Time for Analysis:                3.049s
CPU time for analysis:            3.040s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.340s
Total CPU time for CPAchecker:    8.330s
Time for statistics:              0.117s

Time for Garbage Collector:       0.194s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     34MB (    32 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8086MB (  7711 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
