scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--tty--serial--altera_uart.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__pxmo64d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_add_one_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_update_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_write_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_SAK to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_insert_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            166 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            147 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (11%)
  Times precision was empty:       49 (30%)
  Times precision was {false}:     19 (11%)
  Times result was cached:         76 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22 (13%)
  Times result was 'false':        15 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         1112
  BDD entailment checks:           92
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       168
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         117
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.85
Number of irrelevant predicates:          45 (38%)
Number of preds handled by boolean abs:   22 (19%)
  Total number of models for allsat:      21
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.95

Time for post operator:                  1.530s
  Time for path formula creation:        1.446s
Time for strengthen operator:            0.075s
Time for prec operator:                  0.978s
  Time for abstraction:                  0.906s (Max:     0.135s, Count: 166)
    Boolean abstraction:                 0.240s
    Solving time:                        0.292s (Max:     0.091s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.017s (Max:     0.008s)
Time for merge operator:                 0.312s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.323s

Number of path formula cache hits:   15422 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.300s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          36 (count: 375, min: 0, max: 15, avg: 0.10)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.241s
Automaton transfers with branching:                0
Automaton transfer successors:                        20788 (count: 20788, min: 1, max: 1, avg: 1.00) [1 x 20788]

CPA algorithm statistics
------------------------
Number of iterations:            6447
Max size of waitlist:            33
Average size of waitlist:        13
Number of computed successors:   7184
Max successors for one state:    2
Number of times merged:          510
Number of times stopped:         585
Number of times breaked:         7

Total time for CPA algorithm:         4.970s (Max:     1.264s)
  Time for choose from waitlist:      0.057s
  Time for precision adjustment:      1.259s
  Time for transfer relation:         2.804s
  Time for merge operator:            0.407s
  Time for stop operator:             0.076s
  Time for adding to reached set:     0.168s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  23 (count: 7, min: 1, max: 5, avg: 3.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.250s
  Counterexample analysis:                             0.142s (Max:     0.027s, Calls: 7)
    Refinement sat check:                              0.104s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.021s
  ARG update:                                          0.066s

Length of refined path (in blocks):                      23 (count: 7, min: 1, max: 5, avg: 3.29)
Number of affected states:                               16 (count: 7, min: 0, max: 4, avg: 2.29)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        16 (count: 7, min: 0, max: 4, avg: 2.29)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              10 (count: 7, min: 0, max: 3, avg: 1.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1154
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 831.43
Avg. size of reached set after ref.:  28.57

Total time for CEGAR algorithm:       5.276s
Time for refinements:                 0.302s
Average time for refinement:          0.043s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.796
  Visited lines:          1967
  Total lines:            2080
  Line coverage:          0.946
  Visited conditions:     150
  Total conditions:       172
  Condition coverage:     0.872

CPAchecker general statistics
-----------------------------
Number of program locations:     2392
Number of CFA edges:             2505
Number of relevant variables:    427
Number of functions:             54
Number of loops:                 6
Size of reached set:             965
  Number of reached locations:   589 (25%)
    Avg states per location:     1
    Max states per location:     18 (at node N65)
  Number of reached functions:   43 (80%)
  Number of partitions:          965
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.577s
  Time for loading CPAs:          0.900s
  Time for loading parser:        0.908s
  Time for CFA construction:      3.599s
    Time for parsing file(s):     1.103s
    Time for AST to CFA:          1.205s
    Time for CFA sanity check:    0.239s
    Time for post-processing:     0.818s
      Time for var class.:        0.380s
Time for Analysis:                5.276s
CPU time for analysis:            5.280s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.860s
Total CPU time for CPAchecker:   10.840s
Time for statistics:              0.153s

Time for Garbage Collector:       0.240s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     36MB (    34 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     29MB (    27 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8093MB (  7718 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
