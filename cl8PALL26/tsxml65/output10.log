scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--video--zoran--zr36016.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xykpvk_7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 591: Function pointer *__cil_tmp21 with type __u32 (*)(struct videocodec *codec, __u16 reg) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 874: Function pointer *__cil_tmp29 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 888: Function pointer *__cil_tmp45 with type __u32 (*)(struct videocodec *codec, __u16 reg) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 738: Function pointer *__cil_tmp29 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 1064: Function pointer *__cil_tmp29 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 1081: Function pointer *__cil_tmp45 with type void (*)(struct videocodec *codec, __u16 reg, __u32 value) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videocodec_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 738: Ignoring call via function pointer zr36016_write::__cil_tmp29 for which no suitable target was found in line: (*__cil_tmp29)(__cil_tmp32, reg, __cil_tmp33); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 738: Ignoring function call through function pointer *__cil_tmp29: (*__cil_tmp29)(__cil_tmp32, reg, __cil_tmp33); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1064: Ignoring call via function pointer zr36016_writei::__cil_tmp29 for which no suitable target was found in line: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1064: Ignoring function call through function pointer *__cil_tmp29: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1081: Ignoring call via function pointer zr36016_writei::__cil_tmp45 for which no suitable target was found in line: (*__cil_tmp45)(__cil_tmp48, __cil_tmp49, __cil_tmp52); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 1081: Ignoring function call through function pointer *__cil_tmp45: (*__cil_tmp45)(__cil_tmp48, __cil_tmp49, __cil_tmp52); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 874: Ignoring call via function pointer zr36016_readi::__cil_tmp29 for which no suitable target was found in line: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 874: Ignoring function call through function pointer *__cil_tmp29: (*__cil_tmp29)(__cil_tmp32, __cil_tmp33, __cil_tmp36); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 888: Ignoring call via function pointer zr36016_readi::__cil_tmp45 for which no suitable target was found in line: tmp = (*__cil_tmp45)(__cil_tmp48, __cil_tmp49); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 888: Ignoring function call through function pointer *__cil_tmp45: tmp = (*__cil_tmp45)(__cil_tmp48, __cil_tmp49); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 591: Ignoring call via function pointer zr36016_read::__cil_tmp21 for which no suitable target was found in line: tmp = (*__cil_tmp21)(__cil_tmp24, reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 591: Ignoring function call through function pointer *__cil_tmp21: tmp = (*__cil_tmp21)(__cil_tmp24, reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function videocodec_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            15 (71%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (29%)
  Times precision was empty:       8 (38%)
  Times precision was {false}:     5 (24%)
  Times result was cached:         3 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (24%)
  Times result was 'false':        3 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         1485
  BDD entailment checks:           9
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       829
Number of predicates discovered:          2
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         13
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.30
Number of irrelevant predicates:          6 (46%)
Number of preds handled by boolean abs:   5 (38%)
  Total number of models for allsat:      5
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.945s
  Time for path formula creation:        1.858s
Time for strengthen operator:            0.146s
Time for prec operator:                  2.033s
  Time for abstraction:                  1.990s (Max:     0.745s, Count: 21)
    Boolean abstraction:                 0.950s
    Solving time:                        1.694s (Max:     0.706s)
    Model enumeration time:              0.042s
    Time for BDD construction:           0.013s (Max:     0.013s)
Time for merge operator:                 0.261s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.736s

Number of path formula cache hits:   14514 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.740s

Total number of created targets for pointer analysis: 11
   Number of created targets for uf: *signed_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           9 (count: 78, min: 0, max: 7, avg: 0.12)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.218s
Automaton transfers with branching:                0
Automaton transfer successors:                        28459 (count: 28459, min: 1, max: 1, avg: 1.00) [1 x 28459]

CPA algorithm statistics
------------------------
Number of iterations:            6497
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   7248
Max successors for one state:    2
Number of times merged:          738
Number of times stopped:         745
Number of times breaked:         3

Total time for CPA algorithm:         6.350s (Max:     3.014s)
  Time for choose from waitlist:      0.050s
  Time for precision adjustment:      2.329s
  Time for transfer relation:         3.341s
  Time for merge operator:            0.340s
  Time for stop operator:             0.054s
  Time for adding to reached set:     0.075s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   7 (count: 3, min: 1, max: 4, avg: 2.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.149s
  Counterexample analysis:                             0.084s (Max:     0.072s, Calls: 3)
    Refinement sat check:                              0.072s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.017s
  ARG update:                                          0.036s

Length of refined path (in blocks):                       7 (count: 3, min: 1, max: 4, avg: 2.33)
Number of affected states:                                4 (count: 3, min: 0, max: 3, avg: 1.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 3, min: 0, max: 3, avg: 1.33)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               2 (count: 3, min: 0, max: 2, avg: 0.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 3261
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 1526.33
Avg. size of reached set after ref.:  21.00

Total time for CEGAR algorithm:       6.540s
Time for refinements:                 0.190s
Average time for refinement:          0.063s
Max time for refinement:              0.109s

Code Coverage
-----------------------------
  Function coverage:      0.679
  Visited lines:          1496
  Total lines:            1542
  Line coverage:          0.970
  Visited conditions:     128
  Total conditions:       148
  Condition coverage:     0.865

CPAchecker general statistics
-----------------------------
Number of program locations:     1770
Number of CFA edges:             1860
Number of relevant variables:    287
Number of functions:             28
Number of loops:                 2
Size of reached set:             1985
  Number of reached locations:   501 (28%)
    Avg states per location:     3
    Max states per location:     35 (at node N390)
  Number of reached functions:   19 (68%)
  Number of partitions:          1985
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.094s
  Time for loading CPAs:          0.803s
  Time for loading parser:        0.730s
  Time for CFA construction:      2.457s
    Time for parsing file(s):     0.745s
    Time for AST to CFA:          0.741s
    Time for CFA sanity check:    0.196s
    Time for post-processing:     0.632s
      Time for var class.:        0.366s
Time for Analysis:                6.540s
CPU time for analysis:            6.540s
Time for analyzing result:        0.013s
Total time for CPAchecker:       10.640s
Total CPU time for CPAchecker:   10.640s
Time for statistics:              0.128s

Time for Garbage Collector:       0.185s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     38MB (    36 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     29MB (    28 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8100MB (  7725 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
