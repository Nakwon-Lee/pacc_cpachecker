scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--phy--broadcom.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ndr91b80/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function phy_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            4 (50%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (50%)
  Times precision was empty:       4 (50%)
  Times precision was {false}:     2 (25%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2 (25%)
  Times result was 'false':        2 (25%)
Number of strengthen sat checks:   0
Number of coverage checks:         3248
  BDD entailment checks:           2
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1718
Number of predicates discovered:          2
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          2 (50%)
Number of preds handled by boolean abs:   2 (50%)
  Total number of models for allsat:      2
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.486s
  Time for path formula creation:        4.358s
Time for strengthen operator:            0.144s
Time for prec operator:                  1.192s
  Time for abstraction:                  1.104s (Max:     1.025s, Count: 8)
    Boolean abstraction:                 0.900s
    Solving time:                        0.817s (Max:     0.802s)
    Model enumeration time:              0.080s
    Time for BDD construction:           0.007s (Max:     0.007s)
Time for merge operator:                 0.660s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.897s

Number of path formula cache hits:   23067 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.134s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           5 (count: 34, min: 0, max: 5, avg: 0.15)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.439s
Automaton transfers with branching:                0
Automaton transfer successors:                        45217 (count: 45217, min: 1, max: 1, avg: 1.00) [1 x 45217]

CPA algorithm statistics
------------------------
Number of iterations:            13199
Max size of waitlist:            45
Average size of waitlist:        23
Number of computed successors:   14826
Max successors for one state:    2
Number of times merged:          1623
Number of times stopped:         1625
Number of times breaked:         2

Total time for CPA algorithm:        10.095s (Max:     6.959s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:      1.705s
  Time for transfer relation:         6.761s
  Time for merge operator:            0.822s
  Time for stop operator:             0.153s
  Time for adding to reached set:     0.179s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   3 (count: 2, min: 1, max: 2, avg: 1.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.099s
  Counterexample analysis:                             0.032s (Max:     0.023s, Calls: 2)
    Refinement sat check:                              0.016s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.002s
  ARG update:                                          0.045s

Length of refined path (in blocks):                       3 (count: 2, min: 1, max: 2, avg: 1.50)
Number of affected states:                                1 (count: 2, min: 0, max: 1, avg: 0.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 2, min: 0, max: 1, avg: 0.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 6636
Max. size of reached set after ref.:  76
Avg. size of reached set before ref.: 3355.00
Avg. size of reached set after ref.:  74.50

Total time for CEGAR algorithm:      10.245s
Time for refinements:                 0.150s
Average time for refinement:          0.075s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.735
  Visited lines:          1623
  Total lines:            1669
  Line coverage:          0.972
  Visited conditions:     228
  Total conditions:       248
  Condition coverage:     0.919

CPAchecker general statistics
-----------------------------
Number of program locations:     1899
Number of CFA edges:             2100
Number of relevant variables:    363
Number of functions:             34
Number of loops:                 1
Size of reached set:             6639
  Number of reached locations:   644 (34%)
    Avg states per location:     10
    Max states per location:     402 (at node N18)
  Number of reached functions:   25 (74%)
  Number of partitions:          6639
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.149s
  Time for loading CPAs:          1.029s
  Time for loading parser:        0.808s
  Time for CFA construction:      3.195s
    Time for parsing file(s):     0.980s
    Time for AST to CFA:          1.037s
    Time for CFA sanity check:    0.168s
    Time for post-processing:     0.768s
      Time for var class.:        0.407s
Time for Analysis:               10.245s
CPU time for analysis:           10.240s
Time for analyzing result:        0.008s
Total time for CPAchecker:       15.399s
Total CPU time for CPAchecker:   15.380s
Time for statistics:              0.245s

Time for Garbage Collector:       0.420s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     44MB (    42 MiB) avg;     82MB (    79 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8067MB (  7694 MiB) max;   8045MB (  7672 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
