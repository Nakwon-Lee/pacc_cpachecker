scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--power--wm831x_power.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xlxfkpod/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_crit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_changed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function power_supply_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            89 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            81 (91%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (9%)
  Times precision was empty:       31 (35%)
  Times precision was {false}:     7 (8%)
  Times result was cached:         32 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19 (21%)
  Times result was 'false':        8 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         527
  BDD entailment checks:           47
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       355
Number of predicates discovered:          2
Number of abstraction locations:          5
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         58
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.23
Number of irrelevant predicates:          16 (28%)
Number of preds handled by boolean abs:   19 (33%)
  Total number of models for allsat:      19
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.095s
  Time for path formula creation:        1.057s
Time for strengthen operator:            0.050s
Time for prec operator:                  0.671s
  Time for abstraction:                  0.620s (Max:     0.154s, Count: 89)
    Boolean abstraction:                 0.288s
    Solving time:                        0.302s (Max:     0.108s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.015s (Max:     0.014s)
Time for merge operator:                 0.225s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.325s

Number of path formula cache hits:   5328 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.998s

Total number of created targets for pointer analysis: 491
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *(char)* is 33


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          35 (count: 235, min: 0, max: 28, avg: 0.15)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.138s
Automaton transfers with branching:                0
Automaton transfer successors:                         8314 (count: 8314, min: 1, max: 1, avg: 1.00) [1 x 8314]

CPA algorithm statistics
------------------------
Number of iterations:            1991
Max size of waitlist:            12
Average size of waitlist:        4
Number of computed successors:   2299
Max successors for one state:    2
Number of times merged:          240
Number of times stopped:         280
Number of times breaked:         4

Total time for CPA algorithm:         3.054s (Max:     1.305s)
  Time for choose from waitlist:      0.024s
  Time for precision adjustment:      0.827s
  Time for transfer relation:         1.765s
  Time for merge operator:            0.265s
  Time for stop operator:             0.039s
  Time for adding to reached set:     0.054s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  20 (count: 4, min: 2, max: 9, avg: 5.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.202s
  Counterexample analysis:                             0.153s (Max:     0.085s, Calls: 4)
    Refinement sat check:                              0.124s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.002s
  ARG update:                                          0.032s

Length of refined path (in blocks):                      20 (count: 4, min: 2, max: 9, avg: 5.00)
Number of affected states:                               16 (count: 4, min: 1, max: 8, avg: 4.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        16 (count: 4, min: 1, max: 8, avg: 4.00)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              12 (count: 4, min: 0, max: 7, avg: 3.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 506
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 400.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.287s
Time for refinements:                 0.233s
Average time for refinement:          0.058s
Max time for refinement:              0.099s

Code Coverage
-----------------------------
  Function coverage:      0.440
  Visited lines:          1165
  Total lines:            1426
  Line coverage:          0.817
  Visited conditions:     80
  Total conditions:       148
  Condition coverage:     0.541

CPAchecker general statistics
-----------------------------
Number of program locations:     1597
Number of CFA edges:             1672
Number of relevant variables:    342
Number of functions:             25
Number of loops:                 4
Size of reached set:             422
  Number of reached locations:   249 (16%)
    Avg states per location:     1
    Max states per location:     5 (at node N144)
  Number of reached functions:   11 (44%)
  Number of partitions:          422
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.700s
  Time for loading CPAs:          0.933s
  Time for loading parser:        0.863s
  Time for CFA construction:      2.726s
    Time for parsing file(s):     0.941s
    Time for AST to CFA:          0.758s
    Time for CFA sanity check:    0.148s
    Time for post-processing:     0.637s
      Time for var class.:        0.336s
Time for Analysis:                3.287s
CPU time for analysis:            3.300s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.994s
Total CPU time for CPAchecker:    7.990s
Time for statistics:              0.102s

Time for Garbage Collector:       0.185s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     33MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8084MB (  7709 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
