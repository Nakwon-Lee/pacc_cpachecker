scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--char--tpm--tpm_nsc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vb__tsrg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tpm_register_hardware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tpm_remove_hardware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            258 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            246 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (5%)
  Times precision was empty:       65 (25%)
  Times precision was {false}:     31 (12%)
  Times result was cached:         109 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (21%)
  Times result was 'false':        8 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         660
  BDD entailment checks:           194
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       496
Number of predicates discovered:          2
Number of abstraction locations:          6
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         193
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.30
Number of irrelevant predicates:          53 (27%)
Number of preds handled by boolean abs:   53 (27%)
  Total number of models for allsat:      53
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.206s
  Time for path formula creation:        1.169s
Time for strengthen operator:            0.065s
Time for prec operator:                  0.971s
  Time for abstraction:                  0.891s (Max:     0.091s, Count: 258)
    Boolean abstraction:                 0.267s
    Solving time:                        0.304s (Max:     0.043s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.007s (Max:     0.004s)
Time for merge operator:                 0.149s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.313s

Number of path formula cache hits:   7516 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.056s

Total number of created targets for pointer analysis: 30
   Number of created targets for uf: *unsigned_char is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          55 (count: 740, min: 0, max: 50, avg: 0.07)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.189s
Automaton transfers with branching:                0
Automaton transfer successors:                        11432 (count: 11432, min: 1, max: 1, avg: 1.00) [1 x 11432]

CPA algorithm statistics
------------------------
Number of iterations:            4426
Max size of waitlist:            10
Average size of waitlist:        5
Number of computed successors:   4854
Max successors for one state:    2
Number of times merged:          233
Number of times stopped:         403
Number of times breaked:         6

Total time for CPA algorithm:         3.871s (Max:     1.322s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      1.215s
  Time for transfer relation:         2.148s
  Time for merge operator:            0.181s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.103s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  19 (count: 6, min: 1, max: 4, avg: 3.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.344s
  Counterexample analysis:                             0.257s (Max:     0.069s, Calls: 6)
    Refinement sat check:                              0.219s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.003s
  ARG update:                                          0.053s

Length of refined path (in blocks):                      19 (count: 6, min: 1, max: 4, avg: 3.17)
Number of affected states:                               13 (count: 6, min: 0, max: 3, avg: 2.17)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        13 (count: 6, min: 0, max: 3, avg: 2.17)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               8 (count: 6, min: 0, max: 2, avg: 1.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 1544
Max. size of reached set after ref.:  664
Avg. size of reached set before ref.: 1153.33
Avg. size of reached set after ref.:  663.50

Total time for CEGAR algorithm:       4.296s
Time for refinements:                 0.421s
Average time for refinement:          0.070s
Max time for refinement:              0.107s

Code Coverage
-----------------------------
  Function coverage:      0.724
  Visited lines:          1611
  Total lines:            1656
  Line coverage:          0.973
  Visited conditions:     108
  Total conditions:       128
  Condition coverage:     0.844

CPAchecker general statistics
-----------------------------
Number of program locations:     1884
Number of CFA edges:             2009
Number of relevant variables:    236
Number of functions:             29
Number of loops:                 5
Size of reached set:             1505
  Number of reached locations:   480 (25%)
    Avg states per location:     3
    Max states per location:     67 (at node N16)
  Number of reached functions:   21 (72%)
  Number of partitions:          1505
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.071s
  Time for loading CPAs:          0.914s
  Time for loading parser:        0.827s
  Time for CFA construction:      3.233s
    Time for parsing file(s):     0.961s
    Time for AST to CFA:          1.048s
    Time for CFA sanity check:    0.176s
    Time for post-processing:     0.796s
      Time for var class.:        0.393s
Time for Analysis:                4.296s
CPU time for analysis:            4.300s
Time for analyzing result:        0.002s
Total time for CPAchecker:        9.372s
Total CPU time for CPAchecker:    9.360s
Time for statistics:              0.105s

Time for Garbage Collector:       0.226s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     36MB (    34 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8090MB (  7715 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
