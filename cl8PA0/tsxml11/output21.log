scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_53cbh9rh/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13644 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13074 (96%)
  Because of loop head:            540 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       5887 (43%)
  Times precision was {false}:     99 (1%)
  Times result was cached:         7086 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      572 (4%)
  Times result was 'false':        1586 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         98673
  BDD entailment checks:           3523
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          20
Number of abstraction locations:          76
Max number of predicates per location:    9
Avg number of predicates per location:    7
Total predicates per abstraction:         57797
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 86.14
Number of irrelevant predicates:          14985 (26%)
Number of preds handled by boolean abs:   2910 (5%)
  Total number of models for allsat:      1458
  Max number of models for allsat:        64
  Avg number of models for allsat:        2.55

Time for post operator:                  2.834s
  Time for path formula creation:        2.609s
Time for strengthen operator:            0.349s
Time for prec operator:                  7.482s
  Time for abstraction:                  6.747s (Max:     0.030s, Count: 13644)
    Boolean abstraction:                 1.349s
    Solving time:                        1.046s (Max:     0.084s)
    Model enumeration time:              0.181s
    Time for BDD construction:           0.196s (Max:     0.020s)
Time for merge operator:                 0.386s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     1.236s

Number of path formula cache hits:   284727 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.153s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1307
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1477 (count: 13915, min: 0, max: 204, avg: 0.11)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.828s
  Time for transition matches:                         0.322s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       243462 (count: 243462, min: 1, max: 1, avg: 1.00) [1 x 243462]

CPA algorithm statistics
------------------------
Number of iterations:            180573
Max size of waitlist:            29
Average size of waitlist:        17
Number of computed successors:   232602
Max successors for one state:    2
Number of times merged:          47575
Number of times stopped:         50105
Number of times breaked:         30

Total time for CPA algorithm:        21.831s (Max:     4.352s)
  Time for choose from waitlist:      0.321s
  Time for precision adjustment:      9.728s
  Time for transfer relation:         7.428s
  Time for merge operator:            1.576s
  Time for stop operator:             0.586s
  Time for adding to reached set:     0.681s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                2571 (count: 30, min: 71, max: 92, avg: 85.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.740s
  Counterexample analysis:                             1.761s (Max:     0.103s, Calls: 30)
    Refinement sat check:                              1.033s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.180s
  Precision update:                                    0.068s
  ARG update:                                          0.618s

Length of refined path (in blocks):                    2353 (count: 30, min: 54, max: 88, avg: 78.43)
Number of affected states:                             1869 (count: 30, min: 1, max: 87, avg: 62.30)
Length (states) of path with itp 'true':                454 (count: 30, min: 0, max: 78, avg: 15.13)
Length (states) of path with itp non-trivial itp:      1869 (count: 30, min: 1, max: 87, avg: 62.30)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          29 (count: 30, min: 0, max: 3, avg: 0.97)
Equal non-trivial interpolants along paths:            1810 (count: 30, min: 0, max: 85, avg: 60.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 10785
Max. size of reached set after ref.:  10656
Avg. size of reached set before ref.: 7655.00
Avg. size of reached set after ref.:  1843.57

Total time for CEGAR algorithm:      25.114s
Time for refinements:                 3.187s
Average time for refinement:          0.106s
Max time for refinement:              0.260s

Code Coverage
-----------------------------
  Function coverage:      0.547
  Visited lines:          923
  Total lines:            1702
  Line coverage:          0.542
  Visited conditions:     530
  Total conditions:       728
  Condition coverage:     0.728

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             6568
  Number of reached locations:   1022 (46%)
    Avg states per location:     6
    Max states per location:     56 (at node N2119)
  Number of reached functions:   41 (55%)
  Number of partitions:          6554
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N957 (before line 1251), Function stopRequestedAtCurrentFloor called from node N1051, stack depth 6 [398cc6bf], stack [main, runTest, test, threeTS, timeShift, stopRequestedAtCurrentFloor]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          4.607s
  Time for loading CPAs:          0.963s
  Time for loading parser:        0.744s
  Time for CFA construction:      2.665s
    Time for parsing file(s):     0.805s
    Time for AST to CFA:          0.863s
    Time for CFA sanity check:    0.269s
    Time for post-processing:     0.556s
      Time for var class.:        0.305s
Time for Analysis:               25.114s
CPU time for analysis:           25.120s
Total time for CPAchecker:       29.725s
Total CPU time for CPAchecker:   29.720s
Time for statistics:              0.255s

Time for Garbage Collector:       0.942s (in 72 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     53MB (    50 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
