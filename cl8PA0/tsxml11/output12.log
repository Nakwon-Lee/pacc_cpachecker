scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_aq60it16/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9292 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8817 (95%)
  Because of loop head:            435 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (0%)
  Times precision was empty:       1511 (16%)
  Times precision was {false}:     249 (3%)
  Times result was cached:         6913 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      619 (7%)
  Times result was 'false':        935 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         20762
  BDD entailment checks:           646
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          15
Number of abstraction locations:          92
Max number of predicates per location:    8
Avg number of predicates per location:    6
Total predicates per abstraction:         49184
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 56.66
Number of irrelevant predicates:          20802 (42%)
Number of preds handled by boolean abs:   2515 (5%)
  Total number of models for allsat:      1383
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.23

Time for post operator:                  2.552s
  Time for path formula creation:        2.466s
Time for strengthen operator:            0.204s
Time for prec operator:                  6.176s
  Time for abstraction:                  5.793s (Max:     0.028s, Count: 9292)
    Boolean abstraction:                 1.201s
    Solving time:                        0.913s (Max:     0.016s)
    Model enumeration time:              0.146s
    Time for BDD construction:           0.143s (Max:     0.011s)
Time for merge operator:                 0.243s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.059s

Number of path formula cache hits:   69125 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.310s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               787
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1369 (count: 7609, min: 0, max: 408, avg: 0.18)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.273s
Automaton transfers with branching:                0
Automaton transfer successors:                        77917 (count: 77917, min: 1, max: 1, avg: 1.00) [1 x 77917]

CPA algorithm statistics
------------------------
Number of iterations:            53689
Max size of waitlist:            166
Average size of waitlist:        91
Number of computed successors:   67352
Max successors for one state:    2
Number of times merged:          10058
Number of times stopped:         10521
Number of times breaked:         40

Total time for CPA algorithm:        13.371s (Max:     2.327s)
  Time for choose from waitlist:      0.095s
  Time for precision adjustment:      7.081s
  Time for transfer relation:         4.466s
  Time for merge operator:            0.566s
  Time for stop operator:             0.274s
  Time for adding to reached set:     0.287s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):               13935 (count: 40, min: 292, max: 361, avg: 348.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.940s
  Counterexample analysis:                            11.209s (Max:     0.463s, Calls: 40)
    Refinement sat check:                              4.241s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.233s
  Precision update:                                    0.083s
  ARG update:                                          0.221s

Length of refined path (in blocks):                   12126 (count: 39, min: 54, max: 355, avg: 310.92)
Number of affected states:                             3542 (count: 39, min: 1, max: 354, avg: 90.82)
Length (states) of path with itp 'true':               8545 (count: 39, min: 0, max: 349, avg: 219.10)
Length (states) of path with itp non-trivial itp:      3542 (count: 39, min: 1, max: 354, avg: 90.82)
Length (states) of path with itp 'false':                39 (count: 39, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 39, min: 0, max: 3, avg: 0.36)
Equal non-trivial interpolants along paths:            3489 (count: 39, min: 0, max: 351, avg: 89.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 4282
Max. size of reached set after ref.:  4054
Avg. size of reached set before ref.: 3581.75
Avg. size of reached set after ref.:  2240.33

Total time for CEGAR algorithm:      26.152s
Time for refinements:                12.664s
Average time for refinement:          0.316s
Max time for refinement:              0.522s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          699
  Total lines:            1702
  Line coverage:          0.411
  Visited conditions:     354
  Total conditions:       728
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             4282
  Number of reached locations:   723 (32%)
    Avg states per location:     5
    Max states per location:     53 (at node N2119)
  Number of reached functions:   40 (53%)
  Number of partitions:          4273
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1619 (before lines 2125-2153), Function cleanup called from node N6, stack depth 4 [7b8b0c78], stack [main, runTest, test, cleanup]])
  Number of target states:       1
  Size of final wait list        153

Time for analysis setup:          4.103s
  Time for loading CPAs:          0.858s
  Time for loading parser:        0.664s
  Time for CFA construction:      2.355s
    Time for parsing file(s):     0.681s
    Time for AST to CFA:          0.669s
    Time for CFA sanity check:    0.250s
    Time for post-processing:     0.577s
      Time for var class.:        0.329s
Time for Analysis:               26.152s
CPU time for analysis:           26.160s
Total time for CPAchecker:       30.261s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.172s

Time for Garbage Collector:       0.494s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     46MB (    44 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
