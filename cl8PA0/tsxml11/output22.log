scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_grdqajfl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8387 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7960 (95%)
  Because of loop head:            390 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (0%)
  Times precision was empty:       1423 (17%)
  Times precision was {false}:     249 (3%)
  Times result was cached:         6108 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      607 (7%)
  Times result was 'false':        839 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         18617
  BDD entailment checks:           569
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          15
Number of abstraction locations:          91
Max number of predicates per location:    8
Avg number of predicates per location:    6
Total predicates per abstraction:         43873
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 51.25
Number of irrelevant predicates:          18528 (42%)
Number of preds handled by boolean abs:   2458 (6%)
  Total number of models for allsat:      1311
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.16

Time for post operator:                  2.826s
  Time for path formula creation:        2.698s
Time for strengthen operator:            0.161s
Time for prec operator:                  5.734s
  Time for abstraction:                  5.408s (Max:     0.035s, Count: 8387)
    Boolean abstraction:                 1.190s
    Solving time:                        0.867s (Max:     0.016s)
    Model enumeration time:              0.164s
    Time for BDD construction:           0.182s (Max:     0.014s)
Time for merge operator:                 0.312s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     1.031s

Number of path formula cache hits:   60719 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.551s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               758
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1325 (count: 7334, min: 0, max: 410, avg: 0.18)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.385s
Automaton transfers with branching:                0
Automaton transfer successors:                        70099 (count: 70099, min: 1, max: 1, avg: 1.00) [1 x 70099]

CPA algorithm statistics
------------------------
Number of iterations:            48272
Max size of waitlist:            166
Average size of waitlist:        90
Number of computed successors:   60546
Max successors for one state:    2
Number of times merged:          9024
Number of times stopped:         9432
Number of times breaked:         37

Total time for CPA algorithm:        13.597s (Max:     2.572s)
  Time for choose from waitlist:      0.126s
  Time for precision adjustment:      6.640s
  Time for transfer relation:         4.921s
  Time for merge operator:            0.687s
  Time for stop operator:             0.210s
  Time for adding to reached set:     0.264s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):               12858 (count: 37, min: 292, max: 361, avg: 347.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.520s
  Counterexample analysis:                            10.789s (Max:     0.515s, Calls: 37)
    Refinement sat check:                              4.242s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.176s
  Precision update:                                    0.082s
  ARG update:                                          0.215s

Length of refined path (in blocks):                   11190 (count: 36, min: 54, max: 355, avg: 310.83)
Number of affected states:                             3187 (count: 36, min: 1, max: 354, avg: 88.53)
Length (states) of path with itp 'true':               7967 (count: 36, min: 0, max: 349, avg: 221.31)
Length (states) of path with itp non-trivial itp:      3187 (count: 36, min: 1, max: 354, avg: 88.53)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 36, min: 0, max: 3, avg: 0.36)
Equal non-trivial interpolants along paths:            3138 (count: 36, min: 0, max: 351, avg: 87.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 4185
Max. size of reached set after ref.:  4054
Avg. size of reached set before ref.: 3561.57
Avg. size of reached set after ref.:  2263.94

Total time for CEGAR algorithm:      25.988s
Time for refinements:                12.304s
Average time for refinement:          0.332s
Max time for refinement:              0.558s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          695
  Total lines:            1702
  Line coverage:          0.408
  Visited conditions:     352
  Total conditions:       728
  Condition coverage:     0.484

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             4185
  Number of reached locations:   719 (32%)
    Avg states per location:     5
    Max states per location:     49 (at node N2119)
  Number of reached functions:   40 (53%)
  Number of partitions:          4175
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1619 (before lines 2125-2153), Function cleanup called from node N6, stack depth 4 [664724e7], stack [main, runTest, test, cleanup]])
  Number of target states:       1
  Size of final wait list        152

Time for analysis setup:          4.234s
  Time for loading CPAs:          0.829s
  Time for loading parser:        0.757s
  Time for CFA construction:      2.418s
    Time for parsing file(s):     0.709s
    Time for AST to CFA:          0.678s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.588s
      Time for var class.:        0.335s
Time for Analysis:               25.988s
CPU time for analysis:           25.980s
Total time for CPAchecker:       30.230s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.200s

Time for Garbage Collector:       0.505s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     47MB (    45 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
