scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_823puw84/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4293 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4144 (97%)
  Because of loop head:            132 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (0%)
  Times precision was empty:       2080 (48%)
  Times precision was {false}:     155 (4%)
  Times result was cached:         1750 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      308 (7%)
  Times result was 'false':        158 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         78806
  BDD entailment checks:           328
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          15
Number of abstraction locations:          64
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         5329
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 11.51
Number of irrelevant predicates:          3001 (56%)
Number of preds handled by boolean abs:   1110 (21%)
  Total number of models for allsat:      330
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  7.139s
  Time for path formula creation:        6.881s
Time for strengthen operator:            0.355s
Time for prec operator:                  3.340s
  Time for abstraction:                  2.750s (Max:     0.024s, Count: 4293)
    Boolean abstraction:                 0.671s
    Solving time:                        0.604s (Max:     0.014s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.087s (Max:     0.012s)
Time for merge operator:                 1.637s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.632s

Number of path formula cache hits:   160784 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.773s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               306
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         770 (count: 5192, min: 0, max: 99, avg: 0.15)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.694s
  Time for transition matches:                         0.264s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       174310 (count: 174310, min: 1, max: 1, avg: 1.00) [1 x 174310]

CPA algorithm statistics
------------------------
Number of iterations:            130480
Max size of waitlist:            95
Average size of waitlist:        47
Number of computed successors:   170885
Max successors for one state:    2
Number of times merged:          39239
Number of times stopped:         39545
Number of times breaked:         17

Total time for CPA algorithm:        23.190s (Max:     7.571s)
  Time for choose from waitlist:      0.252s
  Time for precision adjustment:      5.934s
  Time for transfer relation:        11.435s
  Time for merge operator:            2.968s
  Time for stop operator:             0.618s
  Time for adding to reached set:     0.606s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                1228 (count: 17, min: 67, max: 75, avg: 72.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.674s
  Counterexample analysis:                             0.910s (Max:     0.078s, Calls: 17)
    Refinement sat check:                              0.612s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.026s
  ARG update:                                          0.645s

Length of refined path (in blocks):                     933 (count: 17, min: 41, max: 68, avg: 54.88)
Number of affected states:                              440 (count: 17, min: 1, max: 65, avg: 25.88)
Length (states) of path with itp 'true':                476 (count: 17, min: 0, max: 66, avg: 28.00)
Length (states) of path with itp non-trivial itp:       440 (count: 17, min: 1, max: 65, avg: 25.88)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 17, min: 0, max: 1, avg: 0.12)
Equal non-trivial interpolants along paths:             421 (count: 17, min: 0, max: 63, avg: 24.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 16862
Max. size of reached set after ref.:  16562
Avg. size of reached set before ref.: 14417.88
Avg. size of reached set after ref.:  6810.53

Total time for CEGAR algorithm:      25.496s
Time for refinements:                 2.162s
Average time for refinement:          0.127s
Max time for refinement:              0.228s

Code Coverage
-----------------------------
  Function coverage:      0.413
  Visited lines:          550
  Total lines:            1702
  Line coverage:          0.323
  Visited conditions:     322
  Total conditions:       728
  Condition coverage:     0.442

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             1857
  Number of reached locations:   621 (28%)
    Avg states per location:     2
    Max states per location:     6 (at node N2119)
  Number of reached functions:   31 (41%)
  Number of partitions:          1856
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1052 (before line 1387), Function timeShift called from node N1605, stack depth 5 [3a053c52], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          4.267s
  Time for loading CPAs:          0.896s
  Time for loading parser:        0.690s
  Time for CFA construction:      2.494s
    Time for parsing file(s):     0.751s
    Time for AST to CFA:          0.711s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.562s
      Time for var class.:        0.306s
Time for Analysis:               25.496s
CPU time for analysis:           25.500s
Total time for CPAchecker:       29.770s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.121s

Time for Garbage Collector:       1.203s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     65MB (    62 MiB) avg;    127MB (   121 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
