scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xleff74k/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5260 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5202 (99%)
  Because of loop head:            54 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       5073 (96%)
  Times precision was {false}:     28 (1%)
  Times result was cached:         99 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      60 (1%)
  Times result was 'false':        35 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         63855
  BDD entailment checks:           665
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          41
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         191
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.17
Number of irrelevant predicates:          45 (24%)
Number of preds handled by boolean abs:   63 (33%)
  Total number of models for allsat:      73
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.22

Time for post operator:                 10.404s
  Time for path formula creation:       10.169s
Time for strengthen operator:            0.340s
Time for prec operator:                  1.239s
  Time for abstraction:                  0.509s (Max:     0.027s, Count: 5260)
    Boolean abstraction:                 0.128s
    Solving time:                        0.111s (Max:     0.009s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.008s (Max:     0.001s)
Time for merge operator:                 1.989s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     0.128s

Number of path formula cache hits:   16473 (11%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.606s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         141 (count: 6260, min: 0, max: 94, avg: 0.02)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.607s
  Time for transition matches:                         0.262s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       144539 (count: 144539, min: 1, max: 1, avg: 1.00) [1 x 144539]

CPA algorithm statistics
------------------------
Number of iterations:            109613
Max size of waitlist:            27
Average size of waitlist:        15
Number of computed successors:   141923
Max successors for one state:    2
Number of times merged:          31595
Number of times stopped:         32257
Number of times breaked:         4

Total time for CPA algorithm:        24.587s (Max:    13.502s)
  Time for choose from waitlist:      0.289s
  Time for precision adjustment:      3.506s
  Time for transfer relation:        14.791s
  Time for merge operator:            3.275s
  Time for stop operator:             0.570s
  Time for adding to reached set:     0.603s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                 279 (count: 4, min: 67, max: 75, avg: 69.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.800s
  Counterexample analysis:                             0.298s (Max:     0.083s, Calls: 4)
    Refinement sat check:                              0.191s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.001s
  ARG update:                                          0.462s

Length of refined path (in blocks):                     206 (count: 4, min: 40, max: 64, avg: 51.50)
Number of affected states:                               42 (count: 4, min: 1, max: 39, avg: 10.50)
Length (states) of path with itp 'true':                160 (count: 4, min: 0, max: 62, avg: 40.00)
Length (states) of path with itp non-trivial itp:        42 (count: 4, min: 1, max: 39, avg: 10.50)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 4, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:              37 (count: 4, min: 0, max: 37, avg: 9.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 39834
Max. size of reached set after ref.:  39704
Avg. size of reached set before ref.: 39833.25
Avg. size of reached set after ref.:  19964.50

Total time for CEGAR algorithm:      25.962s
Time for refinements:                 1.238s
Average time for refinement:          0.309s
Max time for refinement:              0.438s

Code Coverage
-----------------------------
  Function coverage:      0.520
  Visited lines:          879
  Total lines:            1702
  Line coverage:          0.516
  Visited conditions:     512
  Total conditions:       728
  Condition coverage:     0.703

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             30156
  Number of reached locations:   974 (44%)
    Avg states per location:     30
    Max states per location:     109 (at node N2198)
  Number of reached functions:   39 (52%)
  Number of partitions:          30155
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1052 (before line 1387), Function timeShift called from node N1605, stack depth 5 [1de84ea9], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          4.269s
  Time for loading CPAs:          0.852s
  Time for loading parser:        0.742s
  Time for CFA construction:      2.427s
    Time for parsing file(s):     0.691s
    Time for AST to CFA:          0.757s
    Time for CFA sanity check:    0.257s
    Time for post-processing:     0.553s
      Time for var class.:        0.309s
Time for Analysis:               25.962s
CPU time for analysis:           25.960s
Total time for CPAchecker:       30.243s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.636s

Time for Garbage Collector:       1.554s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                141MB (   134 MiB) max;     70MB (    67 MiB) avg;    151MB (   144 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           151MB (   144 MiB) max;    132MB (   126 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
