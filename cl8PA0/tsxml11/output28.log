scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yl5eibtq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4807 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4453 (93%)
  Because of loop head:            330 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       2390 (50%)
  Times precision was {false}:     183 (4%)
  Times result was cached:         1971 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      263 (5%)
  Times result was 'false':        239 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         75276
  BDD entailment checks:           630
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          16
Number of abstraction locations:          72
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         7712
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 17.29
Number of irrelevant predicates:          3448 (45%)
Number of preds handled by boolean abs:   1183 (15%)
  Total number of models for allsat:      626
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.38

Time for post operator:                  7.429s
  Time for path formula creation:        7.197s
Time for strengthen operator:            0.350s
Time for prec operator:                  3.281s
  Time for abstraction:                  2.702s (Max:     0.025s, Count: 4807)
    Boolean abstraction:                 0.656s
    Solving time:                        0.474s (Max:     0.015s)
    Model enumeration time:              0.112s
    Time for BDD construction:           0.092s (Max:     0.009s)
Time for merge operator:                 1.800s
Time for coverage check:                 0.109s
  Time for BDD entailment checks:        0.086s
Total time for SMT solver (w/o itp):     0.586s

Number of path formula cache hits:   142953 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.090s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               825
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         827 (count: 5719, min: 0, max: 193, avg: 0.14)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.746s
  Time for transition matches:                         0.355s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       169265 (count: 169265, min: 1, max: 1, avg: 1.00) [1 x 169265]

CPA algorithm statistics
------------------------
Number of iterations:            126808
Max size of waitlist:            109
Average size of waitlist:        56
Number of computed successors:   165499
Max successors for one state:    2
Number of times merged:          37323
Number of times stopped:         37888
Number of times breaked:         24

Total time for CPA algorithm:        23.342s (Max:     8.450s)
  Time for choose from waitlist:      0.210s
  Time for precision adjustment:      5.680s
  Time for transfer relation:        11.607s
  Time for merge operator:            3.188s
  Time for stop operator:             0.580s
  Time for adding to reached set:     0.554s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                1592 (count: 24, min: 59, max: 75, avg: 66.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.966s
  Counterexample analysis:                             1.210s (Max:     0.080s, Calls: 24)
    Refinement sat check:                              0.823s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.050s
  ARG update:                                          0.546s

Length of refined path (in blocks):                    1305 (count: 24, min: 41, max: 64, avg: 54.38)
Number of affected states:                              513 (count: 24, min: 1, max: 63, avg: 21.38)
Length (states) of path with itp 'true':                768 (count: 24, min: 0, max: 62, avg: 32.00)
Length (states) of path with itp non-trivial itp:       513 (count: 24, min: 1, max: 63, avg: 21.38)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 24, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:             484 (count: 24, min: 0, max: 61, avg: 20.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 20104
Max. size of reached set after ref.:  19667
Avg. size of reached set before ref.: 10343.83
Avg. size of reached set after ref.:  5120.96

Total time for CEGAR algorithm:      26.150s
Time for refinements:                 2.618s
Average time for refinement:          0.109s
Max time for refinement:              0.285s

Code Coverage
-----------------------------
  Function coverage:      0.520
  Visited lines:          657
  Total lines:            1702
  Line coverage:          0.386
  Visited conditions:     370
  Total conditions:       728
  Condition coverage:     0.508

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             2024
  Number of reached locations:   729 (33%)
    Avg states per location:     2
    Max states per location:     11 (at node N2199)
  Number of reached functions:   39 (52%)
  Number of partitions:          2023
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1052 (before line 1387), Function timeShift called from node N1605, stack depth 5 [2c7eca4b], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          4.079s
  Time for loading CPAs:          0.776s
  Time for loading parser:        0.663s
  Time for CFA construction:      2.434s
    Time for parsing file(s):     0.691s
    Time for AST to CFA:          0.754s
    Time for CFA sanity check:    0.278s
    Time for post-processing:     0.555s
      Time for var class.:        0.286s
Time for Analysis:               26.150s
CPU time for analysis:           26.150s
Total time for CPAchecker:       30.235s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.110s

Time for Garbage Collector:       1.330s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
