scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nao0snqm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5946 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5624 (95%)
  Because of loop head:            298 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       5362 (90%)
  Times precision was {false}:     123 (2%)
  Times result was cached:         412 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      49 (1%)
  Times result was 'false':        138 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         63784
  BDD entailment checks:           1040
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          49
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         634
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 3.69
Number of irrelevant predicates:          448 (71%)
Number of preds handled by boolean abs:   56 (9%)
  Total number of models for allsat:      49
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  7.767s
  Time for path formula creation:        7.538s
Time for strengthen operator:            0.305s
Time for prec operator:                  1.487s
  Time for abstraction:                  0.957s (Max:     0.030s, Count: 5946)
    Boolean abstraction:                 0.089s
    Solving time:                        0.185s (Max:     0.013s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.011s (Max:     0.009s)
Time for merge operator:                 1.611s
Time for coverage check:                 0.098s
  Time for BDD entailment checks:        0.072s
Total time for SMT solver (w/o itp):     0.188s

Number of path formula cache hits:   92695 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.250s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         126 (count: 7361, min: 0, max: 56, avg: 0.02)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.861s
  Time for transition matches:                         0.353s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                       148212 (count: 148212, min: 1, max: 1, avg: 1.00) [1 x 148212]

CPA algorithm statistics
------------------------
Number of iterations:            111623
Max size of waitlist:            143
Average size of waitlist:        80
Number of computed successors:   144453
Max successors for one state:    2
Number of times merged:          31372
Number of times stopped:         32398
Number of times breaked:         24

Total time for CPA algorithm:        21.276s (Max:     9.859s)
  Time for choose from waitlist:      0.276s
  Time for precision adjustment:      3.449s
  Time for transfer relation:        11.852s
  Time for merge operator:            2.968s
  Time for stop operator:             0.603s
  Time for adding to reached set:     0.679s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                1567 (count: 24, min: 59, max: 72, avg: 65.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.518s
  Counterexample analysis:                             0.855s (Max:     0.068s, Calls: 24)
    Refinement sat check:                              0.568s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.012s
  ARG update:                                          0.573s

Length of refined path (in blocks):                    1425 (count: 24, min: 52, max: 68, avg: 59.38)
Number of affected states:                              126 (count: 24, min: 1, max: 53, avg: 5.25)
Length (states) of path with itp 'true':               1275 (count: 24, min: 0, max: 66, avg: 53.13)
Length (states) of path with itp non-trivial itp:       126 (count: 24, min: 1, max: 53, avg: 5.25)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 24, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:             100 (count: 24, min: 0, max: 51, avg: 4.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 59540
Max. size of reached set after ref.:  59411
Avg. size of reached set before ref.: 44331.42
Avg. size of reached set after ref.:  40171.04

Total time for CEGAR algorithm:      25.649s
Time for refinements:                 3.224s
Average time for refinement:          0.134s
Max time for refinement:              0.403s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          848
  Total lines:            1702
  Line coverage:          0.498
  Visited conditions:     500
  Total conditions:       728
  Condition coverage:     0.687

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             12068
  Number of reached locations:   936 (42%)
    Avg states per location:     12
    Max states per location:     58 (at node N1477)
  Number of reached functions:   42 (56%)
  Number of partitions:          12066
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1052 (before line 1387), Function timeShift called from node N1605, stack depth 5 [67b46c42], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        85

Time for analysis setup:          4.058s
  Time for loading CPAs:          0.811s
  Time for loading parser:        0.744s
  Time for CFA construction:      2.311s
    Time for parsing file(s):     0.622s
    Time for AST to CFA:          0.672s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.571s
      Time for var class.:        0.299s
Time for Analysis:               25.649s
CPU time for analysis:           25.650s
Total time for CPAchecker:       29.712s
Total CPU time for CPAchecker:   29.710s
Time for statistics:              0.381s

Time for Garbage Collector:       1.399s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   115 MiB) max;     66MB (    63 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8074MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
