scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k1y657r2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17012 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14959 (88%)
  Because of loop head:            1951 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         102 (1%)
  Times precision was empty:       11385 (67%)
  Times precision was {false}:     224 (1%)
  Times result was cached:         5037 (30%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      366 (2%)
  Times result was 'false':        294 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         53599
  BDD entailment checks:           4521
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          20
Number of abstraction locations:          66
Max number of predicates per location:    9
Avg number of predicates per location:    7
Total predicates per abstraction:         21914
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 37.14
Number of irrelevant predicates:          13551 (62%)
Number of preds handled by boolean abs:   1252 (6%)
  Total number of models for allsat:      824
  Max number of models for allsat:        63
  Avg number of models for allsat:        2.25

Time for post operator:                  3.387s
  Time for path formula creation:        3.153s
Time for strengthen operator:            0.471s
Time for prec operator:                  4.316s
  Time for abstraction:                  3.720s (Max:     0.025s, Count: 17012)
    Boolean abstraction:                 0.848s
    Solving time:                        0.599s (Max:     0.015s)
    Model enumeration time:              0.127s
    Time for BDD construction:           0.135s (Max:     0.010s)
Time for merge operator:                 0.436s
Time for coverage check:                 0.064s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     0.726s

Number of path formula cache hits:   188495 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.635s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1188
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1102 (count: 19451, min: 0, max: 166, avg: 0.06)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.813s
  Time for transition matches:                         0.307s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       179839 (count: 179839, min: 1, max: 1, avg: 1.00) [1 x 179839]

CPA algorithm statistics
------------------------
Number of iterations:            128924
Max size of waitlist:            141
Average size of waitlist:        69
Number of computed successors:   159369
Max successors for one state:    2
Number of times merged:          24539
Number of times stopped:         28652
Number of times breaked:         102

Total time for CPA algorithm:        17.691s (Max:     3.889s)
  Time for choose from waitlist:      0.304s
  Time for precision adjustment:      6.199s
  Time for transfer relation:         7.608s
  Time for merge operator:            1.320s
  Time for stop operator:             0.482s
  Time for adding to reached set:     0.450s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   102
Avg. length of target path (in blocks):                8209 (count: 102, min: 59, max: 124, avg: 80.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.459s
  Counterexample analysis:                             4.512s (Max:     0.090s, Calls: 102)
    Refinement sat check:                              2.766s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.096s
  Precision update:                                    0.094s
  ARG update:                                          0.546s

Length of refined path (in blocks):                    7558 (count: 102, min: 40, max: 120, avg: 74.10)
Number of affected states:                              964 (count: 102, min: 1, max: 92, avg: 9.45)
Length (states) of path with itp 'true':               6492 (count: 102, min: 0, max: 118, avg: 63.65)
Length (states) of path with itp non-trivial itp:       964 (count: 102, min: 1, max: 92, avg: 9.45)
Length (states) of path with itp 'false':               102 (count: 102, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          18 (count: 102, min: 0, max: 3, avg: 0.18)
Equal non-trivial interpolants along paths:             844 (count: 102, min: 0, max: 90, avg: 8.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                102
Number of successful refinements:     102
Number of failed refinements:         0
Max. size of reached set before ref.: 11512
Max. size of reached set after ref.:  11406
Avg. size of reached set before ref.: 8888.65
Avg. size of reached set after ref.:  7616.38

Total time for CEGAR algorithm:      25.692s
Time for refinements:                 7.136s
Average time for refinement:          0.069s
Max time for refinement:              0.164s

Code Coverage
-----------------------------
  Function coverage:      0.440
  Visited lines:          377
  Total lines:            1702
  Line coverage:          0.222
  Visited conditions:     168
  Total conditions:       728
  Condition coverage:     0.231

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             653
  Number of reached locations:   380 (17%)
    Avg states per location:     1
    Max states per location:     6 (at node N1477)
  Number of reached functions:   33 (44%)
  Number of partitions:          647
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1052 (before line 1387), Function timeShift called from node N1605, stack depth 5 [796f72c5], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          4.086s
  Time for loading CPAs:          0.860s
  Time for loading parser:        0.721s
  Time for CFA construction:      2.316s
    Time for parsing file(s):     0.619s
    Time for AST to CFA:          0.656s
    Time for CFA sanity check:    0.246s
    Time for post-processing:     0.612s
      Time for var class.:        0.363s
Time for Analysis:               25.692s
CPU time for analysis:           25.680s
Total time for CPAchecker:       29.781s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.149s

Time for Garbage Collector:       0.894s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                115MB (   109 MiB) max;     58MB (    56 MiB) avg;    119MB (   113 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
