scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_80ex2mub/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18525 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16304 (88%)
  Because of loop head:            2117 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         104 (1%)
  Times precision was empty:       12302 (66%)
  Times precision was {false}:     237 (1%)
  Times result was cached:         5596 (30%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      390 (2%)
  Times result was 'false':        340 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         58377
  BDD entailment checks:           4973
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          20
Number of abstraction locations:          67
Max number of predicates per location:    9
Avg number of predicates per location:    7
Total predicates per abstraction:         25834
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 41.20
Number of irrelevant predicates:          16165 (63%)
Number of preds handled by boolean abs:   1333 (5%)
  Total number of models for allsat:      915
  Max number of models for allsat:        63
  Avg number of models for allsat:        2.35

Time for post operator:                  3.296s
  Time for path formula creation:        3.070s
Time for strengthen operator:            0.413s
Time for prec operator:                  4.582s
  Time for abstraction:                  3.979s (Max:     0.034s, Count: 18525)
    Boolean abstraction:                 0.762s
    Solving time:                        0.558s (Max:     0.013s)
    Model enumeration time:              0.112s
    Time for BDD construction:           0.128s (Max:     0.017s)
Time for merge operator:                 0.452s
Time for coverage check:                 0.095s
  Time for BDD entailment checks:        0.066s
Total time for SMT solver (w/o itp):     0.670s

Number of path formula cache hits:   203833 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.483s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1188
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1173 (count: 21038, min: 0, max: 174, avg: 0.06)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.686s
  Time for transition matches:                         0.314s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       195844 (count: 195844, min: 1, max: 1, avg: 1.00) [1 x 195844]

CPA algorithm statistics
------------------------
Number of iterations:            140312
Max size of waitlist:            150
Average size of waitlist:        71
Number of computed successors:   173466
Max successors for one state:    2
Number of times merged:          26702
Number of times stopped:         31189
Number of times breaked:         104

Total time for CPA algorithm:        18.199s (Max:     3.875s)
  Time for choose from waitlist:      0.295s
  Time for precision adjustment:      6.771s
  Time for transfer relation:         7.188s
  Time for merge operator:            1.353s
  Time for stop operator:             0.567s
  Time for adding to reached set:     0.609s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   104
Avg. length of target path (in blocks):                8337 (count: 104, min: 59, max: 124, avg: 80.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.065s
  Counterexample analysis:                             4.150s (Max:     0.074s, Calls: 104)
    Refinement sat check:                              2.623s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.104s
  Precision update:                                    0.100s
  ARG update:                                          0.506s

Length of refined path (in blocks):                    7611 (count: 103, min: 40, max: 120, avg: 73.89)
Number of affected states:                              965 (count: 103, min: 1, max: 92, avg: 9.37)
Length (states) of path with itp 'true':               6543 (count: 103, min: 0, max: 118, avg: 63.52)
Length (states) of path with itp non-trivial itp:       965 (count: 103, min: 1, max: 92, avg: 9.37)
Length (states) of path with itp 'false':               103 (count: 103, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          18 (count: 103, min: 0, max: 3, avg: 0.17)
Equal non-trivial interpolants along paths:             844 (count: 103, min: 0, max: 90, avg: 8.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                104
Number of successful refinements:     103
Number of failed refinements:         0
Max. size of reached set before ref.: 12131
Max. size of reached set after ref.:  12025
Avg. size of reached set before ref.: 8950.33
Avg. size of reached set after ref.:  7659.18

Total time for CEGAR algorithm:      25.393s
Time for refinements:                 6.444s
Average time for refinement:          0.061s
Max time for refinement:              0.184s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          587
  Total lines:            1702
  Line coverage:          0.345
  Visited conditions:     282
  Total conditions:       728
  Condition coverage:     0.387

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             12061
  Number of reached locations:   628 (28%)
    Avg states per location:     19
    Max states per location:     186 (at node N1476)
  Number of reached functions:   40 (53%)
  Number of partitions:          12020
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1052 (before line 1387), Function timeShift called from node N1605, stack depth 5 [28be9a9d], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       1
  Size of final wait list        140

Time for analysis setup:          4.354s
  Time for loading CPAs:          0.839s
  Time for loading parser:        0.740s
  Time for CFA construction:      2.559s
    Time for parsing file(s):     0.767s
    Time for AST to CFA:          0.814s
    Time for CFA sanity check:    0.242s
    Time for post-processing:     0.550s
      Time for var class.:        0.304s
Time for Analysis:               25.393s
CPU time for analysis:           25.390s
Total time for CPAchecker:       29.752s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.299s

Time for Garbage Collector:       1.111s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                116MB (   110 MiB) max;     59MB (    56 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
