scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1t9o8gxs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14204 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12822 (90%)
  Because of loop head:            1254 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         128 (1%)
  Times precision was empty:       3903 (27%)
  Times precision was {false}:     278 (2%)
  Times result was cached:         9284 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      739 (5%)
  Times result was 'false':        1920 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         51519
  BDD entailment checks:           1867
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          25
Number of abstraction locations:          76
Max number of predicates per location:    14
Avg number of predicates per location:    10
Total predicates per abstraction:         83057
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 81.67
Number of irrelevant predicates:          26651 (32%)
Number of preds handled by boolean abs:   4557 (5%)
  Total number of models for allsat:      1348
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.82

Time for post operator:                  4.041s
  Time for path formula creation:        3.822s
Time for strengthen operator:            0.234s
Time for prec operator:                  7.043s
  Time for abstraction:                  6.540s (Max:     0.024s, Count: 14204)
    Boolean abstraction:                 1.099s
    Solving time:                        0.750s (Max:     0.016s)
    Model enumeration time:              0.130s
    Time for BDD construction:           0.145s (Max:     0.010s)
Time for merge operator:                 0.598s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.880s

Number of path formula cache hits:   130148 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.439s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1428
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2676 (count: 12530, min: 0, max: 337, avg: 0.21)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.574s
  Time for transition matches:                         0.246s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       162041 (count: 162041, min: 1, max: 1, avg: 1.00) [1 x 162041]

CPA algorithm statistics
------------------------
Number of iterations:            116372
Max size of waitlist:            40
Average size of waitlist:        16
Number of computed successors:   146041
Max successors for one state:    2
Number of times merged:          24826
Number of times stopped:         26435
Number of times breaked:         128

Total time for CPA algorithm:        18.764s (Max:     1.644s)
  Time for choose from waitlist:      0.216s
  Time for precision adjustment:      8.437s
  Time for transfer relation:         7.065s
  Time for merge operator:            1.282s
  Time for stop operator:             0.319s
  Time for adding to reached set:     0.477s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   128
Avg. length of target path (in blocks):               10093 (count: 128, min: 59, max: 124, avg: 78.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.665s
  Counterexample analysis:                             5.707s (Max:     0.096s, Calls: 128)
    Refinement sat check:                              3.817s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.137s
  Precision update:                                    0.180s
  ARG update:                                          0.441s

Length of refined path (in blocks):                    8006 (count: 128, min: 40, max: 87, avg: 62.55)
Number of affected states:                             3558 (count: 128, min: 1, max: 86, avg: 27.80)
Length (states) of path with itp 'true':               4320 (count: 128, min: 0, max: 68, avg: 33.75)
Length (states) of path with itp non-trivial itp:      3558 (count: 128, min: 1, max: 86, avg: 27.80)
Length (states) of path with itp 'false':               128 (count: 128, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          21 (count: 128, min: 0, max: 3, avg: 0.16)
Equal non-trivial interpolants along paths:            3409 (count: 128, min: 0, max: 85, avg: 26.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                128
Number of successful refinements:     128
Number of failed refinements:         0
Max. size of reached set before ref.: 2991
Max. size of reached set after ref.:  1316
Avg. size of reached set before ref.: 1365.50
Avg. size of reached set after ref.:  459.49

Total time for CEGAR algorithm:      25.903s
Time for refinements:                 7.080s
Average time for refinement:          0.055s
Max time for refinement:              0.148s

Code Coverage
-----------------------------
  Function coverage:      0.520
  Visited lines:          697
  Total lines:            1702
  Line coverage:          0.410
  Visited conditions:     370
  Total conditions:       728
  Condition coverage:     0.508

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             1716
  Number of reached locations:   729 (33%)
    Avg states per location:     2
    Max states per location:     12 (at node N1239)
  Number of reached functions:   39 (52%)
  Number of partitions:          1712
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1115 (after line 1488), Function timeShift called from node N1605, stack depth 5 [4460bf18], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          3.882s
  Time for loading CPAs:          0.729s
  Time for loading parser:        0.692s
  Time for CFA construction:      2.292s
    Time for parsing file(s):     0.649s
    Time for AST to CFA:          0.689s
    Time for CFA sanity check:    0.231s
    Time for post-processing:     0.558s
      Time for var class.:        0.314s
Time for Analysis:               25.904s
CPU time for analysis:           25.910s
Total time for CPAchecker:       29.790s
Total CPU time for CPAchecker:   29.790s
Time for statistics:              0.110s

Time for Garbage Collector:       0.662s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    76 MiB) max;     47MB (    45 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
