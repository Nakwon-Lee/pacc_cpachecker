scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_37rnrcnu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            546530 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  456333 (83%)
  Because of loop head:            89821 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         376 (0%)
  Times precision was empty:       20119 (4%)
  Times precision was {false}:     1818 (0%)
  Times result was cached:         485001 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39592 (7%)
  Times result was 'false':        123016 (23%)
Number of strengthen sat checks:   0
Number of coverage checks:         3114050
  BDD entailment checks:           208580
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          84
Number of abstraction locations:          161
Max number of predicates per location:    35
Avg number of predicates per location:    13
Total predicates per abstraction:         8147414
Max number of predicates per abstraction: 35
Avg number of predicates per abstraction: 196.75
Number of irrelevant predicates:          1827082 (22%)
Number of preds handled by boolean abs:   588377 (7%)
  Total number of models for allsat:      1027602
  Max number of models for allsat:        2384
  Avg number of models for allsat:        25.95

Time for post operator:                 61.633s
  Time for path formula creation:       58.058s
Time for strengthen operator:            6.677s
Time for prec operator:                602.140s
  Time for abstraction:                592.178s (Max:     2.072s, Count: 546530)
    Boolean abstraction:               223.942s
    Solving time:                       77.727s (Max:     0.115s)
    Model enumeration time:             86.427s
    Time for BDD construction:          51.099s (Max:     1.729s)
Time for merge operator:                14.138s
Time for coverage check:                 0.917s
  Time for BDD entailment checks:        0.624s
Total time for SMT solver (w/o itp):   164.154s

Number of path formula cache hits:   8641477 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    32.115s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               260547
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      546197 (count: 689165, min: 0, max: 12404, avg: 0.79)
Time for BDD node cleanup:                             0.208s
Time for BDD garbage collection:                       0.664s (in 113 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.750s
  Time for transition matches:                         4.671s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                      8314651 (count: 8314651, min: 1, max: 1, avg: 1.00) [1 x 8314651]

CPA algorithm statistics
------------------------
Number of iterations:            6140914
Max size of waitlist:            666
Average size of waitlist:        171
Number of computed successors:   7811156
Max successors for one state:    2
Number of times merged:          1452735
Number of times stopped:         1519423
Number of times breaked:         376

Total time for CPA algorithm:       842.455s (Max:    33.161s)
  Time for choose from waitlist:      2.322s
  Time for precision adjustment:    645.077s
  Time for transfer relation:       129.938s
  Time for merge operator:           28.386s
  Time for stop operator:             8.914s
  Time for adding to reached set:    11.719s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   376
Avg. length of target path (in blocks):               48028 (count: 376, min: 59, max: 242, avg: 127.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  42.298s
  Counterexample analysis:                            29.413s (Max:     0.190s, Calls: 376)
    Refinement sat check:                             15.033s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.034s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.311s
  Precision update:                                    0.402s
  ARG update:                                         11.746s

Length of refined path (in blocks):                   42611 (count: 376, min: 40, max: 222, avg: 113.33)
Number of affected states:                            21247 (count: 376, min: 1, max: 221, avg: 56.51)
Length (states) of path with itp 'true':              20988 (count: 376, min: 0, max: 170, avg: 55.82)
Length (states) of path with itp non-trivial itp:     21247 (count: 376, min: 1, max: 221, avg: 56.51)
Length (states) of path with itp 'false':               376 (count: 376, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         711 (count: 376, min: 0, max: 9, avg: 1.89)
Equal non-trivial interpolants along paths:           20160 (count: 376, min: 0, max: 219, avg: 53.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                376
Number of successful refinements:     376
Number of failed refinements:         0
Max. size of reached set before ref.: 145238
Max. size of reached set after ref.:  139087
Avg. size of reached set before ref.: 27220.44
Avg. size of reached set after ref.:  10821.42

Total time for CEGAR algorithm:     895.800s
Time for refinements:                50.019s
Average time for refinement:          0.133s
Max time for refinement:              0.738s

Code Coverage
-----------------------------
  Function coverage:      0.427
  Visited lines:          550
  Total lines:            1702
  Line coverage:          0.323
  Visited conditions:     280
  Total conditions:       728
  Condition coverage:     0.385

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             2684
  Number of reached locations:   569 (26%)
    Avg states per location:     4
    Max states per location:     40 (at node N1239)
  Number of reached functions:   32 (43%)
  Number of partitions:          2639
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1607 (before line 2108), Function threeTS called from node N4, stack depth 4 [bcd14eb], stack [main, runTest, test, threeTS]])
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          4.378s
  Time for loading CPAs:          0.728s
  Time for loading parser:        0.825s
  Time for CFA construction:      2.626s
    Time for parsing file(s):     0.885s
    Time for AST to CFA:          0.724s
    Time for CFA sanity check:    0.241s
    Time for post-processing:     0.536s
      Time for var class.:        0.308s
Time for Analysis:              895.801s
CPU time for analysis:          895.690s
Total time for CPAchecker:      900.187s
Total CPU time for CPAchecker:  900.070s
Time for statistics:              0.109s

Time for Garbage Collector:      64.900s (in 1145 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1065MB (  1016 MiB) max;    488MB (   466 MiB) avg;   1105MB (  1054 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:          1165MB (  1111 MiB) max;    710MB (   677 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  11208MB ( 10688 MiB) max;   9099MB (  8678 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
