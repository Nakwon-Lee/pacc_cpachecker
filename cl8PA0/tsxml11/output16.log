scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9p6api_v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8973 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8530 (95%)
  Because of loop head:            405 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       1482 (17%)
  Times precision was {false}:     249 (3%)
  Times result was cached:         6635 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      607 (7%)
  Times result was 'false':        897 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         19942
  BDD entailment checks:           588
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          15
Number of abstraction locations:          92
Max number of predicates per location:    8
Avg number of predicates per location:    6
Total predicates per abstraction:         47374
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 55.34
Number of irrelevant predicates:          19581 (41%)
Number of preds handled by boolean abs:   2458 (5%)
  Total number of models for allsat:      1311
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.16

Time for post operator:                  2.735s
  Time for path formula creation:        2.584s
Time for strengthen operator:            0.152s
Time for prec operator:                  5.896s
  Time for abstraction:                  5.556s (Max:     0.021s, Count: 8973)
    Boolean abstraction:                 1.068s
    Solving time:                        0.816s (Max:     0.014s)
    Model enumeration time:              0.147s
    Time for BDD construction:           0.151s (Max:     0.012s)
Time for merge operator:                 0.244s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.963s

Number of path formula cache hits:   66814 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.363s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               758
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1345 (count: 7448, min: 0, max: 410, avg: 0.18)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.299s
Automaton transfers with branching:                0
Automaton transfer successors:                        75013 (count: 75013, min: 1, max: 1, avg: 1.00) [1 x 75013]

CPA algorithm statistics
------------------------
Number of iterations:            51634
Max size of waitlist:            166
Average size of waitlist:        89
Number of computed successors:   64782
Max successors for one state:    2
Number of times merged:          9677
Number of times stopped:         10098
Number of times breaked:         38

Total time for CPA algorithm:        13.266s (Max:     2.245s)
  Time for choose from waitlist:      0.130s
  Time for precision adjustment:      6.699s
  Time for transfer relation:         4.647s
  Time for merge operator:            0.599s
  Time for stop operator:             0.237s
  Time for adding to reached set:     0.300s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):               13217 (count: 38, min: 292, max: 361, avg: 347.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.714s
  Counterexample analysis:                            11.017s (Max:     0.523s, Calls: 38)
    Refinement sat check:                              4.129s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.198s
  Precision update:                                    0.085s
  ARG update:                                          0.194s

Length of refined path (in blocks):                   11544 (count: 37, min: 54, max: 355, avg: 312.00)
Number of affected states:                             3540 (count: 37, min: 1, max: 354, avg: 95.68)
Length (states) of path with itp 'true':               7967 (count: 37, min: 0, max: 349, avg: 215.32)
Length (states) of path with itp non-trivial itp:      3540 (count: 37, min: 1, max: 354, avg: 95.68)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 37, min: 0, max: 3, avg: 0.38)
Equal non-trivial interpolants along paths:            3489 (count: 37, min: 0, max: 351, avg: 94.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 4185
Max. size of reached set after ref.:  4054
Avg. size of reached set before ref.: 3560.34
Avg. size of reached set after ref.:  2202.84

Total time for CEGAR algorithm:      25.736s
Time for refinements:                12.381s
Average time for refinement:          0.325s
Max time for refinement:              0.604s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          641
  Total lines:            1702
  Line coverage:          0.377
  Visited conditions:     318
  Total conditions:       728
  Condition coverage:     0.437

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             3515
  Number of reached locations:   653 (29%)
    Avg states per location:     5
    Max states per location:     38 (at node N2119)
  Number of reached functions:   40 (53%)
  Number of partitions:          3510
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1619 (before lines 2125-2153), Function cleanup called from node N6, stack depth 4 [7b8b0c78], stack [main, runTest, test, cleanup]])
  Number of target states:       1
  Size of final wait list        151

Time for analysis setup:          4.011s
  Time for loading CPAs:          0.871s
  Time for loading parser:        0.662s
  Time for CFA construction:      2.279s
    Time for parsing file(s):     0.640s
    Time for AST to CFA:          0.686s
    Time for CFA sanity check:    0.247s
    Time for post-processing:     0.518s
      Time for var class.:        0.286s
Time for Analysis:               25.736s
CPU time for analysis:           25.740s
Total time for CPAchecker:       29.751s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.159s

Time for Garbage Collector:       0.434s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     45MB (    43 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
