scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s60yk9zn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4098 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3973 (97%)
  Because of loop head:            120 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       3630 (89%)
  Times precision was {false}:     96 (2%)
  Times result was cached:         267 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      105 (3%)
  Times result was 'false':        15 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         79910
  BDD entailment checks:           364
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          37
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         990
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 4.93
Number of irrelevant predicates:          390 (39%)
Number of preds handled by boolean abs:   315 (32%)
  Total number of models for allsat:      105
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  9.444s
  Time for path formula creation:        9.166s
Time for strengthen operator:            0.372s
Time for prec operator:                  1.751s
  Time for abstraction:                  1.115s (Max:     0.032s, Count: 4098)
    Boolean abstraction:                 0.308s
    Solving time:                        0.240s (Max:     0.018s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.053s (Max:     0.011s)
Time for merge operator:                 2.543s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.250s

Number of path formula cache hits:   107561 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.342s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         275 (count: 5151, min: 0, max: 65, avg: 0.05)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.685s
  Time for transition matches:                         0.267s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       175699 (count: 175699, min: 1, max: 1, avg: 1.00) [1 x 175699]

CPA algorithm statistics
------------------------
Number of iterations:            132412
Max size of waitlist:            115
Average size of waitlist:        63
Number of computed successors:   173157
Max successors for one state:    2
Number of times merged:          39773
Number of times stopped:         40132
Number of times breaked:         5

Total time for CPA algorithm:        24.562s (Max:     8.487s)
  Time for choose from waitlist:      0.218s
  Time for precision adjustment:      3.899s
  Time for transfer relation:        13.925s
  Time for merge operator:            3.843s
  Time for stop operator:             0.588s
  Time for adding to reached set:     0.615s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 375 (count: 5, min: 75, max: 75, avg: 75.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.008s
  Counterexample analysis:                             0.356s (Max:     0.091s, Calls: 5)
    Refinement sat check:                              0.235s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.018s
  ARG update:                                          0.560s

Length of refined path (in blocks):                     205 (count: 5, min: 41, max: 41, avg: 41.00)
Number of affected states:                              200 (count: 5, min: 40, max: 40, avg: 40.00)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       200 (count: 5, min: 40, max: 40, avg: 40.00)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             195 (count: 5, min: 39, max: 39, avg: 39.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 23140
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 22786.80
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.834s
Time for refinements:                 1.271s
Average time for refinement:          0.254s
Max time for refinement:              0.425s

Code Coverage
-----------------------------
  Function coverage:      0.427
  Visited lines:          589
  Total lines:            1702
  Line coverage:          0.346
  Visited conditions:     350
  Total conditions:       728
  Condition coverage:     0.481

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             19090
  Number of reached locations:   674 (30%)
    Avg states per location:     28
    Max states per location:     81 (at node N2150)
  Number of reached functions:   32 (43%)
  Number of partitions:          19089
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1052 (before line 1387), Function timeShift called from node N1605, stack depth 5 [12fc281a], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        96

Time for analysis setup:          3.920s
  Time for loading CPAs:          0.723s
  Time for loading parser:        0.670s
  Time for CFA construction:      2.354s
    Time for parsing file(s):     0.653s
    Time for AST to CFA:          0.732s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.563s
      Time for var class.:        0.327s
Time for Analysis:               25.834s
CPU time for analysis:           25.830s
Total time for CPAchecker:       29.757s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.460s

Time for Garbage Collector:       1.548s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                117MB (   112 MiB) max;     65MB (    62 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
