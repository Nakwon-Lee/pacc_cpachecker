scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_481n_trv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5489 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5315 (97%)
  Because of loop head:            162 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       4786 (87%)
  Times precision was {false}:     118 (2%)
  Times result was cached:         466 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      119 (2%)
  Times result was 'false':        115 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         86092
  BDD entailment checks:           612
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          9
Number of abstraction locations:          52
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         1269
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 5.35
Number of irrelevant predicates:          640 (50%)
Number of preds handled by boolean abs:   191 (15%)
  Total number of models for allsat:      133
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  8.139s
  Time for path formula creation:        7.826s
Time for strengthen operator:            0.384s
Time for prec operator:                  1.694s
  Time for abstraction:                  1.070s (Max:     0.026s, Count: 5489)
    Boolean abstraction:                 0.254s
    Solving time:                        0.251s (Max:     0.015s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.017s (Max:     0.001s)
Time for merge operator:                 1.793s
Time for coverage check:                 0.103s
  Time for BDD entailment checks:        0.074s
Total time for SMT solver (w/o itp):     0.264s

Number of path formula cache hits:   151820 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.587s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               215
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         300 (count: 6769, min: 0, max: 84, avg: 0.04)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.765s
  Time for transition matches:                         0.277s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       191954 (count: 191954, min: 1, max: 1, avg: 1.00) [1 x 191954]

CPA algorithm statistics
------------------------
Number of iterations:            144956
Max size of waitlist:            118
Average size of waitlist:        65
Number of computed successors:   188846
Max successors for one state:    2
Number of times merged:          42740
Number of times stopped:         43345
Number of times breaked:         12

Total time for CPA algorithm:        23.343s (Max:    10.939s)
  Time for choose from waitlist:      0.189s
  Time for precision adjustment:      3.873s
  Time for transfer relation:        13.052s
  Time for merge operator:            3.385s
  Time for stop operator:             0.665s
  Time for adding to reached set:     0.630s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 805 (count: 12, min: 59, max: 75, avg: 67.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.414s
  Counterexample analysis:                             0.697s (Max:     0.090s, Calls: 12)
    Refinement sat check:                              0.450s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.018s
  ARG update:                                          0.616s

Length of refined path (in blocks):                     656 (count: 12, min: 40, max: 64, avg: 54.67)
Number of affected states:                              191 (count: 12, min: 1, max: 53, avg: 15.92)
Length (states) of path with itp 'true':                453 (count: 12, min: 0, max: 62, avg: 37.75)
Length (states) of path with itp non-trivial itp:       191 (count: 12, min: 1, max: 53, avg: 15.92)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 12, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:             176 (count: 12, min: 0, max: 51, avg: 14.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 28841
Max. size of reached set after ref.:  28582
Avg. size of reached set before ref.: 27579.92
Avg. size of reached set after ref.:  16348.17

Total time for CEGAR algorithm:      26.022s
Time for refinements:                 2.369s
Average time for refinement:          0.197s
Max time for refinement:              0.342s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          549
  Total lines:            1702
  Line coverage:          0.323
  Visited conditions:     326
  Total conditions:       728
  Condition coverage:     0.448

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             10604
  Number of reached locations:   620 (28%)
    Avg states per location:     17
    Max states per location:     42 (at node N2198)
  Number of reached functions:   30 (40%)
  Number of partitions:          10603
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1052 (before line 1387), Function timeShift called from node N1605, stack depth 5 [54d3029e], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        54

Time for analysis setup:          4.234s
  Time for loading CPAs:          0.707s
  Time for loading parser:        0.727s
  Time for CFA construction:      2.619s
    Time for parsing file(s):     0.746s
    Time for AST to CFA:          0.816s
    Time for CFA sanity check:    0.268s
    Time for post-processing:     0.616s
      Time for var class.:        0.329s
Time for Analysis:               26.022s
CPU time for analysis:           26.020s
Total time for CPAchecker:       30.260s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.305s

Time for Garbage Collector:       1.524s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   117 MiB) max;     64MB (    61 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
