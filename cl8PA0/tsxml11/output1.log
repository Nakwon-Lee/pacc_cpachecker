scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xzvj4xdm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16136 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15457 (96%)
  Because of loop head:            644 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       6418 (40%)
  Times precision was {false}:     110 (1%)
  Times result was cached:         8591 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1017 (6%)
  Times result was 'false':        1957 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         115766
  BDD entailment checks:           4582
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          22
Number of abstraction locations:          77
Max number of predicates per location:    12
Avg number of predicates per location:    7
Total predicates per abstraction:         74829
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 66.40
Number of irrelevant predicates:          19183 (26%)
Number of preds handled by boolean abs:   6130 (8%)
  Total number of models for allsat:      3788
  Max number of models for allsat:        192
  Avg number of models for allsat:        3.72

Time for post operator:                  2.766s
  Time for path formula creation:        2.482s
Time for strengthen operator:            0.549s
Time for prec operator:                  8.434s
  Time for abstraction:                  7.814s (Max:     0.036s, Count: 16136)
    Boolean abstraction:                 1.976s
    Solving time:                        1.282s (Max:     0.013s)
    Model enumeration time:              0.361s
    Time for BDD construction:           0.213s (Max:     0.014s)
Time for merge operator:                 0.476s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):     1.643s

Number of path formula cache hits:   330166 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.958s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3711
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2970 (count: 18561, min: 0, max: 273, avg: 0.16)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.687s
  Time for transition matches:                         0.308s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       285218 (count: 285218, min: 1, max: 1, avg: 1.00) [1 x 285218]

CPA algorithm statistics
------------------------
Number of iterations:            211478
Max size of waitlist:            29
Average size of waitlist:        17
Number of computed successors:   272427
Max successors for one state:    2
Number of times merged:          55592
Number of times stopped:         58614
Number of times breaked:         35

Total time for CPA algorithm:        22.623s (Max:     4.119s)
  Time for choose from waitlist:      0.259s
  Time for precision adjustment:     10.626s
  Time for transfer relation:         7.483s
  Time for merge operator:            1.593s
  Time for stop operator:             0.640s
  Time for adding to reached set:     0.574s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                3019 (count: 35, min: 71, max: 93, avg: 86.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.830s
  Counterexample analysis:                             1.768s (Max:     0.078s, Calls: 35)
    Refinement sat check:                              1.080s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.188s
  Precision update:                                    0.054s
  ARG update:                                          0.687s

Length of refined path (in blocks):                    2735 (count: 35, min: 54, max: 88, avg: 78.14)
Number of affected states:                             2136 (count: 35, min: 1, max: 87, avg: 61.03)
Length (states) of path with itp 'true':                564 (count: 35, min: 0, max: 78, avg: 16.11)
Length (states) of path with itp non-trivial itp:      2136 (count: 35, min: 1, max: 87, avg: 61.03)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          33 (count: 35, min: 0, max: 3, avg: 0.94)
Equal non-trivial interpolants along paths:            2068 (count: 35, min: 0, max: 85, avg: 59.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 10785
Max. size of reached set after ref.:  10656
Avg. size of reached set before ref.: 7723.20
Avg. size of reached set after ref.:  1881.63

Total time for CEGAR algorithm:      25.980s
Time for refinements:                 3.270s
Average time for refinement:          0.093s
Max time for refinement:              0.196s

Code Coverage
-----------------------------
  Function coverage:      0.547
  Visited lines:          947
  Total lines:            1702
  Line coverage:          0.556
  Visited conditions:     540
  Total conditions:       728
  Condition coverage:     0.742

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             7402
  Number of reached locations:   1041 (47%)
    Avg states per location:     7
    Max states per location:     62 (at node N2119)
  Number of reached functions:   41 (55%)
  Number of partitions:          7380
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N840 (before line 1102), Function stopRequestedInDirection called from node N1107, stack depth 6 [75f3dde0], stack [main, runTest, test, threeTS, timeShift, stopRequestedInDirection]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          3.778s
  Time for loading CPAs:          0.703s
  Time for loading parser:        0.646s
  Time for CFA construction:      2.266s
    Time for parsing file(s):     0.668s
    Time for AST to CFA:          0.648s
    Time for CFA sanity check:    0.239s
    Time for post-processing:     0.549s
      Time for var class.:        0.316s
Time for Analysis:               25.980s
CPU time for analysis:           25.980s
Total time for CPAchecker:       29.765s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.201s

Time for Garbage Collector:       0.974s (in 86 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    86 MiB) max;     56MB (    53 MiB) avg;     98MB (    93 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
