scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product23_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g9dm7eu1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1104: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1978: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2649: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2730: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5290 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4881 (92%)
  Because of loop head:            383 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       2482 (47%)
  Times precision was {false}:     189 (4%)
  Times result was cached:         2314 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      305 (6%)
  Times result was 'false':        286 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         82105
  BDD entailment checks:           695
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          18
Number of abstraction locations:          72
Max number of predicates per location:    13
Avg number of predicates per location:    7
Total predicates per abstraction:         9622
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 19.48
Number of irrelevant predicates:          4237 (44%)
Number of preds handled by boolean abs:   1599 (17%)
  Total number of models for allsat:      669
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.19

Time for post operator:                  7.269s
  Time for path formula creation:        7.010s
Time for strengthen operator:            0.414s
Time for prec operator:                  3.584s
  Time for abstraction:                  2.998s (Max:     0.028s, Count: 5290)
    Boolean abstraction:                 0.633s
    Solving time:                        0.478s (Max:     0.012s)
    Model enumeration time:              0.080s
    Time for BDD construction:           0.108s (Max:     0.011s)
Time for merge operator:                 1.860s
Time for coverage check:                 0.064s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     0.558s

Number of path formula cache hits:   161332 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.966s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               865
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         966 (count: 6220, min: 0, max: 193, avg: 0.16)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.820s
  Time for transition matches:                         0.347s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       184798 (count: 184798, min: 1, max: 1, avg: 1.00) [1 x 184798]

CPA algorithm statistics
------------------------
Number of iterations:            138480
Max size of waitlist:            109
Average size of waitlist:        54
Number of computed successors:   180701
Max successors for one state:    2
Number of times merged:          40705
Number of times stopped:         41322
Number of times breaked:         26

Total time for CPA algorithm:        23.638s (Max:     8.204s)
  Time for choose from waitlist:      0.300s
  Time for precision adjustment:      5.476s
  Time for transfer relation:        11.761s
  Time for merge operator:            3.169s
  Time for stop operator:             0.721s
  Time for adding to reached set:     0.582s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                1742 (count: 26, min: 59, max: 75, avg: 67.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.906s
  Counterexample analysis:                             1.244s (Max:     0.068s, Calls: 26)
    Refinement sat check:                              0.823s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.035s
  ARG update:                                          0.462s

Length of refined path (in blocks):                    1395 (count: 26, min: 41, max: 64, avg: 53.65)
Number of affected states:                              601 (count: 26, min: 1, max: 63, avg: 23.12)
Length (states) of path with itp 'true':                768 (count: 26, min: 0, max: 62, avg: 29.54)
Length (states) of path with itp non-trivial itp:       601 (count: 26, min: 1, max: 63, avg: 23.12)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 26, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:             570 (count: 26, min: 0, max: 61, avg: 21.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 20104
Max. size of reached set after ref.:  19667
Avg. size of reached set before ref.: 10068.92
Avg. size of reached set after ref.:  4727.27

Total time for CEGAR algorithm:      26.218s
Time for refinements:                 2.419s
Average time for refinement:          0.093s
Max time for refinement:              0.248s

Code Coverage
-----------------------------
  Function coverage:      0.160
  Visited lines:          185
  Total lines:            1702
  Line coverage:          0.109
  Visited conditions:     94
  Total conditions:       728
  Condition coverage:     0.129

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2711
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             211
  Number of reached locations:   188 (8%)
    Avg states per location:     1
    Max states per location:     2 (at node N1439)
  Number of reached functions:   12 (16%)
  Number of partitions:          211
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.025s
  Time for loading CPAs:          0.776s
  Time for loading parser:        0.710s
  Time for CFA construction:      2.354s
    Time for parsing file(s):     0.669s
    Time for AST to CFA:          0.715s
    Time for CFA sanity check:    0.242s
    Time for post-processing:     0.543s
      Time for var class.:        0.302s
Time for Analysis:               26.218s
CPU time for analysis:           26.220s
Total time for CPAchecker:       30.247s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.097s

Time for Garbage Collector:       1.314s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                126MB (   120 MiB) max;     64MB (    61 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
