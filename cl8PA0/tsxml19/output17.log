scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1oohthjg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 928: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2759: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1085: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6089 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6063 (100%)
  Because of loop head:            14 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       2651 (44%)
  Times precision was {false}:     100 (2%)
  Times result was cached:         3116 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      222 (4%)
  Times result was 'false':        58 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         126897
  BDD entailment checks:           527
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          8
Number of abstraction locations:          55
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         13749
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 42.70
Number of irrelevant predicates:          11314 (82%)
Number of preds handled by boolean abs:   751 (5%)
  Total number of models for allsat:      253
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.14

Time for post operator:                  6.053s
  Time for path formula creation:        5.779s
Time for strengthen operator:            0.531s
Time for prec operator:                  4.338s
  Time for abstraction:                  3.663s (Max:     0.155s, Count: 6089)
    Boolean abstraction:                 0.501s
    Solving time:                        0.448s (Max:     0.018s)
    Model enumeration time:              0.058s
    Time for BDD construction:           0.053s (Max:     0.010s)
Time for merge operator:                 1.284s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.506s

Number of path formula cache hits:   316975 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.139s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               371
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         566 (count: 5084, min: 0, max: 70, avg: 0.11)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.791s
  Time for transition matches:                         0.301s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       276640 (count: 276640, min: 1, max: 1, avg: 1.00) [1 x 276640]

CPA algorithm statistics
------------------------
Number of iterations:            207418
Max size of waitlist:            102
Average size of waitlist:        59
Number of computed successors:   272241
Max successors for one state:    2
Number of times merged:          63185
Number of times stopped:         63616
Number of times breaked:         12

Total time for CPA algorithm:        24.413s (Max:     7.797s)
  Time for choose from waitlist:      0.296s
  Time for precision adjustment:      7.159s
  Time for transfer relation:        11.025s
  Time for merge operator:            2.909s
  Time for stop operator:             0.686s
  Time for adding to reached set:     0.732s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 722 (count: 12, min: 59, max: 61, avg: 60.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.439s
  Counterexample analysis:                             0.543s (Max:     0.084s, Calls: 12)
    Refinement sat check:                              0.380s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.025s
  ARG update:                                          0.754s

Length of refined path (in blocks):                     652 (count: 12, min: 31, max: 60, avg: 54.33)
Number of affected states:                              540 (count: 12, min: 30, max: 49, avg: 45.00)
Length (states) of path with itp 'true':                100 (count: 12, min: 0, max: 10, avg: 8.33)
Length (states) of path with itp non-trivial itp:       540 (count: 12, min: 30, max: 49, avg: 45.00)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             528 (count: 12, min: 29, max: 48, avg: 44.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 17524
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 17053.08
Avg. size of reached set after ref.:  24.67

Total time for CEGAR algorithm:      26.188s
Time for refinements:                 1.772s
Average time for refinement:          0.147s
Max time for refinement:              0.363s

Code Coverage
-----------------------------
  Function coverage:      0.377
  Visited lines:          531
  Total lines:            1752
  Line coverage:          0.303
  Visited conditions:     316
  Total conditions:       760
  Condition coverage:     0.416

CPAchecker general statistics
-----------------------------
Number of program locations:     2297
Number of CFA edges:             2797
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             4225
  Number of reached locations:   587 (26%)
    Avg states per location:     7
    Max states per location:     28 (at node N281)
  Number of reached functions:   29 (38%)
  Number of partitions:          4225
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        42

Time for analysis setup:          4.020s
  Time for loading CPAs:          0.781s
  Time for loading parser:        0.729s
  Time for CFA construction:      2.335s
    Time for parsing file(s):     0.665s
    Time for AST to CFA:          0.673s
    Time for CFA sanity check:    0.239s
    Time for post-processing:     0.562s
      Time for var class.:        0.329s
Time for Analysis:               26.188s
CPU time for analysis:           26.190s
Total time for CPAchecker:       30.214s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.168s

Time for Garbage Collector:       1.658s (in 83 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   115 MiB) max;     62MB (    59 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
