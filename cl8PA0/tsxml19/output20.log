scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__x6cvd2u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 928: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2759: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1085: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5347 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5327 (100%)
  Because of loop head:            10 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       2424 (45%)
  Times precision was {false}:     63 (1%)
  Times result was cached:         2678 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      182 (3%)
  Times result was 'false':        45 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         113621
  BDD entailment checks:           459
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          6
Number of abstraction locations:          44
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         11425
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 46.63
Number of irrelevant predicates:          9560 (84%)
Number of preds handled by boolean abs:   540 (5%)
  Total number of models for allsat:      182
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.801s
  Time for path formula creation:        5.495s
Time for strengthen operator:            0.514s
Time for prec operator:                  3.971s
  Time for abstraction:                  3.303s (Max:     0.045s, Count: 5347)
    Boolean abstraction:                 0.414s
    Solving time:                        0.362s (Max:     0.016s)
    Model enumeration time:              0.053s
    Time for BDD construction:           0.040s (Max:     0.012s)
Time for merge operator:                 1.324s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.415s

Number of path formula cache hits:   281348 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.901s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               222
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         429 (count: 4337, min: 0, max: 65, avg: 0.10)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.988s
  Time for transition matches:                         0.407s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       247339 (count: 247339, min: 1, max: 1, avg: 1.00) [1 x 247339]

CPA algorithm statistics
------------------------
Number of iterations:            185476
Max size of waitlist:            97
Average size of waitlist:        59
Number of computed successors:   243491
Max successors for one state:    2
Number of times merged:          56581
Number of times stopped:         56967
Number of times breaked:         10

Total time for CPA algorithm:        24.288s (Max:     7.611s)
  Time for choose from waitlist:      0.324s
  Time for precision adjustment:      6.718s
  Time for transfer relation:        10.899s
  Time for merge operator:            3.173s
  Time for stop operator:             0.823s
  Time for adding to reached set:     0.695s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 600 (count: 10, min: 59, max: 61, avg: 60.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.373s
  Counterexample analysis:                             0.525s (Max:     0.084s, Calls: 10)
    Refinement sat check:                              0.361s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.059s
  Precision update:                                    0.032s
  ARG update:                                          0.696s

Length of refined path (in blocks):                     590 (count: 10, min: 58, max: 60, avg: 59.00)
Number of affected states:                              480 (count: 10, min: 47, max: 49, avg: 48.00)
Length (states) of path with itp 'true':                100 (count: 10, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:       480 (count: 10, min: 47, max: 49, avg: 48.00)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             470 (count: 10, min: 46, max: 48, avg: 47.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 17247
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 17229.00
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      25.977s
Time for refinements:                 1.681s
Average time for refinement:          0.168s
Max time for refinement:              0.365s

Code Coverage
-----------------------------
  Function coverage:      0.377
  Visited lines:          546
  Total lines:            1752
  Line coverage:          0.312
  Visited conditions:     326
  Total conditions:       760
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     2297
Number of CFA edges:             2797
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             14479
  Number of reached locations:   609 (27%)
    Avg states per location:     23
    Max states per location:     71 (at node N281)
  Number of reached functions:   29 (38%)
  Number of partitions:          14479
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        85

Time for analysis setup:          4.257s
  Time for loading CPAs:          0.833s
  Time for loading parser:        0.741s
  Time for CFA construction:      2.449s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          0.684s
    Time for CFA sanity check:    0.250s
    Time for post-processing:     0.612s
      Time for var class.:        0.330s
Time for Analysis:               25.977s
CPU time for analysis:           25.970s
Total time for CPAchecker:       30.242s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.395s

Time for Garbage Collector:       1.538s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   118 MiB) max;     62MB (    59 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
