scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m9qyh1pz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 928: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2759: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1085: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14940 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14704 (98%)
  Because of loop head:            144 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         92 (1%)
  Times precision was empty:       2353 (16%)
  Times precision was {false}:     322 (2%)
  Times result was cached:         11472 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      793 (5%)
  Times result was 'false':        2070 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         90694
  BDD entailment checks:           1320
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          15
Number of abstraction locations:          92
Max number of predicates per location:    12
Avg number of predicates per location:    7
Total predicates per abstraction:         74176
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 66.53
Number of irrelevant predicates:          19262 (26%)
Number of preds handled by boolean abs:   3444 (5%)
  Total number of models for allsat:      917
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.16

Time for post operator:                  3.193s
  Time for path formula creation:        2.980s
Time for strengthen operator:            0.278s
Time for prec operator:                  8.363s
  Time for abstraction:                  7.740s (Max:     0.021s, Count: 14940)
    Boolean abstraction:                 1.281s
    Solving time:                        1.054s (Max:     0.017s)
    Model enumeration time:              0.088s
    Time for BDD construction:           0.109s (Max:     0.012s)
Time for merge operator:                 0.535s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     1.142s

Number of path formula cache hits:   260424 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.498s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               520
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2092 (count: 10525, min: 0, max: 299, avg: 0.20)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.680s
  Time for transition matches:                         0.311s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                       237171 (count: 237171, min: 1, max: 1, avg: 1.00) [1 x 237171]

CPA algorithm statistics
------------------------
Number of iterations:            172994
Max size of waitlist:            45
Average size of waitlist:        14
Number of computed successors:   222680
Max successors for one state:    2
Number of times merged:          44687
Number of times stopped:         45515
Number of times breaked:         92

Total time for CPA algorithm:        21.355s (Max:     1.661s)
  Time for choose from waitlist:      0.228s
  Time for precision adjustment:     10.422s
  Time for transfer relation:         7.052s
  Time for merge operator:            1.468s
  Time for stop operator:             0.445s
  Time for adding to reached set:     0.540s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   92
Avg. length of target path (in blocks):                6116 (count: 92, min: 51, max: 108, avg: 66.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.327s
  Counterexample analysis:                             3.369s (Max:     0.070s, Calls: 92)
    Refinement sat check:                              2.390s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.128s
  Precision update:                                    0.122s
  ARG update:                                          0.531s

Length of refined path (in blocks):                    5361 (count: 91, min: 30, max: 74, avg: 58.91)
Number of affected states:                             4481 (count: 91, min: 1, max: 69, avg: 49.24)
Length (states) of path with itp 'true':                789 (count: 91, min: 0, max: 29, avg: 8.67)
Length (states) of path with itp non-trivial itp:      4481 (count: 91, min: 1, max: 69, avg: 49.24)
Length (states) of path with itp 'false':                91 (count: 91, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 91, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:            4389 (count: 91, min: 0, max: 68, avg: 48.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                92
Number of successful refinements:     91
Number of failed refinements:         0
Max. size of reached set before ref.: 3897
Max. size of reached set after ref.:  270
Avg. size of reached set before ref.: 1930.57
Avg. size of reached set after ref.:  27.65

Total time for CEGAR algorithm:      26.119s
Time for refinements:                 4.740s
Average time for refinement:          0.051s
Max time for refinement:              0.169s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          798
  Total lines:            1752
  Line coverage:          0.455
  Visited conditions:     426
  Total conditions:       760
  Condition coverage:     0.561

CPAchecker general statistics
-----------------------------
Number of program locations:     2297
Number of CFA edges:             2797
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             2928
  Number of reached locations:   842 (37%)
    Avg states per location:     3
    Max states per location:     26 (at node N1441)
  Number of reached functions:   44 (57%)
  Number of partitions:          2917
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1145 (before lines 1446-1474), Function cleanup called from node N1364, stack depth 4 [6a7ba182], stack [main, runTest, test, cleanup]])
  Number of target states:       1
  Size of final wait list        44

Time for analysis setup:          4.153s
  Time for loading CPAs:          0.897s
  Time for loading parser:        0.628s
  Time for CFA construction:      2.460s
    Time for parsing file(s):     0.684s
    Time for AST to CFA:          0.742s
    Time for CFA sanity check:    0.236s
    Time for post-processing:     0.593s
      Time for var class.:        0.333s
Time for Analysis:               26.119s
CPU time for analysis:           26.120s
Total time for CPAchecker:       30.277s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.187s

Time for Garbage Collector:       0.646s (in 82 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     45MB (    43 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
