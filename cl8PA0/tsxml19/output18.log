scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pta3vlgj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 928: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2759: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1085: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6453 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6450 (100%)
  Because of loop head:            2 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (0%)
  Times precision was empty:       6301 (98%)
  Times precision was {false}:     45 (1%)
  Times result was cached:         81 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26 (0%)
  Times result was 'false':        30 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         72274
  BDD entailment checks:           964
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          2
Number of abstraction locations:          35
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         152
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.14
Number of irrelevant predicates:          115 (76%)
Number of preds handled by boolean abs:   26 (17%)
  Total number of models for allsat:      28
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  9.165s
  Time for path formula creation:        8.955s
Time for strengthen operator:            0.379s
Time for prec operator:                  1.382s
  Time for abstraction:                  0.566s (Max:     0.024s, Count: 6453)
    Boolean abstraction:                 0.060s
    Solving time:                        0.081s (Max:     0.013s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.028s (Max:     0.016s)
Time for merge operator:                 2.085s
Time for coverage check:                 0.102s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     0.084s

Number of path formula cache hits:   74177 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.416s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          35 (count: 7660, min: 0, max: 31, avg: 0.00)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.685s
  Time for transition matches:                         0.273s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       165649 (count: 165649, min: 1, max: 1, avg: 1.00) [1 x 165649]

CPA algorithm statistics
------------------------
Number of iterations:            124892
Max size of waitlist:            112
Average size of waitlist:        63
Number of computed successors:   161599
Max successors for one state:    2
Number of times merged:          35655
Number of times stopped:         36606
Number of times breaked:         1

Total time for CPA algorithm:        24.381s (Max:    20.394s)
  Time for choose from waitlist:      0.329s
  Time for precision adjustment:      3.643s
  Time for transfer relation:        13.919s
  Time for merge operator:            3.411s
  Time for stop operator:             0.660s
  Time for adding to reached set:     0.837s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                  51 (count: 1, min: 51, max: 51, avg: 51.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.790s
  Counterexample analysis:                             0.059s (Max:     0.059s, Calls: 1)
    Refinement sat check:                              0.027s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.010s
  ARG update:                                          0.704s

Length of refined path (in blocks):                      50 (count: 1, min: 50, max: 50, avg: 50.00)
Number of affected states:                               39 (count: 1, min: 39, max: 39, avg: 39.00)
Length (states) of path with itp 'true':                 10 (count: 1, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:        39 (count: 1, min: 39, max: 39, avg: 39.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              38 (count: 1, min: 38, max: 38, avg: 38.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 90289
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 90289.00
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      25.369s
Time for refinements:                 0.988s
Average time for refinement:          0.988s
Max time for refinement:              0.988s

Code Coverage
-----------------------------
  Function coverage:      0.545
  Visited lines:          970
  Total lines:            1752
  Line coverage:          0.554
  Visited conditions:     566
  Total conditions:       760
  Condition coverage:     0.745

CPAchecker general statistics
-----------------------------
Number of program locations:     2297
Number of CFA edges:             2797
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             34702
  Number of reached locations:   1075 (47%)
    Avg states per location:     32
    Max states per location:     119 (at node N280)
  Number of reached functions:   42 (55%)
  Number of partitions:          34699
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2391 (before line 3007), Function timeShift called from node N1142, stack depth 5 [39cca678], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:          4.420s
  Time for loading CPAs:          0.915s
  Time for loading parser:        0.761s
  Time for CFA construction:      2.522s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          0.779s
    Time for CFA sanity check:    0.273s
    Time for post-processing:     0.603s
      Time for var class.:        0.339s
Time for Analysis:               25.369s
CPU time for analysis:           25.370s
Total time for CPAchecker:       29.794s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.663s

Time for Garbage Collector:       1.866s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                186MB (   178 MiB) max;     78MB (    75 MiB) avg;    194MB (   185 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           210MB (   200 MiB) max;    147MB (   140 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
