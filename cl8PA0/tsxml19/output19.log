scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__u8g5aeq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 928: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2759: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1085: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5966 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5961 (100%)
  Because of loop head:            3 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       4757 (80%)
  Times precision was {false}:     138 (2%)
  Times result was cached:         1007 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      64 (1%)
  Times result was 'false':        91 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         69671
  BDD entailment checks:           923
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          3
Number of abstraction locations:          42
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1544
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 7.64
Number of irrelevant predicates:          1418 (92%)
Number of preds handled by boolean abs:   92 (6%)
  Total number of models for allsat:      66
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  7.964s
  Time for path formula creation:        7.810s
Time for strengthen operator:            0.424s
Time for prec operator:                  2.862s
  Time for abstraction:                  2.092s (Max:     0.040s, Count: 5966)
    Boolean abstraction:                 0.173s
    Solving time:                        0.347s (Max:     0.015s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.015s (Max:     0.009s)
Time for merge operator:                 1.771s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     0.356s

Number of path formula cache hits:   124627 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.945s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         139 (count: 6783, min: 0, max: 56, avg: 0.02)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.766s
  Time for transition matches:                         0.276s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       158944 (count: 158944, min: 1, max: 1, avg: 1.00) [1 x 158944]

CPA algorithm statistics
------------------------
Number of iterations:            119738
Max size of waitlist:            116
Average size of waitlist:        62
Number of computed successors:   155177
Max successors for one state:    2
Number of times merged:          34374
Number of times stopped:         35230
Number of times breaked:         2

Total time for CPA algorithm:        24.698s (Max:    14.390s)
  Time for choose from waitlist:      0.241s
  Time for precision adjustment:      5.779s
  Time for transfer relation:        12.494s
  Time for merge operator:            3.227s
  Time for stop operator:             0.602s
  Time for adding to reached set:     0.656s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                 118 (count: 2, min: 59, max: 59, avg: 59.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.930s
  Counterexample analysis:                             0.154s (Max:     0.081s, Calls: 2)
    Refinement sat check:                              0.107s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.008s
  ARG update:                                          0.711s

Length of refined path (in blocks):                     116 (count: 2, min: 58, max: 58, avg: 58.00)
Number of affected states:                               94 (count: 2, min: 47, max: 47, avg: 47.00)
Length (states) of path with itp 'true':                 20 (count: 2, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:        94 (count: 2, min: 47, max: 47, avg: 47.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              92 (count: 2, min: 46, max: 46, avg: 46.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 51378
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 48369.00
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      25.950s
Time for refinements:                 1.252s
Average time for refinement:          0.626s
Max time for refinement:              0.694s

Code Coverage
-----------------------------
  Function coverage:      0.442
  Visited lines:          641
  Total lines:            1752
  Line coverage:          0.366
  Visited conditions:     382
  Total conditions:       760
  Condition coverage:     0.503

CPAchecker general statistics
-----------------------------
Number of program locations:     2297
Number of CFA edges:             2797
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             23176
  Number of reached locations:   738 (32%)
    Avg states per location:     31
    Max states per location:     100 (at node N233)
  Number of reached functions:   34 (44%)
  Number of partitions:          23172
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2391 (before line 3007), Function timeShift called from node N1142, stack depth 5 [5a286a98], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        103

Time for analysis setup:          4.315s
  Time for loading CPAs:          0.823s
  Time for loading parser:        0.667s
  Time for CFA construction:      2.611s
    Time for parsing file(s):     0.739s
    Time for AST to CFA:          0.804s
    Time for CFA sanity check:    0.269s
    Time for post-processing:     0.596s
      Time for var class.:        0.327s
Time for Analysis:               25.950s
CPU time for analysis:           25.940s
Total time for CPAchecker:       30.269s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.546s

Time for Garbage Collector:       1.777s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                127MB (   121 MiB) max;     68MB (    65 MiB) avg;    137MB (   131 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           154MB (   147 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
