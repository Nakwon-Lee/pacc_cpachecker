scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product26_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bekzugkx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 592: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 765: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 774: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 808: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 857: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3055: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3134: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2185: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17376 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17080 (98%)
  Because of loop head:            217 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         79 (0%)
  Times precision was empty:       3542 (20%)
  Times precision was {false}:     247 (1%)
  Times result was cached:         11591 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1996 (11%)
  Times result was 'false':        2865 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         22190
  BDD entailment checks:           2832
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          13
Number of abstraction locations:          73
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         47778
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 21.30
Number of irrelevant predicates:          21034 (44%)
Number of preds handled by boolean abs:   5032 (11%)
  Total number of models for allsat:      1828
  Max number of models for allsat:        6
  Avg number of models for allsat:        0.92

Time for post operator:                  3.157s
  Time for path formula creation:        3.037s
Time for strengthen operator:            0.244s
Time for prec operator:                  9.710s
  Time for abstraction:                  9.175s (Max:     0.031s, Count: 17376)
    Boolean abstraction:                 2.513s
    Solving time:                        2.017s (Max:     0.013s)
    Model enumeration time:              0.163s
    Time for BDD construction:           0.193s (Max:     0.016s)
Time for merge operator:                 0.405s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     2.180s

Number of path formula cache hits:   93316 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.766s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               595
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4086 (count: 20772, min: 0, max: 351, avg: 0.20)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.494s
Automaton transfers with branching:                0
Automaton transfer successors:                       118118 (count: 118118, min: 1, max: 1, avg: 1.00) [1 x 118118]

CPA algorithm statistics
------------------------
Number of iterations:            76174
Max size of waitlist:            81
Average size of waitlist:        31
Number of computed successors:   92678
Max successors for one state:    2
Number of times merged:          9679
Number of times stopped:         10872
Number of times breaked:         79

Total time for CPA algorithm:        19.421s (Max:     1.328s)
  Time for choose from waitlist:      0.182s
  Time for precision adjustment:     10.983s
  Time for transfer relation:         5.850s
  Time for merge operator:            0.781s
  Time for stop operator:             0.303s
  Time for adding to reached set:     0.418s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   79
Avg. length of target path (in blocks):                9206 (count: 79, min: 53, max: 146, avg: 116.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.397s
  Counterexample analysis:                             4.640s (Max:     0.101s, Calls: 79)
    Refinement sat check:                              2.542s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.077s
  ARG update:                                          0.374s

Length of refined path (in blocks):                    5163 (count: 79, min: 35, max: 92, avg: 65.35)
Number of affected states:                             1417 (count: 79, min: 2, max: 80, avg: 17.94)
Length (states) of path with itp 'true':               3667 (count: 79, min: 0, max: 81, avg: 46.42)
Length (states) of path with itp non-trivial itp:      1417 (count: 79, min: 2, max: 80, avg: 17.94)
Length (states) of path with itp 'false':                79 (count: 79, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          20 (count: 79, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:            1318 (count: 79, min: 1, max: 78, avg: 16.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                79
Number of successful refinements:     79
Number of failed refinements:         0
Max. size of reached set before ref.: 4506
Max. size of reached set after ref.:  1536
Avg. size of reached set before ref.: 1844.11
Avg. size of reached set after ref.:  872.05

Total time for CEGAR algorithm:      25.341s
Time for refinements:                 5.830s
Average time for refinement:          0.073s
Max time for refinement:              0.168s

Code Coverage
-----------------------------
  Function coverage:      0.361
  Visited lines:          381
  Total lines:            1722
  Line coverage:          0.221
  Visited conditions:     150
  Total conditions:       756
  Condition coverage:     0.198

CPAchecker general statistics
-----------------------------
Number of program locations:     2261
Number of CFA edges:             2762
Number of relevant variables:    299
Number of functions:             72
Number of loops:                 9
Size of reached set:             2149
  Number of reached locations:   345 (15%)
    Avg states per location:     6
    Max states per location:     34 (at node N2546)
  Number of reached functions:   26 (36%)
  Number of partitions:          2118
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1250 (before line 1676), Function timeShift called from node N174, stack depth 5 [3327215f], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          4.431s
  Time for loading CPAs:          0.921s
  Time for loading parser:        0.737s
  Time for CFA construction:      2.587s
    Time for parsing file(s):     0.757s
    Time for AST to CFA:          0.794s
    Time for CFA sanity check:    0.273s
    Time for post-processing:     0.598s
      Time for var class.:        0.359s
Time for Analysis:               25.341s
CPU time for analysis:           25.340s
Total time for CPAchecker:       29.776s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.157s

Time for Garbage Collector:       0.547s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     45MB (    43 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
