scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product21_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ddzlkwpl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 281: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 453: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 857: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 989: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1562: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3092: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3141: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3219: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2078: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5815 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5760 (99%)
  Because of loop head:            44 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (0%)
  Times precision was empty:       2922 (50%)
  Times precision was {false}:     196 (3%)
  Times result was cached:         584 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2113 (36%)
  Times result was 'false':        438 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         34083
  BDD entailment checks:           665
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       59
Number of predicates discovered:          18
Number of abstraction locations:          62
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         16145
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 6.99
Number of irrelevant predicates:          2839 (18%)
Number of preds handled by boolean abs:   11138 (69%)
  Total number of models for allsat:      11294
  Max number of models for allsat:        28
  Avg number of models for allsat:        5.35

Time for post operator:                  5.730s
  Time for path formula creation:        5.522s
Time for strengthen operator:            0.192s
Time for prec operator:                  8.924s
  Time for abstraction:                  8.561s (Max:     0.033s, Count: 5815)
    Boolean abstraction:                 4.040s
    Solving time:                        2.515s (Max:     0.019s)
    Model enumeration time:              0.861s
    Time for BDD construction:           0.379s (Max:     0.013s)
Time for merge operator:                 1.262s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     3.377s

Number of path formula cache hits:   42639 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.954s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3489
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5376 (count: 18031, min: 0, max: 458, avg: 0.30)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.465s
Automaton transfers with branching:                0
Automaton transfer successors:                        89111 (count: 89111, min: 1, max: 1, avg: 1.00) [1 x 89111]

CPA algorithm statistics
------------------------
Number of iterations:            64971
Max size of waitlist:            209
Average size of waitlist:        55
Number of computed successors:   83674
Max successors for one state:    2
Number of times merged:          16709
Number of times stopped:         17089
Number of times breaked:         11

Total time for CPA algorithm:        22.928s (Max:    11.722s)
  Time for choose from waitlist:      0.175s
  Time for precision adjustment:     10.163s
  Time for transfer relation:         8.529s
  Time for merge operator:            2.087s
  Time for stop operator:             0.354s
  Time for adding to reached set:     0.423s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                1803 (count: 11, min: 67, max: 328, avg: 163.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.361s
  Counterexample analysis:                             1.665s (Max:     0.299s, Calls: 11)
    Refinement sat check:                              0.739s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.025s
  ARG update:                                          0.540s

Length of refined path (in blocks):                    1741 (count: 11, min: 45, max: 324, avg: 158.27)
Number of affected states:                             1665 (count: 11, min: 1, max: 323, avg: 151.36)
Length (states) of path with itp 'true':                 65 (count: 11, min: 0, max: 65, avg: 5.91)
Length (states) of path with itp non-trivial itp:      1665 (count: 11, min: 1, max: 323, avg: 151.36)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          40 (count: 11, min: 0, max: 8, avg: 3.64)
Equal non-trivial interpolants along paths:            1614 (count: 11, min: 0, max: 314, avg: 146.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 44135
Max. size of reached set after ref.:  848
Avg. size of reached set before ref.: 5861.45
Avg. size of reached set after ref.:  79.82

Total time for CEGAR algorithm:      25.556s
Time for refinements:                 2.627s
Average time for refinement:          0.238s
Max time for refinement:              0.629s

Code Coverage
-----------------------------
  Function coverage:      0.466
  Visited lines:          584
  Total lines:            1719
  Line coverage:          0.340
  Visited conditions:     304
  Total conditions:       754
  Condition coverage:     0.403

CPAchecker general statistics
-----------------------------
Number of program locations:     2252
Number of CFA edges:             2746
Number of relevant variables:    306
Number of functions:             73
Number of loops:                 9
Size of reached set:             2549
  Number of reached locations:   579 (26%)
    Avg states per location:     4
    Max states per location:     30 (at node N330)
  Number of reached functions:   34 (47%)
  Number of partitions:          2535
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1311 (before lines 1712-1740), Function cleanup called from node N1825, stack depth 4 [36c04066], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        129

Time for analysis setup:          4.223s
  Time for loading CPAs:          0.797s
  Time for loading parser:        0.727s
  Time for CFA construction:      2.510s
    Time for parsing file(s):     0.657s
    Time for AST to CFA:          0.773s
    Time for CFA sanity check:    0.264s
    Time for post-processing:     0.641s
      Time for var class.:        0.374s
Time for Analysis:               25.556s
CPU time for analysis:           25.550s
Total time for CPAchecker:       29.784s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.143s

Time for Garbage Collector:       0.837s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                108MB (   103 MiB) max;     65MB (    62 MiB) avg;    112MB (   106 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
