scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product21_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j2hfdapg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1030: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1382: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1421: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1511: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1553: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2242: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3366: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            356652 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  356318 (100%)
  Because of loop head:            46 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         288 (0%)
  Times precision was empty:       217600 (61%)
  Times precision was {false}:     219 (0%)
  Times result was cached:         101332 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      37501 (11%)
  Times result was 'false':        51311 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         5500548
  BDD entailment checks:           73128
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          110
Number of abstraction locations:          103
Max number of predicates per location:    39
Avg number of predicates per location:    17
Total predicates per abstraction:         3211539
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 85.14
Number of irrelevant predicates:          379258 (12%)
Number of preds handled by boolean abs:   812604 (25%)
  Total number of models for allsat:      395432
  Max number of models for allsat:        6912
  Avg number of models for allsat:        10.54

Time for post operator:                190.163s
  Time for path formula creation:      184.611s
Time for strengthen operator:           13.846s
Time for prec operator:                312.520s
  Time for abstraction:                299.508s (Max:     2.304s, Count: 356652)
    Boolean abstraction:               144.837s
    Solving time:                       76.672s (Max:     0.429s)
    Model enumeration time:             33.298s
    Time for BDD construction:          21.136s (Max:     0.461s)
Time for merge operator:                52.842s
Time for coverage check:                 0.812s
  Time for BDD entailment checks:        0.299s
Total time for SMT solver (w/o itp):   109.970s

Number of path formula cache hits:   10277104 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   107.155s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               252676
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      561013 (count: 725007, min: 0, max: 19355, avg: 0.77)
Time for BDD node cleanup:                             0.263s
Time for BDD garbage collection:                       0.196s (in 32 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.013s
  Time for transition matches:                         7.602s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     12253374 (count: 12253374, min: 1, max: 1, avg: 1.00) [1 x 12253374]

CPA algorithm statistics
------------------------
Number of iterations:            9173660
Max size of waitlist:            903
Average size of waitlist:        262
Number of computed successors:   12012698
Max successors for one state:    2
Number of times merged:          2713710
Number of times stopped:         2745583
Number of times breaked:         288

Total time for CPA algorithm:       830.022s (Max:    23.573s)
  Time for choose from waitlist:      4.031s
  Time for precision adjustment:    383.232s
  Time for transfer relation:       303.110s
  Time for merge operator:           79.560s
  Time for stop operator:            11.774s
  Time for adding to reached set:    18.862s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   288
Avg. length of target path (in blocks):               35601 (count: 288, min: 51, max: 455, avg: 123.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  47.785s
  Counterexample analysis:                            26.943s (Max:     1.033s, Calls: 288)
    Refinement sat check:                             10.850s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.330s
  Precision update:                                    0.262s
  ARG update:                                         19.874s

Length of refined path (in blocks):                   31797 (count: 288, min: 30, max: 445, avg: 110.41)
Number of affected states:                            15200 (count: 288, min: 1, max: 433, avg: 52.78)
Length (states) of path with itp 'true':              16309 (count: 288, min: 0, max: 326, avg: 56.63)
Length (states) of path with itp non-trivial itp:     15200 (count: 288, min: 1, max: 433, avg: 52.78)
Length (states) of path with itp 'false':               288 (count: 288, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         809 (count: 288, min: 0, max: 19, avg: 2.81)
Equal non-trivial interpolants along paths:           14103 (count: 288, min: 0, max: 420, avg: 48.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                288
Number of successful refinements:     288
Number of failed refinements:         0
Max. size of reached set before ref.: 206377
Max. size of reached set after ref.:  158428
Avg. size of reached set before ref.: 53033.51
Avg. size of reached set after ref.:  21490.19

Total time for CEGAR algorithm:     896.215s
Time for refinements:                60.540s
Average time for refinement:          0.210s
Max time for refinement:              1.716s

Code Coverage
-----------------------------
  Function coverage:      0.577
  Visited lines:          989
  Total lines:            1726
  Line coverage:          0.573
  Visited conditions:     552
  Total conditions:       754
  Condition coverage:     0.732

CPAchecker general statistics
-----------------------------
Number of program locations:     2254
Number of CFA edges:             2755
Number of relevant variables:    308
Number of functions:             71
Number of loops:                 9
Size of reached set:             131326
  Number of reached locations:   1043 (46%)
    Avg states per location:     125
    Max states per location:     542 (at node N1703)
  Number of reached functions:   41 (58%)
  Number of partitions:          131288
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1102 (before line 1412), Function stopRequestedInDirection called from node N1359, stack depth 6 [7e252aa], stack [main, runTest, test, threeTS, timeShift, stopRequestedInDirection]])
  Number of target states:       0
  Size of final wait list        577

Time for analysis setup:          3.993s
  Time for loading CPAs:          0.781s
  Time for loading parser:        0.641s
  Time for CFA construction:      2.451s
    Time for parsing file(s):     0.668s
    Time for AST to CFA:          0.755s
    Time for CFA sanity check:    0.251s
    Time for post-processing:     0.624s
      Time for var class.:        0.355s
Time for Analysis:              896.215s
CPU time for analysis:          896.130s
Total time for CPAchecker:      900.212s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              1.410s

Time for Garbage Collector:      99.430s (in 895 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2679MB (  2555 MiB) max;   1077MB (  1027 MiB) avg;   2746MB (  2618 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:          3397MB (  3240 MiB) max;   1599MB (  1525 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  11544MB ( 11009 MiB) max;   9116MB (  8693 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
