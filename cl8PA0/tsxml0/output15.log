scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product09_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_72u4j43j/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 272: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1184: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1267: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1347: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1360: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1816: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2429: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2777: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3120: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6345 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6297 (99%)
  Because of loop head:            23 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       1177 (19%)
  Times precision was {false}:     190 (3%)
  Times result was cached:         4204 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      774 (12%)
  Times result was 'false':        148 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         75501
  BDD entailment checks:           675
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          6
Number of abstraction locations:          104
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         12707
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 13.18
Number of irrelevant predicates:          2707 (21%)
Number of preds handled by boolean abs:   1643 (13%)
  Total number of models for allsat:      865
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  3.565s
  Time for path formula creation:        3.388s
Time for strengthen operator:            0.294s
Time for prec operator:                  5.952s
  Time for abstraction:                  5.454s (Max:     0.030s, Count: 6345)
    Boolean abstraction:                 1.590s
    Solving time:                        1.421s (Max:     0.015s)
    Model enumeration time:              0.116s
    Time for BDD construction:           0.155s (Max:     0.012s)
Time for merge operator:                 0.674s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     1.537s

Number of path formula cache hits:   168377 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.008s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1606 (count: 7503, min: 0, max: 257, avg: 0.21)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.446s
Automaton transfers with branching:                0
Automaton transfer successors:                       172250 (count: 172250, min: 1, max: 1, avg: 1.00) [1 x 172250]

CPA algorithm statistics
------------------------
Number of iterations:            129881
Max size of waitlist:            177
Average size of waitlist:        126
Number of computed successors:   168872
Max successors for one state:    2
Number of times merged:          37413
Number of times stopped:         37765
Number of times breaked:         25

Total time for CPA algorithm:        18.917s (Max:     2.616s)
  Time for choose from waitlist:      0.177s
  Time for precision adjustment:      8.014s
  Time for transfer relation:         6.845s
  Time for merge operator:            1.648s
  Time for stop operator:             0.439s
  Time for adding to reached set:     0.577s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                5663 (count: 25, min: 154, max: 263, avg: 226.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.550s
  Counterexample analysis:                             5.803s (Max:     0.418s, Calls: 25)
    Refinement sat check:                              3.236s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.047s
  ARG update:                                          0.452s

Length of refined path (in blocks):                    5430 (count: 25, min: 35, max: 260, avg: 217.20)
Number of affected states:                             1191 (count: 25, min: 28, max: 211, avg: 47.64)
Length (states) of path with itp 'true':               4214 (count: 25, min: 0, max: 223, avg: 168.56)
Length (states) of path with itp non-trivial itp:      1191 (count: 25, min: 28, max: 211, avg: 47.64)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 25, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:            1165 (count: 25, min: 27, max: 210, avg: 46.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 18263
Max. size of reached set after ref.:  5048
Avg. size of reached set before ref.: 8367.60
Avg. size of reached set after ref.:  3794.60

Total time for CEGAR algorithm:      26.145s
Time for refinements:                 7.140s
Average time for refinement:          0.285s
Max time for refinement:              0.509s

Code Coverage
-----------------------------
  Function coverage:      0.544
  Visited lines:          730
  Total lines:            1691
  Line coverage:          0.432
  Visited conditions:     394
  Total conditions:       750
  Condition coverage:     0.525

CPAchecker general statistics
-----------------------------
Number of program locations:     2212
Number of CFA edges:             2705
Number of relevant variables:    286
Number of functions:             68
Number of loops:                 9
Size of reached set:             16635
  Number of reached locations:   795 (36%)
    Avg states per location:     20
    Max states per location:     79 (at node N200)
  Number of reached functions:   37 (54%)
  Number of partitions:          16613
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2064 (before lines 2576-2604), Function cleanup called from node N78, stack depth 4 [f76dae9], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        131

Time for analysis setup:          4.118s
  Time for loading CPAs:          0.825s
  Time for loading parser:        0.728s
  Time for CFA construction:      2.367s
    Time for parsing file(s):     0.675s
    Time for AST to CFA:          0.738s
    Time for CFA sanity check:    0.270s
    Time for post-processing:     0.510s
      Time for var class.:        0.277s
Time for Analysis:               26.145s
CPU time for analysis:           26.140s
Total time for CPAchecker:       30.267s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.350s

Time for Garbage Collector:       0.962s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                102MB (    97 MiB) max;     53MB (    51 MiB) avg;    108MB (   103 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
