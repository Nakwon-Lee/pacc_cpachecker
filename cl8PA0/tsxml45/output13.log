scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s1wz1ts0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2060: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3094: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6810 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6401 (94%)
  Because of loop head:            381 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       4861 (71%)
  Times precision was {false}:     135 (2%)
  Times result was cached:         1516 (22%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      298 (4%)
  Times result was 'false':        413 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         87011
  BDD entailment checks:           1521
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          19
Number of abstraction locations:          62
Max number of predicates per location:    10
Avg number of predicates per location:    7
Total predicates per abstraction:         11680
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 26.97
Number of irrelevant predicates:          5053 (43%)
Number of preds handled by boolean abs:   1367 (12%)
  Total number of models for allsat:      1372
  Max number of models for allsat:        64
  Avg number of models for allsat:        4.60

Time for post operator:                  5.347s
  Time for path formula creation:        5.070s
Time for strengthen operator:            0.412s
Time for prec operator:                  3.644s
  Time for abstraction:                  3.031s (Max:     0.053s, Count: 6810)
    Boolean abstraction:                 0.801s
    Solving time:                        0.552s (Max:     0.014s)
    Model enumeration time:              0.154s
    Time for BDD construction:           0.124s (Max:     0.012s)
Time for merge operator:                 0.965s
Time for coverage check:                 0.094s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     0.706s

Number of path formula cache hits:   214100 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.508s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1476
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1298 (count: 9396, min: 0, max: 146, avg: 0.14)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.959s
  Time for transition matches:                         0.299s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       199513 (count: 199513, min: 1, max: 1, avg: 1.00) [1 x 199513]

CPA algorithm statistics
------------------------
Number of iterations:            149286
Max size of waitlist:            107
Average size of waitlist:        56
Number of computed successors:   194448
Max successors for one state:    2
Number of times merged:          42745
Number of times stopped:         44162
Number of times breaked:         28

Total time for CPA algorithm:        22.389s (Max:     7.629s)
  Time for choose from waitlist:      0.287s
  Time for precision adjustment:      6.171s
  Time for transfer relation:        10.182s
  Time for merge operator:            2.496s
  Time for stop operator:             0.758s
  Time for adding to reached set:     0.813s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                1710 (count: 28, min: 55, max: 71, avg: 61.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.982s
  Counterexample analysis:                             1.064s (Max:     0.065s, Calls: 28)
    Refinement sat check:                              0.686s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.079s
  Precision update:                                    0.038s
  ARG update:                                          0.711s

Length of refined path (in blocks):                    1530 (count: 28, min: 39, max: 64, avg: 54.64)
Number of affected states:                              436 (count: 28, min: 1, max: 63, avg: 15.57)
Length (states) of path with itp 'true':               1066 (count: 28, min: 0, max: 60, avg: 38.07)
Length (states) of path with itp non-trivial itp:       436 (count: 28, min: 1, max: 63, avg: 15.57)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 28, min: 0, max: 2, avg: 0.43)
Equal non-trivial interpolants along paths:             396 (count: 28, min: 0, max: 60, avg: 14.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 19742
Max. size of reached set after ref.:  19264
Avg. size of reached set before ref.: 18351.68
Avg. size of reached set after ref.:  13066.50

Total time for CEGAR algorithm:      25.876s
Time for refinements:                 2.988s
Average time for refinement:          0.106s
Max time for refinement:              0.255s

Code Coverage
-----------------------------
  Function coverage:      0.380
  Visited lines:          489
  Total lines:            1668
  Line coverage:          0.293
  Visited conditions:     296
  Total conditions:       722
  Condition coverage:     0.410

CPAchecker general statistics
-----------------------------
Number of program locations:     2180
Number of CFA edges:             2658
Number of relevant variables:    303
Number of functions:             71
Number of loops:                 9
Size of reached set:             1889
  Number of reached locations:   547 (25%)
    Avg states per location:     3
    Max states per location:     11 (at node N677)
  Number of reached functions:   27 (38%)
  Number of partitions:          1889
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:          4.369s
  Time for loading CPAs:          0.898s
  Time for loading parser:        0.755s
  Time for CFA construction:      2.518s
    Time for parsing file(s):     0.788s
    Time for AST to CFA:          0.728s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.569s
      Time for var class.:        0.313s
Time for Analysis:               25.876s
CPU time for analysis:           25.870s
Total time for CPAchecker:       30.249s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.114s

Time for Garbage Collector:       1.374s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   120 MiB) max;     62MB (    59 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
