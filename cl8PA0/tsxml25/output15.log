scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product01_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gm9jxyjr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 87: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 165: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1088: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1346: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2516: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2992: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29703 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29432 (99%)
  Because of loop head:            182 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         89 (0%)
  Times precision was empty:       13263 (45%)
  Times precision was {false}:     180 (1%)
  Times result was cached:         15584 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      676 (2%)
  Times result was 'false':        3210 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         129463
  BDD entailment checks:           6503
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          6
Number of abstraction locations:          59
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         71173
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 83.15
Number of irrelevant predicates:          8871 (12%)
Number of preds handled by boolean abs:   2265 (3%)
  Total number of models for allsat:      743
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.10

Time for post operator:                  2.464s
  Time for path formula creation:        2.198s
Time for strengthen operator:            0.484s
Time for prec operator:                  7.994s
  Time for abstraction:                  7.220s (Max:     0.034s, Count: 29703)
    Boolean abstraction:                 1.074s
    Solving time:                        0.838s (Max:     0.013s)
    Model enumeration time:              0.092s
    Time for BDD construction:           0.090s (Max:     0.009s)
Time for merge operator:                 0.391s
Time for coverage check:                 0.105s
  Time for BDD entailment checks:        0.074s
Total time for SMT solver (w/o itp):     0.930s

Number of path formula cache hits:   456522 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.136s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               347
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1369 (count: 24979, min: 0, max: 127, avg: 0.05)
Time for BDD node cleanup:                             0.040s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.686s
  Time for transition matches:                         0.348s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       379986 (count: 379986, min: 1, max: 1, avg: 1.00) [1 x 379986]

CPA algorithm statistics
------------------------
Number of iterations:            268507
Max size of waitlist:            48
Average size of waitlist:        24
Number of computed successors:   342172
Max successors for one state:    2
Number of times merged:          61480
Number of times stopped:         67291
Number of times breaked:         89

Total time for CPA algorithm:        22.586s (Max:     1.590s)
  Time for choose from waitlist:      0.229s
  Time for precision adjustment:     10.396s
  Time for transfer relation:         7.510s
  Time for merge operator:            1.529s
  Time for stop operator:             0.669s
  Time for adding to reached set:     0.795s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   89
Avg. length of target path (in blocks):                5066 (count: 89, min: 41, max: 84, avg: 56.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.265s
  Counterexample analysis:                             2.136s (Max:     0.042s, Calls: 89)
    Refinement sat check:                              1.433s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.107s
  Precision update:                                    0.116s
  ARG update:                                          0.711s

Length of refined path (in blocks):                    4969 (count: 89, min: 40, max: 83, avg: 55.83)
Number of affected states:                             3990 (count: 89, min: 29, max: 72, avg: 44.83)
Length (states) of path with itp 'true':                890 (count: 89, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:      3990 (count: 89, min: 29, max: 72, avg: 44.83)
Length (states) of path with itp 'false':                89 (count: 89, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 89, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3901 (count: 89, min: 28, max: 71, avg: 43.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                89
Number of successful refinements:     89
Number of failed refinements:         0
Max. size of reached set before ref.: 6062
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 3047.80
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      26.262s
Time for refinements:                 3.661s
Average time for refinement:          0.041s
Max time for refinement:              0.132s

Code Coverage
-----------------------------
  Function coverage:      0.449
  Visited lines:          613
  Total lines:            1673
  Line coverage:          0.366
  Visited conditions:     340
  Total conditions:       748
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     2194
Number of CFA edges:             2677
Number of relevant variables:    280
Number of functions:             69
Number of loops:                 9
Size of reached set:             2999
  Number of reached locations:   647 (29%)
    Avg states per location:     4
    Max states per location:     36 (at node N80)
  Number of reached functions:   31 (45%)
  Number of partitions:          2999
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          4.017s
  Time for loading CPAs:          0.761s
  Time for loading parser:        0.629s
  Time for CFA construction:      2.441s
    Time for parsing file(s):     0.707s
    Time for AST to CFA:          0.677s
    Time for CFA sanity check:    0.287s
    Time for post-processing:     0.610s
      Time for var class.:        0.331s
Time for Analysis:               26.262s
CPU time for analysis:           26.260s
Total time for CPAchecker:       30.283s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.166s

Time for Garbage Collector:       0.866s (in 107 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    63 MiB) max;     43MB (    41 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
