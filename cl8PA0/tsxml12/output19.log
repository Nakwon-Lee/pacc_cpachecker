scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qwvlpa2u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1760: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2323: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3058: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3113: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3279: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7743 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7740 (100%)
  Because of loop head:            2 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (0%)
  Times precision was empty:       7210 (93%)
  Times precision was {false}:     166 (2%)
  Times result was cached:         301 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66 (1%)
  Times result was 'false':        110 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         80424
  BDD entailment checks:           1294
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          2
Number of abstraction locations:          47
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         533
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.30
Number of irrelevant predicates:          428 (80%)
Number of preds handled by boolean abs:   66 (12%)
  Total number of models for allsat:      60
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.91

Time for post operator:                  9.314s
  Time for path formula creation:        9.023s
Time for strengthen operator:            0.441s
Time for prec operator:                  1.826s
  Time for abstraction:                  1.049s (Max:     0.024s, Count: 7743)
    Boolean abstraction:                 0.116s
    Solving time:                        0.248s (Max:     0.017s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.012s (Max:     0.010s)
Time for merge operator:                 1.897s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.279s

Number of path formula cache hits:   98016 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.083s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         127 (count: 9760, min: 0, max: 67, avg: 0.01)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.846s
  Time for transition matches:                         0.367s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       185856 (count: 185856, min: 1, max: 1, avg: 1.00) [1 x 185856]

CPA algorithm statistics
------------------------
Number of iterations:            139939
Max size of waitlist:            28
Average size of waitlist:        14
Number of computed successors:   180856
Max successors for one state:    2
Number of times merged:          39565
Number of times stopped:         40787
Number of times breaked:         1

Total time for CPA algorithm:        25.013s (Max:    19.392s)
  Time for choose from waitlist:      0.241s
  Time for precision adjustment:      4.400s
  Time for transfer relation:        14.077s
  Time for merge operator:            3.207s
  Time for stop operator:             0.458s
  Time for adding to reached set:     0.630s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                  73 (count: 1, min: 73, max: 73, avg: 73.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.864s
  Counterexample analysis:                             0.079s (Max:     0.079s, Calls: 1)
    Refinement sat check:                              0.045s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.002s
  ARG update:                                          0.749s

Length of refined path (in blocks):                      72 (count: 1, min: 72, max: 72, avg: 72.00)
Number of affected states:                               61 (count: 1, min: 61, max: 61, avg: 61.00)
Length (states) of path with itp 'true':                 10 (count: 1, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:        61 (count: 1, min: 61, max: 61, avg: 61.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              60 (count: 1, min: 60, max: 60, avg: 60.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 90661
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 90661.00
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      26.119s
Time for refinements:                 1.106s
Average time for refinement:          1.106s
Max time for refinement:              1.106s

Code Coverage
-----------------------------
  Function coverage:      0.577
  Visited lines:          1022
  Total lines:            1762
  Line coverage:          0.580
  Visited conditions:     592
  Total conditions:       762
  Condition coverage:     0.777

CPAchecker general statistics
-----------------------------
Number of program locations:     2312
Number of CFA edges:             2814
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             49328
  Number of reached locations:   1136 (49%)
    Avg states per location:     43
    Max states per location:     227 (at node N40)
  Number of reached functions:   45 (58%)
  Number of partitions:          49316
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1976 (before line 2470), Function stopRequestedAtCurrentFloor called from node N2069, stack depth 6 [2b31269d], stack [main, runTest, test, cleanup, timeShift, stopRequestedAtCurrentFloor]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          4.153s
  Time for loading CPAs:          0.776s
  Time for loading parser:        0.717s
  Time for CFA construction:      2.495s
    Time for parsing file(s):     0.717s
    Time for AST to CFA:          0.716s
    Time for CFA sanity check:    0.269s
    Time for post-processing:     0.619s
      Time for var class.:        0.337s
Time for Analysis:               26.120s
CPU time for analysis:           26.110s
Total time for CPAchecker:       30.278s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              1.101s

Time for Garbage Collector:       1.890s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                189MB (   181 MiB) max;     84MB (    80 MiB) avg;    203MB (   193 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           207MB (   198 MiB) max;    152MB (   145 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
