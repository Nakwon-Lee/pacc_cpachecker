scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2d1f995m/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1760: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2323: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3058: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3113: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3279: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6621 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6601 (100%)
  Because of loop head:            10 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       5701 (86%)
  Times precision was {false}:     80 (1%)
  Times result was cached:         751 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      89 (1%)
  Times result was 'false':        20 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         119366
  BDD entailment checks:           524
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          4
Number of abstraction locations:          40
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         1306
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 7.73
Number of irrelevant predicates:          569 (44%)
Number of preds handled by boolean abs:   156 (12%)
  Total number of models for allsat:      89
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  8.080s
  Time for path formula creation:        7.763s
Time for strengthen operator:            0.514s
Time for prec operator:                  1.523s
  Time for abstraction:                  0.774s (Max:     0.021s, Count: 6621)
    Boolean abstraction:                 0.115s
    Solving time:                        0.117s (Max:     0.017s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.008s (Max:     0.001s)
Time for merge operator:                 2.169s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.122s

Number of path formula cache hits:   245481 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.016s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         202 (count: 7179, min: 0, max: 51, avg: 0.03)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.776s
  Time for transition matches:                         0.299s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       263991 (count: 263991, min: 1, max: 1, avg: 1.00) [1 x 263991]

CPA algorithm statistics
------------------------
Number of iterations:            198380
Max size of waitlist:            116
Average size of waitlist:        58
Number of computed successors:   259252
Max successors for one state:    2
Number of times merged:          59421
Number of times stopped:         59928
Number of times breaked:         10

Total time for CPA algorithm:        24.235s (Max:     8.529s)
  Time for choose from waitlist:      0.249s
  Time for precision adjustment:      4.223s
  Time for transfer relation:        13.284s
  Time for merge operator:            3.619s
  Time for stop operator:             0.623s
  Time for adding to reached set:     0.798s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 756 (count: 10, min: 71, max: 79, avg: 75.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.251s
  Counterexample analysis:                             0.438s (Max:     0.072s, Calls: 10)
    Refinement sat check:                              0.279s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.008s
  ARG update:                                          0.703s

Length of refined path (in blocks):                     319 (count: 9, min: 31, max: 39, avg: 35.44)
Number of affected states:                              310 (count: 9, min: 30, max: 38, avg: 34.44)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       310 (count: 9, min: 30, max: 38, avg: 34.44)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             301 (count: 9, min: 29, max: 37, avg: 33.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 23076
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 19933.20
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.809s
Time for refinements:                 1.574s
Average time for refinement:          0.157s
Max time for refinement:              0.365s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          763
  Total lines:            1762
  Line coverage:          0.433
  Visited conditions:     436
  Total conditions:       762
  Condition coverage:     0.572

CPAchecker general statistics
-----------------------------
Number of program locations:     2312
Number of CFA edges:             2814
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             16458
  Number of reached locations:   854 (37%)
    Avg states per location:     19
    Max states per location:     70 (at node N71)
  Number of reached functions:   40 (51%)
  Number of partitions:          16457
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2070 (before line 2605), Function timeShift called from node N1001, stack depth 5 [28a34be4], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       1
  Size of final wait list        79

Time for analysis setup:          3.943s
  Time for loading CPAs:          0.726s
  Time for loading parser:        0.675s
  Time for CFA construction:      2.391s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          0.683s
    Time for CFA sanity check:    0.252s
    Time for post-processing:     0.577s
      Time for var class.:        0.312s
Time for Analysis:               25.809s
CPU time for analysis:           25.820s
Total time for CPAchecker:       29.756s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.383s

Time for Garbage Collector:       1.847s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     66MB (    63 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
