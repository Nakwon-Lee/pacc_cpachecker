scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v2r4gh11/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1760: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2323: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3058: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3113: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3279: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            26561 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26368 (99%)
  Because of loop head:            110 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         83 (0%)
  Times precision was empty:       14761 (56%)
  Times precision was {false}:     220 (1%)
  Times result was cached:         10887 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      693 (3%)
  Times result was 'false':        961 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         85392
  BDD entailment checks:           3642
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          7
Number of abstraction locations:          77
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         45126
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 49.43
Number of irrelevant predicates:          5928 (13%)
Number of preds handled by boolean abs:   2419 (5%)
  Total number of models for allsat:      790
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.14

Time for post operator:                  4.233s
  Time for path formula creation:        3.944s
Time for strengthen operator:            0.467s
Time for prec operator:                  6.415s
  Time for abstraction:                  5.647s (Max:     0.031s, Count: 26561)
    Boolean abstraction:                 0.789s
    Solving time:                        0.622s (Max:     0.013s)
    Model enumeration time:              0.050s
    Time for BDD construction:           0.092s (Max:     0.009s)
Time for merge operator:                 0.613s
Time for coverage check:                 0.095s
  Time for BDD entailment checks:        0.067s
Total time for SMT solver (w/o itp):     0.672s

Number of path formula cache hits:   291748 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.953s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               363
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1477 (count: 23745, min: 0, max: 86, avg: 0.06)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.724s
  Time for transition matches:                         0.335s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       277903 (count: 277903, min: 1, max: 1, avg: 1.00) [1 x 277903]

CPA algorithm statistics
------------------------
Number of iterations:            196414
Max size of waitlist:            58
Average size of waitlist:        22
Number of computed successors:   243904
Max successors for one state:    2
Number of times merged:          40875
Number of times stopped:         44141
Number of times breaked:         83

Total time for CPA algorithm:        22.237s (Max:     1.875s)
  Time for choose from waitlist:      0.307s
  Time for precision adjustment:      8.724s
  Time for transfer relation:         8.933s
  Time for merge operator:            1.605s
  Time for stop operator:             0.596s
  Time for adding to reached set:     0.642s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   83
Avg. length of target path (in blocks):                6496 (count: 83, min: 51, max: 200, avg: 78.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.704s
  Counterexample analysis:                             2.783s (Max:     0.121s, Calls: 83)
    Refinement sat check:                              1.832s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.093s
  Precision update:                                    0.114s
  ARG update:                                          0.631s

Length of refined path (in blocks):                    5551 (count: 82, min: 44, max: 103, avg: 67.70)
Number of affected states:                             4699 (count: 82, min: 33, max: 92, avg: 57.30)
Length (states) of path with itp 'true':                770 (count: 82, min: 0, max: 10, avg: 9.39)
Length (states) of path with itp non-trivial itp:      4699 (count: 82, min: 33, max: 92, avg: 57.30)
Length (states) of path with itp 'false':                82 (count: 82, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 82, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4617 (count: 82, min: 32, max: 91, avg: 56.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                83
Number of successful refinements:     82
Number of failed refinements:         0
Max. size of reached set before ref.: 6736
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 2422.30
Avg. size of reached set after ref.:  27.41

Total time for CEGAR algorithm:      26.349s
Time for refinements:                 4.106s
Average time for refinement:          0.049s
Max time for refinement:              0.155s

Code Coverage
-----------------------------
  Function coverage:      0.641
  Visited lines:          889
  Total lines:            1762
  Line coverage:          0.505
  Visited conditions:     494
  Total conditions:       762
  Condition coverage:     0.648

CPAchecker general statistics
-----------------------------
Number of program locations:     2312
Number of CFA edges:             2814
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             6194
  Number of reached locations:   1018 (44%)
    Avg states per location:     6
    Max states per location:     66 (at node N652)
  Number of reached functions:   50 (64%)
  Number of partitions:          6187
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2141 (after line 2720), Function timeShift called from node N1001, stack depth 5 [345478db], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       1
  Size of final wait list        51

Time for analysis setup:          3.896s
  Time for loading CPAs:          0.726s
  Time for loading parser:        0.693s
  Time for CFA construction:      2.315s
    Time for parsing file(s):     0.684s
    Time for AST to CFA:          0.628s
    Time for CFA sanity check:    0.236s
    Time for post-processing:     0.569s
      Time for var class.:        0.349s
Time for Analysis:               26.349s
CPU time for analysis:           26.350s
Total time for CPAchecker:       30.249s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.258s

Time for Garbage Collector:       0.755s (in 81 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     46MB (    43 MiB) avg;     92MB (    87 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
