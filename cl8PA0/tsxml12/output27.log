scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z7zmhxw2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1760: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2323: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3058: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3113: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3279: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29736 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29533 (99%)
  Because of loop head:            125 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         78 (0%)
  Times precision was empty:       18187 (61%)
  Times precision was {false}:     192 (1%)
  Times result was cached:         10786 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      571 (2%)
  Times result was 'false':        1292 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         115919
  BDD entailment checks:           4673
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          6
Number of abstraction locations:          79
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         48303
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 63.31
Number of irrelevant predicates:          11897 (25%)
Number of preds handled by boolean abs:   1725 (4%)
  Total number of models for allsat:      680
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.19

Time for post operator:                  4.348s
  Time for path formula creation:        4.076s
Time for strengthen operator:            0.508s
Time for prec operator:                  5.630s
  Time for abstraction:                  4.887s (Max:     0.027s, Count: 29736)
    Boolean abstraction:                 0.582s
    Solving time:                        0.479s (Max:     0.013s)
    Model enumeration time:              0.031s
    Time for BDD construction:           0.070s (Max:     0.012s)
Time for merge operator:                 0.823s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.510s

Number of path formula cache hits:   371926 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.952s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               362
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1205 (count: 27314, min: 0, max: 117, avg: 0.04)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.879s
  Time for transition matches:                         0.418s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       347591 (count: 347591, min: 1, max: 1, avg: 1.00) [1 x 347591]

CPA algorithm statistics
------------------------
Number of iterations:            249517
Max size of waitlist:            65
Average size of waitlist:        29
Number of computed successors:   312445
Max successors for one state:    2
Number of times merged:          55623
Number of times stopped:         59200
Number of times breaked:         78

Total time for CPA algorithm:        22.730s (Max:     4.442s)
  Time for choose from waitlist:      0.260s
  Time for precision adjustment:      8.143s
  Time for transfer relation:         9.537s
  Time for merge operator:            1.968s
  Time for stop operator:             0.633s
  Time for adding to reached set:     0.788s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   78
Avg. length of target path (in blocks):                4757 (count: 78, min: 51, max: 92, avg: 60.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.813s
  Counterexample analysis:                             1.851s (Max:     0.044s, Calls: 78)
    Refinement sat check:                              1.215s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.097s
  ARG update:                                          0.683s

Length of refined path (in blocks):                    4671 (count: 78, min: 44, max: 91, avg: 59.88)
Number of affected states:                             3813 (count: 78, min: 33, max: 80, avg: 48.88)
Length (states) of path with itp 'true':                780 (count: 78, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:      3813 (count: 78, min: 33, max: 80, avg: 48.88)
Length (states) of path with itp 'false':                78 (count: 78, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 78, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3735 (count: 78, min: 32, max: 79, avg: 47.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                78
Number of successful refinements:     78
Number of failed refinements:         0
Max. size of reached set before ref.: 34656
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 3215.88
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      25.868s
Time for refinements:                 3.134s
Average time for refinement:          0.040s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          607
  Total lines:            1762
  Line coverage:          0.344
  Visited conditions:     288
  Total conditions:       762
  Condition coverage:     0.378

CPAchecker general statistics
-----------------------------
Number of program locations:     2312
Number of CFA edges:             2814
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             3377
  Number of reached locations:   628 (27%)
    Avg states per location:     5
    Max states per location:     46 (at node N652)
  Number of reached functions:   41 (53%)
  Number of partitions:          3377
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        38

Time for analysis setup:          4.371s
  Time for loading CPAs:          0.883s
  Time for loading parser:        0.693s
  Time for CFA construction:      2.591s
    Time for parsing file(s):     0.792s
    Time for AST to CFA:          0.794s
    Time for CFA sanity check:    0.263s
    Time for post-processing:     0.571s
      Time for var class.:        0.316s
Time for Analysis:               25.869s
CPU time for analysis:           25.860s
Total time for CPAchecker:       30.244s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.161s

Time for Garbage Collector:       1.053s (in 94 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                115MB (   110 MiB) max;     47MB (    45 MiB) avg;    121MB (   115 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
