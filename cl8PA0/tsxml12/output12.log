scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bpwj8_b4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1760: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2323: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3058: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3113: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3279: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27781 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27578 (99%)
  Because of loop head:            119 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (0%)
  Times precision was empty:       15719 (57%)
  Times precision was {false}:     264 (1%)
  Times result was cached:         11071 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      727 (3%)
  Times result was 'false':        1076 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         89341
  BDD entailment checks:           3895
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          11
Number of abstraction locations:          120
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         47275
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 47.70
Number of irrelevant predicates:          8644 (18%)
Number of preds handled by boolean abs:   2714 (6%)
  Total number of models for allsat:      843
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.16

Time for post operator:                  4.207s
  Time for path formula creation:        3.919s
Time for strengthen operator:            0.369s
Time for prec operator:                  6.384s
  Time for abstraction:                  5.613s (Max:     0.032s, Count: 27781)
    Boolean abstraction:                 0.801s
    Solving time:                        0.620s (Max:     0.013s)
    Model enumeration time:              0.032s
    Time for BDD construction:           0.142s (Max:     0.012s)
Time for merge operator:                 0.622s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     0.652s

Number of path formula cache hits:   303193 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.964s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               505
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1630 (count: 25459, min: 0, max: 106, avg: 0.06)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.840s
  Time for transition matches:                         0.388s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       290242 (count: 290242, min: 1, max: 1, avg: 1.00) [1 x 290242]

CPA algorithm statistics
------------------------
Number of iterations:            205270
Max size of waitlist:            72
Average size of waitlist:        24
Number of computed successors:   254940
Max successors for one state:    2
Number of times merged:          42723
Number of times stopped:         46090
Number of times breaked:         84

Total time for CPA algorithm:        22.194s (Max:     1.694s)
  Time for choose from waitlist:      0.266s
  Time for precision adjustment:      8.523s
  Time for transfer relation:         9.074s
  Time for merge operator:            1.579s
  Time for stop operator:             0.552s
  Time for adding to reached set:     0.596s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                5928 (count: 84, min: 51, max: 190, avg: 70.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.493s
  Counterexample analysis:                             2.559s (Max:     0.167s, Calls: 84)
    Refinement sat check:                              1.607s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.126s
  Precision update:                                    0.085s
  ARG update:                                          0.611s

Length of refined path (in blocks):                    5067 (count: 84, min: 44, max: 172, avg: 60.32)
Number of affected states:                             4151 (count: 84, min: 1, max: 171, avg: 49.42)
Length (states) of path with itp 'true':                832 (count: 84, min: 0, max: 62, avg: 9.90)
Length (states) of path with itp non-trivial itp:      4151 (count: 84, min: 1, max: 171, avg: 49.42)
Length (states) of path with itp 'false':                84 (count: 84, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 84, min: 0, max: 2, avg: 0.02)
Equal non-trivial interpolants along paths:            4065 (count: 84, min: 0, max: 168, avg: 48.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 8178
Max. size of reached set after ref.:  4506
Avg. size of reached set before ref.: 2529.21
Avg. size of reached set after ref.:  80.44

Total time for CEGAR algorithm:      26.051s
Time for refinements:                 3.849s
Average time for refinement:          0.045s
Max time for refinement:              0.209s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          604
  Total lines:            1762
  Line coverage:          0.343
  Visited conditions:     286
  Total conditions:       762
  Condition coverage:     0.375

CPAchecker general statistics
-----------------------------
Number of program locations:     2312
Number of CFA edges:             2814
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             2078
  Number of reached locations:   623 (27%)
    Avg states per location:     3
    Max states per location:     25 (at node N652)
  Number of reached functions:   41 (53%)
  Number of partitions:          2070
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2070 (before line 2605), Function timeShift called from node N1001, stack depth 5 [29da8e3e], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          4.192s
  Time for loading CPAs:          0.827s
  Time for loading parser:        0.754s
  Time for CFA construction:      2.421s
    Time for parsing file(s):     0.708s
    Time for AST to CFA:          0.713s
    Time for CFA sanity check:    0.235s
    Time for post-processing:     0.572s
      Time for var class.:        0.325s
Time for Analysis:               26.051s
CPU time for analysis:           26.050s
Total time for CPAchecker:       30.247s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.130s

Time for Garbage Collector:       0.707s (in 83 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     46MB (    44 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
