scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dgddftci/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1760: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2323: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3058: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3113: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3279: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5790 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5776 (100%)
  Because of loop head:            7 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       3326 (57%)
  Times precision was {false}:     79 (1%)
  Times result was cached:         2197 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      188 (3%)
  Times result was 'false':        21 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         108019
  BDD entailment checks:           513
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          6
Number of abstraction locations:          44
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         8602
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 32.22
Number of irrelevant predicates:          7432 (86%)
Number of preds handled by boolean abs:   548 (6%)
  Total number of models for allsat:      287
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.53

Time for post operator:                  6.399s
  Time for path formula creation:        6.064s
Time for strengthen operator:            0.529s
Time for prec operator:                  3.850s
  Time for abstraction:                  3.106s (Max:     0.031s, Count: 5790)
    Boolean abstraction:                 0.537s
    Solving time:                        0.417s (Max:     0.020s)
    Model enumeration time:              0.038s
    Time for BDD construction:           0.096s (Max:     0.016s)
Time for merge operator:                 1.469s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.455s

Number of path formula cache hits:   260323 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.579s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               351
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         441 (count: 5409, min: 0, max: 83, avg: 0.08)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.007s
  Time for transition matches:                         0.260s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       238126 (count: 238126, min: 1, max: 1, avg: 1.00) [1 x 238126]

CPA algorithm statistics
------------------------
Number of iterations:            179010
Max size of waitlist:            114
Average size of waitlist:        67
Number of computed successors:   234059
Max successors for one state:    2
Number of times merged:          53753
Number of times stopped:         54208
Number of times breaked:         7

Total time for CPA algorithm:        24.628s (Max:     9.175s)
  Time for choose from waitlist:      0.299s
  Time for precision adjustment:      6.564s
  Time for transfer relation:        11.478s
  Time for merge operator:            3.166s
  Time for stop operator:             0.692s
  Time for adding to reached set:     0.820s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 417 (count: 7, min: 59, max: 61, avg: 59.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.192s
  Counterexample analysis:                             0.376s (Max:     0.088s, Calls: 7)
    Refinement sat check:                              0.244s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.018s
  ARG update:                                          0.720s

Length of refined path (in blocks):                     410 (count: 7, min: 58, max: 60, avg: 58.57)
Number of affected states:                              333 (count: 7, min: 47, max: 49, avg: 47.57)
Length (states) of path with itp 'true':                 70 (count: 7, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:       333 (count: 7, min: 47, max: 49, avg: 47.57)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             326 (count: 7, min: 46, max: 48, avg: 46.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 23116
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 22862.71
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      26.108s
Time for refinements:                 1.480s
Average time for refinement:          0.211s
Max time for refinement:              0.415s

Code Coverage
-----------------------------
  Function coverage:      0.410
  Visited lines:          622
  Total lines:            1762
  Line coverage:          0.353
  Visited conditions:     364
  Total conditions:       762
  Condition coverage:     0.478

CPAchecker general statistics
-----------------------------
Number of program locations:     2312
Number of CFA edges:             2814
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             19993
  Number of reached locations:   695 (30%)
    Avg states per location:     28
    Max states per location:     84 (at node N71)
  Number of reached functions:   32 (41%)
  Number of partitions:          19992
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2070 (before line 2605), Function timeShift called from node N1001, stack depth 5 [687239e9], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        95

Time for analysis setup:          4.143s
  Time for loading CPAs:          0.864s
  Time for loading parser:        0.736s
  Time for CFA construction:      2.338s
    Time for parsing file(s):     0.657s
    Time for AST to CFA:          0.701s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.571s
      Time for var class.:        0.310s
Time for Analysis:               26.108s
CPU time for analysis:           26.090s
Total time for CPAchecker:       30.255s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.473s

Time for Garbage Collector:       1.534s (in 72 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                116MB (   111 MiB) max;     64MB (    61 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
