scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_byj764tt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1760: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2323: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3058: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3113: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3279: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11235 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11228 (100%)
  Because of loop head:            5 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       10363 (92%)
  Times precision was {false}:     198 (2%)
  Times result was cached:         624 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      50 (0%)
  Times result was 'false':        211 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         117581
  BDD entailment checks:           1757
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          3
Number of abstraction locations:          35
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         1096
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.42
Number of irrelevant predicates:          984 (90%)
Number of preds handled by boolean abs:   70 (6%)
  Total number of models for allsat:      54
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  7.943s
  Time for path formula creation:        7.679s
Time for strengthen operator:            0.462s
Time for prec operator:                  1.807s
  Time for abstraction:                  1.155s (Max:     0.024s, Count: 11235)
    Boolean abstraction:                 0.091s
    Solving time:                        0.217s (Max:     0.019s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 1.593s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.222s

Number of path formula cache hits:   201547 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.971s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         111 (count: 13459, min: 0, max: 48, avg: 0.01)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.931s
  Time for transition matches:                         0.383s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       271449 (count: 271449, min: 1, max: 1, avg: 1.00) [1 x 271449]

CPA algorithm statistics
------------------------
Number of iterations:            204522
Max size of waitlist:            41
Average size of waitlist:        17
Number of computed successors:   264382
Max successors for one state:    2
Number of times merged:          57912
Number of times stopped:         59620
Number of times breaked:         2

Total time for CPA algorithm:        24.175s (Max:    15.890s)
  Time for choose from waitlist:      0.261s
  Time for precision adjustment:      5.114s
  Time for transfer relation:        12.824s
  Time for merge operator:            3.118s
  Time for stop operator:             0.542s
  Time for adding to reached set:     0.673s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                 102 (count: 2, min: 51, max: 51, avg: 51.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.200s
  Counterexample analysis:                             0.077s (Max:     0.056s, Calls: 2)
    Refinement sat check:                              0.045s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.002s
  ARG update:                                          1.084s

Length of refined path (in blocks):                     100 (count: 2, min: 50, max: 50, avg: 50.00)
Number of affected states:                               78 (count: 2, min: 39, max: 39, avg: 39.00)
Length (states) of path with itp 'true':                 20 (count: 2, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:        78 (count: 2, min: 39, max: 39, avg: 39.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              76 (count: 2, min: 38, max: 38, avg: 38.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 94434
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 92547.50
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      25.645s
Time for refinements:                 1.459s
Average time for refinement:          0.729s
Max time for refinement:              0.902s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          926
  Total lines:            1762
  Line coverage:          0.526
  Visited conditions:     532
  Total conditions:       762
  Condition coverage:     0.698

CPAchecker general statistics
-----------------------------
Number of program locations:     2312
Number of CFA edges:             2814
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             19514
  Number of reached locations:   1009 (44%)
    Avg states per location:     19
    Max states per location:     125 (at node N39)
  Number of reached functions:   40 (51%)
  Number of partitions:          19512
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2070 (before line 2605), Function timeShift called from node N1001, stack depth 5 [2bc3066f], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          4.102s
  Time for loading CPAs:          0.760s
  Time for loading parser:        0.630s
  Time for CFA construction:      2.494s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.821s
    Time for CFA sanity check:    0.240s
    Time for post-processing:     0.563s
      Time for var class.:        0.313s
Time for Analysis:               25.645s
CPU time for analysis:           25.650s
Total time for CPAchecker:       29.751s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.443s

Time for Garbage Collector:       2.336s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                200MB (   190 MiB) max;     91MB (    86 MiB) avg;    222MB (   212 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           242MB (   231 MiB) max;    163MB (   156 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
