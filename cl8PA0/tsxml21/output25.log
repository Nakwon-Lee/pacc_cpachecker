scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4hgmrqav/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7555 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7356 (97%)
  Because of loop head:            184 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (0%)
  Times precision was empty:       6025 (80%)
  Times precision was {false}:     126 (2%)
  Times result was cached:         1165 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      239 (3%)
  Times result was 'false':        283 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         86355
  BDD entailment checks:           1005
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          21
Number of abstraction locations:          66
Max number of predicates per location:    10
Avg number of predicates per location:    6
Total predicates per abstraction:         7547
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 20.68
Number of irrelevant predicates:          3803 (50%)
Number of preds handled by boolean abs:   982 (13%)
  Total number of models for allsat:      973
  Max number of models for allsat:        64
  Avg number of models for allsat:        4.07

Time for post operator:                  6.311s
  Time for path formula creation:        6.019s
Time for strengthen operator:            0.377s
Time for prec operator:                  3.177s
  Time for abstraction:                  2.505s (Max:     0.031s, Count: 7555)
    Boolean abstraction:                 0.637s
    Solving time:                        0.441s (Max:     0.013s)
    Model enumeration time:              0.118s
    Time for BDD construction:           0.120s (Max:     0.013s)
Time for merge operator:                 1.121s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.559s

Number of path formula cache hits:   204096 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.247s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               956
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         988 (count: 9473, min: 0, max: 179, avg: 0.10)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.883s
  Time for transition matches:                         0.374s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       199502 (count: 199502, min: 1, max: 1, avg: 1.00) [1 x 199502]

CPA algorithm statistics
------------------------
Number of iterations:            149339
Max size of waitlist:            117
Average size of waitlist:        64
Number of computed successors:   193901
Max successors for one state:    2
Number of times merged:          42675
Number of times stopped:         43596
Number of times breaked:         15

Total time for CPA algorithm:        22.992s (Max:     9.176s)
  Time for choose from waitlist:      0.217s
  Time for precision adjustment:      5.607s
  Time for transfer relation:        11.723s
  Time for merge operator:            2.497s
  Time for stop operator:             0.698s
  Time for adding to reached set:     0.613s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 930 (count: 15, min: 59, max: 65, avg: 62.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.575s
  Counterexample analysis:                             0.737s (Max:     0.072s, Calls: 15)
    Refinement sat check:                              0.408s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.033s
  ARG update:                                          0.688s

Length of refined path (in blocks):                     800 (count: 15, min: 45, max: 58, avg: 53.33)
Number of affected states:                              366 (count: 15, min: 1, max: 57, avg: 24.40)
Length (states) of path with itp 'true':                419 (count: 15, min: 0, max: 54, avg: 27.93)
Length (states) of path with itp non-trivial itp:       366 (count: 15, min: 1, max: 57, avg: 24.40)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 15, min: 0, max: 3, avg: 0.93)
Equal non-trivial interpolants along paths:             337 (count: 15, min: 0, max: 54, avg: 22.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 25374
Max. size of reached set after ref.:  25245
Avg. size of reached set before ref.: 21685.80
Avg. size of reached set after ref.:  12004.13

Total time for CEGAR algorithm:      25.881s
Time for refinements:                 2.552s
Average time for refinement:          0.170s
Max time for refinement:              0.300s

Code Coverage
-----------------------------
  Function coverage:      0.461
  Visited lines:          592
  Total lines:            1712
  Line coverage:          0.346
  Visited conditions:     344
  Total conditions:       730
  Condition coverage:     0.471

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             4798
  Number of reached locations:   663 (30%)
    Avg states per location:     7
    Max states per location:     39 (at node N434)
  Number of reached functions:   35 (46%)
  Number of partitions:          4791
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [14105cdd], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        34

Time for analysis setup:          4.374s
  Time for loading CPAs:          0.883s
  Time for loading parser:        0.693s
  Time for CFA construction:      2.554s
    Time for parsing file(s):     0.711s
    Time for AST to CFA:          0.818s
    Time for CFA sanity check:    0.259s
    Time for post-processing:     0.573s
      Time for var class.:        0.317s
Time for Analysis:               25.881s
CPU time for analysis:           25.880s
Total time for CPAchecker:       30.263s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.220s

Time for Garbage Collector:       1.397s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     62MB (    59 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
