scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ujzheon6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4018 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3901 (97%)
  Because of loop head:            108 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       3761 (94%)
  Times precision was {false}:     93 (2%)
  Times result was cached:         109 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      55 (1%)
  Times result was 'false':        27 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         61861
  BDD entailment checks:           371
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          7
Number of abstraction locations:          43
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         317
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.14
Number of irrelevant predicates:          158 (50%)
Number of preds handled by boolean abs:   80 (25%)
  Total number of models for allsat:      59
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  8.061s
  Time for path formula creation:        7.840s
Time for strengthen operator:            0.544s
Time for prec operator:                  1.469s
  Time for abstraction:                  0.808s (Max:     0.031s, Count: 4018)
    Boolean abstraction:                 0.142s
    Solving time:                        0.155s (Max:     0.012s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.015s (Max:     0.008s)
Time for merge operator:                 1.825s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.162s

Number of path formula cache hits:   91179 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.490s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         151 (count: 4968, min: 0, max: 56, avg: 0.03)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.917s
  Time for transition matches:                         0.363s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       138030 (count: 138030, min: 1, max: 1, avg: 1.00) [1 x 138030]

CPA algorithm statistics
------------------------
Number of iterations:            104408
Max size of waitlist:            108
Average size of waitlist:        65
Number of computed successors:   135816
Max successors for one state:    2
Number of times merged:          30745
Number of times stopped:         31112
Number of times breaked:         9

Total time for CPA algorithm:        23.440s (Max:    11.330s)
  Time for choose from waitlist:      0.238s
  Time for precision adjustment:      4.105s
  Time for transfer relation:        12.894s
  Time for merge operator:            3.189s
  Time for stop operator:             0.731s
  Time for adding to reached set:     0.692s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 622 (count: 9, min: 67, max: 75, avg: 69.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.327s
  Counterexample analysis:                             0.620s (Max:     0.103s, Calls: 9)
    Refinement sat check:                              0.427s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.003s
  ARG update:                                          0.613s

Length of refined path (in blocks):                     497 (count: 9, min: 40, max: 64, avg: 55.22)
Number of affected states:                               86 (count: 9, min: 1, max: 40, avg: 9.56)
Length (states) of path with itp 'true':                402 (count: 9, min: 0, max: 62, avg: 44.67)
Length (states) of path with itp non-trivial itp:        86 (count: 9, min: 1, max: 40, avg: 9.56)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 9, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:              76 (count: 9, min: 0, max: 39, avg: 8.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 29027
Max. size of reached set after ref.:  28768
Avg. size of reached set before ref.: 28809.33
Avg. size of reached set after ref.:  19217.56

Total time for CEGAR algorithm:      25.684s
Time for refinements:                 1.972s
Average time for refinement:          0.219s
Max time for refinement:              0.364s

Code Coverage
-----------------------------
  Function coverage:      0.447
  Visited lines:          619
  Total lines:            1712
  Line coverage:          0.362
  Visited conditions:     364
  Total conditions:       730
  Condition coverage:     0.499

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             18351
  Number of reached locations:   705 (31%)
    Avg states per location:     26
    Max states per location:     77 (at node N542)
  Number of reached functions:   34 (45%)
  Number of partitions:          18350
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [374472fe], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        91

Time for analysis setup:          4.561s
  Time for loading CPAs:          0.951s
  Time for loading parser:        0.724s
  Time for CFA construction:      2.632s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.814s
    Time for CFA sanity check:    0.267s
    Time for post-processing:     0.634s
      Time for var class.:        0.348s
Time for Analysis:               25.684s
CPU time for analysis:           25.680s
Total time for CPAchecker:       30.261s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.449s

Time for Garbage Collector:       1.426s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                126MB (   120 MiB) max;     64MB (    61 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
