scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zibcr2um/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5111 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5046 (99%)
  Because of loop head:            60 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       4822 (94%)
  Times precision was {false}:     37 (1%)
  Times result was cached:         161 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      91 (2%)
  Times result was 'false':        70 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         58564
  BDD entailment checks:           792
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          42
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         293
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.29
Number of irrelevant predicates:          54 (18%)
Number of preds handled by boolean abs:   94 (32%)
  Total number of models for allsat:      115
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.26

Time for post operator:                  8.426s
  Time for path formula creation:        8.147s
Time for strengthen operator:            0.438s
Time for prec operator:                  1.638s
  Time for abstraction:                  1.009s (Max:     0.039s, Count: 5111)
    Boolean abstraction:                 0.267s
    Solving time:                        0.219s (Max:     0.013s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.025s (Max:     0.009s)
Time for merge operator:                 1.567s
Time for coverage check:                 0.096s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     0.239s

Number of path formula cache hits:   93732 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.585s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         193 (count: 6370, min: 0, max: 60, avg: 0.03)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.734s
  Time for transition matches:                         0.318s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       133687 (count: 133687, min: 1, max: 1, avg: 1.00) [1 x 133687]

CPA algorithm statistics
------------------------
Number of iterations:            101028
Max size of waitlist:            39
Average size of waitlist:        15
Number of computed successors:   130784
Max successors for one state:    2
Number of times merged:          28886
Number of times stopped:         29675
Number of times breaked:         5

Total time for CPA algorithm:        23.199s (Max:    14.633s)
  Time for choose from waitlist:      0.252s
  Time for precision adjustment:      3.784s
  Time for transfer relation:        13.475s
  Time for merge operator:            2.875s
  Time for stop operator:             0.612s
  Time for adding to reached set:     0.602s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 347 (count: 5, min: 67, max: 75, avg: 69.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.077s
  Counterexample analysis:                             0.359s (Max:     0.110s, Calls: 5)
    Refinement sat check:                              0.239s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.003s
  ARG update:                                          0.655s

Length of refined path (in blocks):                     267 (count: 5, min: 40, max: 64, avg: 53.40)
Number of affected states:                               43 (count: 5, min: 1, max: 39, avg: 8.60)
Length (states) of path with itp 'true':                219 (count: 5, min: 0, max: 62, avg: 43.80)
Length (states) of path with itp non-trivial itp:        43 (count: 5, min: 1, max: 39, avg: 8.60)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 5, min: 0, max: 1, avg: 0.20)
Equal non-trivial interpolants along paths:              37 (count: 5, min: 0, max: 37, avg: 7.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 43620
Max. size of reached set after ref.:  39838
Avg. size of reached set before ref.: 40718.40
Avg. size of reached set after ref.:  23991.00

Total time for CEGAR algorithm:      24.978s
Time for refinements:                 1.589s
Average time for refinement:          0.317s
Max time for refinement:              0.509s

Code Coverage
-----------------------------
  Function coverage:      0.539
  Visited lines:          904
  Total lines:            1712
  Line coverage:          0.528
  Visited conditions:     520
  Total conditions:       730
  Condition coverage:     0.712

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             17402
  Number of reached locations:   993 (44%)
    Avg states per location:     17
    Max states per location:     124 (at node N510)
  Number of reached functions:   41 (54%)
  Number of partitions:          17401
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [11ebe278], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          4.761s
  Time for loading CPAs:          1.032s
  Time for loading parser:        0.756s
  Time for CFA construction:      2.760s
    Time for parsing file(s):     0.812s
    Time for AST to CFA:          0.883s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.574s
      Time for var class.:        0.315s
Time for Analysis:               24.978s
CPU time for analysis:           24.970s
Total time for CPAchecker:       29.747s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.441s

Time for Garbage Collector:       1.442s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   118 MiB) max;     65MB (    62 MiB) avg;    138MB (   132 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           159MB (   152 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
