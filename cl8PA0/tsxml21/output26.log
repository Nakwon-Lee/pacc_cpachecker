scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g762rgoo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5117 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4807 (94%)
  Because of loop head:            287 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (0%)
  Times precision was empty:       4694 (92%)
  Times precision was {false}:     120 (2%)
  Times result was cached:         257 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      46 (1%)
  Times result was 'false':        105 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         51966
  BDD entailment checks:           952
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          48
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         459
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 2.77
Number of irrelevant predicates:          341 (74%)
Number of preds handled by boolean abs:   53 (12%)
  Total number of models for allsat:      46
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  8.517s
  Time for path formula creation:        8.263s
Time for strengthen operator:            0.503s
Time for prec operator:                  1.437s
  Time for abstraction:                  0.928s (Max:     0.022s, Count: 5117)
    Boolean abstraction:                 0.073s
    Solving time:                        0.157s (Max:     0.011s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 1.610s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.161s

Number of path formula cache hits:   62589 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.871s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         120 (count: 6571, min: 0, max: 56, avg: 0.02)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.757s
  Time for transition matches:                         0.263s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       121773 (count: 121773, min: 1, max: 1, avg: 1.00) [1 x 121773]

CPA algorithm statistics
------------------------
Number of iterations:            91692
Max size of waitlist:            135
Average size of waitlist:        81
Number of computed successors:   118431
Max successors for one state:    2
Number of times merged:          25507
Number of times stopped:         26449
Number of times breaked:         23

Total time for CPA algorithm:        21.297s (Max:     8.702s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:      3.282s
  Time for transfer relation:        12.566s
  Time for merge operator:            2.781s
  Time for stop operator:             0.506s
  Time for adding to reached set:     0.656s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                1504 (count: 23, min: 59, max: 72, avg: 65.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.392s
  Counterexample analysis:                             0.950s (Max:     0.076s, Calls: 23)
    Refinement sat check:                              0.627s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.020s
  ARG update:                                          0.318s

Length of refined path (in blocks):                    1371 (count: 23, min: 52, max: 68, avg: 59.61)
Number of affected states:                               73 (count: 23, min: 1, max: 51, avg: 3.17)
Length (states) of path with itp 'true':               1275 (count: 23, min: 0, max: 66, avg: 55.43)
Length (states) of path with itp non-trivial itp:        73 (count: 23, min: 1, max: 51, avg: 3.17)
Length (states) of path with itp 'false':                23 (count: 23, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 23, min: 0, max: 1, avg: 0.04)
Equal non-trivial interpolants along paths:              49 (count: 23, min: 0, max: 49, avg: 2.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 57770
Max. size of reached set after ref.:  57641
Avg. size of reached set before ref.: 42674.09
Avg. size of reached set after ref.:  39982.22

Total time for CEGAR algorithm:      25.782s
Time for refinements:                 3.304s
Average time for refinement:          0.143s
Max time for refinement:              0.344s

Code Coverage
-----------------------------
  Function coverage:      0.605
  Visited lines:          1061
  Total lines:            1712
  Line coverage:          0.620
  Visited conditions:     612
  Total conditions:       730
  Condition coverage:     0.838

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             29964
  Number of reached locations:   1187 (53%)
    Avg states per location:     25
    Max states per location:     127 (at node N511)
  Number of reached functions:   46 (61%)
  Number of partitions:          29961
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [7f5ab12a], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        95

Time for analysis setup:          4.485s
  Time for loading CPAs:          0.928s
  Time for loading parser:        0.735s
  Time for CFA construction:      2.620s
    Time for parsing file(s):     0.762s
    Time for AST to CFA:          0.768s
    Time for CFA sanity check:    0.261s
    Time for post-processing:     0.629s
      Time for var class.:        0.372s
Time for Analysis:               25.782s
CPU time for analysis:           25.780s
Total time for CPAchecker:       30.271s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.637s

Time for Garbage Collector:       1.500s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                119MB (   113 MiB) max;     65MB (    62 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
