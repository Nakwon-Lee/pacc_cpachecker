scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rho7bh8t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16441 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14593 (89%)
  Because of loop head:            1759 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         89 (1%)
  Times precision was empty:       11508 (70%)
  Times precision was {false}:     215 (1%)
  Times result was cached:         4370 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      348 (2%)
  Times result was 'false':        243 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         52570
  BDD entailment checks:           4052
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          20
Number of abstraction locations:          66
Max number of predicates per location:    9
Avg number of predicates per location:    6
Total predicates per abstraction:         17515
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 31.11
Number of irrelevant predicates:          10770 (61%)
Number of preds handled by boolean abs:   1184 (7%)
  Total number of models for allsat:      800
  Max number of models for allsat:        63
  Avg number of models for allsat:        2.30

Time for post operator:                  3.493s
  Time for path formula creation:        3.227s
Time for strengthen operator:            0.329s
Time for prec operator:                  4.996s
  Time for abstraction:                  4.288s (Max:     0.042s, Count: 16441)
    Boolean abstraction:                 0.903s
    Solving time:                        0.623s (Max:     0.016s)
    Model enumeration time:              0.133s
    Time for BDD construction:           0.166s (Max:     0.012s)
Time for merge operator:                 0.443s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):     0.756s

Number of path formula cache hits:   183307 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.576s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1141
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1080 (count: 18940, min: 0, max: 174, avg: 0.06)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.737s
  Time for transition matches:                         0.279s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       175416 (count: 175416, min: 1, max: 1, avg: 1.00) [1 x 175416]

CPA algorithm statistics
------------------------
Number of iterations:            125491
Max size of waitlist:            138
Average size of waitlist:        66
Number of computed successors:   155096
Max successors for one state:    2
Number of times merged:          24259
Number of times stopped:         28005
Number of times breaked:         89

Total time for CPA algorithm:        19.233s (Max:     3.917s)
  Time for choose from waitlist:      0.245s
  Time for precision adjustment:      7.275s
  Time for transfer relation:         7.923s
  Time for merge operator:            1.201s
  Time for stop operator:             0.617s
  Time for adding to reached set:     0.640s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   89
Avg. length of target path (in blocks):                7145 (count: 89, min: 59, max: 124, avg: 80.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.742s
  Counterexample analysis:                             3.883s (Max:     0.081s, Calls: 89)
    Refinement sat check:                              2.490s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.080s
  ARG update:                                          0.565s

Length of refined path (in blocks):                    6581 (count: 89, min: 40, max: 120, avg: 73.94)
Number of affected states:                              868 (count: 89, min: 1, max: 92, avg: 9.75)
Length (states) of path with itp 'true':               5624 (count: 89, min: 0, max: 118, avg: 63.19)
Length (states) of path with itp non-trivial itp:       868 (count: 89, min: 1, max: 92, avg: 9.75)
Length (states) of path with itp 'false':                89 (count: 89, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          17 (count: 89, min: 0, max: 3, avg: 0.19)
Equal non-trivial interpolants along paths:             762 (count: 89, min: 0, max: 90, avg: 8.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                89
Number of successful refinements:     89
Number of failed refinements:         0
Max. size of reached set before ref.: 11900
Max. size of reached set after ref.:  11794
Avg. size of reached set before ref.: 9184.29
Avg. size of reached set after ref.:  7775.12

Total time for CEGAR algorithm:      25.992s
Time for refinements:                 6.122s
Average time for refinement:          0.068s
Max time for refinement:              0.147s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          497
  Total lines:            1712
  Line coverage:          0.290
  Visited conditions:     234
  Total conditions:       730
  Condition coverage:     0.321

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             1433
  Number of reached locations:   523 (23%)
    Avg states per location:     2
    Max states per location:     15 (at node N435)
  Number of reached functions:   39 (51%)
  Number of partitions:          1431
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [c6b14dc], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          4.274s
  Time for loading CPAs:          0.900s
  Time for loading parser:        0.746s
  Time for CFA construction:      2.417s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          0.690s
    Time for CFA sanity check:    0.249s
    Time for post-processing:     0.617s
      Time for var class.:        0.381s
Time for Analysis:               25.992s
CPU time for analysis:           25.990s
Total time for CPAchecker:       30.270s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.096s

Time for Garbage Collector:       0.948s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   113 MiB) max;     59MB (    56 MiB) avg;    124MB (   118 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
