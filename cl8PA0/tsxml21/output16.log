scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sayr0xqv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4372 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4270 (98%)
  Because of loop head:            92 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       4062 (93%)
  Times precision was {false}:     101 (2%)
  Times result was cached:         167 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42 (1%)
  Times result was 'false':        74 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         49993
  BDD entailment checks:           613
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          49
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         328
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 2.29
Number of irrelevant predicates:          250 (76%)
Number of preds handled by boolean abs:   46 (14%)
  Total number of models for allsat:      42
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  8.231s
  Time for path formula creation:        7.907s
Time for strengthen operator:            0.358s
Time for prec operator:                  1.667s
  Time for abstraction:                  1.021s (Max:     0.040s, Count: 4372)
    Boolean abstraction:                 0.088s
    Solving time:                        0.215s (Max:     0.014s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.023s (Max:     0.008s)
Time for merge operator:                 1.584s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     0.222s

Number of path formula cache hits:   75084 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.163s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         113 (count: 5477, min: 0, max: 74, avg: 0.02)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.795s
  Time for transition matches:                         0.347s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       114230 (count: 114230, min: 1, max: 1, avg: 1.00) [1 x 114230]

CPA algorithm statistics
------------------------
Number of iterations:            86516
Max size of waitlist:            41
Average size of waitlist:        17
Number of computed successors:   111891
Max successors for one state:    2
Number of times merged:          24690
Number of times stopped:         25293
Number of times breaked:         10

Total time for CPA algorithm:        22.978s (Max:    15.150s)
  Time for choose from waitlist:      0.308s
  Time for precision adjustment:      3.601s
  Time for transfer relation:        13.129s
  Time for merge operator:            2.909s
  Time for stop operator:             0.604s
  Time for adding to reached set:     1.005s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 600 (count: 10, min: 59, max: 61, avg: 60.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.881s
  Counterexample analysis:                             0.477s (Max:     0.080s, Calls: 10)
    Refinement sat check:                              0.299s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.008s
  ARG update:                                          0.333s

Length of refined path (in blocks):                     543 (count: 10, min: 52, max: 56, avg: 54.30)
Number of affected states:                               60 (count: 10, min: 1, max: 51, avg: 6.00)
Length (states) of path with itp 'true':                473 (count: 10, min: 0, max: 54, avg: 47.30)
Length (states) of path with itp non-trivial itp:        60 (count: 10, min: 1, max: 51, avg: 6.00)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 10, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:              49 (count: 10, min: 0, max: 49, avg: 4.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 45079
Max. size of reached set after ref.:  45002
Avg. size of reached set before ref.: 41087.60
Avg. size of reached set after ref.:  36940.70

Total time for CEGAR algorithm:      25.394s
Time for refinements:                 1.886s
Average time for refinement:          0.188s
Max time for refinement:              0.380s

Code Coverage
-----------------------------
  Function coverage:      0.605
  Visited lines:          1051
  Total lines:            1712
  Line coverage:          0.614
  Visited conditions:     608
  Total conditions:       730
  Condition coverage:     0.833

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             45056
  Number of reached locations:   1178 (53%)
    Avg states per location:     38
    Max states per location:     154 (at node N590)
  Number of reached functions:   46 (61%)
  Number of partitions:          45053
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [3ddc5682], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          4.256s
  Time for loading CPAs:          0.968s
  Time for loading parser:        0.698s
  Time for CFA construction:      2.376s
    Time for parsing file(s):     0.637s
    Time for AST to CFA:          0.689s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.613s
      Time for var class.:        0.339s
Time for Analysis:               25.394s
CPU time for analysis:           25.400s
Total time for CPAchecker:       29.654s
Total CPU time for CPAchecker:   29.640s
Time for statistics:              0.790s

Time for Garbage Collector:       1.485s (in 43 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     66MB (    62 MiB) avg;    135MB (   129 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           155MB (   148 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
