scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i2a2f_y5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4466 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4177 (94%)
  Because of loop head:            268 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (0%)
  Times precision was empty:       4138 (93%)
  Times precision was {false}:     97 (2%)
  Times result was cached:         186 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      45 (1%)
  Times result was 'false':        79 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         45332
  BDD entailment checks:           860
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          47
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         354
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 2.49
Number of irrelevant predicates:          247 (70%)
Number of preds handled by boolean abs:   52 (15%)
  Total number of models for allsat:      44
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                  7.734s
  Time for path formula creation:        7.506s
Time for strengthen operator:            0.321s
Time for prec operator:                  1.502s
  Time for abstraction:                  0.896s (Max:     0.022s, Count: 4466)
    Boolean abstraction:                 0.082s
    Solving time:                        0.201s (Max:     0.014s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.006s (Max:     0.001s)
Time for merge operator:                 1.653s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     0.205s

Number of path formula cache hits:   45634 (40%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.355s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         118 (count: 5797, min: 0, max: 60, avg: 0.02)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.814s
  Time for transition matches:                         0.342s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       106405 (count: 106405, min: 1, max: 1, avg: 1.00) [1 x 106405]

CPA algorithm statistics
------------------------
Number of iterations:            80045
Max size of waitlist:            135
Average size of waitlist:        78
Number of computed successors:   103402
Max successors for one state:    2
Number of times merged:          22236
Number of times stopped:         23086
Number of times breaked:         21

Total time for CPA algorithm:        21.071s (Max:    10.001s)
  Time for choose from waitlist:      0.269s
  Time for precision adjustment:      3.267s
  Time for transfer relation:        11.791s
  Time for merge operator:            2.933s
  Time for stop operator:             0.563s
  Time for adding to reached set:     0.745s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                1384 (count: 21, min: 59, max: 72, avg: 65.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.354s
  Counterexample analysis:                             0.848s (Max:     0.069s, Calls: 21)
    Refinement sat check:                              0.611s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.021s
  ARG update:                                          0.406s

Length of refined path (in blocks):                    1263 (count: 21, min: 52, max: 68, avg: 60.14)
Number of affected states:                               71 (count: 21, min: 1, max: 51, avg: 3.38)
Length (states) of path with itp 'true':               1171 (count: 21, min: 0, max: 66, avg: 55.76)
Length (states) of path with itp non-trivial itp:        71 (count: 21, min: 1, max: 51, avg: 3.38)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 21, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:              49 (count: 21, min: 0, max: 49, avg: 2.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 57770
Max. size of reached set after ref.:  57641
Avg. size of reached set before ref.: 44141.95
Avg. size of reached set after ref.:  41211.81

Total time for CEGAR algorithm:      25.248s
Time for refinements:                 3.051s
Average time for refinement:          0.145s
Max time for refinement:              0.448s

Code Coverage
-----------------------------
  Function coverage:      0.592
  Visited lines:          1028
  Total lines:            1712
  Line coverage:          0.600
  Visited conditions:     596
  Total conditions:       730
  Condition coverage:     0.816

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             18704
  Number of reached locations:   1142 (51%)
    Avg states per location:     16
    Max states per location:     84 (at node N511)
  Number of reached functions:   45 (59%)
  Number of partitions:          18701
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [5b8f29ed], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        102

Time for analysis setup:          4.932s
  Time for loading CPAs:          0.943s
  Time for loading parser:        0.822s
  Time for CFA construction:      2.957s
    Time for parsing file(s):     0.861s
    Time for AST to CFA:          0.901s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.710s
      Time for var class.:        0.382s
Time for Analysis:               25.248s
CPU time for analysis:           25.240s
Total time for CPAchecker:       30.185s
Total CPU time for CPAchecker:   30.170s
Time for statistics:              0.436s

Time for Garbage Collector:       1.358s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    30 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8071MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
