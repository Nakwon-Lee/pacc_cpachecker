scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_achchq7w/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5354 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5237 (98%)
  Because of loop head:            104 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (0%)
  Times precision was empty:       4775 (89%)
  Times precision was {false}:     106 (2%)
  Times result was cached:         364 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      109 (2%)
  Times result was 'false':        142 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         59479
  BDD entailment checks:           809
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          11
Number of abstraction locations:          51
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         1833
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 8.53
Number of irrelevant predicates:          1091 (60%)
Number of preds handled by boolean abs:   292 (16%)
  Total number of models for allsat:      252
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.31

Time for post operator:                  7.295s
  Time for path formula creation:        7.096s
Time for strengthen operator:            0.396s
Time for prec operator:                  2.251s
  Time for abstraction:                  1.601s (Max:     0.033s, Count: 5354)
    Boolean abstraction:                 0.392s
    Solving time:                        0.368s (Max:     0.014s)
    Model enumeration time:              0.030s
    Time for BDD construction:           0.062s (Max:     0.009s)
Time for merge operator:                 1.597s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     0.398s

Number of path formula cache hits:   102560 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.317s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               274
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         277 (count: 6893, min: 0, max: 82, avg: 0.04)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.868s
  Time for transition matches:                         0.294s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       136401 (count: 136401, min: 1, max: 1, avg: 1.00) [1 x 136401]

CPA algorithm statistics
------------------------
Number of iterations:            103141
Max size of waitlist:            41
Average size of waitlist:        17
Number of computed successors:   133428
Max successors for one state:    2
Number of times merged:          29335
Number of times stopped:         30126
Number of times breaked:         13

Total time for CPA algorithm:        22.484s (Max:    13.169s)
  Time for choose from waitlist:      0.209s
  Time for precision adjustment:      4.457s
  Time for transfer relation:        11.994s
  Time for merge operator:            2.982s
  Time for stop operator:             0.571s
  Time for adding to reached set:     0.594s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 784 (count: 13, min: 59, max: 62, avg: 60.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.136s
  Counterexample analysis:                             0.484s (Max:     0.064s, Calls: 13)
    Refinement sat check:                              0.304s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.007s
  ARG update:                                          0.560s

Length of refined path (in blocks):                     709 (count: 13, min: 52, max: 58, avg: 54.54)
Number of affected states:                              119 (count: 13, min: 1, max: 57, avg: 9.15)
Length (states) of path with itp 'true':                577 (count: 13, min: 0, max: 54, avg: 44.38)
Length (states) of path with itp non-trivial itp:       119 (count: 13, min: 1, max: 57, avg: 9.15)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 13, min: 0, max: 1, avg: 0.15)
Equal non-trivial interpolants along paths:             104 (count: 13, min: 0, max: 55, avg: 8.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 45086
Max. size of reached set after ref.:  45002
Avg. size of reached set before ref.: 42006.46
Avg. size of reached set after ref.:  35330.31

Total time for CEGAR algorithm:      25.459s
Time for refinements:                 2.359s
Average time for refinement:          0.181s
Max time for refinement:              0.377s

Code Coverage
-----------------------------
  Function coverage:      0.539
  Visited lines:          906
  Total lines:            1712
  Line coverage:          0.529
  Visited conditions:     520
  Total conditions:       730
  Condition coverage:     0.712

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             16371
  Number of reached locations:   995 (44%)
    Avg states per location:     16
    Max states per location:     125 (at node N510)
  Number of reached functions:   41 (54%)
  Number of partitions:          16369
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [45261025], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          4.294s
  Time for loading CPAs:          0.826s
  Time for loading parser:        0.763s
  Time for CFA construction:      2.495s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.704s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     0.645s
      Time for var class.:        0.361s
Time for Analysis:               25.459s
CPU time for analysis:           25.470s
Total time for CPAchecker:       29.759s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.481s

Time for Garbage Collector:       1.501s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                126MB (   120 MiB) max;     67MB (    64 MiB) avg;    138MB (   131 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           157MB (   150 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
