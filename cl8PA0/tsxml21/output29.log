scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_eup_9xvx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8207 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7799 (95%)
  Because of loop head:            373 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       1405 (17%)
  Times precision was {false}:     249 (3%)
  Times result was cached:         5956 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      597 (7%)
  Times result was 'false':        819 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         18114
  BDD entailment checks:           530
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          15
Number of abstraction locations:          91
Max number of predicates per location:    8
Avg number of predicates per location:    6
Total predicates per abstraction:         42867
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 50.67
Number of irrelevant predicates:          17844 (42%)
Number of preds handled by boolean abs:   2413 (6%)
  Total number of models for allsat:      1272
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.13

Time for post operator:                  2.474s
  Time for path formula creation:        2.407s
Time for strengthen operator:            0.133s
Time for prec operator:                  6.368s
  Time for abstraction:                  6.016s (Max:     0.026s, Count: 8207)
    Boolean abstraction:                 1.358s
    Solving time:                        0.993s (Max:     0.016s)
    Model enumeration time:              0.158s
    Time for BDD construction:           0.216s (Max:     0.012s)
Time for merge operator:                 0.296s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     1.151s

Number of path formula cache hits:   60051 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.295s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               719
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1325 (count: 7216, min: 0, max: 410, avg: 0.18)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.342s
Automaton transfers with branching:                0
Automaton transfer successors:                        68402 (count: 68402, min: 1, max: 1, avg: 1.00) [1 x 68402]

CPA algorithm statistics
------------------------
Number of iterations:            47055
Max size of waitlist:            166
Average size of waitlist:        89
Number of computed successors:   59021
Max successors for one state:    2
Number of times merged:          8792
Number of times stopped:         9172
Number of times breaked:         35

Total time for CPA algorithm:        13.696s (Max:     2.487s)
  Time for choose from waitlist:      0.115s
  Time for precision adjustment:      7.196s
  Time for transfer relation:         4.561s
  Time for merge operator:            0.703s
  Time for stop operator:             0.204s
  Time for adding to reached set:     0.252s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):               12143 (count: 35, min: 292, max: 361, avg: 346.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.764s
  Counterexample analysis:                            10.058s (Max:     0.485s, Calls: 35)
    Refinement sat check:                              3.802s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.027s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.178s
  Precision update:                                    0.076s
  ARG update:                                          0.223s

Length of refined path (in blocks):                   10547 (count: 34, min: 54, max: 355, avg: 310.21)
Number of affected states:                             3185 (count: 34, min: 1, max: 354, avg: 93.68)
Length (states) of path with itp 'true':               7328 (count: 34, min: 0, max: 349, avg: 215.53)
Length (states) of path with itp non-trivial itp:      3185 (count: 34, min: 1, max: 354, avg: 93.68)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 34, min: 0, max: 3, avg: 0.38)
Equal non-trivial interpolants along paths:            3138 (count: 34, min: 0, max: 351, avg: 92.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 4073
Max. size of reached set after ref.:  3942
Avg. size of reached set before ref.: 3527.29
Avg. size of reached set after ref.:  2188.94

Total time for CEGAR algorithm:      25.309s
Time for refinements:                11.478s
Average time for refinement:          0.327s
Max time for refinement:              0.549s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          679
  Total lines:            1712
  Line coverage:          0.397
  Visited conditions:     344
  Total conditions:       730
  Condition coverage:     0.471

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             3695
  Number of reached locations:   703 (31%)
    Avg states per location:     5
    Max states per location:     38 (at node N511)
  Number of reached functions:   40 (53%)
  Number of partitions:          3690
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1155 (before lines 1444-1472), Function cleanup called from node N1297, stack depth 4 [6df51259], stack [main, runTest, test, cleanup]])
  Number of target states:       1
  Size of final wait list        150

Time for analysis setup:          4.444s
  Time for loading CPAs:          0.984s
  Time for loading parser:        0.700s
  Time for CFA construction:      2.549s
    Time for parsing file(s):     0.751s
    Time for AST to CFA:          0.696s
    Time for CFA sanity check:    0.276s
    Time for post-processing:     0.643s
      Time for var class.:        0.352s
Time for Analysis:               25.309s
CPU time for analysis:           25.300s
Total time for CPAchecker:       29.758s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.215s

Time for Garbage Collector:       0.480s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     45MB (    43 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
