scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jkt6_hfl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9122 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8660 (95%)
  Because of loop head:            423 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       1496 (16%)
  Times precision was {false}:     249 (3%)
  Times result was cached:         6770 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      607 (7%)
  Times result was 'false':        918 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         20221
  BDD entailment checks:           611
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          15
Number of abstraction locations:          92
Max number of predicates per location:    8
Avg number of predicates per location:    6
Total predicates per abstraction:         48204
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 56.31
Number of irrelevant predicates:          20153 (42%)
Number of preds handled by boolean abs:   2458 (5%)
  Total number of models for allsat:      1311
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.16

Time for post operator:                  2.405s
  Time for path formula creation:        2.294s
Time for strengthen operator:            0.189s
Time for prec operator:                  6.039s
  Time for abstraction:                  5.746s (Max:     0.025s, Count: 9122)
    Boolean abstraction:                 1.121s
    Solving time:                        0.805s (Max:     0.013s)
    Model enumeration time:              0.161s
    Time for BDD construction:           0.107s (Max:     0.012s)
Time for merge operator:                 0.249s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.966s

Number of path formula cache hits:   68248 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.160s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               758
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1345 (count: 7486, min: 0, max: 410, avg: 0.18)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.441s
Automaton transfers with branching:                0
Automaton transfer successors:                        76192 (count: 76192, min: 1, max: 1, avg: 1.00) [1 x 76192]

CPA algorithm statistics
------------------------
Number of iterations:            52460
Max size of waitlist:            166
Average size of waitlist:        90
Number of computed successors:   65799
Max successors for one state:    2
Number of times merged:          9805
Number of times stopped:         10243
Number of times breaked:         39

Total time for CPA algorithm:        13.422s (Max:     2.439s)
  Time for choose from waitlist:      0.106s
  Time for precision adjustment:      6.871s
  Time for transfer relation:         4.665s
  Time for merge operator:            0.623s
  Time for stop operator:             0.239s
  Time for adding to reached set:     0.261s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):               13578 (count: 39, min: 292, max: 361, avg: 348.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.967s
  Counterexample analysis:                            11.238s (Max:     0.491s, Calls: 39)
    Refinement sat check:                              4.161s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.050s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.221s
  Precision update:                                    0.066s
  ARG update:                                          0.239s

Length of refined path (in blocks):                   11834 (count: 38, min: 54, max: 355, avg: 311.42)
Number of affected states:                             3541 (count: 38, min: 1, max: 354, avg: 93.18)
Length (states) of path with itp 'true':               8255 (count: 38, min: 0, max: 349, avg: 217.24)
Length (states) of path with itp non-trivial itp:      3541 (count: 38, min: 1, max: 354, avg: 93.18)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 38, min: 0, max: 3, avg: 0.37)
Equal non-trivial interpolants along paths:            3489 (count: 38, min: 0, max: 351, avg: 91.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 4185
Max. size of reached set after ref.:  4054
Avg. size of reached set before ref.: 3563.79
Avg. size of reached set after ref.:  2219.71

Total time for CEGAR algorithm:      26.220s
Time for refinements:                12.706s
Average time for refinement:          0.325s
Max time for refinement:              0.516s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          679
  Total lines:            1712
  Line coverage:          0.397
  Visited conditions:     344
  Total conditions:       730
  Condition coverage:     0.471

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             3695
  Number of reached locations:   703 (31%)
    Avg states per location:     5
    Max states per location:     38 (at node N511)
  Number of reached functions:   40 (53%)
  Number of partitions:          3690
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1155 (before lines 1444-1472), Function cleanup called from node N1297, stack depth 4 [be9505d], stack [main, runTest, test, cleanup]])
  Number of target states:       1
  Size of final wait list        150

Time for analysis setup:          4.042s
  Time for loading CPAs:          0.807s
  Time for loading parser:        0.643s
  Time for CFA construction:      2.434s
    Time for parsing file(s):     0.662s
    Time for AST to CFA:          0.743s
    Time for CFA sanity check:    0.235s
    Time for post-processing:     0.619s
      Time for var class.:        0.368s
Time for Analysis:               26.220s
CPU time for analysis:           26.200s
Total time for CPAchecker:       30.267s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.170s

Time for Garbage Collector:       0.474s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     46MB (    43 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
