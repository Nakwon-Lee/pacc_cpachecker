scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s0mns1bz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4462 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4031 (90%)
  Because of loop head:            404 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (1%)
  Times precision was empty:       1758 (39%)
  Times precision was {false}:     182 (4%)
  Times result was cached:         2136 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      386 (9%)
  Times result was 'false':        333 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         54637
  BDD entailment checks:           593
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          20
Number of abstraction locations:          72
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         11380
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 20.04
Number of irrelevant predicates:          4725 (42%)
Number of preds handled by boolean abs:   2147 (19%)
  Total number of models for allsat:      760
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.97

Time for post operator:                  6.247s
  Time for path formula creation:        6.006s
Time for strengthen operator:            0.294s
Time for prec operator:                  4.704s
  Time for abstraction:                  4.114s (Max:     0.027s, Count: 4462)
    Boolean abstraction:                 1.117s
    Solving time:                        0.867s (Max:     0.017s)
    Model enumeration time:              0.145s
    Time for BDD construction:           0.169s (Max:     0.014s)
Time for merge operator:                 1.394s
Time for coverage check:                 0.108s
  Time for BDD entailment checks:        0.064s
Total time for SMT solver (w/o itp):     1.012s

Number of path formula cache hits:   103022 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.448s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               934
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1345 (count: 5917, min: 0, max: 195, avg: 0.23)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.727s
  Time for transition matches:                         0.261s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       126999 (count: 126999, min: 1, max: 1, avg: 1.00) [1 x 126999]

CPA algorithm statistics
------------------------
Number of iterations:            94812
Max size of waitlist:            78
Average size of waitlist:        38
Number of computed successors:   123200
Max successors for one state:    2
Number of times merged:          27022
Number of times stopped:         27553
Number of times breaked:         27

Total time for CPA algorithm:        22.011s (Max:     6.281s)
  Time for choose from waitlist:      0.279s
  Time for precision adjustment:      6.446s
  Time for transfer relation:        10.131s
  Time for merge operator:            2.587s
  Time for stop operator:             0.648s
  Time for adding to reached set:     0.417s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                1816 (count: 27, min: 59, max: 75, avg: 67.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.437s
  Counterexample analysis:                             1.652s (Max:     0.104s, Calls: 27)
    Refinement sat check:                              1.124s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.048s
  ARG update:                                          0.540s

Length of refined path (in blocks):                    1461 (count: 27, min: 41, max: 66, avg: 54.11)
Number of affected states:                              666 (count: 27, min: 1, max: 65, avg: 24.67)
Length (states) of path with itp 'true':                768 (count: 27, min: 0, max: 62, avg: 28.44)
Length (states) of path with itp non-trivial itp:       666 (count: 27, min: 1, max: 65, avg: 24.67)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 27, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:             633 (count: 27, min: 0, max: 63, avg: 23.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 11275
Max. size of reached set after ref.:  10838
Avg. size of reached set before ref.: 5707.11
Avg. size of reached set after ref.:  2590.30

Total time for CEGAR algorithm:      25.169s
Time for refinements:                 2.996s
Average time for refinement:          0.110s
Max time for refinement:              0.279s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          671
  Total lines:            1712
  Line coverage:          0.392
  Visited conditions:     382
  Total conditions:       730
  Condition coverage:     0.523

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             11160
  Number of reached locations:   756 (34%)
    Avg states per location:     14
    Max states per location:     48 (at node N591)
  Number of reached functions:   40 (53%)
  Number of partitions:          11158
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [4c9b1955], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        72

Time for analysis setup:          4.557s
  Time for loading CPAs:          0.988s
  Time for loading parser:        0.727s
  Time for CFA construction:      2.652s
    Time for parsing file(s):     0.731s
    Time for AST to CFA:          0.801s
    Time for CFA sanity check:    0.275s
    Time for post-processing:     0.643s
      Time for var class.:        0.357s
Time for Analysis:               25.173s
CPU time for analysis:           25.180s
Total time for CPAchecker:       29.735s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.310s

Time for Garbage Collector:       0.920s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 93MB (    89 MiB) max;     55MB (    52 MiB) avg;    102MB (    97 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
