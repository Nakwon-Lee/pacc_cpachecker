scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9c8hfjik/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7351 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6991 (95%)
  Because of loop head:            329 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       1317 (18%)
  Times precision was {false}:     249 (3%)
  Times result was cached:         5188 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      597 (8%)
  Times result was 'false':        725 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         16280
  BDD entailment checks:           472
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          15
Number of abstraction locations:          90
Max number of predicates per location:    8
Avg number of predicates per location:    6
Total predicates per abstraction:         37869
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 44.76
Number of irrelevant predicates:          15672 (41%)
Number of preds handled by boolean abs:   2413 (6%)
  Total number of models for allsat:      1272
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.13

Time for post operator:                  2.673s
  Time for path formula creation:        2.528s
Time for strengthen operator:            0.178s
Time for prec operator:                  6.531s
  Time for abstraction:                  6.159s (Max:     0.027s, Count: 7351)
    Boolean abstraction:                 1.221s
    Solving time:                        0.934s (Max:     0.017s)
    Model enumeration time:              0.141s
    Time for BDD construction:           0.163s (Max:     0.013s)
Time for merge operator:                 0.263s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     1.075s

Number of path formula cache hits:   52510 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.379s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               719
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1311 (count: 7033, min: 0, max: 408, avg: 0.19)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.316s
Automaton transfers with branching:                0
Automaton transfer successors:                        61373 (count: 61373, min: 1, max: 1, avg: 1.00) [1 x 61373]

CPA algorithm statistics
------------------------
Number of iterations:            42210
Max size of waitlist:            166
Average size of waitlist:        88
Number of computed successors:   52954
Max successors for one state:    2
Number of times merged:          7904
Number of times stopped:         8241
Number of times breaked:         31

Total time for CPA algorithm:        14.396s (Max:     2.473s)
  Time for choose from waitlist:      0.154s
  Time for precision adjustment:      7.401s
  Time for transfer relation:         4.836s
  Time for merge operator:            0.765s
  Time for stop operator:             0.303s
  Time for adding to reached set:     0.274s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):               10708 (count: 31, min: 292, max: 361, avg: 345.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.717s
  Counterexample analysis:                             9.996s (Max:     0.545s, Calls: 31)
    Refinement sat check:                              3.790s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.201s
  Precision update:                                    0.083s
  ARG update:                                          0.217s

Length of refined path (in blocks):                    9552 (count: 31, min: 54, max: 355, avg: 308.13)
Number of affected states:                             2830 (count: 31, min: 1, max: 354, avg: 91.29)
Length (states) of path with itp 'true':               6691 (count: 31, min: 0, max: 349, avg: 215.84)
Length (states) of path with itp non-trivial itp:      2830 (count: 31, min: 1, max: 354, avg: 91.29)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 31, min: 0, max: 3, avg: 0.39)
Equal non-trivial interpolants along paths:            2787 (count: 31, min: 0, max: 351, avg: 89.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 3993
Max. size of reached set after ref.:  3862
Avg. size of reached set before ref.: 3488.58
Avg. size of reached set after ref.:  2181.77

Total time for CEGAR algorithm:      25.906s
Time for refinements:                11.437s
Average time for refinement:          0.368s
Max time for refinement:              0.614s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          685
  Total lines:            1712
  Line coverage:          0.400
  Visited conditions:     346
  Total conditions:       730
  Condition coverage:     0.474

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             3476
  Number of reached locations:   704 (31%)
    Avg states per location:     4
    Max states per location:     40 (at node N511)
  Number of reached functions:   39 (51%)
  Number of partitions:          3468
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1155 (before lines 1444-1472), Function cleanup called from node N1297, stack depth 4 [1fdfd65], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        129

Time for analysis setup:          4.319s
  Time for loading CPAs:          0.858s
  Time for loading parser:        0.715s
  Time for CFA construction:      2.564s
    Time for parsing file(s):     0.770s
    Time for AST to CFA:          0.734s
    Time for CFA sanity check:    0.249s
    Time for post-processing:     0.604s
      Time for var class.:        0.333s
Time for Analysis:               25.906s
CPU time for analysis:           25.900s
Total time for CPAchecker:       30.230s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.182s

Time for Garbage Collector:       0.456s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     45MB (    43 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
