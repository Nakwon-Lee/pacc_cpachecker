scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c0comxh_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4450 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4392 (99%)
  Because of loop head:            54 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       4270 (96%)
  Times precision was {false}:     28 (1%)
  Times result was cached:         92 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      60 (1%)
  Times result was 'false':        35 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         52576
  BDD entailment checks:           592
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          41
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         184
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.09
Number of irrelevant predicates:          38 (21%)
Number of preds handled by boolean abs:   63 (34%)
  Total number of models for allsat:      73
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.22

Time for post operator:                 10.233s
  Time for path formula creation:        9.927s
Time for strengthen operator:            0.381s
Time for prec operator:                  1.233s
  Time for abstraction:                  0.600s (Max:     0.026s, Count: 4450)
    Boolean abstraction:                 0.146s
    Solving time:                        0.118s (Max:     0.013s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.008s (Max:     0.001s)
Time for merge operator:                 1.986s
Time for coverage check:                 0.108s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     0.123s

Number of path formula cache hits:   15929 (13%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.405s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         141 (count: 5384, min: 0, max: 114, avg: 0.03)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.770s
  Time for transition matches:                         0.280s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       119544 (count: 119544, min: 1, max: 1, avg: 1.00) [1 x 119544]

CPA algorithm statistics
------------------------
Number of iterations:            90517
Max size of waitlist:            27
Average size of waitlist:        15
Number of computed successors:   117157
Max successors for one state:    2
Number of times merged:          25992
Number of times stopped:         26581
Number of times breaked:         4

Total time for CPA algorithm:        24.188s (Max:    13.786s)
  Time for choose from waitlist:      0.297s
  Time for precision adjustment:      3.469s
  Time for transfer relation:        14.538s
  Time for merge operator:            3.177s
  Time for stop operator:             0.677s
  Time for adding to reached set:     0.544s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                 279 (count: 4, min: 67, max: 75, avg: 69.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.851s
  Counterexample analysis:                             0.320s (Max:     0.088s, Calls: 4)
    Refinement sat check:                              0.207s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.003s
  ARG update:                                          0.477s

Length of refined path (in blocks):                     206 (count: 4, min: 40, max: 64, avg: 51.50)
Number of affected states:                               42 (count: 4, min: 1, max: 39, avg: 10.50)
Length (states) of path with itp 'true':                160 (count: 4, min: 0, max: 62, avg: 40.00)
Length (states) of path with itp non-trivial itp:        42 (count: 4, min: 1, max: 39, avg: 10.50)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 4, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:              37 (count: 4, min: 0, max: 37, avg: 9.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 40020
Max. size of reached set after ref.:  39890
Avg. size of reached set before ref.: 40019.25
Avg. size of reached set after ref.:  20057.50

Total time for CEGAR algorithm:      25.587s
Time for refinements:                 1.250s
Average time for refinement:          0.312s
Max time for refinement:              0.422s

Code Coverage
-----------------------------
  Function coverage:      0.539
  Visited lines:          902
  Total lines:            1712
  Line coverage:          0.527
  Visited conditions:     518
  Total conditions:       730
  Condition coverage:     0.710

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             10695
  Number of reached locations:   990 (44%)
    Avg states per location:     10
    Max states per location:     63 (at node N510)
  Number of reached functions:   41 (54%)
  Number of partitions:          10694
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [6b495e5a], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          4.183s
  Time for loading CPAs:          0.876s
  Time for loading parser:        0.752s
  Time for CFA construction:      2.352s
    Time for parsing file(s):     0.690s
    Time for AST to CFA:          0.651s
    Time for CFA sanity check:    0.248s
    Time for post-processing:     0.598s
      Time for var class.:        0.351s
Time for Analysis:               25.587s
CPU time for analysis:           25.590s
Total time for CPAchecker:       29.774s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.327s

Time for Garbage Collector:       1.569s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     68MB (    65 MiB) avg;    136MB (   130 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           153MB (   146 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
