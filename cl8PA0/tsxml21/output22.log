scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_exwnepho/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5476 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4907 (90%)
  Because of loop head:            537 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (1%)
  Times precision was empty:       1922 (35%)
  Times precision was {false}:     193 (4%)
  Times result was cached:         2912 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      449 (8%)
  Times result was 'false':        494 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         60569
  BDD entailment checks:           743
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          22
Number of abstraction locations:          78
Max number of predicates per location:    14
Avg number of predicates per location:    8
Total predicates per abstraction:         17855
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 27.81
Number of irrelevant predicates:          7295 (41%)
Number of preds handled by boolean abs:   2573 (14%)
  Total number of models for allsat:      898
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.00

Time for post operator:                  6.191s
  Time for path formula creation:        6.009s
Time for strengthen operator:            0.385s
Time for prec operator:                  4.953s
  Time for abstraction:                  4.340s (Max:     0.030s, Count: 5476)
    Boolean abstraction:                 1.058s
    Solving time:                        0.846s (Max:     0.014s)
    Model enumeration time:              0.105s
    Time for BDD construction:           0.131s (Max:     0.013s)
Time for merge operator:                 1.348s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     0.951s

Number of path formula cache hits:   119329 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.513s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               982
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1560 (count: 6736, min: 0, max: 193, avg: 0.23)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.722s
  Time for transition matches:                         0.271s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       143024 (count: 143024, min: 1, max: 1, avg: 1.00) [1 x 143024]

CPA algorithm statistics
------------------------
Number of iterations:            106664
Max size of waitlist:            80
Average size of waitlist:        36
Number of computed successors:   138283
Max successors for one state:    2
Number of times merged:          29913
Number of times stopped:         30574
Number of times breaked:         32

Total time for CPA algorithm:        22.628s (Max:     5.641s)
  Time for choose from waitlist:      0.270s
  Time for precision adjustment:      6.603s
  Time for transfer relation:        10.787s
  Time for merge operator:            2.519s
  Time for stop operator:             0.547s
  Time for adding to reached set:     0.588s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                2181 (count: 32, min: 59, max: 75, avg: 68.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.467s
  Counterexample analysis:                             1.619s (Max:     0.092s, Calls: 32)
    Refinement sat check:                              1.058s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.087s
  Precision update:                                    0.071s
  ARG update:                                          0.547s

Length of refined path (in blocks):                    1695 (count: 31, min: 40, max: 68, avg: 54.68)
Number of affected states:                              896 (count: 31, min: 1, max: 67, avg: 28.90)
Length (states) of path with itp 'true':                768 (count: 31, min: 0, max: 62, avg: 24.77)
Length (states) of path with itp non-trivial itp:       896 (count: 31, min: 1, max: 67, avg: 28.90)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 31, min: 0, max: 1, avg: 0.32)
Equal non-trivial interpolants along paths:             855 (count: 31, min: 0, max: 65, avg: 27.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 12568
Max. size of reached set after ref.:  10838
Avg. size of reached set before ref.: 5536.44
Avg. size of reached set after ref.:  2256.45

Total time for CEGAR algorithm:      25.713s
Time for refinements:                 2.991s
Average time for refinement:          0.093s
Max time for refinement:              0.252s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          694
  Total lines:            1712
  Line coverage:          0.405
  Visited conditions:     400
  Total conditions:       730
  Condition coverage:     0.548

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             2466
  Number of reached locations:   786 (35%)
    Avg states per location:     3
    Max states per location:     13 (at node N2437)
  Number of reached functions:   38 (50%)
  Number of partitions:          2464
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [76d4903c], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       1
  Size of final wait list        14

Time for analysis setup:          4.101s
  Time for loading CPAs:          0.852s
  Time for loading parser:        0.747s
  Time for CFA construction:      2.291s
    Time for parsing file(s):     0.642s
    Time for AST to CFA:          0.718s
    Time for CFA sanity check:    0.225s
    Time for post-processing:     0.538s
      Time for var class.:        0.307s
Time for Analysis:               25.713s
CPU time for analysis:           25.710s
Total time for CPAchecker:       29.818s
Total CPU time for CPAchecker:   29.800s
Time for statistics:              0.176s

Time for Garbage Collector:       0.917s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                103MB (    98 MiB) max;     57MB (    54 MiB) avg;    105MB (   100 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
