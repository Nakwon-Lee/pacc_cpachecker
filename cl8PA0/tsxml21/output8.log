scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0bgidyji/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4803 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4689 (98%)
  Because of loop head:            105 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       4366 (91%)
  Times precision was {false}:     69 (1%)
  Times result was cached:         298 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      70 (1%)
  Times result was 'false':        81 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         64328
  BDD entailment checks:           592
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          11
Number of abstraction locations:          53
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         688
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 4.95
Number of irrelevant predicates:          296 (43%)
Number of preds handled by boolean abs:   193 (28%)
  Total number of models for allsat:      69
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  7.589s
  Time for path formula creation:        7.312s
Time for strengthen operator:            0.376s
Time for prec operator:                  1.968s
  Time for abstraction:                  1.214s (Max:     0.048s, Count: 4803)
    Boolean abstraction:                 0.179s
    Solving time:                        0.197s (Max:     0.018s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.017s (Max:     0.005s)
Time for merge operator:                 1.669s
Time for coverage check:                 0.076s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     0.204s

Number of path formula cache hits:   127882 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.130s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         203 (count: 5779, min: 0, max: 77, avg: 0.04)
Time for BDD node cleanup:                             0.067s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.606s
  Time for transition matches:                         0.238s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       145272 (count: 145272, min: 1, max: 1, avg: 1.00) [1 x 145272]

CPA algorithm statistics
------------------------
Number of iterations:            109645
Max size of waitlist:            113
Average size of waitlist:        68
Number of computed successors:   142422
Max successors for one state:    2
Number of times merged:          31868
Number of times stopped:         32454
Number of times breaked:         9

Total time for CPA algorithm:        22.946s (Max:    12.763s)
  Time for choose from waitlist:      0.303s
  Time for precision adjustment:      4.274s
  Time for transfer relation:        12.266s
  Time for merge operator:            3.172s
  Time for stop operator:             0.671s
  Time for adding to reached set:     0.597s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 545 (count: 9, min: 59, max: 63, avg: 60.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.253s
  Counterexample analysis:                             0.445s (Max:     0.076s, Calls: 9)
    Refinement sat check:                              0.252s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.010s
  ARG update:                                          0.723s

Length of refined path (in blocks):                     490 (count: 9, min: 52, max: 58, avg: 54.44)
Number of affected states:                              167 (count: 9, min: 1, max: 57, avg: 18.56)
Length (states) of path with itp 'true':                314 (count: 9, min: 0, max: 54, avg: 34.89)
Length (states) of path with itp non-trivial itp:       167 (count: 9, min: 1, max: 57, avg: 18.56)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 9, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:             155 (count: 9, min: 0, max: 55, avg: 17.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 34410
Max. size of reached set after ref.:  33989
Avg. size of reached set before ref.: 33746.89
Avg. size of reached set after ref.:  22333.78

Total time for CEGAR algorithm:      25.307s
Time for refinements:                 2.092s
Average time for refinement:          0.232s
Max time for refinement:              0.428s

Code Coverage
-----------------------------
  Function coverage:      0.395
  Visited lines:          523
  Total lines:            1712
  Line coverage:          0.305
  Visited conditions:     312
  Total conditions:       730
  Condition coverage:     0.427

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             7168
  Number of reached locations:   590 (26%)
    Avg states per location:     12
    Max states per location:     33 (at node N590)
  Number of reached functions:   30 (39%)
  Number of partitions:          7168
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        60

Time for analysis setup:          4.873s
  Time for loading CPAs:          1.071s
  Time for loading parser:        0.713s
  Time for CFA construction:      2.860s
    Time for parsing file(s):     0.836s
    Time for AST to CFA:          0.848s
    Time for CFA sanity check:    0.293s
    Time for post-processing:     0.649s
      Time for var class.:        0.359s
Time for Analysis:               25.307s
CPU time for analysis:           25.300s
Total time for CPAchecker:       30.190s
Total CPU time for CPAchecker:   30.180s
Time for statistics:              0.273s

Time for Garbage Collector:       1.483s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
