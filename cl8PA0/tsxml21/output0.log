scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lkzko5jt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6769 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6068 (90%)
  Because of loop head:            665 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (1%)
  Times precision was empty:       2182 (32%)
  Times precision was {false}:     236 (3%)
  Times result was cached:         3810 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      541 (8%)
  Times result was 'false':        712 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         66612
  BDD entailment checks:           888
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          28
Number of abstraction locations:          85
Max number of predicates per location:    17
Avg number of predicates per location:    9
Total predicates per abstraction:         26359
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 33.92
Number of irrelevant predicates:          10505 (40%)
Number of preds handled by boolean abs:   3332 (13%)
  Total number of models for allsat:      1046
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.93

Time for post operator:                  6.118s
  Time for path formula creation:        5.815s
Time for strengthen operator:            0.299s
Time for prec operator:                  5.921s
  Time for abstraction:                  5.361s (Max:     0.040s, Count: 6769)
    Boolean abstraction:                 1.219s
    Solving time:                        0.906s (Max:     0.016s)
    Model enumeration time:              0.159s
    Time for BDD construction:           0.160s (Max:     0.012s)
Time for merge operator:                 1.298s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     1.065s

Number of path formula cache hits:   138714 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.112s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1433
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2099 (count: 8144, min: 0, max: 434, avg: 0.26)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.681s
  Time for transition matches:                         0.238s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       160257 (count: 160257, min: 1, max: 1, avg: 1.00) [1 x 160257]

CPA algorithm statistics
------------------------
Number of iterations:            119298
Max size of waitlist:            80
Average size of waitlist:        34
Number of computed successors:   154280
Max successors for one state:    2
Number of times merged:          32862
Number of times stopped:         33644
Number of times breaked:         36

Total time for CPA algorithm:        22.840s (Max:     5.406s)
  Time for choose from waitlist:      0.251s
  Time for precision adjustment:      7.685s
  Time for transfer relation:        10.133s
  Time for merge operator:            2.426s
  Time for stop operator:             0.530s
  Time for adding to reached set:     0.490s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                2442 (count: 36, min: 59, max: 75, avg: 67.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.620s
  Counterexample analysis:                             1.798s (Max:     0.083s, Calls: 36)
    Refinement sat check:                              1.177s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.107s
  Precision update:                                    0.060s
  ARG update:                                          0.520s

Length of refined path (in blocks):                    1935 (count: 35, min: 40, max: 70, avg: 55.29)
Number of affected states:                             1132 (count: 35, min: 1, max: 69, avg: 32.34)
Length (states) of path with itp 'true':                768 (count: 35, min: 0, max: 62, avg: 21.94)
Length (states) of path with itp non-trivial itp:      1132 (count: 35, min: 1, max: 69, avg: 32.34)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          17 (count: 35, min: 0, max: 3, avg: 0.49)
Equal non-trivial interpolants along paths:            1080 (count: 35, min: 0, max: 67, avg: 30.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 12568
Max. size of reached set after ref.:  10838
Avg. size of reached set before ref.: 5274.64
Avg. size of reached set after ref.:  1998.91

Total time for CEGAR algorithm:      26.007s
Time for refinements:                 3.074s
Average time for refinement:          0.085s
Max time for refinement:              0.213s

Code Coverage
-----------------------------
  Function coverage:      0.553
  Visited lines:          834
  Total lines:            1712
  Line coverage:          0.487
  Visited conditions:     480
  Total conditions:       730
  Condition coverage:     0.658

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             3390
  Number of reached locations:   936 (42%)
    Avg states per location:     3
    Max states per location:     21 (at node N2437)
  Number of reached functions:   42 (55%)
  Number of partitions:          3385
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2250 (before line 2843), Function timeShift called from node N1141, stack depth 5 [59b8b004], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       1
  Size of final wait list        19

Time for analysis setup:          4.216s
  Time for loading CPAs:          0.825s
  Time for loading parser:        0.778s
  Time for CFA construction:      2.431s
    Time for parsing file(s):     0.695s
    Time for AST to CFA:          0.701s
    Time for CFA sanity check:    0.237s
    Time for post-processing:     0.573s
      Time for var class.:        0.318s
Time for Analysis:               26.007s
CPU time for analysis:           26.010s
Total time for CPAchecker:       30.232s
Total CPU time for CPAchecker:   30.180s
Time for statistics:              0.201s

Time for Garbage Collector:       0.942s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                102MB (    97 MiB) max;     58MB (    55 MiB) avg;    106MB (   101 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
