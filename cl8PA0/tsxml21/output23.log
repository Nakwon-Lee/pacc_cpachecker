scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product31_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_asyw29_u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 586: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1954: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2046: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3316: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12056 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11571 (96%)
  Because of loop head:            458 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       5405 (45%)
  Times precision was {false}:     94 (1%)
  Times result was cached:         6029 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      528 (4%)
  Times result was 'false':        1370 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         88064
  BDD entailment checks:           3188
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          20
Number of abstraction locations:          75
Max number of predicates per location:    9
Avg number of predicates per location:    7
Total predicates per abstraction:         49555
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 79.67
Number of irrelevant predicates:          13669 (28%)
Number of preds handled by boolean abs:   2658 (5%)
  Total number of models for allsat:      1367
  Max number of models for allsat:        64
  Avg number of models for allsat:        2.59

Time for post operator:                  2.808s
  Time for path formula creation:        2.490s
Time for strengthen operator:            0.415s
Time for prec operator:                  7.027s
  Time for abstraction:                  6.221s (Max:     0.032s, Count: 12056)
    Boolean abstraction:                 1.301s
    Solving time:                        0.817s (Max:     0.014s)
    Model enumeration time:              0.206s
    Time for BDD construction:           0.182s (Max:     0.013s)
Time for merge operator:                 0.509s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     1.023s

Number of path formula cache hits:   253094 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.998s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1307
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1459 (count: 12777, min: 0, max: 220, avg: 0.11)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.827s
  Time for transition matches:                         0.386s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       216680 (count: 216680, min: 1, max: 1, avg: 1.00) [1 x 216680]

CPA algorithm statistics
------------------------
Number of iterations:            160700
Max size of waitlist:            29
Average size of waitlist:        17
Number of computed successors:   207087
Max successors for one state:    2
Number of times merged:          42438
Number of times stopped:         44718
Number of times breaked:         27

Total time for CPA algorithm:        21.887s (Max:     4.625s)
  Time for choose from waitlist:      0.267s
  Time for precision adjustment:      9.274s
  Time for transfer relation:         7.577s
  Time for merge operator:            1.802s
  Time for stop operator:             0.654s
  Time for adding to reached set:     0.556s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                2347 (count: 27, min: 81, max: 92, avg: 86.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.763s
  Counterexample analysis:                             1.785s (Max:     0.100s, Calls: 27)
    Refinement sat check:                              1.073s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.166s
  Precision update:                                    0.044s
  ARG update:                                          0.655s

Length of refined path (in blocks):                    2151 (count: 27, min: 54, max: 88, avg: 79.67)
Number of affected states:                             1670 (count: 27, min: 1, max: 87, avg: 61.85)
Length (states) of path with itp 'true':                454 (count: 27, min: 0, max: 78, avg: 16.81)
Length (states) of path with itp non-trivial itp:      1670 (count: 27, min: 1, max: 87, avg: 61.85)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          26 (count: 27, min: 0, max: 3, avg: 0.96)
Equal non-trivial interpolants along paths:            1617 (count: 27, min: 0, max: 85, avg: 59.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 10785
Max. size of reached set after ref.:  10656
Avg. size of reached set before ref.: 7865.96
Avg. size of reached set after ref.:  2048.07

Total time for CEGAR algorithm:      25.238s
Time for refinements:                 3.262s
Average time for refinement:          0.120s
Max time for refinement:              0.253s

Code Coverage
-----------------------------
  Function coverage:      0.487
  Visited lines:          818
  Total lines:            1712
  Line coverage:          0.478
  Visited conditions:     478
  Total conditions:       730
  Condition coverage:     0.655

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2728
Number of relevant variables:    323
Number of functions:             76
Number of loops:                 9
Size of reached set:             3917
  Number of reached locations:   899 (40%)
    Avg states per location:     4
    Max states per location:     18 (at node N510)
  Number of reached functions:   37 (49%)
  Number of partitions:          3911
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2309 (before line 2942), Function timeShift called from node N1141, stack depth 5 [3207862b], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          4.444s
  Time for loading CPAs:          0.962s
  Time for loading parser:        0.802s
  Time for CFA construction:      2.478s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.679s
    Time for CFA sanity check:    0.259s
    Time for post-processing:     0.652s
      Time for var class.:        0.361s
Time for Analysis:               25.238s
CPU time for analysis:           25.240s
Total time for CPAchecker:       29.690s
Total CPU time for CPAchecker:   29.680s
Time for statistics:              0.212s

Time for Garbage Collector:       0.906s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     53MB (    50 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
