scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wybmi_wt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1262: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8415 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8412 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (0%)
  Times precision was empty:       7443 (88%)
  Times precision was {false}:     107 (1%)
  Times result was cached:         752 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      113 (1%)
  Times result was 'false':        233 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         97837
  BDD entailment checks:           1155
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          10
Number of abstraction locations:          49
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         2764
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 12.56
Number of irrelevant predicates:          2003 (72%)
Number of preds handled by boolean abs:   328 (12%)
  Total number of models for allsat:      380
  Max number of models for allsat:        32
  Avg number of models for allsat:        3.36

Time for post operator:                  8.199s
  Time for path formula creation:        7.863s
Time for strengthen operator:            0.487s
Time for prec operator:                  2.118s
  Time for abstraction:                  1.409s (Max:     0.029s, Count: 8415)
    Boolean abstraction:                 0.221s
    Solving time:                        0.220s (Max:     0.020s)
    Model enumeration time:              0.027s
    Time for BDD construction:           0.055s (Max:     0.012s)
Time for merge operator:                 1.515s
Time for coverage check:                 0.088s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     0.247s

Number of path formula cache hits:   210923 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.734s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               543
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         363 (count: 9946, min: 0, max: 96, avg: 0.04)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.761s
  Time for transition matches:                         0.337s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       222343 (count: 222343, min: 1, max: 1, avg: 1.00) [1 x 222343]

CPA algorithm statistics
------------------------
Number of iterations:            168170
Max size of waitlist:            41
Average size of waitlist:        17
Number of computed successors:   217905
Max successors for one state:    2
Number of times merged:          48341
Number of times stopped:         49474
Number of times breaked:         3

Total time for CPA algorithm:        25.009s (Max:    13.446s)
  Time for choose from waitlist:      0.287s
  Time for precision adjustment:      5.410s
  Time for transfer relation:        13.299s
  Time for merge operator:            2.973s
  Time for stop operator:             0.721s
  Time for adding to reached set:     0.754s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                 159 (count: 3, min: 51, max: 55, avg: 53.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.995s
  Counterexample analysis:                             0.153s (Max:     0.065s, Calls: 3)
    Refinement sat check:                              0.074s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.004s
  ARG update:                                          0.776s

Length of refined path (in blocks):                     140 (count: 3, min: 38, max: 52, avg: 46.67)
Number of affected states:                              137 (count: 3, min: 37, max: 51, avg: 45.67)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       137 (count: 3, min: 37, max: 51, avg: 45.67)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 3, min: 2, max: 2, avg: 2.00)
Equal non-trivial interpolants along paths:             128 (count: 3, min: 34, max: 48, avg: 42.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 47562
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 44842.67
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.295s
Time for refinements:                 1.285s
Average time for refinement:          0.428s
Max time for refinement:              0.570s

Code Coverage
-----------------------------
  Function coverage:      0.527
  Visited lines:          904
  Total lines:            1682
  Line coverage:          0.537
  Visited conditions:     536
  Total conditions:       716
  Condition coverage:     0.749

CPAchecker general statistics
-----------------------------
Number of program locations:     2193
Number of CFA edges:             2667
Number of relevant variables:    315
Number of functions:             74
Number of loops:                 9
Size of reached set:             33679
  Number of reached locations:   1016 (46%)
    Avg states per location:     33
    Max states per location:     114 (at node N762)
  Number of reached functions:   39 (53%)
  Number of partitions:          33676
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2130 (before line 2691), Function timeShift called from node N92, stack depth 5 [2745775e], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          3.943s
  Time for loading CPAs:          0.704s
  Time for loading parser:        0.690s
  Time for CFA construction:      2.361s
    Time for parsing file(s):     0.624s
    Time for AST to CFA:          0.729s
    Time for CFA sanity check:    0.258s
    Time for post-processing:     0.595s
      Time for var class.:        0.348s
Time for Analysis:               26.295s
CPU time for analysis:           26.290s
Total time for CPAchecker:       30.243s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.858s

Time for Garbage Collector:       2.044s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                150MB (   143 MiB) max;     72MB (    68 MiB) avg;    161MB (   154 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           161MB (   153 MiB) max;    134MB (   128 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
