scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_10v0_974/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1262: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9921 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9917 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       8320 (84%)
  Times precision was {false}:     126 (1%)
  Times result was cached:         1286 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      189 (2%)
  Times result was 'false':        331 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         110518
  BDD entailment checks:           1230
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          15
Number of abstraction locations:          50
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         6783
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 21.53
Number of irrelevant predicates:          4648 (69%)
Number of preds handled by boolean abs:   697 (10%)
  Total number of models for allsat:      773
  Max number of models for allsat:        64
  Avg number of models for allsat:        4.09

Time for post operator:                  7.465s
  Time for path formula creation:        7.177s
Time for strengthen operator:            0.436s
Time for prec operator:                  2.811s
  Time for abstraction:                  2.074s (Max:     0.024s, Count: 9921)
    Boolean abstraction:                 0.373s
    Solving time:                        0.317s (Max:     0.016s)
    Model enumeration time:              0.069s
    Time for BDD construction:           0.059s (Max:     0.010s)
Time for merge operator:                 1.577s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.386s

Number of path formula cache hits:   257379 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.917s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               906
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         781 (count: 11655, min: 0, max: 208, avg: 0.07)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.873s
  Time for transition matches:                         0.306s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       252916 (count: 252916, min: 1, max: 1, avg: 1.00) [1 x 252916]

CPA algorithm statistics
------------------------
Number of iterations:            190650
Max size of waitlist:            138
Average size of waitlist:        85
Number of computed successors:   247278
Max successors for one state:    2
Number of times merged:          54644
Number of times stopped:         55845
Number of times breaked:         4

Total time for CPA algorithm:        24.831s (Max:    10.915s)
  Time for choose from waitlist:      0.237s
  Time for precision adjustment:      5.819s
  Time for transfer relation:        12.639s
  Time for merge operator:            3.182s
  Time for stop operator:             0.537s
  Time for adding to reached set:     0.637s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                 214 (count: 4, min: 51, max: 55, avg: 53.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.982s
  Counterexample analysis:                             0.182s (Max:     0.052s, Calls: 4)
    Refinement sat check:                              0.097s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.004s
  ARG update:                                          0.747s

Length of refined path (in blocks):                     178 (count: 4, min: 38, max: 52, avg: 44.50)
Number of affected states:                              174 (count: 4, min: 37, max: 51, avg: 43.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       174 (count: 4, min: 37, max: 51, avg: 43.50)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 4, min: 2, max: 3, avg: 2.25)
Equal non-trivial interpolants along paths:             161 (count: 4, min: 33, max: 48, avg: 40.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 42315
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 38636.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.149s
Time for refinements:                 1.318s
Average time for refinement:          0.329s
Max time for refinement:              0.403s

Code Coverage
-----------------------------
  Function coverage:      0.568
  Visited lines:          930
  Total lines:            1682
  Line coverage:          0.553
  Visited conditions:     544
  Total conditions:       716
  Condition coverage:     0.760

CPAchecker general statistics
-----------------------------
Number of program locations:     2193
Number of CFA edges:             2667
Number of relevant variables:    315
Number of functions:             74
Number of loops:                 9
Size of reached set:             36571
  Number of reached locations:   1045 (48%)
    Avg states per location:     34
    Max states per location:     155 (at node N682)
  Number of reached functions:   42 (57%)
  Number of partitions:          36568
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2130 (before line 2691), Function timeShift called from node N92, stack depth 5 [629739db], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        105

Time for analysis setup:          4.123s
  Time for loading CPAs:          0.821s
  Time for loading parser:        0.745s
  Time for CFA construction:      2.363s
    Time for parsing file(s):     0.659s
    Time for AST to CFA:          0.698s
    Time for CFA sanity check:    0.265s
    Time for post-processing:     0.592s
      Time for var class.:        0.337s
Time for Analysis:               26.149s
CPU time for analysis:           26.150s
Total time for CPAchecker:       30.276s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.798s

Time for Garbage Collector:       1.923s (in 72 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   112 MiB) max;     65MB (    62 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
