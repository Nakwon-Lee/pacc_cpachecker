scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q04gheee/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1262: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4692 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4653 (99%)
  Because of loop head:            27 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       989 (21%)
  Times precision was {false}:     222 (5%)
  Times result was cached:         1718 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1763 (38%)
  Times result was 'false':        388 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         10000
  BDD entailment checks:           440
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          38
Number of abstraction locations:          81
Max number of predicates per location:    19
Avg number of predicates per location:    11
Total predicates per abstraction:         35306
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 17.79
Number of irrelevant predicates:          13463 (38%)
Number of preds handled by boolean abs:   13175 (37%)
  Total number of models for allsat:      20842
  Max number of models for allsat:        2048
  Avg number of models for allsat:        11.82

Time for post operator:                  2.243s
  Time for path formula creation:        2.110s
Time for strengthen operator:            0.091s
Time for prec operator:                 11.652s
  Time for abstraction:                 11.366s (Max:     0.251s, Count: 4692)
    Boolean abstraction:                 5.936s
    Solving time:                        2.692s (Max:     0.022s)
    Model enumeration time:              1.927s
    Time for BDD construction:           0.981s (Max:     0.076s)
Time for merge operator:                 0.295s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     4.619s

Number of path formula cache hits:   26228 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.014s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               106923
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8040 (count: 15153, min: 0, max: 1537, avg: 0.53)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.281s
Automaton transfers with branching:                0
Automaton transfer successors:                        37205 (count: 37205, min: 1, max: 1, avg: 1.00) [1 x 37205]

CPA algorithm statistics
------------------------
Number of iterations:            25376
Max size of waitlist:            192
Average size of waitlist:        98
Number of computed successors:   31821
Max successors for one state:    2
Number of times merged:          4780
Number of times stopped:         4927
Number of times breaked:         12

Total time for CPA algorithm:        17.722s (Max:     3.877s)
  Time for choose from waitlist:      0.119s
  Time for precision adjustment:     12.208s
  Time for transfer relation:         3.785s
  Time for merge operator:            0.685s
  Time for stop operator:             0.168s
  Time for adding to reached set:     0.258s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                4695 (count: 12, min: 284, max: 467, avg: 391.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.471s
  Counterexample analysis:                             6.921s (Max:     0.807s, Calls: 12)
    Refinement sat check:                              1.920s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.089s
  ARG update:                                          0.195s

Length of refined path (in blocks):                    4410 (count: 12, min: 42, max: 466, avg: 367.50)
Number of affected states:                             2071 (count: 12, min: 41, max: 388, avg: 172.58)
Length (states) of path with itp 'true':               2327 (count: 12, min: 0, max: 344, avg: 193.92)
Length (states) of path with itp non-trivial itp:      2071 (count: 12, min: 41, max: 388, avg: 172.58)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          56 (count: 12, min: 3, max: 9, avg: 4.67)
Equal non-trivial interpolants along paths:            2003 (count: 12, min: 37, max: 378, avg: 166.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 4744
Max. size of reached set after ref.:  3243
Avg. size of reached set before ref.: 3734.67
Avg. size of reached set after ref.:  1844.00

Total time for CEGAR algorithm:      25.605s
Time for refinements:                 7.857s
Average time for refinement:          0.654s
Max time for refinement:              0.898s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          573
  Total lines:            1682
  Line coverage:          0.341
  Visited conditions:     284
  Total conditions:       716
  Condition coverage:     0.397

CPAchecker general statistics
-----------------------------
Number of program locations:     2193
Number of CFA edges:             2667
Number of relevant variables:    315
Number of functions:             74
Number of loops:                 9
Size of reached set:             3818
  Number of reached locations:   576 (26%)
    Avg states per location:     6
    Max states per location:     53 (at node N682)
  Number of reached functions:   37 (50%)
  Number of partitions:          3807
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N106 (before lines 188-216), Function cleanup called from node N2620, stack depth 4 [4170ee0f], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        161

Time for analysis setup:          4.166s
  Time for loading CPAs:          0.823s
  Time for loading parser:        0.669s
  Time for CFA construction:      2.507s
    Time for parsing file(s):     0.721s
    Time for AST to CFA:          0.785s
    Time for CFA sanity check:    0.239s
    Time for post-processing:     0.595s
      Time for var class.:        0.342s
Time for Analysis:               25.605s
CPU time for analysis:           25.600s
Total time for CPAchecker:       29.775s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.161s

Time for Garbage Collector:       0.402s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     46MB (    44 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
