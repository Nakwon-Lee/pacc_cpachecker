scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ivqyg9q7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1262: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8647 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8643 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       7346 (85%)
  Times precision was {false}:     125 (1%)
  Times result was cached:         1019 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      157 (2%)
  Times result was 'false':        273 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         97536
  BDD entailment checks:           1064
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          15
Number of abstraction locations:          50
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         4551
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 16.14
Number of irrelevant predicates:          3086 (68%)
Number of preds handled by boolean abs:   602 (13%)
  Total number of models for allsat:      579
  Max number of models for allsat:        64
  Avg number of models for allsat:        3.69

Time for post operator:                  7.030s
  Time for path formula creation:        6.818s
Time for strengthen operator:            0.473s
Time for prec operator:                  2.811s
  Time for abstraction:                  2.108s (Max:     0.182s, Count: 8647)
    Boolean abstraction:                 0.390s
    Solving time:                        0.482s (Max:     0.080s)
    Model enumeration time:              0.070s
    Time for BDD construction:           0.029s (Max:     0.006s)
Time for merge operator:                 1.569s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     0.553s

Number of path formula cache hits:   219991 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.644s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               787
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         663 (count: 10239, min: 0, max: 156, avg: 0.06)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.917s
  Time for transition matches:                         0.320s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       223153 (count: 223153, min: 1, max: 1, avg: 1.00) [1 x 223153]

CPA algorithm statistics
------------------------
Number of iterations:            168103
Max size of waitlist:            138
Average size of waitlist:        82
Number of computed successors:   218082
Max successors for one state:    2
Number of times merged:          48236
Number of times stopped:         49274
Number of times breaked:         4

Total time for CPA algorithm:        24.421s (Max:    10.904s)
  Time for choose from waitlist:      0.288s
  Time for precision adjustment:      5.800s
  Time for transfer relation:        12.381s
  Time for merge operator:            2.992s
  Time for stop operator:             0.663s
  Time for adding to reached set:     0.621s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                 214 (count: 4, min: 51, max: 55, avg: 53.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.012s
  Counterexample analysis:                             0.171s (Max:     0.053s, Calls: 4)
    Refinement sat check:                              0.102s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.020s
  ARG update:                                          0.776s

Length of refined path (in blocks):                     178 (count: 4, min: 38, max: 52, avg: 44.50)
Number of affected states:                              174 (count: 4, min: 37, max: 51, avg: 43.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       174 (count: 4, min: 37, max: 51, avg: 43.50)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 4, min: 2, max: 3, avg: 2.25)
Equal non-trivial interpolants along paths:             161 (count: 4, min: 33, max: 48, avg: 40.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 42315
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 38636.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.654s
Time for refinements:                 1.233s
Average time for refinement:          0.308s
Max time for refinement:              0.486s

Code Coverage
-----------------------------
  Function coverage:      0.527
  Visited lines:          844
  Total lines:            1682
  Line coverage:          0.502
  Visited conditions:     508
  Total conditions:       716
  Condition coverage:     0.709

CPAchecker general statistics
-----------------------------
Number of program locations:     2193
Number of CFA edges:             2667
Number of relevant variables:    315
Number of functions:             74
Number of loops:                 9
Size of reached set:             14003
  Number of reached locations:   945 (43%)
    Avg states per location:     14
    Max states per location:     65 (at node N2555)
  Number of reached functions:   39 (53%)
  Number of partitions:          14001
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2130 (before line 2691), Function timeShift called from node N92, stack depth 5 [68c3c13d], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        85

Time for analysis setup:          4.144s
  Time for loading CPAs:          0.755s
  Time for loading parser:        0.719s
  Time for CFA construction:      2.451s
    Time for parsing file(s):     0.717s
    Time for AST to CFA:          0.736s
    Time for CFA sanity check:    0.261s
    Time for post-processing:     0.542s
      Time for var class.:        0.298s
Time for Analysis:               25.654s
CPU time for analysis:           25.640s
Total time for CPAchecker:       29.802s
Total CPU time for CPAchecker:   29.790s
Time for statistics:              0.367s

Time for Garbage Collector:       2.032s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     66MB (    63 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
