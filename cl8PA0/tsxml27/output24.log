scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_70uju2yk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1262: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5377 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5375 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       5222 (97%)
  Times precision was {false}:     19 (0%)
  Times result was cached:         87 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      49 (1%)
  Times result was 'false':        31 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         66548
  BDD entailment checks:           624
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          4
Number of abstraction locations:          30
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         155
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.28
Number of irrelevant predicates:          31 (20%)
Number of preds handled by boolean abs:   49 (32%)
  Total number of models for allsat:      62
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.27

Time for post operator:                 10.180s
  Time for path formula creation:        9.895s
Time for strengthen operator:            0.359s
Time for prec operator:                  1.087s
  Time for abstraction:                  0.438s (Max:     0.018s, Count: 5377)
    Boolean abstraction:                 0.092s
    Solving time:                        0.066s (Max:     0.009s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.006s (Max:     0.001s)
Time for merge operator:                 2.227s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     0.076s

Number of path formula cache hits:   15543 (10%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.315s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          97 (count: 6244, min: 0, max: 90, avg: 0.02)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.823s
  Time for transition matches:                         0.307s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       150076 (count: 150076, min: 1, max: 1, avg: 1.00) [1 x 150076]

CPA algorithm statistics
------------------------
Number of iterations:            113826
Max size of waitlist:            27
Average size of waitlist:        15
Number of computed successors:   147448
Max successors for one state:    2
Number of times merged:          32962
Number of times stopped:         33583
Number of times breaked:         2

Total time for CPA algorithm:        25.348s (Max:    13.061s)
  Time for choose from waitlist:      0.315s
  Time for precision adjustment:      3.507s
  Time for transfer relation:        15.035s
  Time for merge operator:            3.595s
  Time for stop operator:             0.653s
  Time for adding to reached set:     0.454s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                 124 (count: 2, min: 59, max: 65, avg: 62.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.635s
  Counterexample analysis:                             0.131s (Max:     0.086s, Calls: 2)
    Refinement sat check:                              0.086s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.002s
  ARG update:                                          0.469s

Length of refined path (in blocks):                      57 (count: 2, min: 28, max: 29, avg: 28.50)
Number of affected states:                               28 (count: 2, min: 1, max: 27, avg: 14.00)
Length (states) of path with itp 'true':                 27 (count: 2, min: 0, max: 27, avg: 13.50)
Length (states) of path with itp non-trivial itp:        28 (count: 2, min: 1, max: 27, avg: 14.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 2, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:              25 (count: 2, min: 0, max: 25, avg: 12.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 39365
Max. size of reached set after ref.:  395
Avg. size of reached set before ref.: 39364.50
Avg. size of reached set after ref.:  199.00

Total time for CEGAR algorithm:      26.211s
Time for refinements:                 0.862s
Average time for refinement:          0.431s
Max time for refinement:              0.615s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          869
  Total lines:            1682
  Line coverage:          0.517
  Visited conditions:     514
  Total conditions:       716
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2193
Number of CFA edges:             2667
Number of relevant variables:    315
Number of functions:             74
Number of loops:                 9
Size of reached set:             35504
  Number of reached locations:   964 (44%)
    Avg states per location:     36
    Max states per location:     131 (at node N761)
  Number of reached functions:   36 (49%)
  Number of partitions:          35503
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2130 (before line 2691), Function timeShift called from node N92, stack depth 5 [7aee0c28], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          4.039s
  Time for loading CPAs:          0.867s
  Time for loading parser:        0.672s
  Time for CFA construction:      2.307s
    Time for parsing file(s):     0.648s
    Time for AST to CFA:          0.694s
    Time for CFA sanity check:    0.236s
    Time for post-processing:     0.557s
      Time for var class.:        0.321s
Time for Analysis:               26.211s
CPU time for analysis:           26.210s
Total time for CPAchecker:       30.254s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.829s

Time for Garbage Collector:       1.983s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                141MB (   135 MiB) max;     71MB (    68 MiB) avg;    168MB (   160 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           205MB (   195 MiB) max;    135MB (   129 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
