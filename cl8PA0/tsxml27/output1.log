scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kq6xuv_g/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1262: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6880 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6877 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (0%)
  Times precision was empty:       6069 (88%)
  Times precision was {false}:     92 (1%)
  Times result was cached:         642 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      77 (1%)
  Times result was 'false':        199 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         79169
  BDD entailment checks:           939
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          10
Number of abstraction locations:          49
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         1830
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 10.83
Number of irrelevant predicates:          1361 (74%)
Number of preds handled by boolean abs:   241 (13%)
  Total number of models for allsat:      106
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.38

Time for post operator:                  7.972s
  Time for path formula creation:        7.708s
Time for strengthen operator:            0.435s
Time for prec operator:                  2.188s
  Time for abstraction:                  1.380s (Max:     0.050s, Count: 6880)
    Boolean abstraction:                 0.115s
    Solving time:                        0.172s (Max:     0.013s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.021s (Max:     0.005s)
Time for merge operator:                 1.653s
Time for coverage check:                 0.111s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     0.177s

Number of path formula cache hits:   158081 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.682s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               291
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         102 (count: 8012, min: 0, max: 59, avg: 0.01)
Time for BDD node cleanup:                             0.040s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.884s
  Time for transition matches:                         0.416s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       180228 (count: 180228, min: 1, max: 1, avg: 1.00) [1 x 180228]

CPA algorithm statistics
------------------------
Number of iterations:            136224
Max size of waitlist:            41
Average size of waitlist:        17
Number of computed successors:   176495
Max successors for one state:    2
Number of times merged:          39115
Number of times stopped:         40037
Number of times breaked:         3

Total time for CPA algorithm:        24.569s (Max:    14.011s)
  Time for choose from waitlist:      0.282s
  Time for precision adjustment:      4.947s
  Time for transfer relation:        12.950s
  Time for merge operator:            3.224s
  Time for stop operator:             0.738s
  Time for adding to reached set:     0.664s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                 159 (count: 3, min: 51, max: 55, avg: 53.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.999s
  Counterexample analysis:                             0.131s (Max:     0.070s, Calls: 3)
    Refinement sat check:                              0.079s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.008s
  ARG update:                                          0.807s

Length of refined path (in blocks):                     140 (count: 3, min: 38, max: 52, avg: 46.67)
Number of affected states:                              137 (count: 3, min: 37, max: 51, avg: 45.67)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       137 (count: 3, min: 37, max: 51, avg: 45.67)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 3, min: 2, max: 2, avg: 2.00)
Equal non-trivial interpolants along paths:             128 (count: 3, min: 34, max: 48, avg: 42.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 47562
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 44842.67
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.819s
Time for refinements:                 1.249s
Average time for refinement:          0.416s
Max time for refinement:              0.622s

Code Coverage
-----------------------------
  Function coverage:      0.405
  Visited lines:          714
  Total lines:            1682
  Line coverage:          0.424
  Visited conditions:     430
  Total conditions:       716
  Condition coverage:     0.601

CPAchecker general statistics
-----------------------------
Number of program locations:     2193
Number of CFA edges:             2667
Number of relevant variables:    315
Number of functions:             74
Number of loops:                 9
Size of reached set:             1741
  Number of reached locations:   767 (35%)
    Avg states per location:     2
    Max states per location:     19 (at node N682)
  Number of reached functions:   30 (41%)
  Number of partitions:          1740
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2130 (before line 2691), Function timeShift called from node N92, stack depth 5 [1b1792a9], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          4.470s
  Time for loading CPAs:          0.938s
  Time for loading parser:        0.721s
  Time for CFA construction:      2.587s
    Time for parsing file(s):     0.756s
    Time for AST to CFA:          0.792s
    Time for CFA sanity check:    0.272s
    Time for post-processing:     0.632s
      Time for var class.:        0.350s
Time for Analysis:               25.819s
CPU time for analysis:           25.820s
Total time for CPAchecker:       30.293s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.127s

Time for Garbage Collector:       1.699s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                139MB (   132 MiB) max;     67MB (    64 MiB) avg;    142MB (   135 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    30 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           162MB (   154 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
