scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b1jlgetx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 906: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1262: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1573: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2380: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2527: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 697: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4542 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4537 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       4024 (89%)
  Times precision was {false}:     89 (2%)
  Times result was cached:         336 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      93 (2%)
  Times result was 'false':        6 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         94548
  BDD entailment checks:           382
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          7
Number of abstraction locations:          50
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         1199
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 6.59
Number of irrelevant predicates:          604 (50%)
Number of preds handled by boolean abs:   165 (14%)
  Total number of models for allsat:      113
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.22

Time for post operator:                  8.081s
  Time for path formula creation:        7.824s
Time for strengthen operator:            0.468s
Time for prec operator:                  1.591s
  Time for abstraction:                  0.875s (Max:     0.025s, Count: 4542)
    Boolean abstraction:                 0.135s
    Solving time:                        0.133s (Max:     0.020s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.017s (Max:     0.008s)
Time for merge operator:                 1.804s
Time for coverage check:                 0.078s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     0.141s

Number of path formula cache hits:   160761 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.723s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         253 (count: 5445, min: 0, max: 73, avg: 0.05)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.742s
  Time for transition matches:                         0.316s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       206158 (count: 206158, min: 1, max: 1, avg: 1.00) [1 x 206158]

CPA algorithm statistics
------------------------
Number of iterations:            154602
Max size of waitlist:            180
Average size of waitlist:        76
Number of computed successors:   202762
Max successors for one state:    2
Number of times merged:          47083
Number of times stopped:         47461
Number of times breaked:         5

Total time for CPA algorithm:        24.647s (Max:     8.765s)
  Time for choose from waitlist:      0.328s
  Time for precision adjustment:      4.513s
  Time for transfer relation:        13.375s
  Time for merge operator:            3.393s
  Time for stop operator:             0.640s
  Time for adding to reached set:     0.709s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 391 (count: 5, min: 61, max: 103, avg: 78.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.101s
  Counterexample analysis:                             0.309s (Max:     0.074s, Calls: 5)
    Refinement sat check:                              0.158s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.023s
  ARG update:                                          0.707s

Length of refined path (in blocks):                     348 (count: 5, min: 28, max: 102, avg: 69.60)
Number of affected states:                              343 (count: 5, min: 27, max: 101, avg: 68.60)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       343 (count: 5, min: 27, max: 101, avg: 68.60)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 5, min: 1, max: 3, avg: 2.20)
Equal non-trivial interpolants along paths:             327 (count: 5, min: 25, max: 97, avg: 65.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 38791
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 27517.40
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.017s
Time for refinements:                 1.370s
Average time for refinement:          0.274s
Max time for refinement:              0.389s

Code Coverage
-----------------------------
  Function coverage:      0.405
  Visited lines:          559
  Total lines:            1682
  Line coverage:          0.332
  Visited conditions:     346
  Total conditions:       716
  Condition coverage:     0.483

CPAchecker general statistics
-----------------------------
Number of program locations:     2193
Number of CFA edges:             2667
Number of relevant variables:    315
Number of functions:             74
Number of loops:                 9
Size of reached set:             17723
  Number of reached locations:   649 (30%)
    Avg states per location:     27
    Max states per location:     82 (at node N714)
  Number of reached functions:   30 (41%)
  Number of partitions:          17723
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        81

Time for analysis setup:          4.186s
  Time for loading CPAs:          0.812s
  Time for loading parser:        0.677s
  Time for CFA construction:      2.500s
    Time for parsing file(s):     0.695s
    Time for AST to CFA:          0.725s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     0.615s
      Time for var class.:        0.360s
Time for Analysis:               26.017s
CPU time for analysis:           26.020s
Total time for CPAchecker:       30.208s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.426s

Time for Garbage Collector:       1.726s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                132MB (   126 MiB) max;     66MB (    63 MiB) avg;    144MB (   137 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           147MB (   140 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
