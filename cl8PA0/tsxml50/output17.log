scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7d26qijp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1185: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1289: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1624: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1673: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8831 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8827 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       7343 (83%)
  Times precision was {false}:     126 (1%)
  Times result was cached:         1174 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      188 (2%)
  Times result was 'false':        315 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         99800
  BDD entailment checks:           1142
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          15
Number of abstraction locations:          50
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         5954
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 18.96
Number of irrelevant predicates:          4030 (68%)
Number of preds handled by boolean abs:   695 (12%)
  Total number of models for allsat:      771
  Max number of models for allsat:        64
  Avg number of models for allsat:        4.10

Time for post operator:                  7.039s
  Time for path formula creation:        6.684s
Time for strengthen operator:            0.398s
Time for prec operator:                  2.659s
  Time for abstraction:                  1.915s (Max:     0.024s, Count: 8831)
    Boolean abstraction:                 0.395s
    Solving time:                        0.324s (Max:     0.014s)
    Model enumeration time:              0.062s
    Time for BDD construction:           0.072s (Max:     0.009s)
Time for merge operator:                 1.445s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.386s

Number of path formula cache hits:   229493 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.782s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               906
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         777 (count: 10569, min: 0, max: 129, avg: 0.07)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.741s
  Time for transition matches:                         0.331s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       228594 (count: 228594, min: 1, max: 1, avg: 1.00) [1 x 228594]

CPA algorithm statistics
------------------------
Number of iterations:            171877
Max size of waitlist:            126
Average size of waitlist:        79
Number of computed successors:   223085
Max successors for one state:    2
Number of times merged:          49329
Number of times stopped:         50442
Number of times breaked:         4

Total time for CPA algorithm:        24.551s (Max:    10.652s)
  Time for choose from waitlist:      0.283s
  Time for precision adjustment:      5.433s
  Time for transfer relation:        12.574s
  Time for merge operator:            3.117s
  Time for stop operator:             0.736s
  Time for adding to reached set:     0.786s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                 214 (count: 4, min: 51, max: 55, avg: 53.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.968s
  Counterexample analysis:                             0.187s (Max:     0.060s, Calls: 4)
    Refinement sat check:                              0.102s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.020s
  ARG update:                                          0.672s

Length of refined path (in blocks):                     178 (count: 4, min: 38, max: 52, avg: 44.50)
Number of affected states:                              174 (count: 4, min: 37, max: 51, avg: 43.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       174 (count: 4, min: 37, max: 51, avg: 43.50)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 4, min: 2, max: 3, avg: 2.25)
Equal non-trivial interpolants along paths:             161 (count: 4, min: 33, max: 48, avg: 40.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 40575
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 36584.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.828s
Time for refinements:                 1.276s
Average time for refinement:          0.319s
Max time for refinement:              0.466s

Code Coverage
-----------------------------
  Function coverage:      0.587
  Visited lines:          946
  Total lines:            1692
  Line coverage:          0.559
  Visited conditions:     552
  Total conditions:       718
  Condition coverage:     0.769

CPAchecker general statistics
-----------------------------
Number of program locations:     2208
Number of CFA edges:             2684
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             26005
  Number of reached locations:   1059 (48%)
    Avg states per location:     24
    Max states per location:     98 (at node N40)
  Number of reached functions:   44 (59%)
  Number of partitions:          26002
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2010 (before line 2470), Function timeShift called from node N2452, stack depth 5 [2c31f22f], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        92

Time for analysis setup:          4.444s
  Time for loading CPAs:          0.983s
  Time for loading parser:        0.719s
  Time for CFA construction:      2.607s
    Time for parsing file(s):     0.751s
    Time for AST to CFA:          0.829s
    Time for CFA sanity check:    0.263s
    Time for post-processing:     0.588s
      Time for var class.:        0.327s
Time for Analysis:               25.828s
CPU time for analysis:           25.830s
Total time for CPAchecker:       30.276s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.545s

Time for Garbage Collector:       1.793s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   114 MiB) max;     66MB (    62 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
