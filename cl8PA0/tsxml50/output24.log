scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i_lqpn4l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1185: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1289: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1624: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1673: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6471 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6459 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       4405 (68%)
  Times precision was {false}:     228 (4%)
  Times result was cached:         1519 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      319 (5%)
  Times result was 'false':        177 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         61676
  BDD entailment checks:           360
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          34
Number of abstraction locations:          71
Max number of predicates per location:    17
Avg number of predicates per location:    5
Total predicates per abstraction:         7165
Max number of predicates per abstraction: 17
Avg number of predicates per abstraction: 13.10
Number of irrelevant predicates:          3409 (48%)
Number of preds handled by boolean abs:   1359 (19%)
  Total number of models for allsat:      1428
  Max number of models for allsat:        48
  Avg number of models for allsat:        4.48

Time for post operator:                  7.549s
  Time for path formula creation:        7.322s
Time for strengthen operator:            0.312s
Time for prec operator:                  3.705s
  Time for abstraction:                  3.122s (Max:     0.054s, Count: 6471)
    Boolean abstraction:                 0.930s
    Solving time:                        0.546s (Max:     0.016s)
    Model enumeration time:              0.200s
    Time for BDD construction:           0.149s (Max:     0.010s)
Time for merge operator:                 1.562s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.746s

Number of path formula cache hits:   69804 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.228s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4183
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1833 (count: 8397, min: 0, max: 936, avg: 0.22)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.695s
  Time for transition matches:                         0.288s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       144939 (count: 144939, min: 1, max: 1, avg: 1.00) [1 x 144939]

CPA algorithm statistics
------------------------
Number of iterations:            108928
Max size of waitlist:            76
Average size of waitlist:        47
Number of computed successors:   140617
Max successors for one state:    2
Number of times merged:          30658
Number of times stopped:         30966
Number of times breaked:         12

Total time for CPA algorithm:        23.875s (Max:     6.650s)
  Time for choose from waitlist:      0.271s
  Time for precision adjustment:      6.365s
  Time for transfer relation:        11.808s
  Time for merge operator:            2.799s
  Time for stop operator:             0.461s
  Time for adding to reached set:     0.619s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 804 (count: 12, min: 51, max: 93, avg: 67.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.550s
  Counterexample analysis:                             0.911s (Max:     0.205s, Calls: 12)
    Refinement sat check:                              0.529s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.033s
  ARG update:                                          0.490s

Length of refined path (in blocks):                     577 (count: 12, min: 28, max: 90, avg: 48.08)
Number of affected states:                              494 (count: 12, min: 1, max: 61, avg: 41.17)
Length (states) of path with itp 'true':                 71 (count: 12, min: 0, max: 44, avg: 5.92)
Length (states) of path with itp non-trivial itp:       494 (count: 12, min: 1, max: 61, avg: 41.17)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          36 (count: 12, min: 0, max: 7, avg: 3.00)
Equal non-trivial interpolants along paths:             446 (count: 12, min: 0, max: 58, avg: 37.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 14253
Max. size of reached set after ref.:  849
Avg. size of reached set before ref.: 8393.25
Avg. size of reached set after ref.:  97.83

Total time for CEGAR algorithm:      25.743s
Time for refinements:                 1.866s
Average time for refinement:          0.155s
Max time for refinement:              0.315s

Code Coverage
-----------------------------
  Function coverage:      0.520
  Visited lines:          636
  Total lines:            1692
  Line coverage:          0.376
  Visited conditions:     368
  Total conditions:       718
  Condition coverage:     0.513

CPAchecker general statistics
-----------------------------
Number of program locations:     2208
Number of CFA edges:             2684
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             9930
  Number of reached locations:   719 (33%)
    Avg states per location:     13
    Max states per location:     42 (at node N120)
  Number of reached functions:   39 (52%)
  Number of partitions:          9923
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2010 (before line 2470), Function timeShift called from node N2452, stack depth 5 [4bce1fc9], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        65

Time for analysis setup:          4.036s
  Time for loading CPAs:          0.841s
  Time for loading parser:        0.680s
  Time for CFA construction:      2.357s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.696s
    Time for CFA sanity check:    0.250s
    Time for post-processing:     0.539s
      Time for var class.:        0.302s
Time for Analysis:               25.743s
CPU time for analysis:           25.740s
Total time for CPAchecker:       29.783s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.315s

Time for Garbage Collector:       1.347s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
