scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5op6qtdn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1185: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1289: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1581: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1624: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1673: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2305: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2923: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8396 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8392 (100%)
  Because of loop head:            0 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       7008 (83%)
  Times precision was {false}:     126 (2%)
  Times result was cached:         1086 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      176 (2%)
  Times result was 'false':        294 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         95562
  BDD entailment checks:           1078
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          15
Number of abstraction locations:          50
Max number of predicates per location:    10
Avg number of predicates per location:    5
Total predicates per abstraction:         5225
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 17.30
Number of irrelevant predicates:          3536 (68%)
Number of preds handled by boolean abs:   661 (13%)
  Total number of models for allsat:      707
  Max number of models for allsat:        64
  Avg number of models for allsat:        4.02

Time for post operator:                  6.935s
  Time for path formula creation:        6.691s
Time for strengthen operator:            0.347s
Time for prec operator:                  2.747s
  Time for abstraction:                  2.029s (Max:     0.032s, Count: 8396)
    Boolean abstraction:                 0.465s
    Solving time:                        0.352s (Max:     0.016s)
    Model enumeration time:              0.057s
    Time for BDD construction:           0.081s (Max:     0.010s)
Time for merge operator:                 1.611s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.409s

Number of path formula cache hits:   217171 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.822s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               906
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         741 (count: 10077, min: 0, max: 129, avg: 0.07)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.753s
  Time for transition matches:                         0.339s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       218773 (count: 218773, min: 1, max: 1, avg: 1.00) [1 x 218773]

CPA algorithm statistics
------------------------
Number of iterations:            164463
Max size of waitlist:            126
Average size of waitlist:        78
Number of computed successors:   213506
Max successors for one state:    2
Number of times merged:          47242
Number of times stopped:         48291
Number of times breaked:         4

Total time for CPA algorithm:        24.216s (Max:    10.888s)
  Time for choose from waitlist:      0.274s
  Time for precision adjustment:      5.654s
  Time for transfer relation:        11.914s
  Time for merge operator:            3.132s
  Time for stop operator:             0.637s
  Time for adding to reached set:     0.714s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                 214 (count: 4, min: 51, max: 55, avg: 53.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.032s
  Counterexample analysis:                             0.204s (Max:     0.065s, Calls: 4)
    Refinement sat check:                              0.098s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.010s
  ARG update:                                          0.771s

Length of refined path (in blocks):                     178 (count: 4, min: 38, max: 52, avg: 44.50)
Number of affected states:                              174 (count: 4, min: 37, max: 51, avg: 43.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       174 (count: 4, min: 37, max: 51, avg: 43.50)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 4, min: 2, max: 3, avg: 2.25)
Equal non-trivial interpolants along paths:             161 (count: 4, min: 33, max: 48, avg: 40.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 40575
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 36584.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.544s
Time for refinements:                 1.327s
Average time for refinement:          0.331s
Max time for refinement:              0.437s

Code Coverage
-----------------------------
  Function coverage:      0.547
  Visited lines:          906
  Total lines:            1692
  Line coverage:          0.535
  Visited conditions:     534
  Total conditions:       718
  Condition coverage:     0.744

CPAchecker general statistics
-----------------------------
Number of program locations:     2208
Number of CFA edges:             2684
Number of relevant variables:    319
Number of functions:             75
Number of loops:                 9
Size of reached set:             18596
  Number of reached locations:   1006 (46%)
    Avg states per location:     18
    Max states per location:     74 (at node N1049)
  Number of reached functions:   41 (55%)
  Number of partitions:          18593
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2010 (before line 2470), Function timeShift called from node N2452, stack depth 5 [1f796283], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        98

Time for analysis setup:          4.354s
  Time for loading CPAs:          0.907s
  Time for loading parser:        0.688s
  Time for CFA construction:      2.562s
    Time for parsing file(s):     0.704s
    Time for AST to CFA:          0.773s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.620s
      Time for var class.:        0.358s
Time for Analysis:               25.544s
CPU time for analysis:           25.550s
Total time for CPAchecker:       29.902s
Total CPU time for CPAchecker:   29.890s
Time for statistics:              0.394s

Time for Garbage Collector:       1.771s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   114 MiB) max;     65MB (    62 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
