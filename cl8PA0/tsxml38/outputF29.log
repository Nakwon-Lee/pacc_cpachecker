scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product03_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nnwcz_p3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 50: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 814: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 956: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1337: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1427: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1458: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2056: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2065: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2370: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2610: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3001: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            714668 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  714001 (100%)
  Because of loop head:            529 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         138 (0%)
  Times precision was empty:       71956 (10%)
  Times precision was {false}:     1093 (0%)
  Times result was cached:         634983 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6636 (1%)
  Times result was 'false':        31081 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         8638232
  BDD entailment checks:           147598
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          58
Number of abstraction locations:          132
Max number of predicates per location:    30
Avg number of predicates per location:    10
Total predicates per abstraction:         3951194
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 511.22
Number of irrelevant predicates:          2749807 (70%)
Number of preds handled by boolean abs:   34223 (1%)
  Total number of models for allsat:      22338
  Max number of models for allsat:        120
  Avg number of models for allsat:        3.37

Time for post operator:                164.200s
  Time for path formula creation:      156.693s
Time for strengthen operator:           14.669s
Time for prec operator:                220.743s
  Time for abstraction:                199.110s (Max:     3.400s, Count: 714668)
    Boolean abstraction:                 9.098s
    Solving time:                        6.768s (Max:     0.014s)
    Model enumeration time:              1.590s
    Time for BDD construction:           0.527s (Max:     0.008s)
Time for merge operator:                40.001s
Time for coverage check:                 1.010s
  Time for BDD entailment checks:        0.212s
Total time for SMT solver (w/o itp):     8.358s

Number of path formula cache hits:   22054275 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    52.122s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               45787
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       28396 (count: 286065, min: 0, max: 2174, avg: 0.10)
Time for BDD node cleanup:                             0.076s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 28.094s
  Time for transition matches:                        11.485s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     19509756 (count: 19509756, min: 1, max: 1, avg: 1.00) [1 x 19509756]

CPA algorithm statistics
------------------------
Number of iterations:            14735406
Max size of waitlist:            31
Average size of waitlist:        17
Number of computed successors:   19123981
Max successors for one state:    2
Number of times merged:          4245317
Number of times stopped:         4356803
Number of times breaked:         138

Total time for CPA algorithm:       845.539s (Max:    15.792s)
  Time for choose from waitlist:      5.596s
  Time for precision adjustment:    338.748s
  Time for transfer relation:       342.097s
  Time for merge operator:           80.221s
  Time for stop operator:            18.651s
  Time for adding to reached set:    23.916s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   138
Avg. length of target path (in blocks):               12730 (count: 138, min: 63, max: 116, avg: 92.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  42.268s
  Counterexample analysis:                             7.024s (Max:     0.127s, Calls: 138)
    Refinement sat check:                              4.026s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.135s
  Precision update:                                    0.162s
  ARG update:                                         34.729s

Length of refined path (in blocks):                   10522 (count: 138, min: 42, max: 112, avg: 76.25)
Number of affected states:                            10141 (count: 138, min: 1, max: 111, avg: 73.49)
Length (states) of path with itp 'true':                243 (count: 138, min: 0, max: 59, avg: 1.76)
Length (states) of path with itp non-trivial itp:     10141 (count: 138, min: 1, max: 111, avg: 73.49)
Length (states) of path with itp 'false':               138 (count: 138, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         315 (count: 138, min: 0, max: 14, avg: 2.28)
Equal non-trivial interpolants along paths:            9688 (count: 138, min: 0, max: 108, avg: 70.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                138
Number of successful refinements:     138
Number of failed refinements:         0
Max. size of reached set before ref.: 173132
Max. size of reached set after ref.:  7506
Avg. size of reached set before ref.: 106379.70
Avg. size of reached set after ref.:  90.87

Total time for CEGAR algorithm:     896.069s
Time for refinements:                50.514s
Average time for refinement:          0.366s
Max time for refinement:              3.500s

Code Coverage
-----------------------------
  Function coverage:      0.562
  Visited lines:          955
  Total lines:            1708
  Line coverage:          0.559
  Visited conditions:     564
  Total conditions:       754
  Condition coverage:     0.748

CPAchecker general statistics
-----------------------------
Number of program locations:     2241
Number of CFA edges:             2732
Number of relevant variables:    296
Number of functions:             73
Number of loops:                 9
Size of reached set:             68239
  Number of reached locations:   1080 (48%)
    Avg states per location:     63
    Max states per location:     255 (at node N557)
  Number of reached functions:   41 (56%)
  Number of partitions:          68144
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1309 (before line 1691), Function timeShift called from node N2538, stack depth 5 [595776f9], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          4.202s
  Time for loading CPAs:          0.886s
  Time for loading parser:        0.718s
  Time for CFA construction:      2.399s
    Time for parsing file(s):     0.695s
    Time for AST to CFA:          0.750s
    Time for CFA sanity check:    0.239s
    Time for post-processing:     0.531s
      Time for var class.:        0.290s
Time for Analysis:              896.069s
CPU time for analysis:          895.980s
Total time for CPAchecker:      900.275s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              1.299s

Time for Garbage Collector:     127.746s (in 1030 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1631MB (  1556 MiB) max;    761MB (   726 MiB) avg;   1656MB (  1580 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:          1744MB (  1663 MiB) max;   1099MB (  1048 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8125MB (  7749 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
