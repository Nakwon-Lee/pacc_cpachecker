scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_45g0pysh/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11119 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11101 (100%)
  Because of loop head:            12 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       9000 (81%)
  Times precision was {false}:     118 (1%)
  Times result was cached:         1935 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66 (1%)
  Times result was 'false':        461 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         122306
  BDD entailment checks:           1578
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          3
Number of abstraction locations:          55
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2119
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 11.52
Number of irrelevant predicates:          1677 (79%)
Number of preds handled by boolean abs:   66 (3%)
  Total number of models for allsat:      67
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  6.724s
  Time for path formula creation:        6.425s
Time for strengthen operator:            0.450s
Time for prec operator:                  2.158s
  Time for abstraction:                  1.392s (Max:     0.031s, Count: 11119)
    Boolean abstraction:                 0.118s
    Solving time:                        0.169s (Max:     0.013s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.020s (Max:     0.008s)
Time for merge operator:                 1.381s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.171s

Number of path formula cache hits:   305103 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.279s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         138 (count: 11591, min: 0, max: 55, avg: 0.01)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.136s
  Time for transition matches:                         0.523s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       281505 (count: 281505, min: 1, max: 1, avg: 1.00) [1 x 281505]

CPA algorithm statistics
------------------------
Number of iterations:            211118
Max size of waitlist:            129
Average size of waitlist:        80
Number of computed successors:   274098
Max successors for one state:    2
Number of times merged:          60364
Number of times stopped:         61834
Number of times breaked:         6

Total time for CPA algorithm:        24.707s (Max:     9.966s)
  Time for choose from waitlist:      0.251s
  Time for precision adjustment:      5.140s
  Time for transfer relation:        13.073s
  Time for merge operator:            3.089s
  Time for stop operator:             0.742s
  Time for adding to reached set:     0.717s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 388 (count: 6, min: 63, max: 65, avg: 64.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.194s
  Counterexample analysis:                             0.316s (Max:     0.068s, Calls: 6)
    Refinement sat check:                              0.181s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.013s
  ARG update:                                          0.816s

Length of refined path (in blocks):                     364 (count: 6, min: 59, max: 61, avg: 60.67)
Number of affected states:                              358 (count: 6, min: 58, max: 60, avg: 59.67)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       358 (count: 6, min: 58, max: 60, avg: 59.67)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 6, min: 1, max: 1, avg: 1.00)
Equal non-trivial interpolants along paths:             346 (count: 6, min: 56, max: 58, avg: 57.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 33207
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 31871.17
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.210s
Time for refinements:                 1.503s
Average time for refinement:          0.250s
Max time for refinement:              0.421s

Code Coverage
-----------------------------
  Function coverage:      0.577
  Visited lines:          996
  Total lines:            1763
  Line coverage:          0.565
  Visited conditions:     576
  Total conditions:       762
  Condition coverage:     0.756

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             20593
  Number of reached locations:   1096 (47%)
    Avg states per location:     18
    Max states per location:     84 (at node N2192)
  Number of reached functions:   45 (58%)
  Number of partitions:          20589
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1231 (before line 1568), Function timeShift called from node N2011, stack depth 5 [40d23991], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        106

Time for analysis setup:          4.073s
  Time for loading CPAs:          0.851s
  Time for loading parser:        0.644s
  Time for CFA construction:      2.401s
    Time for parsing file(s):     0.709s
    Time for AST to CFA:          0.704s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.567s
      Time for var class.:        0.298s
Time for Analysis:               26.210s
CPU time for analysis:           26.210s
Total time for CPAchecker:       30.289s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.487s

Time for Garbage Collector:       1.902s (in 73 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                127MB (   121 MiB) max;     66MB (    63 MiB) avg;    133MB (   127 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           135MB (   128 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
