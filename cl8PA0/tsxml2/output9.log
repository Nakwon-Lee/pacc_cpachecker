scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fzu5icqy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12022 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11848 (99%)
  Because of loop head:            136 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       1697 (14%)
  Times precision was {false}:     237 (2%)
  Times result was cached:         8897 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1191 (10%)
  Times result was 'false':        1043 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         31926
  BDD entailment checks:           2654
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          27
Number of abstraction locations:          73
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         47648
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 33.37
Number of irrelevant predicates:          17955 (38%)
Number of preds handled by boolean abs:   3875 (8%)
  Total number of models for allsat:      2338
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.96

Time for post operator:                  3.670s
  Time for path formula creation:        3.443s
Time for strengthen operator:            0.281s
Time for prec operator:                  9.041s
  Time for abstraction:                  8.444s (Max:     0.028s, Count: 12022)
    Boolean abstraction:                 1.912s
    Solving time:                        1.383s (Max:     0.017s)
    Model enumeration time:              0.196s
    Time for BDD construction:           0.207s (Max:     0.012s)
Time for merge operator:                 0.665s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     1.579s

Number of path formula cache hits:   106803 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.823s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1474
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3621 (count: 13358, min: 0, max: 560, avg: 0.27)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.624s
  Time for transition matches:                         0.293s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       108238 (count: 108238, min: 1, max: 1, avg: 1.00) [1 x 108238]

CPA algorithm statistics
------------------------
Number of iterations:            75927
Max size of waitlist:            70
Average size of waitlist:        25
Number of computed successors:   94370
Max successors for one state:    2
Number of times merged:          14636
Number of times stopped:         16189
Number of times breaked:         38

Total time for CPA algorithm:        21.654s (Max:     5.864s)
  Time for choose from waitlist:      0.251s
  Time for precision adjustment:     10.364s
  Time for transfer relation:         7.304s
  Time for merge operator:            1.614s
  Time for stop operator:             0.446s
  Time for adding to reached set:     0.452s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                3538 (count: 38, min: 63, max: 131, avg: 93.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.979s
  Counterexample analysis:                             3.231s (Max:     0.153s, Calls: 38)
    Refinement sat check:                              1.591s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.128s
  Precision update:                                    0.109s
  ARG update:                                          0.384s

Length of refined path (in blocks):                    3226 (count: 38, min: 43, max: 127, avg: 84.89)
Number of affected states:                             2997 (count: 38, min: 1, max: 126, avg: 78.87)
Length (states) of path with itp 'true':                191 (count: 38, min: 0, max: 59, avg: 5.03)
Length (states) of path with itp non-trivial itp:      2997 (count: 38, min: 1, max: 126, avg: 78.87)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         134 (count: 38, min: 0, max: 9, avg: 3.53)
Equal non-trivial interpolants along paths:            2825 (count: 38, min: 0, max: 122, avg: 74.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 10669
Max. size of reached set after ref.:  606
Avg. size of reached set before ref.: 2030.87
Avg. size of reached set after ref.:  36.03

Total time for CEGAR algorithm:      25.897s
Time for refinements:                 4.231s
Average time for refinement:          0.111s
Max time for refinement:              0.256s

Code Coverage
-----------------------------
  Function coverage:      0.423
  Visited lines:          428
  Total lines:            1763
  Line coverage:          0.243
  Visited conditions:     194
  Total conditions:       762
  Condition coverage:     0.255

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             1335
  Number of reached locations:   432 (19%)
    Avg states per location:     3
    Max states per location:     35 (at node N492)
  Number of reached functions:   33 (42%)
  Number of partitions:          1328
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1294 (after line 1669), Function timeShift called from node N2011, stack depth 5 [3f9dca01], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          4.362s
  Time for loading CPAs:          0.830s
  Time for loading parser:        0.722s
  Time for CFA construction:      2.598s
    Time for parsing file(s):     0.742s
    Time for AST to CFA:          0.821s
    Time for CFA sanity check:    0.245s
    Time for post-processing:     0.581s
      Time for var class.:        0.326s
Time for Analysis:               25.897s
CPU time for analysis:           25.880s
Total time for CPAchecker:       30.267s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.114s

Time for Garbage Collector:       0.541s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     50MB (    47 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
