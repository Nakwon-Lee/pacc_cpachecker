scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p63dlspp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12379 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12141 (98%)
  Because of loop head:            176 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (1%)
  Times precision was empty:       1932 (16%)
  Times precision was {false}:     270 (2%)
  Times result was cached:         8891 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1286 (10%)
  Times result was 'false':        1130 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         37713
  BDD entailment checks:           3833
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          58
Number of abstraction locations:          91
Max number of predicates per location:    29
Avg number of predicates per location:    12
Total predicates per abstraction:         96691
Max number of predicates per abstraction: 29
Avg number of predicates per abstraction: 62.14
Number of irrelevant predicates:          46683 (48%)
Number of preds handled by boolean abs:   6273 (6%)
  Total number of models for allsat:      2276
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.77

Time for post operator:                  3.434s
  Time for path formula creation:        3.282s
Time for strengthen operator:            0.253s
Time for prec operator:                 10.140s
  Time for abstraction:                  9.691s (Max:     0.030s, Count: 12379)
    Boolean abstraction:                 2.210s
    Solving time:                        1.605s (Max:     0.017s)
    Model enumeration time:              0.220s
    Time for BDD construction:           0.216s (Max:     0.013s)
Time for merge operator:                 0.401s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     1.825s

Number of path formula cache hits:   114966 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.892s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               7972
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8673 (count: 17501, min: 0, max: 1291, avg: 0.50)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.485s
Automaton transfers with branching:                0
Automaton transfer successors:                       118191 (count: 118191, min: 1, max: 1, avg: 1.00) [1 x 118191]

CPA algorithm statistics
------------------------
Number of iterations:            83980
Max size of waitlist:            45
Average size of waitlist:        11
Number of computed successors:   104652
Max successors for one state:    2
Number of times merged:          16940
Number of times stopped:         18322
Number of times breaked:         62

Total time for CPA algorithm:        20.468s (Max:     1.790s)
  Time for choose from waitlist:      0.187s
  Time for precision adjustment:     11.300s
  Time for transfer relation:         6.201s
  Time for merge operator:            1.007s
  Time for stop operator:             0.379s
  Time for adding to reached set:     0.400s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                4852 (count: 62, min: 63, max: 118, avg: 78.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.117s
  Counterexample analysis:                             4.266s (Max:     0.135s, Calls: 62)
    Refinement sat check:                              2.316s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.148s
  Precision update:                                    0.130s
  ARG update:                                          0.405s

Length of refined path (in blocks):                    3917 (count: 62, min: 42, max: 92, avg: 63.18)
Number of affected states:                             3234 (count: 62, min: 1, max: 87, avg: 52.16)
Length (states) of path with itp 'true':                621 (count: 62, min: 0, max: 59, avg: 10.02)
Length (states) of path with itp non-trivial itp:      3234 (count: 62, min: 1, max: 87, avg: 52.16)
Length (states) of path with itp 'false':                62 (count: 62, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         182 (count: 62, min: 0, max: 9, avg: 2.94)
Equal non-trivial interpolants along paths:            2990 (count: 62, min: 0, max: 86, avg: 48.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 3599
Max. size of reached set after ref.:  581
Avg. size of reached set before ref.: 1415.47
Avg. size of reached set after ref.:  76.79

Total time for CEGAR algorithm:      25.938s
Time for refinements:                 5.465s
Average time for refinement:          0.088s
Max time for refinement:              0.191s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          565
  Total lines:            1763
  Line coverage:          0.320
  Visited conditions:     274
  Total conditions:       762
  Condition coverage:     0.360

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             2203
  Number of reached locations:   566 (24%)
    Avg states per location:     3
    Max states per location:     60 (at node N491)
  Number of reached functions:   37 (47%)
  Number of partitions:          2164
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1303 (before line 1691), Function timeShift called from node N2011, stack depth 5 [17fae2e9], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          4.331s
  Time for loading CPAs:          0.802s
  Time for loading parser:        0.803s
  Time for CFA construction:      2.500s
    Time for parsing file(s):     0.683s
    Time for AST to CFA:          0.761s
    Time for CFA sanity check:    0.263s
    Time for post-processing:     0.630s
      Time for var class.:        0.340s
Time for Analysis:               25.938s
CPU time for analysis:           25.940s
Total time for CPAchecker:       30.273s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.164s

Time for Garbage Collector:       0.561s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     45MB (    43 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
