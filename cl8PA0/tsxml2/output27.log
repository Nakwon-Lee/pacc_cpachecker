scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gvfm7uar/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7976 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7972 (100%)
  Because of loop head:            3 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (0%)
  Times precision was empty:       7342 (92%)
  Times precision was {false}:     99 (1%)
  Times result was cached:         326 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      209 (3%)
  Times result was 'false':        136 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         83842
  BDD entailment checks:           1382
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          6
Number of abstraction locations:          47
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         1663
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 5.40
Number of irrelevant predicates:          1095 (66%)
Number of preds handled by boolean abs:   250 (15%)
  Total number of models for allsat:      211
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  8.975s
  Time for path formula creation:        8.705s
Time for strengthen operator:            0.396s
Time for prec operator:                  1.903s
  Time for abstraction:                  1.339s (Max:     0.027s, Count: 7976)
    Boolean abstraction:                 0.360s
    Solving time:                        0.311s (Max:     0.015s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.053s (Max:     0.009s)
Time for merge operator:                 2.092s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.344s

Number of path formula cache hits:   98134 (46%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.162s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         351 (count: 10495, min: 0, max: 127, avg: 0.03)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.611s
  Time for transition matches:                         0.282s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       193546 (count: 193546, min: 1, max: 1, avg: 1.00) [1 x 193546]

CPA algorithm statistics
------------------------
Number of iterations:            145682
Max size of waitlist:            28
Average size of waitlist:        14
Number of computed successors:   188448
Max successors for one state:    2
Number of times merged:          41230
Number of times stopped:         42608
Number of times breaked:         1

Total time for CPA algorithm:        24.995s (Max:    18.289s)
  Time for choose from waitlist:      0.177s
  Time for precision adjustment:      4.528s
  Time for transfer relation:        13.813s
  Time for merge operator:            3.529s
  Time for stop operator:             0.656s
  Time for adding to reached set:     0.657s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                  85 (count: 1, min: 85, max: 85, avg: 85.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.857s
  Counterexample analysis:                             0.108s (Max:     0.108s, Calls: 1)
    Refinement sat check:                              0.053s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.006s
  ARG update:                                          0.705s

Length of refined path (in blocks):                      56 (count: 1, min: 56, max: 56, avg: 56.00)
Number of affected states:                               55 (count: 1, min: 55, max: 55, avg: 55.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        55 (count: 1, min: 55, max: 55, avg: 55.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 1, min: 3, max: 3, avg: 3.00)
Equal non-trivial interpolants along paths:              51 (count: 1, min: 51, max: 51, avg: 51.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 87738
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 87738.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.032s
Time for refinements:                 1.037s
Average time for refinement:          1.037s
Max time for refinement:              1.037s

Code Coverage
-----------------------------
  Function coverage:      0.628
  Visited lines:          1093
  Total lines:            1763
  Line coverage:          0.620
  Visited conditions:     618
  Total conditions:       762
  Condition coverage:     0.811

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             57969
  Number of reached locations:   1208 (52%)
    Avg states per location:     47
    Max states per location:     301 (at node N2191)
  Number of reached functions:   49 (63%)
  Number of partitions:          57967
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1137 (before line 1432), Function stopRequestedAtCurrentFloor called from node N1230, stack depth 6 [4656b559], stack [main, runTest, test, cleanup, timeShift, stopRequestedAtCurrentFloor]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          4.472s
  Time for loading CPAs:          0.762s
  Time for loading parser:        0.740s
  Time for CFA construction:      2.794s
    Time for parsing file(s):     0.835s
    Time for AST to CFA:          0.759s
    Time for CFA sanity check:    0.309s
    Time for post-processing:     0.699s
      Time for var class.:        0.408s
Time for Analysis:               26.032s
CPU time for analysis:           26.030s
Total time for CPAchecker:       30.509s
Total CPU time for CPAchecker:   30.500s
Time for statistics:              0.791s

Time for Garbage Collector:       2.210s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                191MB (   182 MiB) max;     85MB (    81 MiB) avg;    218MB (   207 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           241MB (   230 MiB) max;    153MB (   146 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
