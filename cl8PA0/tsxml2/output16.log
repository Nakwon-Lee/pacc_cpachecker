scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zdqckxxi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9175 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9169 (100%)
  Because of loop head:            3 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (0%)
  Times precision was empty:       8455 (92%)
  Times precision was {false}:     87 (1%)
  Times result was cached:         518 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      115 (1%)
  Times result was 'false':        161 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         100772
  BDD entailment checks:           1524
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          5
Number of abstraction locations:          39
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         958
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 4.74
Number of irrelevant predicates:          368 (38%)
Number of preds handled by boolean abs:   140 (15%)
  Total number of models for allsat:      139
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.21

Time for post operator:                  8.922s
  Time for path formula creation:        8.624s
Time for strengthen operator:            0.318s
Time for prec operator:                  1.752s
  Time for abstraction:                  0.938s (Max:     0.024s, Count: 9175)
    Boolean abstraction:                 0.202s
    Solving time:                        0.207s (Max:     0.013s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 2.007s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.220s

Number of path formula cache hits:   167890 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.680s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         233 (count: 11128, min: 0, max: 64, avg: 0.02)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.863s
  Time for transition matches:                         0.328s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       231309 (count: 231309, min: 1, max: 1, avg: 1.00) [1 x 231309]

CPA algorithm statistics
------------------------
Number of iterations:            174250
Max size of waitlist:            116
Average size of waitlist:        59
Number of computed successors:   225616
Max successors for one state:    2
Number of times merged:          49624
Number of times stopped:         51144
Number of times breaked:         3

Total time for CPA algorithm:        24.547s (Max:    13.183s)
  Time for choose from waitlist:      0.157s
  Time for precision adjustment:      4.134s
  Time for transfer relation:        13.813s
  Time for merge operator:            3.523s
  Time for stop operator:             0.717s
  Time for adding to reached set:     0.667s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                 221 (count: 3, min: 71, max: 77, avg: 73.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.885s
  Counterexample analysis:                             0.212s (Max:     0.073s, Calls: 3)
    Refinement sat check:                              0.152s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.003s
  ARG update:                                          0.635s

Length of refined path (in blocks):                     128 (count: 3, min: 42, max: 43, avg: 42.67)
Number of affected states:                               84 (count: 3, min: 1, max: 42, avg: 28.00)
Length (states) of path with itp 'true':                 41 (count: 3, min: 0, max: 41, avg: 13.67)
Length (states) of path with itp non-trivial itp:        84 (count: 3, min: 1, max: 42, avg: 28.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 3, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:              80 (count: 3, min: 0, max: 41, avg: 26.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 47836
Max. size of reached set after ref.:  596
Avg. size of reached set before ref.: 46020.00
Avg. size of reached set after ref.:  200.67

Total time for CEGAR algorithm:      25.712s
Time for refinements:                 1.164s
Average time for refinement:          0.388s
Max time for refinement:              0.596s

Code Coverage
-----------------------------
  Function coverage:      0.590
  Visited lines:          1018
  Total lines:            1763
  Line coverage:          0.577
  Visited conditions:     590
  Total conditions:       762
  Condition coverage:     0.774

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             36853
  Number of reached locations:   1133 (49%)
    Avg states per location:     32
    Max states per location:     125 (at node N2191)
  Number of reached functions:   46 (59%)
  Number of partitions:          36852
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1231 (before line 1568), Function timeShift called from node N2011, stack depth 5 [153f177c], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        40

Time for analysis setup:          4.044s
  Time for loading CPAs:          0.787s
  Time for loading parser:        0.724s
  Time for CFA construction:      2.312s
    Time for parsing file(s):     0.650s
    Time for AST to CFA:          0.700s
    Time for CFA sanity check:    0.244s
    Time for post-processing:     0.552s
      Time for var class.:        0.305s
Time for Analysis:               25.712s
CPU time for analysis:           25.710s
Total time for CPAchecker:       29.760s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.607s

Time for Garbage Collector:       1.880s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                141MB (   135 MiB) max;     70MB (    67 MiB) avg;    151MB (   144 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           150MB (   143 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
