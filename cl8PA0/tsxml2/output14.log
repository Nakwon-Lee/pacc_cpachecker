scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ermway5t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14526 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14257 (98%)
  Because of loop head:            203 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (0%)
  Times precision was empty:       2210 (15%)
  Times precision was {false}:     273 (2%)
  Times result was cached:         10696 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1347 (9%)
  Times result was 'false':        1303 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         44194
  BDD entailment checks:           4872
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          58
Number of abstraction locations:          91
Max number of predicates per location:    29
Avg number of predicates per location:    12
Total predicates per abstraction:         117469
Max number of predicates per abstraction: 29
Avg number of predicates per abstraction: 72.51
Number of irrelevant predicates:          57351 (49%)
Number of preds handled by boolean abs:   6690 (6%)
  Total number of models for allsat:      2461
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.83

Time for post operator:                  3.248s
  Time for path formula creation:        3.110s
Time for strengthen operator:            0.261s
Time for prec operator:                  9.957s
  Time for abstraction:                  9.434s (Max:     0.022s, Count: 14526)
    Boolean abstraction:                 1.943s
    Solving time:                        1.435s (Max:     0.016s)
    Model enumeration time:              0.200s
    Time for BDD construction:           0.173s (Max:     0.013s)
Time for merge operator:                 0.557s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.070s
Total time for SMT solver (w/o itp):     1.635s

Number of path formula cache hits:   133190 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.742s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8082
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8827 (count: 19230, min: 0, max: 1291, avg: 0.46)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.547s
  Time for transition matches:                         0.194s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       138292 (count: 138292, min: 1, max: 1, avg: 1.00) [1 x 138292]

CPA algorithm statistics
------------------------
Number of iterations:            98056
Max size of waitlist:            45
Average size of waitlist:        13
Number of computed successors:   122142
Max successors for one state:    2
Number of times merged:          19661
Number of times stopped:         21400
Number of times breaked:         66

Total time for CPA algorithm:        20.446s (Max:     1.630s)
  Time for choose from waitlist:      0.192s
  Time for precision adjustment:     11.139s
  Time for transfer relation:         6.139s
  Time for merge operator:            1.239s
  Time for stop operator:             0.395s
  Time for adding to reached set:     0.445s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   66
Avg. length of target path (in blocks):                5348 (count: 66, min: 63, max: 128, avg: 81.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.987s
  Counterexample analysis:                             4.266s (Max:     0.160s, Calls: 66)
    Refinement sat check:                              2.391s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.103s
  Precision update:                                    0.103s
  ARG update:                                          0.389s

Length of refined path (in blocks):                    4293 (count: 66, min: 42, max: 98, avg: 65.05)
Number of affected states:                             3606 (count: 66, min: 1, max: 97, avg: 54.64)
Length (states) of path with itp 'true':                621 (count: 66, min: 0, max: 59, avg: 9.41)
Length (states) of path with itp non-trivial itp:      3606 (count: 66, min: 1, max: 97, avg: 54.64)
Length (states) of path with itp 'false':                66 (count: 66, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         182 (count: 66, min: 0, max: 9, avg: 2.76)
Equal non-trivial interpolants along paths:            3358 (count: 66, min: 0, max: 96, avg: 50.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                66
Number of successful refinements:     66
Number of failed refinements:         0
Max. size of reached set before ref.: 3837
Max. size of reached set after ref.:  581
Avg. size of reached set before ref.: 1550.74
Avg. size of reached set after ref.:  72.32

Total time for CEGAR algorithm:      25.713s
Time for refinements:                 5.259s
Average time for refinement:          0.079s
Max time for refinement:              0.175s

Code Coverage
-----------------------------
  Function coverage:      0.436
  Visited lines:          505
  Total lines:            1763
  Line coverage:          0.286
  Visited conditions:     248
  Total conditions:       762
  Condition coverage:     0.325

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             1864
  Number of reached locations:   512 (22%)
    Avg states per location:     3
    Max states per location:     60 (at node N491)
  Number of reached functions:   34 (44%)
  Number of partitions:          1831
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1303 (before line 1691), Function timeShift called from node N2011, stack depth 5 [51101de4], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          4.064s
  Time for loading CPAs:          0.780s
  Time for loading parser:        0.699s
  Time for CFA construction:      2.416s
    Time for parsing file(s):     0.687s
    Time for AST to CFA:          0.732s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     0.561s
      Time for var class.:        0.326s
Time for Analysis:               25.713s
CPU time for analysis:           25.720s
Total time for CPAchecker:       29.781s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.138s

Time for Garbage Collector:       0.585s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     46MB (    43 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
