scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d57j14ui/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6965 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6958 (100%)
  Because of loop head:            5 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       6391 (92%)
  Times precision was {false}:     188 (3%)
  Times result was cached:         353 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      33 (0%)
  Times result was 'false':        62 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         95526
  BDD entailment checks:           906
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          2
Number of abstraction locations:          42
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         574
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.60
Number of irrelevant predicates:          477 (83%)
Number of preds handled by boolean abs:   33 (6%)
  Total number of models for allsat:      33
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  8.862s
  Time for path formula creation:        8.573s
Time for strengthen operator:            0.792s
Time for prec operator:                  1.591s
  Time for abstraction:                  0.879s (Max:     0.023s, Count: 6965)
    Boolean abstraction:                 0.086s
    Solving time:                        0.140s (Max:     0.011s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.024s (Max:     0.009s)
Time for merge operator:                 2.314s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     0.145s

Number of path formula cache hits:   79577 (35%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.228s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          69 (count: 8460, min: 0, max: 53, avg: 0.01)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.654s
  Time for transition matches:                         0.301s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       214959 (count: 214959, min: 1, max: 1, avg: 1.00) [1 x 214959]

CPA algorithm statistics
------------------------
Number of iterations:            161924
Max size of waitlist:            209
Average size of waitlist:        115
Number of computed successors:   210549
Max successors for one state:    2
Number of times merged:          47310
Number of times stopped:         48212
Number of times breaked:         2

Total time for CPA algorithm:        25.079s (Max:    14.949s)
  Time for choose from waitlist:      0.323s
  Time for precision adjustment:      3.993s
  Time for transfer relation:        14.280s
  Time for merge operator:            3.641s
  Time for stop operator:             0.638s
  Time for adding to reached set:     0.663s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                 172 (count: 2, min: 83, max: 89, avg: 86.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.938s
  Counterexample analysis:                             0.131s (Max:     0.082s, Calls: 2)
    Refinement sat check:                              0.093s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.003s
  ARG update:                                          0.753s

Length of refined path (in blocks):                      92 (count: 2, min: 43, max: 49, avg: 46.00)
Number of affected states:                               90 (count: 2, min: 42, max: 48, avg: 45.00)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        90 (count: 2, min: 42, max: 48, avg: 45.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              88 (count: 2, min: 41, max: 47, avg: 44.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 65680
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 65433.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.273s
Time for refinements:                 1.194s
Average time for refinement:          0.597s
Max time for refinement:              0.737s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          774
  Total lines:            1763
  Line coverage:          0.439
  Visited conditions:     440
  Total conditions:       762
  Condition coverage:     0.577

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             31415
  Number of reached locations:   869 (38%)
    Avg states per location:     36
    Max states per location:     126 (at node N2224)
  Number of reached functions:   40 (51%)
  Number of partitions:          31412
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1116 (before line 1400), Function stopRequestedAtCurrentFloor__wrappee__twothirdsfull called from node N1128, stack depth 7 [7b71364e], stack [main, runTest, test, cleanup, timeShift, stopRequestedAtCurrentFloor, stopRequestedAtCurrentFloor__wrappee__twothirdsfull]])
  Number of target states:       0
  Size of final wait list        150

Time for analysis setup:          3.979s
  Time for loading CPAs:          0.822s
  Time for loading parser:        0.646s
  Time for CFA construction:      2.288s
    Time for parsing file(s):     0.649s
    Time for AST to CFA:          0.685s
    Time for CFA sanity check:    0.239s
    Time for post-processing:     0.561s
      Time for var class.:        0.329s
Time for Analysis:               26.273s
CPU time for analysis:           26.270s
Total time for CPAchecker:       30.256s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.553s

Time for Garbage Collector:       2.194s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                204MB (   195 MiB) max;     86MB (    82 MiB) avg;    212MB (   202 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           211MB (   201 MiB) max;    158MB (   151 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
