scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9ouayqll/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5891 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5846 (99%)
  Because of loop head:            35 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       2587 (44%)
  Times precision was {false}:     210 (4%)
  Times result was cached:         788 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2306 (39%)
  Times result was 'false':        423 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         33059
  BDD entailment checks:           509
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          18
Number of abstraction locations:          70
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         19698
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 7.83
Number of irrelevant predicates:          5735 (29%)
Number of preds handled by boolean abs:   11297 (57%)
  Total number of models for allsat:      11249
  Max number of models for allsat:        24
  Avg number of models for allsat:        4.88

Time for post operator:                  5.247s
  Time for path formula creation:        5.064s
Time for strengthen operator:            0.188s
Time for prec operator:                  9.340s
  Time for abstraction:                  8.890s (Max:     0.030s, Count: 5891)
    Boolean abstraction:                 3.908s
    Solving time:                        2.570s (Max:     0.033s)
    Model enumeration time:              0.681s
    Time for BDD construction:           0.338s (Max:     0.013s)
Time for merge operator:                 1.115s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     3.252s

Number of path formula cache hits:   39291 (42%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.730s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2928
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5667 (count: 18684, min: 0, max: 467, avg: 0.30)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.508s
  Time for transition matches:                         0.211s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        87028 (count: 87028, min: 1, max: 1, avg: 1.00) [1 x 87028]

CPA algorithm statistics
------------------------
Number of iterations:            63560
Max size of waitlist:            205
Average size of waitlist:        51
Number of computed successors:   81627
Max successors for one state:    2
Number of times merged:          16275
Number of times stopped:         16601
Number of times breaked:         10

Total time for CPA algorithm:        23.001s (Max:    12.078s)
  Time for choose from waitlist:      0.175s
  Time for precision adjustment:     10.793s
  Time for transfer relation:         8.068s
  Time for merge operator:            2.028s
  Time for stop operator:             0.349s
  Time for adding to reached set:     0.365s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                2033 (count: 10, min: 85, max: 417, avg: 203.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.398s
  Counterexample analysis:                             1.758s (Max:     0.390s, Calls: 10)
    Refinement sat check:                              0.678s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.093s
  Precision update:                                    0.015s
  ARG update:                                          0.481s

Length of refined path (in blocks):                    1968 (count: 10, min: 56, max: 413, avg: 196.80)
Number of affected states:                             1875 (count: 10, min: 1, max: 412, avg: 187.50)
Length (states) of path with itp 'true':                 83 (count: 10, min: 0, max: 83, avg: 8.30)
Length (states) of path with itp non-trivial itp:      1875 (count: 10, min: 1, max: 412, avg: 187.50)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          33 (count: 10, min: 0, max: 7, avg: 3.30)
Equal non-trivial interpolants along paths:            1832 (count: 10, min: 0, max: 404, avg: 183.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 43460
Max. size of reached set after ref.:  932
Avg. size of reached set before ref.: 6277.90
Avg. size of reached set after ref.:  95.90

Total time for CEGAR algorithm:      25.651s
Time for refinements:                 2.648s
Average time for refinement:          0.264s
Max time for refinement:              0.590s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          606
  Total lines:            1763
  Line coverage:          0.344
  Visited conditions:     308
  Total conditions:       762
  Condition coverage:     0.404

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             2783
  Number of reached locations:   597 (26%)
    Avg states per location:     4
    Max states per location:     36 (at node N2192)
  Number of reached functions:   37 (47%)
  Number of partitions:          2772
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2014 (before lines 2597-2625), Function cleanup called from node N1657, stack depth 4 [3fac6f2e], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        131

Time for analysis setup:          4.137s
  Time for loading CPAs:          0.759s
  Time for loading parser:        0.720s
  Time for CFA construction:      2.478s
    Time for parsing file(s):     0.666s
    Time for AST to CFA:          0.765s
    Time for CFA sanity check:    0.274s
    Time for post-processing:     0.595s
      Time for var class.:        0.324s
Time for Analysis:               25.651s
CPU time for analysis:           25.650s
Total time for CPAchecker:       29.792s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.170s

Time for Garbage Collector:       0.790s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                107MB (   102 MiB) max;     64MB (    61 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
