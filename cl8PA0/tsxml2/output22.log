scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_37ouqc1m/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14901 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14707 (99%)
  Because of loop head:            151 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (0%)
  Times precision was empty:       1819 (12%)
  Times precision was {false}:     247 (2%)
  Times result was cached:         11440 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1395 (9%)
  Times result was 'false':        1182 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         36554
  BDD entailment checks:           3576
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          36
Number of abstraction locations:          73
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         72378
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 44.08
Number of irrelevant predicates:          27575 (38%)
Number of preds handled by boolean abs:   5305 (7%)
  Total number of models for allsat:      3831
  Max number of models for allsat:        48
  Avg number of models for allsat:        2.75

Time for post operator:                  3.454s
  Time for path formula creation:        3.267s
Time for strengthen operator:            0.341s
Time for prec operator:                  9.919s
  Time for abstraction:                  9.371s (Max:     0.026s, Count: 14901)
    Boolean abstraction:                 2.196s
    Solving time:                        1.475s (Max:     0.013s)
    Model enumeration time:              0.334s
    Time for BDD construction:           0.222s (Max:     0.010s)
Time for merge operator:                 0.589s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.809s

Number of path formula cache hits:   130256 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.762s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5642
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4924 (count: 16055, min: 0, max: 743, avg: 0.31)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.641s
  Time for transition matches:                         0.256s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       127913 (count: 127913, min: 1, max: 1, avg: 1.00) [1 x 127913]

CPA algorithm statistics
------------------------
Number of iterations:            89339
Max size of waitlist:            70
Average size of waitlist:        24
Number of computed successors:   110623
Max successors for one state:    2
Number of times merged:          16489
Number of times stopped:         18756
Number of times breaked:         43

Total time for CPA algorithm:        21.591s (Max:     5.286s)
  Time for choose from waitlist:      0.217s
  Time for precision adjustment:     11.248s
  Time for transfer relation:         6.973s
  Time for merge operator:            1.232s
  Time for stop operator:             0.378s
  Time for adding to reached set:     0.408s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                4013 (count: 43, min: 63, max: 131, avg: 93.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.918s
  Counterexample analysis:                             3.281s (Max:     0.158s, Calls: 43)
    Refinement sat check:                              1.683s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.124s
  Precision update:                                    0.084s
  ARG update:                                          0.347s

Length of refined path (in blocks):                    3541 (count: 42, min: 43, max: 127, avg: 84.31)
Number of affected states:                             3295 (count: 42, min: 1, max: 126, avg: 78.45)
Length (states) of path with itp 'true':                204 (count: 42, min: 0, max: 59, avg: 4.86)
Length (states) of path with itp non-trivial itp:      3295 (count: 42, min: 1, max: 126, avg: 78.45)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         147 (count: 42, min: 0, max: 9, avg: 3.50)
Equal non-trivial interpolants along paths:            3106 (count: 42, min: 0, max: 122, avg: 73.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 10669
Max. size of reached set after ref.:  606
Avg. size of reached set before ref.: 2141.81
Avg. size of reached set after ref.:  33.62

Total time for CEGAR algorithm:      25.822s
Time for refinements:                 4.223s
Average time for refinement:          0.098s
Max time for refinement:              0.249s

Code Coverage
-----------------------------
  Function coverage:      0.449
  Visited lines:          448
  Total lines:            1763
  Line coverage:          0.254
  Visited conditions:     206
  Total conditions:       762
  Condition coverage:     0.270

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             3535
  Number of reached locations:   464 (20%)
    Avg states per location:     7
    Max states per location:     150 (at node N492)
  Number of reached functions:   35 (45%)
  Number of partitions:          3513
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2014 (before lines 2597-2625), Function cleanup called from node N1657, stack depth 4 [d1b0331], stack [main, runTest, test, cleanup]])
  Number of target states:       1
  Size of final wait list        50

Time for analysis setup:          4.413s
  Time for loading CPAs:          0.932s
  Time for loading parser:        0.724s
  Time for CFA construction:      2.550s
    Time for parsing file(s):     0.731s
    Time for AST to CFA:          0.816s
    Time for CFA sanity check:    0.248s
    Time for post-processing:     0.580s
      Time for var class.:        0.319s
Time for Analysis:               25.822s
CPU time for analysis:           25.820s
Total time for CPAchecker:       30.239s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.140s

Time for Garbage Collector:       0.620s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     50MB (    47 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
