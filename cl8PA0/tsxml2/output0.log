scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5oqfn509/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6580 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6527 (99%)
  Because of loop head:            42 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (0%)
  Times precision was empty:       2688 (41%)
  Times precision was {false}:     229 (3%)
  Times result was cached:         879 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2784 (42%)
  Times result was 'false':        499 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         34579
  BDD entailment checks:           589
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          19
Number of abstraction locations:          70
Max number of predicates per location:    12
Avg number of predicates per location:    7
Total predicates per abstraction:         25086
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 8.33
Number of irrelevant predicates:          6784 (27%)
Number of preds handled by boolean abs:   15027 (60%)
  Total number of models for allsat:      15293
  Max number of models for allsat:        28
  Avg number of models for allsat:        5.49

Time for post operator:                  4.724s
  Time for path formula creation:        4.592s
Time for strengthen operator:            0.209s
Time for prec operator:                 10.825s
  Time for abstraction:                 10.427s (Max:     0.023s, Count: 6580)
    Boolean abstraction:                 4.852s
    Solving time:                        3.057s (Max:     0.045s)
    Model enumeration time:              0.880s
    Time for BDD construction:           0.389s (Max:     0.012s)
Time for merge operator:                 1.153s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     3.938s

Number of path formula cache hits:   45264 (45%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.299s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3959
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6808 (count: 21999, min: 0, max: 476, avg: 0.31)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.408s
Automaton transfers with branching:                0
Automaton transfer successors:                        92598 (count: 92598, min: 1, max: 1, avg: 1.00) [1 x 92598]

CPA algorithm statistics
------------------------
Number of iterations:            67343
Max size of waitlist:            233
Average size of waitlist:        54
Number of computed successors:   86408
Max successors for one state:    2
Number of times merged:          16995
Number of times stopped:         17321
Number of times breaked:         11

Total time for CPA algorithm:        23.087s (Max:    10.412s)
  Time for choose from waitlist:      0.155s
  Time for precision adjustment:     12.112s
  Time for transfer relation:         7.351s
  Time for merge operator:            1.823s
  Time for stop operator:             0.317s
  Time for adding to reached set:     0.350s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                2505 (count: 11, min: 85, max: 472, avg: 227.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.904s
  Counterexample analysis:                             2.278s (Max:     0.519s, Calls: 11)
    Refinement sat check:                              0.814s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.040s
  ARG update:                                          0.427s

Length of refined path (in blocks):                    2436 (count: 11, min: 56, max: 468, avg: 221.45)
Number of affected states:                             2342 (count: 11, min: 1, max: 467, avg: 212.91)
Length (states) of path with itp 'true':                 83 (count: 11, min: 0, max: 83, avg: 7.55)
Length (states) of path with itp non-trivial itp:      2342 (count: 11, min: 1, max: 467, avg: 212.91)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          41 (count: 11, min: 0, max: 8, avg: 3.73)
Equal non-trivial interpolants along paths:            2290 (count: 11, min: 0, max: 458, avg: 208.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 43460
Max. size of reached set after ref.:  932
Avg. size of reached set before ref.: 6119.73
Avg. size of reached set after ref.:  87.45

Total time for CEGAR algorithm:      26.239s
Time for refinements:                 3.152s
Average time for refinement:          0.286s
Max time for refinement:              0.558s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          606
  Total lines:            1763
  Line coverage:          0.344
  Visited conditions:     308
  Total conditions:       762
  Condition coverage:     0.404

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             2233
  Number of reached locations:   597 (26%)
    Avg states per location:     3
    Max states per location:     28 (at node N2192)
  Number of reached functions:   37 (47%)
  Number of partitions:          2226
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2014 (before lines 2597-2625), Function cleanup called from node N1657, stack depth 4 [573c34e3], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        102

Time for analysis setup:          4.021s
  Time for loading CPAs:          0.742s
  Time for loading parser:        0.676s
  Time for CFA construction:      2.402s
    Time for parsing file(s):     0.674s
    Time for AST to CFA:          0.720s
    Time for CFA sanity check:    0.236s
    Time for post-processing:     0.582s
      Time for var class.:        0.323s
Time for Analysis:               26.239s
CPU time for analysis:           26.240s
Total time for CPAchecker:       30.265s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.130s

Time for Garbage Collector:       0.762s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                109MB (   104 MiB) max;     67MB (    64 MiB) avg;    112MB (   107 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
