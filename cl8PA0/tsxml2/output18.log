scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jkyag5no/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10480 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10463 (100%)
  Because of loop head:            11 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       8527 (81%)
  Times precision was {false}:     118 (1%)
  Times result was cached:         1772 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      63 (1%)
  Times result was 'false':        422 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         115149
  BDD entailment checks:           1481
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          3
Number of abstraction locations:          55
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1953
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 10.79
Number of irrelevant predicates:          1542 (79%)
Number of preds handled by boolean abs:   63 (3%)
  Total number of models for allsat:      64
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  6.643s
  Time for path formula creation:        6.332s
Time for strengthen operator:            0.364s
Time for prec operator:                  2.182s
  Time for abstraction:                  1.384s (Max:     0.022s, Count: 10480)
    Boolean abstraction:                 0.126s
    Solving time:                        0.167s (Max:     0.012s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.026s (Max:     0.009s)
Time for merge operator:                 1.312s
Time for coverage check:                 0.092s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     0.173s

Number of path formula cache hits:   284589 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.223s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         132 (count: 11003, min: 0, max: 55, avg: 0.01)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.809s
  Time for transition matches:                         0.363s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       265121 (count: 265121, min: 1, max: 1, avg: 1.00) [1 x 265121]

CPA algorithm statistics
------------------------
Number of iterations:            198849
Max size of waitlist:            129
Average size of waitlist:        79
Number of computed successors:   258118
Max successors for one state:    2
Number of times merged:          56834
Number of times stopped:         58213
Number of times breaked:         6

Total time for CPA algorithm:        24.456s (Max:     9.399s)
  Time for choose from waitlist:      0.300s
  Time for precision adjustment:      6.000s
  Time for transfer relation:        12.057s
  Time for merge operator:            2.837s
  Time for stop operator:             0.754s
  Time for adding to reached set:     0.695s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 388 (count: 6, min: 63, max: 65, avg: 64.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.094s
  Counterexample analysis:                             0.281s (Max:     0.060s, Calls: 6)
    Refinement sat check:                              0.176s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.003s
  ARG update:                                          0.730s

Length of refined path (in blocks):                     364 (count: 6, min: 59, max: 61, avg: 60.67)
Number of affected states:                              358 (count: 6, min: 58, max: 60, avg: 59.67)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       358 (count: 6, min: 58, max: 60, avg: 59.67)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 6, min: 1, max: 1, avg: 1.00)
Equal non-trivial interpolants along paths:             346 (count: 6, min: 56, max: 58, avg: 57.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 33207
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 31871.17
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.830s
Time for refinements:                 1.374s
Average time for refinement:          0.229s
Max time for refinement:              0.407s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          776
  Total lines:            1763
  Line coverage:          0.440
  Visited conditions:     448
  Total conditions:       762
  Condition coverage:     0.588

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             8275
  Number of reached locations:   847 (37%)
    Avg states per location:     9
    Max states per location:     35 (at node N1735)
  Number of reached functions:   41 (53%)
  Number of partitions:          8274
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1231 (before line 1568), Function timeShift called from node N2011, stack depth 5 [37d3f4c8], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        56

Time for analysis setup:          3.919s
  Time for loading CPAs:          0.844s
  Time for loading parser:        0.656s
  Time for CFA construction:      2.224s
    Time for parsing file(s):     0.601s
    Time for AST to CFA:          0.673s
    Time for CFA sanity check:    0.240s
    Time for post-processing:     0.532s
      Time for var class.:        0.297s
Time for Analysis:               25.830s
CPU time for analysis:           25.840s
Total time for CPAchecker:       29.757s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.245s

Time for Garbage Collector:       1.967s (in 70 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                130MB (   124 MiB) max;     67MB (    64 MiB) avg;    136MB (   129 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           135MB (   128 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
