scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hrf2xy5o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25780 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25592 (99%)
  Because of loop head:            139 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (0%)
  Times precision was empty:       12338 (48%)
  Times precision was {false}:     140 (1%)
  Times result was cached:         12047 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1255 (5%)
  Times result was 'false':        434 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         74996
  BDD entailment checks:           6346
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          39
Number of abstraction locations:          81
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         69679
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 49.95
Number of irrelevant predicates:          28194 (40%)
Number of preds handled by boolean abs:   4685 (7%)
  Total number of models for allsat:      3806
  Max number of models for allsat:        72
  Avg number of models for allsat:        3.03

Time for post operator:                  2.567s
  Time for path formula creation:        2.357s
Time for strengthen operator:            0.303s
Time for prec operator:                  8.964s
  Time for abstraction:                  8.289s (Max:     0.023s, Count: 25780)
    Boolean abstraction:                 2.093s
    Solving time:                        1.329s (Max:     0.016s)
    Model enumeration time:              0.327s
    Time for BDD construction:           0.244s (Max:     0.014s)
Time for merge operator:                 0.300s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):     1.656s

Number of path formula cache hits:   286562 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.636s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5850
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4548 (count: 27927, min: 0, max: 554, avg: 0.16)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.775s
  Time for transition matches:                         0.412s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       249373 (count: 249373, min: 1, max: 1, avg: 1.00) [1 x 249373]

CPA algorithm statistics
------------------------
Number of iterations:            175330
Max size of waitlist:            79
Average size of waitlist:        28
Number of computed successors:   216618
Max successors for one state:    2
Number of times merged:          34325
Number of times stopped:         38878
Number of times breaked:         49

Total time for CPA algorithm:        21.009s (Max:     1.801s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:     10.962s
  Time for transfer relation:         6.604s
  Time for merge operator:            1.051s
  Time for stop operator:             0.493s
  Time for adding to reached set:     0.570s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                4142 (count: 49, min: 63, max: 124, avg: 84.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.343s
  Counterexample analysis:                             3.504s (Max:     0.159s, Calls: 49)
    Refinement sat check:                              1.751s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.074s
  ARG update:                                          0.521s

Length of refined path (in blocks):                    3720 (count: 49, min: 42, max: 110, avg: 75.92)
Number of affected states:                             3246 (count: 49, min: 1, max: 109, avg: 66.24)
Length (states) of path with itp 'true':                425 (count: 49, min: 0, max: 59, avg: 8.67)
Length (states) of path with itp non-trivial itp:      3246 (count: 49, min: 1, max: 109, avg: 66.24)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         171 (count: 49, min: 0, max: 9, avg: 3.49)
Equal non-trivial interpolants along paths:            3026 (count: 49, min: 0, max: 103, avg: 61.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 7785
Max. size of reached set after ref.:  2084
Avg. size of reached set before ref.: 3748.04
Avg. size of reached set after ref.:  220.84

Total time for CEGAR algorithm:      25.709s
Time for refinements:                 4.685s
Average time for refinement:          0.095s
Max time for refinement:              0.177s

Code Coverage
-----------------------------
  Function coverage:      0.551
  Visited lines:          616
  Total lines:            1763
  Line coverage:          0.349
  Visited conditions:     286
  Total conditions:       762
  Condition coverage:     0.375

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             4473
  Number of reached locations:   636 (27%)
    Avg states per location:     7
    Max states per location:     64 (at node N1735)
  Number of reached functions:   43 (55%)
  Number of partitions:          4459
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1231 (before line 1568), Function timeShift called from node N2031, stack depth 5 [21e8c932], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        51

Time for analysis setup:          4.067s
  Time for loading CPAs:          0.848s
  Time for loading parser:        0.675s
  Time for CFA construction:      2.360s
    Time for parsing file(s):     0.650s
    Time for AST to CFA:          0.726s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     0.539s
      Time for var class.:        0.295s
Time for Analysis:               25.709s
CPU time for analysis:           25.700s
Total time for CPAchecker:       29.780s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.159s

Time for Garbage Collector:       0.710s (in 76 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     45MB (    43 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
