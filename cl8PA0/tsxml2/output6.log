scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j7q23vxj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7785 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7779 (100%)
  Because of loop head:            3 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (0%)
  Times precision was empty:       7265 (93%)
  Times precision was {false}:     84 (1%)
  Times result was cached:         321 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      115 (1%)
  Times result was 'false':        101 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         91863
  BDD entailment checks:           1057
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          5
Number of abstraction locations:          39
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         666
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 3.35
Number of irrelevant predicates:          256 (38%)
Number of preds handled by boolean abs:   140 (21%)
  Total number of models for allsat:      139
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.21

Time for post operator:                  8.779s
  Time for path formula creation:        8.512s
Time for strengthen operator:            0.489s
Time for prec operator:                  1.778s
  Time for abstraction:                  0.922s (Max:     0.039s, Count: 7785)
    Boolean abstraction:                 0.299s
    Solving time:                        0.258s (Max:     0.037s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.013s (Max:     0.006s)
Time for merge operator:                 1.895s
Time for coverage check:                 0.097s
  Time for BDD entailment checks:        0.078s
Total time for SMT solver (w/o itp):     0.275s

Number of path formula cache hits:   146209 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.115s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         233 (count: 9456, min: 0, max: 64, avg: 0.02)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.758s
  Time for transition matches:                         0.338s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       208982 (count: 208982, min: 1, max: 1, avg: 1.00) [1 x 208982]

CPA algorithm statistics
------------------------
Number of iterations:            157864
Max size of waitlist:            116
Average size of waitlist:        61
Number of computed successors:   204518
Max successors for one state:    2
Number of times merged:          45403
Number of times stopped:         46456
Number of times breaked:         3

Total time for CPA algorithm:        25.072s (Max:    12.769s)
  Time for choose from waitlist:      0.309s
  Time for precision adjustment:      4.540s
  Time for transfer relation:        13.823s
  Time for merge operator:            3.260s
  Time for stop operator:             0.672s
  Time for adding to reached set:     0.722s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                 221 (count: 3, min: 71, max: 77, avg: 73.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.855s
  Counterexample analysis:                             0.187s (Max:     0.100s, Calls: 3)
    Refinement sat check:                              0.123s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.004s
  ARG update:                                          0.621s

Length of refined path (in blocks):                     128 (count: 3, min: 42, max: 43, avg: 42.67)
Number of affected states:                               84 (count: 3, min: 1, max: 42, avg: 28.00)
Length (states) of path with itp 'true':                 41 (count: 3, min: 0, max: 41, avg: 13.67)
Length (states) of path with itp non-trivial itp:        84 (count: 3, min: 1, max: 42, avg: 28.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 3, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:              80 (count: 3, min: 0, max: 41, avg: 26.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 43960
Max. size of reached set after ref.:  596
Avg. size of reached set before ref.: 42334.67
Avg. size of reached set after ref.:  200.67

Total time for CEGAR algorithm:      26.208s
Time for refinements:                 1.127s
Average time for refinement:          0.375s
Max time for refinement:              0.604s

Code Coverage
-----------------------------
  Function coverage:      0.577
  Visited lines:          1002
  Total lines:            1763
  Line coverage:          0.568
  Visited conditions:     580
  Total conditions:       762
  Condition coverage:     0.761

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             31559
  Number of reached locations:   1107 (48%)
    Avg states per location:     28
    Max states per location:     113 (at node N2274)
  Number of reached functions:   45 (58%)
  Number of partitions:          31558
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1231 (before line 1568), Function timeShift called from node N2011, stack depth 5 [1bfcca9f], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        69

Time for analysis setup:          4.066s
  Time for loading CPAs:          0.787s
  Time for loading parser:        0.687s
  Time for CFA construction:      2.391s
    Time for parsing file(s):     0.655s
    Time for AST to CFA:          0.724s
    Time for CFA sanity check:    0.242s
    Time for post-processing:     0.593s
      Time for var class.:        0.343s
Time for Analysis:               26.208s
CPU time for analysis:           26.200s
Total time for CPAchecker:       30.278s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.570s

Time for Garbage Collector:       1.985s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                144MB (   137 MiB) max;     71MB (    68 MiB) avg;    157MB (   150 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    30 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           160MB (   153 MiB) max;    134MB (   128 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
