scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tjj10yi1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 506: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2041: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2191: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2917: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17315 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17106 (99%)
  Because of loop head:            136 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         73 (0%)
  Times precision was empty:       7299 (42%)
  Times precision was {false}:     145 (1%)
  Times result was cached:         8539 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1332 (8%)
  Times result was 'false':        477 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         51148
  BDD entailment checks:           5088
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          49
Number of abstraction locations:          85
Max number of predicates per location:    19
Avg number of predicates per location:    8
Total predicates per abstraction:         71404
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 48.34
Number of irrelevant predicates:          35008 (49%)
Number of preds handled by boolean abs:   5168 (7%)
  Total number of models for allsat:      2878
  Max number of models for allsat:        36
  Avg number of models for allsat:        2.16

Time for post operator:                  2.781s
  Time for path formula creation:        2.558s
Time for strengthen operator:            0.307s
Time for prec operator:                  8.433s
  Time for abstraction:                  7.890s (Max:     0.025s, Count: 17315)
    Boolean abstraction:                 1.988s
    Solving time:                        1.363s (Max:     0.015s)
    Model enumeration time:              0.228s
    Time for BDD construction:           0.216s (Max:     0.012s)
Time for merge operator:                 0.304s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.591s

Number of path formula cache hits:   180747 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.007s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               9046
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7006 (count: 22919, min: 0, max: 1179, avg: 0.31)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.717s
  Time for transition matches:                         0.310s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       165768 (count: 165768, min: 1, max: 1, avg: 1.00) [1 x 165768]

CPA algorithm statistics
------------------------
Number of iterations:            117629
Max size of waitlist:            48
Average size of waitlist:        22
Number of computed successors:   145193
Max successors for one state:    2
Number of times merged:          23030
Number of times stopped:         25644
Number of times breaked:         73

Total time for CPA algorithm:        19.674s (Max:     1.699s)
  Time for choose from waitlist:      0.220s
  Time for precision adjustment:     10.007s
  Time for transfer relation:         6.325s
  Time for merge operator:            1.008s
  Time for stop operator:             0.482s
  Time for adding to reached set:     0.435s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   73
Avg. length of target path (in blocks):                6771 (count: 73, min: 69, max: 103, avg: 92.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.645s
  Counterexample analysis:                             4.800s (Max:     0.161s, Calls: 73)
    Refinement sat check:                              2.559s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.169s
  Precision update:                                    0.122s
  ARG update:                                          0.446s

Length of refined path (in blocks):                    6182 (count: 73, min: 42, max: 102, avg: 84.68)
Number of affected states:                             3613 (count: 73, min: 1, max: 97, avg: 49.49)
Length (states) of path with itp 'true':               2496 (count: 73, min: 0, max: 73, avg: 34.19)
Length (states) of path with itp non-trivial itp:      3613 (count: 73, min: 1, max: 97, avg: 49.49)
Length (states) of path with itp 'false':                73 (count: 73, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         193 (count: 73, min: 0, max: 9, avg: 2.64)
Equal non-trivial interpolants along paths:            3347 (count: 73, min: 0, max: 92, avg: 45.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                73
Number of successful refinements:     73
Number of failed refinements:         0
Max. size of reached set before ref.: 4144
Max. size of reached set after ref.:  2167
Avg. size of reached set before ref.: 2498.93
Avg. size of reached set after ref.:  917.51

Total time for CEGAR algorithm:      25.757s
Time for refinements:                 6.018s
Average time for refinement:          0.082s
Max time for refinement:              0.192s

Code Coverage
-----------------------------
  Function coverage:      0.551
  Visited lines:          613
  Total lines:            1763
  Line coverage:          0.348
  Visited conditions:     286
  Total conditions:       762
  Condition coverage:     0.375

CPAchecker general statistics
-----------------------------
Number of program locations:     2313
Number of CFA edges:             2816
Number of relevant variables:    326
Number of functions:             78
Number of loops:                 9
Size of reached set:             3629
  Number of reached locations:   633 (27%)
    Avg states per location:     5
    Max states per location:     54 (at node N1734)
  Number of reached functions:   43 (55%)
  Number of partitions:          3604
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1231 (before line 1568), Function timeShift called from node N2011, stack depth 5 [3384bf30], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          4.006s
  Time for loading CPAs:          0.829s
  Time for loading parser:        0.678s
  Time for CFA construction:      2.285s
    Time for parsing file(s):     0.646s
    Time for AST to CFA:          0.683s
    Time for CFA sanity check:    0.263s
    Time for post-processing:     0.536s
      Time for var class.:        0.302s
Time for Analysis:               25.757s
CPU time for analysis:           25.760s
Total time for CPAchecker:       29.767s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.161s

Time for Garbage Collector:       0.560s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     45MB (    43 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
