scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y1_13bn7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1382: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1417: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1757: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1929: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2451: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3037: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3194: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5333 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5286 (99%)
  Because of loop head:            37 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       2853 (53%)
  Times precision was {false}:     178 (3%)
  Times result was cached:         516 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1786 (33%)
  Times result was 'false':        369 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         32955
  BDD entailment checks:           597
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       59
Number of predicates discovered:          17
Number of abstraction locations:          62
Max number of predicates per location:    10
Avg number of predicates per location:    6
Total predicates per abstraction:         12827
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 6.53
Number of irrelevant predicates:          2428 (19%)
Number of preds handled by boolean abs:   8627 (67%)
  Total number of models for allsat:      9039
  Max number of models for allsat:        24
  Avg number of models for allsat:        5.06

Time for post operator:                  6.218s
  Time for path formula creation:        5.959s
Time for strengthen operator:            0.228s
Time for prec operator:                  8.054s
  Time for abstraction:                  7.541s (Max:     0.032s, Count: 5333)
    Boolean abstraction:                 3.505s
    Solving time:                        2.305s (Max:     0.042s)
    Model enumeration time:              0.627s
    Time for BDD construction:           0.269s (Max:     0.010s)
Time for merge operator:                 1.167s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):     2.933s

Number of path formula cache hits:   38079 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.447s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2804
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4470 (count: 15700, min: 0, max: 466, avg: 0.28)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.588s
  Time for transition matches:                         0.251s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        85067 (count: 85067, min: 1, max: 1, avg: 1.00) [1 x 85067]

CPA algorithm statistics
------------------------
Number of iterations:            62222
Max size of waitlist:            184
Average size of waitlist:        54
Number of computed successors:   80165
Max successors for one state:    2
Number of times merged:          16179
Number of times stopped:         16559
Number of times breaked:         10

Total time for CPA algorithm:        23.078s (Max:    12.917s)
  Time for choose from waitlist:      0.177s
  Time for precision adjustment:      9.502s
  Time for transfer relation:         9.360s
  Time for merge operator:            2.142s
  Time for stop operator:             0.312s
  Time for adding to reached set:     0.416s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                1475 (count: 10, min: 67, max: 291, avg: 147.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.091s
  Counterexample analysis:                             1.413s (Max:     0.285s, Calls: 10)
    Refinement sat check:                              0.652s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.039s
  ARG update:                                          0.509s

Length of refined path (in blocks):                    1417 (count: 10, min: 45, max: 287, avg: 141.70)
Number of affected states:                             1342 (count: 10, min: 1, max: 286, avg: 134.20)
Length (states) of path with itp 'true':                 65 (count: 10, min: 0, max: 65, avg: 6.50)
Length (states) of path with itp non-trivial itp:      1342 (count: 10, min: 1, max: 286, avg: 134.20)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          32 (count: 10, min: 0, max: 7, avg: 3.20)
Equal non-trivial interpolants along paths:            1300 (count: 10, min: 0, max: 278, avg: 130.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 44321
Max. size of reached set after ref.:  848
Avg. size of reached set before ref.: 6086.80
Avg. size of reached set after ref.:  87.50

Total time for CEGAR algorithm:      25.421s
Time for refinements:                 2.334s
Average time for refinement:          0.233s
Max time for refinement:              0.640s

Code Coverage
-----------------------------
  Function coverage:      0.459
  Visited lines:          585
  Total lines:            1729
  Line coverage:          0.338
  Visited conditions:     304
  Total conditions:       756
  Condition coverage:     0.402

CPAchecker general statistics
-----------------------------
Number of program locations:     2267
Number of CFA edges:             2763
Number of relevant variables:    310
Number of functions:             74
Number of loops:                 9
Size of reached set:             3244
  Number of reached locations:   579 (26%)
    Avg states per location:     5
    Max states per location:     42 (at node N75)
  Number of reached functions:   34 (46%)
  Number of partitions:          3225
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N941 (before lines 1173-1201), Function cleanup called from node N2699, stack depth 4 [60683b1c], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        175

Time for analysis setup:          4.336s
  Time for loading CPAs:          0.979s
  Time for loading parser:        0.764s
  Time for CFA construction:      2.405s
    Time for parsing file(s):     0.735s
    Time for AST to CFA:          0.683s
    Time for CFA sanity check:    0.246s
    Time for post-processing:     0.553s
      Time for var class.:        0.312s
Time for Analysis:               25.421s
CPU time for analysis:           25.430s
Total time for CPAchecker:       29.761s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.166s

Time for Garbage Collector:       0.802s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                108MB (   103 MiB) max;     64MB (    61 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
