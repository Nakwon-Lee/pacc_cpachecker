scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c6o2ojpv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12420 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11828 (95%)
  Because of loop head:            309 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         283 (2%)
  Times precision was empty:       2105 (17%)
  Times precision was {false}:     210 (2%)
  Times result was cached:         9377 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      728 (6%)
  Times result was 'false':        1600 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         29196
  BDD entailment checks:           3144
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          22
Number of abstraction locations:          71
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         46452
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 49.52
Number of irrelevant predicates:          19026 (41%)
Number of preds handled by boolean abs:   2672 (6%)
  Total number of models for allsat:      848
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.16

Time for post operator:                  3.102s
  Time for path formula creation:        2.968s
Time for strengthen operator:            0.259s
Time for prec operator:                  5.637s
  Time for abstraction:                  5.189s (Max:     0.021s, Count: 12420)
    Boolean abstraction:                 0.987s
    Solving time:                        0.726s (Max:     0.015s)
    Model enumeration time:              0.073s
    Time for BDD construction:           0.123s (Max:     0.012s)
Time for merge operator:                 0.575s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     0.799s

Number of path formula cache hits:   99795 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.354s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1029
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2010 (count: 11127, min: 0, max: 738, avg: 0.18)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.504s
  Time for transition matches:                         0.202s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                        98882 (count: 98882, min: 1, max: 1, avg: 1.00) [1 x 98882]

CPA algorithm statistics
------------------------
Number of iterations:            72047
Max size of waitlist:            70
Average size of waitlist:        24
Number of computed successors:   89020
Max successors for one state:    2
Number of times merged:          13026
Number of times stopped:         14034
Number of times breaked:         283

Total time for CPA algorithm:        15.449s (Max:     5.143s)
  Time for choose from waitlist:      0.191s
  Time for precision adjustment:      6.808s
  Time for transfer relation:         5.796s
  Time for merge operator:            1.175s
  Time for stop operator:             0.381s
  Time for adding to reached set:     0.286s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   283
Avg. length of target path (in blocks):               19433 (count: 283, min: 53, max: 90, avg: 68.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.781s
  Counterexample analysis:                             7.919s (Max:     0.087s, Calls: 283)
    Refinement sat check:                              5.315s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.148s
  Precision update:                                    0.165s
  ARG update:                                          0.278s

Length of refined path (in blocks):                   18971 (count: 283, min: 31, max: 87, avg: 67.04)
Number of affected states:                             5163 (count: 283, min: 1, max: 85, avg: 18.24)
Length (states) of path with itp 'true':              13525 (count: 283, min: 0, max: 80, avg: 47.79)
Length (states) of path with itp non-trivial itp:      5163 (count: 283, min: 1, max: 85, avg: 18.24)
Length (states) of path with itp 'false':               283 (count: 283, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 283, min: 0, max: 2, avg: 0.04)
Equal non-trivial interpolants along paths:            4868 (count: 283, min: 0, max: 82, avg: 17.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                283
Number of successful refinements:     283
Number of failed refinements:         0
Max. size of reached set before ref.: 10699
Max. size of reached set after ref.:  10424
Avg. size of reached set before ref.: 2067.78
Avg. size of reached set after ref.:  1813.42

Total time for CEGAR algorithm:      25.866s
Time for refinements:                 9.861s
Average time for refinement:          0.034s
Max time for refinement:              0.193s

Code Coverage
-----------------------------
  Function coverage:      0.423
  Visited lines:          432
  Total lines:            1754
  Line coverage:          0.246
  Visited conditions:     192
  Total conditions:       756
  Condition coverage:     0.254

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             1400
  Number of reached locations:   434 (19%)
    Avg states per location:     3
    Max states per location:     21 (at node N235)
  Number of reached functions:   33 (42%)
  Number of partitions:          1385
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2618 (before line 3295), Function cleanup called from node N114, stack depth 4 [720b6854], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          3.904s
  Time for loading CPAs:          0.680s
  Time for loading parser:        0.696s
  Time for CFA construction:      2.331s
    Time for parsing file(s):     0.641s
    Time for AST to CFA:          0.723s
    Time for CFA sanity check:    0.240s
    Time for post-processing:     0.558s
      Time for var class.:        0.325s
Time for Analysis:               25.866s
CPU time for analysis:           25.860s
Total time for CPAchecker:       29.776s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.125s

Time for Garbage Collector:       0.448s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     50MB (    48 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
