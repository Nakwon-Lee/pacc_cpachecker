scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hznp5x5c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7766 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7753 (100%)
  Because of loop head:            7 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       7240 (93%)
  Times precision was {false}:     80 (1%)
  Times result was cached:         334 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      112 (1%)
  Times result was 'false':        107 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         83539
  BDD entailment checks:           1173
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          8
Number of abstraction locations:          40
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         643
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 3.35
Number of irrelevant predicates:          173 (27%)
Number of preds handled by boolean abs:   143 (22%)
  Total number of models for allsat:      147
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.31

Time for post operator:                  8.470s
  Time for path formula creation:        8.174s
Time for strengthen operator:            0.363s
Time for prec operator:                  1.773s
  Time for abstraction:                  0.975s (Max:     0.024s, Count: 7766)
    Boolean abstraction:                 0.220s
    Solving time:                        0.183s (Max:     0.013s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.015s (Max:     0.007s)
Time for merge operator:                 1.751s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     0.191s

Number of path formula cache hits:   157496 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.901s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               221
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         251 (count: 9526, min: 0, max: 55, avg: 0.03)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.817s
  Time for transition matches:                         0.340s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       192379 (count: 192379, min: 1, max: 1, avg: 1.00) [1 x 192379]

CPA algorithm statistics
------------------------
Number of iterations:            144889
Max size of waitlist:            108
Average size of waitlist:        55
Number of computed successors:   187378
Max successors for one state:    2
Number of times merged:          41183
Number of times stopped:         42325
Number of times breaked:         6

Total time for CPA algorithm:        24.244s (Max:    13.799s)
  Time for choose from waitlist:      0.251s
  Time for precision adjustment:      4.412s
  Time for transfer relation:        13.469s
  Time for merge operator:            3.094s
  Time for stop operator:             0.517s
  Time for adding to reached set:     0.684s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 384 (count: 6, min: 61, max: 69, avg: 64.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.094s
  Counterexample analysis:                             0.344s (Max:     0.071s, Calls: 6)
    Refinement sat check:                              0.241s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.003s
  ARG update:                                          0.673s

Length of refined path (in blocks):                     278 (count: 6, min: 30, max: 66, avg: 46.33)
Number of affected states:                               78 (count: 6, min: 1, max: 30, avg: 13.00)
Length (states) of path with itp 'true':                194 (count: 6, min: 0, max: 59, avg: 32.33)
Length (states) of path with itp non-trivial itp:        78 (count: 6, min: 1, max: 30, avg: 13.00)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 6, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:              71 (count: 6, min: 0, max: 29, avg: 11.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 48850
Max. size of reached set after ref.:  48629
Avg. size of reached set before ref.: 46717.83
Avg. size of reached set after ref.:  23162.00

Total time for CEGAR algorithm:      26.348s
Time for refinements:                 1.854s
Average time for refinement:          0.309s
Max time for refinement:              0.490s

Code Coverage
-----------------------------
  Function coverage:      0.359
  Visited lines:          530
  Total lines:            1754
  Line coverage:          0.302
  Visited conditions:     306
  Total conditions:       756
  Condition coverage:     0.405

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             3611
  Number of reached locations:   571 (25%)
    Avg states per location:     6
    Max states per location:     18 (at node N75)
  Number of reached functions:   28 (36%)
  Number of partitions:          3610
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1824 (before line 2251), Function timeShift called from node N2601, stack depth 5 [1006b8a6], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        42

Time for analysis setup:          3.924s
  Time for loading CPAs:          0.758s
  Time for loading parser:        0.647s
  Time for CFA construction:      2.312s
    Time for parsing file(s):     0.656s
    Time for AST to CFA:          0.709s
    Time for CFA sanity check:    0.246s
    Time for post-processing:     0.530s
      Time for var class.:        0.303s
Time for Analysis:               26.348s
CPU time for analysis:           26.340s
Total time for CPAchecker:       30.276s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.142s

Time for Garbage Collector:       1.676s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                137MB (   131 MiB) max;     71MB (    68 MiB) avg;    143MB (   136 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           151MB (   144 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
