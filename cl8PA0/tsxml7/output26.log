scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0sieds60/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9487 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9460 (100%)
  Because of loop head:            15 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       8011 (84%)
  Times precision was {false}:     133 (1%)
  Times result was cached:         1181 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      162 (2%)
  Times result was 'false':        287 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         100555
  BDD entailment checks:           1345
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          17
Number of abstraction locations:          59
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         3673
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 12.45
Number of irrelevant predicates:          2168 (59%)
Number of preds handled by boolean abs:   557 (15%)
  Total number of models for allsat:      430
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.65

Time for post operator:                  7.408s
  Time for path formula creation:        7.098s
Time for strengthen operator:            0.460s
Time for prec operator:                  2.496s
  Time for abstraction:                  1.659s (Max:     0.025s, Count: 9487)
    Boolean abstraction:                 0.254s
    Solving time:                        0.269s (Max:     0.014s)
    Model enumeration time:              0.032s
    Time for BDD construction:           0.022s (Max:     0.006s)
Time for merge operator:                 1.743s
Time for coverage check:                 0.097s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     0.301s

Number of path formula cache hits:   227283 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.800s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               596
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         671 (count: 11260, min: 0, max: 146, avg: 0.06)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.848s
  Time for transition matches:                         0.327s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       232019 (count: 232019, min: 1, max: 1, avg: 1.00) [1 x 232019]

CPA algorithm statistics
------------------------
Number of iterations:            174474
Max size of waitlist:            138
Average size of waitlist:        80
Number of computed successors:   225878
Max successors for one state:    2
Number of times merged:          49605
Number of times stopped:         50808
Number of times breaked:         12

Total time for CPA algorithm:        23.893s (Max:     9.749s)
  Time for choose from waitlist:      0.310s
  Time for precision adjustment:      5.455s
  Time for transfer relation:        12.326s
  Time for merge operator:            3.095s
  Time for stop operator:             0.552s
  Time for adding to reached set:     0.624s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 672 (count: 12, min: 53, max: 59, avg: 56.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.378s
  Counterexample analysis:                             0.334s (Max:     0.055s, Calls: 12)
    Refinement sat check:                              0.213s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.018s
  ARG update:                                          0.959s

Length of refined path (in blocks):                     615 (count: 12, min: 40, max: 56, avg: 51.25)
Number of affected states:                              227 (count: 12, min: 1, max: 52, avg: 18.92)
Length (states) of path with itp 'true':                376 (count: 12, min: 0, max: 51, avg: 31.33)
Length (states) of path with itp non-trivial itp:       227 (count: 12, min: 1, max: 52, avg: 18.92)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           7 (count: 12, min: 0, max: 3, avg: 0.58)
Equal non-trivial interpolants along paths:             208 (count: 12, min: 0, max: 50, avg: 17.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 44235
Max. size of reached set after ref.:  44194
Avg. size of reached set before ref.: 39036.75
Avg. size of reached set after ref.:  25097.75

Total time for CEGAR algorithm:      26.311s
Time for refinements:                 2.077s
Average time for refinement:          0.173s
Max time for refinement:              0.557s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          755
  Total lines:            1754
  Line coverage:          0.430
  Visited conditions:     438
  Total conditions:       756
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             7514
  Number of reached locations:   819 (36%)
    Avg states per location:     9
    Max states per location:     35 (at node N75)
  Number of reached functions:   39 (50%)
  Number of partitions:          7513
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1824 (before line 2251), Function timeShift called from node N2601, stack depth 5 [7d9a0189], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        51

Time for analysis setup:          3.960s
  Time for loading CPAs:          0.783s
  Time for loading parser:        0.655s
  Time for CFA construction:      2.329s
    Time for parsing file(s):     0.704s
    Time for AST to CFA:          0.690s
    Time for CFA sanity check:    0.244s
    Time for post-processing:     0.527s
      Time for var class.:        0.300s
Time for Analysis:               26.311s
CPU time for analysis:           26.310s
Total time for CPAchecker:       30.275s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.217s

Time for Garbage Collector:       2.030s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                159MB (   152 MiB) max;     72MB (    69 MiB) avg;    162MB (   155 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           160MB (   153 MiB) max;    135MB (   129 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
