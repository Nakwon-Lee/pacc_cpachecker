scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jyttrzyj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11251 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11207 (100%)
  Because of loop head:            22 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       8796 (78%)
  Times precision was {false}:     142 (1%)
  Times result was cached:         2062 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      251 (2%)
  Times result was 'false':        441 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         110543
  BDD entailment checks:           1331
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          21
Number of abstraction locations:          63
Max number of predicates per location:    12
Avg number of predicates per location:    8
Total predicates per abstraction:         13222
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 33.64
Number of irrelevant predicates:          10207 (77%)
Number of preds handled by boolean abs:   872 (7%)
  Total number of models for allsat:      487
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.94

Time for post operator:                  5.882s
  Time for path formula creation:        5.642s
Time for strengthen operator:            0.403s
Time for prec operator:                  3.166s
  Time for abstraction:                  2.442s (Max:     0.021s, Count: 11251)
    Boolean abstraction:                 0.479s
    Solving time:                        0.309s (Max:     0.013s)
    Model enumeration time:              0.050s
    Time for BDD construction:           0.095s (Max:     0.012s)
Time for merge operator:                 1.367s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.359s

Number of path formula cache hits:   273305 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.709s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               618
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         769 (count: 12753, min: 0, max: 88, avg: 0.06)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.807s
  Time for transition matches:                         0.339s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       259662 (count: 259662, min: 1, max: 1, avg: 1.00) [1 x 259662]

CPA algorithm statistics
------------------------
Number of iterations:            194084
Max size of waitlist:            145
Average size of waitlist:        76
Number of computed successors:   251441
Max successors for one state:    2
Number of times merged:          54606
Number of times stopped:         55828
Number of times breaked:         22

Total time for CPA algorithm:        22.753s (Max:     7.576s)
  Time for choose from waitlist:      0.252s
  Time for precision adjustment:      5.823s
  Time for transfer relation:        10.674s
  Time for merge operator:            2.861s
  Time for stop operator:             0.664s
  Time for adding to reached set:     0.745s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                1376 (count: 22, min: 53, max: 73, avg: 62.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.398s
  Counterexample analysis:                             0.676s (Max:     0.073s, Calls: 22)
    Refinement sat check:                              0.385s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.042s
  ARG update:                                          0.599s

Length of refined path (in blocks):                    1276 (count: 22, min: 40, max: 70, avg: 58.00)
Number of affected states:                              512 (count: 22, min: 1, max: 58, avg: 23.27)
Length (states) of path with itp 'true':                742 (count: 22, min: 0, max: 51, avg: 33.73)
Length (states) of path with itp non-trivial itp:       512 (count: 22, min: 1, max: 58, avg: 23.27)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           8 (count: 22, min: 0, max: 2, avg: 0.36)
Equal non-trivial interpolants along paths:             482 (count: 22, min: 0, max: 55, avg: 21.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 34157
Max. size of reached set after ref.:  29523
Avg. size of reached set before ref.: 25797.05
Avg. size of reached set after ref.:  17881.36

Total time for CEGAR algorithm:      25.480s
Time for refinements:                 2.373s
Average time for refinement:          0.107s
Max time for refinement:              0.254s

Code Coverage
-----------------------------
  Function coverage:      0.603
  Visited lines:          1025
  Total lines:            1754
  Line coverage:          0.584
  Visited conditions:     580
  Total conditions:       756
  Condition coverage:     0.767

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             21027
  Number of reached locations:   1122 (49%)
    Avg states per location:     18
    Max states per location:     81 (at node N75)
  Number of reached functions:   47 (60%)
  Number of partitions:          21022
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1887 (after line 2352), Function timeShift called from node N2601, stack depth 5 [7cd92d67], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        95

Time for analysis setup:          4.312s
  Time for loading CPAs:          0.866s
  Time for loading parser:        0.735s
  Time for CFA construction:      2.526s
    Time for parsing file(s):     0.755s
    Time for AST to CFA:          0.783s
    Time for CFA sanity check:    0.237s
    Time for post-processing:     0.560s
      Time for var class.:        0.299s
Time for Analysis:               25.480s
CPU time for analysis:           25.480s
Total time for CPAchecker:       29.797s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.394s

Time for Garbage Collector:       1.723s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     66MB (    62 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
