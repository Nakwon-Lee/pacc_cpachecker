scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__guxjh0z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19979 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19384 (97%)
  Because of loop head:            333 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         262 (1%)
  Times precision was empty:       6264 (31%)
  Times precision was {false}:     208 (1%)
  Times result was cached:         12558 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      949 (5%)
  Times result was 'false':        1603 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         49958
  BDD entailment checks:           5816
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          31
Number of abstraction locations:          78
Max number of predicates per location:    20
Avg number of predicates per location:    9
Total predicates per abstraction:         83376
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 72.06
Number of irrelevant predicates:          38310 (46%)
Number of preds handled by boolean abs:   3802 (5%)
  Total number of models for allsat:      1439
  Max number of models for allsat:        64
  Avg number of models for allsat:        1.52

Time for post operator:                  2.035s
  Time for path formula creation:        1.901s
Time for strengthen operator:            0.236s
Time for prec operator:                  7.402s
  Time for abstraction:                  6.906s (Max:     0.040s, Count: 19979)
    Boolean abstraction:                 1.296s
    Solving time:                        0.927s (Max:     0.013s)
    Model enumeration time:              0.142s
    Time for BDD construction:           0.140s (Max:     0.012s)
Time for merge operator:                 0.255s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     1.069s

Number of path formula cache hits:   189572 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.487s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2757
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3701 (count: 19635, min: 0, max: 455, avg: 0.19)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.527s
  Time for transition matches:                         0.169s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       167084 (count: 167084, min: 1, max: 1, avg: 1.00) [1 x 167084]

CPA algorithm statistics
------------------------
Number of iterations:            121502
Max size of waitlist:            69
Average size of waitlist:        27
Number of computed successors:   149189
Max successors for one state:    2
Number of times merged:          22071
Number of times stopped:         24206
Number of times breaked:         262

Total time for CPA algorithm:        16.232s (Max:     1.566s)
  Time for choose from waitlist:      0.155s
  Time for precision adjustment:      8.705s
  Time for transfer relation:         5.095s
  Time for merge operator:            0.676s
  Time for stop operator:             0.344s
  Time for adding to reached set:     0.408s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   262
Avg. length of target path (in blocks):               19375 (count: 262, min: 53, max: 118, avg: 73.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.136s
  Counterexample analysis:                             7.115s (Max:     0.084s, Calls: 262)
    Refinement sat check:                              4.518s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.129s
  Precision update:                                    0.297s
  ARG update:                                          0.337s

Length of refined path (in blocks):                   18825 (count: 262, min: 30, max: 115, avg: 71.85)
Number of affected states:                             5803 (count: 262, min: 1, max: 103, avg: 22.15)
Length (states) of path with itp 'true':              12760 (count: 262, min: 0, max: 92, avg: 48.70)
Length (states) of path with itp non-trivial itp:      5803 (count: 262, min: 1, max: 103, avg: 22.15)
Length (states) of path with itp 'false':               262 (count: 262, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          48 (count: 262, min: 0, max: 5, avg: 0.18)
Equal non-trivial interpolants along paths:            5493 (count: 262, min: 0, max: 97, avg: 20.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                262
Number of successful refinements:     262
Number of failed refinements:         0
Max. size of reached set before ref.: 5821
Max. size of reached set after ref.:  5618
Avg. size of reached set before ref.: 2399.27
Avg. size of reached set after ref.:  1949.80

Total time for CEGAR algorithm:      25.709s
Time for refinements:                 9.011s
Average time for refinement:          0.034s
Max time for refinement:              0.116s

Code Coverage
-----------------------------
  Function coverage:      0.538
  Visited lines:          622
  Total lines:            1754
  Line coverage:          0.355
  Visited conditions:     292
  Total conditions:       756
  Condition coverage:     0.386

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             5618
  Number of reached locations:   646 (28%)
    Avg states per location:     8
    Max states per location:     84 (at node N74)
  Number of reached functions:   42 (54%)
  Number of partitions:          5579
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2604 (before lines 3275-3303), Function cleanup called from node N114, stack depth 4 [675be33e], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        58

Time for analysis setup:          4.058s
  Time for loading CPAs:          0.797s
  Time for loading parser:        0.668s
  Time for CFA construction:      2.348s
    Time for parsing file(s):     0.684s
    Time for AST to CFA:          0.727s
    Time for CFA sanity check:    0.233s
    Time for post-processing:     0.547s
      Time for var class.:        0.304s
Time for Analysis:               25.709s
CPU time for analysis:           25.710s
Total time for CPAchecker:       29.771s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.164s

Time for Garbage Collector:       0.599s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     44MB (    42 MiB) avg;     71MB (    67 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
