scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qm8s74z4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8882 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8562 (96%)
  Because of loop head:            174 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         146 (2%)
  Times precision was empty:       1910 (22%)
  Times precision was {false}:     205 (2%)
  Times result was cached:         6012 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      755 (9%)
  Times result was 'false':        889 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         56518
  BDD entailment checks:           1470
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          26
Number of abstraction locations:          81
Max number of predicates per location:    19
Avg number of predicates per location:    9
Total predicates per abstraction:         34368
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 35.80
Number of irrelevant predicates:          15874 (46%)
Number of preds handled by boolean abs:   3678 (11%)
  Total number of models for allsat:      1811
  Max number of models for allsat:        64
  Avg number of models for allsat:        2.40

Time for post operator:                  4.932s
  Time for path formula creation:        4.750s
Time for strengthen operator:            0.308s
Time for prec operator:                  5.638s
  Time for abstraction:                  5.118s (Max:     0.025s, Count: 8882)
    Boolean abstraction:                 1.386s
    Solving time:                        0.927s (Max:     0.014s)
    Model enumeration time:              0.192s
    Time for BDD construction:           0.190s (Max:     0.012s)
Time for merge operator:                 1.222s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     1.119s

Number of path formula cache hits:   135144 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.665s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3073
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2731 (count: 9528, min: 0, max: 494, avg: 0.29)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.590s
  Time for transition matches:                         0.228s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                       144057 (count: 144057, min: 1, max: 1, avg: 1.00) [1 x 144057]

CPA algorithm statistics
------------------------
Number of iterations:            106747
Max size of waitlist:            74
Average size of waitlist:        32
Number of computed successors:   136717
Max successors for one state:    2
Number of times merged:          27524
Number of times stopped:         28133
Number of times breaked:         146

Total time for CPA algorithm:        19.740s (Max:     5.456s)
  Time for choose from waitlist:      0.163s
  Time for precision adjustment:      7.110s
  Time for transfer relation:         8.433s
  Time for merge operator:            2.005s
  Time for stop operator:             0.433s
  Time for adding to reached set:     0.474s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   146
Avg. length of target path (in blocks):                9628 (count: 146, min: 53, max: 83, avg: 65.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.060s
  Counterexample analysis:                             4.213s (Max:     0.073s, Calls: 146)
    Refinement sat check:                              2.764s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.155s
  Precision update:                                    0.157s
  ARG update:                                          0.340s

Length of refined path (in blocks):                    9144 (count: 146, min: 31, max: 80, avg: 62.63)
Number of affected states:                             2776 (count: 146, min: 1, max: 62, avg: 19.01)
Length (states) of path with itp 'true':               6222 (count: 146, min: 0, max: 57, avg: 42.62)
Length (states) of path with itp non-trivial itp:      2776 (count: 146, min: 1, max: 62, avg: 19.01)
Length (states) of path with itp 'false':               146 (count: 146, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           8 (count: 146, min: 0, max: 2, avg: 0.05)
Equal non-trivial interpolants along paths:            2622 (count: 146, min: 0, max: 60, avg: 17.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                146
Number of successful refinements:     146
Number of failed refinements:         0
Max. size of reached set before ref.: 11148
Max. size of reached set after ref.:  11024
Avg. size of reached set before ref.: 2170.12
Avg. size of reached set after ref.:  1478.12

Total time for CEGAR algorithm:      25.745s
Time for refinements:                 5.793s
Average time for refinement:          0.039s
Max time for refinement:              0.210s

Code Coverage
-----------------------------
  Function coverage:      0.538
  Visited lines:          716
  Total lines:            1754
  Line coverage:          0.408
  Visited conditions:     396
  Total conditions:       756
  Condition coverage:     0.524

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             6665
  Number of reached locations:   788 (34%)
    Avg states per location:     8
    Max states per location:     33 (at node N315)
  Number of reached functions:   42 (54%)
  Number of partitions:          6655
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1824 (before line 2251), Function timeShift called from node N2601, stack depth 5 [32554e22], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        54

Time for analysis setup:          4.027s
  Time for loading CPAs:          0.877s
  Time for loading parser:        0.630s
  Time for CFA construction:      2.339s
    Time for parsing file(s):     0.670s
    Time for AST to CFA:          0.730s
    Time for CFA sanity check:    0.241s
    Time for post-processing:     0.536s
      Time for var class.:        0.296s
Time for Analysis:               25.745s
CPU time for analysis:           25.750s
Total time for CPAchecker:       29.776s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.224s

Time for Garbage Collector:       0.684s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 92MB (    88 MiB) max;     55MB (    53 MiB) avg;     98MB (    93 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
