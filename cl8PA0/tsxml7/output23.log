scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a4c_3fk2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7716 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7682 (100%)
  Because of loop head:            20 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (0%)
  Times precision was empty:       6876 (89%)
  Times precision was {false}:     261 (3%)
  Times result was cached:         513 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66 (1%)
  Times result was 'false':        211 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         78763
  BDD entailment checks:           1059
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          6
Number of abstraction locations:          18
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         1472
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 4.50
Number of irrelevant predicates:          903 (61%)
Number of preds handled by boolean abs:   152 (10%)
  Total number of models for allsat:      128
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.94

Time for post operator:                  9.836s
  Time for path formula creation:        9.596s
Time for strengthen operator:            0.291s
Time for prec operator:                  1.690s
  Time for abstraction:                  1.215s (Max:     0.024s, Count: 7716)
    Boolean abstraction:                 0.115s
    Solving time:                        0.207s (Max:     0.016s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.034s (Max:     0.010s)
Time for merge operator:                 2.120s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.223s

Number of path formula cache hits:   30284 (16%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.221s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               334
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         197 (count: 9745, min: 0, max: 129, avg: 0.02)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.689s
  Time for transition matches:                         0.313s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       182530 (count: 182530, min: 1, max: 1, avg: 1.00) [1 x 182530]

CPA algorithm statistics
------------------------
Number of iterations:            137592
Max size of waitlist:            87
Average size of waitlist:        65
Number of computed successors:   177751
Max successors for one state:    2
Number of times merged:          38852
Number of times stopped:         39820
Number of times breaked:         14

Total time for CPA algorithm:        24.463s (Max:    11.463s)
  Time for choose from waitlist:      0.229s
  Time for precision adjustment:      4.087s
  Time for transfer relation:        14.052s
  Time for merge operator:            3.212s
  Time for stop operator:             0.451s
  Time for adding to reached set:     0.836s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                1261 (count: 14, min: 75, max: 144, avg: 90.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.251s
  Counterexample analysis:                             0.599s (Max:     0.078s, Calls: 14)
    Refinement sat check:                              0.388s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.013s
  ARG update:                                          0.586s

Length of refined path (in blocks):                    1247 (count: 14, min: 74, max: 143, avg: 89.07)
Number of affected states:                              124 (count: 14, min: 6, max: 18, avg: 8.86)
Length (states) of path with itp 'true':               1109 (count: 14, min: 67, max: 124, avg: 79.21)
Length (states) of path with itp non-trivial itp:       124 (count: 14, min: 6, max: 18, avg: 8.86)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             110 (count: 14, min: 5, max: 17, avg: 7.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 45694
Max. size of reached set after ref.:  1177
Avg. size of reached set before ref.: 10295.57
Avg. size of reached set after ref.:  759.00

Total time for CEGAR algorithm:      26.043s
Time for refinements:                 1.552s
Average time for refinement:          0.110s
Max time for refinement:              0.502s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          704
  Total lines:            1754
  Line coverage:          0.401
  Visited conditions:     362
  Total conditions:       756
  Condition coverage:     0.479

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             4209
  Number of reached locations:   706 (31%)
    Avg states per location:     5
    Max states per location:     81 (at node N235)
  Number of reached functions:   37 (47%)
  Number of partitions:          4199
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2604 (before lines 3275-3303), Function cleanup called from node N114, stack depth 4 [3bb9efbc], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        79

Time for analysis setup:          4.225s
  Time for loading CPAs:          0.707s
  Time for loading parser:        0.699s
  Time for CFA construction:      2.609s
    Time for parsing file(s):     0.804s
    Time for AST to CFA:          0.772s
    Time for CFA sanity check:    0.245s
    Time for post-processing:     0.589s
      Time for var class.:        0.328s
Time for Analysis:               26.043s
CPU time for analysis:           26.050s
Total time for CPAchecker:       30.272s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.150s

Time for Garbage Collector:       2.004s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                152MB (   145 MiB) max;     72MB (    69 MiB) avg;    166MB (   158 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           197MB (   188 MiB) max;    139MB (   133 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
