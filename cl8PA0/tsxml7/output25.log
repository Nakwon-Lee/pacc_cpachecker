scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1csblpvf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7073 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7067 (100%)
  Because of loop head:            4 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       7039 (100%)
  Times precision was {false}:     12 (0%)
  Times result was cached:         15 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         77948
  BDD entailment checks:           1016
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          3
Number of abstraction locations:          9
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         34
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.79
Number of irrelevant predicates:          14 (41%)
Number of preds handled by boolean abs:   7 (21%)
  Total number of models for allsat:      10
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.43

Time for post operator:                  9.607s
  Time for path formula creation:        9.323s
Time for strengthen operator:            0.373s
Time for prec operator:                  0.824s
  Time for abstraction:                  0.210s (Max:     0.021s, Count: 7073)
    Boolean abstraction:                 0.021s
    Solving time:                        0.009s (Max:     0.004s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.010s (Max:     0.008s)
Time for merge operator:                 2.376s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.010s

Number of path formula cache hits:   29407 (16%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.226s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          13 (count: 8160, min: 0, max: 9, avg: 0.00)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.640s
  Time for transition matches:                         0.304s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       178831 (count: 178831, min: 1, max: 1, avg: 1.00) [1 x 178831]

CPA algorithm statistics
------------------------
Number of iterations:            134928
Max size of waitlist:            27
Average size of waitlist:        14
Number of computed successors:   174409
Max successors for one state:    2
Number of times merged:          38466
Number of times stopped:         39472
Number of times breaked:         2

Total time for CPA algorithm:        24.739s (Max:    17.411s)
  Time for choose from waitlist:      0.263s
  Time for precision adjustment:      4.058s
  Time for transfer relation:        14.056s
  Time for merge operator:            3.613s
  Time for stop operator:             0.568s
  Time for adding to reached set:     0.619s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                 124 (count: 2, min: 61, max: 63, avg: 62.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.989s
  Counterexample analysis:                             0.120s (Max:     0.074s, Calls: 2)
    Refinement sat check:                              0.072s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.002s
  ARG update:                                          0.849s

Length of refined path (in blocks):                      91 (count: 2, min: 31, max: 60, avg: 45.50)
Number of affected states:                                7 (count: 2, min: 1, max: 6, avg: 3.50)
Length (states) of path with itp 'true':                 82 (count: 2, min: 29, max: 53, avg: 41.00)
Length (states) of path with itp non-trivial itp:         7 (count: 2, min: 1, max: 6, avg: 3.50)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               5 (count: 2, min: 0, max: 5, avg: 2.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 89937
Max. size of reached set after ref.:  44962
Avg. size of reached set before ref.: 89935.00
Avg. size of reached set after ref.:  22680.50

Total time for CEGAR algorithm:      26.169s
Time for refinements:                 1.341s
Average time for refinement:          0.670s
Max time for refinement:              0.673s

Code Coverage
-----------------------------
  Function coverage:      0.282
  Visited lines:          307
  Total lines:            1754
  Line coverage:          0.175
  Visited conditions:     138
  Total conditions:       756
  Condition coverage:     0.183

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             428
  Number of reached locations:   294 (13%)
    Avg states per location:     1
    Max states per location:     6 (at node N75)
  Number of reached functions:   22 (28%)
  Number of partitions:          427
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1824 (before line 2251), Function timeShift called from node N2601, stack depth 5 [6ca320ab], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          4.137s
  Time for loading CPAs:          0.733s
  Time for loading parser:        0.632s
  Time for CFA construction:      2.572s
    Time for parsing file(s):     0.732s
    Time for AST to CFA:          0.770s
    Time for CFA sanity check:    0.263s
    Time for post-processing:     0.631s
      Time for var class.:        0.366s
Time for Analysis:               26.169s
CPU time for analysis:           26.160s
Total time for CPAchecker:       30.310s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.132s

Time for Garbage Collector:       2.433s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                200MB (   191 MiB) max;     87MB (    83 MiB) avg;    234MB (   223 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           302MB (   288 MiB) max;    158MB (   151 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
