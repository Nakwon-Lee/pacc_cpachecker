scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kwu1hbq9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8561 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8219 (96%)
  Because of loop head:            173 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         169 (2%)
  Times precision was empty:       1900 (22%)
  Times precision was {false}:     138 (2%)
  Times result was cached:         6119 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      404 (5%)
  Times result was 'false':        1209 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         41027
  BDD entailment checks:           1033
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          19
Number of abstraction locations:          71
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         29195
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 53.87
Number of irrelevant predicates:          11255 (39%)
Number of preds handled by boolean abs:   1483 (5%)
  Total number of models for allsat:      408
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.01

Time for post operator:                  3.870s
  Time for path formula creation:        3.650s
Time for strengthen operator:            0.215s
Time for prec operator:                  4.173s
  Time for abstraction:                  3.759s (Max:     0.026s, Count: 8561)
    Boolean abstraction:                 0.724s
    Solving time:                        0.580s (Max:     0.015s)
    Model enumeration time:              0.041s
    Time for BDD construction:           0.083s (Max:     0.010s)
Time for merge operator:                 0.847s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.621s

Number of path formula cache hits:   107605 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.704s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               426
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1224 (count: 6264, min: 0, max: 202, avg: 0.20)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.505s
  Time for transition matches:                         0.184s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       111320 (count: 111320, min: 1, max: 1, avg: 1.00) [1 x 111320]

CPA algorithm statistics
------------------------
Number of iterations:            82671
Max size of waitlist:            65
Average size of waitlist:        43
Number of computed successors:   105485
Max successors for one state:    2
Number of times merged:          19997
Number of times stopped:         20513
Number of times breaked:         169

Total time for CPA algorithm:        15.555s (Max:     4.542s)
  Time for choose from waitlist:      0.177s
  Time for precision adjustment:      5.381s
  Time for transfer relation:         6.716s
  Time for merge operator:            1.588s
  Time for stop operator:             0.372s
  Time for adding to reached set:     0.358s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   169
Avg. length of target path (in blocks):               12505 (count: 169, min: 61, max: 81, avg: 73.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.378s
  Counterexample analysis:                             6.666s (Max:     0.085s, Calls: 169)
    Refinement sat check:                              4.774s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.136s
  Precision update:                                    0.093s
  ARG update:                                          0.260s

Length of refined path (in blocks):                   12114 (count: 168, min: 31, max: 80, avg: 72.11)
Number of affected states:                             2817 (count: 168, min: 1, max: 62, avg: 16.77)
Length (states) of path with itp 'true':               9129 (count: 168, min: 0, max: 63, avg: 54.34)
Length (states) of path with itp non-trivial itp:      2817 (count: 168, min: 1, max: 62, avg: 16.77)
Length (states) of path with itp 'false':               168 (count: 168, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 168, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:            2647 (count: 168, min: 0, max: 60, avg: 15.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                169
Number of successful refinements:     168
Number of failed refinements:         0
Max. size of reached set before ref.: 9463
Max. size of reached set after ref.:  9178
Avg. size of reached set before ref.: 8686.04
Avg. size of reached set after ref.:  8239.15

Total time for CEGAR algorithm:      25.722s
Time for refinements:                 9.162s
Average time for refinement:          0.054s
Max time for refinement:              0.156s

Code Coverage
-----------------------------
  Function coverage:      0.487
  Visited lines:          657
  Total lines:            1754
  Line coverage:          0.375
  Visited conditions:     370
  Total conditions:       756
  Condition coverage:     0.489

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             6576
  Number of reached locations:   725 (32%)
    Avg states per location:     9
    Max states per location:     30 (at node N315)
  Number of reached functions:   38 (49%)
  Number of partitions:          6571
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1824 (before line 2251), Function timeShift called from node N2601, stack depth 5 [389a61be], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       1
  Size of final wait list        46

Time for analysis setup:          4.044s
  Time for loading CPAs:          0.852s
  Time for loading parser:        0.640s
  Time for CFA construction:      2.366s
    Time for parsing file(s):     0.665s
    Time for AST to CFA:          0.750s
    Time for CFA sanity check:    0.229s
    Time for post-processing:     0.556s
      Time for var class.:        0.316s
Time for Analysis:               25.722s
CPU time for analysis:           25.720s
Total time for CPAchecker:       29.769s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.212s

Time for Garbage Collector:       0.681s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    87 MiB) max;     55MB (    53 MiB) avg;    101MB (    96 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
