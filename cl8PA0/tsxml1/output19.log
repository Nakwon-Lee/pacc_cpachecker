scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product21_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_540dhmpb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 50: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1107: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1561: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1615: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1693: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1961: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2161: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2826: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3398: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8569 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8536 (100%)
  Because of loop head:            20 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (0%)
  Times precision was empty:       6872 (80%)
  Times precision was {false}:     303 (4%)
  Times result was cached:         1107 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      287 (3%)
  Times result was 'false':        233 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         79794
  BDD entailment checks:           1106
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       59
Number of predicates discovered:          6
Number of abstraction locations:          48
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         5563
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 9.43
Number of irrelevant predicates:          2294 (41%)
Number of preds handled by boolean abs:   725 (13%)
  Total number of models for allsat:      462
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.61

Time for post operator:                  9.915s
  Time for path formula creation:        9.746s
Time for strengthen operator:            0.271s
Time for prec operator:                  2.966s
  Time for abstraction:                  2.342s (Max:     0.032s, Count: 8569)
    Boolean abstraction:                 0.442s
    Solving time:                        0.496s (Max:     0.013s)
    Model enumeration time:              0.043s
    Time for BDD construction:           0.058s (Max:     0.011s)
Time for merge operator:                 2.512s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.539s

Number of path formula cache hits:   41007 (21%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.919s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               350
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         623 (count: 11302, min: 0, max: 259, avg: 0.06)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.483s
Automaton transfers with branching:                0
Automaton transfer successors:                       187997 (count: 187997, min: 1, max: 1, avg: 1.00) [1 x 187997]

CPA algorithm statistics
------------------------
Number of iterations:            141065
Max size of waitlist:            82
Average size of waitlist:        58
Number of computed successors:   182248
Max successors for one state:    2
Number of times merged:          39344
Number of times stopped:         40390
Number of times breaked:         13

Total time for CPA algorithm:        25.106s (Max:     9.857s)
  Time for choose from waitlist:      0.263s
  Time for precision adjustment:      5.081s
  Time for transfer relation:        13.763s
  Time for merge operator:            3.651s
  Time for stop operator:             0.457s
  Time for adding to reached set:     0.553s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 817 (count: 13, min: 55, max: 102, avg: 62.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.965s
  Counterexample analysis:                             0.444s (Max:     0.050s, Calls: 13)
    Refinement sat check:                              0.273s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.006s
  ARG update:                                          0.434s

Length of refined path (in blocks):                     804 (count: 13, min: 54, max: 101, avg: 61.85)
Number of affected states:                              661 (count: 13, min: 43, max: 90, avg: 50.85)
Length (states) of path with itp 'true':                130 (count: 13, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:       661 (count: 13, min: 43, max: 90, avg: 50.85)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             648 (count: 13, min: 42, max: 89, avg: 49.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 45585
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 7508.77
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      26.313s
Time for refinements:                 1.207s
Average time for refinement:          0.092s
Max time for refinement:              0.395s

Code Coverage
-----------------------------
  Function coverage:      0.603
  Visited lines:          1022
  Total lines:            1718
  Line coverage:          0.595
  Visited conditions:     604
  Total conditions:       754
  Condition coverage:     0.801

CPAchecker general statistics
-----------------------------
Number of program locations:     2251
Number of CFA edges:             2744
Number of relevant variables:    306
Number of functions:             73
Number of loops:                 9
Size of reached set:             44387
  Number of reached locations:   1154 (51%)
    Avg states per location:     38
    Max states per location:     142 (at node N443)
  Number of reached functions:   44 (60%)
  Number of partitions:          44378
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1080 (before lines 1355-1383), Function cleanup called from node N1221, stack depth 4 [45900cbc], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        63

Time for analysis setup:          3.979s
  Time for loading CPAs:          0.755s
  Time for loading parser:        0.722s
  Time for CFA construction:      2.321s
    Time for parsing file(s):     0.684s
    Time for AST to CFA:          0.685s
    Time for CFA sanity check:    0.240s
    Time for post-processing:     0.523s
      Time for var class.:        0.296s
Time for Analysis:               26.313s
CPU time for analysis:           26.320s
Total time for CPAchecker:       30.296s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.661s

Time for Garbage Collector:       1.964s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                151MB (   144 MiB) max;     71MB (    68 MiB) avg;    159MB (   152 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           187MB (   178 MiB) max;    137MB (   131 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
