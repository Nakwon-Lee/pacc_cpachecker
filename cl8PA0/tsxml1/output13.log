scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product21_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nbco5yny/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 50: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1107: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1561: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1615: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1693: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1961: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2161: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2826: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3398: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13083 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13058 (100%)
  Because of loop head:            17 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (0%)
  Times precision was empty:       10158 (78%)
  Times precision was {false}:     167 (1%)
  Times result was cached:         2574 (20%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      184 (1%)
  Times result was 'false':        650 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         145968
  BDD entailment checks:           2568
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       59
Number of predicates discovered:          6
Number of abstraction locations:          37
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         10247
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 29.19
Number of irrelevant predicates:          8536 (83%)
Number of preds handled by boolean abs:   543 (5%)
  Total number of models for allsat:      342
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.86

Time for post operator:                  6.042s
  Time for path formula creation:        5.723s
Time for strengthen operator:            0.517s
Time for prec operator:                  3.055s
  Time for abstraction:                  2.269s (Max:     0.037s, Count: 13083)
    Boolean abstraction:                 0.341s
    Solving time:                        0.355s (Max:     0.014s)
    Model enumeration time:              0.046s
    Time for BDD construction:           0.032s (Max:     0.009s)
Time for merge operator:                 1.283s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.401s

Number of path formula cache hits:   377491 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.693s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               353
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         413 (count: 14738, min: 0, max: 69, avg: 0.03)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.871s
  Time for transition matches:                         0.359s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       335208 (count: 335208, min: 1, max: 1, avg: 1.00) [1 x 335208]

CPA algorithm statistics
------------------------
Number of iterations:            250632
Max size of waitlist:            128
Average size of waitlist:        81
Number of computed successors:   325923
Max successors for one state:    2
Number of times merged:          71700
Number of times stopped:         73882
Number of times breaked:         8

Total time for CPA algorithm:        24.558s (Max:     9.095s)
  Time for choose from waitlist:      0.284s
  Time for precision adjustment:      6.436s
  Time for transfer relation:        11.674s
  Time for merge operator:            2.792s
  Time for stop operator:             0.719s
  Time for adding to reached set:     0.782s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 376 (count: 8, min: 47, max: 47, avg: 47.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.183s
  Counterexample analysis:                             0.199s (Max:     0.034s, Calls: 8)
    Refinement sat check:                              0.125s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.021s
  ARG update:                                          0.921s

Length of refined path (in blocks):                     368 (count: 8, min: 46, max: 46, avg: 46.00)
Number of affected states:                              280 (count: 8, min: 35, max: 35, avg: 35.00)
Length (states) of path with itp 'true':                 80 (count: 8, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:       280 (count: 8, min: 35, max: 35, avg: 35.00)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             272 (count: 8, min: 34, max: 34, avg: 34.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 31868
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 31150.63
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      26.117s
Time for refinements:                 1.550s
Average time for refinement:          0.193s
Max time for refinement:              0.356s

Code Coverage
-----------------------------
  Function coverage:      0.411
  Visited lines:          636
  Total lines:            1718
  Line coverage:          0.370
  Visited conditions:     382
  Total conditions:       754
  Condition coverage:     0.507

CPAchecker general statistics
-----------------------------
Number of program locations:     2251
Number of CFA edges:             2744
Number of relevant variables:    306
Number of functions:             73
Number of loops:                 9
Size of reached set:             2419
  Number of reached locations:   683 (30%)
    Avg states per location:     3
    Max states per location:     27 (at node N1298)
  Number of reached functions:   30 (41%)
  Number of partitions:          2417
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2256 (before line 2809), Function stopRequestedAtCurrentFloor called from node N2349, stack depth 6 [6a0345e0], stack [main, runTest, test, cleanup, timeShift, stopRequestedAtCurrentFloor]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          4.125s
  Time for loading CPAs:          0.820s
  Time for loading parser:        0.694s
  Time for CFA construction:      2.419s
    Time for parsing file(s):     0.658s
    Time for AST to CFA:          0.744s
    Time for CFA sanity check:    0.264s
    Time for post-processing:     0.594s
      Time for var class.:        0.344s
Time for Analysis:               26.117s
CPU time for analysis:           26.120s
Total time for CPAchecker:       30.246s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.151s

Time for Garbage Collector:       2.036s (in 87 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                119MB (   113 MiB) max;     65MB (    62 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
