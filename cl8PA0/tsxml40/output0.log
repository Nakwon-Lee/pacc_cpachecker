scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fklb0bg7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1339: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2031: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2203: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2727: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1570: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7584 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7331 (97%)
  Because of loop head:            233 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (0%)
  Times precision was empty:       5904 (78%)
  Times precision was {false}:     98 (1%)
  Times result was cached:         1374 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      208 (3%)
  Times result was 'false':        168 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         135295
  BDD entailment checks:           571
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          14
Number of abstraction locations:          58
Max number of predicates per location:    9
Avg number of predicates per location:    6
Total predicates per abstraction:         7042
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 23.01
Number of irrelevant predicates:          1549 (22%)
Number of preds handled by boolean abs:   926 (13%)
  Total number of models for allsat:      382
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.84

Time for post operator:                  7.324s
  Time for path formula creation:        7.025s
Time for strengthen operator:            0.337s
Time for prec operator:                  2.552s
  Time for abstraction:                  1.996s (Max:     0.165s, Count: 7584)
    Boolean abstraction:                 0.462s
    Solving time:                        0.286s (Max:     0.024s)
    Model enumeration time:              0.062s
    Time for BDD construction:           0.080s (Max:     0.011s)
Time for merge operator:                 1.798s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.348s

Number of path formula cache hits:   287156 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.661s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               772
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         765 (count: 8385, min: 0, max: 167, avg: 0.09)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.713s
  Time for transition matches:                         0.335s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       300208 (count: 300208, min: 1, max: 1, avg: 1.00) [1 x 300208]

CPA algorithm statistics
------------------------
Number of iterations:            225861
Max size of waitlist:            118
Average size of waitlist:        56
Number of computed successors:   294951
Max successors for one state:    2
Number of times merged:          67362
Number of times stopped:         67902
Number of times breaked:         20

Total time for CPA algorithm:        23.475s (Max:     7.882s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:      5.259s
  Time for transfer relation:        12.419s
  Time for merge operator:            3.090s
  Time for stop operator:             0.531s
  Time for adding to reached set:     0.702s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                1400 (count: 20, min: 43, max: 94, avg: 70.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.703s
  Counterexample analysis:                             0.806s (Max:     0.084s, Calls: 20)
    Refinement sat check:                              0.562s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.030s
  ARG update:                                          0.758s

Length of refined path (in blocks):                     886 (count: 20, min: 36, max: 52, avg: 44.30)
Number of affected states:                              610 (count: 20, min: 1, max: 51, avg: 30.50)
Length (states) of path with itp 'true':                256 (count: 20, min: 0, max: 38, avg: 12.80)
Length (states) of path with itp non-trivial itp:       610 (count: 20, min: 1, max: 51, avg: 30.50)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 20, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:             588 (count: 20, min: 0, max: 50, avg: 29.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 23141
Max. size of reached set after ref.:  730
Avg. size of reached set before ref.: 11175.05
Avg. size of reached set after ref.:  225.95

Total time for CEGAR algorithm:      25.491s
Time for refinements:                 2.010s
Average time for refinement:          0.100s
Max time for refinement:              0.274s

Code Coverage
-----------------------------
  Function coverage:      0.487
  Visited lines:          693
  Total lines:            1731
  Line coverage:          0.400
  Visited conditions:     398
  Total conditions:       736
  Condition coverage:     0.541

CPAchecker general statistics
-----------------------------
Number of program locations:     2272
Number of CFA edges:             2765
Number of relevant variables:    328
Number of functions:             78
Number of loops:                 9
Size of reached set:             7899
  Number of reached locations:   780 (34%)
    Avg states per location:     10
    Max states per location:     31 (at node N446)
  Number of reached functions:   38 (49%)
  Number of partitions:          7899
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        47

Time for analysis setup:          4.250s
  Time for loading CPAs:          0.861s
  Time for loading parser:        0.626s
  Time for CFA construction:      2.578s
    Time for parsing file(s):     0.764s
    Time for AST to CFA:          0.778s
    Time for CFA sanity check:    0.269s
    Time for post-processing:     0.591s
      Time for var class.:        0.336s
Time for Analysis:               25.491s
CPU time for analysis:           25.490s
Total time for CPAchecker:       29.745s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.269s

Time for Garbage Collector:       1.902s (in 85 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   115 MiB) max;     63MB (    60 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
