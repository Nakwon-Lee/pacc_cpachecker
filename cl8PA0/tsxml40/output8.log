scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_foop_d0x/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1339: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2031: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2203: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2727: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1570: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11975 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10656 (89%)
  Because of loop head:            1236 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         83 (1%)
  Times precision was empty:       1844 (15%)
  Times precision was {false}:     248 (2%)
  Times result was cached:         7635 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2248 (19%)
  Times result was 'false':        1359 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         21352
  BDD entailment checks:           2006
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          21
Number of abstraction locations:          90
Max number of predicates per location:    12
Avg number of predicates per location:    8
Total predicates per abstraction:         66611
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 26.69
Number of irrelevant predicates:          34108 (51%)
Number of preds handled by boolean abs:   10014 (15%)
  Total number of models for allsat:      3527
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.57

Time for post operator:                  2.562s
  Time for path formula creation:        2.461s
Time for strengthen operator:            0.163s
Time for prec operator:                 10.425s
  Time for abstraction:                 10.093s (Max:     0.019s, Count: 11975)
    Boolean abstraction:                 2.889s
    Solving time:                        2.094s (Max:     0.014s)
    Model enumeration time:              0.340s
    Time for BDD construction:           0.216s (Max:     0.011s)
Time for merge operator:                 0.260s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     2.434s

Number of path formula cache hits:   79752 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.304s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2076
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5520 (count: 19546, min: 0, max: 356, avg: 0.28)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.478s
Automaton transfers with branching:                0
Automaton transfer successors:                        89001 (count: 89001, min: 1, max: 1, avg: 1.00) [1 x 89001]

CPA algorithm statistics
------------------------
Number of iterations:            63413
Max size of waitlist:            159
Average size of waitlist:        33
Number of computed successors:   77393
Max successors for one state:    2
Number of times merged:          9673
Number of times stopped:         10713
Number of times breaked:         83

Total time for CPA algorithm:        18.446s (Max:     1.104s)
  Time for choose from waitlist:      0.160s
  Time for precision adjustment:     11.310s
  Time for transfer relation:         5.026s
  Time for merge operator:            0.571s
  Time for stop operator:             0.326s
  Time for adding to reached set:     0.311s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   83
Avg. length of target path (in blocks):               11938 (count: 83, min: 102, max: 383, avg: 143.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.113s
  Counterexample analysis:                             6.426s (Max:     0.364s, Calls: 83)
    Refinement sat check:                              3.281s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.104s
  Precision update:                                    0.106s
  ARG update:                                          0.243s

Length of refined path (in blocks):                    7969 (count: 82, min: 39, max: 335, avg: 97.18)
Number of affected states:                             2573 (count: 82, min: 1, max: 334, avg: 31.38)
Length (states) of path with itp 'true':               5314 (count: 82, min: 0, max: 308, avg: 64.80)
Length (states) of path with itp non-trivial itp:      2573 (count: 82, min: 1, max: 334, avg: 31.38)
Length (states) of path with itp 'false':                82 (count: 82, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 82, min: 0, max: 3, avg: 0.17)
Equal non-trivial interpolants along paths:            2477 (count: 82, min: 0, max: 332, avg: 30.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                83
Number of successful refinements:     82
Number of failed refinements:         0
Max. size of reached set before ref.: 4215
Max. size of reached set after ref.:  3525
Avg. size of reached set before ref.: 1580.77
Avg. size of reached set after ref.:  803.44

Total time for CEGAR algorithm:      26.177s
Time for refinements:                 7.640s
Average time for refinement:          0.092s
Max time for refinement:              0.402s

Code Coverage
-----------------------------
  Function coverage:      0.538
  Visited lines:          689
  Total lines:            1731
  Line coverage:          0.398
  Visited conditions:     344
  Total conditions:       736
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     2272
Number of CFA edges:             2765
Number of relevant variables:    328
Number of functions:             78
Number of loops:                 9
Size of reached set:             3994
  Number of reached locations:   710 (31%)
    Avg states per location:     5
    Max states per location:     35 (at node N414)
  Number of reached functions:   42 (54%)
  Number of partitions:          3975
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N238 (before lines 386-414), Function cleanup called from node N2699, stack depth 4 [7471bf14], stack [main, runTest, test, cleanup]])
  Number of target states:       1
  Size of final wait list        139

Time for analysis setup:          4.070s
  Time for loading CPAs:          0.844s
  Time for loading parser:        0.646s
  Time for CFA construction:      2.396s
    Time for parsing file(s):     0.615s
    Time for AST to CFA:          0.804s
    Time for CFA sanity check:    0.250s
    Time for post-processing:     0.550s
      Time for var class.:        0.305s
Time for Analysis:               26.177s
CPU time for analysis:           26.180s
Total time for CPAchecker:       30.252s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.219s

Time for Garbage Collector:       0.472s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     45MB (    43 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
