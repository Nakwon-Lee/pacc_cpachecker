scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6ps3pq26/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1339: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2031: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2203: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2727: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1570: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8410 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8019 (95%)
  Because of loop head:            361 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       8007 (95%)
  Times precision was {false}:     84 (1%)
  Times result was cached:         243 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      76 (1%)
  Times result was 'false':        58 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         86366
  BDD entailment checks:           1244
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          6
Number of abstraction locations:          39
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         523
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 3.27
Number of irrelevant predicates:          286 (55%)
Number of preds handled by boolean abs:   115 (22%)
  Total number of models for allsat:      87
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                  6.708s
  Time for path formula creation:        6.432s
Time for strengthen operator:            0.384s
Time for prec operator:                  1.369s
  Time for abstraction:                  0.844s (Max:     0.025s, Count: 8410)
    Boolean abstraction:                 0.136s
    Solving time:                        0.150s (Max:     0.010s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.018s (Max:     0.008s)
Time for merge operator:                 1.436s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     0.156s

Number of path formula cache hits:   199272 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.485s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         187 (count: 10170, min: 0, max: 47, avg: 0.02)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.736s
  Time for transition matches:                         0.378s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       202949 (count: 202949, min: 1, max: 1, avg: 1.00) [1 x 202949]

CPA algorithm statistics
------------------------
Number of iterations:            152052
Max size of waitlist:            381
Average size of waitlist:        171
Number of computed successors:   196773
Max successors for one state:    2
Number of times merged:          42561
Number of times stopped:         43766
Number of times breaked:         30

Total time for CPA algorithm:        21.442s (Max:     3.438s)
  Time for choose from waitlist:      0.319s
  Time for precision adjustment:      3.837s
  Time for transfer relation:        11.560s
  Time for merge operator:            3.110s
  Time for stop operator:             0.671s
  Time for adding to reached set:     0.643s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                1568 (count: 30, min: 43, max: 63, avg: 52.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.395s
  Counterexample analysis:                             0.808s (Max:     0.089s, Calls: 30)
    Refinement sat check:                              0.519s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.039s
  ARG update:                                          0.449s

Length of refined path (in blocks):                    1393 (count: 30, min: 36, max: 57, avg: 46.43)
Number of affected states:                              108 (count: 30, min: 1, max: 45, avg: 3.60)
Length (states) of path with itp 'true':               1255 (count: 30, min: 0, max: 55, avg: 41.83)
Length (states) of path with itp non-trivial itp:       108 (count: 30, min: 1, max: 45, avg: 3.60)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 30, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:              76 (count: 30, min: 0, max: 43, avg: 2.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 70478
Max. size of reached set after ref.:  57516
Avg. size of reached set before ref.: 33044.03
Avg. size of reached set after ref.:  29862.90

Total time for CEGAR algorithm:      25.305s
Time for refinements:                 2.878s
Average time for refinement:          0.095s
Max time for refinement:              0.404s

Code Coverage
-----------------------------
  Function coverage:      0.641
  Visited lines:          1085
  Total lines:            1731
  Line coverage:          0.627
  Visited conditions:     622
  Total conditions:       736
  Condition coverage:     0.845

CPAchecker general statistics
-----------------------------
Number of program locations:     2272
Number of CFA edges:             2765
Number of relevant variables:    328
Number of functions:             78
Number of loops:                 9
Size of reached set:             57516
  Number of reached locations:   1221 (54%)
    Avg states per location:     47
    Max states per location:     262 (at node N414)
  Number of reached functions:   50 (64%)
  Number of partitions:          57512
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2402 (before line 3068), Function timeShift called from node N224, stack depth 5 [5468c51e], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        314

Time for analysis setup:          4.483s
  Time for loading CPAs:          0.880s
  Time for loading parser:        0.791s
  Time for CFA construction:      2.642s
    Time for parsing file(s):     0.713s
    Time for AST to CFA:          0.816s
    Time for CFA sanity check:    0.276s
    Time for post-processing:     0.625s
      Time for var class.:        0.347s
Time for Analysis:               25.305s
CPU time for analysis:           25.300s
Total time for CPAchecker:       29.796s
Total CPU time for CPAchecker:   29.790s
Time for statistics:              0.976s

Time for Garbage Collector:       1.702s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     65MB (    62 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
