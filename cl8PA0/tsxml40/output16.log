scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hbqc9dso/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 591: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1339: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1390: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2031: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2203: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2727: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1570: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7721 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7652 (99%)
  Because of loop head:            63 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       7649 (99%)
  Times precision was {false}:     21 (0%)
  Times result was cached:         27 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24 (0%)
  Times result was 'false':        8 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         92683
  BDD entailment checks:           965
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          5
Number of abstraction locations:          37
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         83
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.84
Number of irrelevant predicates:          32 (39%)
Number of preds handled by boolean abs:   28 (34%)
  Total number of models for allsat:      23
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.96

Time for post operator:                  7.733s
  Time for path formula creation:        7.409s
Time for strengthen operator:            0.408s
Time for prec operator:                  1.180s
  Time for abstraction:                  0.418s (Max:     0.027s, Count: 7721)
    Boolean abstraction:                 0.059s
    Solving time:                        0.064s (Max:     0.010s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 1.467s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     0.065s

Number of path formula cache hits:   202024 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.852s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          65 (count: 8885, min: 0, max: 52, avg: 0.01)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.765s
  Time for transition matches:                         0.321s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       210108 (count: 210108, min: 1, max: 1, avg: 1.00) [1 x 210108]

CPA algorithm statistics
------------------------
Number of iterations:            159303
Max size of waitlist:            47
Average size of waitlist:        21
Number of computed successors:   206146
Max successors for one state:    2
Number of times merged:          45859
Number of times stopped:         46824
Number of times breaked:         6

Total time for CPA algorithm:        23.148s (Max:    16.484s)
  Time for choose from waitlist:      0.394s
  Time for precision adjustment:      4.116s
  Time for transfer relation:        12.797s
  Time for merge operator:            2.806s
  Time for stop operator:             0.644s
  Time for adding to reached set:     0.677s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 263 (count: 6, min: 43, max: 45, avg: 43.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.818s
  Counterexample analysis:                             0.189s (Max:     0.049s, Calls: 6)
    Refinement sat check:                              0.140s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.030s
  ARG update:                                          0.562s

Length of refined path (in blocks):                     227 (count: 6, min: 36, max: 40, avg: 37.83)
Number of affected states:                               40 (count: 6, min: 1, max: 35, avg: 6.67)
Length (states) of path with itp 'true':                181 (count: 6, min: 0, max: 38, avg: 30.17)
Length (states) of path with itp non-trivial itp:        40 (count: 6, min: 1, max: 35, avg: 6.67)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 6, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:              33 (count: 6, min: 0, max: 33, avg: 5.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 79298
Max. size of reached set after ref.:  79192
Avg. size of reached set before ref.: 79271.00
Avg. size of reached set after ref.:  65917.17

Total time for CEGAR algorithm:      25.790s
Time for refinements:                 2.048s
Average time for refinement:          0.341s
Max time for refinement:              0.693s

Code Coverage
-----------------------------
  Function coverage:      0.615
  Visited lines:          1064
  Total lines:            1731
  Line coverage:          0.615
  Visited conditions:     612
  Total conditions:       736
  Condition coverage:     0.832

CPAchecker general statistics
-----------------------------
Number of program locations:     2272
Number of CFA edges:             2765
Number of relevant variables:    328
Number of functions:             78
Number of loops:                 9
Size of reached set:             79192
  Number of reached locations:   1195 (53%)
    Avg states per location:     66
    Max states per location:     286 (at node N493)
  Number of reached functions:   48 (62%)
  Number of partitions:          79192
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          4.576s
  Time for loading CPAs:          0.872s
  Time for loading parser:        0.804s
  Time for CFA construction:      2.667s
    Time for parsing file(s):     0.751s
    Time for AST to CFA:          0.821s
    Time for CFA sanity check:    0.265s
    Time for post-processing:     0.626s
      Time for var class.:        0.357s
Time for Analysis:               25.790s
CPU time for analysis:           25.780s
Total time for CPAchecker:       30.370s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              1.659s

Time for Garbage Collector:       1.859s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                178MB (   170 MiB) max;     81MB (    77 MiB) avg;    201MB (   192 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           212MB (   202 MiB) max;    152MB (   145 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
