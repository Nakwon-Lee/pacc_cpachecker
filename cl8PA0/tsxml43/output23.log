scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product19_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ngrz9yqv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 289: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 341: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 461: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 474: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 826: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 990: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1563: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2490: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2529: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3013: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3414: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11402 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11224 (98%)
  Because of loop head:            105 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         73 (1%)
  Times precision was empty:       2638 (23%)
  Times precision was {false}:     281 (2%)
  Times result was cached:         7686 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      797 (7%)
  Times result was 'false':        1038 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         77567
  BDD entailment checks:           911
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          12
Number of abstraction locations:          65
Max number of predicates per location:    11
Avg number of predicates per location:    9
Total predicates per abstraction:         58078
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 53.88
Number of irrelevant predicates:          18058 (31%)
Number of preds handled by boolean abs:   4983 (9%)
  Total number of models for allsat:      829
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.04

Time for post operator:                  3.769s
  Time for path formula creation:        3.498s
Time for strengthen operator:            0.331s
Time for prec operator:                  7.427s
  Time for abstraction:                  6.913s (Max:     0.033s, Count: 11402)
    Boolean abstraction:                 1.344s
    Solving time:                        1.110s (Max:     0.016s)
    Model enumeration time:              0.085s
    Time for BDD construction:           0.097s (Max:     0.008s)
Time for merge operator:                 0.542s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     1.195s

Number of path formula cache hits:   185747 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.086s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               485
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1965 (count: 10022, min: 0, max: 291, avg: 0.20)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.674s
  Time for transition matches:                         0.255s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       198224 (count: 198224, min: 1, max: 1, avg: 1.00) [1 x 198224]

CPA algorithm statistics
------------------------
Number of iterations:            145348
Max size of waitlist:            43
Average size of waitlist:        16
Number of computed successors:   187250
Max successors for one state:    2
Number of times merged:          38328
Number of times stopped:         38957
Number of times breaked:         73

Total time for CPA algorithm:        20.528s (Max:     1.723s)
  Time for choose from waitlist:      0.236s
  Time for precision adjustment:      9.033s
  Time for transfer relation:         7.585s
  Time for merge operator:            1.486s
  Time for stop operator:             0.496s
  Time for adding to reached set:     0.517s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   73
Avg. length of target path (in blocks):                6298 (count: 73, min: 59, max: 116, avg: 86.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.021s
  Counterexample analysis:                             4.097s (Max:     0.113s, Calls: 73)
    Refinement sat check:                              2.824s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.129s
  Precision update:                                    0.109s
  ARG update:                                          0.503s

Length of refined path (in blocks):                    4858 (count: 72, min: 31, max: 80, avg: 67.47)
Number of affected states:                             4426 (count: 72, min: 30, max: 79, avg: 61.47)
Length (states) of path with itp 'true':                360 (count: 72, min: 0, max: 10, avg: 5.00)
Length (states) of path with itp non-trivial itp:      4426 (count: 72, min: 30, max: 79, avg: 61.47)
Length (states) of path with itp 'false':                72 (count: 72, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 72, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4354 (count: 72, min: 29, max: 78, avg: 60.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                73
Number of successful refinements:     72
Number of failed refinements:         0
Max. size of reached set before ref.: 3525
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 2032.99
Avg. size of reached set after ref.:  16.00

Total time for CEGAR algorithm:      25.913s
Time for refinements:                 5.360s
Average time for refinement:          0.073s
Max time for refinement:              0.177s

Code Coverage
-----------------------------
  Function coverage:      0.413
  Visited lines:          598
  Total lines:            1719
  Line coverage:          0.348
  Visited conditions:     352
  Total conditions:       754
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     2258
Number of CFA edges:             2750
Number of relevant variables:    298
Number of functions:             75
Number of loops:                 9
Size of reached set:             2755
  Number of reached locations:   670 (30%)
    Avg states per location:     4
    Max states per location:     12 (at node N1341)
  Number of reached functions:   31 (41%)
  Number of partitions:          2752
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2232 (before lines 2807-2835), Function cleanup called from node N1803, stack depth 4 [707701d7], stack [main, runTest, test, cleanup]])
  Number of target states:       1
  Size of final wait list        24

Time for analysis setup:          4.361s
  Time for loading CPAs:          0.951s
  Time for loading parser:        0.695s
  Time for CFA construction:      2.516s
    Time for parsing file(s):     0.688s
    Time for AST to CFA:          0.780s
    Time for CFA sanity check:    0.265s
    Time for post-processing:     0.597s
      Time for var class.:        0.329s
Time for Analysis:               25.913s
CPU time for analysis:           25.900s
Total time for CPAchecker:       30.280s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.154s

Time for Garbage Collector:       0.643s (in 72 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     45MB (    43 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
