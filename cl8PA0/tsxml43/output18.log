scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product19_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_97dcgc33/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 289: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 341: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 461: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 474: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 826: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 990: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1563: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2490: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2529: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3013: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3414: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5810 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5787 (100%)
  Because of loop head:            12 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (0%)
  Times precision was empty:       2543 (44%)
  Times precision was {false}:     94 (2%)
  Times result was cached:         2969 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      204 (4%)
  Times result was 'false':        51 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         123576
  BDD entailment checks:           500
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          7
Number of abstraction locations:          55
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         12987
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 43.58
Number of irrelevant predicates:          10807 (83%)
Number of preds handled by boolean abs:   647 (5%)
  Total number of models for allsat:      235
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.15

Time for post operator:                  5.930s
  Time for path formula creation:        5.621s
Time for strengthen operator:            0.394s
Time for prec operator:                  4.501s
  Time for abstraction:                  3.789s (Max:     0.161s, Count: 5810)
    Boolean abstraction:                 0.417s
    Solving time:                        0.309s (Max:     0.015s)
    Model enumeration time:              0.048s
    Time for BDD construction:           0.052s (Max:     0.010s)
Time for merge operator:                 1.260s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.357s

Number of path formula cache hits:   307773 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.041s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               365
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         499 (count: 4796, min: 0, max: 65, avg: 0.10)
Time for BDD node cleanup:                             0.048s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.845s
  Time for transition matches:                         0.336s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       268865 (count: 268865, min: 1, max: 1, avg: 1.00) [1 x 268865]

CPA algorithm statistics
------------------------
Number of iterations:            201709
Max size of waitlist:            100
Average size of waitlist:        57
Number of computed successors:   264786
Max successors for one state:    2
Number of times merged:          61538
Number of times stopped:         61951
Number of times breaked:         11

Total time for CPA algorithm:        24.387s (Max:     8.097s)
  Time for choose from waitlist:      0.322s
  Time for precision adjustment:      7.180s
  Time for transfer relation:        10.966s
  Time for merge operator:            2.927s
  Time for stop operator:             0.596s
  Time for adding to reached set:     0.653s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 661 (count: 11, min: 59, max: 61, avg: 60.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.393s
  Counterexample analysis:                             0.533s (Max:     0.089s, Calls: 11)
    Refinement sat check:                              0.361s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.023s
  ARG update:                                          0.751s

Length of refined path (in blocks):                     621 (count: 11, min: 31, max: 60, avg: 56.45)
Number of affected states:                              510 (count: 11, min: 30, max: 49, avg: 46.36)
Length (states) of path with itp 'true':                100 (count: 11, min: 0, max: 10, avg: 9.09)
Length (states) of path with itp non-trivial itp:       510 (count: 11, min: 30, max: 49, avg: 46.36)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             499 (count: 11, min: 29, max: 48, avg: 45.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 17518
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 17249.82
Avg. size of reached set after ref.:  26.64

Total time for CEGAR algorithm:      26.139s
Time for refinements:                 1.752s
Average time for refinement:          0.159s
Max time for refinement:              0.364s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          570
  Total lines:            1719
  Line coverage:          0.332
  Visited conditions:     342
  Total conditions:       754
  Condition coverage:     0.454

CPAchecker general statistics
-----------------------------
Number of program locations:     2258
Number of CFA edges:             2750
Number of relevant variables:    298
Number of functions:             75
Number of loops:                 9
Size of reached set:             13328
  Number of reached locations:   645 (29%)
    Avg states per location:     20
    Max states per location:     63 (at node N1342)
  Number of reached functions:   30 (40%)
  Number of partitions:          13326
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N919 (before line 1198), Function timeShift called from node N2229, stack depth 5 [56547b5], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        78

Time for analysis setup:          4.089s
  Time for loading CPAs:          0.781s
  Time for loading parser:        0.658s
  Time for CFA construction:      2.422s
    Time for parsing file(s):     0.709s
    Time for AST to CFA:          0.717s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.569s
      Time for var class.:        0.316s
Time for Analysis:               26.139s
CPU time for analysis:           26.140s
Total time for CPAchecker:       30.233s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.381s

Time for Garbage Collector:       1.569s (in 80 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     62MB (    59 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
