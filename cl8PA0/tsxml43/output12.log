scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product19_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_93sxdd5l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 289: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 341: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 461: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 474: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 826: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 855: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 990: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1563: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2254: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2490: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2529: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3013: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3414: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7306 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7302 (100%)
  Because of loop head:            3 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (0%)
  Times precision was empty:       6835 (94%)
  Times precision was {false}:     261 (4%)
  Times result was cached:         154 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      56 (1%)
  Times result was 'false':        60 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         77592
  BDD entailment checks:           1026
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          2
Number of abstraction locations:          41
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         471
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.49
Number of irrelevant predicates:          390 (83%)
Number of preds handled by boolean abs:   56 (12%)
  Total number of models for allsat:      52
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.93

Time for post operator:                  8.978s
  Time for path formula creation:        8.655s
Time for strengthen operator:            0.401s
Time for prec operator:                  2.205s
  Time for abstraction:                  1.428s (Max:     0.025s, Count: 7306)
    Boolean abstraction:                 0.105s
    Solving time:                        0.359s (Max:     0.020s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.011s (Max:     0.005s)
Time for merge operator:                 1.811s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     0.368s

Number of path formula cache hits:   85321 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.879s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         103 (count: 9546, min: 0, max: 83, avg: 0.01)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.840s
  Time for transition matches:                         0.277s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       178668 (count: 178668, min: 1, max: 1, avg: 1.00) [1 x 178668]

CPA algorithm statistics
------------------------
Number of iterations:            135010
Max size of waitlist:            28
Average size of waitlist:        14
Number of computed successors:   174330
Max successors for one state:    2
Number of times merged:          38283
Number of times stopped:         39239
Number of times breaked:         1

Total time for CPA algorithm:        24.910s (Max:    17.792s)
  Time for choose from waitlist:      0.340s
  Time for precision adjustment:      4.707s
  Time for transfer relation:        14.125s
  Time for merge operator:            2.979s
  Time for stop operator:             0.713s
  Time for adding to reached set:     0.530s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                  63 (count: 1, min: 63, max: 63, avg: 63.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.901s
  Counterexample analysis:                             0.044s (Max:     0.044s, Calls: 1)
    Refinement sat check:                              0.022s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.015s
  ARG update:                                          0.810s

Length of refined path (in blocks):                      62 (count: 1, min: 62, max: 62, avg: 62.00)
Number of affected states:                               51 (count: 1, min: 51, max: 51, avg: 51.00)
Length (states) of path with itp 'true':                 10 (count: 1, min: 10, max: 10, avg: 10.00)
Length (states) of path with itp non-trivial itp:        51 (count: 1, min: 51, max: 51, avg: 51.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              50 (count: 1, min: 50, max: 50, avg: 50.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 80893
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 80893.00
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:      25.980s
Time for refinements:                 1.069s
Average time for refinement:          1.069s
Max time for refinement:              1.069s

Code Coverage
-----------------------------
  Function coverage:      0.573
  Visited lines:          1006
  Total lines:            1719
  Line coverage:          0.585
  Visited conditions:     588
  Total conditions:       754
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     2258
Number of CFA edges:             2750
Number of relevant variables:    298
Number of functions:             75
Number of loops:                 9
Size of reached set:             54168
  Number of reached locations:   1131 (50%)
    Avg states per location:     47
    Max states per location:     178 (at node N1342)
  Number of reached functions:   43 (57%)
  Number of partitions:          54157
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N772 (before line 974), Function stopRequestedAtCurrentFloor called from node N865, stack depth 6 [50a85d17], stack [main, runTest, test, cleanup, timeShift, stopRequestedAtCurrentFloor]])
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          4.257s
  Time for loading CPAs:          0.899s
  Time for loading parser:        0.749s
  Time for CFA construction:      2.431s
    Time for parsing file(s):     0.631s
    Time for AST to CFA:          0.748s
    Time for CFA sanity check:    0.265s
    Time for post-processing:     0.591s
      Time for var class.:        0.314s
Time for Analysis:               25.980s
CPU time for analysis:           25.980s
Total time for CPAchecker:       30.241s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              1.204s

Time for Garbage Collector:       2.058s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                190MB (   182 MiB) max;     84MB (    80 MiB) avg;    205MB (   196 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           211MB (   201 MiB) max;    154MB (   147 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
