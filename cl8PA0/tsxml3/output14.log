scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xg84in07/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 50: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1206: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1757: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1965: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2181: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2323: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2765: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3351: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8593 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8490 (99%)
  Because of loop head:            75 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       3288 (38%)
  Times precision was {false}:     571 (7%)
  Times result was cached:         2827 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1907 (22%)
  Times result was 'false':        1139 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         51050
  BDD entailment checks:           402
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          22
Number of abstraction locations:          61
Max number of predicates per location:    16
Avg number of predicates per location:    11
Total predicates per abstraction:         43630
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 17.61
Number of irrelevant predicates:          15549 (36%)
Number of preds handled by boolean abs:   16154 (37%)
  Total number of models for allsat:      7377
  Max number of models for allsat:        28
  Avg number of models for allsat:        3.87

Time for post operator:                  3.396s
  Time for path formula creation:        3.246s
Time for strengthen operator:            0.226s
Time for prec operator:                 10.717s
  Time for abstraction:                 10.292s (Max:     0.037s, Count: 8593)
    Boolean abstraction:                 4.274s
    Solving time:                        2.998s (Max:     0.045s)
    Model enumeration time:              0.603s
    Time for BDD construction:           0.342s (Max:     0.013s)
Time for merge operator:                 0.445s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     3.602s

Number of path formula cache hits:   127536 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.872s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               12086
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10886 (count: 21460, min: 0, max: 520, avg: 0.51)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.458s
Automaton transfers with branching:                0
Automaton transfer successors:                       136461 (count: 136461, min: 1, max: 1, avg: 1.00) [1 x 136461]

CPA algorithm statistics
------------------------
Number of iterations:            98260
Max size of waitlist:            190
Average size of waitlist:        47
Number of computed successors:   126813
Max successors for one state:    2
Number of times merged:          25324
Number of times stopped:         25429
Number of times breaked:         28

Total time for CPA algorithm:        21.291s (Max:     1.988s)
  Time for choose from waitlist:      0.201s
  Time for precision adjustment:     12.113s
  Time for transfer relation:         6.201s
  Time for merge operator:            1.101s
  Time for stop operator:             0.358s
  Time for adding to reached set:     0.357s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                3624 (count: 28, min: 67, max: 326, avg: 129.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.064s
  Counterexample analysis:                             3.387s (Max:     0.435s, Calls: 28)
    Refinement sat check:                              1.942s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.106s
  Precision update:                                    0.056s
  ARG update:                                          0.391s

Length of refined path (in blocks):                    3044 (count: 28, min: 39, max: 322, avg: 108.71)
Number of affected states:                             2953 (count: 28, min: 1, max: 321, avg: 105.46)
Length (states) of path with itp 'true':                 63 (count: 28, min: 0, max: 63, avg: 2.25)
Length (states) of path with itp non-trivial itp:      2953 (count: 28, min: 1, max: 321, avg: 105.46)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          40 (count: 28, min: 0, max: 8, avg: 1.43)
Equal non-trivial interpolants along paths:            2885 (count: 28, min: 0, max: 312, avg: 103.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 9403
Max. size of reached set after ref.:  1471
Avg. size of reached set before ref.: 3526.46
Avg. size of reached set after ref.:  55.43

Total time for CEGAR algorithm:      25.670s
Time for refinements:                 4.378s
Average time for refinement:          0.156s
Max time for refinement:              0.494s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          600
  Total lines:            1696
  Line coverage:          0.354
  Visited conditions:     330
  Total conditions:       750
  Condition coverage:     0.440

CPAchecker general statistics
-----------------------------
Number of program locations:     2228
Number of CFA edges:             2716
Number of relevant variables:    286
Number of functions:             72
Number of loops:                 9
Size of reached set:             3056
  Number of reached locations:   636 (29%)
    Avg states per location:     4
    Max states per location:     15 (at node N1358)
  Number of reached functions:   34 (47%)
  Number of partitions:          3053
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N508 (before lines 697-725), Function cleanup called from node N1368, stack depth 4 [11b3e3f], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        59

Time for analysis setup:          4.099s
  Time for loading CPAs:          0.852s
  Time for loading parser:        0.669s
  Time for CFA construction:      2.366s
    Time for parsing file(s):     0.701s
    Time for AST to CFA:          0.732s
    Time for CFA sanity check:    0.245s
    Time for post-processing:     0.513s
      Time for var class.:        0.277s
Time for Analysis:               25.670s
CPU time for analysis:           25.670s
Total time for CPAchecker:       29.774s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.141s

Time for Garbage Collector:       0.651s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 80MB (    76 MiB) max;     48MB (    46 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
