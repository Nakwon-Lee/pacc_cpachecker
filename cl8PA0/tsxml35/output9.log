scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product22_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__je0nfix/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 430: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 686: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1343: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2007: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2358: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2841: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2918: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 221: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11966 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11818 (99%)
  Because of loop head:            136 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (0%)
  Times precision was empty:       11322 (95%)
  Times precision was {false}:     92 (1%)
  Times result was cached:         370 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      182 (2%)
  Times result was 'false':        67 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         135703
  BDD entailment checks:           2083
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          17
Number of abstraction locations:          60
Max number of predicates per location:    10
Avg number of predicates per location:    7
Total predicates per abstraction:         3071
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 11.21
Number of irrelevant predicates:          706 (23%)
Number of preds handled by boolean abs:   855 (28%)
  Total number of models for allsat:      397
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.18

Time for post operator:                  7.203s
  Time for path formula creation:        6.947s
Time for strengthen operator:            0.790s
Time for prec operator:                  2.132s
  Time for abstraction:                  1.469s (Max:     0.024s, Count: 11966)
    Boolean abstraction:                 0.405s
    Solving time:                        0.314s (Max:     0.017s)
    Model enumeration time:              0.050s
    Time for BDD construction:           0.064s (Max:     0.010s)
Time for merge operator:                 1.564s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.364s

Number of path formula cache hits:   316172 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.860s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               840
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         716 (count: 15173, min: 0, max: 190, avg: 0.05)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.830s
  Time for transition matches:                         0.402s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       310048 (count: 310048, min: 1, max: 1, avg: 1.00) [1 x 310048]

CPA algorithm statistics
------------------------
Number of iterations:            234262
Max size of waitlist:            29
Average size of waitlist:        15
Number of computed successors:   303218
Max successors for one state:    2
Number of times merged:          66810
Number of times stopped:         68848
Number of times breaked:         12

Total time for CPA algorithm:        23.997s (Max:    13.692s)
  Time for choose from waitlist:      0.289s
  Time for precision adjustment:      5.348s
  Time for transfer relation:        12.618s
  Time for merge operator:            2.932s
  Time for stop operator:             0.530s
  Time for adding to reached set:     0.689s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 636 (count: 12, min: 43, max: 72, avg: 53.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.526s
  Counterexample analysis:                             0.447s (Max:     0.080s, Calls: 12)
    Refinement sat check:                              0.265s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.032s
  Precision update:                                    0.025s
  ARG update:                                          0.979s

Length of refined path (in blocks):                     519 (count: 12, min: 35, max: 68, avg: 43.25)
Number of affected states:                              289 (count: 12, min: 1, max: 67, avg: 24.08)
Length (states) of path with itp 'true':                218 (count: 12, min: 0, max: 38, avg: 18.17)
Length (states) of path with itp non-trivial itp:       289 (count: 12, min: 1, max: 67, avg: 24.08)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           7 (count: 12, min: 0, max: 2, avg: 0.58)
Equal non-trivial interpolants along paths:             270 (count: 12, min: 0, max: 65, avg: 22.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 85689
Max. size of reached set after ref.:  601
Avg. size of reached set before ref.: 19712.08
Avg. size of reached set after ref.:  259.08

Total time for CEGAR algorithm:      25.871s
Time for refinements:                 1.859s
Average time for refinement:          0.154s
Max time for refinement:              0.730s

Code Coverage
-----------------------------
  Function coverage:      0.425
  Visited lines:          563
  Total lines:            1687
  Line coverage:          0.334
  Visited conditions:     296
  Total conditions:       728
  Condition coverage:     0.407

CPAchecker general statistics
-----------------------------
Number of program locations:     2211
Number of CFA edges:             2695
Number of relevant variables:    308
Number of functions:             73
Number of loops:                 9
Size of reached set:             867
  Number of reached locations:   567 (26%)
    Avg states per location:     1
    Max states per location:     11 (at node N1591)
  Number of reached functions:   31 (42%)
  Number of partitions:          866
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1184 (before line 1504), Function timeShift__wrappee__twothirdsfull called from node N1270, stack depth 6 [2e7f4cfe], stack [main, runTest, test, threeTS, timeShift, timeShift__wrappee__twothirdsfull]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          4.387s
  Time for loading CPAs:          0.908s
  Time for loading parser:        0.779s
  Time for CFA construction:      2.462s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          0.770s
    Time for CFA sanity check:    0.256s
    Time for post-processing:     0.579s
      Time for var class.:        0.308s
Time for Analysis:               25.871s
CPU time for analysis:           25.880s
Total time for CPAchecker:       30.262s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.120s

Time for Garbage Collector:       2.344s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                204MB (   194 MiB) max;     81MB (    77 MiB) avg;    213MB (   203 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           211MB (   201 MiB) max;    155MB (   148 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
