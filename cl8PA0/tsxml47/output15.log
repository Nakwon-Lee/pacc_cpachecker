scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hipfab7o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 399: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1226: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1605: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2185: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2314: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1396: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10615 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10402 (98%)
  Because of loop head:            156 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (1%)
  Times precision was empty:       2258 (21%)
  Times precision was {false}:     284 (3%)
  Times result was cached:         6642 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1431 (13%)
  Times result was 'false':        1173 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         38063
  BDD entailment checks:           2611
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          50
Number of abstraction locations:          77
Max number of predicates per location:    28
Avg number of predicates per location:    13
Total predicates per abstraction:         92919
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 54.18
Number of irrelevant predicates:          44749 (48%)
Number of preds handled by boolean abs:   7538 (8%)
  Total number of models for allsat:      2881
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.01

Time for post operator:                  3.584s
  Time for path formula creation:        3.417s
Time for strengthen operator:            0.206s
Time for prec operator:                  9.699s
  Time for abstraction:                  9.189s (Max:     0.030s, Count: 10615)
    Boolean abstraction:                 2.427s
    Solving time:                        1.689s (Max:     0.017s)
    Model enumeration time:              0.242s
    Time for BDD construction:           0.274s (Max:     0.013s)
Time for merge operator:                 0.386s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     1.931s

Number of path formula cache hits:   100267 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.994s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               7817
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8799 (count: 17737, min: 0, max: 1874, avg: 0.50)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.527s
  Time for transition matches:                         0.259s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       113754 (count: 113754, min: 1, max: 1, avg: 1.00) [1 x 113754]

CPA algorithm statistics
------------------------
Number of iterations:            81480
Max size of waitlist:            42
Average size of waitlist:        13
Number of computed successors:   102429
Max successors for one state:    2
Number of times merged:          17726
Number of times stopped:         18568
Number of times breaked:         57

Total time for CPA algorithm:        20.762s (Max:     1.861s)
  Time for choose from waitlist:      0.139s
  Time for precision adjustment:     10.963s
  Time for transfer relation:         6.784s
  Time for merge operator:            1.045s
  Time for stop operator:             0.416s
  Time for adding to reached set:     0.409s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                4633 (count: 57, min: 63, max: 116, avg: 81.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.688s
  Counterexample analysis:                             3.891s (Max:     0.139s, Calls: 57)
    Refinement sat check:                              2.290s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.126s
  Precision update:                                    0.087s
  ARG update:                                          0.439s

Length of refined path (in blocks):                    3573 (count: 57, min: 42, max: 86, avg: 62.68)
Number of affected states:                             2973 (count: 57, min: 1, max: 85, avg: 52.16)
Length (states) of path with itp 'true':                543 (count: 57, min: 0, max: 59, avg: 9.53)
Length (states) of path with itp non-trivial itp:      2973 (count: 57, min: 1, max: 85, avg: 52.16)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         121 (count: 57, min: 0, max: 9, avg: 2.12)
Equal non-trivial interpolants along paths:            2795 (count: 57, min: 0, max: 84, avg: 49.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 3202
Max. size of reached set after ref.:  652
Avg. size of reached set before ref.: 1516.58
Avg. size of reached set after ref.:  80.82

Total time for CEGAR algorithm:      25.823s
Time for refinements:                 5.055s
Average time for refinement:          0.088s
Max time for refinement:              0.221s

Code Coverage
-----------------------------
  Function coverage:      0.408
  Visited lines:          474
  Total lines:            1730
  Line coverage:          0.274
  Visited conditions:     236
  Total conditions:       756
  Condition coverage:     0.312

CPAchecker general statistics
-----------------------------
Number of program locations:     2274
Number of CFA edges:             2769
Number of relevant variables:    302
Number of functions:             76
Number of loops:                 9
Size of reached set:             850
  Number of reached locations:   479 (21%)
    Avg states per location:     1
    Max states per location:     10 (at node N419)
  Number of reached functions:   31 (41%)
  Number of partitions:          843
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N120 (before line 208), Function cleanup called from node N964, stack depth 4 [7b6eb63d], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          4.400s
  Time for loading CPAs:          0.951s
  Time for loading parser:        0.697s
  Time for CFA construction:      2.625s
    Time for parsing file(s):     0.765s
    Time for AST to CFA:          0.795s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.636s
      Time for var class.:        0.364s
Time for Analysis:               25.824s
CPU time for analysis:           25.820s
Total time for CPAchecker:       30.229s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.144s

Time for Garbage Collector:       0.537s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     45MB (    43 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
