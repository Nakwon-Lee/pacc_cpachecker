scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a97mvzl5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5587 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5545 (99%)
  Because of loop head:            32 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       2524 (45%)
  Times precision was {false}:     201 (4%)
  Times result was cached:         759 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2103 (38%)
  Times result was 'false':        390 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         32432
  BDD entailment checks:           488
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          18
Number of abstraction locations:          70
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         17540
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 7.61
Number of irrelevant predicates:          5237 (30%)
Number of preds handled by boolean abs:   9862 (56%)
  Total number of models for allsat:      10064
  Max number of models for allsat:        24
  Avg number of models for allsat:        4.79

Time for post operator:                  5.619s
  Time for path formula creation:        5.423s
Time for strengthen operator:            0.238s
Time for prec operator:                  9.048s
  Time for abstraction:                  8.630s (Max:     0.031s, Count: 5587)
    Boolean abstraction:                 3.879s
    Solving time:                        2.506s (Max:     0.014s)
    Model enumeration time:              0.684s
    Time for BDD construction:           0.361s (Max:     0.012s)
Time for merge operator:                 1.198s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.002s
Total time for SMT solver (w/o itp):     3.190s

Number of path formula cache hits:   36622 (40%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.972s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2645
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5013 (count: 17284, min: 0, max: 471, avg: 0.29)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.467s
Automaton transfers with branching:                0
Automaton transfer successors:                        84596 (count: 84596, min: 1, max: 1, avg: 1.00) [1 x 84596]

CPA algorithm statistics
------------------------
Number of iterations:            61929
Max size of waitlist:            205
Average size of waitlist:        50
Number of computed successors:   79577
Max successors for one state:    2
Number of times merged:          15972
Number of times stopped:         16298
Number of times breaked:         10

Total time for CPA algorithm:        22.940s (Max:    12.028s)
  Time for choose from waitlist:      0.170s
  Time for precision adjustment:     10.337s
  Time for transfer relation:         8.524s
  Time for merge operator:            2.064s
  Time for stop operator:             0.363s
  Time for adding to reached set:     0.412s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                2033 (count: 10, min: 85, max: 417, avg: 203.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.508s
  Counterexample analysis:                             1.802s (Max:     0.413s, Calls: 10)
    Refinement sat check:                              0.693s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.101s
  Precision update:                                    0.016s
  ARG update:                                          0.535s

Length of refined path (in blocks):                    1968 (count: 10, min: 56, max: 413, avg: 196.80)
Number of affected states:                             1875 (count: 10, min: 1, max: 412, avg: 187.50)
Length (states) of path with itp 'true':                 83 (count: 10, min: 0, max: 83, avg: 8.30)
Length (states) of path with itp non-trivial itp:      1875 (count: 10, min: 1, max: 412, avg: 187.50)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          33 (count: 10, min: 0, max: 7, avg: 3.30)
Equal non-trivial interpolants along paths:            1832 (count: 10, min: 0, max: 404, avg: 183.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 43274
Max. size of reached set after ref.:  932
Avg. size of reached set before ref.: 6259.30
Avg. size of reached set after ref.:  95.90

Total time for CEGAR algorithm:      25.671s
Time for refinements:                 2.730s
Average time for refinement:          0.273s
Max time for refinement:              0.606s

Code Coverage
-----------------------------
  Function coverage:      0.481
  Visited lines:          605
  Total lines:            1753
  Line coverage:          0.345
  Visited conditions:     308
  Total conditions:       760
  Condition coverage:     0.405

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             1255
  Number of reached locations:   595 (26%)
    Avg states per location:     2
    Max states per location:     15 (at node N2201)
  Number of reached functions:   37 (48%)
  Number of partitions:          1255
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        48

Time for analysis setup:          4.092s
  Time for loading CPAs:          0.818s
  Time for loading parser:        0.713s
  Time for CFA construction:      2.384s
    Time for parsing file(s):     0.681s
    Time for AST to CFA:          0.685s
    Time for CFA sanity check:    0.237s
    Time for post-processing:     0.614s
      Time for var class.:        0.368s
Time for Analysis:               25.671s
CPU time for analysis:           25.660s
Total time for CPAchecker:       29.768s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.124s

Time for Garbage Collector:       0.833s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                108MB (   103 MiB) max;     65MB (    62 MiB) avg;    111MB (   105 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
