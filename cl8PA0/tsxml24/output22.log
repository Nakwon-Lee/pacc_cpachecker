scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wkd71q9r/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8218 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8094 (98%)
  Because of loop head:            92 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       1793 (22%)
  Times precision was {false}:     181 (2%)
  Times result was cached:         5447 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      797 (10%)
  Times result was 'false':        617 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         36718
  BDD entailment checks:           1574
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          35
Number of abstraction locations:          73
Max number of predicates per location:    14
Avg number of predicates per location:    6
Total predicates per abstraction:         30132
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 30.81
Number of irrelevant predicates:          12091 (40%)
Number of preds handled by boolean abs:   2693 (9%)
  Total number of models for allsat:      1828
  Max number of models for allsat:        48
  Avg number of models for allsat:        2.29

Time for post operator:                  5.000s
  Time for path formula creation:        4.796s
Time for strengthen operator:            0.275s
Time for prec operator:                  7.226s
  Time for abstraction:                  6.701s (Max:     0.034s, Count: 8218)
    Boolean abstraction:                 1.555s
    Solving time:                        1.084s (Max:     0.031s)
    Model enumeration time:              0.166s
    Time for BDD construction:           0.165s (Max:     0.011s)
Time for merge operator:                 0.995s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     1.267s

Number of path formula cache hits:   90439 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.965s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3286
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2852 (count: 9751, min: 0, max: 665, avg: 0.29)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.562s
  Time for transition matches:                         0.193s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       103659 (count: 103659, min: 1, max: 1, avg: 1.00) [1 x 103659]

CPA algorithm statistics
------------------------
Number of iterations:            74761
Max size of waitlist:            106
Average size of waitlist:        38
Number of computed successors:   94828
Max successors for one state:    2
Number of times merged:          17572
Number of times stopped:         18503
Number of times breaked:         32

Total time for CPA algorithm:        22.022s (Max:     8.597s)
  Time for choose from waitlist:      0.253s
  Time for precision adjustment:      8.923s
  Time for transfer relation:         8.566s
  Time for merge operator:            2.117s
  Time for stop operator:             0.472s
  Time for adding to reached set:     0.520s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                2634 (count: 32, min: 63, max: 114, avg: 82.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.736s
  Counterexample analysis:                             2.956s (Max:     0.169s, Calls: 32)
    Refinement sat check:                              1.460s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.120s
  Precision update:                                    0.051s
  ARG update:                                          0.472s

Length of refined path (in blocks):                    2351 (count: 32, min: 43, max: 102, avg: 73.47)
Number of affected states:                             2115 (count: 32, min: 1, max: 101, avg: 66.09)
Length (states) of path with itp 'true':                204 (count: 32, min: 0, max: 59, avg: 6.38)
Length (states) of path with itp non-trivial itp:      2115 (count: 32, min: 1, max: 101, avg: 66.09)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         115 (count: 32, min: 0, max: 9, avg: 3.59)
Equal non-trivial interpolants along paths:            1968 (count: 32, min: 0, max: 95, avg: 61.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 19498
Max. size of reached set after ref.:  606
Avg. size of reached set before ref.: 2352.94
Avg. size of reached set after ref.:  43.19

Total time for CEGAR algorithm:      26.052s
Time for refinements:                 4.028s
Average time for refinement:          0.125s
Max time for refinement:              0.419s

Code Coverage
-----------------------------
  Function coverage:      0.429
  Visited lines:          431
  Total lines:            1753
  Line coverage:          0.246
  Visited conditions:     196
  Total conditions:       760
  Condition coverage:     0.258

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             1796
  Number of reached locations:   438 (19%)
    Avg states per location:     4
    Max states per location:     60 (at node N1065)
  Number of reached functions:   33 (43%)
  Number of partitions:          1786
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N615 (before lines 835-863), Function cleanup called from node N868, stack depth 4 [2276b16a], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          4.196s
  Time for loading CPAs:          0.938s
  Time for loading parser:        0.642s
  Time for CFA construction:      2.411s
    Time for parsing file(s):     0.673s
    Time for AST to CFA:          0.712s
    Time for CFA sanity check:    0.244s
    Time for post-processing:     0.616s
      Time for var class.:        0.340s
Time for Analysis:               26.052s
CPU time for analysis:           26.050s
Total time for CPAchecker:       30.253s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.143s

Time for Garbage Collector:       0.669s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    86 MiB) max;     59MB (    56 MiB) avg;     92MB (    88 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
