scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8lzyzwm3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5917 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5871 (99%)
  Because of loop head:            36 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       2568 (43%)
  Times precision was {false}:     213 (4%)
  Times result was cached:         792 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2344 (40%)
  Times result was 'false':        430 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         33078
  BDD entailment checks:           524
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          18
Number of abstraction locations:          70
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         20072
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 7.85
Number of irrelevant predicates:          5816 (29%)
Number of preds handled by boolean abs:   11563 (58%)
  Total number of models for allsat:      11555
  Max number of models for allsat:        24
  Avg number of models for allsat:        4.93

Time for post operator:                  5.183s
  Time for path formula creation:        5.007s
Time for strengthen operator:            0.171s
Time for prec operator:                  9.659s
  Time for abstraction:                  9.272s (Max:     0.030s, Count: 5917)
    Boolean abstraction:                 4.205s
    Solving time:                        2.663s (Max:     0.016s)
    Model enumeration time:              0.747s
    Time for BDD construction:           0.351s (Max:     0.012s)
Time for merge operator:                 1.259s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     3.410s

Number of path formula cache hits:   39760 (42%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.563s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3010
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5683 (count: 18947, min: 0, max: 476, avg: 0.30)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.454s
Automaton transfers with branching:                0
Automaton transfer successors:                        87138 (count: 87138, min: 1, max: 1, avg: 1.00) [1 x 87138]

CPA algorithm statistics
------------------------
Number of iterations:            63627
Max size of waitlist:            205
Average size of waitlist:        51
Number of computed successors:   81716
Max successors for one state:    2
Number of times merged:          16277
Number of times stopped:         16603
Number of times breaked:         10

Total time for CPA algorithm:        23.008s (Max:    11.510s)
  Time for choose from waitlist:      0.172s
  Time for precision adjustment:     10.836s
  Time for transfer relation:         7.899s
  Time for merge operator:            2.135s
  Time for stop operator:             0.395s
  Time for adding to reached set:     0.418s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                2033 (count: 10, min: 85, max: 417, avg: 203.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.375s
  Counterexample analysis:                             1.787s (Max:     0.391s, Calls: 10)
    Refinement sat check:                              0.649s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.019s
  ARG update:                                          0.437s

Length of refined path (in blocks):                    1968 (count: 10, min: 56, max: 413, avg: 196.80)
Number of affected states:                             1875 (count: 10, min: 1, max: 412, avg: 187.50)
Length (states) of path with itp 'true':                 83 (count: 10, min: 0, max: 83, avg: 8.30)
Length (states) of path with itp non-trivial itp:      1875 (count: 10, min: 1, max: 412, avg: 187.50)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          33 (count: 10, min: 0, max: 7, avg: 3.30)
Equal non-trivial interpolants along paths:            1832 (count: 10, min: 0, max: 404, avg: 183.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 43274
Max. size of reached set after ref.:  932
Avg. size of reached set before ref.: 6259.30
Avg. size of reached set after ref.:  95.90

Total time for CEGAR algorithm:      25.642s
Time for refinements:                 2.627s
Average time for refinement:          0.262s
Max time for refinement:              0.564s

Code Coverage
-----------------------------
  Function coverage:      0.481
  Visited lines:          606
  Total lines:            1753
  Line coverage:          0.346
  Visited conditions:     308
  Total conditions:       760
  Condition coverage:     0.405

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             3050
  Number of reached locations:   597 (26%)
    Avg states per location:     5
    Max states per location:     40 (at node N2201)
  Number of reached functions:   37 (48%)
  Number of partitions:          3035
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N615 (before lines 835-863), Function cleanup called from node N868, stack depth 4 [33d09547], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        144

Time for analysis setup:          4.136s
  Time for loading CPAs:          0.894s
  Time for loading parser:        0.682s
  Time for CFA construction:      2.373s
    Time for parsing file(s):     0.695s
    Time for AST to CFA:          0.734s
    Time for CFA sanity check:    0.251s
    Time for post-processing:     0.538s
      Time for var class.:        0.288s
Time for Analysis:               25.642s
CPU time for analysis:           25.640s
Total time for CPAchecker:       29.783s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.149s

Time for Garbage Collector:       0.753s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                108MB (   103 MiB) max;     65MB (    62 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
