scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jttsxlxn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23444 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23260 (99%)
  Because of loop head:            136 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       10478 (45%)
  Times precision was {false}:     136 (1%)
  Times result was cached:         11749 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1081 (5%)
  Times result was 'false':        421 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         67263
  BDD entailment checks:           6125
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          37
Number of abstraction locations:          81
Max number of predicates per location:    14
Avg number of predicates per location:    6
Total predicates per abstraction:         66321
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 54.50
Number of irrelevant predicates:          26903 (41%)
Number of preds handled by boolean abs:   3687 (6%)
  Total number of models for allsat:      2982
  Max number of models for allsat:        72
  Avg number of models for allsat:        2.76

Time for post operator:                  2.626s
  Time for path formula creation:        2.417s
Time for strengthen operator:            0.320s
Time for prec operator:                  8.970s
  Time for abstraction:                  8.322s (Max:     0.025s, Count: 23444)
    Boolean abstraction:                 1.956s
    Solving time:                        1.203s (Max:     0.016s)
    Model enumeration time:              0.333s
    Time for BDD construction:           0.238s (Max:     0.013s)
Time for merge operator:                 0.387s
Time for coverage check:                 0.078s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):     1.536s

Number of path formula cache hits:   256797 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.742s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4405
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3891 (count: 24501, min: 0, max: 392, avg: 0.16)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.611s
  Time for transition matches:                         0.263s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       224359 (count: 224359, min: 1, max: 1, avg: 1.00) [1 x 224359]

CPA algorithm statistics
------------------------
Number of iterations:            157906
Max size of waitlist:            78
Average size of waitlist:        27
Number of computed successors:   195175
Max successors for one state:    2
Number of times merged:          30569
Number of times stopped:         34954
Number of times breaked:         48

Total time for CPA algorithm:        21.039s (Max:     1.732s)
  Time for choose from waitlist:      0.185s
  Time for precision adjustment:     10.843s
  Time for transfer relation:         6.393s
  Time for merge operator:            1.159s
  Time for stop operator:             0.592s
  Time for adding to reached set:     0.700s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                4028 (count: 48, min: 63, max: 124, avg: 83.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.337s
  Counterexample analysis:                             3.480s (Max:     0.165s, Calls: 48)
    Refinement sat check:                              1.764s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.152s
  Precision update:                                    0.067s
  ARG update:                                          0.547s

Length of refined path (in blocks):                    3618 (count: 48, min: 42, max: 110, avg: 75.38)
Number of affected states:                             3145 (count: 48, min: 1, max: 109, avg: 65.52)
Length (states) of path with itp 'true':                425 (count: 48, min: 0, max: 59, avg: 8.85)
Length (states) of path with itp non-trivial itp:      3145 (count: 48, min: 1, max: 109, avg: 65.52)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         166 (count: 48, min: 0, max: 9, avg: 3.46)
Equal non-trivial interpolants along paths:            2931 (count: 48, min: 0, max: 103, avg: 61.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 7037
Max. size of reached set after ref.:  1929
Avg. size of reached set before ref.: 3435.31
Avg. size of reached set after ref.:  209.23

Total time for CEGAR algorithm:      25.668s
Time for refinements:                 4.603s
Average time for refinement:          0.095s
Max time for refinement:              0.185s

Code Coverage
-----------------------------
  Function coverage:      0.532
  Visited lines:          586
  Total lines:            1753
  Line coverage:          0.334
  Visited conditions:     272
  Total conditions:       760
  Condition coverage:     0.358

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             4948
  Number of reached locations:   607 (26%)
    Avg states per location:     8
    Max states per location:     90 (at node N1065)
  Number of reached functions:   41 (53%)
  Number of partitions:          4932
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N615 (before lines 835-863), Function cleanup called from node N868, stack depth 4 [254a92bf], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:          4.087s
  Time for loading CPAs:          0.877s
  Time for loading parser:        0.668s
  Time for CFA construction:      2.359s
    Time for parsing file(s):     0.648s
    Time for AST to CFA:          0.707s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.580s
      Time for var class.:        0.329s
Time for Analysis:               25.668s
CPU time for analysis:           25.660s
Total time for CPAchecker:       29.760s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.192s

Time for Garbage Collector:       0.675s (in 70 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     45MB (    43 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
