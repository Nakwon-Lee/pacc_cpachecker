scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6rtuzf7a/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22553 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22374 (99%)
  Because of loop head:            132 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (0%)
  Times precision was empty:       10077 (45%)
  Times precision was {false}:     136 (1%)
  Times result was cached:         11262 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1078 (5%)
  Times result was 'false':        406 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         64737
  BDD entailment checks:           5923
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          37
Number of abstraction locations:          81
Max number of predicates per location:    14
Avg number of predicates per location:    6
Total predicates per abstraction:         63346
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 52.18
Number of irrelevant predicates:          25836 (41%)
Number of preds handled by boolean abs:   3673 (6%)
  Total number of models for allsat:      2930
  Max number of models for allsat:        72
  Avg number of models for allsat:        2.72

Time for post operator:                  2.497s
  Time for path formula creation:        2.317s
Time for strengthen operator:            0.291s
Time for prec operator:                  8.924s
  Time for abstraction:                  8.214s (Max:     0.029s, Count: 22553)
    Boolean abstraction:                 1.915s
    Solving time:                        1.236s (Max:     0.016s)
    Model enumeration time:              0.337s
    Time for BDD construction:           0.205s (Max:     0.009s)
Time for merge operator:                 0.401s
Time for coverage check:                 0.086s
  Time for BDD entailment checks:        0.068s
Total time for SMT solver (w/o itp):     1.574s

Number of path formula cache hits:   247637 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.646s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4403
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3869 (count: 23872, min: 0, max: 442, avg: 0.16)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.700s
  Time for transition matches:                         0.359s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       215761 (count: 215761, min: 1, max: 1, avg: 1.00) [1 x 215761]

CPA algorithm statistics
------------------------
Number of iterations:            151892
Max size of waitlist:            72
Average size of waitlist:        27
Number of computed successors:   187739
Max successors for one state:    2
Number of times merged:          29407
Number of times stopped:         33624
Number of times breaked:         47

Total time for CPA algorithm:        20.767s (Max:     1.839s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:     10.779s
  Time for transfer relation:         6.421s
  Time for merge operator:            1.271s
  Time for stop operator:             0.443s
  Time for adding to reached set:     0.460s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                3930 (count: 47, min: 63, max: 124, avg: 83.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.316s
  Counterexample analysis:                             3.456s (Max:     0.159s, Calls: 47)
    Refinement sat check:                              1.767s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.094s
  Precision update:                                    0.084s
  ARG update:                                          0.559s

Length of refined path (in blocks):                    3524 (count: 47, min: 42, max: 110, avg: 74.98)
Number of affected states:                             3052 (count: 47, min: 1, max: 109, avg: 64.94)
Length (states) of path with itp 'true':                425 (count: 47, min: 0, max: 59, avg: 9.04)
Length (states) of path with itp non-trivial itp:      3052 (count: 47, min: 1, max: 109, avg: 64.94)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         164 (count: 47, min: 0, max: 9, avg: 3.49)
Equal non-trivial interpolants along paths:            2841 (count: 47, min: 0, max: 103, avg: 60.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 6227
Max. size of reached set after ref.:  1929
Avg. size of reached set before ref.: 3361.66
Avg. size of reached set after ref.:  213.62

Total time for CEGAR algorithm:      25.401s
Time for refinements:                 4.620s
Average time for refinement:          0.098s
Max time for refinement:              0.208s

Code Coverage
-----------------------------
  Function coverage:      0.532
  Visited lines:          586
  Total lines:            1753
  Line coverage:          0.334
  Visited conditions:     272
  Total conditions:       760
  Condition coverage:     0.358

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             5751
  Number of reached locations:   607 (26%)
    Avg states per location:     9
    Max states per location:     90 (at node N828)
  Number of reached functions:   41 (53%)
  Number of partitions:          5732
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N615 (before lines 835-863), Function cleanup called from node N868, stack depth 4 [2c1040e], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        55

Time for analysis setup:          4.375s
  Time for loading CPAs:          0.858s
  Time for loading parser:        0.699s
  Time for CFA construction:      2.620s
    Time for parsing file(s):     0.747s
    Time for AST to CFA:          0.788s
    Time for CFA sanity check:    0.274s
    Time for post-processing:     0.623s
      Time for var class.:        0.346s
Time for Analysis:               25.401s
CPU time for analysis:           25.400s
Total time for CPAchecker:       29.781s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.259s

Time for Garbage Collector:       0.699s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     43MB (    41 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
