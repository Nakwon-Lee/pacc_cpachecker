scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nx8jwte8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4733 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4728 (100%)
  Because of loop head:            4 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (0%)
  Times precision was empty:       4545 (96%)
  Times precision was {false}:     108 (2%)
  Times result was cached:         55 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      25 (1%)
  Times result was 'false':        1 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         67886
  BDD entailment checks:           590
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          2
Number of abstraction locations:          37
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         188
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.41
Number of irrelevant predicates:          146 (78%)
Number of preds handled by boolean abs:   25 (13%)
  Total number of models for allsat:      25
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  9.103s
  Time for path formula creation:        8.844s
Time for strengthen operator:            0.384s
Time for prec operator:                  1.200s
  Time for abstraction:                  0.675s (Max:     0.035s, Count: 4733)
    Boolean abstraction:                 0.080s
    Solving time:                        0.128s (Max:     0.012s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.011s (Max:     0.009s)
Time for merge operator:                 2.220s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.133s

Number of path formula cache hits:   48536 (30%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.447s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          53 (count: 5830, min: 0, max: 53, avg: 0.01)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.639s
  Time for transition matches:                         0.296s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       152038 (count: 152038, min: 1, max: 1, avg: 1.00) [1 x 152038]

CPA algorithm statistics
------------------------
Number of iterations:            114662
Max size of waitlist:            206
Average size of waitlist:        120
Number of computed successors:   149161
Max successors for one state:    2
Number of times merged:          33648
Number of times stopped:         34237
Number of times breaked:         1

Total time for CPA algorithm:        24.435s (Max:    16.541s)
  Time for choose from waitlist:      0.301s
  Time for precision adjustment:      3.812s
  Time for transfer relation:        13.735s
  Time for merge operator:            3.767s
  Time for stop operator:             0.655s
  Time for adding to reached set:     0.633s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                  79 (count: 1, min: 79, max: 79, avg: 79.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.699s
  Counterexample analysis:                             0.092s (Max:     0.092s, Calls: 1)
    Refinement sat check:                              0.064s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.014s
  ARG update:                                          0.567s

Length of refined path (in blocks):                      43 (count: 1, min: 43, max: 43, avg: 43.00)
Number of affected states:                               42 (count: 1, min: 42, max: 42, avg: 42.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        42 (count: 1, min: 42, max: 42, avg: 42.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              41 (count: 1, min: 41, max: 41, avg: 41.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 64814
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 64814.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.316s
Time for refinements:                 0.873s
Average time for refinement:          0.873s
Max time for refinement:              0.873s

Code Coverage
-----------------------------
  Function coverage:      0.532
  Visited lines:          792
  Total lines:            1753
  Line coverage:          0.452
  Visited conditions:     448
  Total conditions:       760
  Condition coverage:     0.589

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             50112
  Number of reached locations:   912 (40%)
    Avg states per location:     54
    Max states per location:     195 (at node N2232)
  Number of reached functions:   41 (53%)
  Number of partitions:          50111
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1805 (before line 2334), Function timeShift called from node N612, stack depth 5 [1ca37849], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        165

Time for analysis setup:          4.431s
  Time for loading CPAs:          0.843s
  Time for loading parser:        0.738s
  Time for CFA construction:      2.630s
    Time for parsing file(s):     0.706s
    Time for AST to CFA:          0.798s
    Time for CFA sanity check:    0.272s
    Time for post-processing:     0.656s
      Time for var class.:        0.351s
Time for Analysis:               25.316s
CPU time for analysis:           25.320s
Total time for CPAchecker:       29.752s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.798s

Time for Garbage Collector:       1.829s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                175MB (   166 MiB) max;     78MB (    75 MiB) avg;    193MB (   184 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           209MB (   199 MiB) max;    152MB (   145 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
