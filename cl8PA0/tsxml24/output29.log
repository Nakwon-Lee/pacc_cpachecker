scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uhns7c5l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4380 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4367 (100%)
  Because of loop head:            6 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       3155 (72%)
  Times precision was {false}:     125 (3%)
  Times result was cached:         854 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      246 (6%)
  Times result was 'false':        40 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         80718
  BDD entailment checks:           374
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          25
Number of abstraction locations:          69
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         2340
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 6.31
Number of irrelevant predicates:          1457 (62%)
Number of preds handled by boolean abs:   581 (25%)
  Total number of models for allsat:      301
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.22

Time for post operator:                  7.819s
  Time for path formula creation:        7.547s
Time for strengthen operator:            0.390s
Time for prec operator:                  2.926s
  Time for abstraction:                  2.297s (Max:     0.031s, Count: 4380)
    Boolean abstraction:                 0.561s
    Solving time:                        0.528s (Max:     0.015s)
    Model enumeration time:              0.041s
    Time for BDD construction:           0.097s (Max:     0.012s)
Time for merge operator:                 1.810s
Time for coverage check:                 0.064s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.569s

Number of path formula cache hits:   147686 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.345s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               388
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         673 (count: 5807, min: 0, max: 275, avg: 0.12)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.743s
  Time for transition matches:                         0.250s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       178089 (count: 178089, min: 1, max: 1, avg: 1.00) [1 x 178089]

CPA algorithm statistics
------------------------
Number of iterations:            133919
Max size of waitlist:            116
Average size of waitlist:        63
Number of computed successors:   175116
Max successors for one state:    2
Number of times merged:          40172
Number of times stopped:         40514
Number of times breaked:         7

Total time for CPA algorithm:        24.515s (Max:     8.821s)
  Time for choose from waitlist:      0.335s
  Time for precision adjustment:      5.164s
  Time for transfer relation:        12.396s
  Time for merge operator:            3.495s
  Time for stop operator:             0.599s
  Time for adding to reached set:     0.860s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 547 (count: 7, min: 71, max: 91, avg: 78.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.432s
  Counterexample analysis:                             0.645s (Max:     0.149s, Calls: 7)
    Refinement sat check:                              0.392s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.008s
  ARG update:                                          0.679s

Length of refined path (in blocks):                     430 (count: 7, min: 42, max: 79, avg: 61.43)
Number of affected states:                              311 (count: 7, min: 1, max: 78, avg: 44.43)
Length (states) of path with itp 'true':                112 (count: 7, min: 0, max: 71, avg: 16.00)
Length (states) of path with itp non-trivial itp:       311 (count: 7, min: 1, max: 78, avg: 44.43)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          17 (count: 7, min: 0, max: 11, avg: 2.43)
Equal non-trivial interpolants along paths:             287 (count: 7, min: 0, max: 73, avg: 41.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 23107
Max. size of reached set after ref.:  22868
Avg. size of reached set before ref.: 22184.43
Avg. size of reached set after ref.:  3354.14

Total time for CEGAR algorithm:      26.259s
Time for refinements:                 1.715s
Average time for refinement:          0.245s
Max time for refinement:              0.379s

Code Coverage
-----------------------------
  Function coverage:      0.390
  Visited lines:          547
  Total lines:            1753
  Line coverage:          0.312
  Visited conditions:     314
  Total conditions:       760
  Condition coverage:     0.413

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             2751
  Number of reached locations:   593 (26%)
    Avg states per location:     4
    Max states per location:     15 (at node N828)
  Number of reached functions:   30 (39%)
  Number of partitions:          2748
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1690 (before line 2167), Function stopRequestedAtCurrentFloor__wrappee__twothirdsfull called from node N1702, stack depth 7 [5b8f8c3f], stack [main, runTest, test, cleanup, timeShift, stopRequestedAtCurrentFloor, stopRequestedAtCurrentFloor__wrappee__twothirdsfull]])
  Number of target states:       0
  Size of final wait list        34

Time for analysis setup:          3.992s
  Time for loading CPAs:          0.744s
  Time for loading parser:        0.687s
  Time for CFA construction:      2.359s
    Time for parsing file(s):     0.681s
    Time for AST to CFA:          0.670s
    Time for CFA sanity check:    0.257s
    Time for post-processing:     0.554s
      Time for var class.:        0.294s
Time for Analysis:               26.259s
CPU time for analysis:           26.260s
Total time for CPAchecker:       30.256s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.151s

Time for Garbage Collector:       1.547s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   113 MiB) max;     65MB (    62 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
