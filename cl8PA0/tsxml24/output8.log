scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_25n7s3nd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7976 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7965 (100%)
  Because of loop head:            7 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       6707 (84%)
  Times precision was {false}:     114 (1%)
  Times result was cached:         1102 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (1%)
  Times result was 'false':        285 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         90883
  BDD entailment checks:           1047
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          3
Number of abstraction locations:          53
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1269
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.60
Number of irrelevant predicates:          1008 (79%)
Number of preds handled by boolean abs:   53 (4%)
  Total number of models for allsat:      54
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  6.908s
  Time for path formula creation:        6.568s
Time for strengthen operator:            0.424s
Time for prec operator:                  2.181s
  Time for abstraction:                  1.408s (Max:     0.030s, Count: 7976)
    Boolean abstraction:                 0.138s
    Solving time:                        0.212s (Max:     0.017s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.019s (Max:     0.008s)
Time for merge operator:                 1.541s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     0.219s

Number of path formula cache hits:   208652 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.426s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         110 (count: 8669, min: 0, max: 61, avg: 0.01)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.859s
  Time for transition matches:                         0.354s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       208052 (count: 208052, min: 1, max: 1, avg: 1.00) [1 x 208052]

CPA algorithm statistics
------------------------
Number of iterations:            156322
Max size of waitlist:            141
Average size of waitlist:        85
Number of computed successors:   203024
Max successors for one state:    2
Number of times merged:          44918
Number of times stopped:         45897
Number of times breaked:         4

Total time for CPA algorithm:        24.834s (Max:    10.405s)
  Time for choose from waitlist:      0.335s
  Time for precision adjustment:      5.096s
  Time for transfer relation:        12.481s
  Time for merge operator:            3.168s
  Time for stop operator:             0.752s
  Time for adding to reached set:     0.757s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                 258 (count: 4, min: 63, max: 65, avg: 64.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.983s
  Counterexample analysis:                             0.216s (Max:     0.064s, Calls: 4)
    Refinement sat check:                              0.108s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.014s
  ARG update:                                          0.678s

Length of refined path (in blocks):                     242 (count: 4, min: 59, max: 61, avg: 60.50)
Number of affected states:                              238 (count: 4, min: 58, max: 60, avg: 59.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       238 (count: 4, min: 58, max: 60, avg: 59.50)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 4, min: 1, max: 1, avg: 1.00)
Equal non-trivial interpolants along paths:             230 (count: 4, min: 56, max: 58, avg: 57.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 36093
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 34186.75
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      26.105s
Time for refinements:                 1.271s
Average time for refinement:          0.317s
Max time for refinement:              0.468s

Code Coverage
-----------------------------
  Function coverage:      0.558
  Visited lines:          940
  Total lines:            1753
  Line coverage:          0.536
  Visited conditions:     550
  Total conditions:       760
  Condition coverage:     0.724

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             20108
  Number of reached locations:   1041 (45%)
    Avg states per location:     19
    Max states per location:     72 (at node N828)
  Number of reached functions:   43 (56%)
  Number of partitions:          20105
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1805 (before line 2334), Function timeShift called from node N612, stack depth 5 [6186baac], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        90

Time for analysis setup:          4.144s
  Time for loading CPAs:          0.802s
  Time for loading parser:        0.713s
  Time for CFA construction:      2.399s
    Time for parsing file(s):     0.696s
    Time for AST to CFA:          0.711s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.583s
      Time for var class.:        0.345s
Time for Analysis:               26.105s
CPU time for analysis:           26.110s
Total time for CPAchecker:       30.253s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.443s

Time for Garbage Collector:       1.707s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   120 MiB) max;     66MB (    63 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
