scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sjp4j9r1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7718 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7714 (100%)
  Because of loop head:            3 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (0%)
  Times precision was empty:       7306 (95%)
  Times precision was {false}:     143 (2%)
  Times result was cached:         236 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      33 (0%)
  Times result was 'false':        90 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         89957
  BDD entailment checks:           1221
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          3
Number of abstraction locations:          48
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         412
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.34
Number of irrelevant predicates:          361 (88%)
Number of preds handled by boolean abs:   33 (8%)
  Total number of models for allsat:      34
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  9.589s
  Time for path formula creation:        9.212s
Time for strengthen operator:            0.355s
Time for prec operator:                  1.491s
  Time for abstraction:                  0.824s (Max:     0.041s, Count: 7718)
    Boolean abstraction:                 0.071s
    Solving time:                        0.146s (Max:     0.013s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.012s (Max:     0.008s)
Time for merge operator:                 2.304s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     0.147s

Number of path formula cache hits:   92406 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.703s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          69 (count: 9475, min: 0, max: 55, avg: 0.01)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.705s
  Time for transition matches:                         0.316s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       205060 (count: 205060, min: 1, max: 1, avg: 1.00) [1 x 205060]

CPA algorithm statistics
------------------------
Number of iterations:            154657
Max size of waitlist:            112
Average size of waitlist:        62
Number of computed successors:   200427
Max successors for one state:    2
Number of times merged:          44368
Number of times stopped:         45587
Number of times breaked:         1

Total time for CPA algorithm:        24.610s (Max:    17.786s)
  Time for choose from waitlist:      0.228s
  Time for precision adjustment:      4.298s
  Time for transfer relation:        13.843s
  Time for merge operator:            3.535s
  Time for stop operator:             0.639s
  Time for adding to reached set:     0.641s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                  63 (count: 1, min: 63, max: 63, avg: 63.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.736s
  Counterexample analysis:                             0.069s (Max:     0.069s, Calls: 1)
    Refinement sat check:                              0.038s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.002s
  ARG update:                                          0.634s

Length of refined path (in blocks):                      59 (count: 1, min: 59, max: 59, avg: 59.00)
Number of affected states:                               58 (count: 1, min: 58, max: 58, avg: 58.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        58 (count: 1, min: 58, max: 58, avg: 58.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 1, min: 1, max: 1, avg: 1.00)
Equal non-trivial interpolants along paths:              56 (count: 1, min: 56, max: 56, avg: 56.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 87366
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 87366.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.563s
Time for refinements:                 0.953s
Average time for refinement:          0.953s
Max time for refinement:              0.953s

Code Coverage
-----------------------------
  Function coverage:      0.610
  Visited lines:          1062
  Total lines:            1753
  Line coverage:          0.606
  Visited conditions:     604
  Total conditions:       760
  Condition coverage:     0.795

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             67388
  Number of reached locations:   1176 (51%)
    Avg states per location:     57
    Max states per location:     226 (at node N2283)
  Number of reached functions:   47 (61%)
  Number of partitions:          67387
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1805 (before line 2334), Function timeShift called from node N612, stack depth 5 [62bd4eaf], stack [main, runTest, test, cleanup, timeShift]])
  Number of target states:       0
  Size of final wait list        89

Time for analysis setup:          4.157s
  Time for loading CPAs:          0.829s
  Time for loading parser:        0.704s
  Time for CFA construction:      2.456s
    Time for parsing file(s):     0.759s
    Time for AST to CFA:          0.699s
    Time for CFA sanity check:    0.227s
    Time for post-processing:     0.609s
      Time for var class.:        0.332s
Time for Analysis:               25.563s
CPU time for analysis:           25.570s
Total time for CPAchecker:       29.725s
Total CPU time for CPAchecker:   29.720s
Time for statistics:              0.982s

Time for Garbage Collector:       2.284s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                192MB (   183 MiB) max;     83MB (    79 MiB) avg;    220MB (   210 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           243MB (   232 MiB) max;    154MB (   147 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
