scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v3hi7jud/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5401 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5360 (99%)
  Because of loop head:            31 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       2503 (46%)
  Times precision was {false}:     198 (4%)
  Times result was cached:         711 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1989 (37%)
  Times result was 'false':        373 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         31916
  BDD entailment checks:           488
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          17
Number of abstraction locations:          70
Max number of predicates per location:    10
Avg number of predicates per location:    6
Total predicates per abstraction:         16185
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 7.40
Number of irrelevant predicates:          5050 (31%)
Number of preds handled by boolean abs:   8947 (55%)
  Total number of models for allsat:      9522
  Max number of models for allsat:        24
  Avg number of models for allsat:        4.79

Time for post operator:                  5.601s
  Time for path formula creation:        5.441s
Time for strengthen operator:            0.177s
Time for prec operator:                  9.898s
  Time for abstraction:                  9.434s (Max:     0.029s, Count: 5401)
    Boolean abstraction:                 3.975s
    Solving time:                        2.529s (Max:     0.017s)
    Model enumeration time:              0.690s
    Time for BDD construction:           0.363s (Max:     0.013s)
Time for merge operator:                 1.147s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     3.219s

Number of path formula cache hits:   34469 (38%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.015s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2403
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4815 (count: 16510, min: 0, max: 488, avg: 0.29)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.391s
Automaton transfers with branching:                0
Automaton transfer successors:                        82869 (count: 82869, min: 1, max: 1, avg: 1.00) [1 x 82869]

CPA algorithm statistics
------------------------
Number of iterations:            60723
Max size of waitlist:            205
Average size of waitlist:        51
Number of computed successors:   78049
Max successors for one state:    2
Number of times merged:          15714
Number of times stopped:         16040
Number of times breaked:         10

Total time for CPA algorithm:        23.521s (Max:    11.547s)
  Time for choose from waitlist:      0.185s
  Time for precision adjustment:     11.264s
  Time for transfer relation:         8.164s
  Time for merge operator:            2.008s
  Time for stop operator:             0.350s
  Time for adding to reached set:     0.492s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                2033 (count: 10, min: 85, max: 417, avg: 203.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.265s
  Counterexample analysis:                             1.602s (Max:     0.360s, Calls: 10)
    Refinement sat check:                              0.726s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.017s
  ARG update:                                          0.495s

Length of refined path (in blocks):                    1555 (count: 9, min: 56, max: 358, avg: 172.78)
Number of affected states:                             1463 (count: 9, min: 1, max: 357, avg: 162.56)
Length (states) of path with itp 'true':                 83 (count: 9, min: 0, max: 83, avg: 9.22)
Length (states) of path with itp non-trivial itp:      1463 (count: 9, min: 1, max: 357, avg: 162.56)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          26 (count: 9, min: 0, max: 6, avg: 2.89)
Equal non-trivial interpolants along paths:            1428 (count: 9, min: 0, max: 350, avg: 158.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 43274
Max. size of reached set after ref.:  932
Avg. size of reached set before ref.: 6259.30
Avg. size of reached set after ref.:  106.22

Total time for CEGAR algorithm:      26.016s
Time for refinements:                 2.487s
Average time for refinement:          0.248s
Max time for refinement:              0.582s

Code Coverage
-----------------------------
  Function coverage:      0.506
  Visited lines:          621
  Total lines:            1753
  Line coverage:          0.354
  Visited conditions:     318
  Total conditions:       760
  Condition coverage:     0.418

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             4027
  Number of reached locations:   621 (27%)
    Avg states per location:     6
    Max states per location:     51 (at node N2201)
  Number of reached functions:   39 (51%)
  Number of partitions:          4006
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N615 (before lines 835-863), Function cleanup called from node N868, stack depth 4 [180cae29], stack [main, runTest, test, cleanup]])
  Number of target states:       1
  Size of final wait list        204

Time for analysis setup:          4.186s
  Time for loading CPAs:          0.854s
  Time for loading parser:        0.654s
  Time for CFA construction:      2.451s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.664s
    Time for CFA sanity check:    0.257s
    Time for post-processing:     0.665s
      Time for var class.:        0.366s
Time for Analysis:               26.016s
CPU time for analysis:           26.020s
Total time for CPAchecker:       30.211s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.244s

Time for Garbage Collector:       0.854s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                107MB (   102 MiB) max;     64MB (    61 MiB) avg;    110MB (   105 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
