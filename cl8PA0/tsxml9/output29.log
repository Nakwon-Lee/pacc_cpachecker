scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p01xg7h2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11620 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9142 (79%)
  Because of loop head:            2394 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (1%)
  Times precision was empty:       4415 (38%)
  Times precision was {false}:     525 (5%)
  Times result was cached:         5870 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      810 (7%)
  Times result was 'false':        1294 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         46536
  BDD entailment checks:           3022
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          18
Number of abstraction locations:          72
Max number of predicates per location:    10
Avg number of predicates per location:    6
Total predicates per abstraction:         32244
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 24.15
Number of irrelevant predicates:          16081 (50%)
Number of preds handled by boolean abs:   3266 (10%)
  Total number of models for allsat:      3441
  Max number of models for allsat:        32
  Avg number of models for allsat:        4.25

Time for post operator:                  4.746s
  Time for path formula creation:        4.581s
Time for strengthen operator:            0.264s
Time for prec operator:                  6.668s
  Time for abstraction:                  6.130s (Max:     0.028s, Count: 11620)
    Boolean abstraction:                 1.673s
    Solving time:                        1.156s (Max:     0.014s)
    Model enumeration time:              0.473s
    Time for BDD construction:           0.190s (Max:     0.014s)
Time for merge operator:                 0.764s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     1.629s

Number of path formula cache hits:   113802 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.828s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1454
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2183 (count: 15474, min: 0, max: 218, avg: 0.14)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.636s
  Time for transition matches:                         0.322s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       143682 (count: 143682, min: 1, max: 1, avg: 1.00) [1 x 143682]

CPA algorithm statistics
------------------------
Number of iterations:            105318
Max size of waitlist:            123
Average size of waitlist:        40
Number of computed successors:   131549
Max successors for one state:    2
Number of times merged:          21757
Number of times stopped:         24208
Number of times breaked:         84

Total time for CPA algorithm:        20.387s (Max:     4.133s)
  Time for choose from waitlist:      0.231s
  Time for precision adjustment:      8.305s
  Time for transfer relation:         8.196s
  Time for merge operator:            1.498s
  Time for stop operator:             0.509s
  Time for adding to reached set:     0.451s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                5879 (count: 84, min: 43, max: 109, avg: 69.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.065s
  Counterexample analysis:                             3.258s (Max:     0.080s, Calls: 84)
    Refinement sat check:                              2.086s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.107s
  Precision update:                                    0.100s
  ARG update:                                          0.480s

Length of refined path (in blocks):                    4992 (count: 83, min: 35, max: 99, avg: 60.14)
Number of affected states:                              948 (count: 83, min: 1, max: 81, avg: 11.42)
Length (states) of path with itp 'true':               3961 (count: 83, min: 0, max: 97, avg: 47.72)
Length (states) of path with itp non-trivial itp:       948 (count: 83, min: 1, max: 81, avg: 11.42)
Length (states) of path with itp 'false':                83 (count: 83, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          28 (count: 83, min: 0, max: 1, avg: 0.34)
Equal non-trivial interpolants along paths:             837 (count: 83, min: 0, max: 79, avg: 10.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     83
Number of failed refinements:         0
Max. size of reached set before ref.: 20933
Max. size of reached set after ref.:  3525
Avg. size of reached set before ref.: 3023.86
Avg. size of reached set after ref.:  1782.60

Total time for CEGAR algorithm:      25.149s
Time for refinements:                 4.523s
Average time for refinement:          0.053s
Max time for refinement:              0.222s

Code Coverage
-----------------------------
  Function coverage:      0.494
  Visited lines:          518
  Total lines:            1721
  Line coverage:          0.301
  Visited conditions:     236
  Total conditions:       734
  Condition coverage:     0.322

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             3789
  Number of reached locations:   547 (24%)
    Avg states per location:     6
    Max states per location:     59 (at node N1437)
  Number of reached functions:   38 (49%)
  Number of partitions:          3774
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1694 (before line 2215), Function threeTS called from node N304, stack depth 4 [7d2db37c], stack [main, runTest, test, threeTS]])
  Number of target states:       1
  Size of final wait list        56

Time for analysis setup:          4.629s
  Time for loading CPAs:          1.180s
  Time for loading parser:        0.694s
  Time for CFA construction:      2.524s
    Time for parsing file(s):     0.633s
    Time for AST to CFA:          0.724s
    Time for CFA sanity check:    0.264s
    Time for post-processing:     0.754s
      Time for var class.:        0.423s
Time for Analysis:               25.149s
CPU time for analysis:           25.150s
Total time for CPAchecker:       29.782s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.148s

Time for Garbage Collector:       0.798s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    90 MiB) max;     51MB (    48 MiB) avg;     99MB (    95 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
