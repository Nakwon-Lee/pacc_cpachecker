scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_371jxdzk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8196 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7395 (90%)
  Because of loop head:            765 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       3848 (47%)
  Times precision was {false}:     276 (3%)
  Times result was cached:         3514 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      558 (7%)
  Times result was 'false':        578 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         99849
  BDD entailment checks:           1099
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          22
Number of abstraction locations:          83
Max number of predicates per location:    12
Avg number of predicates per location:    6
Total predicates per abstraction:         21387
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 25.64
Number of irrelevant predicates:          8856 (41%)
Number of preds handled by boolean abs:   2365 (11%)
  Total number of models for allsat:      1899
  Max number of models for allsat:        32
  Avg number of models for allsat:        3.40

Time for post operator:                  6.888s
  Time for path formula creation:        6.671s
Time for strengthen operator:            0.305s
Time for prec operator:                  5.026s
  Time for abstraction:                  4.514s (Max:     0.025s, Count: 8196)
    Boolean abstraction:                 1.187s
    Solving time:                        0.861s (Max:     0.015s)
    Model enumeration time:              0.239s
    Time for BDD construction:           0.176s (Max:     0.012s)
Time for merge operator:                 1.505s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     1.100s

Number of path formula cache hits:   208897 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.816s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1408
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1876 (count: 10107, min: 0, max: 309, avg: 0.19)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.633s
  Time for transition matches:                         0.285s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       233505 (count: 233505, min: 1, max: 1, avg: 1.00) [1 x 233505]

CPA algorithm statistics
------------------------
Number of iterations:            174730
Max size of waitlist:            123
Average size of waitlist:        63
Number of computed successors:   226440
Max successors for one state:    2
Number of times merged:          49375
Number of times stopped:         50289
Number of times breaked:         36

Total time for CPA algorithm:        23.511s (Max:     6.562s)
  Time for choose from waitlist:      0.236s
  Time for precision adjustment:      7.379s
  Time for transfer relation:        10.730s
  Time for merge operator:            2.651s
  Time for stop operator:             0.535s
  Time for adding to reached set:     0.585s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                2845 (count: 36, min: 43, max: 109, avg: 79.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.465s
  Counterexample analysis:                             1.673s (Max:     0.100s, Calls: 36)
    Refinement sat check:                              0.999s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.043s
  ARG update:                                          0.620s

Length of refined path (in blocks):                    2297 (count: 36, min: 36, max: 86, avg: 63.81)
Number of affected states:                              931 (count: 36, min: 1, max: 81, avg: 25.86)
Length (states) of path with itp 'true':               1330 (count: 36, min: 0, max: 74, avg: 36.94)
Length (states) of path with itp non-trivial itp:       931 (count: 36, min: 1, max: 81, avg: 25.86)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          27 (count: 36, min: 0, max: 1, avg: 0.75)
Equal non-trivial interpolants along paths:             868 (count: 36, min: 0, max: 79, avg: 24.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 23801
Max. size of reached set after ref.:  1351
Avg. size of reached set before ref.: 4802.94
Avg. size of reached set after ref.:  570.92

Total time for CEGAR algorithm:      26.320s
Time for refinements:                 2.772s
Average time for refinement:          0.077s
Max time for refinement:              0.244s

Code Coverage
-----------------------------
  Function coverage:      0.506
  Visited lines:          701
  Total lines:            1721
  Line coverage:          0.407
  Visited conditions:     394
  Total conditions:       734
  Condition coverage:     0.537

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             23221
  Number of reached locations:   802 (36%)
    Avg states per location:     28
    Max states per location:     97 (at node N1992)
  Number of reached functions:   39 (51%)
  Number of partitions:          23216
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1219 (before line 1559), Function timeShift__wrappee__executivefloor called from node N1307, stack depth 6 [72bf1419], stack [main, runTest, test, threeTS, timeShift, timeShift__wrappee__executivefloor]])
  Number of target states:       0
  Size of final wait list        108

Time for analysis setup:          3.982s
  Time for loading CPAs:          0.797s
  Time for loading parser:        0.724s
  Time for CFA construction:      2.291s
    Time for parsing file(s):     0.650s
    Time for AST to CFA:          0.717s
    Time for CFA sanity check:    0.248s
    Time for post-processing:     0.512s
      Time for var class.:        0.282s
Time for Analysis:               26.320s
CPU time for analysis:           26.320s
Total time for CPAchecker:       30.306s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.556s

Time for Garbage Collector:       1.525s (in 76 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     59MB (    56 MiB) avg;    130MB (   123 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
