scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j44qmr2w/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12561 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11225 (89%)
  Because of loop head:            1252 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (1%)
  Times precision was empty:       1901 (15%)
  Times precision was {false}:     248 (2%)
  Times result was cached:         8162 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2250 (18%)
  Times result was 'false':        1422 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         22522
  BDD entailment checks:           2034
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          21
Number of abstraction locations:          90
Max number of predicates per location:    12
Avg number of predicates per location:    8
Total predicates per abstraction:         70944
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 28.40
Number of irrelevant predicates:          35455 (50%)
Number of preds handled by boolean abs:   10021 (14%)
  Total number of models for allsat:      3529
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.57

Time for post operator:                  2.355s
  Time for path formula creation:        2.220s
Time for strengthen operator:            0.182s
Time for prec operator:                 10.329s
  Time for abstraction:                  9.930s (Max:     0.033s, Count: 12561)
    Boolean abstraction:                 3.076s
    Solving time:                        2.184s (Max:     0.014s)
    Model enumeration time:              0.356s
    Time for BDD construction:           0.217s (Max:     0.012s)
Time for merge operator:                 0.193s
Time for coverage check:                 0.064s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):     2.540s

Number of path formula cache hits:   85477 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.082s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2076
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5679 (count: 19651, min: 0, max: 369, avg: 0.29)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.520s
  Time for transition matches:                         0.172s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                        93631 (count: 93631, min: 1, max: 1, avg: 1.00) [1 x 93631]

CPA algorithm statistics
------------------------
Number of iterations:            66555
Max size of waitlist:            159
Average size of waitlist:        35
Number of computed successors:   81339
Max successors for one state:    2
Number of times merged:          10244
Number of times stopped:         11300
Number of times breaked:         84

Total time for CPA algorithm:        17.956s (Max:     1.147s)
  Time for choose from waitlist:      0.110s
  Time for precision adjustment:     11.364s
  Time for transfer relation:         4.616s
  Time for merge operator:            0.545s
  Time for stop operator:             0.276s
  Time for adding to reached set:     0.242s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):               12321 (count: 84, min: 102, max: 383, avg: 146.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.634s
  Counterexample analysis:                             6.941s (Max:     0.404s, Calls: 84)
    Refinement sat check:                              3.412s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.110s
  Precision update:                                    0.082s
  ARG update:                                          0.282s

Length of refined path (in blocks):                    8609 (count: 84, min: 39, max: 335, avg: 102.49)
Number of affected states:                             2869 (count: 84, min: 1, max: 334, avg: 34.15)
Length (states) of path with itp 'true':               5656 (count: 84, min: 0, max: 308, avg: 67.33)
Length (states) of path with itp non-trivial itp:      2869 (count: 84, min: 1, max: 334, avg: 34.15)
Length (states) of path with itp 'false':                84 (count: 84, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 84, min: 0, max: 3, avg: 0.17)
Equal non-trivial interpolants along paths:            2771 (count: 84, min: 0, max: 332, avg: 32.99)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 4215
Max. size of reached set after ref.:  3525
Avg. size of reached set before ref.: 1612.63
Avg. size of reached set after ref.:  837.71

Total time for CEGAR algorithm:      26.139s
Time for refinements:                 8.088s
Average time for refinement:          0.096s
Max time for refinement:              0.447s

Code Coverage
-----------------------------
  Function coverage:      0.532
  Visited lines:          649
  Total lines:            1721
  Line coverage:          0.377
  Visited conditions:     318
  Total conditions:       734
  Condition coverage:     0.433

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             3525
  Number of reached locations:   659 (29%)
    Avg states per location:     5
    Max states per location:     31 (at node N1960)
  Number of reached functions:   41 (53%)
  Number of partitions:          3519
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1309 (before line 1710), Function timeShift called from node N1692, stack depth 5 [15752ae9], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        129

Time for analysis setup:          4.138s
  Time for loading CPAs:          0.738s
  Time for loading parser:        0.721s
  Time for CFA construction:      2.463s
    Time for parsing file(s):     0.722s
    Time for AST to CFA:          0.704s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.603s
      Time for var class.:        0.339s
Time for Analysis:               26.139s
CPU time for analysis:           26.130s
Total time for CPAchecker:       30.282s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.160s

Time for Garbage Collector:       0.500s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     45MB (    43 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
