scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tsgyp3k2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            33332 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  32766 (98%)
  Because of loop head:            539 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       24148 (72%)
  Times precision was {false}:     165 (0%)
  Times result was cached:         8522 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      497 (1%)
  Times result was 'false':        102 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         108524
  BDD entailment checks:           7440
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          8
Number of abstraction locations:          66
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         13886
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 20.98
Number of irrelevant predicates:          8896 (64%)
Number of preds handled by boolean abs:   817 (6%)
  Total number of models for allsat:      598
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.20

Time for post operator:                  4.140s
  Time for path formula creation:        3.826s
Time for strengthen operator:            0.551s
Time for prec operator:                  4.373s
  Time for abstraction:                  3.625s (Max:     0.035s, Count: 33332)
    Boolean abstraction:                 0.716s
    Solving time:                        0.584s (Max:     0.013s)
    Model enumeration time:              0.050s
    Time for BDD construction:           0.056s (Max:     0.007s)
Time for merge operator:                 0.443s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     0.634s

Number of path formula cache hits:   404899 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.681s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               268
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1085 (count: 35459, min: 0, max: 108, avg: 0.03)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.795s
  Time for transition matches:                         0.387s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       355637 (count: 355637, min: 1, max: 1, avg: 1.00) [1 x 355637]

CPA algorithm statistics
------------------------
Number of iterations:            250244
Max size of waitlist:            295
Average size of waitlist:        141
Number of computed successors:   310301
Max successors for one state:    2
Number of times merged:          50542
Number of times stopped:         56875
Number of times breaked:         27

Total time for CPA algorithm:        22.415s (Max:     4.428s)
  Time for choose from waitlist:      0.404s
  Time for precision adjustment:      7.500s
  Time for transfer relation:         9.877s
  Time for merge operator:            1.592s
  Time for stop operator:             0.608s
  Time for adding to reached set:     0.801s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                1794 (count: 27, min: 43, max: 91, avg: 66.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.190s
  Counterexample analysis:                             1.028s (Max:     0.058s, Calls: 27)
    Refinement sat check:                              0.648s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.036s
  ARG update:                                          0.994s

Length of refined path (in blocks):                    1469 (count: 27, min: 35, max: 68, avg: 54.41)
Number of affected states:                              656 (count: 27, min: 1, max: 67, avg: 24.30)
Length (states) of path with itp 'true':                786 (count: 27, min: 0, max: 58, avg: 29.11)
Length (states) of path with itp non-trivial itp:       656 (count: 27, min: 1, max: 67, avg: 24.30)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 27, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:             620 (count: 27, min: 0, max: 65, avg: 22.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 22623
Max. size of reached set after ref.:  12996
Avg. size of reached set before ref.: 15746.04
Avg. size of reached set after ref.:  6668.56

Total time for CEGAR algorithm:      25.595s
Time for refinements:                 2.952s
Average time for refinement:          0.109s
Max time for refinement:              0.207s

Code Coverage
-----------------------------
  Function coverage:      0.532
  Visited lines:          506
  Total lines:            1721
  Line coverage:          0.294
  Visited conditions:     228
  Total conditions:       734
  Condition coverage:     0.311

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             8232
  Number of reached locations:   529 (23%)
    Avg states per location:     15
    Max states per location:     147 (at node N2627)
  Number of reached functions:   41 (53%)
  Number of partitions:          8201
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1219 (before line 1559), Function timeShift__wrappee__executivefloor called from node N1305, stack depth 6 [2254126f], stack [main, runTest, test, threeTS, timeShift, timeShift__wrappee__executivefloor]])
  Number of target states:       0
  Size of final wait list        126

Time for analysis setup:          4.168s
  Time for loading CPAs:          0.763s
  Time for loading parser:        0.797s
  Time for CFA construction:      2.434s
    Time for parsing file(s):     0.674s
    Time for AST to CFA:          0.753s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.592s
      Time for var class.:        0.324s
Time for Analysis:               25.596s
CPU time for analysis:           25.590s
Total time for CPAchecker:       29.767s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.245s

Time for Garbage Collector:       1.800s (in 84 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     62MB (    59 MiB) avg;    130MB (   124 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
