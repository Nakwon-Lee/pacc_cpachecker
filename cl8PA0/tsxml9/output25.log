scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6xs2k_51/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7524 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6620 (88%)
  Because of loop head:            866 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (1%)
  Times precision was empty:       3715 (49%)
  Times precision was {false}:     257 (3%)
  Times result was cached:         2779 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      773 (10%)
  Times result was 'false':        637 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         72136
  BDD entailment checks:           1060
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          17
Number of abstraction locations:          72
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         25178
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 24.44
Number of irrelevant predicates:          5680 (23%)
Number of preds handled by boolean abs:   4948 (20%)
  Total number of models for allsat:      1860
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.41

Time for post operator:                  7.406s
  Time for path formula creation:        7.182s
Time for strengthen operator:            0.290s
Time for prec operator:                  5.174s
  Time for abstraction:                  4.664s (Max:     0.028s, Count: 7524)
    Boolean abstraction:                 1.288s
    Solving time:                        0.807s (Max:     0.017s)
    Model enumeration time:              0.213s
    Time for BDD construction:           0.159s (Max:     0.013s)
Time for merge operator:                 1.804s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     1.020s

Number of path formula cache hits:   72499 (38%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.786s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1542
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2520 (count: 11253, min: 0, max: 319, avg: 0.22)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.455s
Automaton transfers with branching:                0
Automaton transfer successors:                       175914 (count: 175914, min: 1, max: 1, avg: 1.00) [1 x 175914]

CPA algorithm statistics
------------------------
Number of iterations:            130859
Max size of waitlist:            113
Average size of waitlist:        54
Number of computed successors:   168577
Max successors for one state:    2
Number of times merged:          35538
Number of times stopped:         36422
Number of times breaked:         38

Total time for CPA algorithm:        22.540s (Max:     4.707s)
  Time for choose from waitlist:      0.224s
  Time for precision adjustment:      6.863s
  Time for transfer relation:        10.508s
  Time for merge operator:            2.662s
  Time for stop operator:             0.418s
  Time for adding to reached set:     0.710s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                3315 (count: 38, min: 43, max: 137, avg: 87.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.451s
  Counterexample analysis:                             1.792s (Max:     0.097s, Calls: 38)
    Refinement sat check:                              1.030s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.096s
  Precision update:                                    0.053s
  ARG update:                                          0.429s

Length of refined path (in blocks):                    2731 (count: 38, min: 36, max: 109, avg: 71.87)
Number of affected states:                             1405 (count: 38, min: 1, max: 108, avg: 36.97)
Length (states) of path with itp 'true':               1288 (count: 38, min: 0, max: 89, avg: 33.89)
Length (states) of path with itp non-trivial itp:      1405 (count: 38, min: 1, max: 108, avg: 36.97)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          27 (count: 38, min: 0, max: 1, avg: 0.71)
Equal non-trivial interpolants along paths:            1340 (count: 38, min: 0, max: 106, avg: 35.26)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 22198
Max. size of reached set after ref.:  1117
Avg. size of reached set before ref.: 3420.74
Avg. size of reached set after ref.:  473.55

Total time for CEGAR algorithm:      25.259s
Time for refinements:                 2.684s
Average time for refinement:          0.070s
Max time for refinement:              0.211s

Code Coverage
-----------------------------
  Function coverage:      0.506
  Visited lines:          700
  Total lines:            1721
  Line coverage:          0.407
  Visited conditions:     394
  Total conditions:       734
  Condition coverage:     0.537

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             19525
  Number of reached locations:   801 (35%)
    Avg states per location:     24
    Max states per location:     80 (at node N1992)
  Number of reached functions:   39 (51%)
  Number of partitions:          19524
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1309 (before line 1710), Function timeShift called from node N1692, stack depth 5 [9ce89f9], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        92

Time for analysis setup:          4.958s
  Time for loading CPAs:          0.832s
  Time for loading parser:        0.822s
  Time for CFA construction:      3.132s
    Time for parsing file(s):     0.853s
    Time for AST to CFA:          0.953s
    Time for CFA sanity check:    0.342s
    Time for post-processing:     0.749s
      Time for var class.:        0.396s
Time for Analysis:               25.260s
CPU time for analysis:           25.250s
Total time for CPAchecker:       30.225s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.389s

Time for Garbage Collector:       1.447s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                129MB (   123 MiB) max;     59MB (    56 MiB) avg;    136MB (   130 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           152MB (   145 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
