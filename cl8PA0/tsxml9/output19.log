scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e06g5u6t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            9999 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9573 (96%)
  Because of loop head:            393 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (0%)
  Times precision was empty:       9432 (94%)
  Times precision was {false}:     94 (1%)
  Times result was cached:         377 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      96 (1%)
  Times result was 'false':        67 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         109028
  BDD entailment checks:           1456
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          6
Number of abstraction locations:          54
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         718
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 3.78
Number of irrelevant predicates:          359 (50%)
Number of preds handled by boolean abs:   135 (19%)
  Total number of models for allsat:      107
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  6.671s
  Time for path formula creation:        6.409s
Time for strengthen operator:            0.444s
Time for prec operator:                  1.484s
  Time for abstraction:                  0.819s (Max:     0.024s, Count: 9999)
    Boolean abstraction:                 0.166s
    Solving time:                        0.170s (Max:     0.016s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.018s (Max:     0.008s)
Time for merge operator:                 1.410s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.185s

Number of path formula cache hits:   256303 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.827s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         217 (count: 11978, min: 0, max: 51, avg: 0.02)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.814s
  Time for transition matches:                         0.325s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                       254311 (count: 254311, min: 1, max: 1, avg: 1.00) [1 x 254311]

CPA algorithm statistics
------------------------
Number of iterations:            190636
Max size of waitlist:            405
Average size of waitlist:        191
Number of computed successors:   246907
Max successors for one state:    2
Number of times merged:          53786
Number of times stopped:         55187
Number of times breaked:         33

Total time for CPA algorithm:        21.705s (Max:     3.729s)
  Time for choose from waitlist:      0.292s
  Time for precision adjustment:      4.020s
  Time for transfer relation:        11.847s
  Time for merge operator:            2.841s
  Time for stop operator:             0.599s
  Time for adding to reached set:     0.683s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                1721 (count: 33, min: 43, max: 65, avg: 52.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.897s
  Counterexample analysis:                             0.815s (Max:     0.051s, Calls: 33)
    Refinement sat check:                              0.566s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.025s
  ARG update:                                          0.964s

Length of refined path (in blocks):                    1523 (count: 33, min: 36, max: 57, avg: 46.15)
Number of affected states:                              165 (count: 33, min: 1, max: 55, avg: 5.00)
Length (states) of path with itp 'true':               1325 (count: 33, min: 0, max: 55, avg: 40.15)
Length (states) of path with itp non-trivial itp:       165 (count: 33, min: 1, max: 55, avg: 5.00)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 33, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:             129 (count: 33, min: 0, max: 53, avg: 3.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 79136
Max. size of reached set after ref.:  70449
Avg. size of reached set before ref.: 37879.21
Avg. size of reached set after ref.:  32336.67

Total time for CEGAR algorithm:      26.208s
Time for refinements:                 3.478s
Average time for refinement:          0.105s
Max time for refinement:              0.632s

Code Coverage
-----------------------------
  Function coverage:      0.506
  Visited lines:          714
  Total lines:            1721
  Line coverage:          0.415
  Visited conditions:     410
  Total conditions:       734
  Condition coverage:     0.559

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             8750
  Number of reached locations:   802 (36%)
    Avg states per location:     10
    Max states per location:     54 (at node N2626)
  Number of reached functions:   39 (51%)
  Number of partitions:          8745
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1309 (before line 1710), Function timeShift called from node N1692, stack depth 5 [52c8eb96], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        59

Time for analysis setup:          4.022s
  Time for loading CPAs:          0.795s
  Time for loading parser:        0.679s
  Time for CFA construction:      2.375s
    Time for parsing file(s):     0.661s
    Time for AST to CFA:          0.671s
    Time for CFA sanity check:    0.253s
    Time for post-processing:     0.627s
      Time for var class.:        0.380s
Time for Analysis:               26.208s
CPU time for analysis:           26.220s
Total time for CPAchecker:       30.234s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.267s

Time for Garbage Collector:       2.015s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                188MB (   179 MiB) max;     81MB (    77 MiB) avg;    198MB (   189 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           205MB (   195 MiB) max;    150MB (   143 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
