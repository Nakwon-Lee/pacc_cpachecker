scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uy2yafim/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6561 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6472 (99%)
  Because of loop head:            81 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (0%)
  Times precision was empty:       6482 (99%)
  Times precision was {false}:     24 (0%)
  Times result was cached:         26 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29 (0%)
  Times result was 'false':        10 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         74454
  BDD entailment checks:           1062
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          6
Number of abstraction locations:          35
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         91
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.72
Number of irrelevant predicates:          35 (38%)
Number of preds handled by boolean abs:   33 (36%)
  Total number of models for allsat:      29
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  7.327s
  Time for path formula creation:        7.012s
Time for strengthen operator:            0.410s
Time for prec operator:                  1.205s
  Time for abstraction:                  0.497s (Max:     0.018s, Count: 6561)
    Boolean abstraction:                 0.064s
    Solving time:                        0.063s (Max:     0.013s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.008s (Max:     0.004s)
Time for merge operator:                 1.619s
Time for coverage check:                 0.081s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.072s

Number of path formula cache hits:   150293 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.933s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          87 (count: 7862, min: 0, max: 45, avg: 0.01)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.767s
  Time for transition matches:                         0.291s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       170210 (count: 170210, min: 1, max: 1, avg: 1.00) [1 x 170210]

CPA algorithm statistics
------------------------
Number of iterations:            128675
Max size of waitlist:            49
Average size of waitlist:        26
Number of computed successors:   166474
Max successors for one state:    2
Number of times merged:          36696
Number of times stopped:         37756
Number of times breaked:         8

Total time for CPA algorithm:        22.495s (Max:    17.109s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:      4.194s
  Time for transfer relation:        12.017s
  Time for merge operator:            3.092s
  Time for stop operator:             0.679s
  Time for adding to reached set:     0.652s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 353 (count: 8, min: 43, max: 45, avg: 44.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.339s
  Counterexample analysis:                             0.316s (Max:     0.057s, Calls: 8)
    Refinement sat check:                              0.227s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.025s
  ARG update:                                          0.948s

Length of refined path (in blocks):                     306 (count: 8, min: 36, max: 40, avg: 38.25)
Number of affected states:                               42 (count: 8, min: 1, max: 35, avg: 5.25)
Length (states) of path with itp 'true':                256 (count: 8, min: 0, max: 38, avg: 32.00)
Length (states) of path with itp non-trivial itp:        42 (count: 8, min: 1, max: 35, avg: 5.25)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 8, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:              33 (count: 8, min: 0, max: 33, avg: 4.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 86320
Max. size of reached set after ref.:  86139
Avg. size of reached set before ref.: 86189.75
Avg. size of reached set after ref.:  75272.38

Total time for CEGAR algorithm:      26.311s
Time for refinements:                 2.903s
Average time for refinement:          0.362s
Max time for refinement:              1.122s

Code Coverage
-----------------------------
  Function coverage:      0.597
  Visited lines:          1033
  Total lines:            1721
  Line coverage:          0.600
  Visited conditions:     598
  Total conditions:       734
  Condition coverage:     0.815

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             41368
  Number of reached locations:   1161 (51%)
    Avg states per location:     35
    Max states per location:     188 (at node N1959)
  Number of reached functions:   46 (60%)
  Number of partitions:          41368
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          3.938s
  Time for loading CPAs:          0.717s
  Time for loading parser:        0.754s
  Time for CFA construction:      2.305s
    Time for parsing file(s):     0.736s
    Time for AST to CFA:          0.645s
    Time for CFA sanity check:    0.230s
    Time for post-processing:     0.530s
      Time for var class.:        0.290s
Time for Analysis:               26.311s
CPU time for analysis:           26.300s
Total time for CPAchecker:       30.254s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.785s

Time for Garbage Collector:       1.770s (in 48 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                166MB (   158 MiB) max;     81MB (    77 MiB) avg;    176MB (   168 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           207MB (   198 MiB) max;    153MB (   146 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
