scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vyytui9t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29165 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28901 (99%)
  Because of loop head:            240 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       19856 (68%)
  Times precision was {false}:     101 (0%)
  Times result was cached:         8912 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      296 (1%)
  Times result was 'false':        198 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         96972
  BDD entailment checks:           5546
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          19
Number of abstraction locations:          74
Max number of predicates per location:    10
Avg number of predicates per location:    7
Total predicates per abstraction:         60917
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 153.44
Number of irrelevant predicates:          39702 (65%)
Number of preds handled by boolean abs:   1620 (3%)
  Total number of models for allsat:      531
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.79

Time for post operator:                  4.466s
  Time for path formula creation:        4.161s
Time for strengthen operator:            0.494s
Time for prec operator:                  5.304s
  Time for abstraction:                  4.313s (Max:     0.039s, Count: 29165)
    Boolean abstraction:                 0.470s
    Solving time:                        0.311s (Max:     0.013s)
    Model enumeration time:              0.076s
    Time for BDD construction:           0.071s (Max:     0.011s)
Time for merge operator:                 0.637s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     0.387s

Number of path formula cache hits:   368571 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.567s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1009
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1211 (count: 27965, min: 0, max: 207, avg: 0.04)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.845s
  Time for transition matches:                         0.359s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       316398 (count: 316398, min: 1, max: 1, avg: 1.00) [1 x 316398]

CPA algorithm statistics
------------------------
Number of iterations:            222235
Max size of waitlist:            180
Average size of waitlist:        85
Number of computed successors:   276139
Max successors for one state:    2
Number of times merged:          45713
Number of times stopped:         50950
Number of times breaked:         24

Total time for CPA algorithm:        23.083s (Max:     4.418s)
  Time for choose from waitlist:      0.223s
  Time for precision adjustment:      8.223s
  Time for transfer relation:         9.813s
  Time for merge operator:            1.638s
  Time for stop operator:             0.603s
  Time for adding to reached set:     0.948s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                1899 (count: 24, min: 69, max: 84, avg: 79.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.954s
  Counterexample analysis:                             1.002s (Max:     0.073s, Calls: 24)
    Refinement sat check:                              0.592s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.118s
  Precision update:                                    0.050s
  ARG update:                                          0.733s

Length of refined path (in blocks):                    1656 (count: 24, min: 35, max: 80, avg: 69.00)
Number of affected states:                             1222 (count: 24, min: 1, max: 79, avg: 50.92)
Length (states) of path with itp 'true':                410 (count: 24, min: 0, max: 70, avg: 17.08)
Length (states) of path with itp non-trivial itp:      1222 (count: 24, min: 1, max: 79, avg: 50.92)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          20 (count: 24, min: 0, max: 3, avg: 0.83)
Equal non-trivial interpolants along paths:            1178 (count: 24, min: 0, max: 77, avg: 49.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 13252
Max. size of reached set after ref.:  11227
Avg. size of reached set before ref.: 11881.67
Avg. size of reached set after ref.:  2788.46

Total time for CEGAR algorithm:      25.558s
Time for refinements:                 2.396s
Average time for refinement:          0.099s
Max time for refinement:              0.195s

Code Coverage
-----------------------------
  Function coverage:      0.532
  Visited lines:          506
  Total lines:            1721
  Line coverage:          0.294
  Visited conditions:     228
  Total conditions:       734
  Condition coverage:     0.311

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             6755
  Number of reached locations:   529 (23%)
    Avg states per location:     12
    Max states per location:     132 (at node N2627)
  Number of reached functions:   41 (53%)
  Number of partitions:          6743
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1219 (before line 1559), Function timeShift__wrappee__executivefloor called from node N1307, stack depth 6 [7db8efc7], stack [main, runTest, test, threeTS, timeShift, timeShift__wrappee__executivefloor]])
  Number of target states:       0
  Size of final wait list        93

Time for analysis setup:          4.217s
  Time for loading CPAs:          0.752s
  Time for loading parser:        0.726s
  Time for CFA construction:      2.485s
    Time for parsing file(s):     0.724s
    Time for AST to CFA:          0.770s
    Time for CFA sanity check:    0.246s
    Time for post-processing:     0.567s
      Time for var class.:        0.337s
Time for Analysis:               25.558s
CPU time for analysis:           25.560s
Total time for CPAchecker:       29.780s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.210s

Time for Garbage Collector:       1.590s (in 84 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   119 MiB) max;     60MB (    58 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
