scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_197pkems/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8622 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8547 (99%)
  Because of loop head:            69 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       8550 (99%)
  Times precision was {false}:     21 (0%)
  Times result was cached:         27 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24 (0%)
  Times result was 'false':        8 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         100389
  BDD entailment checks:           1361
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          5
Number of abstraction locations:          37
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         83
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.84
Number of irrelevant predicates:          32 (39%)
Number of preds handled by boolean abs:   28 (34%)
  Total number of models for allsat:      23
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.96

Time for post operator:                  7.706s
  Time for path formula creation:        7.415s
Time for strengthen operator:            0.442s
Time for prec operator:                  1.097s
  Time for abstraction:                  0.373s (Max:     0.035s, Count: 8622)
    Boolean abstraction:                 0.048s
    Solving time:                        0.047s (Max:     0.012s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 1.549s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.048s

Number of path formula cache hits:   223709 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.817s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          75 (count: 10182, min: 0, max: 48, avg: 0.01)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.803s
  Time for transition matches:                         0.368s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       228479 (count: 228479, min: 1, max: 1, avg: 1.00) [1 x 228479]

CPA algorithm statistics
------------------------
Number of iterations:            172797
Max size of waitlist:            49
Average size of waitlist:        25
Number of computed successors:   223691
Max successors for one state:    2
Number of times merged:          49514
Number of times stopped:         50875
Number of times breaked:         6

Total time for CPA algorithm:        23.848s (Max:    15.234s)
  Time for choose from waitlist:      0.297s
  Time for precision adjustment:      4.295s
  Time for transfer relation:        12.976s
  Time for merge operator:            3.139s
  Time for stop operator:             0.664s
  Time for adding to reached set:     0.903s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                 263 (count: 6, min: 43, max: 45, avg: 43.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.763s
  Counterexample analysis:                             0.210s (Max:     0.043s, Calls: 6)
    Refinement sat check:                              0.150s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.010s
  ARG update:                                          0.503s

Length of refined path (in blocks):                     227 (count: 6, min: 36, max: 40, avg: 37.83)
Number of affected states:                               40 (count: 6, min: 1, max: 35, avg: 6.67)
Length (states) of path with itp 'true':                181 (count: 6, min: 0, max: 38, avg: 30.17)
Length (states) of path with itp non-trivial itp:        40 (count: 6, min: 1, max: 35, avg: 6.67)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 6, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:              33 (count: 6, min: 0, max: 33, avg: 5.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 86172
Max. size of reached set after ref.:  85991
Avg. size of reached set before ref.: 86060.33
Avg. size of reached set after ref.:  71560.83

Total time for CEGAR algorithm:      26.184s
Time for refinements:                 1.769s
Average time for refinement:          0.294s
Max time for refinement:              0.614s

Code Coverage
-----------------------------
  Function coverage:      0.597
  Visited lines:          1034
  Total lines:            1721
  Line coverage:          0.601
  Visited conditions:     598
  Total conditions:       734
  Condition coverage:     0.815

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             85812
  Number of reached locations:   1165 (52%)
    Avg states per location:     73
    Max states per location:     370 (at node N1959)
  Number of reached functions:   46 (60%)
  Number of partitions:          85812
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          4.116s
  Time for loading CPAs:          0.827s
  Time for loading parser:        0.676s
  Time for CFA construction:      2.415s
    Time for parsing file(s):     0.767s
    Time for AST to CFA:          0.687s
    Time for CFA sanity check:    0.239s
    Time for post-processing:     0.553s
      Time for var class.:        0.303s
Time for Analysis:               26.184s
CPU time for analysis:           26.180s
Total time for CPAchecker:       30.303s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              1.105s

Time for Garbage Collector:       2.094s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                194MB (   185 MiB) max;     87MB (    83 MiB) avg;    204MB (   195 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           207MB (   198 MiB) max;    158MB (   150 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
