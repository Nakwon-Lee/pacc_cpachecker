scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lifltp2m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            867 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            697 (80%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         170 (20%)
  Times precision was empty:       186 (21%)
  Times precision was {false}:     99 (11%)
  Times result was cached:         392 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      190 (22%)
  Times result was 'false':        170 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         13154
  BDD entailment checks:           640
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       304
Number of predicates discovered:          4
Number of abstraction locations:          9
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         1432
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 4.96
Number of irrelevant predicates:          654 (46%)
Number of preds handled by boolean abs:   322 (22%)
  Total number of models for allsat:      187
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                  4.653s
  Time for path formula creation:        4.433s
Time for strengthen operator:            0.262s
Time for prec operator:                  6.237s
  Time for abstraction:                  5.867s (Max:     0.226s, Count: 867)
    Boolean abstraction:                 2.763s
    Solving time:                        3.461s (Max:     0.155s)
    Model enumeration time:              0.236s
    Time for BDD construction:           0.032s (Max:     0.008s)
Time for merge operator:                 0.460s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     3.697s

Number of path formula cache hits:   128353 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.610s

Total number of created targets for pointer analysis: 314
   Number of created targets for uf: *unsigned_short_int is 25


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         401 (count: 2565, min: 0, max: 30, avg: 0.16)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.553s
  Time for transition matches:                         0.221s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       146326 (count: 146326, min: 1, max: 1, avg: 1.00) [1 x 146326]

CPA algorithm statistics
------------------------
Number of iterations:            96435
Max size of waitlist:            43
Average size of waitlist:        19
Number of computed successors:   103392
Max successors for one state:    2
Number of times merged:          6257
Number of times stopped:         6694
Number of times breaked:         11

Total time for CPA algorithm:        19.629s (Max:     3.531s)
  Time for choose from waitlist:      0.239s
  Time for precision adjustment:      7.734s
  Time for transfer relation:         8.754s
  Time for merge operator:            0.774s
  Time for stop operator:             0.420s
  Time for adding to reached set:     0.601s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  67 (count: 11, min: 4, max: 8, avg: 6.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.952s
  Counterexample analysis:                             0.401s (Max:     0.060s, Calls: 11)
    Refinement sat check:                              0.320s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.011s
  ARG update:                                          0.469s

Length of refined path (in blocks):                      67 (count: 11, min: 4, max: 8, avg: 6.09)
Number of affected states:                               56 (count: 11, min: 3, max: 7, avg: 5.09)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        56 (count: 11, min: 3, max: 7, avg: 5.09)
Length (states) of path with itp 'false':                 0 (count: 11, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              45 (count: 11, min: 2, max: 6, avg: 4.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 11541
Max. size of reached set after ref.:  20
Avg. size of reached set before ref.: 8432.27
Avg. size of reached set after ref.:  20.00

Total time for CEGAR algorithm:      20.843s
Time for refinements:                 1.205s
Average time for refinement:          0.109s
Max time for refinement:              0.196s

Code Coverage
-----------------------------
  Function coverage:      0.663
  Visited lines:          1719
  Total lines:            1885
  Line coverage:          0.912
  Visited conditions:     238
  Total conditions:       310
  Condition coverage:     0.768

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             3994
  Number of reached locations:   859 (34%)
    Avg states per location:     4
    Max states per location:     214 (at node N51)
  Number of reached functions:   55 (66%)
  Number of partitions:          3994
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.832s
  Time for loading CPAs:          0.996s
  Time for loading parser:        0.803s
  Time for CFA construction:      3.899s
    Time for parsing file(s):     1.121s
    Time for AST to CFA:          1.331s
    Time for CFA sanity check:    0.247s
    Time for post-processing:     0.981s
      Time for var class.:        0.430s
Time for Analysis:               20.843s
CPU time for analysis:           20.840s
Time for analyzing result:        0.003s
Total time for CPAchecker:       26.680s
Total CPU time for CPAchecker:   26.660s
Time for statistics:              0.175s

Time for Garbage Collector:       0.851s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 92MB (    88 MiB) max;     51MB (    49 MiB) avg;     94MB (    90 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     33MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8117MB (  7741 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
