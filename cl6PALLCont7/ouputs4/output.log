scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--net--ethernet--intel--e1000e--e1000e.ko-ldv_main1_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r7k1_73q/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8991: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10411: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10466: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13617: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 14675: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15009: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16288: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18465: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18575: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 18940: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19880: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23654: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24179: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28065: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28168: Dead code detected: __ptr = (u8 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 28173: Dead code detected: __ptr___0 = (u16 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 28183: Dead code detected: __ptr___2 = (u64 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __ptr = (u8 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgb %2,%1": "=a" (__ret),
                       "+m" (*__ptr): "q" (__new), "0" (__old): "memory");
  goto ldv_5547;
  case 2UL:
  __ptr___0 = (u16 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgw %2,%1": "=a" (__ret),
                       "+m" (*__ptr___0): "r" (__new), "0" (__old): "memory");
  goto ldv_5547;
  case 4UL:
  __ptr___1 = (u32 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgl %2,%1": "=a" (__ret),
                       "+m" (*__ptr___1): "r" (__new), "0" (__old): "memory");
  goto ldv_5547;
  case 8UL:
  __ptr___2 = (u64 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgq %2,%1": "=a" (__ret),
                       "+m" (*__ptr___2): "r" (__new), "0" (__old): "memory");
  goto ldv_5547;
  default:
  __cmpxchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 28248: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 28251: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 28254: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6243;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6243;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6243;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6243;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 35837: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 38066: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38487: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 24602: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24635: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28558: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 24406-24407: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28491-28492: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24526: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24473: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28621: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24506: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28654: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28588: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24440: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28525: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14236: Function pointer *(hw->phy.ops.set_page) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 11276-11277: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 11278-11279: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 11281-11282: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 11283-11284: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36428: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36431: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36432: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 36383-36384: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 36385-36386: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6434: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6444: Function pointer *(hw->nvm.ops.write) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20815: Function pointer *(hw->phy.ops.set_d0_lplu_state) with type s32 (*)(struct e1000_hw *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34690: Function pointer *(hw->phy.ops.set_page) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6414: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9167: Function pointer *(hw->phy.ops.write_reg_locked) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 14424: Destroying the void* pointer ldv_successful_malloc::p produces garbage or the memory pointed by it is unused: e1000_rev_polarity_p1 = ldv_successful_malloc(4); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9364: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6405: Ignoring function call through function pointer *(hw->phy.ops.read_reg): tmp = (*(hw->phy.ops.read_reg))(hw, offset, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22689: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 22689: Unsupported feature (recursion): ret_val = e1000_get_cable_length_80003es2lan(hw); (line was originally pointer call(e1000_get_cable_length_80003es2lan) ret_val = (*(hw->phy.ops.acquire))(hw);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            23 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            9 (39%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (61%)
  Times precision was empty:       6 (26%)
  Times precision was {false}:     13 (57%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (17%)
  Times result was 'false':        10 (43%)
Number of strengthen sat checks:   0
Number of coverage checks:         60
  BDD entailment checks:           2
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       352
Number of predicates discovered:          5
Number of abstraction locations:          2
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         23
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1.35
Number of irrelevant predicates:          13 (57%)
Number of preds handled by boolean abs:   10 (43%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.859s
  Time for path formula creation:        2.850s
Time for strengthen operator:            0.030s
Time for prec operator:                  2.272s
  Time for abstraction:                  2.267s (Max:     0.669s, Count: 23)
    Boolean abstraction:                 1.896s
    Solving time:                        1.833s (Max:     0.531s)
    Model enumeration time:              0.057s
    Time for BDD construction:           0.006s (Max:     0.005s)
Time for merge operator:                 0.107s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.890s

Number of path formula cache hits:   122 (3%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.677s

Total number of created targets for pointer analysis: 3391
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[unsigned_short_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *enum_e1000_phy_type is 3
   Number of created targets for uf: *enum_e1000_nvm_type is 4
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[(unsigned_char)*],_Parameter_3_type:_[unsigned_int],_VarArgs:_false)* is 3
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 2
   Number of created targets for uf: *enum_e1000_bus_width is 3
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_4,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[unsigned_short_int],_Parameter_3_type:_[unsigned_short_int],_Parameter_4_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *unsigned_short_int is 34
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_e1000_hw)*],_VarArgs:_false)* is 4
   Number of created targets for uf: *signed_int is 203
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *enum_e1000_mac_type is 15
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[_Bool],_VarArgs:_false)* is 2
   Number of created targets for uf: *(struct_e1000_adapter)* is 2
   Number of created targets for uf: *_Bool is 16
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_e1000_hw)*],_VarArgs:_false)* is 47
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[(unsigned_short_int)*],_Parameter_3_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 2
   Number of created targets for uf: *(Return_type:_[_Bool],_Parameters:_1,_Parameter_1_type:_[(struct_e1000_hw)*],_VarArgs:_false)* is 5
   Number of created targets for uf: *enum_e1000_media_type is 5
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[unsigned_int],_VarArgs:_false)* is 3
   Number of created targets for uf: *unsigned_int is 65
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[unsigned_short_int],_VarArgs:_false)* is 9


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          50 (count: 129, min: 0, max: 50, avg: 0.39)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.134s
Automaton transfers with branching:                0
Automaton transfer successors:                         3694 (count: 3694, min: 1, max: 1, avg: 1.00) [1 x 3694]

CPA algorithm statistics
------------------------
Number of iterations:            856
Max size of waitlist:            369
Average size of waitlist:        91
Number of computed successors:   1272
Max successors for one state:    2
Number of times merged:          29
Number of times stopped:         31
Number of times breaked:         4

Total time for CPA algorithm:         6.023s (Max:     2.414s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      2.384s
  Time for transfer relation:         3.391s
  Time for merge operator:            0.121s
  Time for stop operator:             0.043s
  Time for adding to reached set:     0.017s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                   8 (count: 4, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.694s
  Counterexample analysis:                             0.657s (Max:     0.194s, Calls: 4)
    Refinement sat check:                              0.611s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.005s
  ARG update:                                          0.007s

Length of refined path (in blocks):                       8 (count: 4, min: 2, max: 2, avg: 2.00)
Number of affected states:                                4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 208
Max. size of reached set after ref.:  175
Avg. size of reached set before ref.: 199.00
Avg. size of reached set after ref.:  175.00

Total time for CEGAR algorithm:       6.751s
Time for refinements:                 0.727s
Average time for refinement:          0.181s
Max time for refinement:              0.219s

Code Coverage
-----------------------------
  Function coverage:      0.026
  Visited lines:          1530
  Total lines:            20097
  Line coverage:          0.076
  Visited conditions:     570
  Total conditions:       31452
  Condition coverage:     0.018

CPAchecker general statistics
-----------------------------
Number of program locations:     65515
Number of CFA edges:             96041
Number of relevant variables:    4710
Number of functions:             831
Number of loops:                 189
Size of reached set:             1136
  Number of reached locations:   753 (1%)
    Avg states per location:     1
    Max states per location:     24 (at node N2059)
  Number of reached functions:   22 (3%)
  Number of partitions:          1136
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        369

Time for analysis setup:         21.824s
  Time for loading CPAs:          1.586s
  Time for loading parser:        0.773s
  Time for CFA construction:     19.318s
    Time for parsing file(s):     2.182s
    Time for AST to CFA:          4.715s
    Time for CFA sanity check:    1.989s
    Time for post-processing:    10.585s
      Time for var class.:        6.798s
Time for Analysis:                6.751s
CPU time for analysis:            6.740s
Total time for CPAchecker:       28.582s
Total CPU time for CPAchecker:   28.510s
Time for statistics:              0.284s

Time for Garbage Collector:       2.085s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                236MB (   225 MiB) max;    116MB (   110 MiB) avg;    250MB (   239 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     30MB (    29 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           247MB (   236 MiB) max;    196MB (   187 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8106MB (  7730 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
