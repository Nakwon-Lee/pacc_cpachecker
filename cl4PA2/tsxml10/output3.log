scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-uwb-i1480-dfu-i1480-dfu-usb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q7s_jmbx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3389: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3452: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3320: Function pointer *(i1480->rc_release) with type void (*)(struct i1480 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3243: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, 2148007936U, 8UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3896: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, reg, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3905: Ignoring function call through function pointer *(i1480->write): result = (*(i1480->write))(i1480, reg, (const void *)buffer, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3935: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, reg, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3944: Ignoring function call through function pointer *(i1480->write): result = (*(i1480->write))(i1480, reg, (const void *)buffer, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 3826-3827: Ignoring function call through function pointer *(i1480->write): tmp___0 = (*(i1480->write))(i1480, __CPAchecker_TMP_0, __CPAchecker_TMP_1, (hdr_itr->length) * 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 3712-3713: Ignoring function call through function pointer *(i1480->read): tmp = (*(i1480->read))(i1480, (u32 )((hdr->address) + ((unsigned long)src_itr)), chunk_size); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4093: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, 2148007936U, (size_t )4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4167: Ignoring function call through function pointer *(i1480->rc_setup): tmp = (*(i1480->rc_setup))(i1480); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4167: Unsupported feature (recursion): tmp = i1480_fw_upload(i1480); (line was originally pointer call(i1480_fw_upload) tmp = (*(i1480->rc_setup))(i1480);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            7850 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6758 (86%)
  Because of loop head:            1002 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         90 (1%)
  Times precision was empty:       2072 (26%)
  Times precision was {false}:     100 (1%)
  Times result was cached:         5273 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      405 (5%)
  Times result was 'false':        724 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         5931
  BDD entailment checks:           1901
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       19
Number of predicates discovered:          19
Number of abstraction locations:          61
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         14018
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 27.76
Number of irrelevant predicates:          3250 (23%)
Number of preds handled by boolean abs:   808 (6%)
  Total number of models for allsat:      505
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.25

Time for post operator:                  1.813s
  Time for path formula creation:        1.702s
Time for strengthen operator:            0.134s
Time for prec operator:                  5.001s
  Time for abstraction:                  4.661s (Max:     0.020s, Count: 7850)
    Boolean abstraction:                 0.974s
    Solving time:                        0.744s (Max:     0.017s)
    Model enumeration time:              0.081s
    Time for BDD construction:           0.082s (Max:     0.011s)
Time for merge operator:                 0.140s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.825s

Number of path formula cache hits:   56491 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.291s

Total number of created targets for pointer analysis: 69
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[(char)*],_Parameter_3_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_i1480)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *(unsigned_int)* is 4
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_4,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[(void)*],_Parameter_4_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(char)* is 4
   Number of created targets for uf: *unsigned_char is 4
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_usb_interface)* is 2
   Number of created targets for uf: *(struct_fw_hdr)* is 6
   Number of created targets for uf: *unsigned_int is 5
   Number of created targets for uf: *(struct_device)* is 2


Number of BDD nodes:                               440
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1225 (count: 7141, min: 0, max: 392, avg: 0.17)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.321s
Automaton transfers with branching:                0
Automaton transfer successors:                        52405 (count: 52405, min: 1, max: 1, avg: 1.00) [1 x 52405]

CPA algorithm statistics
------------------------
Number of iterations:            33136
Max size of waitlist:            28
Average size of waitlist:        9
Number of computed successors:   37841
Max successors for one state:    2
Number of times merged:          2015
Number of times stopped:         2995
Number of times breaked:         90

Total time for CPA algorithm:        10.656s (Max:     0.605s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:      5.710s
  Time for transfer relation:         3.679s
  Time for merge operator:            0.285s
  Time for stop operator:             0.208s
  Time for adding to reached set:     0.163s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   90
Avg. length of target path (in blocks):                3684 (count: 90, min: 7, max: 56, avg: 40.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.567s
  Counterexample analysis:                             3.103s (Max:     0.071s, Calls: 90)
    Refinement sat check:                              1.635s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.078s
  Precision update:                                    0.094s
  ARG update:                                          0.208s

Length of refined path (in blocks):                    3160 (count: 90, min: 6, max: 49, avg: 35.11)
Number of affected states:                             1654 (count: 90, min: 1, max: 32, avg: 18.38)
Length (states) of path with itp 'true':               1416 (count: 90, min: 0, max: 34, avg: 15.73)
Length (states) of path with itp non-trivial itp:      1654 (count: 90, min: 1, max: 32, avg: 18.38)
Length (states) of path with itp 'false':                90 (count: 90, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         182 (count: 90, min: 0, max: 4, avg: 2.02)
Equal non-trivial interpolants along paths:            1382 (count: 90, min: 0, max: 31, avg: 15.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                90
Number of successful refinements:     90
Number of failed refinements:         0
Max. size of reached set before ref.: 1205
Max. size of reached set after ref.:  1148
Avg. size of reached set before ref.: 528.73
Avg. size of reached set after ref.:  168.23

Total time for CEGAR algorithm:      14.499s
Time for refinements:                 3.801s
Average time for refinement:          0.042s
Max time for refinement:              0.086s

Code Coverage
-----------------------------
  Function coverage:      0.640
  Visited lines:          1047
  Total lines:            1568
  Line coverage:          0.668
  Visited conditions:     152
  Total conditions:       306
  Condition coverage:     0.497

CPAchecker general statistics
-----------------------------
Number of program locations:     2135
Number of CFA edges:             2317
Number of relevant variables:    295
Number of functions:             50
Number of loops:                 19
Size of reached set:             1678
  Number of reached locations:   497 (23%)
    Avg states per location:     3
    Max states per location:     20 (at node N642)
  Number of reached functions:   32 (64%)
  Number of partitions:          1663
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N655 (before line 3977), Function __mac_fw_upload called from node N685, stack depth 5 [3ae2721b], stack [main, i1480_usb_probe, i1480_fw_upload, i1480_pre_fw_upload, __mac_fw_upload]])
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:          4.884s
  Time for loading CPAs:          0.949s
  Time for loading parser:        0.667s
  Time for CFA construction:      3.099s
    Time for parsing file(s):     0.935s
    Time for AST to CFA:          0.986s
    Time for CFA sanity check:    0.176s
    Time for post-processing:     0.734s
      Time for var class.:        0.370s
Time for Analysis:               14.500s
CPU time for analysis:           14.500s
Total time for CPAchecker:       19.396s
Total CPU time for CPAchecker:   19.380s
Time for statistics:              0.128s

Time for Garbage Collector:       0.239s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     41MB (    39 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     33MB (    31 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8004MB (  7633 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
