scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-uwb-i1480-dfu-i1480-dfu-usb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__8egyz5v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3389: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3452: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3320: Function pointer *(i1480->rc_release) with type void (*)(struct i1480 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3243: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, 2148007936U, 8UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3320: Ignoring function call through function pointer *(i1480->rc_release): (*(i1480->rc_release))(i1480); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4093: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, 2148007936U, (size_t )4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4167: Ignoring function call through function pointer *(i1480->rc_setup): tmp = (*(i1480->rc_setup))(i1480); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4167: Unsupported feature (recursion): tmp = i1480_fw_upload(i1480); (line was originally pointer call(i1480_fw_upload) tmp = (*(i1480->rc_setup))(i1480);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2423 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2134 (88%)
  Because of loop head:            256 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (1%)
  Times precision was empty:       579 (24%)
  Times precision was {false}:     108 (4%)
  Times result was cached:         1234 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      502 (21%)
  Times result was 'false':        145 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1406
  BDD entailment checks:           548
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          21
Number of abstraction locations:          55
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         4948
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 8.11
Number of irrelevant predicates:          1483 (30%)
Number of preds handled by boolean abs:   1291 (26%)
  Total number of models for allsat:      584
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.16

Time for post operator:                  1.362s
  Time for path formula creation:        1.261s
Time for strengthen operator:            0.038s
Time for prec operator:                  2.829s
  Time for abstraction:                  2.707s (Max:     0.018s, Count: 2423)
    Boolean abstraction:                 0.822s
    Solving time:                        0.598s (Max:     0.016s)
    Model enumeration time:              0.076s
    Time for BDD construction:           0.084s (Max:     0.012s)
Time for merge operator:                 0.037s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.674s

Number of path formula cache hits:   14846 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.092s

Total number of created targets for pointer analysis: 25
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_4,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[(void)*],_Parameter_4_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[(char)*],_Parameter_3_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(char)* is 4
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *unsigned_char is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_usb_interface)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_i1480)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *(struct_device)* is 2
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               606
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1363 (count: 5034, min: 0, max: 590, avg: 0.27)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.197s
Automaton transfers with branching:                0
Automaton transfer successors:                        16020 (count: 16020, min: 1, max: 1, avg: 1.00) [1 x 16020]

CPA algorithm statistics
------------------------
Number of iterations:            10335
Max size of waitlist:            34
Average size of waitlist:        12
Number of computed successors:   11605
Max successors for one state:    2
Number of times merged:          429
Number of times stopped:         702
Number of times breaked:         33

Total time for CPA algorithm:         6.112s (Max:     0.573s)
  Time for choose from waitlist:      0.052s
  Time for precision adjustment:      3.217s
  Time for transfer relation:         2.251s
  Time for merge operator:            0.106s
  Time for stop operator:             0.151s
  Time for adding to reached set:     0.109s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                1153 (count: 33, min: 10, max: 54, avg: 34.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.981s
  Counterexample analysis:                             0.771s (Max:     0.056s, Calls: 33)
    Refinement sat check:                              0.417s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.052s
  Precision update:                                    0.017s
  ARG update:                                          0.118s

Length of refined path (in blocks):                     967 (count: 33, min: 9, max: 49, avg: 29.30)
Number of affected states:                              543 (count: 33, min: 1, max: 48, avg: 16.45)
Length (states) of path with itp 'true':                391 (count: 33, min: 0, max: 34, avg: 11.85)
Length (states) of path with itp non-trivial itp:       543 (count: 33, min: 1, max: 48, avg: 16.45)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          32 (count: 33, min: 0, max: 3, avg: 0.97)
Equal non-trivial interpolants along paths:             478 (count: 33, min: 0, max: 47, avg: 14.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 844
Max. size of reached set after ref.:  597
Avg. size of reached set before ref.: 450.58
Avg. size of reached set after ref.:  148.45

Total time for CEGAR algorithm:       7.180s
Time for refinements:                 1.064s
Average time for refinement:          0.032s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.540
  Visited lines:          886
  Total lines:            1568
  Line coverage:          0.565
  Visited conditions:     96
  Total conditions:       306
  Condition coverage:     0.314

CPAchecker general statistics
-----------------------------
Number of program locations:     2135
Number of CFA edges:             2317
Number of relevant variables:    295
Number of functions:             50
Number of loops:                 19
Size of reached set:             789
  Number of reached locations:   356 (17%)
    Avg states per location:     2
    Max states per location:     7 (at node N137)
  Number of reached functions:   27 (54%)
  Number of partitions:          784
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1757 (before line 5581), Function main called from node N1715, stack depth 1 [492fc69e], stack [main]])
  Number of target states:       0
  Size of final wait list        32

Time for analysis setup:          4.945s
  Time for loading CPAs:          0.933s
  Time for loading parser:        0.664s
  Time for CFA construction:      3.245s
    Time for parsing file(s):     1.041s
    Time for AST to CFA:          0.972s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.819s
      Time for var class.:        0.410s
Time for Analysis:                7.180s
CPU time for analysis:            7.180s
Total time for CPAchecker:       12.129s
Total CPU time for CPAchecker:   12.120s
Time for statistics:              0.103s

Time for Garbage Collector:       0.176s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     38MB (    36 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     30MB (    29 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8058MB (  7684 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
