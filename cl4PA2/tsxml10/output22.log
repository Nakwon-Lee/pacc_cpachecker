scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-uwb-i1480-dfu-i1480-dfu-usb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uwvu_kal/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3389: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 3452: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3320: Function pointer *(i1480->rc_release) with type void (*)(struct i1480 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_intf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3243: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, 2148007936U, 8UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3896: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, reg, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3905: Ignoring function call through function pointer *(i1480->write): result = (*(i1480->write))(i1480, reg, (const void *)buffer, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3935: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, reg, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3944: Ignoring function call through function pointer *(i1480->write): result = (*(i1480->write))(i1480, reg, (const void *)buffer, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 3826-3827: Ignoring function call through function pointer *(i1480->write): tmp___0 = (*(i1480->write))(i1480, __CPAchecker_TMP_0, __CPAchecker_TMP_1, (hdr_itr->length) * 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 3712-3713: Ignoring function call through function pointer *(i1480->read): tmp = (*(i1480->read))(i1480, (u32 )((hdr->address) + ((unsigned long)src_itr)), chunk_size); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4093: Ignoring function call through function pointer *(i1480->read): result = (*(i1480->read))(i1480, 2148007936U, (size_t )4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4167: Ignoring function call through function pointer *(i1480->rc_setup): tmp = (*(i1480->rc_setup))(i1480); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4167: Unsupported feature (recursion): tmp = i1480_fw_upload(i1480); (line was originally pointer call(i1480_fw_upload) tmp = (*(i1480->rc_setup))(i1480);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            8269 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7140 (86%)
  Because of loop head:            1041 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         88 (1%)
  Times precision was empty:       2063 (25%)
  Times precision was {false}:     109 (1%)
  Times result was cached:         5627 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      470 (6%)
  Times result was 'false':        758 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         6342
  BDD entailment checks:           2098
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       19
Number of predicates discovered:          20
Number of abstraction locations:          63
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         16707
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 28.85
Number of irrelevant predicates:          4493 (27%)
Number of preds handled by boolean abs:   966 (6%)
  Total number of models for allsat:      568
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.21

Time for post operator:                  1.735s
  Time for path formula creation:        1.650s
Time for strengthen operator:            0.147s
Time for prec operator:                  5.203s
  Time for abstraction:                  4.856s (Max:     0.039s, Count: 8269)
    Boolean abstraction:                 0.854s
    Solving time:                        0.648s (Max:     0.017s)
    Model enumeration time:              0.076s
    Time for BDD construction:           0.081s (Max:     0.017s)
Time for merge operator:                 0.102s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.724s

Number of path formula cache hits:   58570 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.248s

Total number of created targets for pointer analysis: 69
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[(char)*],_Parameter_3_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_i1480)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *(unsigned_int)* is 4
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_4,_Parameter_1_type:_[(struct_i1480)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[(void)*],_Parameter_4_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(char)* is 4
   Number of created targets for uf: *unsigned_char is 4
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_usb_interface)* is 2
   Number of created targets for uf: *(struct_fw_hdr)* is 6
   Number of created targets for uf: *unsigned_int is 5
   Number of created targets for uf: *(struct_device)* is 2


Number of BDD nodes:                               475
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1330 (count: 7787, min: 0, max: 464, avg: 0.17)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.384s
Automaton transfers with branching:                0
Automaton transfer successors:                        54469 (count: 54469, min: 1, max: 1, avg: 1.00) [1 x 54469]

CPA algorithm statistics
------------------------
Number of iterations:            34665
Max size of waitlist:            27
Average size of waitlist:        10
Number of computed successors:   39556
Max successors for one state:    2
Number of times merged:          2122
Number of times stopped:         3094
Number of times breaked:         88

Total time for CPA algorithm:        10.849s (Max:     0.456s)
  Time for choose from waitlist:      0.120s
  Time for precision adjustment:      5.933s
  Time for transfer relation:         3.517s
  Time for merge operator:            0.247s
  Time for stop operator:             0.215s
  Time for adding to reached set:     0.238s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   88
Avg. length of target path (in blocks):                3616 (count: 88, min: 7, max: 57, avg: 41.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.652s
  Counterexample analysis:                             3.157s (Max:     0.062s, Calls: 88)
    Refinement sat check:                              1.637s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.093s
  Precision update:                                    0.110s
  ARG update:                                          0.216s

Length of refined path (in blocks):                    3108 (count: 88, min: 6, max: 54, avg: 35.32)
Number of affected states:                             1680 (count: 88, min: 1, max: 46, avg: 19.09)
Length (states) of path with itp 'true':               1340 (count: 88, min: 0, max: 38, avg: 15.23)
Length (states) of path with itp non-trivial itp:      1680 (count: 88, min: 1, max: 46, avg: 19.09)
Length (states) of path with itp 'false':                88 (count: 88, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         168 (count: 88, min: 0, max: 4, avg: 1.91)
Equal non-trivial interpolants along paths:            1424 (count: 88, min: 0, max: 45, avg: 16.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                88
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 1454
Max. size of reached set after ref.:  1177
Avg. size of reached set before ref.: 558.48
Avg. size of reached set after ref.:  165.84

Total time for CEGAR algorithm:      14.735s
Time for refinements:                 3.856s
Average time for refinement:          0.043s
Max time for refinement:              0.073s

Code Coverage
-----------------------------
  Function coverage:      0.660
  Visited lines:          957
  Total lines:            1568
  Line coverage:          0.610
  Visited conditions:     122
  Total conditions:       306
  Condition coverage:     0.399

CPAchecker general statistics
-----------------------------
Number of program locations:     2135
Number of CFA edges:             2317
Number of relevant variables:    295
Number of functions:             50
Number of loops:                 19
Size of reached set:             1153
  Number of reached locations:   415 (19%)
    Avg states per location:     2
    Max states per location:     18 (at node N642)
  Number of reached functions:   33 (66%)
  Number of partitions:          1137
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N655 (before line 3977), Function __mac_fw_upload called from node N685, stack depth 5 [5dbcaae7], stack [main, i1480_usb_probe, i1480_fw_upload, i1480_pre_fw_upload, __mac_fw_upload]])
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          4.606s
  Time for loading CPAs:          0.879s
  Time for loading parser:        0.695s
  Time for CFA construction:      2.912s
    Time for parsing file(s):     0.893s
    Time for AST to CFA:          0.964s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.690s
      Time for var class.:        0.352s
Time for Analysis:               14.736s
CPU time for analysis:           14.740s
Total time for CPAchecker:       19.345s
Total CPU time for CPAchecker:   19.330s
Time for statistics:              0.072s

Time for Garbage Collector:       0.233s (in 26 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     42MB (    40 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     33MB (    31 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8003MB (  7633 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
