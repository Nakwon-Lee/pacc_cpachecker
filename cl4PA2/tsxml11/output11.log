scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-staging-et131x-et131x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pv9a5298/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6891: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6931: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8264: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8189-8190: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8226: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6891: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14435 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12540 (87%)
  Because of loop head:            1854 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (0%)
  Times precision was empty:       3471 (24%)
  Times precision was {false}:     445 (3%)
  Times result was cached:         10282 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      237 (2%)
  Times result was 'false':        90 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         12322
  BDD entailment checks:           4290
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          2
Number of abstraction locations:          150
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         10982
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 16.10
Number of irrelevant predicates:          4664 (42%)
Number of preds handled by boolean abs:   237 (2%)
  Total number of models for allsat:      237
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.480s
  Time for path formula creation:        6.274s
Time for strengthen operator:            0.183s
Time for prec operator:                  6.354s
  Time for abstraction:                  5.740s (Max:     0.073s, Count: 14435)
    Boolean abstraction:                 0.516s
    Solving time:                        1.595s (Max:     0.064s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.031s (Max:     0.006s)
Time for merge operator:                 0.337s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     1.624s

Number of path formula cache hits:   76540 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.537s

Total number of created targets for pointer analysis: 23167
   Number of created targets for uf: *unsigned_short_int is 49
   Number of created targets for uf: *(struct_tcb)* is 8
   Number of created targets for uf: *unsigned_char is 17
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_long_long_int is 40
   Number of created targets for uf: *unsigned_int is 108


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         477 (count: 11422, min: 0, max: 50, avg: 0.04)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.564s
  Time for transition matches:                         0.219s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        88848 (count: 88848, min: 1, max: 1, avg: 1.00) [1 x 88848]

CPA algorithm statistics
------------------------
Number of iterations:            57920
Max size of waitlist:            38
Average size of waitlist:        13
Number of computed successors:   65556
Max successors for one state:    2
Number of times merged:          4016
Number of times stopped:         7101
Number of times breaked:         41

Total time for CPA algorithm:        19.699s (Max:     0.971s)
  Time for choose from waitlist:      0.167s
  Time for precision adjustment:      7.555s
  Time for transfer relation:         9.743s
  Time for merge operator:            0.600s
  Time for stop operator:             0.399s
  Time for adding to reached set:     0.319s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                2027 (count: 41, min: 5, max: 90, avg: 49.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.251s
  Counterexample analysis:                             2.736s (Max:     0.112s, Calls: 41)
    Refinement sat check:                              2.184s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.100s
  Precision update:                                    0.037s
  ARG update:                                          0.315s

Length of refined path (in blocks):                    1855 (count: 40, min: 4, max: 85, avg: 46.38)
Number of affected states:                             1803 (count: 40, min: 0, max: 84, avg: 45.08)
Length (states) of path with itp 'true':                 12 (count: 40, min: 0, max: 6, avg: 0.30)
Length (states) of path with itp non-trivial itp:      1803 (count: 40, min: 0, max: 84, avg: 45.08)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 40, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1765 (count: 40, min: 0, max: 83, avg: 44.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 2323
Max. size of reached set after ref.:  1035
Avg. size of reached set before ref.: 1476.83
Avg. size of reached set after ref.:  54.60

Total time for CEGAR algorithm:      23.185s
Time for refinements:                 3.483s
Average time for refinement:          0.084s
Max time for refinement:              0.134s

Code Coverage
-----------------------------
  Function coverage:      0.363
  Visited lines:          1750
  Total lines:            4013
  Line coverage:          0.436
  Visited conditions:     272
  Total conditions:       920
  Condition coverage:     0.296

CPAchecker general statistics
-----------------------------
Number of program locations:     5322
Number of CFA edges:             6259
Number of relevant variables:    693
Number of functions:             160
Number of loops:                 38
Size of reached set:             2224
  Number of reached locations:   913 (17%)
    Avg states per location:     2
    Max states per location:     31 (at node N359)
  Number of reached functions:   58 (36%)
  Number of partitions:          2219
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4153 (before line 10171), Function main called from node N4097, stack depth 1 [6801b414], stack [main]])
  Number of target states:       1
  Size of final wait list        28

Time for analysis setup:          7.056s
  Time for loading CPAs:          1.130s
  Time for loading parser:        0.672s
  Time for CFA construction:      5.107s
    Time for parsing file(s):     1.273s
    Time for AST to CFA:          1.976s
    Time for CFA sanity check:    0.439s
    Time for post-processing:     1.131s
      Time for var class.:        0.584s
Time for Analysis:               23.185s
CPU time for analysis:           23.190s
Total time for CPAchecker:       30.246s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.152s

Time for Garbage Collector:       0.704s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     50MB (    48 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
