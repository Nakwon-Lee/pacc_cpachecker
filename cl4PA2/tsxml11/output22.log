scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-staging-et131x-et131x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sk_zyygb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6891: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6931: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8264: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8189-8190: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8226: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitrev32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            31527 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29103 (92%)
  Because of loop head:            2378 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46 (0%)
  Times precision was empty:       13307 (42%)
  Times precision was {false}:     332 (1%)
  Times result was cached:         17622 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      266 (1%)
  Times result was 'false':        164 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         12106
  BDD entailment checks:           3190
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          2
Number of abstraction locations:          166
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         18330
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 30.65
Number of irrelevant predicates:          10064 (55%)
Number of preds handled by boolean abs:   266 (1%)
  Total number of models for allsat:      266
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.290s
  Time for path formula creation:        4.143s
Time for strengthen operator:            0.239s
Time for prec operator:                  5.783s
  Time for abstraction:                  5.030s (Max:     0.054s, Count: 31527)
    Boolean abstraction:                 0.461s
    Solving time:                        0.949s (Max:     0.044s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.012s (Max:     0.001s)
Time for merge operator:                 0.362s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.971s

Number of path formula cache hits:   161993 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.358s

Total number of created targets for pointer analysis: 3673
   Number of created targets for uf: *unsigned_short_int is 49
   Number of created targets for uf: *(void)* is 41
   Number of created targets for uf: *(struct_tcb)* is 15
   Number of created targets for uf: *unsigned_char is 13
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         535 (count: 19805, min: 0, max: 66, avg: 0.03)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.493s
Automaton transfers with branching:                0
Automaton transfer successors:                       148018 (count: 148018, min: 1, max: 1, avg: 1.00) [1 x 148018]

CPA algorithm statistics
------------------------
Number of iterations:            95696
Max size of waitlist:            72
Average size of waitlist:        16
Number of computed successors:   104179
Max successors for one state:    2
Number of times merged:          4458
Number of times stopped:         7194
Number of times breaked:         46

Total time for CPA algorithm:        19.605s (Max:     1.718s)
  Time for choose from waitlist:      0.148s
  Time for precision adjustment:      7.156s
  Time for transfer relation:        10.192s
  Time for merge operator:            0.560s
  Time for stop operator:             0.330s
  Time for adding to reached set:     0.280s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   46
Avg. length of target path (in blocks):                2700 (count: 46, min: 5, max: 116, avg: 58.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.839s
  Counterexample analysis:                             3.249s (Max:     0.170s, Calls: 46)
    Refinement sat check:                              2.529s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.085s
  Precision update:                                    0.075s
  ARG update:                                          0.351s

Length of refined path (in blocks):                    2633 (count: 46, min: 4, max: 115, avg: 57.24)
Number of affected states:                             2581 (count: 46, min: 0, max: 114, avg: 56.11)
Length (states) of path with itp 'true':                  6 (count: 46, min: 0, max: 6, avg: 0.13)
Length (states) of path with itp non-trivial itp:      2581 (count: 46, min: 0, max: 114, avg: 56.11)
Length (states) of path with itp 'false':                46 (count: 46, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 46, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2536 (count: 46, min: 0, max: 113, avg: 55.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                46
Number of successful refinements:     46
Number of failed refinements:         0
Max. size of reached set before ref.: 5381
Max. size of reached set after ref.:  331
Avg. size of reached set before ref.: 2024.02
Avg. size of reached set after ref.:  10.13

Total time for CEGAR algorithm:      23.644s
Time for refinements:                 4.039s
Average time for refinement:          0.087s
Max time for refinement:              0.202s

Code Coverage
-----------------------------
  Function coverage:      0.381
  Visited lines:          1960
  Total lines:            4013
  Line coverage:          0.488
  Visited conditions:     262
  Total conditions:       920
  Condition coverage:     0.285

CPAchecker general statistics
-----------------------------
Number of program locations:     5322
Number of CFA edges:             6259
Number of relevant variables:    693
Number of functions:             160
Number of loops:                 38
Size of reached set:             4182
  Number of reached locations:   1069 (20%)
    Avg states per location:     3
    Max states per location:     361 (at node N366)
  Number of reached functions:   61 (38%)
  Number of partitions:          4182
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          6.648s
  Time for loading CPAs:          0.976s
  Time for loading parser:        0.760s
  Time for CFA construction:      4.748s
    Time for parsing file(s):     1.152s
    Time for AST to CFA:          1.769s
    Time for CFA sanity check:    0.390s
    Time for post-processing:     1.177s
      Time for var class.:        0.645s
Time for Analysis:               23.644s
CPU time for analysis:           23.640s
Total time for CPAchecker:       30.296s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.171s

Time for Garbage Collector:       0.717s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     50MB (    48 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8070MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
