scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-net-pppox_false-termination.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9qpatb9l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

lines 4827-4828: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val),
                               "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4830-4831: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val),
                               "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4837-4838: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val),
                               "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 4825: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4914: Function pointer *((pppox_protos[protocol])->create) with type int (*)(struct net *, struct socket *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4862: Function pointer *((pppox_protos[__CPAchecker_TMP_2])->ioctl) with type int (*)(struct socket *, unsigned int, unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sock_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sock_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_int to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            394 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  345 (88%)
  Because of loop head:            40 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (2%)
  Times precision was empty:       72 (18%)
  Times precision was {false}:     29 (7%)
  Times result was cached:         142 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      151 (38%)
  Times result was 'false':        28 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         392
  BDD entailment checks:           156
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       8
Number of predicates discovered:          21
Number of abstraction locations:          17
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         1002
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 5.57
Number of irrelevant predicates:          277 (28%)
Number of preds handled by boolean abs:   511 (51%)
  Total number of models for allsat:      597
  Max number of models for allsat:        24
  Avg number of models for allsat:        3.95

Time for post operator:                  0.550s
  Time for path formula creation:        0.527s
Time for strengthen operator:            0.033s
Time for prec operator:                  1.238s
  Time for abstraction:                  1.202s (Max:     0.035s, Count: 394)
    Boolean abstraction:                 0.509s
    Solving time:                        0.226s (Max:     0.013s)
    Model enumeration time:              0.132s
    Time for BDD construction:           0.080s (Max:     0.015s)
Time for merge operator:                 0.017s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.358s

Number of path formula cache hits:   1976 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.493s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1246
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         441 (count: 1578, min: 0, max: 441, avg: 0.28)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.054s
Automaton transfers with branching:                0
Automaton transfer successors:                         2832 (count: 2832, min: 1, max: 1, avg: 1.00) [1 x 2832]

CPA algorithm statistics
------------------------
Number of iterations:            1665
Max size of waitlist:            7
Average size of waitlist:        3
Number of computed successors:   1896
Max successors for one state:    2
Number of times merged:          118
Number of times stopped:         190
Number of times breaked:         9

Total time for CPA algorithm:         2.517s (Max:     0.523s)
  Time for choose from waitlist:      0.006s
  Time for precision adjustment:      1.393s
  Time for transfer relation:         0.909s
  Time for merge operator:            0.038s
  Time for stop operator:             0.062s
  Time for adding to reached set:     0.022s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 127 (count: 9, min: 5, max: 23, avg: 14.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.210s
  Counterexample analysis:                             0.119s (Max:     0.021s, Calls: 9)
    Refinement sat check:                              0.046s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.014s
  ARG update:                                          0.025s

Length of refined path (in blocks):                     118 (count: 9, min: 4, max: 22, avg: 13.11)
Number of affected states:                              103 (count: 9, min: 3, max: 18, avg: 11.44)
Length (states) of path with itp 'true':                  6 (count: 9, min: 0, max: 3, avg: 0.67)
Length (states) of path with itp non-trivial itp:       103 (count: 9, min: 3, max: 18, avg: 11.44)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          34 (count: 9, min: 0, max: 10, avg: 3.78)
Equal non-trivial interpolants along paths:              60 (count: 9, min: 2, max: 9, avg: 6.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 333
Max. size of reached set after ref.:  46
Avg. size of reached set before ref.: 187.56
Avg. size of reached set after ref.:  12.56

Total time for CEGAR algorithm:       2.768s
Time for refinements:                 0.251s
Average time for refinement:          0.027s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          801
  Total lines:            874
  Line coverage:          0.916
  Visited conditions:     26
  Total conditions:       48
  Condition coverage:     0.542

CPAchecker general statistics
-----------------------------
Number of program locations:     977
Number of CFA edges:             997
Number of relevant variables:    35
Number of functions:             19
Number of loops:                 2
Size of reached set:             104
  Number of reached locations:   91 (9%)
    Avg states per location:     1
    Max states per location:     3 (at node N127)
  Number of reached functions:   9 (47%)
  Number of partitions:          104
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.444s
  Time for loading CPAs:          1.011s
  Time for loading parser:        0.772s
  Time for CFA construction:      2.486s
    Time for parsing file(s):     0.907s
    Time for AST to CFA:          0.806s
    Time for CFA sanity check:    0.105s
    Time for post-processing:     0.482s
      Time for var class.:        0.167s
Time for Analysis:                2.768s
CPU time for analysis:            2.770s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.217s
Total CPU time for CPAchecker:    7.200s
Time for statistics:              0.086s

Time for Garbage Collector:       0.133s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     33MB (    31 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    24 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8036MB (  7664 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
