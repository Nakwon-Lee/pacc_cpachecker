scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-scsi-dc395x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rkqy8rug/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

lines 4726-4750: Dead code detected: __asm__ volatile (""
                         "771:\n\t"
                         "call *%c[paravirt_opptr];"
                         "\n"
                         "772:\n"
                         ".pushsection .parainstructions,\"a\"\n"
                         " "
                         ".balign 8"
                         " "
                         "\n"
                         " "
                         ".quad"
                         " "
                         " 771b\n"
                         "  .byte "
                         "%c[paravirt_typenum]"
                         "\n"
                         "  .byte 772b-771b\n"
                         "  .short "
                         "%c[paravirt_clobber]"
                         "\n"
                         ".popsection\n"
                         "": "=a" (__eax): [paravirt_typenum] "i" ((unsigned long )((unsigned int )(& ((struct paravirt_patch_template *)0)->pv_irq_ops.save_fl.func)) / sizeof(void *)),
                         [paravirt_opptr] "i" (& pv_irq_ops.save_fl.func), [paravirt_clobber] "i" (1): "memory",
                         "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6185: Dead code detected: __mptr___2 = (struct list_head const *)i->list.next; (CFACreationUtils.addEdgeToCFA, INFO)

line 10279: Dead code detected: [(((int)(*((cmd->sense_buffer) + 2))) & 15) == 2] (CFACreationUtils.addEdgeToCFA, INFO)

line 10279: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 2)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10282: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 6)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10285: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 5)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10288: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 3)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10291: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 4)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10280: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10283: Dead code detected: Goto: case_6 (CFACreationUtils.addEdgeToCFA, INFO)

line 10286: Dead code detected: Goto: case_5 (CFACreationUtils.addEdgeToCFA, INFO)

line 10289: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 10292: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_5 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_6 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13217: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13280: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6991: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5290-5292: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *dev, struct page *page, unsigned long offset, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5504: Function pointer *(ops->sync_sg_for_cpu) with type void (*)(struct device *dev, struct scatterlist *sg, int nents, enum dma_data_direction dir) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5433: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *dev, dma_addr_t dma_handle, size_t size, enum dma_data_direction dir) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5362: Function pointer *(ops->unmap_page) with type void (*)(struct device *dev, dma_addr_t dma_handle, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10737: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10682: Function pointer *(p->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10615: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7846: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7846: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7850: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7850: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20701 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17860 (86%)
  Because of loop head:            2767 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         74 (0%)
  Times precision was empty:       6964 (34%)
  Times precision was {false}:     267 (1%)
  Times result was cached:         12904 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      566 (3%)
  Times result was 'false':        330 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         10803
  BDD entailment checks:           4001
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          3
Number of abstraction locations:          133
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         26762
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 32.13
Number of irrelevant predicates:          5992 (22%)
Number of preds handled by boolean abs:   761 (3%)
  Total number of models for allsat:      565
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.816s
  Time for path formula creation:        4.682s
Time for strengthen operator:            0.283s
Time for prec operator:                  7.951s
  Time for abstraction:                  7.229s (Max:     0.101s, Count: 20701)
    Boolean abstraction:                 1.271s
    Solving time:                        1.418s (Max:     0.053s)
    Model enumeration time:              0.105s
    Time for BDD construction:           0.069s (Max:     0.009s)
Time for merge operator:                 0.186s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     1.523s

Number of path formula cache hits:   147796 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.223s

Total number of created targets for pointer analysis: 530
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *(struct_ScsiReqBlk)* is 2
   Number of created targets for uf: *signed_int is 31
   Number of created targets for uf: *unsigned_char is 13
   Number of created targets for uf: *(struct_list_head)* is 6
   Number of created targets for uf: *(struct_AdapterCtlBlk)* is 2
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1135 (count: 15703, min: 0, max: 118, avg: 0.07)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.548s
  Time for transition matches:                         0.323s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       140853 (count: 140853, min: 1, max: 1, avg: 1.00) [1 x 140853]

CPA algorithm statistics
------------------------
Number of iterations:            80708
Max size of waitlist:            151
Average size of waitlist:        32
Number of computed successors:   91339
Max successors for one state:    2
Number of times merged:          3401
Number of times stopped:         6350
Number of times breaked:         74

Total time for CPA algorithm:        19.977s (Max:     1.063s)
  Time for choose from waitlist:      0.159s
  Time for precision adjustment:      9.313s
  Time for transfer relation:         8.405s
  Time for merge operator:            0.399s
  Time for stop operator:             0.390s
  Time for adding to reached set:     0.316s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   74
Avg. length of target path (in blocks):                1656 (count: 74, min: 8, max: 36, avg: 22.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.274s
  Counterexample analysis:                             1.623s (Max:     0.051s, Calls: 74)
    Refinement sat check:                              1.235s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.100s
  Precision update:                                    0.100s
  ARG update:                                          0.361s

Length of refined path (in blocks):                    1582 (count: 74, min: 7, max: 35, avg: 21.38)
Number of affected states:                             1508 (count: 74, min: 6, max: 34, avg: 20.38)
Length (states) of path with itp 'true':                  0 (count: 74, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1508 (count: 74, min: 6, max: 34, avg: 20.38)
Length (states) of path with itp 'false':                74 (count: 74, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 74, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1434 (count: 74, min: 5, max: 33, avg: 19.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                74
Number of successful refinements:     74
Number of failed refinements:         0
Max. size of reached set before ref.: 2446
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1119.74
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      22.510s
Time for refinements:                 2.523s
Average time for refinement:          0.034s
Max time for refinement:              0.091s

Code Coverage
-----------------------------
  Function coverage:      0.469
  Visited lines:          1820
  Total lines:            4449
  Line coverage:          0.409
  Visited conditions:     276
  Total conditions:       990
  Condition coverage:     0.279

CPAchecker general statistics
-----------------------------
Number of program locations:     6354
Number of CFA edges:             7258
Number of relevant variables:    976
Number of functions:             162
Number of loops:                 64
Size of reached set:             2020
  Number of reached locations:   955 (15%)
    Avg states per location:     2
    Max states per location:     27 (at node N1575)
  Number of reached functions:   76 (47%)
  Number of partitions:          2020
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        116

Time for analysis setup:          7.750s
  Time for loading CPAs:          1.360s
  Time for loading parser:        0.754s
  Time for CFA construction:      5.462s
    Time for parsing file(s):     1.243s
    Time for AST to CFA:          1.914s
    Time for CFA sanity check:    0.495s
    Time for post-processing:     1.630s
      Time for var class.:        0.802s
Time for Analysis:               22.510s
CPU time for analysis:           22.520s
Total time for CPAchecker:       30.265s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.141s

Time for Garbage Collector:       0.742s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     55MB (    53 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             47MB (    44 MiB) max;     40MB (    38 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
