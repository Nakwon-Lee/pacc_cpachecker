scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-scsi-dc395x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9qsqggky/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

lines 4726-4750: Dead code detected: __asm__ volatile (""
                         "771:\n\t"
                         "call *%c[paravirt_opptr];"
                         "\n"
                         "772:\n"
                         ".pushsection .parainstructions,\"a\"\n"
                         " "
                         ".balign 8"
                         " "
                         "\n"
                         " "
                         ".quad"
                         " "
                         " 771b\n"
                         "  .byte "
                         "%c[paravirt_typenum]"
                         "\n"
                         "  .byte 772b-771b\n"
                         "  .short "
                         "%c[paravirt_clobber]"
                         "\n"
                         ".popsection\n"
                         "": "=a" (__eax): [paravirt_typenum] "i" ((unsigned long )((unsigned int )(& ((struct paravirt_patch_template *)0)->pv_irq_ops.save_fl.func)) / sizeof(void *)),
                         [paravirt_opptr] "i" (& pv_irq_ops.save_fl.func), [paravirt_clobber] "i" (1): "memory",
                         "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6185: Dead code detected: __mptr___2 = (struct list_head const *)i->list.next; (CFACreationUtils.addEdgeToCFA, INFO)

line 10279: Dead code detected: [(((int)(*((cmd->sense_buffer) + 2))) & 15) == 2] (CFACreationUtils.addEdgeToCFA, INFO)

line 10279: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 2)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10282: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 6)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10285: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 5)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10288: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 3)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10291: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 4)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10280: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10283: Dead code detected: Goto: case_6 (CFACreationUtils.addEdgeToCFA, INFO)

line 10286: Dead code detected: Goto: case_5 (CFACreationUtils.addEdgeToCFA, INFO)

line 10289: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 10292: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_5 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_6 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13217: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13280: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6991: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5290-5292: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *dev, struct page *page, unsigned long offset, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5504: Function pointer *(ops->sync_sg_for_cpu) with type void (*)(struct device *dev, struct scatterlist *sg, int nents, enum dma_data_direction dir) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5433: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *dev, dma_addr_t dma_handle, size_t size, enum dma_data_direction dir) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5362: Function pointer *(ops->unmap_page) with type void (*)(struct device *dev, dma_addr_t dma_handle, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10737: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10682: Function pointer *(p->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10615: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7846: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7846: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7850: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7850: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5362: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5433: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_kunmap_atomic_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_kmap_atomic_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10615: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5504: Ignoring function call through function pointer *(ops->sync_sg_for_cpu): (*(ops->sync_sg_for_cpu))(dev, sg, nelems, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_sg_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10682: Ignoring function call through function pointer *(p->scsi_done): (*(p->scsi_done))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10737: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3684496 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3436058 (93%)
  Because of loop head:            248184 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         254 (0%)
  Times precision was empty:       1298722 (35%)
  Times precision was {false}:     3145 (0%)
  Times result was cached:         2377877 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4752 (0%)
  Times result was 'false':        8781 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1760070
  BDD entailment checks:           682324
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          5
Number of abstraction locations:          394
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         5083999
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 643.79
Number of irrelevant predicates:          2398523 (47%)
Number of preds handled by boolean abs:   6286 (0%)
  Total number of models for allsat:      4696
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                125.353s
  Time for path formula creation:      116.426s
Time for strengthen operator:           15.711s
Time for prec operator:                299.353s
  Time for abstraction:                252.827s (Max:     0.704s, Count: 3684496)
    Boolean abstraction:                 7.124s
    Solving time:                       10.172s (Max:     0.067s)
    Model enumeration time:              0.536s
    Time for BDD construction:           0.188s (Max:     0.010s)
Time for merge operator:                 5.445s
Time for coverage check:                 0.746s
  Time for BDD entailment checks:        0.513s
Total time for SMT solver (w/o itp):    10.708s

Number of path formula cache hits:   23795317 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.318s

Total number of created targets for pointer analysis: 48478
   Number of created targets for uf: *unsigned_short_int is 75
   Number of created targets for uf: *(struct_ScsiReqBlk)* is 2
   Number of created targets for uf: *signed_int is 31
   Number of created targets for uf: *unsigned_char is 473
   Number of created targets for uf: *(struct_list_head)* is 12
   Number of created targets for uf: *unsigned_int is 2
   Number of created targets for uf: *(struct_AdapterCtlBlk)* is 97
   Number of created targets for uf: *unsigned_long_int is 31


Number of BDD nodes:                               210
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9477 (count: 2027640, min: 0, max: 66, avg: 0.00)
Time for BDD node cleanup:                             0.287s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 26.705s
  Time for transition matches:                        14.031s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     19913750 (count: 19913750, min: 1, max: 1, avg: 1.00) [1 x 19913750]

CPA algorithm statistics
------------------------
Number of iterations:            12967840
Max size of waitlist:            1887
Average size of waitlist:        984
Number of computed successors:   14308724
Max successors for one state:    2
Number of times merged:          538873
Number of times stopped:         1052044
Number of times breaked:         254

Total time for CPA algorithm:       851.944s (Max:     7.739s)
  Time for choose from waitlist:      4.827s
  Time for precision adjustment:    401.096s
  Time for transfer relation:       366.559s
  Time for merge operator:           12.393s
  Time for stop operator:            13.784s
  Time for adding to reached set:    18.953s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   254
Avg. length of target path (in blocks):                8445 (count: 254, min: 8, max: 48, avg: 33.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.516s
  Counterexample analysis:                             3.917s (Max:     0.048s, Calls: 254)
    Refinement sat check:                              3.000s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.125s
  Precision update:                                    0.180s
  ARG update:                                         30.162s

Length of refined path (in blocks):                    8152 (count: 254, min: 7, max: 47, avg: 32.09)
Number of affected states:                             7878 (count: 254, min: 2, max: 46, avg: 31.02)
Length (states) of path with itp 'true':                 20 (count: 254, min: 0, max: 16, avg: 0.08)
Length (states) of path with itp non-trivial itp:      7878 (count: 254, min: 2, max: 46, avg: 31.02)
Length (states) of path with itp 'false':               254 (count: 254, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 254, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            7624 (count: 254, min: 1, max: 45, avg: 30.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                254
Number of successful refinements:     254
Number of failed refinements:         0
Max. size of reached set before ref.: 97700
Max. size of reached set after ref.:  65634
Avg. size of reached set before ref.: 52338.72
Avg. size of reached set after ref.:  386.26

Total time for CEGAR algorithm:     892.887s
Time for refinements:                40.852s
Average time for refinement:          0.160s
Max time for refinement:              0.408s

Code Coverage
-----------------------------
  Function coverage:      0.833
  Visited lines:          3637
  Total lines:            4449
  Line coverage:          0.817
  Visited conditions:     782
  Total conditions:       990
  Condition coverage:     0.790

CPAchecker general statistics
-----------------------------
Number of program locations:     6354
Number of CFA edges:             7258
Number of relevant variables:    976
Number of functions:             162
Number of loops:                 64
Size of reached set:             51975
  Number of reached locations:   2819 (44%)
    Avg states per location:     18
    Max states per location:     1336 (at node N217)
  Number of reached functions:   135 (83%)
  Number of partitions:          51951
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3740 (before line 9716), Function msgin_phase0 called from node N6640, stack depth 4 [1477fc96], stack [main, dc395x_interrupt, dc395x_handle_interrupt, msgin_phase0]])
  Number of target states:       0
  Size of final wait list        1099

Time for analysis setup:          7.335s
  Time for loading CPAs:          1.197s
  Time for loading parser:        0.764s
  Time for CFA construction:      5.214s
    Time for parsing file(s):     1.293s
    Time for AST to CFA:          1.919s
    Time for CFA sanity check:    0.451s
    Time for post-processing:     1.331s
      Time for var class.:        0.656s
Time for Analysis:              892.887s
CPU time for analysis:          892.800s
Total time for CPAchecker:      900.227s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.904s

Time for Garbage Collector:     119.310s (in 2356 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                443MB (   423 MiB) max;    218MB (   208 MiB) avg;    459MB (   438 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     40MB (    38 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           455MB (   434 MiB) max;    332MB (   317 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    46 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8089MB (  7714 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
