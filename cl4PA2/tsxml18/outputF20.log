scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-scsi-dc395x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6jkz0h0h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

lines 4726-4750: Dead code detected: __asm__ volatile (""
                         "771:\n\t"
                         "call *%c[paravirt_opptr];"
                         "\n"
                         "772:\n"
                         ".pushsection .parainstructions,\"a\"\n"
                         " "
                         ".balign 8"
                         " "
                         "\n"
                         " "
                         ".quad"
                         " "
                         " 771b\n"
                         "  .byte "
                         "%c[paravirt_typenum]"
                         "\n"
                         "  .byte 772b-771b\n"
                         "  .short "
                         "%c[paravirt_clobber]"
                         "\n"
                         ".popsection\n"
                         "": "=a" (__eax): [paravirt_typenum] "i" ((unsigned long )((unsigned int )(& ((struct paravirt_patch_template *)0)->pv_irq_ops.save_fl.func)) / sizeof(void *)),
                         [paravirt_opptr] "i" (& pv_irq_ops.save_fl.func), [paravirt_clobber] "i" (1): "memory",
                         "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6185: Dead code detected: __mptr___2 = (struct list_head const *)i->list.next; (CFACreationUtils.addEdgeToCFA, INFO)

line 10279: Dead code detected: [(((int)(*((cmd->sense_buffer) + 2))) & 15) == 2] (CFACreationUtils.addEdgeToCFA, INFO)

line 10279: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 2)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10282: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 6)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10285: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 5)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10288: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 3)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10291: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 4)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10280: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10283: Dead code detected: Goto: case_6 (CFACreationUtils.addEdgeToCFA, INFO)

line 10286: Dead code detected: Goto: case_5 (CFACreationUtils.addEdgeToCFA, INFO)

line 10289: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 10292: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_5 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_6 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13217: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13280: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6991: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5290-5292: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *dev, struct page *page, unsigned long offset, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5504: Function pointer *(ops->sync_sg_for_cpu) with type void (*)(struct device *dev, struct scatterlist *sg, int nents, enum dma_data_direction dir) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5433: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *dev, dma_addr_t dma_handle, size_t size, enum dma_data_direction dir) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5362: Function pointer *(ops->unmap_page) with type void (*)(struct device *dev, dma_addr_t dma_handle, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10737: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10682: Function pointer *(p->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10615: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7846: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7846: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7850: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7850: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5362: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_kmap_atomic_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_kunmap_atomic_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10737: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10682: Ignoring function call through function pointer *(p->scsi_done): (*(p->scsi_done))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2618025 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2440623 (93%)
  Because of loop head:            176831 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         571 (0%)
  Times precision was empty:       433454 (17%)
  Times precision was {false}:     1752 (0%)
  Times result was cached:         2170977 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11842 (0%)
  Times result was 'false':        11788 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1114475
  BDD entailment checks:           345687
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       75
Number of predicates discovered:          6
Number of abstraction locations:          490
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         5154156
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 379.15
Number of irrelevant predicates:          1615697 (31%)
Number of preds handled by boolean abs:   22366 (0%)
  Total number of models for allsat:      11603
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                181.300s
  Time for path formula creation:      174.581s
Time for strengthen operator:           14.312s
Time for prec operator:                343.066s
  Time for abstraction:                306.299s (Max:     2.899s, Count: 2618025)
    Boolean abstraction:                23.718s
    Solving time:                       24.852s (Max:     0.050s)
    Model enumeration time:              1.720s
    Time for BDD construction:           0.307s (Max:     0.011s)
Time for merge operator:                 7.738s
Time for coverage check:                 0.575s
  Time for BDD entailment checks:        0.405s
Total time for SMT solver (w/o itp):    26.572s

Number of path formula cache hits:   15393620 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   101.793s

Total number of created targets for pointer analysis: 526349
   Number of created targets for uf: *unsigned_short_int is 8
   Number of created targets for uf: *(struct_ScsiReqBlk)* is 43
   Number of created targets for uf: *signed_int is 1141
   Number of created targets for uf: *unsigned_char is 5299
   Number of created targets for uf: *(struct_list_head)* is 410
   Number of created targets for uf: *unsigned_int is 25
   Number of created targets for uf: *(struct_AdapterCtlBlk)* is 5
   Number of created targets for uf: *unsigned_long_int is 1213


Number of BDD nodes:                               221
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       23527 (count: 861810, min: 0, max: 665, avg: 0.03)
Time for BDD node cleanup:                             0.192s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.324s
  Time for transition matches:                        10.498s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                     15072698 (count: 15072698, min: 1, max: 1, avg: 1.00) [1 x 15072698]

CPA algorithm statistics
------------------------
Number of iterations:            9515000
Max size of waitlist:            4245
Average size of waitlist:        1486
Number of computed successors:   10653007
Max successors for one state:    2
Number of times merged:          384394
Number of times stopped:         708438
Number of times breaked:         571

Total time for CPA algorithm:       848.669s (Max:    14.986s)
  Time for choose from waitlist:      3.266s
  Time for precision adjustment:    428.559s
  Time for transfer relation:       352.237s
  Time for merge operator:           12.427s
  Time for stop operator:            13.400s
  Time for adding to reached set:    14.512s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   571
Avg. length of target path (in blocks):               22638 (count: 571, min: 5, max: 99, avg: 39.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  36.982s
  Counterexample analysis:                            10.146s (Max:     0.049s, Calls: 571)
    Refinement sat check:                              7.523s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.173s
  Precision update:                                    0.623s
  ARG update:                                         25.755s

Length of refined path (in blocks):                   17110 (count: 571, min: 4, max: 98, avg: 29.96)
Number of affected states:                            12259 (count: 571, min: 2, max: 97, avg: 21.47)
Length (states) of path with itp 'true':               4280 (count: 571, min: 0, max: 22, avg: 7.50)
Length (states) of path with itp non-trivial itp:     12259 (count: 571, min: 2, max: 97, avg: 21.47)
Length (states) of path with itp 'false':               571 (count: 571, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 571, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11688 (count: 571, min: 1, max: 96, avg: 20.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                571
Number of successful refinements:     571
Number of failed refinements:         0
Max. size of reached set before ref.: 103071
Max. size of reached set after ref.:  7296
Avg. size of reached set before ref.: 19229.47
Avg. size of reached set after ref.:  1996.13

Total time for CEGAR algorithm:     893.185s
Time for refinements:                43.732s
Average time for refinement:          0.076s
Max time for refinement:              0.765s

Code Coverage
-----------------------------
  Function coverage:      0.753
  Visited lines:          3389
  Total lines:            4449
  Line coverage:          0.762
  Visited conditions:     724
  Total conditions:       990
  Condition coverage:     0.731

CPAchecker general statistics
-----------------------------
Number of program locations:     6354
Number of CFA edges:             7258
Number of relevant variables:    976
Number of functions:             162
Number of loops:                 64
Size of reached set:             92540
  Number of reached locations:   2532 (40%)
    Avg states per location:     36
    Max states per location:     2671 (at node N211)
  Number of reached functions:   122 (75%)
  Number of partitions:          92498
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6367 (before lines 13039-13155), Function main called from node N6337, stack depth 1 [7a682d35], stack [main]])
  Number of target states:       0
  Size of final wait list        3795

Time for analysis setup:          7.251s
  Time for loading CPAs:          1.213s
  Time for loading parser:        0.682s
  Time for CFA construction:      5.209s
    Time for parsing file(s):     1.148s
    Time for AST to CFA:          1.926s
    Time for CFA sanity check:    0.530s
    Time for post-processing:     1.394s
      Time for var class.:        0.664s
Time for Analysis:              893.185s
CPU time for analysis:          893.120s
Total time for CPAchecker:      900.440s
Total CPU time for CPAchecker:  900.350s
Time for statistics:              1.163s

Time for Garbage Collector:     108.631s (in 1860 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1554MB (  1482 MiB) max;    549MB (   524 MiB) avg;   1625MB (  1550 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     41MB (    39 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:          1692MB (  1614 MiB) max;    798MB (   761 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8156MB (  7779 MiB) max;   8109MB (  7733 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
