scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-bluetooth-btmrvl_false-termination.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a1k7pcxe/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4689: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4691: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4693: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4687: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6063: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6069: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6075: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6060: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 6143: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6149: Dead code detected: tmp___8 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6155: Dead code detected: tmp___9 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6140: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5831: Function pointer *(priv->hw_host_to_card) with type int (*)(struct btmrvl_private *, u8 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6586: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_should_stop to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6230: Ignoring function call through function pointer *(priv->hw_process_int_status): (*(priv->hw_process_int_status))(priv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6230: Unsupported feature (recursion): btmrvl_service_main_thread(priv); (line was originally pointer call(btmrvl_service_main_thread) (*(priv->hw_process_int_status))(priv);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            18047 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16279 (90%)
  Because of loop head:            1725 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (0%)
  Times precision was empty:       4304 (24%)
  Times precision was {false}:     772 (4%)
  Times result was cached:         12760 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      211 (1%)
  Times result was 'false':        650 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         19859
  BDD entailment checks:           5191
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       95
Number of predicates discovered:          2
Number of abstraction locations:          90
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         13743
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.98
Number of irrelevant predicates:          4772 (35%)
Number of preds handled by boolean abs:   211 (2%)
  Total number of models for allsat:      211
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  8.381s
  Time for path formula creation:        8.091s
Time for strengthen operator:            0.325s
Time for prec operator:                  7.868s
  Time for abstraction:                  7.099s (Max:     0.037s, Count: 18047)
    Boolean abstraction:                 0.289s
    Solving time:                        1.617s (Max:     0.016s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.029s (Max:     0.012s)
Time for merge operator:                 0.402s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     1.641s

Number of path formula cache hits:   119945 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.113s

Total number of created targets for pointer analysis: 7680
   Number of created targets for uf: *char is 497


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         423 (count: 14626, min: 0, max: 54, avg: 0.03)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.554s
  Time for transition matches:                         0.265s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       153971 (count: 153971, min: 1, max: 1, avg: 1.00) [1 x 153971]

CPA algorithm statistics
------------------------
Number of iterations:            91363
Max size of waitlist:            92
Average size of waitlist:        40
Number of computed successors:   105613
Max successors for one state:    2
Number of times merged:          7334
Number of times stopped:         11228
Number of times breaked:         43

Total time for CPA algorithm:        24.640s (Max:     1.450s)
  Time for choose from waitlist:      0.214s
  Time for precision adjustment:      9.481s
  Time for transfer relation:        12.285s
  Time for merge operator:            0.728s
  Time for stop operator:             0.416s
  Time for adding to reached set:     0.463s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                 435 (count: 43, min: 4, max: 37, avg: 10.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.996s
  Counterexample analysis:                             0.506s (Max:     0.025s, Calls: 43)
    Refinement sat check:                              0.298s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.049s
  ARG update:                                          0.333s

Length of refined path (in blocks):                     392 (count: 43, min: 3, max: 36, avg: 9.12)
Number of affected states:                              349 (count: 43, min: 2, max: 35, avg: 8.12)
Length (states) of path with itp 'true':                  0 (count: 43, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       349 (count: 43, min: 2, max: 35, avg: 8.12)
Length (states) of path with itp 'false':                43 (count: 43, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 43, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             306 (count: 43, min: 1, max: 34, avg: 7.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 3738
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2112.14
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.815s
Time for refinements:                 1.174s
Average time for refinement:          0.027s
Max time for refinement:              0.105s

Code Coverage
-----------------------------
  Function coverage:      0.521
  Visited lines:          1695
  Total lines:            2358
  Line coverage:          0.719
  Visited conditions:     282
  Total conditions:       452
  Condition coverage:     0.624

CPAchecker general statistics
-----------------------------
Number of program locations:     2970
Number of CFA edges:             3224
Number of relevant variables:    490
Number of functions:             71
Number of loops:                 5
Size of reached set:             3043
  Number of reached locations:   719 (24%)
    Avg states per location:     4
    Max states per location:     63 (at node N21)
  Number of reached functions:   37 (52%)
  Number of partitions:          3043
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          5.684s
  Time for loading CPAs:          1.050s
  Time for loading parser:        0.659s
  Time for CFA construction:      3.824s
    Time for parsing file(s):     0.997s
    Time for AST to CFA:          1.486s
    Time for CFA sanity check:    0.226s
    Time for post-processing:     0.903s
      Time for var class.:        0.447s
Time for Analysis:               25.815s
CPU time for analysis:           25.820s
Total time for CPAchecker:       31.503s
Total CPU time for CPAchecker:   31.500s
Time for statistics:              0.154s

Time for Garbage Collector:       0.749s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     53MB (    50 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
