scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-bluetooth-btmrvl_false-termination.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ihtv5z9r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4689: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4691: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4693: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4687: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6063: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6069: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6075: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6060: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 6143: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6149: Dead code detected: tmp___8 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6155: Dead code detected: tmp___9 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6140: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5831: Function pointer *(priv->hw_host_to_card) with type int (*)(struct btmrvl_private *, u8 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6586: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_should_stop to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6230: Ignoring function call through function pointer *(priv->hw_process_int_status): (*(priv->hw_process_int_status))(priv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6230: Unsupported feature (recursion): btmrvl_service_main_thread(priv); (line was originally pointer call(btmrvl_service_main_thread) (*(priv->hw_process_int_status))(priv);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            8656 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8112 (94%)
  Because of loop head:            517 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (0%)
  Times precision was empty:       2353 (27%)
  Times precision was {false}:     107 (1%)
  Times result was cached:         6055 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      141 (2%)
  Times result was 'false':        205 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         8173
  BDD entailment checks:           1693
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       95
Number of predicates discovered:          2
Number of abstraction locations:          64
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         6303
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 25.42
Number of irrelevant predicates:          2703 (43%)
Number of preds handled by boolean abs:   141 (2%)
  Total number of models for allsat:      141
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.997s
  Time for path formula creation:        1.876s
Time for strengthen operator:            0.137s
Time for prec operator:                  3.032s
  Time for abstraction:                  2.556s (Max:     0.027s, Count: 8656)
    Boolean abstraction:                 0.263s
    Solving time:                        0.227s (Max:     0.012s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.032s (Max:     0.008s)
Time for merge operator:                 0.102s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     0.240s

Number of path formula cache hits:   73661 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.530s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         285 (count: 5432, min: 0, max: 38, avg: 0.05)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.235s
Automaton transfers with branching:                0
Automaton transfer successors:                        67725 (count: 67725, min: 1, max: 1, avg: 1.00) [1 x 67725]

CPA algorithm statistics
------------------------
Number of iterations:            40208
Max size of waitlist:            45
Average size of waitlist:        31
Number of computed successors:   46134
Max successors for one state:    2
Number of times merged:          3240
Number of times stopped:         4881
Number of times breaked:         27

Total time for CPA algorithm:         9.568s (Max:     0.945s)
  Time for choose from waitlist:      0.162s
  Time for precision adjustment:      3.856s
  Time for transfer relation:         4.036s
  Time for merge operator:            0.288s
  Time for stop operator:             0.226s
  Time for adding to reached set:     0.269s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 284 (count: 27, min: 4, max: 31, avg: 10.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.648s
  Counterexample analysis:                             0.323s (Max:     0.027s, Calls: 27)
    Refinement sat check:                              0.218s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.031s
  ARG update:                                          0.234s

Length of refined path (in blocks):                     257 (count: 27, min: 3, max: 30, avg: 9.52)
Number of affected states:                              230 (count: 27, min: 2, max: 29, avg: 8.52)
Length (states) of path with itp 'true':                  0 (count: 27, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       230 (count: 27, min: 2, max: 29, avg: 8.52)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 27, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             203 (count: 27, min: 1, max: 28, avg: 7.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 2133
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1440.30
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      10.361s
Time for refinements:                 0.790s
Average time for refinement:          0.029s
Max time for refinement:              0.065s

Code Coverage
-----------------------------
  Function coverage:      0.521
  Visited lines:          1659
  Total lines:            2358
  Line coverage:          0.704
  Visited conditions:     260
  Total conditions:       452
  Condition coverage:     0.575

CPAchecker general statistics
-----------------------------
Number of program locations:     2970
Number of CFA edges:             3224
Number of relevant variables:    490
Number of functions:             71
Number of loops:                 5
Size of reached set:             2242
  Number of reached locations:   688 (23%)
    Avg states per location:     3
    Max states per location:     36 (at node N143)
  Number of reached functions:   37 (52%)
  Number of partitions:          2242
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          5.816s
  Time for loading CPAs:          1.094s
  Time for loading parser:        0.673s
  Time for CFA construction:      3.910s
    Time for parsing file(s):     1.045s
    Time for AST to CFA:          1.505s
    Time for CFA sanity check:    0.227s
    Time for post-processing:     0.923s
      Time for var class.:        0.418s
Time for Analysis:               10.361s
CPU time for analysis:           10.360s
Total time for CPAchecker:       16.182s
Total CPU time for CPAchecker:   16.160s
Time for statistics:              0.143s

Time for Garbage Collector:       0.377s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     44MB (    42 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8062MB (  7689 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
