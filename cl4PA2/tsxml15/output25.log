scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-ir-usb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0x22d4p_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5004: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5067: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6797 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5762 (85%)
  Because of loop head:            965 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70 (1%)
  Times precision was empty:       1579 (23%)
  Times precision was {false}:     141 (2%)
  Times result was cached:         4117 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      960 (14%)
  Times result was 'false':        605 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         12579
  BDD entailment checks:           2007
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          20
Number of abstraction locations:          50
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         22167
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 20.13
Number of irrelevant predicates:          7435 (34%)
Number of preds handled by boolean abs:   3207 (14%)
  Total number of models for allsat:      1805
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.88

Time for post operator:                  2.112s
  Time for path formula creation:        1.967s
Time for strengthen operator:            0.156s
Time for prec operator:                  6.559s
  Time for abstraction:                  6.202s (Max:     0.039s, Count: 6797)
    Boolean abstraction:                 1.995s
    Solving time:                        1.394s (Max:     0.017s)
    Model enumeration time:              0.259s
    Time for BDD construction:           0.161s (Max:     0.013s)
Time for merge operator:                 0.205s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.653s

Number of path formula cache hits:   70616 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.735s

Total number of created targets for pointer analysis: 26
   Number of created targets for uf: *unsigned_char is 8


Number of BDD nodes:                               1414
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2980 (count: 10562, min: 0, max: 512, avg: 0.28)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.394s
Automaton transfers with branching:                0
Automaton transfer successors:                        70387 (count: 70387, min: 1, max: 1, avg: 1.00) [1 x 70387]

CPA algorithm statistics
------------------------
Number of iterations:            47855
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   55134
Max successors for one state:    2
Number of times merged:          5286
Number of times stopped:         6251
Number of times breaked:         70

Total time for CPA algorithm:        13.790s (Max:     0.547s)
  Time for choose from waitlist:      0.093s
  Time for precision adjustment:      7.532s
  Time for transfer relation:         4.368s
  Time for merge operator:            0.528s
  Time for stop operator:             0.306s
  Time for adding to reached set:     0.275s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   70
Avg. length of target path (in blocks):                1745 (count: 70, min: 5, max: 34, avg: 24.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.016s
  Counterexample analysis:                             1.513s (Max:     0.049s, Calls: 70)
    Refinement sat check:                              0.915s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.096s
  ARG update:                                          0.230s

Length of refined path (in blocks):                    1515 (count: 70, min: 3, max: 33, avg: 21.64)
Number of affected states:                             1013 (count: 70, min: 1, max: 30, avg: 14.47)
Length (states) of path with itp 'true':                432 (count: 70, min: 0, max: 17, avg: 6.17)
Length (states) of path with itp non-trivial itp:      1013 (count: 70, min: 1, max: 30, avg: 14.47)
Length (states) of path with itp 'false':                70 (count: 70, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          74 (count: 70, min: 0, max: 4, avg: 1.06)
Equal non-trivial interpolants along paths:             869 (count: 70, min: 0, max: 27, avg: 12.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                70
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 1409
Max. size of reached set after ref.:  742
Avg. size of reached set before ref.: 933.89
Avg. size of reached set after ref.:  253.20

Total time for CEGAR algorithm:      16.091s
Time for refinements:                 2.233s
Average time for refinement:          0.031s
Max time for refinement:              0.064s

Code Coverage
-----------------------------
  Function coverage:      0.800
  Visited lines:          1093
  Total lines:            1140
  Line coverage:          0.959
  Visited conditions:     170
  Total conditions:       184
  Condition coverage:     0.924

CPAchecker general statistics
-----------------------------
Number of program locations:     1438
Number of CFA edges:             1532
Number of relevant variables:    112
Number of functions:             30
Number of loops:                 3
Size of reached set:             631
  Number of reached locations:   551 (38%)
    Avg states per location:     1
    Max states per location:     8 (at node N901)
  Number of reached functions:   24 (80%)
  Number of partitions:          628
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N940 (before line 4925), Function main called from node N867, stack depth 1 [1e044120], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.487s
  Time for loading CPAs:          0.950s
  Time for loading parser:        0.669s
  Time for CFA construction:      2.726s
    Time for parsing file(s):     0.875s
    Time for AST to CFA:          0.985s
    Time for CFA sanity check:    0.129s
    Time for post-processing:     0.518s
      Time for var class.:        0.230s
Time for Analysis:               16.091s
CPU time for analysis:           16.080s
Time for analyzing result:        0.001s
Total time for CPAchecker:       20.596s
Total CPU time for CPAchecker:   20.580s
Time for statistics:              0.107s

Time for Garbage Collector:       0.271s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     33MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
