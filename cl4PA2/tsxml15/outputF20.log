scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-ir-usb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yaz6jx3p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5004: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5067: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            3567 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2965 (83%)
  Because of loop head:            554 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (1%)
  Times precision was empty:       695 (19%)
  Times precision was {false}:     54 (2%)
  Times result was cached:         2404 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      414 (12%)
  Times result was 'false':        353 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         5323
  BDD entailment checks:           835
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          11
Number of abstraction locations:          50
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         9655
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 20.63
Number of irrelevant predicates:          1537 (16%)
Number of preds handled by boolean abs:   1169 (12%)
  Total number of models for allsat:      494
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.19

Time for post operator:                  1.710s
  Time for path formula creation:        1.637s
Time for strengthen operator:            0.075s
Time for prec operator:                  3.339s
  Time for abstraction:                  3.128s (Max:     0.042s, Count: 3567)
    Boolean abstraction:                 0.807s
    Solving time:                        0.576s (Max:     0.016s)
    Model enumeration time:              0.055s
    Time for BDD construction:           0.088s (Max:     0.014s)
Time for merge operator:                 0.145s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     0.631s

Number of path formula cache hits:   29659 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.481s

Total number of created targets for pointer analysis: 19
   Number of created targets for uf: *unsigned_char is 20


Number of BDD nodes:                               372
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1128 (count: 4460, min: 0, max: 308, avg: 0.25)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.308s
Automaton transfers with branching:                0
Automaton transfer successors:                        32355 (count: 32355, min: 1, max: 1, avg: 1.00) [1 x 32355]

CPA algorithm statistics
------------------------
Number of iterations:            22654
Max size of waitlist:            20
Average size of waitlist:        7
Number of computed successors:   26296
Max successors for one state:    2
Number of times merged:          2244
Number of times stopped:         2833
Number of times breaked:         48

Total time for CPA algorithm:         8.170s (Max:     0.575s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:      3.883s
  Time for transfer relation:         3.182s
  Time for merge operator:            0.310s
  Time for stop operator:             0.200s
  Time for adding to reached set:     0.151s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                 853 (count: 48, min: 5, max: 30, avg: 17.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.883s
  Counterexample analysis:                             0.566s (Max:     0.030s, Calls: 48)
    Refinement sat check:                              0.383s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.098s
  Precision update:                                    0.019s
  ARG update:                                          0.138s

Length of refined path (in blocks):                     591 (count: 48, min: 3, max: 24, avg: 12.31)
Number of affected states:                              525 (count: 48, min: 1, max: 23, avg: 10.94)
Length (states) of path with itp 'true':                 18 (count: 48, min: 0, max: 11, avg: 0.38)
Length (states) of path with itp non-trivial itp:       525 (count: 48, min: 1, max: 23, avg: 10.94)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 48, min: 0, max: 3, avg: 0.21)
Equal non-trivial interpolants along paths:             467 (count: 48, min: 0, max: 22, avg: 9.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 1022
Max. size of reached set after ref.:  257
Avg. size of reached set before ref.: 478.94
Avg. size of reached set after ref.:  10.19

Total time for CEGAR algorithm:       9.224s
Time for refinements:                 1.041s
Average time for refinement:          0.021s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.800
  Visited lines:          1093
  Total lines:            1140
  Line coverage:          0.959
  Visited conditions:     170
  Total conditions:       184
  Condition coverage:     0.924

CPAchecker general statistics
-----------------------------
Number of program locations:     1438
Number of CFA edges:             1532
Number of relevant variables:    112
Number of functions:             30
Number of loops:                 3
Size of reached set:             611
  Number of reached locations:   551 (38%)
    Avg states per location:     1
    Max states per location:     6 (at node N901)
  Number of reached functions:   24 (80%)
  Number of partitions:          611
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.528s
  Time for loading CPAs:          0.895s
  Time for loading parser:        0.673s
  Time for CFA construction:      2.802s
    Time for parsing file(s):     0.927s
    Time for AST to CFA:          0.973s
    Time for CFA sanity check:    0.152s
    Time for post-processing:     0.539s
      Time for var class.:        0.246s
Time for Analysis:                9.229s
CPU time for analysis:            9.220s
Time for analyzing result:        0.001s
Total time for CPAchecker:       13.762s
Total CPU time for CPAchecker:   13.740s
Time for statistics:              0.115s

Time for Garbage Collector:       0.190s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     39MB (    37 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     31MB (    29 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8061MB (  7688 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
