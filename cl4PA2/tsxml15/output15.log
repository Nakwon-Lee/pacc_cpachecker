scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-ir-usb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gaa55qcl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5004: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5067: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16935 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14817 (87%)
  Because of loop head:            1949 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         169 (1%)
  Times precision was empty:       1983 (12%)
  Times precision was {false}:     171 (1%)
  Times result was cached:         13738 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1043 (6%)
  Times result was 'false':        1342 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         41734
  BDD entailment checks:           6834
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          20
Number of abstraction locations:          50
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         57964
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 47.75
Number of irrelevant predicates:          26213 (45%)
Number of preds handled by boolean abs:   2665 (5%)
  Total number of models for allsat:      1538
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.47

Time for post operator:                  3.715s
  Time for path formula creation:        3.515s
Time for strengthen operator:            0.297s
Time for prec operator:                  8.141s
  Time for abstraction:                  7.605s (Max:     0.030s, Count: 16935)
    Boolean abstraction:                 1.645s
    Solving time:                        1.365s (Max:     0.016s)
    Model enumeration time:              0.176s
    Time for BDD construction:           0.149s (Max:     0.012s)
Time for merge operator:                 0.386s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     1.541s

Number of path formula cache hits:   213857 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.928s

Total number of created targets for pointer analysis: 102
   Number of created targets for uf: *unsigned_char is 70


Number of BDD nodes:                               665
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2685 (count: 16370, min: 0, max: 229, avg: 0.16)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.714s
  Time for transition matches:                         0.288s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                       213167 (count: 213167, min: 1, max: 1, avg: 1.00) [1 x 213167]

CPA algorithm statistics
------------------------
Number of iterations:            145684
Max size of waitlist:            24
Average size of waitlist:        12
Number of computed successors:   168090
Max successors for one state:    2
Number of times merged:          17450
Number of times stopped:         19894
Number of times breaked:         169

Total time for CPA algorithm:        20.437s (Max:     0.596s)
  Time for choose from waitlist:      0.152s
  Time for precision adjustment:      9.718s
  Time for transfer relation:         7.583s
  Time for merge operator:            0.942s
  Time for stop operator:             0.454s
  Time for adding to reached set:     0.498s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   169
Avg. length of target path (in blocks):                5522 (count: 169, min: 5, max: 49, avg: 32.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.899s
  Counterexample analysis:                             4.097s (Max:     0.069s, Calls: 169)
    Refinement sat check:                              2.562s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.112s
  Precision update:                                    0.101s
  ARG update:                                          0.418s

Length of refined path (in blocks):                    4927 (count: 169, min: 3, max: 46, avg: 29.15)
Number of affected states:                             2613 (count: 169, min: 1, max: 30, avg: 15.46)
Length (states) of path with itp 'true':               2145 (count: 169, min: 0, max: 30, avg: 12.69)
Length (states) of path with itp non-trivial itp:      2613 (count: 169, min: 1, max: 30, avg: 15.46)
Length (states) of path with itp 'false':               169 (count: 169, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         328 (count: 169, min: 0, max: 4, avg: 1.94)
Equal non-trivial interpolants along paths:            2116 (count: 169, min: 0, max: 27, avg: 12.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                169
Number of successful refinements:     169
Number of failed refinements:         0
Max. size of reached set before ref.: 2974
Max. size of reached set after ref.:  2470
Avg. size of reached set before ref.: 2037.25
Avg. size of reached set after ref.:  1181.66

Total time for CEGAR algorithm:      26.029s
Time for refinements:                 5.413s
Average time for refinement:          0.032s
Max time for refinement:              0.091s

Code Coverage
-----------------------------
  Function coverage:      0.800
  Visited lines:          1092
  Total lines:            1140
  Line coverage:          0.958
  Visited conditions:     170
  Total conditions:       184
  Condition coverage:     0.924

CPAchecker general statistics
-----------------------------
Number of program locations:     1438
Number of CFA edges:             1532
Number of relevant variables:    112
Number of functions:             30
Number of loops:                 3
Size of reached set:             2260
  Number of reached locations:   550 (38%)
    Avg states per location:     4
    Max states per location:     19 (at node N901)
  Number of reached functions:   24 (80%)
  Number of partitions:          2237
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N888 (before lines 4872-4947), Function main called from node N867, stack depth 1 [94f6bfb], stack [main]])
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          4.229s
  Time for loading CPAs:          0.878s
  Time for loading parser:        0.654s
  Time for CFA construction:      2.578s
    Time for parsing file(s):     0.825s
    Time for AST to CFA:          0.897s
    Time for CFA sanity check:    0.151s
    Time for post-processing:     0.507s
      Time for var class.:        0.233s
Time for Analysis:               26.029s
CPU time for analysis:           26.030s
Total time for CPAchecker:       30.263s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.152s

Time for Garbage Collector:       0.602s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     45MB (    43 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8009MB (  7638 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
