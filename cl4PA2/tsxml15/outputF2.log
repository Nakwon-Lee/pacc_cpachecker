scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-ir-usb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g9oyhvsc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5004: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5067: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4562 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3869 (85%)
  Because of loop head:            653 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (1%)
  Times precision was empty:       817 (18%)
  Times precision was {false}:     144 (3%)
  Times result was cached:         3062 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      539 (12%)
  Times result was 'false':        290 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         6663
  BDD entailment checks:           1487
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          11
Number of abstraction locations:          50
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         11320
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 16.57
Number of irrelevant predicates:          3698 (33%)
Number of preds handled by boolean abs:   1320 (12%)
  Total number of models for allsat:      661
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.23

Time for post operator:                  2.751s
  Time for path formula creation:        2.606s
Time for strengthen operator:            0.131s
Time for prec operator:                  4.283s
  Time for abstraction:                  3.983s (Max:     0.022s, Count: 4562)
    Boolean abstraction:                 1.076s
    Solving time:                        0.905s (Max:     0.019s)
    Model enumeration time:              0.100s
    Time for BDD construction:           0.127s (Max:     0.012s)
Time for merge operator:                 0.219s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     1.005s

Number of path formula cache hits:   32268 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.360s

Total number of created targets for pointer analysis: 39
   Number of created targets for uf: *unsigned_char is 22


Number of BDD nodes:                               436
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1466 (count: 6444, min: 0, max: 224, avg: 0.23)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.280s
Automaton transfers with branching:                0
Automaton transfer successors:                        42276 (count: 42276, min: 1, max: 1, avg: 1.00) [1 x 42276]

CPA algorithm statistics
------------------------
Number of iterations:            27266
Max size of waitlist:            37
Average size of waitlist:        9
Number of computed successors:   31435
Max successors for one state:    2
Number of times merged:          2588
Number of times stopped:         3419
Number of times breaked:         40

Total time for CPA algorithm:        11.157s (Max:     0.759s)
  Time for choose from waitlist:      0.149s
  Time for precision adjustment:      5.000s
  Time for transfer relation:         4.597s
  Time for merge operator:            0.421s
  Time for stop operator:             0.207s
  Time for adding to reached set:     0.206s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                 781 (count: 40, min: 5, max: 36, avg: 19.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.947s
  Counterexample analysis:                             0.655s (Max:     0.031s, Calls: 40)
    Refinement sat check:                              0.437s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.051s
  ARG update:                                          0.133s

Length of refined path (in blocks):                     586 (count: 40, min: 3, max: 24, avg: 14.65)
Number of affected states:                              534 (count: 40, min: 1, max: 23, avg: 13.35)
Length (states) of path with itp 'true':                 12 (count: 40, min: 0, max: 11, avg: 0.30)
Length (states) of path with itp non-trivial itp:       534 (count: 40, min: 1, max: 23, avg: 13.35)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          10 (count: 40, min: 0, max: 3, avg: 0.25)
Equal non-trivial interpolants along paths:             484 (count: 40, min: 0, max: 22, avg: 12.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 1481
Max. size of reached set after ref.:  326
Avg. size of reached set before ref.: 689.20
Avg. size of reached set after ref.:  11.65

Total time for CEGAR algorithm:      12.230s
Time for refinements:                 1.071s
Average time for refinement:          0.026s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.800
  Visited lines:          1093
  Total lines:            1140
  Line coverage:          0.959
  Visited conditions:     170
  Total conditions:       184
  Condition coverage:     0.924

CPAchecker general statistics
-----------------------------
Number of program locations:     1438
Number of CFA edges:             1532
Number of relevant variables:    112
Number of functions:             30
Number of loops:                 3
Size of reached set:             625
  Number of reached locations:   551 (38%)
    Avg states per location:     1
    Max states per location:     6 (at node N901)
  Number of reached functions:   24 (80%)
  Number of partitions:          624
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N882 (before line 4865), Function main called from node N867, stack depth 1 [1e044120], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.669s
  Time for loading CPAs:          0.958s
  Time for loading parser:        0.671s
  Time for CFA construction:      2.909s
    Time for parsing file(s):     0.935s
    Time for AST to CFA:          1.021s
    Time for CFA sanity check:    0.154s
    Time for post-processing:     0.580s
      Time for var class.:        0.265s
Time for Analysis:               12.233s
CPU time for analysis:           12.230s
Time for analyzing result:        0.001s
Total time for CPAchecker:       16.908s
Total CPU time for CPAchecker:   16.900s
Time for statistics:              0.117s

Time for Garbage Collector:       0.232s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     40MB (    38 MiB) avg;     68MB (    64 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
