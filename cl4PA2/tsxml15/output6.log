scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-ir-usb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_am9lou7y/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5004: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5067: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16140 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14144 (88%)
  Because of loop head:            1831 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         165 (1%)
  Times precision was empty:       1863 (12%)
  Times precision was {false}:     169 (1%)
  Times result was cached:         13114 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      994 (6%)
  Times result was 'false':        1269 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         39873
  BDD entailment checks:           6475
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          20
Number of abstraction locations:          50
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         54666
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 47.00
Number of irrelevant predicates:          24942 (46%)
Number of preds handled by boolean abs:   2474 (5%)
  Total number of models for allsat:      1434
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.44

Time for post operator:                  3.881s
  Time for path formula creation:        3.658s
Time for strengthen operator:            0.274s
Time for prec operator:                  8.158s
  Time for abstraction:                  7.544s (Max:     0.037s, Count: 16140)
    Boolean abstraction:                 1.547s
    Solving time:                        1.338s (Max:     0.016s)
    Model enumeration time:              0.144s
    Time for BDD construction:           0.141s (Max:     0.010s)
Time for merge operator:                 0.372s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     1.482s

Number of path formula cache hits:   203363 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.063s

Total number of created targets for pointer analysis: 100
   Number of created targets for uf: *unsigned_char is 34


Number of BDD nodes:                               641
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2504 (count: 15536, min: 0, max: 145, avg: 0.16)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.551s
  Time for transition matches:                         0.277s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       203650 (count: 203650, min: 1, max: 1, avg: 1.00) [1 x 203650]

CPA algorithm statistics
------------------------
Number of iterations:            139146
Max size of waitlist:            23
Average size of waitlist:        12
Number of computed successors:   160567
Max successors for one state:    2
Number of times merged:          16699
Number of times stopped:         19015
Number of times breaked:         165

Total time for CPA algorithm:        20.247s (Max:     0.691s)
  Time for choose from waitlist:      0.181s
  Time for precision adjustment:      9.770s
  Time for transfer relation:         7.575s
  Time for merge operator:            0.851s
  Time for stop operator:             0.439s
  Time for adding to reached set:     0.409s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   165
Avg. length of target path (in blocks):                5449 (count: 165, min: 5, max: 49, avg: 33.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.760s
  Counterexample analysis:                             3.922s (Max:     0.063s, Calls: 165)
    Refinement sat check:                              2.434s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.139s
  Precision update:                                    0.121s
  ARG update:                                          0.420s

Length of refined path (in blocks):                    4851 (count: 164, min: 3, max: 46, avg: 29.58)
Number of affected states:                             2562 (count: 164, min: 1, max: 30, avg: 15.62)
Length (states) of path with itp 'true':               2125 (count: 164, min: 0, max: 30, avg: 12.96)
Length (states) of path with itp non-trivial itp:      2562 (count: 164, min: 1, max: 30, avg: 15.62)
Length (states) of path with itp 'false':               164 (count: 164, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         322 (count: 164, min: 0, max: 4, avg: 1.96)
Equal non-trivial interpolants along paths:            2076 (count: 164, min: 0, max: 27, avg: 12.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                165
Number of successful refinements:     164
Number of failed refinements:         0
Max. size of reached set before ref.: 2974
Max. size of reached set after ref.:  2470
Avg. size of reached set before ref.: 2053.57
Avg. size of reached set after ref.:  1210.70

Total time for CEGAR algorithm:      25.818s
Time for refinements:                 5.366s
Average time for refinement:          0.032s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.833
  Visited lines:          1089
  Total lines:            1140
  Line coverage:          0.955
  Visited conditions:     168
  Total conditions:       184
  Condition coverage:     0.913

CPAchecker general statistics
-----------------------------
Number of program locations:     1438
Number of CFA edges:             1532
Number of relevant variables:    112
Number of functions:             30
Number of loops:                 3
Size of reached set:             2175
  Number of reached locations:   550 (38%)
    Avg states per location:     3
    Max states per location:     16 (at node N901)
  Number of reached functions:   25 (83%)
  Number of partitions:          2153
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N888 (before lines 4872-4947), Function main called from node N867, stack depth 1 [1e044120], stack [main]])
  Number of target states:       1
  Size of final wait list        14

Time for analysis setup:          4.434s
  Time for loading CPAs:          0.890s
  Time for loading parser:        0.664s
  Time for CFA construction:      2.727s
    Time for parsing file(s):     0.861s
    Time for AST to CFA:          0.941s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.588s
      Time for var class.:        0.254s
Time for Analysis:               25.819s
CPU time for analysis:           25.820s
Total time for CPAchecker:       30.261s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.123s

Time for Garbage Collector:       0.610s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     45MB (    43 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
