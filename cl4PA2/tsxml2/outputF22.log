scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-mtd-sm_ftl.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wlglfpwv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5288: Dead code detected: tmp___9 = -22; (CFACreationUtils.addEdgeToCFA, INFO)

line 6642: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6705: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4737: Function pointer *(mtd->erase) with type int (*)(struct mtd_info *mtd, struct erase_info *instr) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4250: Function pointer *(mtd->read_oob) with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4461: Function pointer *(mtd->write_oob) with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strnlen to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4250: Ignoring function call through function pointer *(mtd->read_oob): ret = (*(mtd->read_oob))(mtd, tmp___9, &ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_in_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_in to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: lines 5020-5021: Unsupported feature (recursion): tmp___7 = sm_read_sector(ftl, 0, ftl->cis_block, ftl->cis_boffset, __CPAchecker_TMP_0, &oob); (line was originally tmp___7 = sm_read_sector(ftl, 0, ftl->cis_block, ftl->cis_boffset, (uint8_t *)ftl->cis_buffer,
                           & oob);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            19495 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15229 (78%)
  Because of loop head:            4134 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         132 (1%)
  Times precision was empty:       3712 (19%)
  Times precision was {false}:     255 (1%)
  Times result was cached:         14889 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      639 (3%)
  Times result was 'false':        645 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         18322
  BDD entailment checks:           5680
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          6
Number of abstraction locations:          105
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         35159
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 39.33
Number of irrelevant predicates:          8694 (25%)
Number of preds handled by boolean abs:   959 (3%)
  Total number of models for allsat:      650
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  3.508s
  Time for path formula creation:        3.334s
Time for strengthen operator:            0.244s
Time for prec operator:                  7.490s
  Time for abstraction:                  6.807s (Max:     0.031s, Count: 19495)
    Boolean abstraction:                 1.125s
    Solving time:                        1.086s (Max:     0.027s)
    Model enumeration time:              0.085s
    Time for BDD construction:           0.088s (Max:     0.012s)
Time for merge operator:                 0.181s
Time for coverage check:                 0.072s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     1.171s

Number of path formula cache hits:   168202 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.774s

Total number of created targets for pointer analysis: 736
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *((struct_attribute)*)* is 2
   Number of created targets for uf: *(struct_mtd_info)* is 2
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *(struct_ftl_zone)* is 2
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *(struct_attribute_group)* is 5
   Number of created targets for uf: *(struct_mtd_blktrans_dev)* is 17
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 11
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *unsigned_int is 17
   Number of created targets for uf: *char is 2


Number of BDD nodes:                               226
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1323 (count: 14534, min: 0, max: 98, avg: 0.09)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.574s
  Time for transition matches:                         0.226s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       160142 (count: 160142, min: 1, max: 1, avg: 1.00) [1 x 160142]

CPA algorithm statistics
------------------------
Number of iterations:            92677
Max size of waitlist:            46
Average size of waitlist:        16
Number of computed successors:   106068
Max successors for one state:    2
Number of times merged:          6321
Number of times stopped:         10258
Number of times breaked:         132

Total time for CPA algorithm:        18.131s (Max:     0.819s)
  Time for choose from waitlist:      0.139s
  Time for precision adjustment:      8.832s
  Time for transfer relation:         6.927s
  Time for merge operator:            0.429s
  Time for stop operator:             0.390s
  Time for adding to reached set:     0.366s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   132
Avg. length of target path (in blocks):                3434 (count: 132, min: 7, max: 62, avg: 26.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.283s
  Counterexample analysis:                             2.590s (Max:     0.045s, Calls: 132)
    Refinement sat check:                              1.983s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.137s
  Precision update:                                    0.154s
  ARG update:                                          0.298s

Length of refined path (in blocks):                    2943 (count: 132, min: 6, max: 61, avg: 22.30)
Number of affected states:                             2257 (count: 132, min: 1, max: 60, avg: 17.10)
Length (states) of path with itp 'true':                554 (count: 132, min: 0, max: 37, avg: 4.20)
Length (states) of path with itp non-trivial itp:      2257 (count: 132, min: 1, max: 60, avg: 17.10)
Length (states) of path with itp 'false':               132 (count: 132, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 132, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2125 (count: 132, min: 0, max: 59, avg: 16.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                132
Number of successful refinements:     132
Number of failed refinements:         0
Max. size of reached set before ref.: 2253
Max. size of reached set after ref.:  1512
Avg. size of reached set before ref.: 969.22
Avg. size of reached set after ref.:  264.30

Total time for CEGAR algorithm:      21.751s
Time for refinements:                 3.568s
Average time for refinement:          0.027s
Max time for refinement:              0.078s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          1502
  Total lines:            1968
  Line coverage:          0.763
  Visited conditions:     250
  Total conditions:       438
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     2614
Number of CFA edges:             2876
Number of relevant variables:    390
Number of functions:             65
Number of loops:                 20
Size of reached set:             2116
  Number of reached locations:   798 (31%)
    Avg states per location:     2
    Max states per location:     27 (at node N409)
  Number of reached functions:   45 (69%)
  Number of partitions:          2100
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1668 (before line 5861), Function sm_read called from node N2180, stack depth 2 [cdee14], stack [main, sm_read]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          5.172s
  Time for loading CPAs:          0.922s
  Time for loading parser:        0.652s
  Time for CFA construction:      3.488s
    Time for parsing file(s):     1.040s
    Time for AST to CFA:          1.190s
    Time for CFA sanity check:    0.232s
    Time for post-processing:     0.828s
      Time for var class.:        0.406s
Time for Analysis:               21.751s
CPU time for analysis:           21.740s
Total time for CPAchecker:       26.927s
Total CPU time for CPAchecker:   26.910s
Time for statistics:              0.094s

Time for Garbage Collector:       0.508s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     44MB (    42 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
