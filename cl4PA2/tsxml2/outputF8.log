scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-mtd-sm_ftl.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_klcndeda/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5288: Dead code detected: tmp___9 = -22; (CFACreationUtils.addEdgeToCFA, INFO)

line 6642: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6705: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4737: Function pointer *(mtd->erase) with type int (*)(struct mtd_info *mtd, struct erase_info *instr) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4250: Function pointer *(mtd->read_oob) with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4461: Function pointer *(mtd->write_oob) with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: lines 5020-5021: Unsupported feature (recursion): tmp___7 = sm_read_sector(ftl, 0, ftl->cis_block, ftl->cis_boffset, __CPAchecker_TMP_0, &oob); (line was originally tmp___7 = sm_read_sector(ftl, 0, ftl->cis_block, ftl->cis_boffset, (uint8_t *)ftl->cis_buffer,
                           & oob);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            96 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  79 (82%)
  Because of loop head:            13 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (4%)
  Times precision was empty:       54 (56%)
  Times precision was {false}:     8 (8%)
  Times result was cached:         18 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (17%)
  Times result was 'false':        8 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         38
  BDD entailment checks:           12
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       29
Number of predicates discovered:          3
Number of abstraction locations:          8
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         64
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.67
Number of irrelevant predicates:          19 (30%)
Number of preds handled by boolean abs:   24 (38%)
  Total number of models for allsat:      16
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.557s
  Time for path formula creation:        0.513s
Time for strengthen operator:            0.027s
Time for prec operator:                  0.150s
  Time for abstraction:                  0.138s (Max:     0.028s, Count: 96)
    Boolean abstraction:                 0.030s
    Solving time:                        0.028s (Max:     0.009s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.018s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):     0.030s

Number of path formula cache hits:   315 (24%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.495s

Total number of created targets for pointer analysis: 36
   Number of created targets for uf: *unsigned_char is 11
   Number of created targets for uf: *unsigned_int is 9


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 213, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                         1237 (count: 1237, min: 1, max: 1, avg: 1.00) [1 x 1237]

CPA algorithm statistics
------------------------
Number of iterations:            342
Max size of waitlist:            16
Average size of waitlist:        5
Number of computed successors:   394
Max successors for one state:    2
Number of times merged:          13
Number of times stopped:         22
Number of times breaked:         4

Total time for CPA algorithm:         1.046s (Max:     0.536s)
  Time for choose from waitlist:      0.006s
  Time for precision adjustment:      0.230s
  Time for transfer relation:         0.751s
  Time for merge operator:            0.021s
  Time for stop operator:             0.011s
  Time for adding to reached set:     0.007s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  32 (count: 4, min: 7, max: 9, avg: 8.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.072s
  Counterexample analysis:                             0.027s (Max:     0.014s, Calls: 4)
    Refinement sat check:                              0.013s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.012s
  ARG update:                                          0.006s

Length of refined path (in blocks):                      28 (count: 4, min: 6, max: 8, avg: 7.00)
Number of affected states:                               24 (count: 4, min: 5, max: 7, avg: 6.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        24 (count: 4, min: 5, max: 7, avg: 6.00)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              20 (count: 4, min: 4, max: 6, avg: 5.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 60
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 52.75
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.142s
Time for refinements:                 0.096s
Average time for refinement:          0.024s
Max time for refinement:              0.063s

Code Coverage
-----------------------------
  Function coverage:      0.277
  Visited lines:          754
  Total lines:            1968
  Line coverage:          0.383
  Visited conditions:     54
  Total conditions:       438
  Condition coverage:     0.123

CPAchecker general statistics
-----------------------------
Number of program locations:     2614
Number of CFA edges:             2876
Number of relevant variables:    390
Number of functions:             65
Number of loops:                 20
Size of reached set:             166
  Number of reached locations:   164 (6%)
    Avg states per location:     1
    Max states per location:     2 (at node N409)
  Number of reached functions:   18 (28%)
  Number of partitions:          166
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          4.811s
  Time for loading CPAs:          0.860s
  Time for loading parser:        0.653s
  Time for CFA construction:      3.099s
    Time for parsing file(s):     0.930s
    Time for AST to CFA:          1.082s
    Time for CFA sanity check:    0.195s
    Time for post-processing:     0.715s
      Time for var class.:        0.355s
Time for Analysis:                1.142s
CPU time for analysis:            1.150s
Total time for CPAchecker:        5.961s
Total CPU time for CPAchecker:    5.950s
Time for statistics:              0.096s

Time for Garbage Collector:       0.156s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 53MB (    50 MiB) max;     32MB (    30 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8030MB (  7658 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
