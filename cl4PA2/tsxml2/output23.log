scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-mtd-sm_ftl.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_issbm4om/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5288: Dead code detected: tmp___9 = -22; (CFACreationUtils.addEdgeToCFA, INFO)

line 6642: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6705: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4737: Function pointer *(mtd->erase) with type int (*)(struct mtd_info *mtd, struct erase_info *instr) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4250: Function pointer *(mtd->read_oob) with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4461: Function pointer *(mtd->write_oob) with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out_r to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_out to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4250: Ignoring function call through function pointer *(mtd->read_oob): ret = (*(mtd->read_oob))(mtd, tmp___9, &ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strnlen to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __kfifo_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19812 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14443 (73%)
  Because of loop head:            5195 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         174 (1%)
  Times precision was empty:       3898 (20%)
  Times precision was {false}:     275 (1%)
  Times result was cached:         15016 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      623 (3%)
  Times result was 'false':        643 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         17158
  BDD entailment checks:           5890
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          6
Number of abstraction locations:          95
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         34015
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 37.88
Number of irrelevant predicates:          16462 (48%)
Number of preds handled by boolean abs:   894 (3%)
  Total number of models for allsat:      628
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  4.689s
  Time for path formula creation:        4.514s
Time for strengthen operator:            0.268s
Time for prec operator:                  8.303s
  Time for abstraction:                  7.638s (Max:     0.035s, Count: 19812)
    Boolean abstraction:                 1.328s
    Solving time:                        1.359s (Max:     0.029s)
    Model enumeration time:              0.092s
    Time for BDD construction:           0.088s (Max:     0.012s)
Time for merge operator:                 0.212s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     1.451s

Number of path formula cache hits:   174622 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.877s

Total number of created targets for pointer analysis: 2376
   Number of created targets for uf: *(struct_attribute_group)* is 2
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *(struct_mtd_blktrans_dev)* is 14
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *(struct_mtd_info)* is 2
   Number of created targets for uf: *unsigned_char is 72
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *unsigned_int is 17
   Number of created targets for uf: *char is 2
   Number of created targets for uf: *(struct_ftl_zone)* is 2
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               222
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1263 (count: 14934, min: 0, max: 92, avg: 0.08)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.644s
  Time for transition matches:                         0.292s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                       171969 (count: 171969, min: 1, max: 1, avg: 1.00) [1 x 171969]

CPA algorithm statistics
------------------------
Number of iterations:            91452
Max size of waitlist:            50
Average size of waitlist:        20
Number of computed successors:   104434
Max successors for one state:    2
Number of times merged:          5634
Number of times stopped:         8859
Number of times breaked:         174

Total time for CPA algorithm:        20.509s (Max:     0.804s)
  Time for choose from waitlist:      0.228s
  Time for precision adjustment:      9.684s
  Time for transfer relation:         8.322s
  Time for merge operator:            0.530s
  Time for stop operator:             0.366s
  Time for adding to reached set:     0.474s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   174
Avg. length of target path (in blocks):                4232 (count: 174, min: 7, max: 51, avg: 24.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.925s
  Counterexample analysis:                             3.223s (Max:     0.049s, Calls: 174)
    Refinement sat check:                              2.329s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.147s
  ARG update:                                          0.330s

Length of refined path (in blocks):                    3354 (count: 174, min: 6, max: 49, avg: 19.28)
Number of affected states:                             2111 (count: 174, min: 1, max: 48, avg: 12.13)
Length (states) of path with itp 'true':               1069 (count: 174, min: 0, max: 37, avg: 6.14)
Length (states) of path with itp non-trivial itp:      2111 (count: 174, min: 1, max: 48, avg: 12.13)
Length (states) of path with itp 'false':               174 (count: 174, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 174, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1937 (count: 174, min: 0, max: 47, avg: 11.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                174
Number of successful refinements:     174
Number of failed refinements:         0
Max. size of reached set before ref.: 1739
Max. size of reached set after ref.:  1320
Avg. size of reached set before ref.: 1086.39
Avg. size of reached set after ref.:  540.81

Total time for CEGAR algorithm:      25.020s
Time for refinements:                 4.393s
Average time for refinement:          0.025s
Max time for refinement:              0.068s

Code Coverage
-----------------------------
  Function coverage:      0.015
  Visited lines:          577
  Total lines:            1968
  Line coverage:          0.293
  Visited conditions:     0
  Total conditions:       438
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     2614
Number of CFA edges:             2876
Number of relevant variables:    390
Number of functions:             65
Number of loops:                 20
Size of reached set:             3
  Number of reached locations:   3 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N2092)
  Number of reached functions:   1 (2%)
  Number of partitions:          3
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          5.224s
  Time for loading CPAs:          0.927s
  Time for loading parser:        0.696s
  Time for CFA construction:      3.488s
    Time for parsing file(s):     1.048s
    Time for AST to CFA:          1.191s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.832s
      Time for var class.:        0.419s
Time for Analysis:               25.020s
CPU time for analysis:           25.020s
Total time for CPAchecker:       30.248s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.085s

Time for Garbage Collector:       0.533s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     47MB (    44 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
