scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-video-arkfb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_797p958v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7193: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7256: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5369: Function pointer *(info->dac_write_regs) with type void (*)(void *data, u8 *code, int count) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4268: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_tilecursor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5369: Ignoring function call through function pointer *(info->dac_write_regs): (*(info->dac_write_regs))(info->data, code, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function restore_vga to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function save_vga to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_wcrt_multi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_compute_pll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5379: Ignoring function call through function pointer *(info->dac_write_regs): (*(info->dac_write_regs))(info->data, code, count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4268: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_set_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_match_format to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_check_timings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            58045 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  54446 (94%)
  Because of loop head:            3506 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         93 (0%)
  Times precision was empty:       8941 (15%)
  Times precision was {false}:     139 (0%)
  Times result was cached:         48586 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      379 (1%)
  Times result was 'false':        410 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         18617
  BDD entailment checks:           9063
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          3
Number of abstraction locations:          159
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         70545
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 136.19
Number of irrelevant predicates:          16578 (23%)
Number of preds handled by boolean abs:   517 (1%)
  Total number of models for allsat:      379
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.516s
  Time for path formula creation:        3.334s
Time for strengthen operator:            0.332s
Time for prec operator:                  8.170s
  Time for abstraction:                  6.992s (Max:     0.062s, Count: 58045)
    Boolean abstraction:                 0.606s
    Solving time:                        0.567s (Max:     0.035s)
    Model enumeration time:              0.030s
    Time for BDD construction:           0.037s (Max:     0.011s)
Time for merge operator:                 0.215s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.597s

Number of path formula cache hits:   272984 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.249s

Total number of created targets for pointer analysis: 1405
   Number of created targets for uf: *unsigned_char is 16
   Number of created targets for uf: *unsigned_int is 109


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         759 (count: 20984, min: 0, max: 46, avg: 0.04)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.652s
  Time for transition matches:                         0.310s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       224026 (count: 224026, min: 1, max: 1, avg: 1.00) [1 x 224026]

CPA algorithm statistics
------------------------
Number of iterations:            169966
Max size of waitlist:            24
Average size of waitlist:        15
Number of computed successors:   183991
Max successors for one state:    2
Number of times merged:          4777
Number of times stopped:         11715
Number of times breaked:         93

Total time for CPA algorithm:        21.145s (Max:     1.560s)
  Time for choose from waitlist:      0.279s
  Time for precision adjustment:     10.175s
  Time for transfer relation:         7.902s
  Time for merge operator:            0.427s
  Time for stop operator:             0.513s
  Time for adding to reached set:     0.531s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   93
Avg. length of target path (in blocks):                2017 (count: 93, min: 5, max: 59, avg: 21.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.315s
  Counterexample analysis:                             1.443s (Max:     0.044s, Calls: 93)
    Refinement sat check:                              1.002s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.104s
  Precision update:                                    0.074s
  ARG update:                                          0.640s

Length of refined path (in blocks):                    1924 (count: 93, min: 4, max: 58, avg: 20.69)
Number of affected states:                             1831 (count: 93, min: 3, max: 57, avg: 19.69)
Length (states) of path with itp 'true':                  0 (count: 93, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1831 (count: 93, min: 3, max: 57, avg: 19.69)
Length (states) of path with itp 'false':                93 (count: 93, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 93, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1738 (count: 93, min: 2, max: 56, avg: 18.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                93
Number of successful refinements:     93
Number of failed refinements:         0
Max. size of reached set before ref.: 1980
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1834.82
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      23.773s
Time for refinements:                 2.627s
Average time for refinement:          0.028s
Max time for refinement:              0.096s

Code Coverage
-----------------------------
  Function coverage:      0.707
  Visited lines:          1340
  Total lines:            1864
  Line coverage:          0.719
  Visited conditions:     168
  Total conditions:       306
  Condition coverage:     0.549

CPAchecker general statistics
-----------------------------
Number of program locations:     2452
Number of CFA edges:             2692
Number of relevant variables:    274
Number of functions:             82
Number of loops:                 12
Size of reached set:             1508
  Number of reached locations:   650 (27%)
    Avg states per location:     2
    Max states per location:     18 (at node N177)
  Number of reached functions:   58 (71%)
  Number of partitions:          1508
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          5.986s
  Time for loading CPAs:          1.278s
  Time for loading parser:        0.737s
  Time for CFA construction:      3.816s
    Time for parsing file(s):     1.121s
    Time for AST to CFA:          1.358s
    Time for CFA sanity check:    0.204s
    Time for post-processing:     0.893s
      Time for var class.:        0.444s
Time for Analysis:               23.773s
CPU time for analysis:           23.780s
Total time for CPAchecker:       29.764s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.137s

Time for Garbage Collector:       0.657s (in 77 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     45MB (    43 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
