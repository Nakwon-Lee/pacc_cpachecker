scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-video-arkfb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xlgtnkqb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7193: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7256: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5369: Function pointer *(info->dac_write_regs) with type void (*)(void *data, u8 *code, int count) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4268: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_match_format to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_check_timings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_compute_pll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_wcrt_multi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function save_vga to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function restore_vga to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5379: Ignoring function call through function pointer *(info->dac_write_regs): (*(info->dac_write_regs))(info->data, code, count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function svga_tilecursor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5369: Ignoring function call through function pointer *(info->dac_write_regs): (*(info->dac_write_regs))(info->data, code, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_set_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4268: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            26405 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22967 (87%)
  Because of loop head:            3366 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         72 (0%)
  Times precision was empty:       15153 (57%)
  Times precision was {false}:     201 (1%)
  Times result was cached:         10689 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      362 (1%)
  Times result was 'false':        316 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         24159
  BDD entailment checks:           7643
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          3
Number of abstraction locations:          92
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         21773
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 38.67
Number of irrelevant predicates:          9923 (46%)
Number of preds handled by boolean abs:   452 (2%)
  Total number of models for allsat:      362
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  7.572s
  Time for path formula creation:        7.366s
Time for strengthen operator:            0.240s
Time for prec operator:                  6.291s
  Time for abstraction:                  5.583s (Max:     0.056s, Count: 26405)
    Boolean abstraction:                 1.010s
    Solving time:                        1.293s (Max:     0.039s)
    Model enumeration time:              0.097s
    Time for BDD construction:           0.038s (Max:     0.008s)
Time for merge operator:                 0.703s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.390s

Number of path formula cache hits:   180268 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.290s

Total number of created targets for pointer analysis: 15258
   Number of created targets for uf: *unsigned_short_int is 5
   Number of created targets for uf: *unsigned_char is 491
   Number of created targets for uf: *unsigned_int is 2359


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         729 (count: 25984, min: 0, max: 52, avg: 0.03)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.651s
  Time for transition matches:                         0.290s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       187335 (count: 187335, min: 1, max: 1, avg: 1.00) [1 x 187335]

CPA algorithm statistics
------------------------
Number of iterations:            113739
Max size of waitlist:            96
Average size of waitlist:        44
Number of computed successors:   130761
Max successors for one state:    2
Number of times merged:          8258
Number of times stopped:         12393
Number of times breaked:         72

Total time for CPA algorithm:        22.667s (Max:     1.797s)
  Time for choose from waitlist:      0.199s
  Time for precision adjustment:      8.097s
  Time for transfer relation:        11.254s
  Time for merge operator:            1.092s
  Time for stop operator:             0.363s
  Time for adding to reached set:     0.448s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   72
Avg. length of target path (in blocks):                1008 (count: 72, min: 5, max: 21, avg: 14.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.762s
  Counterexample analysis:                             1.052s (Max:     0.032s, Calls: 72)
    Refinement sat check:                              0.771s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.089s
  Precision update:                                    0.057s
  ARG update:                                          0.515s

Length of refined path (in blocks):                     936 (count: 72, min: 4, max: 20, avg: 13.00)
Number of affected states:                              864 (count: 72, min: 3, max: 19, avg: 12.00)
Length (states) of path with itp 'true':                  0 (count: 72, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       864 (count: 72, min: 3, max: 19, avg: 12.00)
Length (states) of path with itp 'false':                72 (count: 72, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 72, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             792 (count: 72, min: 2, max: 18, avg: 11.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                72
Number of successful refinements:     72
Number of failed refinements:         0
Max. size of reached set before ref.: 2268
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1621.39
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      24.704s
Time for refinements:                 2.032s
Average time for refinement:          0.028s
Max time for refinement:              0.110s

Code Coverage
-----------------------------
  Function coverage:      0.683
  Visited lines:          1444
  Total lines:            1864
  Line coverage:          0.775
  Visited conditions:     200
  Total conditions:       306
  Condition coverage:     0.654

CPAchecker general statistics
-----------------------------
Number of program locations:     2452
Number of CFA edges:             2692
Number of relevant variables:    274
Number of functions:             82
Number of loops:                 12
Size of reached set:             1529
  Number of reached locations:   679 (28%)
    Avg states per location:     2
    Max states per location:     27 (at node N37)
  Number of reached functions:   56 (68%)
  Number of partitions:          1520
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1695 (before lines 6959-7131), Function main called from node N1658, stack depth 1 [1bfe3203], stack [main]])
  Number of target states:       0
  Size of final wait list        48

Time for analysis setup:          5.566s
  Time for loading CPAs:          0.942s
  Time for loading parser:        0.644s
  Time for CFA construction:      3.873s
    Time for parsing file(s):     1.115s
    Time for AST to CFA:          1.415s
    Time for CFA sanity check:    0.219s
    Time for post-processing:     0.910s
      Time for var class.:        0.457s
Time for Analysis:               24.704s
CPU time for analysis:           24.710s
Total time for CPAchecker:       30.275s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.133s

Time for Garbage Collector:       0.731s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    73 MiB) max;     48MB (    46 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
