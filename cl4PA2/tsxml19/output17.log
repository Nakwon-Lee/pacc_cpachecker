scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-video-arkfb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i4k_dsh5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7193: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7256: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5369: Function pointer *(info->dac_write_regs) with type void (*)(void *data, u8 *code, int count) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4268: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_tilecursor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5369: Ignoring function call through function pointer *(info->dac_write_regs): (*(info->dac_write_regs))(info->data, code, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function restore_vga to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function save_vga to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_wcrt_multi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfb_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_compute_pll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5379: Ignoring function call through function pointer *(info->dac_write_regs): (*(info->dac_write_regs))(info->data, code, count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4268: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_set_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_match_format to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function svga_check_timings to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5409: Ignoring function call through function pointer *(info->dacops->dac_release): (*(info->dacops->dac_release))(info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            60500 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  56744 (94%)
  Because of loop head:            3659 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         97 (0%)
  Times precision was empty:       8997 (15%)
  Times precision was {false}:     145 (0%)
  Times result was cached:         50958 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      400 (1%)
  Times result was 'false':        428 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         19365
  BDD entailment checks:           9379
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          3
Number of abstraction locations:          171
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         75312
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 138.19
Number of irrelevant predicates:          16668 (22%)
Number of preds handled by boolean abs:   550 (1%)
  Total number of models for allsat:      400
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.686s
  Time for path formula creation:        3.398s
Time for strengthen operator:            0.318s
Time for prec operator:                  8.539s
  Time for abstraction:                  7.426s (Max:     0.038s, Count: 60500)
    Boolean abstraction:                 0.580s
    Solving time:                        0.518s (Max:     0.029s)
    Model enumeration time:              0.069s
    Time for BDD construction:           0.044s (Max:     0.007s)
Time for merge operator:                 0.177s
Time for coverage check:                 0.081s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     0.587s

Number of path formula cache hits:   284914 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.272s

Total number of created targets for pointer analysis: 1544
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_dac_ops)* is 2
   Number of created targets for uf: *unsigned_char is 11
   Number of created targets for uf: *unsigned_long_long_int is 5
   Number of created targets for uf: *unsigned_int is 37
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(void)*],_Parameter_2_type:_[(unsigned_char)*],_Parameter_3_type:_[signed_int],_VarArgs:_false)* is 2


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         797 (count: 21512, min: 0, max: 43, avg: 0.04)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.764s
  Time for transition matches:                         0.314s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       233616 (count: 233616, min: 1, max: 1, avg: 1.00) [1 x 233616]

CPA algorithm statistics
------------------------
Number of iterations:            177176
Max size of waitlist:            24
Average size of waitlist:        15
Number of computed successors:   191772
Max successors for one state:    2
Number of times merged:          4993
Number of times stopped:         12232
Number of times breaked:         97

Total time for CPA algorithm:        22.081s (Max:     1.501s)
  Time for choose from waitlist:      0.249s
  Time for precision adjustment:     10.747s
  Time for transfer relation:         8.254s
  Time for merge operator:            0.477s
  Time for stop operator:             0.483s
  Time for adding to reached set:     0.550s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   97
Avg. length of target path (in blocks):                2078 (count: 97, min: 5, max: 59, avg: 21.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.247s
  Counterexample analysis:                             1.449s (Max:     0.041s, Calls: 97)
    Refinement sat check:                              1.073s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.108s
  ARG update:                                          0.576s

Length of refined path (in blocks):                    1981 (count: 97, min: 4, max: 58, avg: 20.42)
Number of affected states:                             1884 (count: 97, min: 3, max: 57, avg: 19.42)
Length (states) of path with itp 'true':                  0 (count: 97, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1884 (count: 97, min: 3, max: 57, avg: 19.42)
Length (states) of path with itp 'false':                97 (count: 97, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 97, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1787 (count: 97, min: 2, max: 56, avg: 18.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                97
Number of successful refinements:     97
Number of failed refinements:         0
Max. size of reached set before ref.: 1980
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1835.69
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      24.622s
Time for refinements:                 2.526s
Average time for refinement:          0.026s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.707
  Visited lines:          1337
  Total lines:            1864
  Line coverage:          0.717
  Visited conditions:     168
  Total conditions:       306
  Condition coverage:     0.549

CPAchecker general statistics
-----------------------------
Number of program locations:     2452
Number of CFA edges:             2692
Number of relevant variables:    274
Number of functions:             82
Number of loops:                 12
Size of reached set:             1342
  Number of reached locations:   648 (26%)
    Avg states per location:     2
    Max states per location:     14 (at node N168)
  Number of reached functions:   58 (71%)
  Number of partitions:          1342
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          5.620s
  Time for loading CPAs:          1.052s
  Time for loading parser:        0.644s
  Time for CFA construction:      3.755s
    Time for parsing file(s):     1.087s
    Time for AST to CFA:          1.278s
    Time for CFA sanity check:    0.283s
    Time for post-processing:     0.932s
      Time for var class.:        0.410s
Time for Analysis:               24.622s
CPU time for analysis:           24.620s
Total time for CPAchecker:       30.256s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.136s

Time for Garbage Collector:       0.679s (in 82 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    64 MiB) max;     46MB (    44 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
