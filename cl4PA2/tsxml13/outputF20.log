scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3728so33/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            233675 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  205316 (88%)
  Because of loop head:            28276 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         83 (0%)
  Times precision was empty:       4342 (2%)
  Times precision was {false}:     1171 (1%)
  Times result was cached:         226317 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1845 (1%)
  Times result was 'false':        1259 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         211678
  BDD entailment checks:           38260
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          169
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         410942
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 136.25
Number of irrelevant predicates:          127075 (31%)
Number of preds handled by boolean abs:   2427 (1%)
  Total number of models for allsat:      1869
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 18.927s
  Time for path formula creation:       18.088s
Time for strengthen operator:            1.388s
Time for prec operator:                 54.422s
  Time for abstraction:                 51.167s (Max:     0.389s, Count: 233675)
    Boolean abstraction:                 8.310s
    Solving time:                       13.833s (Max:     0.183s)
    Model enumeration time:              0.521s
    Time for BDD construction:           0.115s (Max:     0.012s)
Time for merge operator:                 1.391s
Time for coverage check:                 0.114s
  Time for BDD entailment checks:        0.068s
Total time for SMT solver (w/o itp):    14.354s

Number of path formula cache hits:   1556445 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.769s

Total number of created targets for pointer analysis: 147067
   Number of created targets for uf: *(struct_pi_adapter)* is 141
   Number of created targets for uf: *signed_int is 678
   Number of created targets for uf: *(char)* is 61
   Number of created targets for uf: *char is 3513


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3712 (count: 59545, min: 0, max: 320, avg: 0.06)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.141s
  Time for transition matches:                         1.084s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1415356 (count: 1415356, min: 1, max: 1, avg: 1.00) [1 x 1415356]

CPA algorithm statistics
------------------------
Number of iterations:            887982
Max size of waitlist:            83
Average size of waitlist:        35
Number of computed successors:   1015675
Max successors for one state:    2
Number of times merged:          86709
Number of times stopped:         123377
Number of times breaked:         83

Total time for CPA algorithm:       107.720s (Max:     5.613s)
  Time for choose from waitlist:      0.495s
  Time for precision adjustment:     61.932s
  Time for transfer relation:        34.988s
  Time for merge operator:            2.797s
  Time for stop operator:             1.843s
  Time for adding to reached set:     2.341s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   83
Avg. length of target path (in blocks):                5069 (count: 83, min: 5, max: 194, avg: 61.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.386s
  Counterexample analysis:                             5.380s (Max:     0.255s, Calls: 83)
    Refinement sat check:                              4.200s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.090s
  Precision update:                                    0.116s
  ARG update:                                          1.717s

Length of refined path (in blocks):                    4637 (count: 83, min: 2, max: 185, avg: 55.87)
Number of affected states:                             4215 (count: 83, min: 0, max: 184, avg: 50.78)
Length (states) of path with itp 'true':                339 (count: 83, min: 0, max: 102, avg: 4.08)
Length (states) of path with itp non-trivial itp:      4215 (count: 83, min: 0, max: 184, avg: 50.78)
Length (states) of path with itp 'false':                83 (count: 83, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 83, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4141 (count: 83, min: 0, max: 183, avg: 49.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                83
Number of successful refinements:     83
Number of failed refinements:         0
Max. size of reached set before ref.: 40953
Max. size of reached set after ref.:  39099
Avg. size of reached set before ref.: 11209.66
Avg. size of reached set after ref.:  961.35

Total time for CEGAR algorithm:     115.993s
Time for refinements:                 8.200s
Average time for refinement:          0.098s
Max time for refinement:              0.339s

Code Coverage
-----------------------------
  Function coverage:      0.875
  Visited lines:          1535
  Total lines:            1570
  Line coverage:          0.978
  Visited conditions:     288
  Total conditions:       302
  Condition coverage:     0.954

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             40430
  Number of reached locations:   880 (46%)
    Avg states per location:     45
    Max states per location:     2161 (at node N95)
  Number of reached functions:   42 (88%)
  Number of partitions:          40430
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.408s
  Time for loading CPAs:          1.047s
  Time for loading parser:        0.731s
  Time for CFA construction:      3.469s
    Time for parsing file(s):     1.051s
    Time for AST to CFA:          1.264s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.741s
      Time for var class.:        0.368s
Time for Analysis:              115.994s
CPU time for analysis:          115.980s
Time for analyzing result:        0.042s
Total time for CPAchecker:      121.409s
Total CPU time for CPAchecker:  121.380s
Time for statistics:              0.706s

Time for Garbage Collector:       9.093s (in 396 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                204MB (   195 MiB) max;     95MB (    91 MiB) avg;    213MB (   204 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           213MB (   204 MiB) max;    158MB (   151 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8082MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
