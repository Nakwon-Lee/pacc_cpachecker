scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gy37lwik/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            34584 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30281 (88%)
  Because of loop head:            4285 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (0%)
  Times precision was empty:       17206 (50%)
  Times precision was {false}:     648 (2%)
  Times result was cached:         16455 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      275 (1%)
  Times result was 'false':        108 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         29766
  BDD entailment checks:           6006
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          3
Number of abstraction locations:          76
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         17651
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 19.12
Number of irrelevant predicates:          14023 (79%)
Number of preds handled by boolean abs:   276 (2%)
  Total number of models for allsat:      274
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.732s
  Time for path formula creation:        6.431s
Time for strengthen operator:            0.437s
Time for prec operator:                  6.519s
  Time for abstraction:                  5.585s (Max:     0.101s, Count: 34584)
    Boolean abstraction:                 0.432s
    Solving time:                        1.227s (Max:     0.068s)
    Model enumeration time:              0.036s
    Time for BDD construction:           0.021s (Max:     0.009s)
Time for merge operator:                 0.629s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.065s
Total time for SMT solver (w/o itp):     1.263s

Number of path formula cache hits:   197230 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.361s

Total number of created targets for pointer analysis: 18331
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 319
   Number of created targets for uf: *(char)* is 125
   Number of created targets for uf: *char is 4341


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         548 (count: 28112, min: 0, max: 76, avg: 0.02)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.800s
  Time for transition matches:                         0.331s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       198716 (count: 198716, min: 1, max: 1, avg: 1.00) [1 x 198716]

CPA algorithm statistics
------------------------
Number of iterations:            128674
Max size of waitlist:            52
Average size of waitlist:        30
Number of computed successors:   146494
Max successors for one state:    2
Number of times merged:          11880
Number of times stopped:         17473
Number of times breaked:         18

Total time for CPA algorithm:        23.706s (Max:     3.493s)
  Time for choose from waitlist:      0.217s
  Time for precision adjustment:      8.312s
  Time for transfer relation:        11.387s
  Time for merge operator:            1.115s
  Time for stop operator:             0.527s
  Time for adding to reached set:     0.599s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 687 (count: 18, min: 5, max: 70, avg: 38.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.194s
  Counterexample analysis:                             0.444s (Max:     0.043s, Calls: 18)
    Refinement sat check:                              0.319s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.010s
  ARG update:                                          0.637s

Length of refined path (in blocks):                     601 (count: 17, min: 2, max: 69, avg: 35.35)
Number of affected states:                              560 (count: 17, min: 0, max: 68, avg: 32.94)
Length (states) of path with itp 'true':                 24 (count: 17, min: 0, max: 24, avg: 1.41)
Length (states) of path with itp non-trivial itp:       560 (count: 17, min: 0, max: 68, avg: 32.94)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 17, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             544 (count: 17, min: 0, max: 67, avg: 32.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 12315
Max. size of reached set after ref.:  6116
Avg. size of reached set before ref.: 7504.33
Avg. size of reached set after ref.:  362.59

Total time for CEGAR algorithm:      25.126s
Time for refinements:                 1.416s
Average time for refinement:          0.078s
Max time for refinement:              0.137s

Code Coverage
-----------------------------
  Function coverage:      0.771
  Visited lines:          1106
  Total lines:            1570
  Line coverage:          0.704
  Visited conditions:     162
  Total conditions:       302
  Condition coverage:     0.536

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             8895
  Number of reached locations:   549 (28%)
    Avg states per location:     16
    Max states per location:     426 (at node N95)
  Number of reached functions:   37 (77%)
  Number of partitions:          8879
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N831 (before line 3978), Function pt_detect called from node N1377, stack depth 3 [4ff56021], stack [main, pt_init, pt_detect]])
  Number of target states:       1
  Size of final wait list        17

Time for analysis setup:          4.624s
  Time for loading CPAs:          0.880s
  Time for loading parser:        0.690s
  Time for CFA construction:      2.937s
    Time for parsing file(s):     0.911s
    Time for AST to CFA:          1.040s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.615s
      Time for var class.:        0.307s
Time for Analysis:               25.126s
CPU time for analysis:           25.130s
Total time for CPAchecker:       29.755s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.261s

Time for Garbage Collector:       1.109s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                113MB (   107 MiB) max;     61MB (    58 MiB) avg;    121MB (   115 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
