scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9n11tm55/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17531 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14390 (82%)
  Because of loop head:            3078 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       5205 (30%)
  Times precision was {false}:     425 (2%)
  Times result was cached:         11619 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      282 (2%)
  Times result was 'false':        249 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         13878
  BDD entailment checks:           3854
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          103
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         15996
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 22.63
Number of irrelevant predicates:          10142 (63%)
Number of preds handled by boolean abs:   329 (2%)
  Total number of models for allsat:      289
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  6.501s
  Time for path formula creation:        6.338s
Time for strengthen operator:            0.267s
Time for prec operator:                  9.795s
  Time for abstraction:                  9.197s (Max:     0.204s, Count: 17531)
    Boolean abstraction:                 2.101s
    Solving time:                        4.329s (Max:     0.180s)
    Model enumeration time:              0.159s
    Time for BDD construction:           0.065s (Max:     0.013s)
Time for merge operator:                 0.312s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     4.488s

Number of path formula cache hits:   111664 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.698s

Total number of created targets for pointer analysis: 30158
   Number of created targets for uf: *(struct_pi_adapter)* is 21
   Number of created targets for uf: *signed_int is 99
   Number of created targets for uf: *(char)* is 13
   Number of created targets for uf: *char is 545


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         584 (count: 12893, min: 0, max: 56, avg: 0.05)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.518s
  Time for transition matches:                         0.209s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       127157 (count: 127157, min: 1, max: 1, avg: 1.00) [1 x 127157]

CPA algorithm statistics
------------------------
Number of iterations:            68578
Max size of waitlist:            58
Average size of waitlist:        27
Number of computed successors:   78371
Max successors for one state:    2
Number of times merged:          5012
Number of times stopped:         7873
Number of times breaked:         63

Total time for CPA algorithm:        22.995s (Max:     1.534s)
  Time for choose from waitlist:      0.147s
  Time for precision adjustment:     10.969s
  Time for transfer relation:         9.571s
  Time for merge operator:            0.587s
  Time for stop operator:             0.352s
  Time for adding to reached set:     0.443s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                1502 (count: 63, min: 5, max: 57, avg: 23.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.188s
  Counterexample analysis:                             1.684s (Max:     0.068s, Calls: 63)
    Refinement sat check:                              1.294s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.074s
  ARG update:                                          0.319s

Length of refined path (in blocks):                    1142 (count: 63, min: 2, max: 56, avg: 18.13)
Number of affected states:                              767 (count: 63, min: 0, max: 55, avg: 12.17)
Length (states) of path with itp 'true':                312 (count: 63, min: 0, max: 24, avg: 4.95)
Length (states) of path with itp non-trivial itp:       767 (count: 63, min: 0, max: 55, avg: 12.17)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 63, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             732 (count: 63, min: 0, max: 54, avg: 11.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 3675
Max. size of reached set after ref.:  3086
Avg. size of reached set before ref.: 1422.37
Avg. size of reached set after ref.:  348.60

Total time for CEGAR algorithm:      25.403s
Time for refinements:                 2.382s
Average time for refinement:          0.037s
Max time for refinement:              0.092s

Code Coverage
-----------------------------
  Function coverage:      0.771
  Visited lines:          1247
  Total lines:            1570
  Line coverage:          0.794
  Visited conditions:     186
  Total conditions:       302
  Condition coverage:     0.616

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             2603
  Number of reached locations:   583 (30%)
    Avg states per location:     4
    Max states per location:     96 (at node N95)
  Number of reached functions:   37 (77%)
  Number of partitions:          2602
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N769 (before line 3895), Function pt_probe called from node N845, stack depth 4 [6c544072], stack [main, pt_init, pt_detect, pt_probe]])
  Number of target states:       0
  Size of final wait list        29

Time for analysis setup:          4.829s
  Time for loading CPAs:          0.797s
  Time for loading parser:        0.569s
  Time for CFA construction:      3.331s
    Time for parsing file(s):     1.037s
    Time for AST to CFA:          1.305s
    Time for CFA sanity check:    0.161s
    Time for post-processing:     0.625s
      Time for var class.:        0.311s
Time for Analysis:               25.403s
CPU time for analysis:           25.410s
Total time for CPAchecker:       30.243s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.156s

Time for Garbage Collector:       0.564s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     47MB (    45 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
