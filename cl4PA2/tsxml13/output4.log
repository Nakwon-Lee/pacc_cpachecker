scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qkrfyydj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19472 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17196 (88%)
  Because of loop head:            2272 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       19345 (99%)
  Times precision was {false}:     51 (0%)
  Times result was cached:         63 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13 (0%)
  Times result was 'false':        4 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         18106
  BDD entailment checks:           3164
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          3
Number of abstraction locations:          21
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         138
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.16
Number of irrelevant predicates:          109 (79%)
Number of preds handled by boolean abs:   14 (10%)
  Total number of models for allsat:      12
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.92

Time for post operator:                 12.844s
  Time for path formula creation:       12.649s
Time for strengthen operator:            0.315s
Time for prec operator:                  1.941s
  Time for abstraction:                  1.180s (Max:     0.100s, Count: 19472)
    Boolean abstraction:                 0.256s
    Solving time:                        0.571s (Max:     0.063s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.237s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     0.579s

Number of path formula cache hits:   23939 (20%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.787s

Total number of created targets for pointer analysis: 58125
   Number of created targets for uf: *(struct_pi_adapter)* is 17
   Number of created targets for uf: *signed_int is 443
   Number of created targets for uf: *(char)* is 13
   Number of created targets for uf: *char is 2177


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          36 (count: 22851, min: 0, max: 17, avg: 0.00)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.610s
  Time for transition matches:                         0.298s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       116350 (count: 116350, min: 1, max: 1, avg: 1.00) [1 x 116350]

CPA algorithm statistics
------------------------
Number of iterations:            74095
Max size of waitlist:            32
Average size of waitlist:        17
Number of computed successors:   84795
Max successors for one state:    2
Number of times merged:          7471
Number of times stopped:         10616
Number of times breaked:         4

Total time for CPA algorithm:        24.428s (Max:     7.062s)
  Time for choose from waitlist:      0.178s
  Time for precision adjustment:      3.397s
  Time for transfer relation:        16.766s
  Time for merge operator:            1.671s
  Time for stop operator:             0.444s
  Time for adding to reached set:     0.671s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  56 (count: 4, min: 11, max: 17, avg: 14.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.571s
  Counterexample analysis:                             0.148s (Max:     0.049s, Calls: 4)
    Refinement sat check:                              0.105s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.003s
  ARG update:                                          0.402s

Length of refined path (in blocks):                      41 (count: 4, min: 2, max: 16, avg: 10.25)
Number of affected states:                               37 (count: 4, min: 1, max: 15, avg: 9.25)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        37 (count: 4, min: 1, max: 15, avg: 9.25)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              33 (count: 4, min: 0, max: 14, avg: 8.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 26258
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 15083.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.151s
Time for refinements:                 0.723s
Average time for refinement:          0.180s
Max time for refinement:              0.266s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          1260
  Total lines:            1570
  Line coverage:          0.803
  Visited conditions:     212
  Total conditions:       302
  Condition coverage:     0.702

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             13856
  Number of reached locations:   616 (32%)
    Avg states per location:     22
    Max states per location:     729 (at node N96)
  Number of reached functions:   30 (63%)
  Number of partitions:          13851
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N831 (before line 3978), Function pt_detect called from node N1377, stack depth 3 [51ced4b4], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          4.646s
  Time for loading CPAs:          0.851s
  Time for loading parser:        0.701s
  Time for CFA construction:      2.969s
    Time for parsing file(s):     0.872s
    Time for AST to CFA:          1.080s
    Time for CFA sanity check:    0.160s
    Time for post-processing:     0.665s
      Time for var class.:        0.310s
Time for Analysis:               25.152s
CPU time for analysis:           25.150s
Total time for CPAchecker:       29.805s
Total CPU time for CPAchecker:   29.800s
Time for statistics:              0.400s

Time for Garbage Collector:       1.464s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     62MB (    59 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
