scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m29p65e8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1419994 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1258990 (89%)
  Because of loop head:            160914 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         90 (0%)
  Times precision was empty:       106959 (8%)
  Times precision was {false}:     5896 (0%)
  Times result was cached:         1301498 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5641 (0%)
  Times result was 'false':        4351 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1327608
  BDD entailment checks:           229368
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          169
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         2348328
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 203.55
Number of irrelevant predicates:          1506152 (64%)
Number of preds handled by boolean abs:   7114 (0%)
  Total number of models for allsat:      5808
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                182.461s
  Time for path formula creation:      178.097s
Time for strengthen operator:            6.635s
Time for prec operator:                218.839s
  Time for abstraction:                201.514s (Max:     0.765s, Count: 1419994)
    Boolean abstraction:                25.243s
    Solving time:                       53.110s (Max:     0.268s)
    Model enumeration time:              1.824s
    Time for BDD construction:           0.141s (Max:     0.012s)
Time for merge operator:                18.747s
Time for coverage check:                 0.447s
  Time for BDD entailment checks:        0.269s
Total time for SMT solver (w/o itp):    54.934s

Number of path formula cache hits:   6300492 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   144.750s

Total number of created targets for pointer analysis: 2238167
   Number of created targets for uf: *(struct_pi_adapter)* is 121
   Number of created targets for uf: *signed_int is 1863
   Number of created targets for uf: *(char)* is 465
   Number of created targets for uf: *char is 115379


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11302 (count: 399670, min: 0, max: 952, avg: 0.03)
Time for BDD node cleanup:                             0.081s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.654s
  Time for transition matches:                         6.014s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      8380801 (count: 8380801, min: 1, max: 1, avg: 1.00) [1 x 8380801]

CPA algorithm statistics
------------------------
Number of iterations:            5388533
Max size of waitlist:            28
Average size of waitlist:        11
Number of computed successors:   6166529
Max successors for one state:    2
Number of times merged:          549120
Number of times stopped:         773613
Number of times breaked:         90

Total time for CPA algorithm:       590.491s (Max:    31.188s)
  Time for choose from waitlist:      2.100s
  Time for precision adjustment:    266.789s
  Time for transfer relation:       264.318s
  Time for merge operator:           25.070s
  Time for stop operator:             7.524s
  Time for adding to reached set:     9.832s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   90
Avg. length of target path (in blocks):                4755 (count: 90, min: 5, max: 162, avg: 52.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  15.298s
  Counterexample analysis:                             3.993s (Max:     0.180s, Calls: 90)
    Refinement sat check:                              3.194s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.070s
  Precision update:                                    0.053s
  ARG update:                                         11.123s

Length of refined path (in blocks):                    4395 (count: 90, min: 2, max: 155, avg: 48.83)
Number of affected states:                             3973 (count: 90, min: 0, max: 154, avg: 44.14)
Length (states) of path with itp 'true':                332 (count: 90, min: 0, max: 92, avg: 3.69)
Length (states) of path with itp non-trivial itp:      3973 (count: 90, min: 0, max: 154, avg: 44.14)
Length (states) of path with itp 'false':                90 (count: 90, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 90, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3892 (count: 90, min: 0, max: 153, avg: 43.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                90
Number of successful refinements:     90
Number of failed refinements:         0
Max. size of reached set before ref.: 150469
Max. size of reached set after ref.:  41247
Avg. size of reached set before ref.: 63078.48
Avg. size of reached set after ref.:  3654.74

Total time for CEGAR algorithm:     608.998s
Time for refinements:                18.260s
Average time for refinement:          0.202s
Max time for refinement:              0.589s

Code Coverage
-----------------------------
  Function coverage:      0.875
  Visited lines:          1535
  Total lines:            1570
  Line coverage:          0.978
  Visited conditions:     288
  Total conditions:       302
  Condition coverage:     0.954

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             40430
  Number of reached locations:   880 (46%)
    Avg states per location:     45
    Max states per location:     2161 (at node N95)
  Number of reached functions:   42 (88%)
  Number of partitions:          40430
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.723s
  Time for loading CPAs:          0.926s
  Time for loading parser:        0.625s
  Time for CFA construction:      3.072s
    Time for parsing file(s):     0.918s
    Time for AST to CFA:          1.137s
    Time for CFA sanity check:    0.156s
    Time for post-processing:     0.644s
      Time for var class.:        0.301s
Time for Analysis:              608.998s
CPU time for analysis:          608.930s
Time for analyzing result:        0.034s
Total time for CPAchecker:      613.725s
Total CPU time for CPAchecker:  613.650s
Time for statistics:              0.754s

Time for Garbage Collector:      65.201s (in 721 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1792MB (  1709 MiB) max;    758MB (   723 MiB) avg;   1811MB (  1727 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1854MB (  1768 MiB) max;   1097MB (  1046 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8158MB (  7780 MiB) max;   8121MB (  7745 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
