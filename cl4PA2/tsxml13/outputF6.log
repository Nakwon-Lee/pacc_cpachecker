scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uddmmklw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            442294 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  391398 (88%)
  Because of loop head:            50810 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         86 (0%)
  Times precision was empty:       24933 (6%)
  Times precision was {false}:     4990 (1%)
  Times result was cached:         406452 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5919 (1%)
  Times result was 'false':        1748 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         412731
  BDD entailment checks:           71107
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          169
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         739103
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 67.75
Number of irrelevant predicates:          332961 (45%)
Number of preds handled by boolean abs:   7279 (1%)
  Total number of models for allsat:      6014
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 80.113s
  Time for path formula creation:       78.730s
Time for strengthen operator:            2.486s
Time for prec operator:                125.066s
  Time for abstraction:                118.499s (Max:     1.148s, Count: 442294)
    Boolean abstraction:                29.999s
    Solving time:                       50.665s (Max:     0.175s)
    Model enumeration time:              1.972s
    Time for BDD construction:           0.168s (Max:     0.011s)
Time for merge operator:                 8.355s
Time for coverage check:                 0.214s
  Time for BDD entailment checks:        0.144s
Total time for SMT solver (w/o itp):    52.637s

Number of path formula cache hits:   1841142 (62%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    67.430s

Total number of created targets for pointer analysis: 998880
   Number of created targets for uf: *(struct_pi_adapter)* is 177
   Number of created targets for uf: *signed_int is 50
   Number of created targets for uf: *(char)* is 21
   Number of created targets for uf: *char is 70713


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11798 (count: 156521, min: 0, max: 842, avg: 0.08)
Time for BDD node cleanup:                             0.070s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.068s
  Time for transition matches:                         2.348s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      2618481 (count: 2618481, min: 1, max: 1, avg: 1.00) [1 x 2618481]

CPA algorithm statistics
------------------------
Number of iterations:            1680231
Max size of waitlist:            87
Average size of waitlist:        30
Number of computed successors:   1923512
Max successors for one state:    2
Number of times merged:          170812
Number of times stopped:         239926
Number of times breaked:         86

Total time for CPA algorithm:       273.416s (Max:    13.562s)
  Time for choose from waitlist:      0.930s
  Time for precision adjustment:    139.282s
  Time for transfer relation:       109.574s
  Time for merge operator:           10.910s
  Time for stop operator:             2.647s
  Time for adding to reached set:     3.703s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   86
Avg. length of target path (in blocks):                6462 (count: 86, min: 5, max: 208, avg: 75.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.613s
  Counterexample analysis:                             8.913s (Max:     0.369s, Calls: 86)
    Refinement sat check:                              7.073s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.097s
  Precision update:                                    0.035s
  ARG update:                                          3.471s

Length of refined path (in blocks):                    5530 (count: 86, min: 2, max: 172, avg: 64.30)
Number of affected states:                             5104 (count: 86, min: 0, max: 171, avg: 59.35)
Length (states) of path with itp 'true':                340 (count: 86, min: 0, max: 93, avg: 3.95)
Length (states) of path with itp non-trivial itp:      5104 (count: 86, min: 0, max: 171, avg: 59.35)
Length (states) of path with itp 'false':                86 (count: 86, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 86, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5027 (count: 86, min: 0, max: 170, avg: 58.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                86
Number of successful refinements:     86
Number of failed refinements:         0
Max. size of reached set before ref.: 35613
Max. size of reached set after ref.:  23549
Avg. size of reached set before ref.: 20310.98
Avg. size of reached set after ref.:  1224.83

Total time for CEGAR algorithm:     287.313s
Time for refinements:                13.810s
Average time for refinement:          0.160s
Max time for refinement:              0.485s

Code Coverage
-----------------------------
  Function coverage:      0.875
  Visited lines:          1535
  Total lines:            1570
  Line coverage:          0.978
  Visited conditions:     288
  Total conditions:       302
  Condition coverage:     0.954

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             40430
  Number of reached locations:   880 (46%)
    Avg states per location:     45
    Max states per location:     2161 (at node N95)
  Number of reached functions:   42 (88%)
  Number of partitions:          40430
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.867s
  Time for loading CPAs:          0.880s
  Time for loading parser:        0.707s
  Time for CFA construction:      3.139s
    Time for parsing file(s):     0.922s
    Time for AST to CFA:          1.126s
    Time for CFA sanity check:    0.168s
    Time for post-processing:     0.704s
      Time for var class.:        0.316s
Time for Analysis:              287.313s
CPU time for analysis:          287.300s
Time for analyzing result:        0.034s
Total time for CPAchecker:      292.184s
Total CPU time for CPAchecker:  292.160s
Time for statistics:              0.677s

Time for Garbage Collector:      20.354s (in 349 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                654MB (   624 MiB) max;    339MB (   324 MiB) avg;    675MB (   644 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           773MB (   737 MiB) max;    506MB (   483 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8225MB (  7844 MiB) max;   8145MB (  7768 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
