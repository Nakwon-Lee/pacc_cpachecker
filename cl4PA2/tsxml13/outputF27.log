scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zr9w7by2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            428922 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  377986 (88%)
  Because of loop head:            50846 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         90 (0%)
  Times precision was empty:       20536 (5%)
  Times precision was {false}:     1721 (0%)
  Times result was cached:         404543 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2122 (0%)
  Times result was 'false':        1673 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         388118
  BDD entailment checks:           71066
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          169
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         722181
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 187.92
Number of irrelevant predicates:          198466 (27%)
Number of preds handled by boolean abs:   2754 (0%)
  Total number of models for allsat:      2170
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 23.301s
  Time for path formula creation:       22.036s
Time for strengthen operator:            2.226s
Time for prec operator:                 78.228s
  Time for abstraction:                 72.329s (Max:     0.450s, Count: 428922)
    Boolean abstraction:                 9.163s
    Solving time:                       13.712s (Max:     0.255s)
    Model enumeration time:              0.713s
    Time for BDD construction:           0.068s (Max:     0.005s)
Time for merge operator:                 2.075s
Time for coverage check:                 0.193s
  Time for BDD entailment checks:        0.131s
Total time for SMT solver (w/o itp):    14.425s

Number of path formula cache hits:   2863324 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.939s

Total number of created targets for pointer analysis: 166212
   Number of created targets for uf: *(struct_pi_adapter)* is 133
   Number of created targets for uf: *signed_int is 50
   Number of created targets for uf: *(char)* is 137
   Number of created targets for uf: *char is 4697


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4258 (count: 112956, min: 0, max: 252, avg: 0.04)
Time for BDD node cleanup:                             0.053s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.758s
  Time for transition matches:                         2.167s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      2502234 (count: 2502234, min: 1, max: 1, avg: 1.00) [1 x 2502234]

CPA algorithm statistics
------------------------
Number of iterations:            1614346
Max size of waitlist:            68
Average size of waitlist:        21
Number of computed successors:   1843833
Max successors for one state:    2
Number of times merged:          158526
Number of times stopped:         226808
Number of times breaked:         90

Total time for CPA algorithm:       157.824s (Max:     5.500s)
  Time for choose from waitlist:      0.868s
  Time for precision adjustment:     91.307s
  Time for transfer relation:        50.321s
  Time for merge operator:            4.321s
  Time for stop operator:             2.369s
  Time for adding to reached set:     3.060s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   90
Avg. length of target path (in blocks):                4662 (count: 90, min: 5, max: 158, avg: 51.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.020s
  Counterexample analysis:                             5.071s (Max:     0.252s, Calls: 90)
    Refinement sat check:                              4.042s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.123s
  Precision update:                                    0.078s
  ARG update:                                          3.648s

Length of refined path (in blocks):                    4295 (count: 90, min: 2, max: 151, avg: 47.72)
Number of affected states:                             3877 (count: 90, min: 0, max: 150, avg: 43.08)
Length (states) of path with itp 'true':                328 (count: 90, min: 0, max: 90, avg: 3.64)
Length (states) of path with itp non-trivial itp:      3877 (count: 90, min: 0, max: 150, avg: 43.08)
Length (states) of path with itp 'false':                90 (count: 90, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 90, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3796 (count: 90, min: 0, max: 149, avg: 42.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                90
Number of successful refinements:     90
Number of failed refinements:         0
Max. size of reached set before ref.: 40485
Max. size of reached set after ref.:  40421
Avg. size of reached set before ref.: 19765.34
Avg. size of reached set after ref.:  2266.20

Total time for CEGAR algorithm:     168.901s
Time for refinements:                10.918s
Average time for refinement:          0.121s
Max time for refinement:              0.607s

Code Coverage
-----------------------------
  Function coverage:      0.875
  Visited lines:          1535
  Total lines:            1570
  Line coverage:          0.978
  Visited conditions:     288
  Total conditions:       302
  Condition coverage:     0.954

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             40430
  Number of reached locations:   880 (46%)
    Avg states per location:     45
    Max states per location:     2161 (at node N95)
  Number of reached functions:   42 (88%)
  Number of partitions:          40430
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.085s
  Time for loading CPAs:          0.914s
  Time for loading parser:        0.742s
  Time for CFA construction:      3.257s
    Time for parsing file(s):     0.993s
    Time for AST to CFA:          1.139s
    Time for CFA sanity check:    0.191s
    Time for post-processing:     0.713s
      Time for var class.:        0.323s
Time for Analysis:              168.901s
CPU time for analysis:          168.880s
Time for analyzing result:        0.033s
Total time for CPAchecker:      173.991s
Total CPU time for CPAchecker:  173.960s
Time for statistics:              0.600s

Time for Garbage Collector:      15.485s (in 616 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                248MB (   236 MiB) max;    118MB (   112 MiB) avg;    259MB (   247 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    36 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           259MB (   247 MiB) max;    182MB (   173 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8083MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
