scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8cjjkm7n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            325710 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  285013 (88%)
  Because of loop head:            40572 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         125 (0%)
  Times precision was empty:       19899 (6%)
  Times precision was {false}:     1935 (1%)
  Times result was cached:         301673 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2203 (1%)
  Times result was 'false':        1696 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         272288
  BDD entailment checks:           53356
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          169
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         531727
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 128.50
Number of irrelevant predicates:          246008 (46%)
Number of preds handled by boolean abs:   2878 (1%)
  Total number of models for allsat:      2273
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                 24.572s
  Time for path formula creation:       23.459s
Time for strengthen operator:            1.789s
Time for prec operator:                 69.472s
  Time for abstraction:                 65.143s (Max:     0.662s, Count: 325710)
    Boolean abstraction:                11.391s
    Solving time:                       21.615s (Max:     0.323s)
    Model enumeration time:              0.970s
    Time for BDD construction:           0.124s (Max:     0.012s)
Time for merge operator:                 2.304s
Time for coverage check:                 0.126s
  Time for BDD entailment checks:        0.077s
Total time for SMT solver (w/o itp):    22.585s

Number of path formula cache hits:   2075844 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.549s

Total number of created targets for pointer analysis: 256108
   Number of created targets for uf: *(struct_pi_adapter)* is 173
   Number of created targets for uf: *signed_int is 491
   Number of created targets for uf: *(char)* is 197
   Number of created targets for uf: *char is 6849


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4428 (count: 96165, min: 0, max: 80, avg: 0.05)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.908s
  Time for transition matches:                         1.515s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1930395 (count: 1930395, min: 1, max: 1, avg: 1.00) [1 x 1930395]

CPA algorithm statistics
------------------------
Number of iterations:            1193187
Max size of waitlist:            214
Average size of waitlist:        101
Number of computed successors:   1359979
Max successors for one state:    2
Number of times merged:          109466
Number of times stopped:         156811
Number of times breaked:         125

Total time for CPA algorithm:       138.377s (Max:     8.659s)
  Time for choose from waitlist:      0.580s
  Time for precision adjustment:     80.055s
  Time for transfer relation:        45.640s
  Time for merge operator:            3.792s
  Time for stop operator:             1.836s
  Time for adding to reached set:     2.159s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   125
Avg. length of target path (in blocks):                6397 (count: 125, min: 5, max: 158, avg: 51.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.572s
  Counterexample analysis:                             6.845s (Max:     0.227s, Calls: 125)
    Refinement sat check:                              5.729s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.120s
  Precision update:                                    0.105s
  ARG update:                                          2.355s

Length of refined path (in blocks):                    5429 (count: 125, min: 2, max: 151, avg: 43.43)
Number of affected states:                             3765 (count: 125, min: 0, max: 150, avg: 30.12)
Length (states) of path with itp 'true':               1539 (count: 125, min: 0, max: 93, avg: 12.31)
Length (states) of path with itp non-trivial itp:      3765 (count: 125, min: 0, max: 150, avg: 30.12)
Length (states) of path with itp 'false':               125 (count: 125, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 125, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3684 (count: 125, min: 0, max: 149, avg: 29.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                125
Number of successful refinements:     125
Number of failed refinements:         0
Max. size of reached set before ref.: 64472
Max. size of reached set after ref.:  50367
Avg. size of reached set before ref.: 14231.12
Avg. size of reached set after ref.:  4942.78

Total time for CEGAR algorithm:     149.927s
Time for refinements:                11.024s
Average time for refinement:          0.088s
Max time for refinement:              0.397s

Code Coverage
-----------------------------
  Function coverage:      0.875
  Visited lines:          1535
  Total lines:            1570
  Line coverage:          0.978
  Visited conditions:     288
  Total conditions:       302
  Condition coverage:     0.954

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             40430
  Number of reached locations:   880 (46%)
    Avg states per location:     45
    Max states per location:     2161 (at node N95)
  Number of reached functions:   42 (88%)
  Number of partitions:          40430
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.067s
  Time for loading CPAs:          1.070s
  Time for loading parser:        0.724s
  Time for CFA construction:      3.091s
    Time for parsing file(s):     0.989s
    Time for AST to CFA:          1.059s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.635s
      Time for var class.:        0.297s
Time for Analysis:              149.927s
CPU time for analysis:          149.900s
Time for analyzing result:        0.031s
Total time for CPAchecker:      154.999s
Total CPU time for CPAchecker:  154.960s
Time for statistics:              0.603s

Time for Garbage Collector:      12.370s (in 501 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                298MB (   284 MiB) max;    115MB (   109 MiB) avg;    306MB (   292 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           308MB (   294 MiB) max;    183MB (   175 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8083MB (  7709 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
