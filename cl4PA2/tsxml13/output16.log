scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ud87x5en/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25107 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20730 (83%)
  Because of loop head:            4320 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (0%)
  Times precision was empty:       12526 (50%)
  Times precision was {false}:     384 (2%)
  Times result was cached:         11913 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      284 (1%)
  Times result was 'false':        208 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         14239
  BDD entailment checks:           5435
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          91
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         18985
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 28.42
Number of irrelevant predicates:          12675 (67%)
Number of preds handled by boolean abs:   331 (2%)
  Total number of models for allsat:      294
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  6.577s
  Time for path formula creation:        6.389s
Time for strengthen operator:            0.271s
Time for prec operator:                  8.680s
  Time for abstraction:                  8.029s (Max:     0.084s, Count: 25107)
    Boolean abstraction:                 2.120s
    Solving time:                        3.303s (Max:     0.060s)
    Model enumeration time:              0.167s
    Time for BDD construction:           0.074s (Max:     0.012s)
Time for merge operator:                 0.363s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     3.470s

Number of path formula cache hits:   151477 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.642s

Total number of created targets for pointer analysis: 38873
   Number of created targets for uf: *(struct_pi_adapter)* is 37
   Number of created targets for uf: *signed_int is 50
   Number of created targets for uf: *(char)* is 21
   Number of created targets for uf: *char is 1225


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         558 (count: 21599, min: 0, max: 56, avg: 0.03)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.653s
  Time for transition matches:                         0.294s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       156907 (count: 156907, min: 1, max: 1, avg: 1.00) [1 x 156907]

CPA algorithm statistics
------------------------
Number of iterations:            84770
Max size of waitlist:            142
Average size of waitlist:        54
Number of computed successors:   94970
Max successors for one state:    2
Number of times merged:          4402
Number of times stopped:         7946
Number of times breaked:         57

Total time for CPA algorithm:        22.956s (Max:     1.045s)
  Time for choose from waitlist:      0.225s
  Time for precision adjustment:     10.069s
  Time for transfer relation:        10.289s
  Time for merge operator:            0.601s
  Time for stop operator:             0.338s
  Time for adding to reached set:     0.482s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                1238 (count: 57, min: 5, max: 37, avg: 21.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.204s
  Counterexample analysis:                             1.630s (Max:     0.084s, Calls: 57)
    Refinement sat check:                              1.376s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.105s
  ARG update:                                          0.356s

Length of refined path (in blocks):                     934 (count: 57, min: 2, max: 33, avg: 16.39)
Number of affected states:                              582 (count: 57, min: 0, max: 32, avg: 10.21)
Length (states) of path with itp 'true':                295 (count: 57, min: 0, max: 29, avg: 5.18)
Length (states) of path with itp non-trivial itp:       582 (count: 57, min: 0, max: 32, avg: 10.21)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 57, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             548 (count: 57, min: 0, max: 31, avg: 9.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 7485
Max. size of reached set after ref.:  6085
Avg. size of reached set before ref.: 2614.81
Avg. size of reached set after ref.:  1129.04

Total time for CEGAR algorithm:      25.547s
Time for refinements:                 2.532s
Average time for refinement:          0.044s
Max time for refinement:              0.104s

Code Coverage
-----------------------------
  Function coverage:      0.771
  Visited lines:          1246
  Total lines:            1570
  Line coverage:          0.794
  Visited conditions:     180
  Total conditions:       302
  Condition coverage:     0.596

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             2127
  Number of reached locations:   566 (29%)
    Avg states per location:     3
    Max states per location:     59 (at node N102)
  Number of reached functions:   37 (77%)
  Number of partitions:          2122
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N831 (before line 3978), Function pt_detect called from node N1377, stack depth 3 [750118e4], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        57

Time for analysis setup:          4.712s
  Time for loading CPAs:          0.882s
  Time for loading parser:        0.654s
  Time for CFA construction:      3.029s
    Time for parsing file(s):     0.876s
    Time for AST to CFA:          1.116s
    Time for CFA sanity check:    0.191s
    Time for post-processing:     0.671s
      Time for var class.:        0.317s
Time for Analysis:               25.547s
CPU time for analysis:           25.540s
Total time for CPAchecker:       30.267s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.126s

Time for Garbage Collector:       0.602s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     47MB (    45 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
