scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c72y6oe8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1266062 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1122606 (89%)
  Because of loop head:            143369 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (0%)
  Times precision was empty:       150759 (12%)
  Times precision was {false}:     5843 (0%)
  Times result was cached:         1103683 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5777 (0%)
  Times result was 'false':        3553 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1181503
  BDD entailment checks:           202167
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          169
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1983787
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 170.72
Number of irrelevant predicates:          1235665 (62%)
Number of preds handled by boolean abs:   7129 (0%)
  Total number of models for allsat:      5942
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                208.448s
  Time for path formula creation:      204.886s
Time for strengthen operator:            7.289s
Time for prec operator:                229.638s
  Time for abstraction:                206.495s (Max:     3.081s, Count: 1266062)
    Boolean abstraction:                27.989s
    Solving time:                       51.846s (Max:     0.185s)
    Model enumeration time:              2.207s
    Time for BDD construction:           0.154s (Max:     0.008s)
Time for merge operator:                21.164s
Time for coverage check:                 0.469s
  Time for BDD entailment checks:        0.322s
Total time for SMT solver (w/o itp):    54.053s

Number of path formula cache hits:   4985680 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   171.233s

Total number of created targets for pointer analysis: 2446690
   Number of created targets for uf: *(struct_pi_adapter)* is 177
   Number of created targets for uf: *signed_int is 23466
   Number of created targets for uf: *(char)* is 173
   Number of created targets for uf: *char is 131425


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11570 (count: 416820, min: 0, max: 746, avg: 0.03)
Time for BDD node cleanup:                             0.119s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.339s
  Time for transition matches:                         5.927s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      7473483 (count: 7473483, min: 1, max: 1, avg: 1.00) [1 x 7473483]

CPA algorithm statistics
------------------------
Number of iterations:            4802302
Max size of waitlist:            21
Average size of waitlist:        10
Number of computed successors:   5495644
Max successors for one state:    2
Number of times merged:          489668
Number of times stopped:         689591
Number of times breaked:         87

Total time for CPA algorithm:       629.956s (Max:    26.931s)
  Time for choose from waitlist:      2.230s
  Time for precision adjustment:    271.454s
  Time for transfer relation:       293.217s
  Time for merge operator:           28.419s
  Time for stop operator:             7.637s
  Time for adding to reached set:    10.283s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                4867 (count: 87, min: 5, max: 165, avg: 55.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  15.134s
  Counterexample analysis:                             4.608s (Max:     0.202s, Calls: 87)
    Refinement sat check:                              3.684s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.057s
  ARG update:                                         10.321s

Length of refined path (in blocks):                    4367 (count: 87, min: 2, max: 157, avg: 50.20)
Number of affected states:                             3852 (count: 87, min: 0, max: 156, avg: 44.28)
Length (states) of path with itp 'true':                428 (count: 87, min: 0, max: 94, avg: 4.92)
Length (states) of path with itp non-trivial itp:      3852 (count: 87, min: 0, max: 156, avg: 44.28)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 87, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3776 (count: 87, min: 0, max: 155, avg: 43.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 137093
Max. size of reached set after ref.:  44608
Avg. size of reached set before ref.: 58970.74
Avg. size of reached set after ref.:  4234.29

Total time for CEGAR algorithm:     648.015s
Time for refinements:                17.769s
Average time for refinement:          0.204s
Max time for refinement:              0.586s

Code Coverage
-----------------------------
  Function coverage:      0.875
  Visited lines:          1535
  Total lines:            1570
  Line coverage:          0.978
  Visited conditions:     288
  Total conditions:       302
  Condition coverage:     0.954

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             40430
  Number of reached locations:   880 (46%)
    Avg states per location:     45
    Max states per location:     2161 (at node N95)
  Number of reached functions:   42 (88%)
  Number of partitions:          40430
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.726s
  Time for loading CPAs:          0.896s
  Time for loading parser:        0.723s
  Time for CFA construction:      2.954s
    Time for parsing file(s):     0.864s
    Time for AST to CFA:          1.091s
    Time for CFA sanity check:    0.160s
    Time for post-processing:     0.663s
      Time for var class.:        0.310s
Time for Analysis:              648.016s
CPU time for analysis:          647.970s
Time for analyzing result:        0.035s
Total time for CPAchecker:      652.747s
Total CPU time for CPAchecker:  652.690s
Time for statistics:              0.681s

Time for Garbage Collector:      63.225s (in 442 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1993MB (  1900 MiB) max;    995MB (   949 MiB) avg;   2036MB (  1941 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     38MB (    36 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2291MB (  2184 MiB) max;   1449MB (  1382 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8122MB (  7746 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
