scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xyk8jn5p/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            31753 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27799 (88%)
  Because of loop head:            3938 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       17099 (54%)
  Times precision was {false}:     514 (2%)
  Times result was cached:         13944 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      196 (1%)
  Times result was 'false':        99 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         27189
  BDD entailment checks:           5481
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          3
Number of abstraction locations:          69
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         14903
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 20.99
Number of irrelevant predicates:          12635 (85%)
Number of preds handled by boolean abs:   197 (1%)
  Total number of models for allsat:      195
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  7.212s
  Time for path formula creation:        6.936s
Time for strengthen operator:            0.357s
Time for prec operator:                  6.124s
  Time for abstraction:                  5.057s (Max:     0.068s, Count: 31753)
    Boolean abstraction:                 0.379s
    Solving time:                        1.105s (Max:     0.058s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.022s (Max:     0.006s)
Time for merge operator:                 0.607s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     1.126s

Number of path formula cache hits:   181990 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.988s

Total number of created targets for pointer analysis: 15932
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 319
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 4016


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         402 (count: 26336, min: 0, max: 68, avg: 0.02)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.601s
  Time for transition matches:                         0.275s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       182288 (count: 182288, min: 1, max: 1, avg: 1.00) [1 x 182288]

CPA algorithm statistics
------------------------
Number of iterations:            117928
Max size of waitlist:            68
Average size of waitlist:        35
Number of computed successors:   134240
Max successors for one state:    2
Number of times merged:          10854
Number of times stopped:         15985
Number of times breaked:         16

Total time for CPA algorithm:        23.974s (Max:     3.608s)
  Time for choose from waitlist:      0.328s
  Time for precision adjustment:      8.011s
  Time for transfer relation:        11.962s
  Time for merge operator:            1.061s
  Time for stop operator:             0.608s
  Time for adding to reached set:     0.512s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 553 (count: 16, min: 5, max: 63, avg: 34.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.148s
  Counterexample analysis:                             0.479s (Max:     0.053s, Calls: 16)
    Refinement sat check:                              0.340s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.016s
  ARG update:                                          0.544s

Length of refined path (in blocks):                     521 (count: 16, min: 2, max: 62, avg: 32.56)
Number of affected states:                              481 (count: 16, min: 0, max: 61, avg: 30.06)
Length (states) of path with itp 'true':                 24 (count: 16, min: 0, max: 24, avg: 1.50)
Length (states) of path with itp non-trivial itp:       481 (count: 16, min: 0, max: 61, avg: 30.06)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             466 (count: 16, min: 0, max: 60, avg: 29.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 12315
Max. size of reached set after ref.:  6116
Avg. size of reached set before ref.: 7318.88
Avg. size of reached set after ref.:  385.06

Total time for CEGAR algorithm:      25.379s
Time for refinements:                 1.399s
Average time for refinement:          0.087s
Max time for refinement:              0.121s

Code Coverage
-----------------------------
  Function coverage:      0.708
  Visited lines:          1069
  Total lines:            1570
  Line coverage:          0.681
  Visited conditions:     154
  Total conditions:       302
  Condition coverage:     0.510

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             7216
  Number of reached locations:   515 (27%)
    Avg states per location:     14
    Max states per location:     344 (at node N95)
  Number of reached functions:   34 (71%)
  Number of partitions:          7199
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N831 (before line 3978), Function pt_detect called from node N1377, stack depth 3 [c5ba65], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          4.886s
  Time for loading CPAs:          0.966s
  Time for loading parser:        0.717s
  Time for CFA construction:      3.062s
    Time for parsing file(s):     0.881s
    Time for AST to CFA:          1.150s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.651s
      Time for var class.:        0.315s
Time for Analysis:               25.379s
CPU time for analysis:           25.380s
Total time for CPAchecker:       30.270s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.223s

Time for Garbage Collector:       1.165s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                110MB (   104 MiB) max;     59MB (    56 MiB) avg;    113MB (   108 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
