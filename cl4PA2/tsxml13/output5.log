scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vm0ccet3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18450 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16307 (88%)
  Because of loop head:            2139 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       18404 (100%)
  Times precision was {false}:     21 (0%)
  Times result was cached:         16 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9 (0%)
  Times result was 'false':        3 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         17083
  BDD entailment checks:           2969
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          3
Number of abstraction locations:          21
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         54
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.80
Number of irrelevant predicates:          38 (70%)
Number of preds handled by boolean abs:   10 (19%)
  Total number of models for allsat:      8
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.89

Time for post operator:                 12.122s
  Time for path formula creation:       11.883s
Time for strengthen operator:            0.297s
Time for prec operator:                  1.854s
  Time for abstraction:                  0.998s (Max:     0.086s, Count: 18450)
    Boolean abstraction:                 0.216s
    Solving time:                        0.408s (Max:     0.071s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.007s (Max:     0.006s)
Time for merge operator:                 1.441s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     0.411s

Number of path formula cache hits:   44693 (38%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.039s

Total number of created targets for pointer analysis: 45560
   Number of created targets for uf: *(struct_pi_adapter)* is 13
   Number of created targets for uf: *signed_int is 379
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *char is 1905


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          28 (count: 21541, min: 0, max: 17, avg: 0.00)
Time for BDD node cleanup:                             0.058s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.806s
  Time for transition matches:                         0.342s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       109889 (count: 109889, min: 1, max: 1, avg: 1.00) [1 x 109889]

CPA algorithm statistics
------------------------
Number of iterations:            69964
Max size of waitlist:            32
Average size of waitlist:        18
Number of computed successors:   80043
Max successors for one state:    2
Number of times merged:          7057
Number of times stopped:         10017
Number of times breaked:         4

Total time for CPA algorithm:        24.240s (Max:     9.381s)
  Time for choose from waitlist:      0.198s
  Time for precision adjustment:      3.481s
  Time for transfer relation:        16.246s
  Time for merge operator:            1.950s
  Time for stop operator:             0.489s
  Time for adding to reached set:     0.442s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  56 (count: 4, min: 11, max: 17, avg: 14.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.711s
  Counterexample analysis:                             0.162s (Max:     0.061s, Calls: 4)
    Refinement sat check:                              0.129s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.002s
  ARG update:                                          0.526s

Length of refined path (in blocks):                      41 (count: 4, min: 2, max: 16, avg: 10.25)
Number of affected states:                               37 (count: 4, min: 1, max: 15, avg: 9.25)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        37 (count: 4, min: 1, max: 15, avg: 9.25)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              33 (count: 4, min: 0, max: 14, avg: 8.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 22576
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 17508.25
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.171s
Time for refinements:                 0.930s
Average time for refinement:          0.232s
Max time for refinement:              0.303s

Code Coverage
-----------------------------
  Function coverage:      0.021
  Visited lines:          502
  Total lines:            1570
  Line coverage:          0.320
  Visited conditions:     0
  Total conditions:       302
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             3
  Number of reached locations:   3 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N1488)
  Number of reached functions:   1 (2%)
  Number of partitions:          3
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.662s
  Time for loading CPAs:          0.924s
  Time for loading parser:        0.662s
  Time for CFA construction:      2.905s
    Time for parsing file(s):     0.888s
    Time for AST to CFA:          1.044s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     0.633s
      Time for var class.:        0.298s
Time for Analysis:               25.171s
CPU time for analysis:           25.180s
Total time for CPAchecker:       29.845s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.114s

Time for Garbage Collector:       1.374s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     64MB (    61 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           148MB (   141 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
