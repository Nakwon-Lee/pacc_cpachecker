scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tw2r7sf5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21596 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17659 (82%)
  Because of loop head:            3908 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       10733 (50%)
  Times precision was {false}:     570 (3%)
  Times result was cached:         10007 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      286 (1%)
  Times result was 'false':        128 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         15315
  BDD entailment checks:           5155
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          82
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         19100
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 22.31
Number of irrelevant predicates:          14039 (74%)
Number of preds handled by boolean abs:   343 (2%)
  Total number of models for allsat:      306
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  5.985s
  Time for path formula creation:        5.765s
Time for strengthen operator:            0.252s
Time for prec operator:                 10.958s
  Time for abstraction:                 10.379s (Max:     0.114s, Count: 21596)
    Boolean abstraction:                 3.293s
    Solving time:                        5.520s (Max:     0.068s)
    Model enumeration time:              0.368s
    Time for BDD construction:           0.081s (Max:     0.010s)
Time for merge operator:                 0.331s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     5.888s

Number of path formula cache hits:   109080 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.300s

Total number of created targets for pointer analysis: 42350
   Number of created targets for uf: *(struct_pi_adapter)* is 61
   Number of created targets for uf: *signed_int is 4634
   Number of created targets for uf: *(char)* is 49
   Number of created targets for uf: *char is 1581


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         594 (count: 20471, min: 0, max: 74, avg: 0.03)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.509s
  Time for transition matches:                         0.232s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       117221 (count: 117221, min: 1, max: 1, avg: 1.00) [1 x 117221]

CPA algorithm statistics
------------------------
Number of iterations:            76476
Max size of waitlist:            30
Average size of waitlist:        16
Number of computed successors:   86014
Max successors for one state:    2
Number of times merged:          5080
Number of times stopped:         9059
Number of times breaked:         29

Total time for CPA algorithm:        23.854s (Max:     2.358s)
  Time for choose from waitlist:      0.200s
  Time for precision adjustment:     12.218s
  Time for transfer relation:         9.081s
  Time for merge operator:            0.647s
  Time for stop operator:             0.378s
  Time for adding to reached set:     0.401s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 673 (count: 29, min: 5, max: 50, avg: 23.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.484s
  Counterexample analysis:                             1.082s (Max:     0.112s, Calls: 29)
    Refinement sat check:                              0.854s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.045s
  ARG update:                                          0.305s

Length of refined path (in blocks):                     572 (count: 29, min: 2, max: 49, avg: 19.72)
Number of affected states:                              519 (count: 29, min: 0, max: 48, avg: 17.90)
Length (states) of path with itp 'true':                 24 (count: 29, min: 0, max: 24, avg: 0.83)
Length (states) of path with itp non-trivial itp:       519 (count: 29, min: 0, max: 48, avg: 17.90)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             491 (count: 29, min: 0, max: 47, avg: 16.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 7286
Max. size of reached set after ref.:  7119
Avg. size of reached set before ref.: 2735.62
Avg. size of reached set after ref.:  248.38

Total time for CEGAR algorithm:      25.560s
Time for refinements:                 1.677s
Average time for refinement:          0.057s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.708
  Visited lines:          1056
  Total lines:            1570
  Line coverage:          0.673
  Visited conditions:     150
  Total conditions:       302
  Condition coverage:     0.497

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             4697
  Number of reached locations:   501 (26%)
    Avg states per location:     9
    Max states per location:     212 (at node N95)
  Number of reached functions:   34 (71%)
  Number of partitions:          4692
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1599 (before line 4923), Function main called from node N1488, stack depth 1 [1e886a5b], stack [main]])
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          4.708s
  Time for loading CPAs:          0.910s
  Time for loading parser:        0.646s
  Time for CFA construction:      2.997s
    Time for parsing file(s):     0.894s
    Time for AST to CFA:          1.059s
    Time for CFA sanity check:    0.192s
    Time for post-processing:     0.669s
      Time for var class.:        0.322s
Time for Analysis:               25.560s
CPU time for analysis:           25.560s
Total time for CPAchecker:       30.274s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.199s

Time for Garbage Collector:       0.628s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     47MB (    45 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
