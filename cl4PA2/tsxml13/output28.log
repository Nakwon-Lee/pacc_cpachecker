scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m8lqwebg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17707 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14668 (83%)
  Because of loop head:            2998 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (0%)
  Times precision was empty:       2452 (14%)
  Times precision was {false}:     428 (2%)
  Times result was cached:         14435 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      392 (2%)
  Times result was 'false':        243 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         14839
  BDD entailment checks:           3647
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          117
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         16759
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 20.44
Number of irrelevant predicates:          4372 (26%)
Number of preds handled by boolean abs:   430 (3%)
  Total number of models for allsat:      397
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  6.263s
  Time for path formula creation:        6.034s
Time for strengthen operator:            0.215s
Time for prec operator:                  9.618s
  Time for abstraction:                  8.907s (Max:     0.064s, Count: 17707)
    Boolean abstraction:                 2.056s
    Solving time:                        3.316s (Max:     0.054s)
    Model enumeration time:              0.173s
    Time for BDD construction:           0.090s (Max:     0.012s)
Time for merge operator:                 0.281s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     3.489s

Number of path formula cache hits:   110027 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.471s

Total number of created targets for pointer analysis: 29014
   Number of created targets for uf: *(struct_pi_adapter)* is 45
   Number of created targets for uf: *signed_int is 1903
   Number of created targets for uf: *(char)* is 13
   Number of created targets for uf: *char is 521


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         768 (count: 10608, min: 0, max: 100, avg: 0.07)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.444s
Automaton transfers with branching:                0
Automaton transfer successors:                       123291 (count: 123291, min: 1, max: 1, avg: 1.00) [1 x 123291]

CPA algorithm statistics
------------------------
Number of iterations:            70150
Max size of waitlist:            46
Average size of waitlist:        21
Number of computed successors:   80260
Max successors for one state:    2
Number of times merged:          5596
Number of times stopped:         8588
Number of times breaked:         41

Total time for CPA algorithm:        22.536s (Max:     1.364s)
  Time for choose from waitlist:      0.128s
  Time for precision adjustment:     10.910s
  Time for transfer relation:         9.329s
  Time for merge operator:            0.645s
  Time for stop operator:             0.313s
  Time for adding to reached set:     0.340s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                1504 (count: 41, min: 5, max: 84, avg: 36.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.178s
  Counterexample analysis:                             1.687s (Max:     0.091s, Calls: 41)
    Refinement sat check:                              1.280s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.044s
  ARG update:                                          0.322s

Length of refined path (in blocks):                    1408 (count: 41, min: 2, max: 83, avg: 34.34)
Number of affected states:                             1347 (count: 41, min: 0, max: 82, avg: 32.85)
Length (states) of path with itp 'true':                 20 (count: 41, min: 0, max: 10, avg: 0.49)
Length (states) of path with itp non-trivial itp:      1347 (count: 41, min: 0, max: 82, avg: 32.85)
Length (states) of path with itp 'false':                41 (count: 41, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 41, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1308 (count: 41, min: 0, max: 81, avg: 31.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 3944
Max. size of reached set after ref.:  702
Avg. size of reached set before ref.: 1677.88
Avg. size of reached set after ref.:  30.54

Total time for CEGAR algorithm:      24.975s
Time for refinements:                 2.436s
Average time for refinement:          0.059s
Max time for refinement:              0.137s

Code Coverage
-----------------------------
  Function coverage:      0.792
  Visited lines:          1361
  Total lines:            1570
  Line coverage:          0.867
  Visited conditions:     226
  Total conditions:       302
  Condition coverage:     0.748

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             3888
  Number of reached locations:   695 (36%)
    Avg states per location:     5
    Max states per location:     155 (at node N96)
  Number of reached functions:   38 (79%)
  Number of partitions:          3874
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N831 (before line 3978), Function pt_detect called from node N1377, stack depth 3 [707189ac], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        46

Time for analysis setup:          4.757s
  Time for loading CPAs:          0.958s
  Time for loading parser:        0.644s
  Time for CFA construction:      2.975s
    Time for parsing file(s):     0.899s
    Time for AST to CFA:          1.057s
    Time for CFA sanity check:    0.165s
    Time for post-processing:     0.655s
      Time for var class.:        0.318s
Time for Analysis:               24.975s
CPU time for analysis:           24.980s
Total time for CPAchecker:       29.738s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.147s

Time for Garbage Collector:       0.556s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     48MB (    46 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
