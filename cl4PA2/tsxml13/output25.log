scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hmci2g7j/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22343 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18376 (82%)
  Because of loop head:            3913 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (0%)
  Times precision was empty:       11393 (51%)
  Times precision was {false}:     331 (1%)
  Times result was cached:         10357 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      262 (1%)
  Times result was 'false':        179 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         12636
  BDD entailment checks:           4994
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          4
Number of abstraction locations:          81
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         16336
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 27.55
Number of irrelevant predicates:          10883 (67%)
Number of preds handled by boolean abs:   309 (2%)
  Total number of models for allsat:      272
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  6.749s
  Time for path formula creation:        6.522s
Time for strengthen operator:            0.253s
Time for prec operator:                  8.394s
  Time for abstraction:                  7.715s (Max:     0.108s, Count: 22343)
    Boolean abstraction:                 2.253s
    Solving time:                        3.366s (Max:     0.062s)
    Model enumeration time:              0.170s
    Time for BDD construction:           0.066s (Max:     0.013s)
Time for merge operator:                 0.296s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     3.536s

Number of path formula cache hits:   133124 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.772s

Total number of created targets for pointer analysis: 37774
   Number of created targets for uf: *(struct_pi_adapter)* is 37
   Number of created targets for uf: *signed_int is 50
   Number of created targets for uf: *(char)* is 21
   Number of created targets for uf: *char is 1225


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         546 (count: 19631, min: 0, max: 60, avg: 0.03)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.598s
  Time for transition matches:                         0.300s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       140180 (count: 140180, min: 1, max: 1, avg: 1.00) [1 x 140180]

CPA algorithm statistics
------------------------
Number of iterations:            75574
Max size of waitlist:            139
Average size of waitlist:        51
Number of computed successors:   84654
Max successors for one state:    2
Number of times merged:          3821
Number of times stopped:         7027
Number of times breaked:         54

Total time for CPA algorithm:        22.697s (Max:     1.126s)
  Time for choose from waitlist:      0.205s
  Time for precision adjustment:      9.652s
  Time for transfer relation:        10.470s
  Time for merge operator:            0.549s
  Time for stop operator:             0.310s
  Time for adding to reached set:     0.449s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   54
Avg. length of target path (in blocks):                1136 (count: 54, min: 5, max: 37, avg: 21.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.024s
  Counterexample analysis:                             1.445s (Max:     0.086s, Calls: 54)
    Refinement sat check:                              1.218s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.095s
  Precision update:                                    0.091s
  ARG update:                                          0.355s

Length of refined path (in blocks):                     841 (count: 54, min: 2, max: 30, avg: 15.57)
Number of affected states:                              521 (count: 54, min: 0, max: 29, avg: 9.65)
Length (states) of path with itp 'true':                266 (count: 54, min: 0, max: 29, avg: 4.93)
Length (states) of path with itp non-trivial itp:       521 (count: 54, min: 0, max: 29, avg: 9.65)
Length (states) of path with itp 'false':                54 (count: 54, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 54, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             489 (count: 54, min: 0, max: 28, avg: 9.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                54
Number of successful refinements:     54
Number of failed refinements:         0
Max. size of reached set before ref.: 7314
Max. size of reached set after ref.:  5892
Avg. size of reached set before ref.: 2414.30
Avg. size of reached set after ref.:  1078.96

Total time for CEGAR algorithm:      25.113s
Time for refinements:                 2.339s
Average time for refinement:          0.043s
Max time for refinement:              0.104s

Code Coverage
-----------------------------
  Function coverage:      0.833
  Visited lines:          1411
  Total lines:            1570
  Line coverage:          0.899
  Visited conditions:     236
  Total conditions:       302
  Condition coverage:     0.781

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             5340
  Number of reached locations:   737 (38%)
    Avg states per location:     7
    Max states per location:     155 (at node N96)
  Number of reached functions:   40 (83%)
  Number of partitions:          5314
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N769 (before line 3895), Function pt_probe called from node N845, stack depth 4 [49a20704], stack [main, pt_init, pt_detect, pt_probe]])
  Number of target states:       0
  Size of final wait list        132

Time for analysis setup:          5.133s
  Time for loading CPAs:          1.045s
  Time for loading parser:        0.722s
  Time for CFA construction:      3.183s
    Time for parsing file(s):     0.782s
    Time for AST to CFA:          1.205s
    Time for CFA sanity check:    0.224s
    Time for post-processing:     0.804s
      Time for var class.:        0.345s
Time for Analysis:               25.114s
CPU time for analysis:           25.110s
Total time for CPAchecker:       30.256s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.186s

Time for Garbage Collector:       0.577s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     46MB (    44 MiB) avg;     79MB (    76 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
