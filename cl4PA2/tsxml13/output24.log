scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kzmstk2g/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29723 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26017 (88%)
  Because of loop head:            3691 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (0%)
  Times precision was empty:       16774 (56%)
  Times precision was {false}:     505 (2%)
  Times result was cached:         12251 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      193 (1%)
  Times result was 'false':        90 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         25520
  BDD entailment checks:           5130
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          3
Number of abstraction locations:          68
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         13172
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 18.87
Number of irrelevant predicates:          11538 (88%)
Number of preds handled by boolean abs:   194 (1%)
  Total number of models for allsat:      192
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  6.869s
  Time for path formula creation:        6.560s
Time for strengthen operator:            0.292s
Time for prec operator:                  6.698s
  Time for abstraction:                  5.574s (Max:     0.077s, Count: 29723)
    Boolean abstraction:                 0.394s
    Solving time:                        1.102s (Max:     0.060s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.020s (Max:     0.007s)
Time for merge operator:                 0.577s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     1.114s

Number of path formula cache hits:   168529 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.583s

Total number of created targets for pointer analysis: 15717
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 319
   Number of created targets for uf: *(char)* is 97
   Number of created targets for uf: *char is 3813


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         396 (count: 25597, min: 0, max: 68, avg: 0.02)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.915s
  Time for transition matches:                         0.384s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       170821 (count: 170821, min: 1, max: 1, avg: 1.00) [1 x 170821]

CPA algorithm statistics
------------------------
Number of iterations:            110508
Max size of waitlist:            68
Average size of waitlist:        35
Number of computed successors:   125812
Max successors for one state:    2
Number of times merged:          10195
Number of times stopped:         15010
Number of times breaked:         15

Total time for CPA algorithm:        24.153s (Max:     3.679s)
  Time for choose from waitlist:      0.190s
  Time for precision adjustment:      8.531s
  Time for transfer relation:        11.800s
  Time for merge operator:            1.063s
  Time for stop operator:             0.530s
  Time for adding to reached set:     0.597s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 500 (count: 15, min: 5, max: 63, avg: 33.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.028s
  Counterexample analysis:                             0.420s (Max:     0.054s, Calls: 15)
    Refinement sat check:                              0.275s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.014s
  ARG update:                                          0.530s

Length of refined path (in blocks):                     469 (count: 15, min: 2, max: 62, avg: 31.27)
Number of affected states:                              430 (count: 15, min: 0, max: 61, avg: 28.67)
Length (states) of path with itp 'true':                 24 (count: 15, min: 0, max: 24, avg: 1.60)
Length (states) of path with itp non-trivial itp:       430 (count: 15, min: 0, max: 61, avg: 28.67)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             416 (count: 15, min: 0, max: 60, avg: 27.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 12315
Max. size of reached set after ref.:  6116
Avg. size of reached set before ref.: 7213.40
Avg. size of reached set after ref.:  410.53

Total time for CEGAR algorithm:      25.469s
Time for refinements:                 1.311s
Average time for refinement:          0.087s
Max time for refinement:              0.133s

Code Coverage
-----------------------------
  Function coverage:      0.708
  Visited lines:          1069
  Total lines:            1570
  Line coverage:          0.681
  Visited conditions:     154
  Total conditions:       302
  Condition coverage:     0.510

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             8669
  Number of reached locations:   515 (27%)
    Avg states per location:     16
    Max states per location:     426 (at node N96)
  Number of reached functions:   34 (71%)
  Number of partitions:          8651
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N831 (before line 3978), Function pt_detect called from node N1377, stack depth 3 [18769b07], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          4.779s
  Time for loading CPAs:          0.914s
  Time for loading parser:        0.648s
  Time for CFA construction:      3.115s
    Time for parsing file(s):     0.922s
    Time for AST to CFA:          1.135s
    Time for CFA sanity check:    0.177s
    Time for post-processing:     0.692s
      Time for var class.:        0.333s
Time for Analysis:               25.469s
CPU time for analysis:           25.470s
Total time for CPAchecker:       30.253s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.295s

Time for Garbage Collector:       1.189s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                107MB (   102 MiB) max;     58MB (    55 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
