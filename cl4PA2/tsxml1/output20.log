scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-hid-hid-magicmouse.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wh3rwhpo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3312: Function pointer *(hdev->ll_driver->start) with type int (*)(struct hid_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3296: Function pointer *(hdev->ll_driver->parse) with type int (*)(struct hid_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3927: Function pointer *(hdev->hid_output_raw_report) with type int (*)(struct hid_device *, __u8 *, size_t , unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __hid_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hid_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3296: Ignoring function call through function pointer *(hdev->ll_driver->parse): ret = (*(hdev->ll_driver->parse))(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3312: Ignoring function call through function pointer *(hdev->ll_driver->start): tmp = (*(hdev->ll_driver->start))(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hid_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3328: Ignoring function call through function pointer *(hdev->ll_driver->stop): (*(hdev->ll_driver->stop))(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hid_register_report to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3927: Ignoring function call through function pointer *(hdev->hid_output_raw_report): ret = (*(hdev->hid_output_raw_report))(hdev, (__u8 *)(&feature), 2UL, 2U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function hid_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3342: Ignoring function call through function pointer *(hdev->ll_driver->stop): (*(hdev->ll_driver->stop))(hdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 3958: Unsupported feature (recursion): hid_hw_stop(hdev); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            204 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  180 (88%)
  Because of loop head:            19 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (2%)
  Times precision was empty:       74 (36%)
  Times precision was {false}:     8 (4%)
  Times result was cached:         95 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27 (13%)
  Times result was 'false':        9 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         117
  BDD entailment checks:           33
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       25
Number of predicates discovered:          2
Number of abstraction locations:          23
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         130
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.71
Number of irrelevant predicates:          29 (22%)
Number of preds handled by boolean abs:   27 (21%)
  Total number of models for allsat:      27
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.473s
  Time for path formula creation:        0.419s
Time for strengthen operator:            0.008s
Time for prec operator:                  0.327s
  Time for abstraction:                  0.284s (Max:     0.027s, Count: 204)
    Boolean abstraction:                 0.065s
    Solving time:                        0.045s (Max:     0.010s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.013s (Max:     0.010s)
Time for merge operator:                 0.030s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.046s

Number of path formula cache hits:   923 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.408s

Total number of created targets for pointer analysis: 5
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 314, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.088s
Automaton transfers with branching:                0
Automaton transfer successors:                         1671 (count: 1671, min: 1, max: 1, avg: 1.00) [1 x 1671]

CPA algorithm statistics
------------------------
Number of iterations:            832
Max size of waitlist:            10
Average size of waitlist:        5
Number of computed successors:   940
Max successors for one state:    2
Number of times merged:          42
Number of times stopped:         66
Number of times breaked:         5

Total time for CPA algorithm:         1.424s (Max:     0.508s)
  Time for choose from waitlist:      0.024s
  Time for precision adjustment:      0.452s
  Time for transfer relation:         0.802s
  Time for merge operator:            0.053s
  Time for stop operator:             0.019s
  Time for adding to reached set:     0.015s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  89 (count: 5, min: 7, max: 24, avg: 17.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.135s
  Counterexample analysis:                             0.087s (Max:     0.025s, Calls: 5)
    Refinement sat check:                              0.059s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.003s
  ARG update:                                          0.016s

Length of refined path (in blocks):                      84 (count: 5, min: 6, max: 23, avg: 16.80)
Number of affected states:                               79 (count: 5, min: 5, max: 22, avg: 15.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        79 (count: 5, min: 5, max: 22, avg: 15.80)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              74 (count: 5, min: 4, max: 21, avg: 14.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 207
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 138.60
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.595s
Time for refinements:                 0.170s
Average time for refinement:          0.034s
Max time for refinement:              0.062s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          679
  Total lines:            1000
  Line coverage:          0.679
  Visited conditions:     50
  Total conditions:       158
  Condition coverage:     0.316

CPAchecker general statistics
-----------------------------
Number of program locations:     1232
Number of CFA edges:             1354
Number of relevant variables:    122
Number of functions:             34
Number of loops:                 5
Size of reached set:             188
  Number of reached locations:   167 (14%)
    Avg states per location:     1
    Max states per location:     4 (at node N524)
  Number of reached functions:   17 (50%)
  Number of partitions:          188
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          4.397s
  Time for loading CPAs:          0.808s
  Time for loading parser:        0.692s
  Time for CFA construction:      2.761s
    Time for parsing file(s):     0.850s
    Time for AST to CFA:          1.015s
    Time for CFA sanity check:    0.154s
    Time for post-processing:     0.509s
      Time for var class.:        0.243s
Time for Analysis:                1.596s
CPU time for analysis:            1.590s
Total time for CPAchecker:        5.997s
Total CPU time for CPAchecker:    5.970s
Time for statistics:              0.081s

Time for Garbage Collector:       0.124s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 52MB (    50 MiB) max;     31MB (    30 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             32MB (    30 MiB) max;     24MB (    23 MiB) avg;     33MB (    31 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    33 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8031MB (  7659 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
