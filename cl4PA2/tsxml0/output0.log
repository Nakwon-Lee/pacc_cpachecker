scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-input-tablet-kbtab.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__ku75xu6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4119: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4182: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1157 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1022 (88%)
  Because of loop head:            114 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (2%)
  Times precision was empty:       212 (18%)
  Times precision was {false}:     56 (5%)
  Times result was cached:         454 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      435 (38%)
  Times result was 'false':        134 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         627
  BDD entailment checks:           203
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       12
Number of predicates discovered:          20
Number of abstraction locations:          47
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         4077
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 8.30
Number of irrelevant predicates:          455 (11%)
Number of preds handled by boolean abs:   2015 (49%)
  Total number of models for allsat:      455
  Max number of models for allsat:        9
  Avg number of models for allsat:        1.05

Time for post operator:                  0.804s
  Time for path formula creation:        0.774s
Time for strengthen operator:            0.055s
Time for prec operator:                  2.466s
  Time for abstraction:                  2.313s (Max:     0.048s, Count: 1157)
    Boolean abstraction:                 0.721s
    Solving time:                        0.447s (Max:     0.013s)
    Model enumeration time:              0.046s
    Time for BDD construction:           0.100s (Max:     0.017s)
Time for merge operator:                 0.026s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.493s

Number of path formula cache hits:   5780 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.712s

Total number of created targets for pointer analysis: 12
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_input_dev)* is 4
   Number of created targets for uf: *(unsigned_char)* is 4
   Number of created targets for uf: *(struct_device)* is 4


Number of BDD nodes:                               1181
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2317 (count: 3929, min: 0, max: 1389, avg: 0.59)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.152s
Automaton transfers with branching:                0
Automaton transfer successors:                         6751 (count: 6751, min: 1, max: 1, avg: 1.00) [1 x 6751]

CPA algorithm statistics
------------------------
Number of iterations:            4427
Max size of waitlist:            11
Average size of waitlist:        3
Number of computed successors:   4971
Max successors for one state:    2
Number of times merged:          212
Number of times stopped:         323
Number of times breaked:         21

Total time for CPA algorithm:         4.818s (Max:     0.627s)
  Time for choose from waitlist:      0.047s
  Time for precision adjustment:      2.738s
  Time for transfer relation:         1.590s
  Time for merge operator:            0.090s
  Time for stop operator:             0.061s
  Time for adding to reached set:     0.093s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 704 (count: 21, min: 7, max: 70, avg: 33.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.648s
  Counterexample analysis:                             0.432s (Max:     0.036s, Calls: 21)
    Refinement sat check:                              0.252s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.032s
  ARG update:                                          0.076s

Length of refined path (in blocks):                     610 (count: 21, min: 6, max: 51, avg: 29.05)
Number of affected states:                              484 (count: 21, min: 1, max: 50, avg: 23.05)
Length (states) of path with itp 'true':                105 (count: 21, min: 0, max: 34, avg: 5.00)
Length (states) of path with itp non-trivial itp:       484 (count: 21, min: 1, max: 50, avg: 23.05)
Length (states) of path with itp 'false':                21 (count: 21, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          27 (count: 21, min: 0, max: 3, avg: 1.29)
Equal non-trivial interpolants along paths:             436 (count: 21, min: 0, max: 46, avg: 20.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 544
Max. size of reached set after ref.:  299
Avg. size of reached set before ref.: 239.71
Avg. size of reached set after ref.:  41.57

Total time for CEGAR algorithm:       5.562s
Time for refinements:                 0.741s
Average time for refinement:          0.035s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          754
  Total lines:            845
  Line coverage:          0.892
  Visited conditions:     54
  Total conditions:       70
  Condition coverage:     0.771

CPAchecker general statistics
-----------------------------
Number of program locations:     1038
Number of CFA edges:             1080
Number of relevant variables:    87
Number of functions:             35
Number of loops:                 2
Size of reached set:             354
  Number of reached locations:   225 (22%)
    Avg states per location:     1
    Max states per location:     6 (at node N389)
  Number of reached functions:   23 (66%)
  Number of partitions:          351
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N406 (before line 4034), Function main called from node N360, stack depth 1 [7d42c224], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.409s
  Time for loading CPAs:          1.041s
  Time for loading parser:        0.651s
  Time for CFA construction:      2.553s
    Time for parsing file(s):     0.869s
    Time for AST to CFA:          0.861s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.491s
      Time for var class.:        0.232s
Time for Analysis:                5.562s
CPU time for analysis:            5.570s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.980s
Total CPU time for CPAchecker:    9.980s
Time for statistics:              0.095s

Time for Garbage Collector:       0.160s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     37MB (    35 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
