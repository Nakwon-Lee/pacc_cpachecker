scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-input-tablet-kbtab.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gqucki8y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4119: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 4182: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1393 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1170 (84%)
  Because of loop head:            196 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27 (2%)
  Times precision was empty:       333 (24%)
  Times precision was {false}:     61 (4%)
  Times result was cached:         522 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      477 (34%)
  Times result was 'false':        174 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         757
  BDD entailment checks:           265
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       12
Number of predicates discovered:          20
Number of abstraction locations:          47
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         4531
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 8.42
Number of irrelevant predicates:          631 (14%)
Number of preds handled by boolean abs:   2187 (48%)
  Total number of models for allsat:      497
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.04

Time for post operator:                  0.740s
  Time for path formula creation:        0.694s
Time for strengthen operator:            0.049s
Time for prec operator:                  3.524s
  Time for abstraction:                  3.347s (Max:     0.027s, Count: 1393)
    Boolean abstraction:                 1.053s
    Solving time:                        0.640s (Max:     0.017s)
    Model enumeration time:              0.061s
    Time for BDD construction:           0.138s (Max:     0.010s)
Time for merge operator:                 0.036s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     0.701s

Number of path formula cache hits:   7418 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.652s

Total number of created targets for pointer analysis: 4
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_input_dev)* is 2
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *(struct_device)* is 2


Number of BDD nodes:                               1090
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2085 (count: 4515, min: 0, max: 1057, avg: 0.46)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.131s
Automaton transfers with branching:                0
Automaton transfer successors:                         7786 (count: 7786, min: 1, max: 1, avg: 1.00) [1 x 7786]

CPA algorithm statistics
------------------------
Number of iterations:            5204
Max size of waitlist:            6
Average size of waitlist:        2
Number of computed successors:   5835
Max successors for one state:    2
Number of times merged:          246
Number of times stopped:         405
Number of times breaked:         27

Total time for CPA algorithm:         5.903s (Max:     0.516s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      3.815s
  Time for transfer relation:         1.610s
  Time for merge operator:            0.120s
  Time for stop operator:             0.090s
  Time for adding to reached set:     0.097s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 881 (count: 27, min: 7, max: 52, avg: 32.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.974s
  Counterexample analysis:                             0.736s (Max:     0.060s, Calls: 27)
    Refinement sat check:                              0.403s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.037s
  ARG update:                                          0.122s

Length of refined path (in blocks):                     790 (count: 27, min: 6, max: 51, avg: 29.26)
Number of affected states:                              560 (count: 27, min: 1, max: 50, avg: 20.74)
Length (states) of path with itp 'true':                203 (count: 27, min: 0, max: 32, avg: 7.52)
Length (states) of path with itp non-trivial itp:       560 (count: 27, min: 1, max: 50, avg: 20.74)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          35 (count: 27, min: 0, max: 3, avg: 1.30)
Equal non-trivial interpolants along paths:             498 (count: 27, min: 0, max: 46, avg: 18.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 404
Max. size of reached set after ref.:  212
Avg. size of reached set before ref.: 235.78
Avg. size of reached set after ref.:  54.19

Total time for CEGAR algorithm:       6.997s
Time for refinements:                 1.087s
Average time for refinement:          0.040s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      0.657
  Visited lines:          754
  Total lines:            845
  Line coverage:          0.892
  Visited conditions:     54
  Total conditions:       70
  Condition coverage:     0.771

CPAchecker general statistics
-----------------------------
Number of program locations:     1038
Number of CFA edges:             1080
Number of relevant variables:    87
Number of functions:             35
Number of loops:                 2
Size of reached set:             354
  Number of reached locations:   225 (22%)
    Avg states per location:     1
    Max states per location:     6 (at node N389)
  Number of reached functions:   23 (66%)
  Number of partitions:          351
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N406 (before line 4034), Function main called from node N360, stack depth 1 [7d42c224], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.110s
  Time for loading CPAs:          0.904s
  Time for loading parser:        0.644s
  Time for CFA construction:      2.467s
    Time for parsing file(s):     0.825s
    Time for AST to CFA:          0.792s
    Time for CFA sanity check:    0.143s
    Time for post-processing:     0.535s
      Time for var class.:        0.225s
Time for Analysis:                6.997s
CPU time for analysis:            7.000s
Time for analyzing result:        0.000s
Total time for CPAchecker:       11.111s
Total CPU time for CPAchecker:   11.100s
Time for statistics:              0.129s

Time for Garbage Collector:       0.148s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     37MB (    35 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    28 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8057MB (  7684 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
