scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-scsi-megaraid.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ubqfj4dv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4683: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4685: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4687: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4681: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6330: Dead code detected: return ((scb_t *)0); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9093-9094: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val),
                               "c" ((u32 *)uioc.__ua.__uaddr): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9096-9097: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val),
                               "c" ((u32 *)uioc.__ua.__uaddr): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9103-9104: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val),
                               "c" ((u32 *)uioc.__ua.__uaddr): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 9091: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

lines 9131-9132: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                               "c" ((u32 *)uioc.__ua.__uaddr): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9134-9135: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                               "c" ((u32 *)uioc.__ua.__uaddr): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9141-9142: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                               "c" ((u32 *)uioc.__ua.__uaddr): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 9129: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

lines 9686-9687: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val),
                             "c" (& ((megacmd_t *)(& uiocp->__ua.__raw_mbox))->status): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9689-9690: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val),
                             "c" (& ((megacmd_t *)(& uiocp->__ua.__raw_mbox))->status): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9692-9693: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val),
                             "c" (& ((megacmd_t *)(& uiocp->__ua.__raw_mbox))->status): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 9680: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 9719: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((mega_passthru **)(& umc->xferaddr))); (CFACreationUtils.addEdgeToCFA, INFO)

line 9721: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((mega_passthru **)(& umc->xferaddr))); (CFACreationUtils.addEdgeToCFA, INFO)

line 9723: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((mega_passthru **)(& umc->xferaddr))); (CFACreationUtils.addEdgeToCFA, INFO)

line 9717: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

lines 9755-9756: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                               "c" (& upthru->scsistatus): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9758-9759: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___0): "0" (__pu_val___0),
                               "c" (& upthru->scsistatus): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9761-9762: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                               "c" (& upthru->scsistatus): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 9749: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

lines 9796-9797: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___1): "0" (__pu_val___1),
                             "c" ((u8 *)(& uioc_mimd->mbox) + 17UL): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9799-9800: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___1): "0" (__pu_val___1),
                             "c" ((u8 *)(& uioc_mimd->mbox) + 17UL): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9802-9803: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___1): "0" (__pu_val___1),
                             "c" ((u8 *)(& uioc_mimd->mbox) + 17UL): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 9790: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 9829: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((mega_passthru **)(& umc->xferaddr))); (CFACreationUtils.addEdgeToCFA, INFO)

line 9831: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((mega_passthru **)(& umc->xferaddr))); (CFACreationUtils.addEdgeToCFA, INFO)

line 9833: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu___0), "=d" (__val_gu___0): "0" ((mega_passthru **)(& umc->xferaddr))); (CFACreationUtils.addEdgeToCFA, INFO)

line 9827: Dead code detected: Goto: switch_default___3 (CFACreationUtils.addEdgeToCFA, INFO)

lines 9865-9866: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___2): "0" (__pu_val___2),
                               "c" (& upthru->scsistatus): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9868-9869: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___2): "0" (__pu_val___2),
                               "c" (& upthru->scsistatus): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 9871-9872: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___2): "0" (__pu_val___2),
                               "c" (& upthru->scsistatus): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 9859: Dead code detected: Goto: switch_default___4 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5345: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5385: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5215-5216: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5252: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4577: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4912: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_pci_dev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_allocate_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6068: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6290: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6263: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6117: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6036: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6146: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6058: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4577: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_free_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5345: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5385: Ignoring function call through function pointer *(ops->free_coherent): (*(ops->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7175: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5215-5216: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, (struct page *)(1152897315351035904ULL + (tmp___2 >> 12)), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5252: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27574 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24189 (88%)
  Because of loop head:            3379 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       27255 (99%)
  Times precision was {false}:     55 (0%)
  Times result was cached:         232 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32 (0%)
  Times result was 'false':        8 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         20885
  BDD entailment checks:           4727
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          2
Number of abstraction locations:          29
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         319
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.67
Number of irrelevant predicates:          224 (70%)
Number of preds handled by boolean abs:   32 (10%)
  Total number of models for allsat:      32
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  9.850s
  Time for path formula creation:        9.609s
Time for strengthen operator:            0.417s
Time for prec operator:                  1.577s
  Time for abstraction:                  0.639s (Max:     0.044s, Count: 27574)
    Boolean abstraction:                 0.052s
    Solving time:                        0.087s (Max:     0.013s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.596s
Time for coverage check:                 0.138s
  Time for BDD entailment checks:        0.117s
Total time for SMT solver (w/o itp):     0.100s

Number of path formula cache hits:   160135 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.077s

Total number of created targets for pointer analysis: 18198
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *(struct_scsi_cmnd)* is 3
   Number of created targets for uf: *(struct___anonstruct_adapter_t_198)* is 41
   Number of created targets for uf: *(struct_Scsi_Host)* is 9
   Number of created targets for uf: *(struct___anonstruct_mega_ext_passthru_172)* is 7
   Number of created targets for uf: *(struct___anonstruct_mega_sglist_174)* is 3
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 136
   Number of created targets for uf: *(struct_list_head)* is 117
   Number of created targets for uf: *(struct___anonstruct_mega_passthru_171)* is 3
   Number of created targets for uf: *(struct___anonstruct_mega_sgl64_173)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 21
   Number of created targets for uf: *unsigned_int is 3
   Number of created targets for uf: *char is 46


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          67 (count: 32454, min: 0, max: 32, avg: 0.00)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.736s
  Time for transition matches:                         0.299s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       165144 (count: 165144, min: 1, max: 1, avg: 1.00) [1 x 165144]

CPA algorithm statistics
------------------------
Number of iterations:            107562
Max size of waitlist:            37
Average size of waitlist:        19
Number of computed successors:   120402
Max successors for one state:    2
Number of times merged:          8079
Number of times stopped:         12781
Number of times breaked:         6

Total time for CPA algorithm:        21.790s (Max:    13.149s)
  Time for choose from waitlist:      0.286s
  Time for precision adjustment:      3.476s
  Time for transfer relation:        14.502s
  Time for merge operator:            1.057s
  Time for stop operator:             0.550s
  Time for adding to reached set:     0.501s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  74 (count: 6, min: 5, max: 28, avg: 12.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.548s
  Counterexample analysis:                             0.105s (Max:     0.036s, Calls: 6)
    Refinement sat check:                              0.061s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.004s
  ARG update:                                          0.423s

Length of refined path (in blocks):                      68 (count: 6, min: 4, max: 27, avg: 11.33)
Number of affected states:                               62 (count: 6, min: 3, max: 26, avg: 10.33)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        62 (count: 6, min: 3, max: 26, avg: 10.33)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              56 (count: 6, min: 2, max: 25, avg: 9.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 23343
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 15567.17
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      22.579s
Time for refinements:                 0.789s
Average time for refinement:          0.131s
Max time for refinement:              0.244s

Code Coverage
-----------------------------
  Function coverage:      0.699
  Visited lines:          2902
  Total lines:            4185
  Line coverage:          0.693
  Visited conditions:     634
  Total conditions:       916
  Condition coverage:     0.692

CPAchecker general statistics
-----------------------------
Number of program locations:     5466
Number of CFA edges:             6133
Number of relevant variables:    876
Number of functions:             146
Number of loops:                 45
Size of reached set:             14228
  Number of reached locations:   2013 (37%)
    Avg states per location:     7
    Max states per location:     160 (at node N800)
  Number of reached functions:   102 (70%)
  Number of partitions:          14224
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5243 (before line 11220), Function main called from node N5134, stack depth 1 [345cbf40], stack [main]])
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          7.704s
  Time for loading CPAs:          0.955s
  Time for loading parser:        0.711s
  Time for CFA construction:      5.943s
    Time for parsing file(s):     1.287s
    Time for AST to CFA:          2.448s
    Time for CFA sanity check:    0.586s
    Time for post-processing:     1.452s
      Time for var class.:        0.548s
Time for Analysis:               22.579s
CPU time for analysis:           22.570s
Total time for CPAchecker:       30.291s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.352s

Time for Garbage Collector:       1.425s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   116 MiB) max;     60MB (    57 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
