scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-hwmon-it87.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4wl39fn3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2953: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_check_resource_conflict to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2953: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_get_system_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_chmod_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16470 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15254 (93%)
  Because of loop head:            1188 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       1176 (7%)
  Times precision was {false}:     241 (1%)
  Times result was cached:         14762 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      291 (2%)
  Times result was 'false':        107 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         11704
  BDD entailment checks:           2062
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       167
Number of predicates discovered:          4
Number of abstraction locations:          111
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         20303
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 38.16
Number of irrelevant predicates:          11799 (58%)
Number of preds handled by boolean abs:   349 (2%)
  Total number of models for allsat:      289
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  5.844s
  Time for path formula creation:        5.671s
Time for strengthen operator:            0.226s
Time for prec operator:                  8.910s
  Time for abstraction:                  8.250s (Max:     0.179s, Count: 16470)
    Boolean abstraction:                 2.403s
    Solving time:                        3.759s (Max:     0.154s)
    Model enumeration time:              0.240s
    Time for BDD construction:           0.022s (Max:     0.006s)
Time for merge operator:                 0.802s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     3.999s

Number of path formula cache hits:   79146 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.523s

Total number of created targets for pointer analysis: 11635
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *enum_chips is 11
   Number of created targets for uf: *unsigned_char is 58
   Number of created targets for uf: *(struct_device)* is 11


Number of BDD nodes:                               211
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         605 (count: 6240, min: 0, max: 134, avg: 0.10)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.430s
Automaton transfers with branching:                0
Automaton transfer successors:                        87036 (count: 87036, min: 1, max: 1, avg: 1.00) [1 x 87036]

CPA algorithm statistics
------------------------
Number of iterations:            63565
Max size of waitlist:            24
Average size of waitlist:        10
Number of computed successors:   70129
Max successors for one state:    2
Number of times merged:          4821
Number of times stopped:         6262
Number of times breaked:         28

Total time for CPA algorithm:        21.273s (Max:     2.328s)
  Time for choose from waitlist:      0.137s
  Time for precision adjustment:     10.076s
  Time for transfer relation:         8.562s
  Time for merge operator:            1.043s
  Time for stop operator:             0.282s
  Time for adding to reached set:     0.289s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                2211 (count: 28, min: 9, max: 154, avg: 78.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.738s
  Counterexample analysis:                             2.225s (Max:     0.143s, Calls: 28)
    Refinement sat check:                              1.698s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.055s
  ARG update:                                          0.308s

Length of refined path (in blocks):                    1758 (count: 28, min: 5, max: 150, avg: 62.79)
Number of affected states:                             1730 (count: 28, min: 4, max: 149, avg: 61.79)
Length (states) of path with itp 'true':                  0 (count: 28, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1730 (count: 28, min: 4, max: 149, avg: 61.79)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1702 (count: 28, min: 3, max: 148, avg: 60.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 6568
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2164.25
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      24.217s
Time for refinements:                 2.943s
Average time for refinement:          0.105s
Max time for refinement:              0.205s

Code Coverage
-----------------------------
  Function coverage:      0.287
  Visited lines:          1159
  Total lines:            2491
  Line coverage:          0.465
  Visited conditions:     166
  Total conditions:       468
  Condition coverage:     0.355

CPAchecker general statistics
-----------------------------
Number of program locations:     3197
Number of CFA edges:             3546
Number of relevant variables:    667
Number of functions:             94
Number of loops:                 22
Size of reached set:             3246
  Number of reached locations:   538 (17%)
    Avg states per location:     6
    Max states per location:     119 (at node N27)
  Number of reached functions:   27 (29%)
  Number of partitions:          3229
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1592 (before line 5638), Function it87_find called from node N2637, stack depth 3 [28f36222], stack [main, sm_it87_init, it87_find]])
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          6.039s
  Time for loading CPAs:          1.050s
  Time for loading parser:        0.646s
  Time for CFA construction:      4.168s
    Time for parsing file(s):     1.077s
    Time for AST to CFA:          1.485s
    Time for CFA sanity check:    0.289s
    Time for post-processing:     1.100s
      Time for var class.:        0.616s
Time for Analysis:               24.217s
CPU time for analysis:           24.210s
Total time for CPAchecker:       30.260s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.168s

Time for Garbage Collector:       0.593s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     48MB (    45 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
