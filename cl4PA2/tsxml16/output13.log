scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-hwmon-it87.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b2gkml1c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2953: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_get_system_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_check_resource_conflict to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2953: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_chmod_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13635 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12596 (92%)
  Because of loop head:            1017 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       5338 (39%)
  Times precision was {false}:     258 (2%)
  Times result was cached:         7906 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      133 (1%)
  Times result was 'false':        67 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         10142
  BDD entailment checks:           1444
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       167
Number of predicates discovered:          3
Number of abstraction locations:          94
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         10005
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 25.59
Number of irrelevant predicates:          6388 (64%)
Number of preds handled by boolean abs:   139 (1%)
  Total number of models for allsat:      133
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.212s
  Time for path formula creation:        6.112s
Time for strengthen operator:            0.196s
Time for prec operator:                  9.849s
  Time for abstraction:                  9.217s (Max:     0.198s, Count: 13635)
    Boolean abstraction:                 1.802s
    Solving time:                        6.105s (Max:     0.167s)
    Model enumeration time:              0.207s
    Time for BDD construction:           0.023s (Max:     0.007s)
Time for merge operator:                 0.816s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     6.312s

Number of path formula cache hits:   62363 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.092s

Total number of created targets for pointer analysis: 13598
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *enum_chips is 23
   Number of created targets for uf: *unsigned_char is 115
   Number of created targets for uf: *(struct_device)* is 15


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         273 (count: 8915, min: 0, max: 62, avg: 0.03)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.461s
Automaton transfers with branching:                0
Automaton transfer successors:                        72637 (count: 72637, min: 1, max: 1, avg: 1.00) [1 x 72637]

CPA algorithm statistics
------------------------
Number of iterations:            53640
Max size of waitlist:            16
Average size of waitlist:        5
Number of computed successors:   59309
Max successors for one state:    2
Number of times merged:          4349
Number of times stopped:         5569
Number of times breaked:         22

Total time for CPA algorithm:        22.437s (Max:     2.428s)
  Time for choose from waitlist:      0.094s
  Time for precision adjustment:     10.943s
  Time for transfer relation:         8.828s
  Time for merge operator:            1.079s
  Time for stop operator:             0.263s
  Time for adding to reached set:     0.223s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                1229 (count: 22, min: 9, max: 145, avg: 55.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.749s
  Counterexample analysis:                             1.409s (Max:     0.145s, Calls: 22)
    Refinement sat check:                              1.083s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.027s
  ARG update:                                          0.221s

Length of refined path (in blocks):                    1168 (count: 22, min: 5, max: 144, avg: 53.09)
Number of affected states:                             1146 (count: 22, min: 4, max: 143, avg: 52.09)
Length (states) of path with itp 'true':                  0 (count: 22, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1146 (count: 22, min: 4, max: 143, avg: 52.09)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1124 (count: 22, min: 3, max: 142, avg: 51.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 5740
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2276.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      24.341s
Time for refinements:                 1.902s
Average time for refinement:          0.086s
Max time for refinement:              0.180s

Code Coverage
-----------------------------
  Function coverage:      0.330
  Visited lines:          1308
  Total lines:            2491
  Line coverage:          0.525
  Visited conditions:     232
  Total conditions:       468
  Condition coverage:     0.496

CPAchecker general statistics
-----------------------------
Number of program locations:     3197
Number of CFA edges:             3546
Number of relevant variables:    667
Number of functions:             94
Number of loops:                 22
Size of reached set:             3656
  Number of reached locations:   717 (22%)
    Avg states per location:     5
    Max states per location:     102 (at node N27)
  Number of reached functions:   31 (33%)
  Number of partitions:          3642
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2695 (before line 6957), Function main called from node N2662, stack depth 1 [336206d8], stack [main]])
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          5.927s
  Time for loading CPAs:          1.022s
  Time for loading parser:        0.651s
  Time for CFA construction:      4.086s
    Time for parsing file(s):     1.056s
    Time for AST to CFA:          1.450s
    Time for CFA sanity check:    0.287s
    Time for post-processing:     1.074s
      Time for var class.:        0.587s
Time for Analysis:               24.341s
CPU time for analysis:           24.340s
Total time for CPAchecker:       30.272s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.154s

Time for Garbage Collector:       0.558s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     48MB (    46 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
