scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-hwmon-it87.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o2l1f3lu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2953: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_check_resource_conflict to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_get_system_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2953: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_chmod_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19199 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18153 (95%)
  Because of loop head:            1009 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (0%)
  Times precision was empty:       888 (5%)
  Times precision was {false}:     180 (1%)
  Times result was cached:         17869 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      262 (1%)
  Times result was 'false':        147 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         11392
  BDD entailment checks:           1926
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       167
Number of predicates discovered:          4
Number of abstraction locations:          119
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         20976
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 47.46
Number of irrelevant predicates:          8096 (39%)
Number of preds handled by boolean abs:   313 (1%)
  Total number of models for allsat:      259
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  4.601s
  Time for path formula creation:        4.506s
Time for strengthen operator:            0.207s
Time for prec operator:                  9.660s
  Time for abstraction:                  8.869s (Max:     0.190s, Count: 19199)
    Boolean abstraction:                 2.472s
    Solving time:                        4.157s (Max:     0.139s)
    Model enumeration time:              0.274s
    Time for BDD construction:           0.034s (Max:     0.012s)
Time for merge operator:                 0.595s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     4.444s

Number of path formula cache hits:   99302 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.252s

Total number of created targets for pointer analysis: 9693
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *enum_chips is 9
   Number of created targets for uf: *unsigned_char is 58
   Number of created targets for uf: *(struct_device)* is 4


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         529 (count: 5359, min: 0, max: 104, avg: 0.10)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.327s
Automaton transfers with branching:                0
Automaton transfer successors:                        92498 (count: 92498, min: 1, max: 1, avg: 1.00) [1 x 92498]

CPA algorithm statistics
------------------------
Number of iterations:            69040
Max size of waitlist:            13
Average size of waitlist:        5
Number of computed successors:   75489
Max successors for one state:    2
Number of times merged:          4733
Number of times stopped:         6130
Number of times breaked:         37

Total time for CPA algorithm:        20.327s (Max:     1.953s)
  Time for choose from waitlist:      0.117s
  Time for precision adjustment:     10.807s
  Time for transfer relation:         7.089s
  Time for merge operator:            0.796s
  Time for stop operator:             0.291s
  Time for adding to reached set:     0.407s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                3553 (count: 37, min: 9, max: 160, avg: 96.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.340s
  Counterexample analysis:                             2.849s (Max:     0.138s, Calls: 37)
    Refinement sat check:                              2.059s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.114s
  Precision update:                                    0.073s
  ARG update:                                          0.242s

Length of refined path (in blocks):                    3267 (count: 37, min: 5, max: 159, avg: 88.30)
Number of affected states:                             3230 (count: 37, min: 4, max: 158, avg: 87.30)
Length (states) of path with itp 'true':                  0 (count: 37, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      3230 (count: 37, min: 4, max: 158, avg: 87.30)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 37, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3193 (count: 37, min: 3, max: 157, avg: 86.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 5134
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1769.95
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      23.842s
Time for refinements:                 3.515s
Average time for refinement:          0.095s
Max time for refinement:              0.176s

Code Coverage
-----------------------------
  Function coverage:      0.340
  Visited lines:          1320
  Total lines:            2491
  Line coverage:          0.530
  Visited conditions:     236
  Total conditions:       468
  Condition coverage:     0.504

CPAchecker general statistics
-----------------------------
Number of program locations:     3197
Number of CFA edges:             3546
Number of relevant variables:    667
Number of functions:             94
Number of loops:                 22
Size of reached set:             3835
  Number of reached locations:   731 (23%)
    Avg states per location:     5
    Max states per location:     99 (at node N27)
  Number of reached functions:   32 (34%)
  Number of partitions:          3827
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1592 (before line 5638), Function it87_find called from node N2637, stack depth 3 [600769db], stack [main, sm_it87_init, it87_find]])
  Number of target states:       0
  Size of final wait list        4

Time for analysis setup:          5.916s
  Time for loading CPAs:          1.014s
  Time for loading parser:        0.611s
  Time for CFA construction:      4.124s
    Time for parsing file(s):     1.073s
    Time for AST to CFA:          1.496s
    Time for CFA sanity check:    0.305s
    Time for post-processing:     1.053s
      Time for var class.:        0.559s
Time for Analysis:               23.842s
CPU time for analysis:           23.850s
Total time for CPAchecker:       29.771s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.173s

Time for Garbage Collector:       0.514s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     47MB (    45 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
