scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-hwmon-it87.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cy5bntau/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2953: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_check_resource_conflict to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_get_system_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2953: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_chmod_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            54837 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  49352 (90%)
  Because of loop head:            5428 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (0%)
  Times precision was empty:       1305 (2%)
  Times precision was {false}:     736 (1%)
  Times result was cached:         51769 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1027 (2%)
  Times result was 'false':        266 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         49092
  BDD entailment checks:           7824
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       167
Number of predicates discovered:          4
Number of abstraction locations:          119
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         88686
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 50.30
Number of irrelevant predicates:          41511 (47%)
Number of preds handled by boolean abs:   1212 (1%)
  Total number of models for allsat:      1026
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 12.393s
  Time for path formula creation:       12.127s
Time for strengthen operator:            0.500s
Time for prec operator:                 27.630s
  Time for abstraction:                 26.002s (Max:     0.213s, Count: 54837)
    Boolean abstraction:                 9.337s
    Solving time:                       14.320s (Max:     0.168s)
    Model enumeration time:              1.185s
    Time for BDD construction:           0.059s (Max:     0.009s)
Time for merge operator:                 1.665s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):    15.505s

Number of path formula cache hits:   275382 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.051s

Total number of created targets for pointer analysis: 48158
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *enum_chips is 54
   Number of created targets for uf: *unsigned_char is 58
   Number of created targets for uf: *(struct_device)* is 71


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2077 (count: 19065, min: 0, max: 110, avg: 0.11)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.857s
  Time for transition matches:                         0.413s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       316881 (count: 316881, min: 1, max: 1, avg: 1.00) [1 x 316881]

CPA algorithm statistics
------------------------
Number of iterations:            233662
Max size of waitlist:            22
Average size of waitlist:        8
Number of computed successors:   260612
Max successors for one state:    2
Number of times merged:          20634
Number of times stopped:         26291
Number of times breaked:         57

Total time for CPA algorithm:        53.355s (Max:     2.234s)
  Time for choose from waitlist:      0.199s
  Time for precision adjustment:     30.271s
  Time for transfer relation:        18.016s
  Time for merge operator:            2.111s
  Time for stop operator:             0.551s
  Time for adding to reached set:     0.772s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                8694 (count: 57, min: 9, max: 293, avg: 152.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.792s
  Counterexample analysis:                             5.819s (Max:     0.202s, Calls: 57)
    Refinement sat check:                              3.923s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.118s
  Precision update:                                    0.089s
  ARG update:                                          0.628s

Length of refined path (in blocks):                    6553 (count: 57, min: 5, max: 213, avg: 114.96)
Number of affected states:                             6496 (count: 57, min: 4, max: 212, avg: 113.96)
Length (states) of path with itp 'true':                  0 (count: 57, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      6496 (count: 57, min: 4, max: 212, avg: 113.96)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 57, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6439 (count: 57, min: 3, max: 211, avg: 112.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 7419
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 4065.95
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      60.569s
Time for refinements:                 7.194s
Average time for refinement:          0.126s
Max time for refinement:              0.224s

Code Coverage
-----------------------------
  Function coverage:      0.340
  Visited lines:          1295
  Total lines:            2491
  Line coverage:          0.520
  Visited conditions:     230
  Total conditions:       468
  Condition coverage:     0.491

CPAchecker general statistics
-----------------------------
Number of program locations:     3197
Number of CFA edges:             3546
Number of relevant variables:    667
Number of functions:             94
Number of loops:                 22
Size of reached set:             2468
  Number of reached locations:   707 (22%)
    Avg states per location:     3
    Max states per location:     66 (at node N27)
  Number of reached functions:   32 (34%)
  Number of partitions:          2467
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1592 (before line 5638), Function it87_find called from node N2637, stack depth 3 [1b598b68], stack [main, sm_it87_init, it87_find]])
  Number of target states:       0

Time for analysis setup:          5.889s
  Time for loading CPAs:          0.989s
  Time for loading parser:        0.697s
  Time for CFA construction:      4.051s
    Time for parsing file(s):     1.107s
    Time for AST to CFA:          1.458s
    Time for CFA sanity check:    0.254s
    Time for post-processing:     1.022s
      Time for var class.:        0.576s
Time for Analysis:               60.570s
CPU time for analysis:           60.570s
Time for analyzing result:        0.002s
Total time for CPAchecker:       66.463s
Total CPU time for CPAchecker:   66.450s
Time for statistics:              0.145s

Time for Garbage Collector:       1.916s (in 133 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                126MB (   120 MiB) max;     65MB (    62 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           129MB (   123 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8079MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
