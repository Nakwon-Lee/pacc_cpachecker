scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-char-ipmi-ipmi_watchdog.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gy94pp3f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2960: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2964: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2958: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5842: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (buf + i)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (buf + i)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5846: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (buf + i)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5837: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5940: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 5946: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 5952: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 5937: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3369: Function pointer *fn with type int (*)(const char *, char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3224: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3340: Function pointer *fn with type int (*)(const char *, char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_die_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_die_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_get_version to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_supply_msgs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5591: Unsupported feature (recursion): tmp___0 = ipmi_set_timeout(1); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            306 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  288 (94%)
  Because of loop head:            13 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (2%)
  Times precision was empty:       132 (43%)
  Times precision was {false}:     23 (8%)
  Times result was cached:         125 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26 (8%)
  Times result was 'false':        5 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1297
  BDD entailment checks:           71
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       81
Number of predicates discovered:          2
Number of abstraction locations:          16
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         174
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.55
Number of irrelevant predicates:          70 (40%)
Number of preds handled by boolean abs:   26 (15%)
  Total number of models for allsat:      26
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.225s
  Time for path formula creation:        1.175s
Time for strengthen operator:            0.041s
Time for prec operator:                  0.549s
  Time for abstraction:                  0.438s (Max:     0.070s, Count: 306)
    Boolean abstraction:                 0.086s
    Solving time:                        0.063s (Max:     0.025s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.010s (Max:     0.008s)
Time for merge operator:                 0.151s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.070s

Number of path formula cache hits:   3667 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.073s

Total number of created targets for pointer analysis: 540
   Number of created targets for uf: *signed_int is 16
   Number of created targets for uf: *unsigned_char is 34


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          55 (count: 479, min: 0, max: 29, avg: 0.11)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.085s
Automaton transfers with branching:                0
Automaton transfer successors:                         5360 (count: 5360, min: 1, max: 1, avg: 1.00) [1 x 5360]

CPA algorithm statistics
------------------------
Number of iterations:            3271
Max size of waitlist:            36
Average size of waitlist:        7
Number of computed successors:   3978
Max successors for one state:    2
Number of times merged:          613
Number of times stopped:         658
Number of times breaked:         5

Total time for CPA algorithm:         3.029s (Max:     1.268s)
  Time for choose from waitlist:      0.020s
  Time for precision adjustment:      0.778s
  Time for transfer relation:         1.773s
  Time for merge operator:            0.232s
  Time for stop operator:             0.040s
  Time for adding to reached set:     0.047s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  73 (count: 5, min: 13, max: 15, avg: 14.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.212s
  Counterexample analysis:                             0.123s (Max:     0.035s, Calls: 5)
    Refinement sat check:                              0.089s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.008s
  ARG update:                                          0.046s

Length of refined path (in blocks):                      68 (count: 5, min: 12, max: 14, avg: 13.60)
Number of affected states:                               63 (count: 5, min: 11, max: 13, avg: 12.60)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        63 (count: 5, min: 11, max: 13, avg: 12.60)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              58 (count: 5, min: 10, max: 12, avg: 11.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 580
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 503.20
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.281s
Time for refinements:                 0.251s
Average time for refinement:          0.050s
Max time for refinement:              0.111s

Code Coverage
-----------------------------
  Function coverage:      0.574
  Visited lines:          988
  Total lines:            1586
  Line coverage:          0.623
  Visited conditions:     180
  Total conditions:       370
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     2056
Number of CFA edges:             2292
Number of relevant variables:    261
Number of functions:             68
Number of loops:                 7
Size of reached set:             815
  Number of reached locations:   437 (21%)
    Avg states per location:     1
    Max states per location:     5 (at node N55)
  Number of reached functions:   39 (57%)
  Number of partitions:          815
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        36

Time for analysis setup:          5.425s
  Time for loading CPAs:          1.060s
  Time for loading parser:        0.611s
  Time for CFA construction:      3.638s
    Time for parsing file(s):     1.030s
    Time for AST to CFA:          1.374s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.811s
      Time for var class.:        0.401s
Time for Analysis:                3.281s
CPU time for analysis:            3.280s
Total time for CPAchecker:        8.711s
Total CPU time for CPAchecker:    8.690s
Time for statistics:              0.103s

Time for Garbage Collector:       0.204s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     38MB (    36 MiB) avg;     70MB (    66 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8046MB (  7674 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
