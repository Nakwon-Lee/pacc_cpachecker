scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-char-ipmi-ipmi_watchdog.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qvy92lmz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2960: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2964: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2958: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5842: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (buf + i)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (buf + i)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5846: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (buf + i)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5837: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5940: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 5946: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 5952: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 5937: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3369: Function pointer *fn with type int (*)(const char *, char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3224: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3340: Function pointer *fn with type int (*)(const char *, char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_die_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_die_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3369: Ignoring call via function pointer get_param_str::fn for which no suitable target was found in line: rv = (*fn)((const char *)0, buffer); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3369: Ignoring function call through function pointer *fn: rv = (*fn)((const char *)0, buffer); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3224: Ignoring function call through function pointer *(p->qproc): (*(p->qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function param_set_int to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3340: Ignoring call via function pointer set_param_str::fn for which no suitable target was found in line: rv = (*fn)((const char *)s, (char *)0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3340: Ignoring function call through function pointer *fn: rv = (*fn)((const char *)s, (char *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kill_fasync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_poll_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_supply_msgs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4028: Unsupported feature (recursion): rv = ipmi_heartbeat(); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1744 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1552 (89%)
  Because of loop head:            183 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (1%)
  Times precision was empty:       1257 (72%)
  Times precision was {false}:     40 (2%)
  Times result was cached:         374 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      73 (4%)
  Times result was 'false':        8 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3161
  BDD entailment checks:           379
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       81
Number of predicates discovered:          3
Number of abstraction locations:          22
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         701
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 6.20
Number of irrelevant predicates:          307 (44%)
Number of preds handled by boolean abs:   102 (15%)
  Total number of models for allsat:      73
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.887s
  Time for path formula creation:        1.797s
Time for strengthen operator:            0.123s
Time for prec operator:                  0.924s
  Time for abstraction:                  0.765s (Max:     0.060s, Count: 1744)
    Boolean abstraction:                 0.157s
    Solving time:                        0.146s (Max:     0.024s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.010s (Max:     0.008s)
Time for merge operator:                 0.190s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.156s

Number of path formula cache hits:   10121 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.647s

Total number of created targets for pointer analysis: 728
   Number of created targets for uf: *signed_int is 6
   Number of created targets for uf: *unsigned_char is 6
   Number of created targets for uf: *char is 253


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         137 (count: 2284, min: 0, max: 70, avg: 0.06)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.162s
Automaton transfers with branching:                0
Automaton transfer successors:                        15310 (count: 15310, min: 1, max: 1, avg: 1.00) [1 x 15310]

CPA algorithm statistics
------------------------
Number of iterations:            10420
Max size of waitlist:            38
Average size of waitlist:        18
Number of computed successors:   12291
Max successors for one state:    2
Number of times merged:          1391
Number of times stopped:         1678
Number of times breaked:         9

Total time for CPA algorithm:         5.143s (Max:     1.204s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:      1.298s
  Time for transfer relation:         2.942s
  Time for merge operator:            0.315s
  Time for stop operator:             0.149s
  Time for adding to reached set:     0.114s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                 184 (count: 9, min: 15, max: 25, avg: 20.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.364s
  Counterexample analysis:                             0.204s (Max:     0.029s, Calls: 9)
    Refinement sat check:                              0.160s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.010s
  ARG update:                                          0.107s

Length of refined path (in blocks):                     151 (count: 9, min: 14, max: 19, avg: 16.78)
Number of affected states:                              142 (count: 9, min: 13, max: 18, avg: 15.78)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       142 (count: 9, min: 13, max: 18, avg: 15.78)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             133 (count: 9, min: 12, max: 17, avg: 14.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 1591
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1031.33
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.583s
Time for refinements:                 0.436s
Average time for refinement:          0.048s
Max time for refinement:              0.089s

Code Coverage
-----------------------------
  Function coverage:      0.765
  Visited lines:          1242
  Total lines:            1586
  Line coverage:          0.783
  Visited conditions:     266
  Total conditions:       370
  Condition coverage:     0.719

CPAchecker general statistics
-----------------------------
Number of program locations:     2056
Number of CFA edges:             2292
Number of relevant variables:    261
Number of functions:             68
Number of loops:                 7
Size of reached set:             1351
  Number of reached locations:   733 (36%)
    Avg states per location:     1
    Max states per location:     13 (at node N277)
  Number of reached functions:   52 (76%)
  Number of partitions:          1350
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1649 (before line 7119), Function main called from node N1345, stack depth 1 [19650aa6], stack [main]])
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          5.303s
  Time for loading CPAs:          0.918s
  Time for loading parser:        0.718s
  Time for CFA construction:      3.512s
    Time for parsing file(s):     0.967s
    Time for AST to CFA:          1.274s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.851s
      Time for var class.:        0.451s
Time for Analysis:                5.583s
CPU time for analysis:            5.580s
Total time for CPAchecker:       10.894s
Total CPU time for CPAchecker:   10.880s
Time for statistics:              0.108s

Time for Garbage Collector:       0.226s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     40MB (    38 MiB) avg;     70MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     29MB (    28 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8052MB (  7679 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
