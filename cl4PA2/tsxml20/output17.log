scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-char-ipmi-ipmi_watchdog.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ccle8iyr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2960: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2964: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2958: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5842: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (buf + i)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (buf + i)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5846: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (buf + i)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5837: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5940: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 5946: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 5952: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 5937: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3369: Function pointer *fn with type int (*)(const char *, char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3224: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3340: Function pointer *fn with type int (*)(const char *, char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_die_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_die_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function param_set_int to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3369: Ignoring call via function pointer get_param_str::fn for which no suitable target was found in line: rv = (*fn)((const char *)0, buffer); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3369: Ignoring function call through function pointer *fn: rv = (*fn)((const char *)0, buffer); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ipmi_smi_watcher_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3224: Ignoring function call through function pointer *(p->qproc): (*(p->qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3141: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_get_version to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3340: Ignoring call via function pointer set_param_str::fn for which no suitable target was found in line: rv = (*fn)((const char *)s, (char *)0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3340: Ignoring function call through function pointer *fn: rv = (*fn)((const char *)s, (char *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21034 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18672 (89%)
  Because of loop head:            2310 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         52 (0%)
  Times precision was empty:       13400 (64%)
  Times precision was {false}:     200 (1%)
  Times result was cached:         7085 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      349 (2%)
  Times result was 'false':        128 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         26592
  BDD entailment checks:           4990
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       81
Number of predicates discovered:          4
Number of abstraction locations:          64
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         12858
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 23.42
Number of irrelevant predicates:          5214 (41%)
Number of preds handled by boolean abs:   564 (4%)
  Total number of models for allsat:      347
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  7.794s
  Time for path formula creation:        7.592s
Time for strengthen operator:            0.339s
Time for prec operator:                  4.959s
  Time for abstraction:                  4.174s (Max:     0.047s, Count: 21034)
    Boolean abstraction:                 0.653s
    Solving time:                        0.790s (Max:     0.031s)
    Model enumeration time:              0.063s
    Time for BDD construction:           0.054s (Max:     0.012s)
Time for merge operator:                 0.688s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     0.854s

Number of path formula cache hits:   122833 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.525s

Total number of created targets for pointer analysis: 6102
   Number of created targets for uf: *signed_int is 160
   Number of created targets for uf: *char is 2545


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         707 (count: 21498, min: 0, max: 99, avg: 0.03)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.868s
  Time for transition matches:                         0.409s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       158538 (count: 158538, min: 1, max: 1, avg: 1.00) [1 x 158538]

CPA algorithm statistics
------------------------
Number of iterations:            104919
Max size of waitlist:            144
Average size of waitlist:        62
Number of computed successors:   124498
Max successors for one state:    2
Number of times merged:          10801
Number of times stopped:         14037
Number of times breaked:         52

Total time for CPA algorithm:        22.072s (Max:     1.859s)
  Time for choose from waitlist:      0.203s
  Time for precision adjustment:      6.501s
  Time for transfer relation:        12.074s
  Time for merge operator:            1.119s
  Time for stop operator:             0.494s
  Time for adding to reached set:     0.458s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   52
Avg. length of target path (in blocks):                1237 (count: 52, min: 20, max: 29, avg: 23.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.071s
  Counterexample analysis:                             1.311s (Max:     0.044s, Calls: 52)
    Refinement sat check:                              1.011s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.069s
  Precision update:                                    0.052s
  ARG update:                                          0.543s

Length of refined path (in blocks):                     961 (count: 52, min: 13, max: 24, avg: 18.48)
Number of affected states:                              909 (count: 52, min: 12, max: 23, avg: 17.48)
Length (states) of path with itp 'true':                  0 (count: 52, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       909 (count: 52, min: 12, max: 23, avg: 17.48)
Length (states) of path with itp 'false':                52 (count: 52, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 52, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             857 (count: 52, min: 11, max: 22, avg: 16.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                52
Number of successful refinements:     52
Number of failed refinements:         0
Max. size of reached set before ref.: 2839
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2111.31
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      24.418s
Time for refinements:                 2.326s
Average time for refinement:          0.044s
Max time for refinement:              0.120s

Code Coverage
-----------------------------
  Function coverage:      0.529
  Visited lines:          919
  Total lines:            1586
  Line coverage:          0.579
  Visited conditions:     152
  Total conditions:       370
  Condition coverage:     0.411

CPAchecker general statistics
-----------------------------
Number of program locations:     2056
Number of CFA edges:             2292
Number of relevant variables:    261
Number of functions:             68
Number of loops:                 7
Size of reached set:             701
  Number of reached locations:   366 (18%)
    Avg states per location:     1
    Max states per location:     5 (at node N1218)
  Number of reached functions:   36 (53%)
  Number of partitions:          700
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1649 (before line 7119), Function main called from node N1345, stack depth 1 [19650aa6], stack [main]])
  Number of target states:       0
  Size of final wait list        60

Time for analysis setup:          5.366s
  Time for loading CPAs:          1.017s
  Time for loading parser:        0.705s
  Time for CFA construction:      3.479s
    Time for parsing file(s):     0.943s
    Time for AST to CFA:          1.286s
    Time for CFA sanity check:    0.252s
    Time for post-processing:     0.834s
      Time for var class.:        0.420s
Time for Analysis:               24.418s
CPU time for analysis:           24.420s
Total time for CPAchecker:       29.788s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.105s

Time for Garbage Collector:       0.790s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    79 MiB) max;     52MB (    49 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
