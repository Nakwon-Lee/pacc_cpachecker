scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-video-aty-aty128fb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__ogdpywp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6299: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6301: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6306: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6297: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

lines 6355-6356: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6358-6359: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6365-6366: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6353: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6445: Dead code detected: [(state.event) == (pdev->dev.power.power_state.event)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: [!((state.event) == (pdev->dev.power.power_state.event))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6446: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6451: Dead code detected: printk("<7>aty128fb: suspending...\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6461: Dead code detected: [!((state.event) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6463: Dead code detected: aty128_set_suspend(par, 1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6469: Dead code detected: console_unlock(); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3815: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_pan_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_set_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_set_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_bl_default_curve to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            823228 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  777565 (94%)
  Because of loop head:            45550 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         113 (0%)
  Times precision was empty:       8015 (1%)
  Times precision was {false}:     1863 (0%)
  Times result was cached:         809450 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3900 (0%)
  Times result was 'false':        381 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         178397
  BDD entailment checks:           53927
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          4
Number of abstraction locations:          324
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1469593
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 255.00
Number of irrelevant predicates:          593654 (40%)
Number of preds handled by boolean abs:   4596 (0%)
  Total number of models for allsat:      3898
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 63.985s
  Time for path formula creation:       62.594s
Time for strengthen operator:            2.900s
Time for prec operator:                120.760s
  Time for abstraction:                111.221s (Max:     0.896s, Count: 823228)
    Boolean abstraction:                13.356s
    Solving time:                       33.072s (Max:     0.108s)
    Model enumeration time:              0.838s
    Time for BDD construction:           0.125s (Max:     0.012s)
Time for merge operator:                 6.289s
Time for coverage check:                 0.179s
  Time for BDD entailment checks:        0.129s
Total time for SMT solver (w/o itp):    33.910s

Number of path formula cache hits:   2854200 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    52.162s

Total number of created targets for pointer analysis: 974346
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *signed_int is 462
   Number of created targets for uf: *(struct_aty128_meminfo)* is 5
   Number of created targets for uf: *unsigned_char is 5496
   Number of created targets for uf: *(struct_pci_dev)* is 52
   Number of created targets for uf: *unsigned_int is 2177
   Number of created targets for uf: *unsigned_long_int is 21


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7825 (count: 94674, min: 0, max: 237, avg: 0.08)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.289s
  Time for transition matches:                         2.388s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      3039837 (count: 3039837, min: 1, max: 1, avg: 1.00) [1 x 3039837]

CPA algorithm statistics
------------------------
Number of iterations:            2111807
Max size of waitlist:            65
Average size of waitlist:        29
Number of computed successors:   2227030
Max successors for one state:    2
Number of times merged:          62235
Number of times stopped:         110165
Number of times breaked:         113

Total time for CPA algorithm:       264.574s (Max:     7.592s)
  Time for choose from waitlist:      0.973s
  Time for precision adjustment:    140.055s
  Time for transfer relation:       102.603s
  Time for merge operator:            7.535s
  Time for stop operator:             2.908s
  Time for adding to reached set:     3.793s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   113
Avg. length of target path (in blocks):               30880 (count: 113, min: 5, max: 854, avg: 273.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.753s
  Counterexample analysis:                            13.399s (Max:     0.457s, Calls: 113)
    Refinement sat check:                              5.681s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.321s
  Precision update:                                    0.128s
  ARG update:                                          4.690s

Length of refined path (in blocks):                   29545 (count: 113, min: 4, max: 844, avg: 261.46)
Number of affected states:                            29320 (count: 113, min: 0, max: 843, avg: 259.47)
Length (states) of path with itp 'true':                112 (count: 113, min: 0, max: 42, avg: 0.99)
Length (states) of path with itp non-trivial itp:     29320 (count: 113, min: 0, max: 843, avg: 259.47)
Length (states) of path with itp 'false':               113 (count: 113, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 113, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           29209 (count: 113, min: 0, max: 842, avg: 258.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                113
Number of successful refinements:     113
Number of failed refinements:         0
Max. size of reached set before ref.: 38838
Max. size of reached set after ref.:  28563
Avg. size of reached set before ref.: 19453.96
Avg. size of reached set after ref.:  887.21

Total time for CEGAR algorithm:     285.238s
Time for refinements:                20.589s
Average time for refinement:          0.182s
Max time for refinement:              1.296s

Code Coverage
-----------------------------
  Function coverage:      0.865
  Visited lines:          2085
  Total lines:            2192
  Line coverage:          0.951
  Visited conditions:     360
  Total conditions:       388
  Condition coverage:     0.928

CPAchecker general statistics
-----------------------------
Number of program locations:     2764
Number of CFA edges:             3148
Number of relevant variables:    403
Number of functions:             74
Number of loops:                 12
Size of reached set:             18443
  Number of reached locations:   1255 (45%)
    Avg states per location:     14
    Max states per location:     648 (at node N23)
  Number of reached functions:   64 (86%)
  Number of partitions:          18443
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.472s
  Time for loading CPAs:          0.981s
  Time for loading parser:        0.659s
  Time for CFA construction:      3.698s
    Time for parsing file(s):     1.024s
    Time for AST to CFA:          1.267s
    Time for CFA sanity check:    0.300s
    Time for post-processing:     0.931s
      Time for var class.:        0.451s
Time for Analysis:              285.239s
CPU time for analysis:          285.190s
Time for analyzing result:        0.016s
Total time for CPAchecker:      290.715s
Total CPU time for CPAchecker:  290.650s
Time for statistics:              0.377s

Time for Garbage Collector:      27.416s (in 589 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                581MB (   554 MiB) max;    215MB (   205 MiB) avg;    609MB (   581 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           639MB (   609 MiB) max;    326MB (   311 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8169MB (  7790 MiB) max;   8117MB (  7741 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
