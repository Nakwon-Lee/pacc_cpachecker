scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-video-aty-aty128fb.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x75in1bg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6299: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6301: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6306: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6297: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

lines 6355-6356: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6358-6359: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6365-6366: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val),
                             "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6353: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6445: Dead code detected: [(state.event) == (pdev->dev.power.power_state.event)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6445: Dead code detected: [!((state.event) == (pdev->dev.power.power_state.event))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6446: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6451: Dead code detected: printk("<7>aty128fb: suspending...\n"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6461: Dead code detected: [!((state.event) != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6463: Dead code detected: aty128_set_suspend(par, 1); (CFACreationUtils.addEdgeToCFA, INFO)

line 6469: Dead code detected: console_unlock(); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_lock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3815: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_pan_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_set_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_set_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function console_unlock to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_bl_default_curve to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2562425 (29% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2430666 (95%)
  Because of loop head:            131647 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         112 (0%)
  Times precision was empty:       229547 (9%)
  Times precision was {false}:     5361 (0%)
  Times result was cached:         2323550 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3967 (0%)
  Times result was 'false':        787 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         428352
  BDD entailment checks:           151130
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          4
Number of abstraction locations:          324
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         4476522
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 479.90
Number of irrelevant predicates:          3501180 (78%)
Number of preds handled by boolean abs:   4627 (0%)
  Total number of models for allsat:      3957
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                102.033s
  Time for path formula creation:       97.709s
Time for strengthen operator:            8.735s
Time for prec operator:                229.454s
  Time for abstraction:                203.719s (Max:     1.880s, Count: 2562425)
    Boolean abstraction:                12.671s
    Solving time:                       34.195s (Max:     0.180s)
    Model enumeration time:              0.758s
    Time for BDD construction:           0.120s (Max:     0.006s)
Time for merge operator:                 8.669s
Time for coverage check:                 0.295s
  Time for BDD entailment checks:        0.222s
Total time for SMT solver (w/o itp):    34.953s

Number of path formula cache hits:   9519466 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    68.298s

Total number of created targets for pointer analysis: 1185579
   Number of created targets for uf: *(void)* is 36
   Number of created targets for uf: *signed_int is 2889
   Number of created targets for uf: *unsigned_char is 5498
   Number of created targets for uf: *(struct_aty128_meminfo)* is 71
   Number of created targets for uf: *(struct_pci_dev)* is 127
   Number of created targets for uf: *unsigned_int is 14665
   Number of created targets for uf: *unsigned_long_int is 641


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7951 (count: 431311, min: 0, max: 364, avg: 0.02)
Time for BDD node cleanup:                             0.129s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.451s
  Time for transition matches:                         6.036s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      8775851 (count: 8775851, min: 1, max: 1, avg: 1.00) [1 x 8775851]

CPA algorithm statistics
------------------------
Number of iterations:            6282770
Max size of waitlist:            34
Average size of waitlist:        17
Number of computed successors:   6563743
Max successors for one state:    2
Number of times merged:          138611
Number of times stopped:         279770
Number of times breaked:         112

Total time for CPA algorithm:       541.451s (Max:    10.962s)
  Time for choose from waitlist:      2.122s
  Time for precision adjustment:    283.227s
  Time for transfer relation:       211.249s
  Time for merge operator:           10.747s
  Time for stop operator:             6.631s
  Time for adding to reached set:    10.237s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   112
Avg. length of target path (in blocks):               28890 (count: 112, min: 5, max: 943, avg: 257.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.248s
  Counterexample analysis:                            12.875s (Max:     0.526s, Calls: 112)
    Refinement sat check:                              5.868s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.221s
  Precision update:                                    0.143s
  ARG update:                                         15.827s

Length of refined path (in blocks):                   28082 (count: 112, min: 4, max: 933, avg: 250.73)
Number of affected states:                            27921 (count: 112, min: 0, max: 932, avg: 249.29)
Length (states) of path with itp 'true':                 49 (count: 112, min: 0, max: 42, avg: 0.44)
Length (states) of path with itp non-trivial itp:     27921 (count: 112, min: 0, max: 932, avg: 249.29)
Length (states) of path with itp 'false':               112 (count: 112, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 112, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           27810 (count: 112, min: 0, max: 931, avg: 248.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                112
Number of successful refinements:     112
Number of failed refinements:         0
Max. size of reached set before ref.: 81103
Max. size of reached set after ref.:  37170
Avg. size of reached set before ref.: 56585.16
Avg. size of reached set after ref.:  649.95

Total time for CEGAR algorithm:     574.430s
Time for refinements:                32.914s
Average time for refinement:          0.293s
Max time for refinement:              1.581s

Code Coverage
-----------------------------
  Function coverage:      0.865
  Visited lines:          2085
  Total lines:            2192
  Line coverage:          0.951
  Visited conditions:     360
  Total conditions:       388
  Condition coverage:     0.928

CPAchecker general statistics
-----------------------------
Number of program locations:     2764
Number of CFA edges:             3148
Number of relevant variables:    403
Number of functions:             74
Number of loops:                 12
Size of reached set:             18443
  Number of reached locations:   1255 (45%)
    Avg states per location:     14
    Max states per location:     648 (at node N23)
  Number of reached functions:   64 (86%)
  Number of partitions:          18443
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.728s
  Time for loading CPAs:          1.073s
  Time for loading parser:        0.737s
  Time for CFA construction:      3.748s
    Time for parsing file(s):     1.059s
    Time for AST to CFA:          1.271s
    Time for CFA sanity check:    0.272s
    Time for post-processing:     0.989s
      Time for var class.:        0.485s
Time for Analysis:              574.430s
CPU time for analysis:          574.340s
Time for analyzing result:        0.016s
Total time for CPAchecker:      580.163s
Total CPU time for CPAchecker:  580.060s
Time for statistics:              0.380s

Time for Garbage Collector:      75.651s (in 1223 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                869MB (   828 MiB) max;    329MB (   314 MiB) avg;    914MB (   872 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           937MB (   894 MiB) max;    479MB (   457 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8093MB (  7718 MiB) max;   8035MB (  7663 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
