scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-net-sis900.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gdke1lsv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4963: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5003: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4833-4834: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4870: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4870: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30510 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26366 (86%)
  Because of loop head:            4104 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (0%)
  Times precision was empty:       14506 (48%)
  Times precision was {false}:     940 (3%)
  Times result was cached:         14843 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      221 (1%)
  Times result was 'false':        27 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         16344
  BDD entailment checks:           4574
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          2
Number of abstraction locations:          199
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         16004
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 13.78
Number of irrelevant predicates:          7830 (49%)
Number of preds handled by boolean abs:   221 (1%)
  Total number of models for allsat:      221
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.783s
  Time for path formula creation:        6.569s
Time for strengthen operator:            0.333s
Time for prec operator:                  6.345s
  Time for abstraction:                  5.533s (Max:     0.022s, Count: 30510)
    Boolean abstraction:                 0.331s
    Solving time:                        0.775s (Max:     0.016s)
    Model enumeration time:              0.037s
    Time for BDD construction:           0.048s (Max:     0.010s)
Time for merge operator:                 0.285s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.070s
Total time for SMT solver (w/o itp):     0.812s

Number of path formula cache hits:   140378 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.998s

Total number of created targets for pointer analysis: 16
   Number of created targets for uf: *signed_int is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         433 (count: 25108, min: 0, max: 39, avg: 0.02)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.636s
  Time for transition matches:                         0.317s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       161026 (count: 161026, min: 1, max: 1, avg: 1.00) [1 x 161026]

CPA algorithm statistics
------------------------
Number of iterations:            104454
Max size of waitlist:            73
Average size of waitlist:        39
Number of computed successors:   115863
Max successors for one state:    2
Number of times merged:          5885
Number of times stopped:         9398
Number of times breaked:         40

Total time for CPA algorithm:        22.856s (Max:     1.783s)
  Time for choose from waitlist:      0.212s
  Time for precision adjustment:      8.136s
  Time for transfer relation:        11.545s
  Time for merge operator:            0.628s
  Time for stop operator:             0.542s
  Time for adding to reached set:     0.543s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                 993 (count: 40, min: 13, max: 60, avg: 24.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.131s
  Counterexample analysis:                             0.475s (Max:     0.026s, Calls: 40)
    Refinement sat check:                              0.288s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.061s
  ARG update:                                          0.467s

Length of refined path (in blocks):                     953 (count: 40, min: 12, max: 59, avg: 23.83)
Number of affected states:                              913 (count: 40, min: 11, max: 58, avg: 22.83)
Length (states) of path with itp 'true':                  0 (count: 40, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       913 (count: 40, min: 11, max: 58, avg: 22.83)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 40, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             873 (count: 40, min: 10, max: 57, avg: 21.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 4224
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2607.20
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      24.181s
Time for refinements:                 1.317s
Average time for refinement:          0.032s
Max time for refinement:              0.108s

Code Coverage
-----------------------------
  Function coverage:      0.627
  Visited lines:          1856
  Total lines:            3065
  Line coverage:          0.606
  Visited conditions:     276
  Total conditions:       612
  Condition coverage:     0.451

CPAchecker general statistics
-----------------------------
Number of program locations:     4016
Number of CFA edges:             4590
Number of relevant variables:    569
Number of functions:             118
Number of loops:                 46
Size of reached set:             2270
  Number of reached locations:   1008 (25%)
    Avg states per location:     2
    Max states per location:     47 (at node N96)
  Number of reached functions:   74 (63%)
  Number of partitions:          2257
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3520 (before line 8958), Function main called from node N3268, stack depth 1 [55e3d6c3], stack [main]])
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          6.082s
  Time for loading CPAs:          1.053s
  Time for loading parser:        0.714s
  Time for CFA construction:      4.143s
    Time for parsing file(s):     1.068s
    Time for AST to CFA:          1.506s
    Time for CFA sanity check:    0.327s
    Time for post-processing:     1.036s
      Time for var class.:        0.560s
Time for Analysis:               24.181s
CPU time for analysis:           24.180s
Total time for CPAchecker:       30.268s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.122s

Time for Garbage Collector:       0.706s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    78 MiB) max;     51MB (    49 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
