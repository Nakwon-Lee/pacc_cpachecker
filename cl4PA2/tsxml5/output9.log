scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-net-sis900.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v8kzdhj9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4963: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5003: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4833-4834: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4870: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4870: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            33455 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29666 (89%)
  Because of loop head:            3741 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       12181 (36%)
  Times precision was {false}:     732 (2%)
  Times result was cached:         20214 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      328 (1%)
  Times result was 'false':        94 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         17858
  BDD entailment checks:           3698
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          2
Number of abstraction locations:          252
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         21274
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 20.07
Number of irrelevant predicates:          7896 (37%)
Number of preds handled by boolean abs:   328 (2%)
  Total number of models for allsat:      328
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.684s
  Time for path formula creation:        5.462s
Time for strengthen operator:            0.396s
Time for prec operator:                  6.435s
  Time for abstraction:                  5.500s (Max:     0.025s, Count: 33455)
    Boolean abstraction:                 0.338s
    Solving time:                        0.747s (Max:     0.016s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.035s (Max:     0.012s)
Time for merge operator:                 0.257s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     0.759s

Number of path formula cache hits:   179584 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.582s

Total number of created targets for pointer analysis: 10
   Number of created targets for uf: *signed_int is 6


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         657 (count: 21512, min: 0, max: 88, avg: 0.03)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.790s
  Time for transition matches:                         0.282s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       179696 (count: 179696, min: 1, max: 1, avg: 1.00) [1 x 179696]

CPA algorithm statistics
------------------------
Number of iterations:            115896
Max size of waitlist:            89
Average size of waitlist:        41
Number of computed successors:   129235
Max successors for one state:    2
Number of times merged:          7080
Number of times stopped:         10240
Number of times breaked:         48

Total time for CPA algorithm:        21.720s (Max:     0.985s)
  Time for choose from waitlist:      0.206s
  Time for precision adjustment:      8.128s
  Time for transfer relation:        10.699s
  Time for merge operator:            0.696s
  Time for stop operator:             0.400s
  Time for adding to reached set:     0.499s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                2676 (count: 48, min: 5, max: 186, avg: 55.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.784s
  Counterexample analysis:                             1.052s (Max:     0.071s, Calls: 48)
    Refinement sat check:                              0.495s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.035s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.117s
  Precision update:                                    0.052s
  ARG update:                                          0.489s

Length of refined path (in blocks):                    2628 (count: 48, min: 4, max: 185, avg: 54.75)
Number of affected states:                             2580 (count: 48, min: 3, max: 184, avg: 53.75)
Length (states) of path with itp 'true':                  0 (count: 48, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      2580 (count: 48, min: 3, max: 184, avg: 53.75)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 48, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2532 (count: 48, min: 2, max: 183, avg: 52.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 4608
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2416.81
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      23.781s
Time for refinements:                 2.058s
Average time for refinement:          0.042s
Max time for refinement:              0.111s

Code Coverage
-----------------------------
  Function coverage:      0.661
  Visited lines:          1923
  Total lines:            3065
  Line coverage:          0.627
  Visited conditions:     292
  Total conditions:       612
  Condition coverage:     0.477

CPAchecker general statistics
-----------------------------
Number of program locations:     4016
Number of CFA edges:             4590
Number of relevant variables:    569
Number of functions:             118
Number of loops:                 46
Size of reached set:             3038
  Number of reached locations:   1042 (26%)
    Avg states per location:     2
    Max states per location:     68 (at node N95)
  Number of reached functions:   78 (66%)
  Number of partitions:          3030
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2334 (before line 7541), Function sis900_interrupt called from node N3507, stack depth 2 [655bb93f], stack [main, sis900_interrupt]])
  Number of target states:       0
  Size of final wait list        53

Time for analysis setup:          6.484s
  Time for loading CPAs:          1.300s
  Time for loading parser:        0.721s
  Time for CFA construction:      4.297s
    Time for parsing file(s):     1.104s
    Time for AST to CFA:          1.529s
    Time for CFA sanity check:    0.331s
    Time for post-processing:     1.134s
      Time for var class.:        0.542s
Time for Analysis:               23.781s
CPU time for analysis:           23.780s
Total time for CPAchecker:       30.269s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.175s

Time for Garbage Collector:       0.762s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     53MB (    51 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     40MB (    38 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        48MB (    45 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
