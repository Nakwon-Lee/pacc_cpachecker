scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-net-sis900.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zbh6zh4g/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4963: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5003: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4833-4834: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4870: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4870: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            43509 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37616 (86%)
  Because of loop head:            5843 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50 (0%)
  Times precision was empty:       2397 (6%)
  Times precision was {false}:     392 (1%)
  Times result was cached:         40407 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      313 (1%)
  Times result was 'false':        127 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         10920
  BDD entailment checks:           3924
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          2
Number of abstraction locations:          254
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         41112
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 58.31
Number of irrelevant predicates:          4544 (11%)
Number of preds handled by boolean abs:   313 (1%)
  Total number of models for allsat:      313
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.086s
  Time for path formula creation:        3.730s
Time for strengthen operator:            0.285s
Time for prec operator:                  7.283s
  Time for abstraction:                  6.347s (Max:     0.022s, Count: 43509)
    Boolean abstraction:                 0.319s
    Solving time:                        0.332s (Max:     0.012s)
    Model enumeration time:              0.043s
    Time for BDD construction:           0.046s (Max:     0.010s)
Time for merge operator:                 0.143s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.375s

Number of path formula cache hits:   195169 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.856s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         629 (count: 10164, min: 0, max: 68, avg: 0.06)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.586s
  Time for transition matches:                         0.273s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       173308 (count: 173308, min: 1, max: 1, avg: 1.00) [1 x 173308]

CPA algorithm statistics
------------------------
Number of iterations:            123118
Max size of waitlist:            46
Average size of waitlist:        27
Number of computed successors:   131985
Max successors for one state:    2
Number of times merged:          3498
Number of times stopped:         7118
Number of times breaked:         50

Total time for CPA algorithm:        21.635s (Max:     0.844s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:      8.921s
  Time for transfer relation:         9.738s
  Time for merge operator:            0.435s
  Time for stop operator:             0.453s
  Time for adding to reached set:     0.631s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                4698 (count: 50, min: 5, max: 186, avg: 93.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.367s
  Counterexample analysis:                             1.582s (Max:     0.069s, Calls: 50)
    Refinement sat check:                              0.709s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.154s
  Precision update:                                    0.099s
  ARG update:                                          0.427s

Length of refined path (in blocks):                    4648 (count: 50, min: 4, max: 185, avg: 92.96)
Number of affected states:                             4598 (count: 50, min: 3, max: 184, avg: 91.96)
Length (states) of path with itp 'true':                  0 (count: 50, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      4598 (count: 50, min: 3, max: 184, avg: 91.96)
Length (states) of path with itp 'false':                50 (count: 50, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 50, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4548 (count: 50, min: 2, max: 183, avg: 90.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 4829
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2422.52
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      24.373s
Time for refinements:                 2.727s
Average time for refinement:          0.054s
Max time for refinement:              0.114s

Code Coverage
-----------------------------
  Function coverage:      0.534
  Visited lines:          1751
  Total lines:            3065
  Line coverage:          0.571
  Visited conditions:     266
  Total conditions:       612
  Condition coverage:     0.435

CPAchecker general statistics
-----------------------------
Number of program locations:     4016
Number of CFA edges:             4590
Number of relevant variables:    569
Number of functions:             118
Number of loops:                 46
Size of reached set:             3765
  Number of reached locations:   976 (24%)
    Avg states per location:     3
    Max states per location:     198 (at node N100)
  Number of reached functions:   63 (53%)
  Number of partitions:          3765
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          5.878s
  Time for loading CPAs:          1.022s
  Time for loading parser:        0.683s
  Time for CFA construction:      4.008s
    Time for parsing file(s):     1.115s
    Time for AST to CFA:          1.409s
    Time for CFA sanity check:    0.322s
    Time for post-processing:     0.968s
      Time for var class.:        0.491s
Time for Analysis:               24.373s
CPU time for analysis:           24.360s
Total time for CPAchecker:       30.258s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.129s

Time for Garbage Collector:       0.645s (in 63 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     49MB (    46 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
