scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k5w5_3ik/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            727879 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  634224 (87%)
  Because of loop head:            93011 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         644 (0%)
  Times precision was empty:       20736 (3%)
  Times precision was {false}:     506 (0%)
  Times result was cached:         674480 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32157 (4%)
  Times result was 'false':        33989 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1073693
  BDD entailment checks:           227943
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          33
Number of abstraction locations:          243
Max number of predicates per location:    14
Avg number of predicates per location:    5
Total predicates per abstraction:         4007949
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 122.71
Number of irrelevant predicates:          1339009 (33%)
Number of preds handled by boolean abs:   150132 (4%)
  Total number of models for allsat:      68400
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.13

Time for post operator:                 82.424s
  Time for path formula creation:       79.252s
Time for strengthen operator:            5.929s
Time for prec operator:                239.372s
  Time for abstraction:                229.528s (Max:     3.227s, Count: 727879)
    Boolean abstraction:                39.670s
    Solving time:                       30.796s (Max:     0.025s)
    Model enumeration time:              5.070s
    Time for BDD construction:           1.167s (Max:     0.011s)
Time for merge operator:                 6.381s
Time for coverage check:                 0.433s
  Time for BDD entailment checks:        0.284s
Total time for SMT solver (w/o itp):    35.866s

Number of path formula cache hits:   5366648 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    65.087s

Total number of created targets for pointer analysis: 26388
   Number of created targets for uf: *unsigned_char is 77
   Number of created targets for uf: *(struct_list_head)* is 21056
   Number of created targets for uf: *(struct_firmware)* is 1755


Number of BDD nodes:                               6409
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       66722 (count: 448067, min: 0, max: 1549, avg: 0.15)
Time for BDD node cleanup:                             0.095s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.688s
  Time for transition matches:                         3.812s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      6652731 (count: 6652731, min: 1, max: 1, avg: 1.00) [1 x 6652731]

CPA algorithm statistics
------------------------
Number of iterations:            4501638
Max size of waitlist:            91
Average size of waitlist:        18
Number of computed successors:   5073461
Max successors for one state:    2
Number of times merged:          422875
Number of times stopped:         534180
Number of times breaked:         644

Total time for CPA algorithm:       455.010s (Max:     5.392s)
  Time for choose from waitlist:      1.840s
  Time for precision adjustment:    273.918s
  Time for transfer relation:       140.338s
  Time for merge operator:           11.817s
  Time for stop operator:             5.594s
  Time for adding to reached set:     8.919s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   644
Avg. length of target path (in blocks):               42754 (count: 644, min: 5, max: 213, avg: 66.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.305s
  Counterexample analysis:                            17.642s (Max:     0.113s, Calls: 644)
    Refinement sat check:                             10.090s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.047s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.228s
  Precision update:                                    0.538s
  ARG update:                                          7.431s

Length of refined path (in blocks):                   31843 (count: 644, min: 4, max: 148, avg: 49.45)
Number of affected states:                            14969 (count: 644, min: 1, max: 144, avg: 23.24)
Length (states) of path with itp 'true':              16230 (count: 644, min: 0, max: 92, avg: 25.20)
Length (states) of path with itp non-trivial itp:     14969 (count: 644, min: 1, max: 144, avg: 23.24)
Length (states) of path with itp 'false':               644 (count: 644, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         285 (count: 644, min: 0, max: 5, avg: 0.44)
Equal non-trivial interpolants along paths:           14040 (count: 644, min: 0, max: 141, avg: 21.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                644
Number of successful refinements:     644
Number of failed refinements:         0
Max. size of reached set before ref.: 30379
Max. size of reached set after ref.:  30233
Avg. size of reached set before ref.: 20224.86
Avg. size of reached set after ref.:  13274.64

Total time for CEGAR algorithm:     498.178s
Time for refinements:                37.204s
Average time for refinement:          0.057s
Max time for refinement:              0.268s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          1973
  Total lines:            2342
  Line coverage:          0.842
  Visited conditions:     322
  Total conditions:       410
  Condition coverage:     0.785

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             29348
  Number of reached locations:   1299 (41%)
    Avg states per location:     22
    Max states per location:     210 (at node N151)
  Number of reached functions:   62 (79%)
  Number of partitions:          29149
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N2880 (before line 7730), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.781s
  Time for loading CPAs:          1.040s
  Time for loading parser:        0.654s
  Time for CFA construction:      3.900s
    Time for parsing file(s):     1.121s
    Time for AST to CFA:          1.323s
    Time for CFA sanity check:    0.314s
    Time for post-processing:     0.957s
      Time for var class.:        0.434s
Time for Analysis:              498.179s
CPU time for analysis:          498.100s
Time for analyzing result:        0.022s
Total time for CPAchecker:      503.966s
Total CPU time for CPAchecker:  503.870s
Time for statistics:              0.498s

Time for Garbage Collector:      42.489s (in 826 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                898MB (   857 MiB) max;    398MB (   380 MiB) avg;    918MB (   875 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1509MB (  1439 MiB) max;    580MB (   553 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8692MB (  8289 MiB) max;   8264MB (  7881 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
