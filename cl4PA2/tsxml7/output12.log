scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ec2hxma3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16023 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14339 (89%)
  Because of loop head:            1624 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60 (0%)
  Times precision was empty:       9638 (60%)
  Times precision was {false}:     263 (2%)
  Times result was cached:         5475 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      647 (4%)
  Times result was 'false':        250 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         16897
  BDD entailment checks:           3509
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          9
Number of abstraction locations:          41
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         14352
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 15.77
Number of irrelevant predicates:          6371 (44%)
Number of preds handled by boolean abs:   1167 (8%)
  Total number of models for allsat:      680
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  8.009s
  Time for path formula creation:        7.807s
Time for strengthen operator:            0.283s
Time for prec operator:                  6.309s
  Time for abstraction:                  5.537s (Max:     0.033s, Count: 16023)
    Boolean abstraction:                 0.981s
    Solving time:                        0.990s (Max:     0.043s)
    Model enumeration time:              0.068s
    Time for BDD construction:           0.153s (Max:     0.010s)
Time for merge operator:                 0.301s
Time for coverage check:                 0.114s
  Time for BDD entailment checks:        0.084s
Total time for SMT solver (w/o itp):     1.072s

Number of path formula cache hits:   106549 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.141s

Total number of created targets for pointer analysis: 1528
   Number of created targets for uf: *(void)* is 22
   Number of created targets for uf: *unsigned_char is 51
   Number of created targets for uf: *(struct_list_head)* is 817
   Number of created targets for uf: *(struct_firmware)* is 254
   Number of created targets for uf: *(struct_usb_serial_port)* is 17


Number of BDD nodes:                               259
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1412 (count: 18418, min: 0, max: 136, avg: 0.08)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.703s
  Time for transition matches:                         0.354s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                       133603 (count: 133603, min: 1, max: 1, avg: 1.00) [1 x 133603]

CPA algorithm statistics
------------------------
Number of iterations:            75110
Max size of waitlist:            116
Average size of waitlist:        52
Number of computed successors:   86775
Max successors for one state:    2
Number of times merged:          6694
Number of times stopped:         8409
Number of times breaked:         60

Total time for CPA algorithm:        22.386s (Max:     1.328s)
  Time for choose from waitlist:      0.191s
  Time for precision adjustment:      7.678s
  Time for transfer relation:        11.853s
  Time for merge operator:            0.702s
  Time for stop operator:             0.388s
  Time for adding to reached set:     0.357s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                1553 (count: 60, min: 5, max: 47, avg: 25.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.880s
  Counterexample analysis:                             1.285s (Max:     0.049s, Calls: 60)
    Refinement sat check:                              0.825s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.113s
  ARG update:                                          0.347s

Length of refined path (in blocks):                     807 (count: 60, min: 4, max: 22, avg: 13.45)
Number of affected states:                              525 (count: 60, min: 1, max: 21, avg: 8.75)
Length (states) of path with itp 'true':                222 (count: 60, min: 0, max: 17, avg: 3.70)
Length (states) of path with itp non-trivial itp:       525 (count: 60, min: 1, max: 21, avg: 8.75)
Length (states) of path with itp 'false':                60 (count: 60, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 60, min: 0, max: 2, avg: 0.10)
Equal non-trivial interpolants along paths:             459 (count: 60, min: 0, max: 20, avg: 7.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 3210
Max. size of reached set after ref.:  2625
Avg. size of reached set before ref.: 1890.13
Avg. size of reached set after ref.:  634.22

Total time for CEGAR algorithm:      24.616s
Time for refinements:                 2.181s
Average time for refinement:          0.036s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.564
  Visited lines:          1348
  Total lines:            2342
  Line coverage:          0.576
  Visited conditions:     184
  Total conditions:       410
  Condition coverage:     0.449

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             2761
  Number of reached locations:   626 (20%)
    Avg states per location:     4
    Max states per location:     43 (at node N198)
  Number of reached functions:   44 (56%)
  Number of partitions:          2730
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2783 (before lines 7650-7857), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0
  Size of final wait list        86

Time for analysis setup:          5.653s
  Time for loading CPAs:          0.934s
  Time for loading parser:        0.689s
  Time for CFA construction:      3.858s
    Time for parsing file(s):     1.119s
    Time for AST to CFA:          1.332s
    Time for CFA sanity check:    0.229s
    Time for post-processing:     0.943s
      Time for var class.:        0.486s
Time for Analysis:               24.616s
CPU time for analysis:           24.610s
Total time for CPAchecker:       30.275s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.191s

Time for Garbage Collector:       0.700s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     50MB (    48 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
