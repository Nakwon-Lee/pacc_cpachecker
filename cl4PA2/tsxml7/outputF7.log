scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a131lh_m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            731358 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  639275 (87%)
  Because of loop head:            91194 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         889 (0%)
  Times precision was empty:       124992 (17%)
  Times precision was {false}:     2088 (0%)
  Times result was cached:         585561 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18717 (3%)
  Times result was 'false':        30039 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1005428
  BDD entailment checks:           209678
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          25
Number of abstraction locations:          243
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         2467366
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 118.59
Number of irrelevant predicates:          1176588 (48%)
Number of preds handled by boolean abs:   56702 (2%)
  Total number of models for allsat:      24658
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.32

Time for post operator:                 51.131s
  Time for path formula creation:       47.574s
Time for strengthen operator:            5.478s
Time for prec operator:                149.121s
  Time for abstraction:                139.799s (Max:     0.982s, Count: 731358)
    Boolean abstraction:                19.561s
    Solving time:                       17.364s (Max:     0.046s)
    Model enumeration time:              1.965s
    Time for BDD construction:           0.516s (Max:     0.012s)
Time for merge operator:                 3.914s
Time for coverage check:                 0.410s
  Time for BDD entailment checks:        0.292s
Total time for SMT solver (w/o itp):    19.329s

Number of path formula cache hits:   6540725 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.541s

Total number of created targets for pointer analysis: 15070
   Number of created targets for uf: *(void)* is 111
   Number of created targets for uf: *unsigned_char is 69
   Number of created targets for uf: *(struct_list_head)* is 8341
   Number of created targets for uf: *(struct_usb_serial_port)* is 111
   Number of created targets for uf: *(struct_firmware)* is 835


Number of BDD nodes:                               2476
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       37895 (count: 461239, min: 0, max: 967, avg: 0.08)
Time for BDD node cleanup:                             0.083s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.763s
  Time for transition matches:                         4.438s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      6499020 (count: 6499020, min: 1, max: 1, avg: 1.00) [1 x 6499020]

CPA algorithm statistics
------------------------
Number of iterations:            4386245
Max size of waitlist:            78
Average size of waitlist:        28
Number of computed successors:   4931213
Max successors for one state:    2
Number of times merged:          397875
Number of times stopped:         509653
Number of times breaked:         889

Total time for CPA algorithm:       324.995s (Max:     3.457s)
  Time for choose from waitlist:      1.715s
  Time for precision adjustment:    180.988s
  Time for transfer relation:       109.585s
  Time for merge operator:            8.875s
  Time for stop operator:             5.530s
  Time for adding to reached set:     7.147s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   889
Avg. length of target path (in blocks):               34899 (count: 889, min: 5, max: 97, avg: 39.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.729s
  Counterexample analysis:                            13.576s (Max:     0.064s, Calls: 889)
    Refinement sat check:                              8.475s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.048s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.164s
  Precision update:                                    0.532s
  ARG update:                                          9.032s

Length of refined path (in blocks):                   21068 (count: 889, min: 4, max: 86, avg: 23.70)
Number of affected states:                             9666 (count: 889, min: 1, max: 85, avg: 10.87)
Length (states) of path with itp 'true':              10513 (count: 889, min: 0, max: 82, avg: 11.83)
Length (states) of path with itp non-trivial itp:      9666 (count: 889, min: 1, max: 85, avg: 10.87)
Length (states) of path with itp 'false':               889 (count: 889, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         225 (count: 889, min: 0, max: 2, avg: 0.25)
Equal non-trivial interpolants along paths:            8552 (count: 889, min: 0, max: 84, avg: 9.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                889
Number of successful refinements:     889
Number of failed refinements:         0
Max. size of reached set before ref.: 27183
Max. size of reached set after ref.:  22284
Avg. size of reached set before ref.: 11916.85
Avg. size of reached set after ref.:  7002.10

Total time for CEGAR algorithm:     364.026s
Time for refinements:                34.323s
Average time for refinement:          0.038s
Max time for refinement:              0.535s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          1973
  Total lines:            2342
  Line coverage:          0.842
  Visited conditions:     322
  Total conditions:       410
  Condition coverage:     0.785

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             22311
  Number of reached locations:   1299 (41%)
    Avg states per location:     17
    Max states per location:     153 (at node N151)
  Number of reached functions:   62 (79%)
  Number of partitions:          22085
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2880 (before line 7730), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.018s
  Time for loading CPAs:          1.142s
  Time for loading parser:        0.704s
  Time for CFA construction:      3.970s
    Time for parsing file(s):     1.200s
    Time for AST to CFA:          1.301s
    Time for CFA sanity check:    0.245s
    Time for post-processing:     0.980s
      Time for var class.:        0.499s
Time for Analysis:              364.026s
CPU time for analysis:          363.980s
Time for analyzing result:        0.017s
Total time for CPAchecker:      370.050s
Total CPU time for CPAchecker:  369.980s
Time for statistics:              0.470s

Time for Garbage Collector:      33.613s (in 982 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                513MB (   490 MiB) max;    207MB (   197 MiB) avg;    544MB (   519 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           726MB (   692 MiB) max;    306MB (   292 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8354MB (  7967 MiB) max;   8143MB (  7765 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
