scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y7u0zv0a/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            28944 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25719 (89%)
  Because of loop head:            3168 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (0%)
  Times precision was empty:       13031 (45%)
  Times precision was {false}:     384 (1%)
  Times result was cached:         15014 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      515 (2%)
  Times result was 'false':        273 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         34871
  BDD entailment checks:           6031
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          4
Number of abstraction locations:          112
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         31061
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 34.55
Number of irrelevant predicates:          19470 (63%)
Number of preds handled by boolean abs:   671 (2%)
  Total number of models for allsat:      513
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.085s
  Time for path formula creation:        4.838s
Time for strengthen operator:            0.420s
Time for prec operator:                  7.232s
  Time for abstraction:                  6.339s (Max:     0.033s, Count: 28944)
    Boolean abstraction:                 0.748s
    Solving time:                        0.838s (Max:     0.015s)
    Model enumeration time:              0.089s
    Time for BDD construction:           0.102s (Max:     0.012s)
Time for merge operator:                 0.321s
Time for coverage check:                 0.081s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     0.927s

Number of path formula cache hits:   262226 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.973s

Total number of created targets for pointer analysis: 170
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *unsigned_char is 7
   Number of created targets for uf: *(struct_list_head)* is 27
   Number of created targets for uf: *(struct_firmware)* is 25
   Number of created targets for uf: *(struct_usb_serial_port)* is 3


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1047 (count: 24090, min: 0, max: 54, avg: 0.04)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.861s
  Time for transition matches:                         0.432s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       249345 (count: 249345, min: 1, max: 1, avg: 1.00) [1 x 249345]

CPA algorithm statistics
------------------------
Number of iterations:            153614
Max size of waitlist:            84
Average size of waitlist:        41
Number of computed successors:   174863
Max successors for one state:    2
Number of times merged:          14420
Number of times stopped:         17890
Number of times breaked:         57

Total time for CPA algorithm:        22.833s (Max:     1.056s)
  Time for choose from waitlist:      0.293s
  Time for precision adjustment:      9.309s
  Time for transfer relation:        10.018s
  Time for merge operator:            0.756s
  Time for stop operator:             0.570s
  Time for adding to reached set:     0.509s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                 920 (count: 57, min: 5, max: 22, avg: 16.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.239s
  Counterexample analysis:                             0.515s (Max:     0.019s, Calls: 57)
    Refinement sat check:                              0.362s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.042s
  ARG update:                                          0.529s

Length of refined path (in blocks):                     858 (count: 57, min: 4, max: 21, avg: 15.05)
Number of affected states:                              793 (count: 57, min: 1, max: 20, avg: 13.91)
Length (states) of path with itp 'true':                  8 (count: 57, min: 0, max: 8, avg: 0.14)
Length (states) of path with itp non-trivial itp:       793 (count: 57, min: 1, max: 20, avg: 13.91)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 57, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             736 (count: 57, min: 0, max: 19, avg: 12.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 4108
Max. size of reached set after ref.:  1986
Avg. size of reached set before ref.: 2729.96
Avg. size of reached set after ref.:  37.79

Total time for CEGAR algorithm:      24.330s
Time for refinements:                 1.486s
Average time for refinement:          0.026s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.846
  Visited lines:          1874
  Total lines:            2342
  Line coverage:          0.800
  Visited conditions:     314
  Total conditions:       410
  Condition coverage:     0.766

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             3246
  Number of reached locations:   1206 (38%)
    Avg states per location:     2
    Max states per location:     46 (at node N198)
  Number of reached functions:   66 (85%)
  Number of partitions:          3229
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2783 (before lines 7650-7857), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0
  Size of final wait list        50

Time for analysis setup:          5.913s
  Time for loading CPAs:          0.987s
  Time for loading parser:        0.751s
  Time for CFA construction:      4.004s
    Time for parsing file(s):     1.124s
    Time for AST to CFA:          1.338s
    Time for CFA sanity check:    0.264s
    Time for post-processing:     0.979s
      Time for var class.:        0.413s
Time for Analysis:               24.330s
CPU time for analysis:           24.330s
Total time for CPAchecker:       30.253s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.145s

Time for Garbage Collector:       0.719s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    71 MiB) max;     48MB (    46 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
