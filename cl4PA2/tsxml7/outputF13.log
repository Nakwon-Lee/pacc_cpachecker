scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n5kiwo2a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            562400 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  489020 (87%)
  Because of loop head:            72472 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         908 (0%)
  Times precision was empty:       28254 (5%)
  Times precision was {false}:     476 (0%)
  Times result was cached:         513334 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20336 (4%)
  Times result was 'false':        23886 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         797641
  BDD entailment checks:           175005
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          30
Number of abstraction locations:          243
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         2603567
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 125.10
Number of irrelevant predicates:          914084 (35%)
Number of preds handled by boolean abs:   82749 (3%)
  Total number of models for allsat:      36482
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.79

Time for post operator:                 55.625s
  Time for path formula creation:       52.420s
Time for strengthen operator:            4.241s
Time for prec operator:                161.494s
  Time for abstraction:                153.435s (Max:     1.624s, Count: 562400)
    Boolean abstraction:                23.428s
    Solving time:                       18.497s (Max:     0.016s)
    Model enumeration time:              2.664s
    Time for BDD construction:           0.714s (Max:     0.048s)
Time for merge operator:                 3.677s
Time for coverage check:                 0.344s
  Time for BDD entailment checks:        0.232s
Total time for SMT solver (w/o itp):    21.161s

Number of path formula cache hits:   4534822 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    40.914s

Total number of created targets for pointer analysis: 14558
   Number of created targets for uf: *unsigned_char is 68
   Number of created targets for uf: *(struct_list_head)* is 10991
   Number of created targets for uf: *(struct_firmware)* is 1092


Number of BDD nodes:                               3996
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       43214 (count: 331067, min: 0, max: 1181, avg: 0.13)
Time for BDD node cleanup:                             0.081s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.651s
  Time for transition matches:                         3.549s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                      5003409 (count: 5003409, min: 1, max: 1, avg: 1.00) [1 x 5003409]

CPA algorithm statistics
------------------------
Number of iterations:            3388143
Max size of waitlist:            52
Average size of waitlist:        15
Number of computed successors:   3814421
Max successors for one state:    2
Number of times merged:          311318
Number of times stopped:         398727
Number of times breaked:         908

Total time for CPA algorithm:       320.669s (Max:     4.736s)
  Time for choose from waitlist:      1.263s
  Time for precision adjustment:    187.125s
  Time for transfer relation:       103.282s
  Time for merge operator:            7.474s
  Time for stop operator:             5.371s
  Time for adding to reached set:     6.864s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   908
Avg. length of target path (in blocks):               50323 (count: 908, min: 5, max: 128, avg: 55.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.093s
  Counterexample analysis:                            21.365s (Max:     0.127s, Calls: 908)
    Refinement sat check:                             12.635s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.030s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.239s
  Precision update:                                    0.774s
  ARG update:                                          6.210s

Length of refined path (in blocks):                   37497 (count: 908, min: 4, max: 98, avg: 41.30)
Number of affected states:                            10637 (count: 908, min: 1, max: 95, avg: 11.71)
Length (states) of path with itp 'true':              25952 (count: 908, min: 0, max: 95, avg: 28.58)
Length (states) of path with itp non-trivial itp:     10637 (count: 908, min: 1, max: 95, avg: 11.71)
Length (states) of path with itp 'false':               908 (count: 908, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         239 (count: 908, min: 0, max: 5, avg: 0.26)
Equal non-trivial interpolants along paths:            9490 (count: 908, min: 0, max: 93, avg: 10.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                908
Number of successful refinements:     908
Number of failed refinements:         0
Max. size of reached set before ref.: 32244
Max. size of reached set after ref.:  32077
Avg. size of reached set before ref.: 17666.03
Avg. size of reached set after ref.:  13944.43

Total time for CEGAR algorithm:     375.404s
Time for refinements:                44.579s
Average time for refinement:          0.049s
Max time for refinement:              0.255s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          1966
  Total lines:            2342
  Line coverage:          0.839
  Visited conditions:     320
  Total conditions:       410
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             12598
  Number of reached locations:   1291 (41%)
    Avg states per location:     9
    Max states per location:     89 (at node N151)
  Number of reached functions:   62 (79%)
  Number of partitions:          12512
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2880 (before line 7730), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.986s
  Time for loading CPAs:          1.024s
  Time for loading parser:        0.750s
  Time for CFA construction:      4.043s
    Time for parsing file(s):     1.095s
    Time for AST to CFA:          1.485s
    Time for CFA sanity check:    0.251s
    Time for post-processing:     0.963s
      Time for var class.:        0.470s
Time for Analysis:              375.406s
CPU time for analysis:          375.350s
Time for analyzing result:        0.015s
Total time for CPAchecker:      381.397s
Total CPU time for CPAchecker:  381.330s
Time for statistics:              0.310s

Time for Garbage Collector:      29.135s (in 741 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                647MB (   617 MiB) max;    287MB (   274 MiB) avg;    653MB (   623 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           667MB (   636 MiB) max;    421MB (   402 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8162MB (  7784 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
