scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s2vzoy8a/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13145 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11802 (90%)
  Because of loop head:            1293 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50 (0%)
  Times precision was empty:       8223 (63%)
  Times precision was {false}:     242 (2%)
  Times result was cached:         4069 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      611 (5%)
  Times result was 'false':        206 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         12697
  BDD entailment checks:           2635
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          12
Number of abstraction locations:          40
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         10971
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 12.86
Number of irrelevant predicates:          4742 (43%)
Number of preds handled by boolean abs:   1162 (11%)
  Total number of models for allsat:      684
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                  8.527s
  Time for path formula creation:        8.322s
Time for strengthen operator:            0.335s
Time for prec operator:                  5.652s
  Time for abstraction:                  4.979s (Max:     0.028s, Count: 13145)
    Boolean abstraction:                 1.030s
    Solving time:                        0.906s (Max:     0.014s)
    Model enumeration time:              0.065s
    Time for BDD construction:           0.129s (Max:     0.012s)
Time for merge operator:                 0.464s
Time for coverage check:                 0.081s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     0.971s

Number of path formula cache hits:   67299 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.717s

Total number of created targets for pointer analysis: 1610
   Number of created targets for uf: *(void)* is 19
   Number of created targets for uf: *unsigned_char is 57
   Number of created targets for uf: *(struct_list_head)* is 919
   Number of created targets for uf: *(struct_firmware)* is 246
   Number of created targets for uf: *(struct_usb_serial_port)* is 19


Number of BDD nodes:                               314
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1297 (count: 15841, min: 0, max: 166, avg: 0.08)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.601s
  Time for transition matches:                         0.293s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       103945 (count: 103945, min: 1, max: 1, avg: 1.00) [1 x 103945]

CPA algorithm statistics
------------------------
Number of iterations:            57384
Max size of waitlist:            118
Average size of waitlist:        50
Number of computed successors:   66460
Max successors for one state:    2
Number of times merged:          5031
Number of times stopped:         6360
Number of times breaked:         50

Total time for CPA algorithm:        22.105s (Max:     1.202s)
  Time for choose from waitlist:      0.267s
  Time for precision adjustment:      7.018s
  Time for transfer relation:        12.116s
  Time for merge operator:            0.841s
  Time for stop operator:             0.365s
  Time for adding to reached set:     0.412s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                1394 (count: 50, min: 5, max: 49, avg: 27.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.740s
  Counterexample analysis:                             1.235s (Max:     0.054s, Calls: 50)
    Refinement sat check:                              0.788s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.026s
  ARG update:                                          0.341s

Length of refined path (in blocks):                     731 (count: 50, min: 4, max: 26, avg: 14.62)
Number of affected states:                              530 (count: 50, min: 1, max: 25, avg: 10.60)
Length (states) of path with itp 'true':                151 (count: 50, min: 0, max: 19, avg: 3.02)
Length (states) of path with itp non-trivial itp:       530 (count: 50, min: 1, max: 25, avg: 10.60)
Length (states) of path with itp 'false':                50 (count: 50, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 50, min: 0, max: 2, avg: 0.12)
Equal non-trivial interpolants along paths:             474 (count: 50, min: 0, max: 24, avg: 9.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 3092
Max. size of reached set after ref.:  1900
Avg. size of reached set before ref.: 1505.40
Avg. size of reached set after ref.:  347.16

Total time for CEGAR algorithm:      24.125s
Time for refinements:                 1.987s
Average time for refinement:          0.039s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.449
  Visited lines:          1150
  Total lines:            2342
  Line coverage:          0.491
  Visited conditions:     140
  Total conditions:       410
  Condition coverage:     0.341

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             1981
  Number of reached locations:   430 (14%)
    Avg states per location:     4
    Max states per location:     49 (at node N151)
  Number of reached functions:   35 (45%)
  Number of partitions:          1970
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2783 (before lines 7650-7857), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0
  Size of final wait list        86

Time for analysis setup:          5.660s
  Time for loading CPAs:          1.030s
  Time for loading parser:        0.728s
  Time for CFA construction:      3.801s
    Time for parsing file(s):     1.069s
    Time for AST to CFA:          1.321s
    Time for CFA sanity check:    0.290s
    Time for post-processing:     0.901s
      Time for var class.:        0.449s
Time for Analysis:               24.125s
CPU time for analysis:           24.120s
Total time for CPAchecker:       29.790s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.155s

Time for Garbage Collector:       0.782s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     50MB (    47 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
