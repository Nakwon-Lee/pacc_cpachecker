scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nmggz2ru/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            653834 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  562003 (86%)
  Because of loop head:            90532 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1299 (0%)
  Times precision was empty:       30125 (5%)
  Times precision was {false}:     974 (0%)
  Times result was cached:         603505 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19230 (3%)
  Times result was 'false':        39427 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         939738
  BDD entailment checks:           402152
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          34
Number of abstraction locations:          249
Max number of predicates per location:    15
Avg number of predicates per location:    5
Total predicates per abstraction:         4410276
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 218.29
Number of irrelevant predicates:          1878654 (43%)
Number of preds handled by boolean abs:   78237 (2%)
  Total number of models for allsat:      30680
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.60

Time for post operator:                 56.437s
  Time for path formula creation:       54.226s
Time for strengthen operator:            4.127s
Time for prec operator:                197.439s
  Time for abstraction:                188.998s (Max:     1.129s, Count: 653834)
    Boolean abstraction:                19.843s
    Solving time:                       15.698s (Max:     0.049s)
    Model enumeration time:              2.205s
    Time for BDD construction:           0.736s (Max:     0.066s)
Time for merge operator:                 3.135s
Time for coverage check:                 0.549s
  Time for BDD entailment checks:        0.419s
Total time for SMT solver (w/o itp):    17.903s

Number of path formula cache hits:   5147945 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    39.374s

Total number of created targets for pointer analysis: 12639
   Number of created targets for uf: *(void)* is 26
   Number of created targets for uf: *unsigned_char is 82
   Number of created targets for uf: *(struct_list_head)* is 1276
   Number of created targets for uf: *(struct_firmware)* is 3381
   Number of created targets for uf: *(struct_usb_serial_port)* is 26


Number of BDD nodes:                               6156
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       42999 (count: 558929, min: 0, max: 906, avg: 0.08)
Time for BDD node cleanup:                             0.116s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.213s
  Time for transition matches:                         3.939s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      5299848 (count: 5299848, min: 1, max: 1, avg: 1.00) [1 x 5299848]

CPA algorithm statistics
------------------------
Number of iterations:            3240468
Max size of waitlist:            143
Average size of waitlist:        67
Number of computed successors:   3688674
Max successors for one state:    2
Number of times merged:          268793
Number of times stopped:         350347
Number of times breaked:         1299

Total time for CPA algorithm:       351.182s (Max:     5.472s)
  Time for choose from waitlist:      1.514s
  Time for precision adjustment:    221.581s
  Time for transfer relation:       102.239s
  Time for merge operator:            6.512s
  Time for stop operator:             4.188s
  Time for adding to reached set:     6.373s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1299
Avg. length of target path (in blocks):              174247 (count: 1299, min: 12, max: 229, avg: 134.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 102.831s
  Counterexample analysis:                            94.004s (Max:     0.206s, Calls: 1299)
    Refinement sat check:                             45.411s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.179s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.380s
  Precision update:                                    1.192s
  ARG update:                                          5.765s

Length of refined path (in blocks):                  143721 (count: 1299, min: 4, max: 207, avg: 110.64)
Number of affected states:                            31081 (count: 1299, min: 1, max: 159, avg: 23.93)
Length (states) of path with itp 'true':             111341 (count: 1299, min: 0, max: 180, avg: 85.71)
Length (states) of path with itp non-trivial itp:     31081 (count: 1299, min: 1, max: 159, avg: 23.93)
Length (states) of path with itp 'false':              1299 (count: 1299, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1454 (count: 1299, min: 0, max: 3, avg: 1.12)
Equal non-trivial interpolants along paths:           28328 (count: 1299, min: 0, max: 156, avg: 21.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1299
Number of successful refinements:     1299
Number of failed refinements:         0
Max. size of reached set before ref.: 40115
Max. size of reached set after ref.:  17384
Avg. size of reached set before ref.: 10839.18
Avg. size of reached set after ref.:  8330.15

Total time for CEGAR algorithm:     477.391s
Time for refinements:               118.821s
Average time for refinement:          0.091s
Max time for refinement:              0.477s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          1973
  Total lines:            2342
  Line coverage:          0.842
  Visited conditions:     322
  Total conditions:       410
  Condition coverage:     0.785

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             39674
  Number of reached locations:   1299 (41%)
    Avg states per location:     30
    Max states per location:     281 (at node N151)
  Number of reached functions:   62 (79%)
  Number of partitions:          39433
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N2783 (before lines 7650-7857), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.457s
  Time for loading CPAs:          1.025s
  Time for loading parser:        0.654s
  Time for CFA construction:      3.617s
    Time for parsing file(s):     0.952s
    Time for AST to CFA:          1.222s
    Time for CFA sanity check:    0.284s
    Time for post-processing:     0.952s
      Time for var class.:        0.438s
Time for Analysis:              477.392s
CPU time for analysis:          477.330s
Time for analyzing result:        0.031s
Total time for CPAchecker:      482.856s
Total CPU time for CPAchecker:  482.780s
Time for statistics:              0.592s

Time for Garbage Collector:      21.395s (in 700 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                637MB (   608 MiB) max;    361MB (   344 MiB) avg;    648MB (   618 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           692MB (   660 MiB) max;    503MB (   480 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8261MB (  7879 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
