scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4f5wjm94/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16846 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14716 (87%)
  Because of loop head:            2059 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       1943 (12%)
  Times precision was {false}:     168 (1%)
  Times result was cached:         13700 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1035 (6%)
  Times result was 'false':        316 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         16149
  BDD entailment checks:           2917
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          10
Number of abstraction locations:          126
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         32020
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 26.62
Number of irrelevant predicates:          3062 (10%)
Number of preds handled by boolean abs:   2058 (6%)
  Total number of models for allsat:      1052
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  5.671s
  Time for path formula creation:        5.512s
Time for strengthen operator:            0.254s
Time for prec operator:                  8.402s
  Time for abstraction:                  7.694s (Max:     0.035s, Count: 16846)
    Boolean abstraction:                 1.503s
    Solving time:                        1.278s (Max:     0.029s)
    Model enumeration time:              0.093s
    Time for BDD construction:           0.172s (Max:     0.012s)
Time for merge operator:                 0.431s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     1.372s

Number of path formula cache hits:   107308 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.951s

Total number of created targets for pointer analysis: 487
   Number of created targets for uf: *unsigned_char is 9
   Number of created targets for uf: *(struct_list_head)* is 281
   Number of created targets for uf: *(struct_firmware)* is 94


Number of BDD nodes:                               319
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2093 (count: 12028, min: 0, max: 217, avg: 0.17)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.611s
  Time for transition matches:                         0.301s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       123949 (count: 123949, min: 1, max: 1, avg: 1.00) [1 x 123949]

CPA algorithm statistics
------------------------
Number of iterations:            85130
Max size of waitlist:            64
Average size of waitlist:        27
Number of computed successors:   96323
Max successors for one state:    2
Number of times merged:          6616
Number of times stopped:         8891
Number of times breaked:         71

Total time for CPA algorithm:        21.958s (Max:     1.478s)
  Time for choose from waitlist:      0.156s
  Time for precision adjustment:      9.893s
  Time for transfer relation:         9.335s
  Time for merge operator:            0.737s
  Time for stop operator:             0.362s
  Time for adding to reached set:     0.471s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                2402 (count: 71, min: 8, max: 61, avg: 33.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.065s
  Counterexample analysis:                             1.405s (Max:     0.045s, Calls: 71)
    Refinement sat check:                              0.931s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.109s
  ARG update:                                          0.390s

Length of refined path (in blocks):                    2122 (count: 71, min: 4, max: 60, avg: 29.89)
Number of affected states:                             2002 (count: 71, min: 1, max: 59, avg: 28.20)
Length (states) of path with itp 'true':                 49 (count: 71, min: 0, max: 10, avg: 0.69)
Length (states) of path with itp non-trivial itp:      2002 (count: 71, min: 1, max: 59, avg: 28.20)
Length (states) of path with itp 'false':                71 (count: 71, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 71, min: 0, max: 2, avg: 0.08)
Equal non-trivial interpolants along paths:            1925 (count: 71, min: 0, max: 58, avg: 27.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     71
Number of failed refinements:         0
Max. size of reached set before ref.: 2966
Max. size of reached set after ref.:  296
Avg. size of reached set before ref.: 1238.48
Avg. size of reached set after ref.:  20.97

Total time for CEGAR algorithm:      24.325s
Time for refinements:                 2.348s
Average time for refinement:          0.033s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      0.346
  Visited lines:          816
  Total lines:            2342
  Line coverage:          0.348
  Visited conditions:     80
  Total conditions:       410
  Condition coverage:     0.195

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             673
  Number of reached locations:   231 (7%)
    Avg states per location:     2
    Max states per location:     9 (at node N300)
  Number of reached functions:   27 (35%)
  Number of partitions:          667
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2880 (before line 7730), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0
  Size of final wait list        64

Time for analysis setup:          5.921s
  Time for loading CPAs:          1.150s
  Time for loading parser:        0.677s
  Time for CFA construction:      3.920s
    Time for parsing file(s):     1.143s
    Time for AST to CFA:          1.302s
    Time for CFA sanity check:    0.300s
    Time for post-processing:     0.950s
      Time for var class.:        0.443s
Time for Analysis:               24.325s
CPU time for analysis:           24.320s
Total time for CPAchecker:       30.251s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.106s

Time for Garbage Collector:       0.632s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     46MB (    44 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
