scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_13azyyog/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            711216 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  622977 (88%)
  Because of loop head:            87700 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         539 (0%)
  Times precision was empty:       59064 (8%)
  Times precision was {false}:     1888 (0%)
  Times result was cached:         624498 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      25766 (4%)
  Times result was 'false':        26558 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1040137
  BDD entailment checks:           221907
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          26
Number of abstraction locations:          243
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         2916388
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 105.46
Number of irrelevant predicates:          995266 (34%)
Number of preds handled by boolean abs:   96028 (3%)
  Total number of models for allsat:      42980
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.67

Time for post operator:                 59.164s
  Time for path formula creation:       56.010s
Time for strengthen operator:            5.273s
Time for prec operator:                179.975s
  Time for abstraction:                170.761s (Max:     1.041s, Count: 711216)
    Boolean abstraction:                28.212s
    Solving time:                       23.961s (Max:     0.069s)
    Model enumeration time:              3.145s
    Time for BDD construction:           0.789s (Max:     0.044s)
Time for merge operator:                 4.318s
Time for coverage check:                 0.438s
  Time for BDD entailment checks:        0.329s
Total time for SMT solver (w/o itp):    27.106s

Number of path formula cache hits:   6081324 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    40.756s

Total number of created targets for pointer analysis: 16809
   Number of created targets for uf: *unsigned_char is 98
   Number of created targets for uf: *(struct_list_head)* is 11816
   Number of created targets for uf: *(struct_firmware)* is 1035


Number of BDD nodes:                               3317
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       52263 (count: 447685, min: 0, max: 1528, avg: 0.12)
Time for BDD node cleanup:                             0.110s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.243s
  Time for transition matches:                         4.325s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                      6432793 (count: 6432793, min: 1, max: 1, avg: 1.00) [1 x 6432793]

CPA algorithm statistics
------------------------
Number of iterations:            4351174
Max size of waitlist:            45
Average size of waitlist:        20
Number of computed successors:   4900150
Max successors for one state:    2
Number of times merged:          409115
Number of times stopped:         520676
Number of times breaked:         539

Total time for CPA algorithm:       359.324s (Max:     4.165s)
  Time for choose from waitlist:      1.711s
  Time for precision adjustment:    209.268s
  Time for transfer relation:       115.763s
  Time for merge operator:            9.120s
  Time for stop operator:             5.252s
  Time for adding to reached set:     7.007s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   539
Avg. length of target path (in blocks):               28407 (count: 539, min: 8, max: 129, avg: 52.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.801s
  Counterexample analysis:                            11.812s (Max:     0.075s, Calls: 539)
    Refinement sat check:                              7.098s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.186s
  Precision update:                                    0.412s
  ARG update:                                          7.119s

Length of refined path (in blocks):                   19006 (count: 539, min: 4, max: 98, avg: 35.26)
Number of affected states:                            10573 (count: 539, min: 1, max: 97, avg: 19.62)
Length (states) of path with itp 'true':               7894 (count: 539, min: 0, max: 89, avg: 14.65)
Length (states) of path with itp non-trivial itp:     10573 (count: 539, min: 1, max: 97, avg: 19.62)
Length (states) of path with itp 'false':               539 (count: 539, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         299 (count: 539, min: 0, max: 3, avg: 0.55)
Equal non-trivial interpolants along paths:            9735 (count: 539, min: 0, max: 95, avg: 18.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                539
Number of successful refinements:     539
Number of failed refinements:         0
Max. size of reached set before ref.: 25730
Max. size of reached set after ref.:  20291
Avg. size of reached set before ref.: 12122.73
Avg. size of reached set after ref.:  4070.21

Total time for CEGAR algorithm:     385.298s
Time for refinements:                24.508s
Average time for refinement:          0.045s
Max time for refinement:              0.145s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          1966
  Total lines:            2342
  Line coverage:          0.839
  Visited conditions:     320
  Total conditions:       410
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             12607
  Number of reached locations:   1291 (41%)
    Avg states per location:     9
    Max states per location:     89 (at node N151)
  Number of reached functions:   62 (79%)
  Number of partitions:          12518
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2932 (before line 7795), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.434s
  Time for loading CPAs:          0.972s
  Time for loading parser:        0.706s
  Time for CFA construction:      3.599s
    Time for parsing file(s):     1.034s
    Time for AST to CFA:          1.279s
    Time for CFA sanity check:    0.273s
    Time for post-processing:     0.808s
      Time for var class.:        0.419s
Time for Analysis:              385.299s
CPU time for analysis:          385.260s
Time for analyzing result:        0.011s
Total time for CPAchecker:      390.738s
Total CPU time for CPAchecker:  390.690s
Time for statistics:              0.357s

Time for Garbage Collector:      28.808s (in 838 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                600MB (   572 MiB) max;    285MB (   272 MiB) avg;    613MB (   585 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           744MB (   709 MiB) max;    437MB (   417 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8493MB (  8100 MiB) max;   8202MB (  7822 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
