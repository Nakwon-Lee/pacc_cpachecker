scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_57itv1qk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            28330 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25136 (89%)
  Because of loop head:            3141 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         53 (0%)
  Times precision was empty:       12814 (45%)
  Times precision was {false}:     382 (1%)
  Times result was cached:         14625 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      509 (2%)
  Times result was 'false':        161 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         34309
  BDD entailment checks:           5875
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          4
Number of abstraction locations:          110
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         30388
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 34.11
Number of irrelevant predicates:          19143 (63%)
Number of preds handled by boolean abs:   662 (2%)
  Total number of models for allsat:      507
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.401s
  Time for path formula creation:        5.020s
Time for strengthen operator:            0.391s
Time for prec operator:                  6.958s
  Time for abstraction:                  6.027s (Max:     0.034s, Count: 28330)
    Boolean abstraction:                 0.902s
    Solving time:                        0.954s (Max:     0.015s)
    Model enumeration time:              0.049s
    Time for BDD construction:           0.086s (Max:     0.012s)
Time for merge operator:                 0.300s
Time for coverage check:                 0.088s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):     1.003s

Number of path formula cache hits:   256669 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.057s

Total number of created targets for pointer analysis: 170
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *unsigned_char is 7
   Number of created targets for uf: *(struct_list_head)* is 27
   Number of created targets for uf: *(struct_firmware)* is 25
   Number of created targets for uf: *(struct_usb_serial_port)* is 3


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1020 (count: 23671, min: 0, max: 52, avg: 0.04)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.811s
  Time for transition matches:                         0.356s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       244432 (count: 244432, min: 1, max: 1, avg: 1.00) [1 x 244432]

CPA algorithm statistics
------------------------
Number of iterations:            150667
Max size of waitlist:            86
Average size of waitlist:        44
Number of computed successors:   171492
Max successors for one state:    2
Number of times merged:          14217
Number of times stopped:         17548
Number of times breaked:         53

Total time for CPA algorithm:        23.101s (Max:     1.345s)
  Time for choose from waitlist:      0.247s
  Time for precision adjustment:      9.046s
  Time for transfer relation:        10.432s
  Time for merge operator:            0.806s
  Time for stop operator:             0.547s
  Time for adding to reached set:     0.598s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   53
Avg. length of target path (in blocks):                 896 (count: 53, min: 8, max: 22, avg: 16.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.265s
  Counterexample analysis:                             0.516s (Max:     0.020s, Calls: 53)
    Refinement sat check:                              0.326s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.058s
  ARG update:                                          0.610s

Length of refined path (in blocks):                     838 (count: 53, min: 7, max: 21, avg: 15.81)
Number of affected states:                              777 (count: 53, min: 1, max: 20, avg: 14.66)
Length (states) of path with itp 'true':                  8 (count: 53, min: 0, max: 8, avg: 0.15)
Length (states) of path with itp non-trivial itp:       777 (count: 53, min: 1, max: 20, avg: 14.66)
Length (states) of path with itp 'false':                53 (count: 53, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 53, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             724 (count: 53, min: 0, max: 19, avg: 13.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                53
Number of successful refinements:     53
Number of failed refinements:         0
Max. size of reached set before ref.: 4091
Max. size of reached set after ref.:  1969
Avg. size of reached set before ref.: 2894.17
Avg. size of reached set after ref.:  40.09

Total time for CEGAR algorithm:      24.657s
Time for refinements:                 1.539s
Average time for refinement:          0.029s
Max time for refinement:              0.081s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          1767
  Total lines:            2342
  Line coverage:          0.754
  Visited conditions:     290
  Total conditions:       410
  Condition coverage:     0.707

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             2518
  Number of reached locations:   1102 (35%)
    Avg states per location:     2
    Max states per location:     31 (at node N198)
  Number of reached functions:   62 (79%)
  Number of partitions:          2506
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2783 (before lines 7650-7857), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0
  Size of final wait list        57

Time for analysis setup:          5.612s
  Time for loading CPAs:          0.999s
  Time for loading parser:        0.715s
  Time for CFA construction:      3.764s
    Time for parsing file(s):     1.054s
    Time for AST to CFA:          1.355s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     0.870s
      Time for var class.:        0.459s
Time for Analysis:               24.657s
CPU time for analysis:           24.660s
Total time for CPAchecker:       30.273s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.156s

Time for Garbage Collector:       0.738s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     48MB (    45 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
