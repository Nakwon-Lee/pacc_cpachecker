scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6b5y7h7g/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17661 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15878 (90%)
  Because of loop head:            1720 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       10760 (61%)
  Times precision was {false}:     275 (2%)
  Times result was cached:         5960 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      666 (4%)
  Times result was 'false':        267 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         19129
  BDD entailment checks:           3685
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          10
Number of abstraction locations:          43
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         15182
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 16.13
Number of irrelevant predicates:          6605 (44%)
Number of preds handled by boolean abs:   1182 (8%)
  Total number of models for allsat:      701
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                  8.100s
  Time for path formula creation:        7.806s
Time for strengthen operator:            0.281s
Time for prec operator:                  5.976s
  Time for abstraction:                  5.207s (Max:     0.029s, Count: 17661)
    Boolean abstraction:                 1.033s
    Solving time:                        0.962s (Max:     0.014s)
    Model enumeration time:              0.091s
    Time for BDD construction:           0.120s (Max:     0.013s)
Time for merge operator:                 0.417s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     1.053s

Number of path formula cache hits:   113784 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.027s

Total number of created targets for pointer analysis: 1560
   Number of created targets for uf: *(void)* is 23
   Number of created targets for uf: *unsigned_char is 68
   Number of created targets for uf: *(struct_list_head)* is 817
   Number of created targets for uf: *(struct_firmware)* is 22
   Number of created targets for uf: *(struct_usb_serial_port)* is 17


Number of BDD nodes:                               279
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1323 (count: 19889, min: 0, max: 190, avg: 0.07)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.624s
  Time for transition matches:                         0.275s
  Time for transition assertions:                      0.013s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       144745 (count: 144745, min: 1, max: 1, avg: 1.00) [1 x 144745]

CPA algorithm statistics
------------------------
Number of iterations:            82126
Max size of waitlist:            113
Average size of waitlist:        53
Number of computed successors:   95146
Max successors for one state:    2
Number of times merged:          7722
Number of times stopped:         9570
Number of times breaked:         63

Total time for CPA algorithm:        22.466s (Max:     1.407s)
  Time for choose from waitlist:      0.206s
  Time for precision adjustment:      7.621s
  Time for transfer relation:        11.851s
  Time for merge operator:            0.835s
  Time for stop operator:             0.409s
  Time for adding to reached set:     0.522s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                1618 (count: 63, min: 5, max: 51, avg: 25.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.936s
  Counterexample analysis:                             1.300s (Max:     0.050s, Calls: 63)
    Refinement sat check:                              0.876s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.082s
  ARG update:                                          0.405s

Length of refined path (in blocks):                     831 (count: 63, min: 4, max: 22, avg: 13.19)
Number of affected states:                              540 (count: 63, min: 1, max: 21, avg: 8.57)
Length (states) of path with itp 'true':                228 (count: 63, min: 0, max: 17, avg: 3.62)
Length (states) of path with itp non-trivial itp:       540 (count: 63, min: 1, max: 21, avg: 8.57)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 63, min: 0, max: 2, avg: 0.10)
Equal non-trivial interpolants along paths:             471 (count: 63, min: 0, max: 20, avg: 7.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 3316
Max. size of reached set after ref.:  2610
Avg. size of reached set before ref.: 1943.49
Avg. size of reached set after ref.:  628.16

Total time for CEGAR algorithm:      24.693s
Time for refinements:                 2.186s
Average time for refinement:          0.034s
Max time for refinement:              0.075s

Code Coverage
-----------------------------
  Function coverage:      0.526
  Visited lines:          1284
  Total lines:            2342
  Line coverage:          0.548
  Visited conditions:     176
  Total conditions:       410
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             2444
  Number of reached locations:   564 (18%)
    Avg states per location:     4
    Max states per location:     41 (at node N151)
  Number of reached functions:   41 (53%)
  Number of partitions:          2418
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N345 (before line 4449), Function whiteheat_firmware_download called from node N2878, stack depth 2 [76f518a9], stack [main, whiteheat_firmware_download]])
  Number of target states:       0
  Size of final wait list        63

Time for analysis setup:          5.553s
  Time for loading CPAs:          0.988s
  Time for loading parser:        0.727s
  Time for CFA construction:      3.696s
    Time for parsing file(s):     1.022s
    Time for AST to CFA:          1.300s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.870s
      Time for var class.:        0.448s
Time for Analysis:               24.693s
CPU time for analysis:           24.690s
Total time for CPAchecker:       30.249s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.184s

Time for Garbage Collector:       0.784s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     50MB (    48 MiB) avg;     90MB (    86 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
