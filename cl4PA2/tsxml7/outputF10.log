scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_12ycul8a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            595169 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  514957 (87%)
  Because of loop head:            79005 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1207 (0%)
  Times precision was empty:       27213 (5%)
  Times precision was {false}:     337 (0%)
  Times result was cached:         553041 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14578 (2%)
  Times result was 'false':        19827 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         739047
  BDD entailment checks:           229235
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          43
Number of abstraction locations:          245
Max number of predicates per location:    11
Avg number of predicates per location:    3
Total predicates per abstraction:         3298152
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 221.13
Number of irrelevant predicates:          1194446 (36%)
Number of preds handled by boolean abs:   59249 (2%)
  Total number of models for allsat:      27518
  Max number of models for allsat:        24
  Avg number of models for allsat:        1.89

Time for post operator:                 43.216s
  Time for path formula creation:       41.202s
Time for strengthen operator:            3.545s
Time for prec operator:                177.707s
  Time for abstraction:                169.636s (Max:     1.046s, Count: 595169)
    Boolean abstraction:                16.081s
    Solving time:                       11.904s (Max:     0.017s)
    Model enumeration time:              1.948s
    Time for BDD construction:           0.584s (Max:     0.011s)
Time for merge operator:                 3.004s
Time for coverage check:                 0.429s
  Time for BDD entailment checks:        0.338s
Total time for SMT solver (w/o itp):    13.852s

Number of path formula cache hits:   4566703 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    28.639s

Total number of created targets for pointer analysis: 9804
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *(struct_list_head)* is 5881
   Number of created targets for uf: *(struct_firmware)* is 1519


Number of BDD nodes:                               4171
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       32549 (count: 348355, min: 0, max: 1893, avg: 0.09)
Time for BDD node cleanup:                             0.089s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.840s
  Time for transition matches:                         3.177s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                      4523036 (count: 4523036, min: 1, max: 1, avg: 1.00) [1 x 4523036]

CPA algorithm statistics
------------------------
Number of iterations:            3112951
Max size of waitlist:            149
Average size of waitlist:        99
Number of computed successors:   3510130
Max successors for one state:    2
Number of times merged:          254906
Number of times stopped:         337478
Number of times breaked:         1207

Total time for CPA algorithm:       306.886s (Max:     2.068s)
  Time for choose from waitlist:      1.400s
  Time for precision adjustment:    197.860s
  Time for transfer relation:        82.999s
  Time for merge operator:            6.095s
  Time for stop operator:             4.448s
  Time for adding to reached set:     5.755s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1207
Avg. length of target path (in blocks):              208755 (count: 1207, min: 8, max: 214, avg: 172.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 106.268s
  Counterexample analysis:                            98.834s (Max:     0.212s, Calls: 1207)
    Refinement sat check:                             45.432s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.108s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.249s
  Precision update:                                    0.727s
  ARG update:                                          5.139s

Length of refined path (in blocks):                  153235 (count: 1207, min: 4, max: 213, avg: 126.96)
Number of affected states:                            16538 (count: 1207, min: 1, max: 212, avg: 13.70)
Length (states) of path with itp 'true':             135490 (count: 1207, min: 0, max: 191, avg: 112.25)
Length (states) of path with itp non-trivial itp:     16538 (count: 1207, min: 1, max: 212, avg: 13.70)
Length (states) of path with itp 'false':              1207 (count: 1207, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          58 (count: 1207, min: 0, max: 10, avg: 0.05)
Equal non-trivial interpolants along paths:           15273 (count: 1207, min: 0, max: 211, avg: 12.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1207
Number of successful refinements:     1207
Number of failed refinements:         0
Max. size of reached set before ref.: 30543
Max. size of reached set after ref.:  28527
Avg. size of reached set before ref.: 7369.16
Avg. size of reached set after ref.:  4782.24

Total time for CEGAR algorithm:     425.883s
Time for refinements:               115.281s
Average time for refinement:          0.095s
Max time for refinement:              0.264s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          1973
  Total lines:            2342
  Line coverage:          0.842
  Visited conditions:     322
  Total conditions:       410
  Condition coverage:     0.785

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             30413
  Number of reached locations:   1299 (41%)
    Avg states per location:     23
    Max states per location:     342 (at node N151)
  Number of reached functions:   62 (79%)
  Number of partitions:          30224
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N2880 (before line 7730), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.983s
  Time for loading CPAs:          1.175s
  Time for loading parser:        0.681s
  Time for CFA construction:      3.983s
    Time for parsing file(s):     1.040s
    Time for AST to CFA:          1.400s
    Time for CFA sanity check:    0.289s
    Time for post-processing:     0.998s
      Time for var class.:        0.566s
Time for Analysis:              425.884s
CPU time for analysis:          425.820s
Time for analyzing result:        0.024s
Total time for CPAchecker:      431.872s
Total CPU time for CPAchecker:  431.790s
Time for statistics:              0.494s

Time for Garbage Collector:      13.101s (in 752 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                362MB (   346 MiB) max;    226MB (   215 MiB) avg;    384MB (   367 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           476MB (   454 MiB) max;    343MB (   327 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8220MB (  7839 MiB) max;   8187MB (  7807 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
