scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__cesiwaq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undefined_pointer to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19430 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17426 (90%)
  Because of loop head:            1934 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70 (0%)
  Times precision was empty:       12282 (63%)
  Times precision was {false}:     289 (1%)
  Times result was cached:         6045 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      814 (4%)
  Times result was 'false':        366 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         19011
  BDD entailment checks:           4277
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          10
Number of abstraction locations:          42
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         17591
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 15.95
Number of irrelevant predicates:          8206 (47%)
Number of preds handled by boolean abs:   1534 (9%)
  Total number of models for allsat:      871
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  8.593s
  Time for path formula creation:        8.338s
Time for strengthen operator:            0.304s
Time for prec operator:                  5.563s
  Time for abstraction:                  5.050s (Max:     0.036s, Count: 19430)
    Boolean abstraction:                 1.162s
    Solving time:                        1.058s (Max:     0.014s)
    Model enumeration time:              0.097s
    Time for BDD construction:           0.120s (Max:     0.012s)
Time for merge operator:                 0.481s
Time for coverage check:                 0.136s
  Time for BDD entailment checks:        0.107s
Total time for SMT solver (w/o itp):     1.155s

Number of path formula cache hits:   111385 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.755s

Total number of created targets for pointer analysis: 2069
   Number of created targets for uf: *(void)* is 28
   Number of created targets for uf: *unsigned_char is 73
   Number of created targets for uf: *(struct_list_head)* is 1123
   Number of created targets for uf: *(struct_firmware)* is 304
   Number of created targets for uf: *(struct_usb_serial_port)* is 23


Number of BDD nodes:                               323
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1826 (count: 23007, min: 0, max: 180, avg: 0.08)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.634s
  Time for transition matches:                         0.280s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                       151790 (count: 151790, min: 1, max: 1, avg: 1.00) [1 x 151790]

CPA algorithm statistics
------------------------
Number of iterations:            84976
Max size of waitlist:            119
Average size of waitlist:        57
Number of computed successors:   98280
Max successors for one state:    2
Number of times merged:          7367
Number of times stopped:         9276
Number of times breaked:         70

Total time for CPA algorithm:        22.361s (Max:     1.449s)
  Time for choose from waitlist:      0.204s
  Time for precision adjustment:      6.845s
  Time for transfer relation:        12.297s
  Time for merge operator:            0.898s
  Time for stop operator:             0.464s
  Time for adding to reached set:     0.517s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   70
Avg. length of target path (in blocks):                2005 (count: 70, min: 5, max: 54, avg: 28.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.072s
  Counterexample analysis:                             1.466s (Max:     0.045s, Calls: 70)
    Refinement sat check:                              0.992s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.095s
  ARG update:                                          0.388s

Length of refined path (in blocks):                     954 (count: 70, min: 4, max: 30, avg: 13.63)
Number of affected states:                              539 (count: 70, min: 1, max: 21, avg: 7.70)
Length (states) of path with itp 'true':                345 (count: 70, min: 0, max: 27, avg: 4.93)
Length (states) of path with itp non-trivial itp:       539 (count: 70, min: 1, max: 21, avg: 7.70)
Length (states) of path with itp 'false':                70 (count: 70, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 70, min: 0, max: 2, avg: 0.09)
Equal non-trivial interpolants along paths:             463 (count: 70, min: 0, max: 20, avg: 6.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                70
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 3193
Max. size of reached set after ref.:  2364
Avg. size of reached set before ref.: 1958.01
Avg. size of reached set after ref.:  729.91

Total time for CEGAR algorithm:      24.772s
Time for refinements:                 2.358s
Average time for refinement:          0.033s
Max time for refinement:              0.078s

Code Coverage
-----------------------------
  Function coverage:      0.564
  Visited lines:          1346
  Total lines:            2342
  Line coverage:          0.575
  Visited conditions:     182
  Total conditions:       410
  Condition coverage:     0.444

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             2672
  Number of reached locations:   623 (20%)
    Avg states per location:     4
    Max states per location:     54 (at node N198)
  Number of reached functions:   44 (56%)
  Number of partitions:          2649
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2880 (before line 7730), Function main called from node N2754, stack depth 1 [2a9bc08f], stack [main]])
  Number of target states:       0
  Size of final wait list        96

Time for analysis setup:          5.514s
  Time for loading CPAs:          0.910s
  Time for loading parser:        0.729s
  Time for CFA construction:      3.730s
    Time for parsing file(s):     1.039s
    Time for AST to CFA:          1.282s
    Time for CFA sanity check:    0.255s
    Time for post-processing:     0.932s
      Time for var class.:        0.476s
Time for Analysis:               24.772s
CPU time for analysis:           24.760s
Total time for CPAchecker:       30.290s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.141s

Time for Garbage Collector:       0.761s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 89MB (    85 MiB) max;     52MB (    49 MiB) avg;     95MB (    91 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
