scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-atm-eni.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yxgv2t2d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5204: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5206: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5208: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5202: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7348: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7354: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7360: Dead code detected: tmp___4 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7345: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7405: Dead code detected: tmp___6 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7411: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7417: Dead code detected: tmp___8 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7402: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7465: Dead code detected: tmp___12 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7471: Dead code detected: tmp___13 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7477: Dead code detected: tmp___14 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7462: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7507: Dead code detected: tmp___16 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7513: Dead code detected: tmp___17 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7519: Dead code detected: tmp___18 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7504: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8582: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8588: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8594: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8579: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 8647: Dead code detected: tmp___6 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8653: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8659: Dead code detected: tmp___8 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8644: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 8689: Dead code detected: tmp___10 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8695: Dead code detected: tmp___11 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8701: Dead code detected: tmp___12 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8686: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8882: Dead code detected: __ptr = (u8 volatile *)(& eni_dev->events); (CFACreationUtils.addEdgeToCFA, INFO)

line 8885: Dead code detected: __ptr___0 = (u16 volatile *)(& eni_dev->events); (CFACreationUtils.addEdgeToCFA, INFO)

line 8892: Dead code detected: __ptr___2 = (u64 volatile *)(& eni_dev->events); (CFACreationUtils.addEdgeToCFA, INFO)

line 8880: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7149: Function pointer *(vcc->push) with type void (*)(struct atm_vcc *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8119: Function pointer *(vcc->pop) with type void (*)(struct atm_vcc *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5652: Function pointer *(ops__1->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5692: Function pointer *(ops__1->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5523-5524: Function pointer *(ops__1->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5560: Function pointer *(ops__1->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8843: Function pointer *(dev->phy->interrupt) with type void (*)(struct atm_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10234: Function pointer *(vcc->pop) with type void (*)(struct atm_vcc *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10220: Function pointer *(vcc->pop) with type void (*)(struct atm_vcc *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10202: Function pointer *(vcc->pop) with type void (*)(struct atm_vcc *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9734: Function pointer *(dev->phy->start) with type int (*)(struct atm_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atm_pcr_goal to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17306 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13640 (79%)
  Because of loop head:            3532 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         134 (1%)
  Times precision was empty:       1118 (6%)
  Times precision was {false}:     205 (1%)
  Times result was cached:         15485 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      498 (3%)
  Times result was 'false':        265 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         13034
  BDD entailment checks:           4038
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          7
Number of abstraction locations:          113
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         23998
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 34.14
Number of irrelevant predicates:          8382 (35%)
Number of preds handled by boolean abs:   749 (3%)
  Total number of models for allsat:      775
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.56

Time for post operator:                  4.255s
  Time for path formula creation:        4.127s
Time for strengthen operator:            0.294s
Time for prec operator:                  6.949s
  Time for abstraction:                  6.295s (Max:     0.041s, Count: 17306)
    Boolean abstraction:                 1.457s
    Solving time:                        1.314s (Max:     0.026s)
    Model enumeration time:              0.241s
    Time for BDD construction:           0.097s (Max:     0.013s)
Time for merge operator:                 0.218s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     1.555s

Number of path formula cache hits:   113668 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.511s

Total number of created targets for pointer analysis: 2770
   Number of created targets for uf: *(void)* is 56
   Number of created targets for uf: *(struct_eni_tx)* is 36
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(char)* is 1341
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_atm_vcc)*],_VarArgs:_false)* is 37
   Number of created targets for uf: *(struct_atm_vcc)* is 4
   Number of created targets for uf: *unsigned_long_int is 9


Number of BDD nodes:                               242
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1042 (count: 9229, min: 0, max: 98, avg: 0.11)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.478s
Automaton transfers with branching:                0
Automaton transfer successors:                       116517 (count: 116517, min: 1, max: 1, avg: 1.00) [1 x 116517]

CPA algorithm statistics
------------------------
Number of iterations:            71218
Max size of waitlist:            25
Average size of waitlist:        16
Number of computed successors:   79565
Max successors for one state:    2
Number of times merged:          4498
Number of times stopped:         7121
Number of times breaked:         134

Total time for CPA algorithm:        17.485s (Max:     0.667s)
  Time for choose from waitlist:      0.150s
  Time for precision adjustment:      7.973s
  Time for transfer relation:         7.386s
  Time for merge operator:            0.565s
  Time for stop operator:             0.369s
  Time for adding to reached set:     0.332s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   134
Avg. length of target path (in blocks):                7851 (count: 134, min: 5, max: 100, avg: 58.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.511s
  Counterexample analysis:                             4.777s (Max:     0.079s, Calls: 134)
    Refinement sat check:                              3.395s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.122s
  ARG update:                                          0.314s

Length of refined path (in blocks):                    4704 (count: 133, min: 4, max: 90, avg: 35.37)
Number of affected states:                             1507 (count: 133, min: 2, max: 89, avg: 11.33)
Length (states) of path with itp 'true':               3064 (count: 133, min: 0, max: 59, avg: 23.04)
Length (states) of path with itp non-trivial itp:      1507 (count: 133, min: 2, max: 89, avg: 11.33)
Length (states) of path with itp 'false':               133 (count: 133, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 133, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1374 (count: 133, min: 1, max: 88, avg: 10.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                134
Number of successful refinements:     133
Number of failed refinements:         0
Max. size of reached set before ref.: 3067
Max. size of reached set after ref.:  2461
Avg. size of reached set before ref.: 1251.41
Avg. size of reached set after ref.:  718.11

Total time for CEGAR algorithm:      23.615s
Time for refinements:                 5.994s
Average time for refinement:          0.044s
Max time for refinement:              0.097s

Code Coverage
-----------------------------
  Function coverage:      0.342
  Visited lines:          1323
  Total lines:            3651
  Line coverage:          0.362
  Visited conditions:     112
  Total conditions:       936
  Condition coverage:     0.120

CPAchecker general statistics
-----------------------------
Number of program locations:     4942
Number of CFA edges:             5616
Number of relevant variables:    704
Number of functions:             111
Number of loops:                 50
Size of reached set:             1201
  Number of reached locations:   414 (8%)
    Avg states per location:     2
    Max states per location:     21 (at node N32)
  Number of reached functions:   38 (34%)
  Number of partitions:          1187
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4559 (before line 10835), Function main called from node N4384, stack depth 1 [74170687], stack [main]])
  Number of target states:       1
  Size of final wait list        19

Time for analysis setup:          6.656s
  Time for loading CPAs:          1.045s
  Time for loading parser:        0.693s
  Time for CFA construction:      4.741s
    Time for parsing file(s):     1.114s
    Time for AST to CFA:          1.935s
    Time for CFA sanity check:    0.354s
    Time for post-processing:     1.149s
      Time for var class.:        0.601s
Time for Analysis:               23.615s
CPU time for analysis:           23.620s
Total time for CPAchecker:       30.275s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.114s

Time for Garbage Collector:       0.603s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     49MB (    47 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
