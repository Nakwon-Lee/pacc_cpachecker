scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-atm-eni.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6fqpffes/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5204: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5206: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5208: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5202: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7348: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7354: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7360: Dead code detected: tmp___4 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7345: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 7405: Dead code detected: tmp___6 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7411: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7417: Dead code detected: tmp___8 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7402: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 7465: Dead code detected: tmp___12 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7471: Dead code detected: tmp___13 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7477: Dead code detected: tmp___14 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7462: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 7507: Dead code detected: tmp___16 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7513: Dead code detected: tmp___17 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7519: Dead code detected: tmp___18 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7504: Dead code detected: Goto: switch_default___2 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8582: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8588: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8594: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8579: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 8647: Dead code detected: tmp___6 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8653: Dead code detected: tmp___7 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8659: Dead code detected: tmp___8 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8644: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 8689: Dead code detected: tmp___10 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8695: Dead code detected: tmp___11 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8701: Dead code detected: tmp___12 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 8686: Dead code detected: Goto: switch_default___1 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8882: Dead code detected: __ptr = (u8 volatile *)(& eni_dev->events); (CFACreationUtils.addEdgeToCFA, INFO)

line 8885: Dead code detected: __ptr___0 = (u16 volatile *)(& eni_dev->events); (CFACreationUtils.addEdgeToCFA, INFO)

line 8892: Dead code detected: __ptr___2 = (u64 volatile *)(& eni_dev->events); (CFACreationUtils.addEdgeToCFA, INFO)

line 8880: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7149: Function pointer *(vcc->push) with type void (*)(struct atm_vcc *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8119: Function pointer *(vcc->pop) with type void (*)(struct atm_vcc *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5652: Function pointer *(ops__1->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5692: Function pointer *(ops__1->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5523-5524: Function pointer *(ops__1->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5560: Function pointer *(ops__1->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8843: Function pointer *(dev->phy->interrupt) with type void (*)(struct atm_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10234: Function pointer *(vcc->pop) with type void (*)(struct atm_vcc *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10220: Function pointer *(vcc->pop) with type void (*)(struct atm_vcc *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10202: Function pointer *(vcc->pop) with type void (*)(struct atm_vcc *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9734: Function pointer *(dev->phy->start) with type int (*)(struct atm_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8843: Ignoring function call through function pointer *(dev->phy->interrupt): (*(dev->phy->interrupt))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10234: Ignoring function call through function pointer *(vcc->pop): (*(vcc->pop))(vcc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10220: Ignoring function call through function pointer *(vcc->pop): (*(vcc->pop))(vcc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10202: Ignoring function call through function pointer *(vcc->pop): (*(vcc->pop))(vcc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atm_dev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5652: Ignoring function call through function pointer *(ops__1->alloc_coherent): memory = (*(ops__1->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5692: Ignoring function call through function pointer *(ops__1->free_coherent): (*(ops__1->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 10172: Unsupported feature (recursion): tmp___5 = eni_ioctl(dev, cmd, arg); (line was originally pointer call(eni_ioctl) tmp___5 = (*((dev->phy)->ioctl))(dev, cmd, arg);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            4380 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3915 (89%)
  Because of loop head:            437 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (1%)
  Times precision was empty:       2411 (55%)
  Times precision was {false}:     55 (1%)
  Times result was cached:         1789 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      125 (3%)
  Times result was 'false':        105 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2694
  BDD entailment checks:           998
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          5
Number of abstraction locations:          69
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2413
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 13.41
Number of irrelevant predicates:          693 (29%)
Number of preds handled by boolean abs:   148 (6%)
  Total number of models for allsat:      141
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.13

Time for post operator:                  1.422s
  Time for path formula creation:        1.356s
Time for strengthen operator:            0.127s
Time for prec operator:                  1.617s
  Time for abstraction:                  1.336s (Max:     0.045s, Count: 4380)
    Boolean abstraction:                 0.217s
    Solving time:                        0.146s (Max:     0.009s)
    Model enumeration time:              0.009s
    Time for BDD construction:           0.063s (Max:     0.015s)
Time for merge operator:                 0.071s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.155s

Number of path formula cache hits:   24777 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.197s

Total number of created targets for pointer analysis: 190
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *(struct_eni_tx)* is 6
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *(char)* is 61
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_atm_vcc)*],_VarArgs:_false)* is 5
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *(struct_atm_vcc)* is 5
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         248 (count: 4475, min: 0, max: 68, avg: 0.06)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.169s
Automaton transfers with branching:                0
Automaton transfer successors:                        23155 (count: 23155, min: 1, max: 1, avg: 1.00) [1 x 23155]

CPA algorithm statistics
------------------------
Number of iterations:            15857
Max size of waitlist:            23
Average size of waitlist:        12
Number of computed successors:   17911
Max successors for one state:    2
Number of times merged:          848
Number of times stopped:         1584
Number of times breaked:         28

Total time for CPA algorithm:         5.673s (Max:     0.665s)
  Time for choose from waitlist:      0.072s
  Time for precision adjustment:      2.093s
  Time for transfer relation:         2.635s
  Time for merge operator:            0.151s
  Time for stop operator:             0.203s
  Time for adding to reached set:     0.173s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 586 (count: 28, min: 5, max: 33, avg: 20.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.719s
  Counterexample analysis:                             0.526s (Max:     0.029s, Calls: 28)
    Refinement sat check:                              0.380s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.022s
  ARG update:                                          0.102s

Length of refined path (in blocks):                     505 (count: 28, min: 4, max: 32, avg: 18.04)
Number of affected states:                              437 (count: 28, min: 3, max: 31, avg: 15.61)
Length (states) of path with itp 'true':                 40 (count: 28, min: 0, max: 8, avg: 1.43)
Length (states) of path with itp non-trivial itp:       437 (count: 28, min: 3, max: 31, avg: 15.61)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             409 (count: 28, min: 2, max: 30, avg: 14.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 921
Max. size of reached set after ref.:  559
Avg. size of reached set before ref.: 650.39
Avg. size of reached set after ref.:  102.29

Total time for CEGAR algorithm:       6.495s
Time for refinements:                 0.811s
Average time for refinement:          0.028s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          1407
  Total lines:            3651
  Line coverage:          0.385
  Visited conditions:     192
  Total conditions:       936
  Condition coverage:     0.205

CPAchecker general statistics
-----------------------------
Number of program locations:     4942
Number of CFA edges:             5616
Number of relevant variables:    704
Number of functions:             111
Number of loops:                 50
Size of reached set:             876
  Number of reached locations:   614 (12%)
    Avg states per location:     1
    Max states per location:     10 (at node N3720)
  Number of reached functions:   54 (49%)
  Number of partitions:          875
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4559 (before line 10835), Function main called from node N4384, stack depth 1 [2b6fcb9f], stack [main]])
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          6.360s
  Time for loading CPAs:          0.978s
  Time for loading parser:        0.646s
  Time for CFA construction:      4.564s
    Time for parsing file(s):     1.225s
    Time for AST to CFA:          1.774s
    Time for CFA sanity check:    0.276s
    Time for post-processing:     1.066s
      Time for var class.:        0.538s
Time for Analysis:                6.495s
CPU time for analysis:            6.490s
Total time for CPAchecker:       12.859s
Total CPU time for CPAchecker:   12.830s
Time for statistics:              0.111s

Time for Garbage Collector:       0.259s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     42MB (    40 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     29MB (    28 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8056MB (  7683 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
