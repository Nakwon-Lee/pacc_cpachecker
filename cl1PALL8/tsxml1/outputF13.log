scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-staging-et131x-et131x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_obhkljac/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6891: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6931: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8264: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8189-8190: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8226: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6891: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6931: Ignoring function call through function pointer *(ops->free_coherent): (*(ops->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            286591 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            260576 (91%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26015 (9%)
  Times precision was empty:       156120 (54%)
  Times precision was {false}:     435 (0%)
  Times result was cached:         127422 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2614 (1%)
  Times result was 'false':        26060 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         1204369
  BDD entailment checks:           146373
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       626
Number of predicates discovered:          2
Number of abstraction locations:          15
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         130471
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 42.79
Number of irrelevant predicates:          26101 (20%)
Number of preds handled by boolean abs:   2614 (2%)
  Total number of models for allsat:      2611
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                184.712s
  Time for path formula creation:      154.756s
Time for strengthen operator:           12.162s
Time for prec operator:                256.667s
  Time for abstraction:                244.777s (Max:    22.019s, Count: 286591)
    Boolean abstraction:                49.664s
    Solving time:                       49.225s (Max:     4.235s)
    Model enumeration time:              2.686s
    Time for BDD construction:           0.137s (Max:     0.009s)
Time for merge operator:                12.922s
Time for coverage check:                 0.323s
  Time for BDD entailment checks:        0.202s
Total time for SMT solver (w/o itp):    51.911s

Number of path formula cache hits:   10210791 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    55.420s

Total number of created targets for pointer analysis: 302919
   Number of created targets for uf: *unsigned_short_int is 6321
   Number of created targets for uf: *(void)* is 41
   Number of created targets for uf: *(struct_tcb)* is 5
   Number of created targets for uf: *unsigned_char is 16201
   Number of created targets for uf: *(struct_list_head)* is 5
   Number of created targets for uf: *unsigned_long_long_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5228 (count: 320731, min: 0, max: 246, avg: 0.02)
Time for BDD node cleanup:                             0.055s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.871s
  Time for transition matches:                        10.141s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.057s
Automaton transfers with branching:                0
Automaton transfer successors:                     10348065 (count: 10348065, min: 1, max: 1, avg: 1.00) [1 x 10348065]

CPA algorithm statistics
------------------------
Number of iterations:            6662949
Max size of waitlist:            56
Average size of waitlist:        36
Number of computed successors:   7364638
Max successors for one state:    2
Number of times merged:          528998
Number of times stopped:         675362
Number of times breaked:         10

Total time for CPA algorithm:       899.974s (Max:   879.104s)
  Time for choose from waitlist:      3.421s
  Time for precision adjustment:    382.139s
  Time for transfer relation:       421.329s
  Time for merge operator:           20.859s
  Time for stop operator:             9.345s
  Time for adding to reached set:    21.543s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 157 (count: 10, min: 1, max: 30, avg: 15.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.050s
  Counterexample analysis:                             2.783s (Max:     0.560s, Calls: 10)
    Refinement sat check:                              2.514s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.004s
  ARG update:                                          0.176s

Length of refined path (in blocks):                     157 (count: 10, min: 1, max: 30, avg: 15.70)
Number of affected states:                              147 (count: 10, min: 0, max: 29, avg: 14.70)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       147 (count: 10, min: 0, max: 29, avg: 14.70)
Length (states) of path with itp 'false':                 0 (count: 10, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             138 (count: 10, min: 0, max: 28, avg: 13.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 5206
Max. size of reached set after ref.:  27
Avg. size of reached set before ref.: 3007.30
Avg. size of reached set after ref.:  26.80

Total time for CEGAR algorithm:     903.421s
Time for refinements:                 3.447s
Average time for refinement:          0.344s
Max time for refinement:              0.649s

Shutdown was requested but CPAchecker is still running after 10s, forcing immediate termination now. (ForceTerminationOnShutdown.run, WARNING)

For your information: CPAchecker is currently hanging at
 org.sosy_lab.cpachecker.util.AbstractStates.extractStateByType(AbstractStates.java:90)
org.sosy_lab.cpachecker.util.AbstractStates.extractStateByType(AbstractStates.java:86)
org.sosy_lab.cpachecker.util.AbstractStates.extractLocation(AbstractStates.java:126)
org.sosy_lab.cpachecker.util.AbstractStates$$Lambda$103/324701295.apply(Unknown Source)
com.google.common.collect.Iterators$7.transform(Iterators.java:750)
com.google.common.collect.TransformedIterator.next(TransformedIterator.java:47)
com.google.common.collect.Iterators$6.computeNext(Iterators.java:616)
com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:145)
com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:140)
com.google.common.collect.Iterators$6.computeNext(Iterators.java:615)
com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:145)
com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:140)
com.google.common.collect.ImmutableCollection$Builder.addAll(ImmutableCollection.java:408)
com.google.common.collect.ImmutableList$Builder.addAll(ImmutableList.java:699)
com.google.common.collect.ImmutableList.copyOf(ImmutableList.java:256)
com.google.common.collect.ImmutableList.copyOf(ImmutableList.java:209)
com.google.common.collect.FluentIterable.toList(FluentIterable.java:614)
org.sosy_lab.cpachecker.util.coverage.CoverageReport.getFunctionEntriesFromReached(CoverageReport.java:239)
org.sosy_lab.cpachecker.util.coverage.CoverageReport.writeCoverageReport(CoverageReport.java:93)
org.sosy_lab.cpachecker.core.MainCPAStatistics.printStatistics(MainCPAStatistics.java:276)
org.sosy_lab.cpachecker.core.CPAcheckerResult.printStatistics(CPAcheckerResult.java:104)
org.sosy_lab.cpachecker.cmdline.CPAMain.printResultAndStatistics(CPAMain.java:578)
org.sosy_lab.cpachecker.cmdline.CPAMain.main(CPAMain.java:186) 
 (ForceTerminationOnShutdown.run, INFO)

