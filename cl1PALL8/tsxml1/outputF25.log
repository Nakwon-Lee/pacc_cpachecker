scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-staging-et131x-et131x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ukuk4cm3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6891: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6931: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8264: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8189-8190: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8226: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6891: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6931: Ignoring function call through function pointer *(ops->free_coherent): (*(ops->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitrev32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            205560 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            205385 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         175 (0%)
  Times precision was empty:       204686 (100%)
  Times precision was {false}:     95 (0%)
  Times result was cached:         617 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      162 (0%)
  Times result was 'false':        403 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         442118
  BDD entailment checks:           95982
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       626
Number of predicates discovered:          2
Number of abstraction locations:          17
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         874
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.40
Number of irrelevant predicates:          221 (25%)
Number of preds handled by boolean abs:   162 (19%)
  Total number of models for allsat:      111
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.69

Time for post operator:                241.575s
  Time for path formula creation:      234.817s
Time for strengthen operator:            8.866s
Time for prec operator:                 59.025s
  Time for abstraction:                 48.616s (Max:     4.696s, Count: 205560)
    Boolean abstraction:                34.524s
    Solving time:                       44.061s (Max:     4.513s)
    Model enumeration time:              0.925s
    Time for BDD construction:           0.014s (Max:     0.003s)
Time for merge operator:                11.501s
Time for coverage check:                 0.246s
  Time for BDD entailment checks:        0.205s
Total time for SMT solver (w/o itp):    44.986s

Number of path formula cache hits:   5983278 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   158.088s

Total number of created targets for pointer analysis: 2587683
   Number of created targets for uf: *unsigned_short_int is 46
   Number of created targets for uf: *(void)* is 441
   Number of created targets for uf: *(struct_tcb)* is 69
   Number of created targets for uf: *unsigned_char is 137
   Number of created targets for uf: *(struct_list_head)* is 81
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *unsigned_int is 12


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         276 (count: 302265, min: 0, max: 50, avg: 0.00)
Time for BDD node cleanup:                             0.045s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 57.940s
  Time for transition matches:                         7.412s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                      9207709 (count: 9207709, min: 1, max: 1, avg: 1.00) [1 x 9207709]

CPA algorithm statistics
------------------------
Number of iterations:            6129276
Max size of waitlist:            18809
Average size of waitlist:        10687
Number of computed successors:   6422892
Max successors for one state:    2
Number of times merged:          173068
Number of times stopped:         269036
Number of times breaked:         14

Total time for CPA algorithm:       887.449s (Max:   781.896s)
  Time for choose from waitlist:      2.726s
  Time for precision adjustment:    119.298s
  Time for transfer relation:       689.812s
  Time for merge operator:           15.374s
  Time for stop operator:            14.640s
  Time for adding to reached set:    23.943s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                  66 (count: 14, min: 1, max: 9, avg: 4.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.521s
  Counterexample analysis:                             1.701s (Max:     0.200s, Calls: 14)
    Refinement sat check:                              1.570s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.007s
  ARG update:                                          2.742s

Length of refined path (in blocks):                      66 (count: 14, min: 1, max: 9, avg: 4.71)
Number of affected states:                               52 (count: 14, min: 0, max: 8, avg: 3.71)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        52 (count: 14, min: 0, max: 8, avg: 3.71)
Length (states) of path with itp 'false':                 0 (count: 14, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              39 (count: 14, min: 0, max: 7, avg: 2.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 228726
Max. size of reached set after ref.:  27
Avg. size of reached set before ref.: 52795.50
Avg. size of reached set after ref.:  26.86

Total time for CEGAR algorithm:     892.650s
Time for refinements:                 5.200s
Average time for refinement:          0.371s
Max time for refinement:              1.171s

Code Coverage
-----------------------------
  Function coverage:      0.469
  Visited lines:          2324
  Total lines:            4013
  Line coverage:          0.579
  Visited conditions:     368
  Total conditions:       920
  Condition coverage:     0.400

CPAchecker general statistics
-----------------------------
Number of program locations:     5322
Number of CFA edges:             6259
Number of relevant variables:    693
Number of functions:             160
Number of loops:                 38
Size of reached set:             5414692
  Size of final wait list        18808

Time for analysis setup:          7.557s
  Time for loading CPAs:          1.191s
  Time for loading parser:        0.779s
  Time for CFA construction:      5.448s
    Time for parsing file(s):     1.301s
    Time for AST to CFA:          2.103s
    Time for CFA sanity check:    0.418s
    Time for post-processing:     1.378s
      Time for var class.:        0.737s
Time for Analysis:              892.650s
CPU time for analysis:          892.610s
Total time for CPAchecker:      900.212s
Total CPU time for CPAchecker:  900.150s
Time for statistics:            177.511s

Time for Garbage Collector:     332.953s (in 332 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5412MB (  5161 MiB) max;   2129MB (  2031 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   2867MB (  2734 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8200MB (  7820 MiB) max;   8143MB (  7765 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
