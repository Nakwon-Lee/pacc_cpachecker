scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-staging-et131x-et131x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y8g2z3ig/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6891: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6931: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8264: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8189-8190: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8226: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6891: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6931: Ignoring function call through function pointer *(ops->free_coherent): (*(ops->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_le to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitrev32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            204306 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            204232 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         74 (0%)
  Times precision was empty:       204000 (100%)
  Times precision was {false}:     35 (0%)
  Times result was cached:         244 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27 (0%)
  Times result was 'false':        156 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         406472
  BDD entailment checks:           92716
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       626
Number of predicates discovered:          2
Number of abstraction locations:          12
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         306
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.94
Number of irrelevant predicates:          88 (29%)
Number of preds handled by boolean abs:   27 (9%)
  Total number of models for allsat:      21
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.78

Time for post operator:                252.033s
  Time for path formula creation:      224.858s
Time for strengthen operator:           10.291s
Time for prec operator:                 44.289s
  Time for abstraction:                 14.590s (Max:     4.360s, Count: 204306)
    Boolean abstraction:                 8.304s
    Solving time:                       11.774s (Max:     4.158s)
    Model enumeration time:              0.251s
    Time for BDD construction:           0.009s (Max:     0.008s)
Time for merge operator:                10.390s
Time for coverage check:                 0.110s
  Time for BDD entailment checks:        0.072s
Total time for SMT solver (w/o itp):    12.025s

Number of path formula cache hits:   6676034 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   134.884s

Total number of created targets for pointer analysis: 2171864
   Number of created targets for uf: *unsigned_short_int is 70657
   Number of created targets for uf: *(void)* is 81
   Number of created targets for uf: *(struct_tcb)* is 14
   Number of created targets for uf: *unsigned_char is 7
   Number of created targets for uf: *(struct_list_head)* is 17
   Number of created targets for uf: *unsigned_long_long_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          51 (count: 297123, min: 0, max: 8, avg: 0.00)
Time for BDD node cleanup:                             0.048s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 54.321s
  Time for transition matches:                         8.232s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      9103981 (count: 9103981, min: 1, max: 1, avg: 1.00) [1 x 9103981]

CPA algorithm statistics
------------------------
Number of iterations:            6026580
Max size of waitlist:            30313
Average size of waitlist:        13992
Number of computed successors:   6306740
Max successors for one state:    2
Number of times merged:          156878
Number of times stopped:         249591
Number of times breaked:         11

Total time for CPA algorithm:       890.765s (Max:   865.020s)
  Time for choose from waitlist:      2.225s
  Time for precision adjustment:    160.081s
  Time for transfer relation:       638.179s
  Time for merge operator:           13.634s
  Time for stop operator:            10.299s
  Time for adding to reached set:    20.499s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  45 (count: 11, min: 1, max: 7, avg: 4.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.922s
  Counterexample analysis:                             1.622s (Max:     0.229s, Calls: 11)
    Refinement sat check:                              1.449s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.003s
  ARG update:                                          0.262s

Length of refined path (in blocks):                      45 (count: 11, min: 1, max: 7, avg: 4.09)
Number of affected states:                               34 (count: 11, min: 0, max: 6, avg: 3.09)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        34 (count: 11, min: 0, max: 6, avg: 3.09)
Length (states) of path with itp 'false':                 0 (count: 11, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              24 (count: 11, min: 0, max: 5, avg: 2.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 13685
Max. size of reached set after ref.:  27
Avg. size of reached set before ref.: 4567.91
Avg. size of reached set after ref.:  26.82

Total time for CEGAR algorithm:     892.902s
Time for refinements:                 2.136s
Average time for refinement:          0.194s
Max time for refinement:              0.269s

Code Coverage
-----------------------------
  Function coverage:      0.475
  Visited lines:          2228
  Total lines:            4013
  Line coverage:          0.555
  Visited conditions:     320
  Total conditions:       920
  Condition coverage:     0.348

CPAchecker general statistics
-----------------------------
Number of program locations:     5322
Number of CFA edges:             6259
Number of relevant variables:    693
Number of functions:             160
Number of loops:                 38
Size of reached set:             6007041
  Size of final wait list        30099

Time for analysis setup:          7.317s
  Time for loading CPAs:          1.104s
  Time for loading parser:        0.825s
  Time for CFA construction:      5.267s
    Time for parsing file(s):     1.317s
    Time for AST to CFA:          1.982s
    Time for CFA sanity check:    0.370s
    Time for post-processing:     1.352s
      Time for var class.:        0.681s
Time for Analysis:              892.902s
CPU time for analysis:          892.860s
Total time for CPAchecker:      900.224s
Total CPU time for CPAchecker:  900.170s
Time for statistics:            251.572s

Time for Garbage Collector:     455.378s (in 270 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5414MB (  5163 MiB) max;   2435MB (  2322 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3223MB (  3074 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8265MB (  7882 MiB) max;   8155MB (  7777 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
