scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-net-atl1c-atl1c.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1b0z3mrj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5285: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5287: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5289: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5283: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13618: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5768: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5808: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5641: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5566-5567: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5674: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5603: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5674: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5603: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5566-5567: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, (struct page *)(1152897315351035904ULL + (tmp___2 >> 12)), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msi_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2277 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2253 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (1%)
  Times precision was empty:       398 (17%)
  Times precision was {false}:     85 (4%)
  Times result was cached:         1512 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      282 (12%)
  Times result was 'false':        74 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         11481
  BDD entailment checks:           1181
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       325
Number of predicates discovered:          2
Number of abstraction locations:          22
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1879
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.12
Number of irrelevant predicates:          218 (12%)
Number of preds handled by boolean abs:   282 (15%)
  Total number of models for allsat:      269
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.95

Time for post operator:                  6.583s
  Time for path formula creation:        6.368s
Time for strengthen operator:            0.320s
Time for prec operator:                  3.931s
  Time for abstraction:                  3.665s (Max:     0.100s, Count: 2277)
    Boolean abstraction:                 1.207s
    Solving time:                        1.558s (Max:     0.074s)
    Model enumeration time:              0.081s
    Time for BDD construction:           0.039s (Max:     0.019s)
Time for merge operator:                 0.587s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     1.639s

Number of path formula cache hits:   61139 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.431s

Total number of created targets for pointer analysis: 175
   Number of created targets for uf: *unsigned_short_int is 5
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         534 (count: 3705, min: 0, max: 76, avg: 0.14)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.455s
Automaton transfers with branching:                0
Automaton transfer successors:                       103043 (count: 103043, min: 1, max: 1, avg: 1.00) [1 x 103043]

CPA algorithm statistics
------------------------
Number of iterations:            68282
Max size of waitlist:            133
Average size of waitlist:        39
Number of computed successors:   74809
Max successors for one state:    2
Number of times merged:          5150
Number of times stopped:         6252
Number of times breaked:         12

Total time for CPA algorithm:        21.546s (Max:     9.233s)
  Time for choose from waitlist:      0.151s
  Time for precision adjustment:      5.045s
  Time for transfer relation:        13.710s
  Time for merge operator:            0.904s
  Time for stop operator:             0.311s
  Time for adding to reached set:     0.379s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                 130 (count: 12, min: 2, max: 18, avg: 10.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.633s
  Counterexample analysis:                             0.308s (Max:     0.053s, Calls: 12)
    Refinement sat check:                              0.234s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.029s
  ARG update:                                          0.220s

Length of refined path (in blocks):                     130 (count: 12, min: 2, max: 18, avg: 10.83)
Number of affected states:                              118 (count: 12, min: 1, max: 17, avg: 9.83)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       118 (count: 12, min: 1, max: 17, avg: 9.83)
Length (states) of path with itp 'false':                 0 (count: 12, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             106 (count: 12, min: 0, max: 16, avg: 8.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 5595
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 3038.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      22.366s
Time for refinements:                 0.820s
Average time for refinement:          0.068s
Max time for refinement:              0.147s

Code Coverage
-----------------------------
  Function coverage:      0.428
  Visited lines:          2904
  Total lines:            5285
  Line coverage:          0.549
  Visited conditions:     558
  Total conditions:       1118
  Condition coverage:     0.499

CPAchecker general statistics
-----------------------------
Number of program locations:     7497
Number of CFA edges:             8615
Number of relevant variables:    1372
Number of functions:             229
Number of loops:                 49
Size of reached set:             32058
  Number of reached locations:   2155 (29%)
    Avg states per location:     14
    Max states per location:     1538 (at node N193)
  Number of reached functions:   98 (43%)
  Number of partitions:          32058
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        109

Time for analysis setup:          7.896s
  Time for loading CPAs:          1.195s
  Time for loading parser:        0.710s
  Time for CFA construction:      5.839s
    Time for parsing file(s):     1.267s
    Time for AST to CFA:          2.157s
    Time for CFA sanity check:    0.576s
    Time for post-processing:     1.629s
      Time for var class.:        0.834s
Time for Analysis:               22.366s
CPU time for analysis:           22.360s
Total time for CPAchecker:       30.268s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.670s

Time for Garbage Collector:       1.054s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                103MB (    98 MiB) max;     57MB (    54 MiB) avg;    109MB (   104 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8131MB (  7754 MiB) max;   8117MB (  7741 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
